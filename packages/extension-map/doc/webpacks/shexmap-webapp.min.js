(()=>{var t={2752:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JisonLexer=void 0;var n=function(){function e(e){void 0===e&&(e={}),this.yy=e,this.EOF=1,this.options={},this.yyleng=0,this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0}}return e.prototype.parseError=function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},e.prototype.setInput=function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},e.prototype.input=function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},e.prototype.unput=function(e){var t=e.length,n=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var s=this.yylloc.range,i={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-t};return this.yylloc=i,this.options.ranges&&(this.yylloc.range=[s[0],s[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},e.prototype.more=function(){return this._more=!0,this},e.prototype.reject=function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},e.prototype.less=function(e){this.unput(this.match.slice(e))},e.prototype.pastInput=function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},e.prototype.upcomingInput=function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},e.prototype.showPosition=function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},e.prototype.test_match=function(e,t){var n,r,s;if(this.options.backtrack_lexer&&(s={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.yylloc.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(s.yylloc.range=this.yylloc.range.slice(0))),(r=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],n=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var i in s)this[i]=s[i];return!1}return!1},e.prototype.next=function(){if(this.done)return this.EOF;this._input||(this.done=!0);var e,t,n,r=null;this._more||(this.yytext="",this.match="");for(var s=this._currentRules(),i=0;i<s.length;i++)if((t=this._input.match(this.rules[s[i]]))&&(!r||t[0].length>r[0].length)){if(r=t,n=i,this.options.backtrack_lexer){if(!1!==(e=this.test_match(t,s[i])))return e;if(this._backtrack){r=null;continue}return!1}if(!this.options.flex)break}return r?!1!==(e=this.test_match(r,s[n]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},e.prototype.lex=function(){var e=this.next();return e||this.lex()},e.prototype.begin=function(e){this.conditionStack.push(e)},e.prototype.popState=function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},e.prototype._currentRules=function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},e.prototype.topState=function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},e.prototype.pushState=function(e){this.begin(e)},e.prototype.stateStackSize=function(){return this.conditionStack.length},e}();t.JisonLexer=n},9041:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.o=t.JisonParser=void 0;var n=function(){function e(e,t){void 0===e&&(e={}),this.yy=e,this.lexer=t}return e.prototype.trace=function(e){},e.prototype.parseError=function(e,t){if(!t.recoverable){var n=new Error(e);throw n.hash=t,n}this.trace(e)},e.prototype.parse=function(e,t){void 0===t&&(t="function"==typeof this.yy&&"function"==typeof this.yy.constructor?new this.yy(this,this.lexer):Object.create(this.yy));var n=this,r=[0],s=[null],i=[],a=this.table,o="",u=0,c=0,l=0,p=2,h=i.slice.call(arguments,1),f=Object.create(this.lexer),d={yy:t};f.setInput(e,d.yy),d.yy.lexer=f,d.yy.parser=this,void 0===f.yylloc&&(f.yylloc={});var m=f.yylloc;i.push(m);var g=f.options&&f.options.ranges;"function"==typeof d.yy.parseError&&(this.parseError=d.yy.parseError);for(var y,x,_,b,E,v,S,A,w,T,O=function(){var e;return"number"!=typeof(e=f.lex()||1)&&(e=n.symbols_[e]||e),e},k={};;){if(_=r[r.length-1],this.defaultActions[_]?b=this.defaultActions[_]:(null==y&&(y=O()),b=a[_]&&a[_][y]),void 0===b||!b.length||!b[0]){var N=null,I="";if(l)1!==x&&(N=L(_));else{for(var F in N=L(_),w=[],a[_])v=Number(F),this.terminals_[v]&&v>p&&w.push("'"+this.terminals_[v]+"'");I=f.showPosition?"Parse error on line "+(u+1)+":\n"+f.showPosition()+"\nExpecting "+w.join(", ")+", got '"+(this.terminals_[y]||y)+"'":"Parse error on line "+(u+1)+": Unexpected "+(1==y?"end of input":"'"+(this.terminals_[y]||y)+"'"),this.parseError(I,{text:f.match,token:this.terminals_[y]||y,line:f.yylineno,loc:f.yylloc,expected:w,recoverable:null!==N})}if(3==l){if(1===y||1===x)throw new Error(I||"Parsing halted while starting to recover from another error.");c=f.yyleng,o=f.yytext,u=f.yylineno,m=f.yylloc,y=O()}if(null===N)throw new Error(I||"Parsing halted. No suitable error recovery rule available.");T=N||0,r.length=r.length-2*T,s.length=s.length-T,i.length=i.length-T,x=y==p?null:y,y=p,_=r[r.length-1],b=a[_]&&a[_][p],l=3}if(b[0]instanceof Array&&b.length>1)throw new Error("Parse Error: multiple actions possible at state: "+_+", token: "+y);switch(b[0]){case 1:r.push(y),s.push(f.yytext),i.push(f.yylloc),r.push(b[1]),y=null,x?(y=x,x=null):(c=f.yyleng,o=f.yytext,u=f.yylineno,m=f.yylloc,l>0&&l--);break;case 2:if(S=this.productions_[b[1]][1],k.$=s[s.length-S],k._$={first_line:i[i.length-(S||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(S||1)].first_column,last_column:i[i.length-1].last_column},g&&(k._$.range=[i[i.length-(S||1)].range[0],i[i.length-1].range[1]]),void 0!==(E=this.performAction.apply(k,[o,c,u,d.yy,b[1],s,i].concat(h))))return E;S&&(r=r.slice(0,-1*S*2),s=s.slice(0,-1*S),i=i.slice(0,-1*S)),r.push(this.productions_[b[1]][0]),s.push(k.$),i.push(k._$),A=a[r[r.length-2]][r[r.length-1]],r.push(A);break;case 3:return!0}}return!0;function L(e){for(var t=r.length-1,n=0;;){if(p.toString()in a[e])return n;if(0===e||t<2)return null;e=r[t-=2],++n}}},e}();t.JisonParser=n,t.o=function(e,t,n){var r=e.length;for(n=n||{};r--;n[e[r]]=t);return n}},5281:e=>{"use strict";function t(e,t,n){if(0===e.length)return;if(1===e.length)return e[0];const r={type:t};return r[n]=e,r}e.exports={DcTap:class{dontResolveIris=!1;prefixes={};shapes=[];curShape=null;conjuncts=null;headers=["shapeID","shapeLabel","propertyID","propertyLabel","mandatory","repeatable","valueNodeType","valueDataType","valueConstraint","valueConstraintType","valueShape","note"];constructor(e={}){Object.assign(this,e)}parseRows(e,t){return e.forEach((e=>{e[0].toLowerCase()===this.headers[0].toLowerCase()&&e[1].toLowerCase()===this.headers[1].toLowerCase()&&e[2].toLowerCase()===this.headers[2].toLowerCase()||"prefix"===e[0].toLowerCase()&&"namespace"===e[1].toLowerCase()||1===e.length||(2===e.length?this.prefixes[e[0]]=e[1]:this.parseRow(e,t))})),this}parseRow(e,t){if(Array.isArray(e)&&(e=this.headers.reduce(((t,n,r)=>(t[n]=e[r],t)),{})),e.valueNodeType=e.valueNodeType.toLowerCase(),e.valueConstraintType=e.valueConstraintType.toLowerCase(),e.shapeID)this.curShape={type:"Shape",shapeID:this.parseIri(e.shapeID,t),tripleConstraints:[]},this.shapes.push(this.curShape);else if(!this.curShape)throw new Error(`no current shape into which to add ${JSON.stringify(e)}`);return this.curShape.tripleConstraints.push(this.toTripleConstraint(e,t)),this}toTripleConstraint(e,t){return Object.assign({propertyID:this.parseIri(e.propertyID,t)},e.mandatory?{mandatory:!0}:{},e.repeatable?{repeatable:!0}:{},this.parseValueConstraint(e,t),e.valueShape?{valueShape:this.parseIri(e.valueShape,t)}:{})}parseValueConstraint(e,t){switch(e.valueConstraintType){case"iristem":case"literalstem":case"picklist":case"languagetag":return{values:e.valueConstraint.split(/\s+/).map((n=>this.coerseValue(n,e,t,e.valueConstraintType.endsWith("stem"))))};case"pattern":return{pattern:e.valueConstraint};case"":return e.valueDataType?{datatype:this.parseIri(e.valueDataType,t)}:{};default:throw Error(`Unknown valueConstraintType ${e.valueConstraintType} in ${JSON.stringify(e,null,2)}?`)}}coerseValue(e,t,n,r=!1){if("languagetag"===t.valueConstraintType)return{type:"Language",languageTag:e};switch(t.valueNodeType){case"literal":return r?{type:"LiteralStem",stem:e}:{value:e};case"iri":return r?{type:"IriStem",stem:this.parseIri(e,n)}:this.parseIri(e,n);case"":return{value:e};default:throw Error(`Unknown valueNodeType ${t.valueNodeType} in ${JSON.stringify(t,null,2)}?`)}}parseIri(e,t){if(this.dontResolveIris)return e;if("<"===e[0]){if(">"!==e[e.length-1])throw new Error(`Malformed URL: ${e}`);return new URL(e.substr(1,e.length-2),t).href}{const t=e.indexOf(":");if(-1===t)throw new Error(`Expected ':' in IRI ${e}`);const n=e.substr(0,t);if(!(n in this.prefixes))throw new Error(`Prefix ${n} not found in known prefixes: ${Object.keys(this.prefixes).join(" ,")}`);const r=e.substr(t+1);return this.prefixes[n]+r}}toJson(){return this.shapes}toShEx(){return{type:"Schema",shapes:this.shapes.map((e=>({type:"ShapeDecl",id:e.shapeID,shapeExpr:{type:"Shape",expression:t(e.tripleConstraints.map((e=>Object.assign({type:"TripleConstraint",predicate:e.propertyID},e.mandatory?{min:1}:{},e.repeatable?{max:-1}:{},function(e){const n=[];e.values&&n.push({type:"NodeConstraint",values:e.values});e.pattern&&n.push({type:"NodeConstraint",pattern:e.pattern});e.datatype&&n.push({type:"NodeConstraint",datatype:e.datatype});e.valueShape&&n.push(e.valueShape);const r=t(n,"ShapeAnd","shapeExprs");return r?{valueExpr:r}:{}}(e)))),"EachOf","expressions")}})))}}}}},2515:e=>{var t={create:function(){let e={},t={},n={},r={};return{add:function(s,i){if(s in n&&-1!==n[s].indexOf(i))return;let a=s in r?c(s):e[s]=c(s),o=c(i);function u(e,t,n,r){e[r]=e[r].filter((t=>-1===e[n].indexOf(t))).concat(-1===e[n].indexOf(n)?[n]:[],e[n]),e[n].forEach((e=>t[e]=t[e].filter((e=>e!==r&&-1===t[r].indexOf(e))).concat(-1===t[r].indexOf(r)?[r]:[],t[r])))}function c(e){return e in r||(t[e]=[],n[e]=[],r[e]={}),r[e]}a[i]=o,delete e[i],u(n,t,i,s),u(t,n,s,i)},roots:e,parents:t,children:n}},depthFirst:function e(t,n,r){return Object.keys(t).reduce(((s,i)=>s.concat(e(t[i],n,i),r?n(i,r):[])),[])}};e.exports=t},9431:(e,t,n)=>{"use strict";var r=n(7633),s=n(8812);function i(e,t){return function(){throw new Error("Function yaml."+e+" is removed in js-yaml 4. Use yaml."+t+" instead, which is now safe by default.")}}e.exports.Type=n(8954),e.exports.Schema=n(5771),e.exports.FAILSAFE_SCHEMA=n(6126),e.exports.JSON_SCHEMA=n(7505),e.exports.CORE_SCHEMA=n(2230),e.exports.DEFAULT_SCHEMA=n(215),e.exports.load=r.load,e.exports.loadAll=r.loadAll,e.exports.dump=s.dump,e.exports.YAMLException=n(8689),e.exports.types={binary:n(9054),float:n(9685),map:n(1021),null:n(4716),pairs:n(7268),set:n(9784),timestamp:n(8436),bool:n(8568),int:n(391),merge:n(3021),omap:n(7668),seq:n(8394),str:n(1002)},e.exports.safeLoad=i("safeLoad","load"),e.exports.safeLoadAll=i("safeLoadAll","loadAll"),e.exports.safeDump=i("safeDump","dump")},1052:e=>{"use strict";function t(e){return null==e}e.exports.isNothing=t,e.exports.isObject=function(e){return"object"==typeof e&&null!==e},e.exports.toArray=function(e){return Array.isArray(e)?e:t(e)?[]:[e]},e.exports.repeat=function(e,t){var n,r="";for(n=0;n<t;n+=1)r+=e;return r},e.exports.isNegativeZero=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},e.exports.extend=function(e,t){var n,r,s,i;if(t)for(n=0,r=(i=Object.keys(t)).length;n<r;n+=1)e[s=i[n]]=t[s];return e}},8812:(e,t,n)=>{"use strict";var r=n(1052),s=n(8689),i=n(215),a=Object.prototype.toString,o=Object.prototype.hasOwnProperty,u=65279,c=9,l=10,p=13,h=32,f=33,d=34,m=35,g=37,y=38,x=39,_=42,b=44,E=45,v=58,S=61,A=62,w=63,T=64,O=91,k=93,N=96,I=123,F=124,L=125,C={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},j=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],$=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function R(e){var t,n,i;if(t=e.toString(16).toUpperCase(),e<=255)n="x",i=2;else if(e<=65535)n="u",i=4;else{if(!(e<=4294967295))throw new s("code point within a string may not be greater than 0xFFFFFFFF");n="U",i=8}return"\\"+n+r.repeat("0",i-t.length)+t}var D=1,M=2;function P(e){this.schema=e.schema||i,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=r.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var n,r,s,i,a,u,c;if(null===t)return{};for(n={},s=0,i=(r=Object.keys(t)).length;s<i;s+=1)a=r[s],u=String(t[a]),"!!"===a.slice(0,2)&&(a="tag:yaml.org,2002:"+a.slice(2)),(c=e.compiledTypeMap.fallback[a])&&o.call(c.styleAliases,u)&&(u=c.styleAliases[u]),n[a]=u;return n}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.quotingType='"'===e.quotingType?M:D,this.forceQuotes=e.forceQuotes||!1,this.replacer="function"==typeof e.replacer?e.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function Q(e,t){for(var n,s=r.repeat(" ",t),i=0,a=-1,o="",u=e.length;i<u;)-1===(a=e.indexOf("\n",i))?(n=e.slice(i),i=u):(n=e.slice(i,a+1),i=a+1),n.length&&"\n"!==n&&(o+=s),o+=n;return o}function G(e,t){return"\n"+r.repeat(" ",e.indent*t)}function B(e){return e===h||e===c}function J(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&e!==u||65536<=e&&e<=1114111}function U(e){return J(e)&&e!==u&&e!==p&&e!==l}function V(e,t,n){var r=U(e),s=r&&!B(e);return(n?r:r&&e!==b&&e!==O&&e!==k&&e!==I&&e!==L)&&e!==m&&!(t===v&&!s)||U(t)&&!B(t)&&e===m||t===v&&s}function z(e,t){var n,r=e.charCodeAt(t);return r>=55296&&r<=56319&&t+1<e.length&&(n=e.charCodeAt(t+1))>=56320&&n<=57343?1024*(r-55296)+n-56320+65536:r}function q(e){return/^\n* /.test(e)}var Z=1,K=2,X=3,W=4,H=5;function Y(e,t,n,r,s,i,a,o){var c,p,h=0,C=null,j=!1,$=!1,R=-1!==r,D=-1,P=J(p=z(e,0))&&p!==u&&!B(p)&&p!==E&&p!==w&&p!==v&&p!==b&&p!==O&&p!==k&&p!==I&&p!==L&&p!==m&&p!==y&&p!==_&&p!==f&&p!==F&&p!==S&&p!==A&&p!==x&&p!==d&&p!==g&&p!==T&&p!==N&&function(e){return!B(e)&&e!==v}(z(e,e.length-1));if(t||a)for(c=0;c<e.length;h>=65536?c+=2:c++){if(!J(h=z(e,c)))return H;P=P&&V(h,C,o),C=h}else{for(c=0;c<e.length;h>=65536?c+=2:c++){if((h=z(e,c))===l)j=!0,R&&($=$||c-D-1>r&&" "!==e[D+1],D=c);else if(!J(h))return H;P=P&&V(h,C,o),C=h}$=$||R&&c-D-1>r&&" "!==e[D+1]}return j||$?n>9&&q(e)?H:a?i===M?H:K:$?W:X:!P||a||s(e)?i===M?H:K:Z}function ee(e,t,n,r,i){e.dump=function(){if(0===t.length)return e.quotingType===M?'""':"''";if(!e.noCompatMode&&(-1!==j.indexOf(t)||$.test(t)))return e.quotingType===M?'"'+t+'"':"'"+t+"'";var a=e.indent*Math.max(1,n),o=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-a),u=r||e.flowLevel>-1&&n>=e.flowLevel;switch(Y(t,u,e.indent,o,(function(t){return function(e,t){var n,r;for(n=0,r=e.implicitTypes.length;n<r;n+=1)if(e.implicitTypes[n].resolve(t))return!0;return!1}(e,t)}),e.quotingType,e.forceQuotes&&!r,i)){case Z:return t;case K:return"'"+t.replace(/'/g,"''")+"'";case X:return"|"+te(t,e.indent)+ne(Q(t,a));case W:return">"+te(t,e.indent)+ne(Q(function(e,t){var n,r,s=/(\n+)([^\n]*)/g,i=(o=e.indexOf("\n"),o=-1!==o?o:e.length,s.lastIndex=o,re(e.slice(0,o),t)),a="\n"===e[0]||" "===e[0];var o;for(;r=s.exec(e);){var u=r[1],c=r[2];n=" "===c[0],i+=u+(a||n||""===c?"":"\n")+re(c,t),a=n}return i}(t,o),a));case H:return'"'+function(e){for(var t,n="",r=0,s=0;s<e.length;r>=65536?s+=2:s++)r=z(e,s),!(t=C[r])&&J(r)?(n+=e[s],r>=65536&&(n+=e[s+1])):n+=t||R(r);return n}(t)+'"';default:throw new s("impossible error: invalid scalar style")}}()}function te(e,t){var n=q(e)?String(t):"",r="\n"===e[e.length-1];return n+(r&&("\n"===e[e.length-2]||"\n"===e)?"+":r?"":"-")+"\n"}function ne(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function re(e,t){if(""===e||" "===e[0])return e;for(var n,r,s=/ [^ ]/g,i=0,a=0,o=0,u="";n=s.exec(e);)(o=n.index)-i>t&&(r=a>i?a:o,u+="\n"+e.slice(i,r),i=r+1),a=o;return u+="\n",e.length-i>t&&a>i?u+=e.slice(i,a)+"\n"+e.slice(a+1):u+=e.slice(i),u.slice(1)}function se(e,t,n,r){var s,i,a,o="",u=e.tag;for(s=0,i=n.length;s<i;s+=1)a=n[s],e.replacer&&(a=e.replacer.call(n,String(s),a)),(ae(e,t+1,a,!0,!0,!1,!0)||void 0===a&&ae(e,t+1,null,!0,!0,!1,!0))&&(r&&""===o||(o+=G(e,t)),e.dump&&l===e.dump.charCodeAt(0)?o+="-":o+="- ",o+=e.dump);e.tag=u,e.dump=o||"[]"}function ie(e,t,n){var r,i,u,c,l,p;for(u=0,c=(i=n?e.explicitTypes:e.implicitTypes).length;u<c;u+=1)if(((l=i[u]).instanceOf||l.predicate)&&(!l.instanceOf||"object"==typeof t&&t instanceof l.instanceOf)&&(!l.predicate||l.predicate(t))){if(n?l.multi&&l.representName?e.tag=l.representName(t):e.tag=l.tag:e.tag="?",l.represent){if(p=e.styleMap[l.tag]||l.defaultStyle,"[object Function]"===a.call(l.represent))r=l.represent(t,p);else{if(!o.call(l.represent,p))throw new s("!<"+l.tag+'> tag resolver accepts not "'+p+'" style');r=l.represent[p](t,p)}e.dump=r}return!0}return!1}function ae(e,t,n,r,i,o,u){e.tag=null,e.dump=n,ie(e,n,!1)||ie(e,n,!0);var c,p=a.call(e.dump),h=r;r&&(r=e.flowLevel<0||e.flowLevel>t);var f,d,m="[object Object]"===p||"[object Array]"===p;if(m&&(d=-1!==(f=e.duplicates.indexOf(n))),(null!==e.tag&&"?"!==e.tag||d||2!==e.indent&&t>0)&&(i=!1),d&&e.usedDuplicates[f])e.dump="*ref_"+f;else{if(m&&d&&!e.usedDuplicates[f]&&(e.usedDuplicates[f]=!0),"[object Object]"===p)r&&0!==Object.keys(e.dump).length?(!function(e,t,n,r){var i,a,o,u,c,p,h="",f=e.tag,d=Object.keys(n);if(!0===e.sortKeys)d.sort();else if("function"==typeof e.sortKeys)d.sort(e.sortKeys);else if(e.sortKeys)throw new s("sortKeys must be a boolean or a function");for(i=0,a=d.length;i<a;i+=1)p="",r&&""===h||(p+=G(e,t)),u=n[o=d[i]],e.replacer&&(u=e.replacer.call(n,o,u)),ae(e,t+1,o,!0,!0,!0)&&((c=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&l===e.dump.charCodeAt(0)?p+="?":p+="? "),p+=e.dump,c&&(p+=G(e,t)),ae(e,t+1,u,!0,c)&&(e.dump&&l===e.dump.charCodeAt(0)?p+=":":p+=": ",h+=p+=e.dump));e.tag=f,e.dump=h||"{}"}(e,t,e.dump,i),d&&(e.dump="&ref_"+f+e.dump)):(!function(e,t,n){var r,s,i,a,o,u="",c=e.tag,l=Object.keys(n);for(r=0,s=l.length;r<s;r+=1)o="",""!==u&&(o+=", "),e.condenseFlow&&(o+='"'),a=n[i=l[r]],e.replacer&&(a=e.replacer.call(n,i,a)),ae(e,t,i,!1,!1)&&(e.dump.length>1024&&(o+="? "),o+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),ae(e,t,a,!1,!1)&&(u+=o+=e.dump));e.tag=c,e.dump="{"+u+"}"}(e,t,e.dump),d&&(e.dump="&ref_"+f+" "+e.dump));else if("[object Array]"===p)r&&0!==e.dump.length?(e.noArrayIndent&&!u&&t>0?se(e,t-1,e.dump,i):se(e,t,e.dump,i),d&&(e.dump="&ref_"+f+e.dump)):(!function(e,t,n){var r,s,i,a="",o=e.tag;for(r=0,s=n.length;r<s;r+=1)i=n[r],e.replacer&&(i=e.replacer.call(n,String(r),i)),(ae(e,t,i,!1,!1)||void 0===i&&ae(e,t,null,!1,!1))&&(""!==a&&(a+=","+(e.condenseFlow?"":" ")),a+=e.dump);e.tag=o,e.dump="["+a+"]"}(e,t,e.dump),d&&(e.dump="&ref_"+f+" "+e.dump));else{if("[object String]"!==p){if("[object Undefined]"===p)return!1;if(e.skipInvalid)return!1;throw new s("unacceptable kind of an object to dump "+p)}"?"!==e.tag&&ee(e,e.dump,t,o,h)}null!==e.tag&&"?"!==e.tag&&(c=encodeURI("!"===e.tag[0]?e.tag.slice(1):e.tag).replace(/!/g,"%21"),c="!"===e.tag[0]?"!"+c:"tag:yaml.org,2002:"===c.slice(0,18)?"!!"+c.slice(18):"!<"+c+">",e.dump=c+" "+e.dump)}return!0}function oe(e,t){var n,r,s=[],i=[];for(ue(e,s,i),n=0,r=i.length;n<r;n+=1)t.duplicates.push(s[i[n]]);t.usedDuplicates=new Array(r)}function ue(e,t,n){var r,s,i;if(null!==e&&"object"==typeof e)if(-1!==(s=t.indexOf(e)))-1===n.indexOf(s)&&n.push(s);else if(t.push(e),Array.isArray(e))for(s=0,i=e.length;s<i;s+=1)ue(e[s],t,n);else for(s=0,i=(r=Object.keys(e)).length;s<i;s+=1)ue(e[r[s]],t,n)}e.exports.dump=function(e,t){var n=new P(t=t||{});n.noRefs||oe(e,n);var r=e;return n.replacer&&(r=n.replacer.call({"":r},"",r)),ae(n,0,r,!0,!0)?n.dump+"\n":""}},8689:e=>{"use strict";function t(e,t){var n="",r=e.reason||"(unknown reason)";return e.mark?(e.mark.name&&(n+='in "'+e.mark.name+'" '),n+="("+(e.mark.line+1)+":"+(e.mark.column+1)+")",!t&&e.mark.snippet&&(n+="\n\n"+e.mark.snippet),r+" "+n):r}function n(e,n){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=n,this.message=t(this,!1),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}n.prototype=Object.create(Error.prototype),n.prototype.constructor=n,n.prototype.toString=function(e){return this.name+": "+t(this,e)},e.exports=n},7633:(e,t,n)=>{"use strict";var r=n(1052),s=n(8689),i=n(901),a=n(215),o=Object.prototype.hasOwnProperty,u=1,c=2,l=3,p=4,h=1,f=2,d=3,m=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,g=/[\x85\u2028\u2029]/,y=/[,\[\]\{\}]/,x=/^(?:!|!!|![a-z\-]+!)$/i,_=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function b(e){return Object.prototype.toString.call(e)}function E(e){return 10===e||13===e}function v(e){return 9===e||32===e}function S(e){return 9===e||32===e||10===e||13===e}function A(e){return 44===e||91===e||93===e||123===e||125===e}function w(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function T(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function O(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var k=new Array(256),N=new Array(256),I=0;I<256;I++)k[I]=T(I)?1:0,N[I]=T(I);function F(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||a,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function L(e,t){var n={name:e.filename,buffer:e.input.slice(0,-1),position:e.position,line:e.line,column:e.position-e.lineStart};return n.snippet=i(n),new s(t,n)}function C(e,t){throw L(e,t)}function j(e,t){e.onWarning&&e.onWarning.call(null,L(e,t))}var $={YAML:function(e,t,n){var r,s,i;null!==e.version&&C(e,"duplication of %YAML directive"),1!==n.length&&C(e,"YAML directive accepts exactly one argument"),null===(r=/^([0-9]+)\.([0-9]+)$/.exec(n[0]))&&C(e,"ill-formed argument of the YAML directive"),s=parseInt(r[1],10),i=parseInt(r[2],10),1!==s&&C(e,"unacceptable YAML version of the document"),e.version=n[0],e.checkLineBreaks=i<2,1!==i&&2!==i&&j(e,"unsupported YAML version of the document")},TAG:function(e,t,n){var r,s;2!==n.length&&C(e,"TAG directive accepts exactly two arguments"),r=n[0],s=n[1],x.test(r)||C(e,"ill-formed tag handle (first argument) of the TAG directive"),o.call(e.tagMap,r)&&C(e,'there is a previously declared suffix for "'+r+'" tag handle'),_.test(s)||C(e,"ill-formed tag prefix (second argument) of the TAG directive");try{s=decodeURIComponent(s)}catch(t){C(e,"tag prefix is malformed: "+s)}e.tagMap[r]=s}};function R(e,t,n,r){var s,i,a,o;if(t<n){if(o=e.input.slice(t,n),r)for(s=0,i=o.length;s<i;s+=1)9===(a=o.charCodeAt(s))||32<=a&&a<=1114111||C(e,"expected valid JSON character");else m.test(o)&&C(e,"the stream contains non-printable characters");e.result+=o}}function D(e,t,n,s){var i,a,u,c;for(r.isObject(n)||C(e,"cannot merge mappings; the provided source object is unacceptable"),u=0,c=(i=Object.keys(n)).length;u<c;u+=1)a=i[u],o.call(t,a)||(t[a]=n[a],s[a]=!0)}function M(e,t,n,r,s,i,a,u,c){var l,p;if(Array.isArray(s))for(l=0,p=(s=Array.prototype.slice.call(s)).length;l<p;l+=1)Array.isArray(s[l])&&C(e,"nested arrays are not supported inside keys"),"object"==typeof s&&"[object Object]"===b(s[l])&&(s[l]="[object Object]");if("object"==typeof s&&"[object Object]"===b(s)&&(s="[object Object]"),s=String(s),null===t&&(t={}),"tag:yaml.org,2002:merge"===r)if(Array.isArray(i))for(l=0,p=i.length;l<p;l+=1)D(e,t,i[l],n);else D(e,t,i,n);else e.json||o.call(n,s)||!o.call(t,s)||(e.line=a||e.line,e.lineStart=u||e.lineStart,e.position=c||e.position,C(e,"duplicated mapping key")),"__proto__"===s?Object.defineProperty(t,s,{configurable:!0,enumerable:!0,writable:!0,value:i}):t[s]=i,delete n[s];return t}function P(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):C(e,"a line break is expected"),e.line+=1,e.lineStart=e.position,e.firstTabInLine=-1}function Q(e,t,n){for(var r=0,s=e.input.charCodeAt(e.position);0!==s;){for(;v(s);)9===s&&-1===e.firstTabInLine&&(e.firstTabInLine=e.position),s=e.input.charCodeAt(++e.position);if(t&&35===s)do{s=e.input.charCodeAt(++e.position)}while(10!==s&&13!==s&&0!==s);if(!E(s))break;for(P(e),s=e.input.charCodeAt(e.position),r++,e.lineIndent=0;32===s;)e.lineIndent++,s=e.input.charCodeAt(++e.position)}return-1!==n&&0!==r&&e.lineIndent<n&&j(e,"deficient indentation"),r}function G(e){var t,n=e.position;return!(45!==(t=e.input.charCodeAt(n))&&46!==t||t!==e.input.charCodeAt(n+1)||t!==e.input.charCodeAt(n+2)||(n+=3,0!==(t=e.input.charCodeAt(n))&&!S(t)))}function B(e,t){1===t?e.result+=" ":t>1&&(e.result+=r.repeat("\n",t-1))}function J(e,t){var n,r,s=e.tag,i=e.anchor,a=[],o=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=a),r=e.input.charCodeAt(e.position);0!==r&&(-1!==e.firstTabInLine&&(e.position=e.firstTabInLine,C(e,"tab characters must not be used in indentation")),45===r)&&S(e.input.charCodeAt(e.position+1));)if(o=!0,e.position++,Q(e,!0,-1)&&e.lineIndent<=t)a.push(null),r=e.input.charCodeAt(e.position);else if(n=e.line,z(e,t,l,!1,!0),a.push(e.result),Q(e,!0,-1),r=e.input.charCodeAt(e.position),(e.line===n||e.lineIndent>t)&&0!==r)C(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!o&&(e.tag=s,e.anchor=i,e.kind="sequence",e.result=a,!0)}function U(e){var t,n,r,s,i=!1,a=!1;if(33!==(s=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&C(e,"duplication of a tag property"),60===(s=e.input.charCodeAt(++e.position))?(i=!0,s=e.input.charCodeAt(++e.position)):33===s?(a=!0,n="!!",s=e.input.charCodeAt(++e.position)):n="!",t=e.position,i){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&62!==s);e.position<e.length?(r=e.input.slice(t,e.position),s=e.input.charCodeAt(++e.position)):C(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==s&&!S(s);)33===s&&(a?C(e,"tag suffix cannot contain exclamation marks"):(n=e.input.slice(t-1,e.position+1),x.test(n)||C(e,"named tag handle cannot contain such characters"),a=!0,t=e.position+1)),s=e.input.charCodeAt(++e.position);r=e.input.slice(t,e.position),y.test(r)&&C(e,"tag suffix cannot contain flow indicator characters")}r&&!_.test(r)&&C(e,"tag name cannot contain such characters: "+r);try{r=decodeURIComponent(r)}catch(t){C(e,"tag name is malformed: "+r)}return i?e.tag=r:o.call(e.tagMap,n)?e.tag=e.tagMap[n]+r:"!"===n?e.tag="!"+r:"!!"===n?e.tag="tag:yaml.org,2002:"+r:C(e,'undeclared tag handle "'+n+'"'),!0}function V(e){var t,n;if(38!==(n=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&C(e,"duplication of an anchor property"),n=e.input.charCodeAt(++e.position),t=e.position;0!==n&&!S(n)&&!A(n);)n=e.input.charCodeAt(++e.position);return e.position===t&&C(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function z(e,t,n,s,i){var a,m,g,y,x,_,b,T,I,F=1,L=!1,j=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,a=m=g=p===n||l===n,s&&Q(e,!0,-1)&&(L=!0,e.lineIndent>t?F=1:e.lineIndent===t?F=0:e.lineIndent<t&&(F=-1)),1===F)for(;U(e)||V(e);)Q(e,!0,-1)?(L=!0,g=a,e.lineIndent>t?F=1:e.lineIndent===t?F=0:e.lineIndent<t&&(F=-1)):g=!1;if(g&&(g=L||i),1!==F&&p!==n||(T=u===n||c===n?t:t+1,I=e.position-e.lineStart,1===F?g&&(J(e,I)||function(e,t,n){var r,s,i,a,o,u,l,h=e.tag,f=e.anchor,d={},m=Object.create(null),g=null,y=null,x=null,_=!1,b=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=d),l=e.input.charCodeAt(e.position);0!==l;){if(_||-1===e.firstTabInLine||(e.position=e.firstTabInLine,C(e,"tab characters must not be used in indentation")),r=e.input.charCodeAt(e.position+1),i=e.line,63!==l&&58!==l||!S(r)){if(a=e.line,o=e.lineStart,u=e.position,!z(e,n,c,!1,!0))break;if(e.line===i){for(l=e.input.charCodeAt(e.position);v(l);)l=e.input.charCodeAt(++e.position);if(58===l)S(l=e.input.charCodeAt(++e.position))||C(e,"a whitespace character is expected after the key-value separator within a block mapping"),_&&(M(e,d,m,g,y,null,a,o,u),g=y=x=null),b=!0,_=!1,s=!1,g=e.tag,y=e.result;else{if(!b)return e.tag=h,e.anchor=f,!0;C(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!b)return e.tag=h,e.anchor=f,!0;C(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===l?(_&&(M(e,d,m,g,y,null,a,o,u),g=y=x=null),b=!0,_=!0,s=!0):_?(_=!1,s=!0):C(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,l=r;if((e.line===i||e.lineIndent>t)&&(_&&(a=e.line,o=e.lineStart,u=e.position),z(e,t,p,!0,s)&&(_?y=e.result:x=e.result),_||(M(e,d,m,g,y,x,a,o,u),g=y=x=null),Q(e,!0,-1),l=e.input.charCodeAt(e.position)),(e.line===i||e.lineIndent>t)&&0!==l)C(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return _&&M(e,d,m,g,y,null,a,o,u),b&&(e.tag=h,e.anchor=f,e.kind="mapping",e.result=d),b}(e,I,T))||function(e,t){var n,r,s,i,a,o,c,l,p,h,f,d,m=!0,g=e.tag,y=e.anchor,x=Object.create(null);if(91===(d=e.input.charCodeAt(e.position)))a=93,l=!1,i=[];else{if(123!==d)return!1;a=125,l=!0,i={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=i),d=e.input.charCodeAt(++e.position);0!==d;){if(Q(e,!0,t),(d=e.input.charCodeAt(e.position))===a)return e.position++,e.tag=g,e.anchor=y,e.kind=l?"mapping":"sequence",e.result=i,!0;m?44===d&&C(e,"expected the node content, but found ','"):C(e,"missed comma between flow collection entries"),f=null,o=c=!1,63===d&&S(e.input.charCodeAt(e.position+1))&&(o=c=!0,e.position++,Q(e,!0,t)),n=e.line,r=e.lineStart,s=e.position,z(e,t,u,!1,!0),h=e.tag,p=e.result,Q(e,!0,t),d=e.input.charCodeAt(e.position),!c&&e.line!==n||58!==d||(o=!0,d=e.input.charCodeAt(++e.position),Q(e,!0,t),z(e,t,u,!1,!0),f=e.result),l?M(e,i,x,h,p,f,n,r,s):o?i.push(M(e,null,x,h,p,f,n,r,s)):i.push(p),Q(e,!0,t),44===(d=e.input.charCodeAt(e.position))?(m=!0,d=e.input.charCodeAt(++e.position)):m=!1}C(e,"unexpected end of the stream within a flow collection")}(e,T)?j=!0:(m&&function(e,t){var n,s,i,a,o,u=h,c=!1,l=!1,p=t,m=0,g=!1;if(124===(a=e.input.charCodeAt(e.position)))s=!1;else{if(62!==a)return!1;s=!0}for(e.kind="scalar",e.result="";0!==a;)if(43===(a=e.input.charCodeAt(++e.position))||45===a)h===u?u=43===a?d:f:C(e,"repeat of a chomping mode identifier");else{if(!((i=48<=(o=a)&&o<=57?o-48:-1)>=0))break;0===i?C(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):l?C(e,"repeat of an indentation width identifier"):(p=t+i-1,l=!0)}if(v(a)){do{a=e.input.charCodeAt(++e.position)}while(v(a));if(35===a)do{a=e.input.charCodeAt(++e.position)}while(!E(a)&&0!==a)}for(;0!==a;){for(P(e),e.lineIndent=0,a=e.input.charCodeAt(e.position);(!l||e.lineIndent<p)&&32===a;)e.lineIndent++,a=e.input.charCodeAt(++e.position);if(!l&&e.lineIndent>p&&(p=e.lineIndent),E(a))m++;else{if(e.lineIndent<p){u===d?e.result+=r.repeat("\n",c?1+m:m):u===h&&c&&(e.result+="\n");break}for(s?v(a)?(g=!0,e.result+=r.repeat("\n",c?1+m:m)):g?(g=!1,e.result+=r.repeat("\n",m+1)):0===m?c&&(e.result+=" "):e.result+=r.repeat("\n",m):e.result+=r.repeat("\n",c?1+m:m),c=!0,l=!0,m=0,n=e.position;!E(a)&&0!==a;)a=e.input.charCodeAt(++e.position);R(e,n,e.position,!1)}}return!0}(e,T)||function(e,t){var n,r,s;if(39!==(n=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,r=s=e.position;0!==(n=e.input.charCodeAt(e.position));)if(39===n){if(R(e,r,e.position,!0),39!==(n=e.input.charCodeAt(++e.position)))return!0;r=e.position,e.position++,s=e.position}else E(n)?(R(e,r,s,!0),B(e,Q(e,!1,t)),r=s=e.position):e.position===e.lineStart&&G(e)?C(e,"unexpected end of the document within a single quoted scalar"):(e.position++,s=e.position);C(e,"unexpected end of the stream within a single quoted scalar")}(e,T)||function(e,t){var n,r,s,i,a,o,u;if(34!==(o=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,n=r=e.position;0!==(o=e.input.charCodeAt(e.position));){if(34===o)return R(e,n,e.position,!0),e.position++,!0;if(92===o){if(R(e,n,e.position,!0),E(o=e.input.charCodeAt(++e.position)))Q(e,!1,t);else if(o<256&&k[o])e.result+=N[o],e.position++;else if((a=120===(u=o)?2:117===u?4:85===u?8:0)>0){for(s=a,i=0;s>0;s--)(a=w(o=e.input.charCodeAt(++e.position)))>=0?i=(i<<4)+a:C(e,"expected hexadecimal character");e.result+=O(i),e.position++}else C(e,"unknown escape sequence");n=r=e.position}else E(o)?(R(e,n,r,!0),B(e,Q(e,!1,t)),n=r=e.position):e.position===e.lineStart&&G(e)?C(e,"unexpected end of the document within a double quoted scalar"):(e.position++,r=e.position)}C(e,"unexpected end of the stream within a double quoted scalar")}(e,T)?j=!0:!function(e){var t,n,r;if(42!==(r=e.input.charCodeAt(e.position)))return!1;for(r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!S(r)&&!A(r);)r=e.input.charCodeAt(++e.position);return e.position===t&&C(e,"name of an alias node must contain at least one character"),n=e.input.slice(t,e.position),o.call(e.anchorMap,n)||C(e,'unidentified alias "'+n+'"'),e.result=e.anchorMap[n],Q(e,!0,-1),!0}(e)?function(e,t,n){var r,s,i,a,o,u,c,l,p=e.kind,h=e.result;if(S(l=e.input.charCodeAt(e.position))||A(l)||35===l||38===l||42===l||33===l||124===l||62===l||39===l||34===l||37===l||64===l||96===l)return!1;if((63===l||45===l)&&(S(r=e.input.charCodeAt(e.position+1))||n&&A(r)))return!1;for(e.kind="scalar",e.result="",s=i=e.position,a=!1;0!==l;){if(58===l){if(S(r=e.input.charCodeAt(e.position+1))||n&&A(r))break}else if(35===l){if(S(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&G(e)||n&&A(l))break;if(E(l)){if(o=e.line,u=e.lineStart,c=e.lineIndent,Q(e,!1,-1),e.lineIndent>=t){a=!0,l=e.input.charCodeAt(e.position);continue}e.position=i,e.line=o,e.lineStart=u,e.lineIndent=c;break}}a&&(R(e,s,i,!1),B(e,e.line-o),s=i=e.position,a=!1),v(l)||(i=e.position+1),l=e.input.charCodeAt(++e.position)}return R(e,s,i,!1),!!e.result||(e.kind=p,e.result=h,!1)}(e,T,u===n)&&(j=!0,null===e.tag&&(e.tag="?")):(j=!0,null===e.tag&&null===e.anchor||C(e,"alias node should not have any properties")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===F&&(j=g&&J(e,I))),null===e.tag)null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);else if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&C(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),y=0,x=e.implicitTypes.length;y<x;y+=1)if((b=e.implicitTypes[y]).resolve(e.result)){e.result=b.construct(e.result),e.tag=b.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else if("!"!==e.tag){if(o.call(e.typeMap[e.kind||"fallback"],e.tag))b=e.typeMap[e.kind||"fallback"][e.tag];else for(b=null,y=0,x=(_=e.typeMap.multi[e.kind||"fallback"]).length;y<x;y+=1)if(e.tag.slice(0,_[y].tag.length)===_[y].tag){b=_[y];break}b||C(e,"unknown tag !<"+e.tag+">"),null!==e.result&&b.kind!==e.kind&&C(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+b.kind+'", not "'+e.kind+'"'),b.resolve(e.result,e.tag)?(e.result=b.construct(e.result,e.tag),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):C(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||j}function q(e){var t,n,r,s,i=e.position,a=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap=Object.create(null),e.anchorMap=Object.create(null);0!==(s=e.input.charCodeAt(e.position))&&(Q(e,!0,-1),s=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==s));){for(a=!0,s=e.input.charCodeAt(++e.position),t=e.position;0!==s&&!S(s);)s=e.input.charCodeAt(++e.position);for(r=[],(n=e.input.slice(t,e.position)).length<1&&C(e,"directive name must not be less than one character in length");0!==s;){for(;v(s);)s=e.input.charCodeAt(++e.position);if(35===s){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&!E(s));break}if(E(s))break;for(t=e.position;0!==s&&!S(s);)s=e.input.charCodeAt(++e.position);r.push(e.input.slice(t,e.position))}0!==s&&P(e),o.call($,n)?$[n](e,n,r):j(e,'unknown document directive "'+n+'"')}Q(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,Q(e,!0,-1)):a&&C(e,"directives end mark is expected"),z(e,e.lineIndent-1,p,!1,!0),Q(e,!0,-1),e.checkLineBreaks&&g.test(e.input.slice(i,e.position))&&j(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&G(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,Q(e,!0,-1)):e.position<e.length-1&&C(e,"end of the stream or a document separator is expected")}function Z(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var n=new F(e,t),r=e.indexOf("\0");for(-1!==r&&(n.position=r,C(n,"null byte is not allowed in input")),n.input+="\0";32===n.input.charCodeAt(n.position);)n.lineIndent+=1,n.position+=1;for(;n.position<n.length-1;)q(n);return n.documents}e.exports.loadAll=function(e,t,n){null!==t&&"object"==typeof t&&void 0===n&&(n=t,t=null);var r=Z(e,n);if("function"!=typeof t)return r;for(var s=0,i=r.length;s<i;s+=1)t(r[s])},e.exports.load=function(e,t){var n=Z(e,t);if(0!==n.length){if(1===n.length)return n[0];throw new s("expected a single document in the stream, but found more")}}},5771:(e,t,n)=>{"use strict";var r=n(8689),s=n(8954);function i(e,t){var n=[];return e[t].forEach((function(e){var t=n.length;n.forEach((function(n,r){n.tag===e.tag&&n.kind===e.kind&&n.multi===e.multi&&(t=r)})),n[t]=e})),n}function a(e){return this.extend(e)}a.prototype.extend=function(e){var t=[],n=[];if(e instanceof s)n.push(e);else if(Array.isArray(e))n=n.concat(e);else{if(!e||!Array.isArray(e.implicit)&&!Array.isArray(e.explicit))throw new r("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");e.implicit&&(t=t.concat(e.implicit)),e.explicit&&(n=n.concat(e.explicit))}t.forEach((function(e){if(!(e instanceof s))throw new r("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(e.loadKind&&"scalar"!==e.loadKind)throw new r("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(e.multi)throw new r("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")})),n.forEach((function(e){if(!(e instanceof s))throw new r("Specified list of YAML types (or a single Type object) contains a non-Type object.")}));var o=Object.create(a.prototype);return o.implicit=(this.implicit||[]).concat(t),o.explicit=(this.explicit||[]).concat(n),o.compiledImplicit=i(o,"implicit"),o.compiledExplicit=i(o,"explicit"),o.compiledTypeMap=function(){var e,t,n={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}};function r(e){e.multi?(n.multi[e.kind].push(e),n.multi.fallback.push(e)):n[e.kind][e.tag]=n.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(r);return n}(o.compiledImplicit,o.compiledExplicit),o},e.exports=a},2230:(e,t,n)=>{"use strict";e.exports=n(7505)},215:(e,t,n)=>{"use strict";e.exports=n(2230).extend({implicit:[n(8436),n(3021)],explicit:[n(9054),n(7668),n(7268),n(9784)]})},6126:(e,t,n)=>{"use strict";var r=n(5771);e.exports=new r({explicit:[n(1002),n(8394),n(1021)]})},7505:(e,t,n)=>{"use strict";e.exports=n(6126).extend({implicit:[n(4716),n(8568),n(391),n(9685)]})},901:(e,t,n)=>{"use strict";var r=n(1052);function s(e,t,n,r,s){var i="",a="",o=Math.floor(s/2)-1;return r-t>o&&(t=r-o+(i=" ... ").length),n-r>o&&(n=r+o-(a=" ...").length),{str:i+e.slice(t,n).replace(/\t/g,"→")+a,pos:r-t+i.length}}function i(e,t){return r.repeat(" ",t-e.length)+e}e.exports=function(e,t){if(t=Object.create(t||null),!e.buffer)return null;t.maxLength||(t.maxLength=79),"number"!=typeof t.indent&&(t.indent=1),"number"!=typeof t.linesBefore&&(t.linesBefore=3),"number"!=typeof t.linesAfter&&(t.linesAfter=2);for(var n,a=/\r?\n|\r|\0/g,o=[0],u=[],c=-1;n=a.exec(e.buffer);)u.push(n.index),o.push(n.index+n[0].length),e.position<=n.index&&c<0&&(c=o.length-2);c<0&&(c=o.length-1);var l,p,h="",f=Math.min(e.line+t.linesAfter,u.length).toString().length,d=t.maxLength-(t.indent+f+3);for(l=1;l<=t.linesBefore&&!(c-l<0);l++)p=s(e.buffer,o[c-l],u[c-l],e.position-(o[c]-o[c-l]),d),h=r.repeat(" ",t.indent)+i((e.line-l+1).toString(),f)+" | "+p.str+"\n"+h;for(p=s(e.buffer,o[c],u[c],e.position,d),h+=r.repeat(" ",t.indent)+i((e.line+1).toString(),f)+" | "+p.str+"\n",h+=r.repeat("-",t.indent+f+3+p.pos)+"^\n",l=1;l<=t.linesAfter&&!(c+l>=u.length);l++)p=s(e.buffer,o[c+l],u[c+l],e.position-(o[c]-o[c+l]),d),h+=r.repeat(" ",t.indent)+i((e.line+l+1).toString(),f)+" | "+p.str+"\n";return h.replace(/\n$/,"")}},8954:(e,t,n)=>{"use strict";var r=n(8689),s=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],i=["scalar","sequence","mapping"];e.exports=function(e,t){var n,a;if(t=t||{},Object.keys(t).forEach((function(t){if(-1===s.indexOf(t))throw new r('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')})),this.options=t,this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.representName=t.representName||null,this.defaultStyle=t.defaultStyle||null,this.multi=t.multi||!1,this.styleAliases=(n=t.styleAliases||null,a={},null!==n&&Object.keys(n).forEach((function(e){n[e].forEach((function(t){a[String(t)]=e}))})),a),-1===i.indexOf(this.kind))throw new r('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}},9054:(e,t,n)=>{"use strict";var r=n(8954),s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";e.exports=new r("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,n,r=0,i=e.length,a=s;for(n=0;n<i;n++)if(!((t=a.indexOf(e.charAt(n)))>64)){if(t<0)return!1;r+=6}return r%8==0},construct:function(e){var t,n,r=e.replace(/[\r\n=]/g,""),i=r.length,a=s,o=0,u=[];for(t=0;t<i;t++)t%4==0&&t&&(u.push(o>>16&255),u.push(o>>8&255),u.push(255&o)),o=o<<6|a.indexOf(r.charAt(t));return 0===(n=i%4*6)?(u.push(o>>16&255),u.push(o>>8&255),u.push(255&o)):18===n?(u.push(o>>10&255),u.push(o>>2&255)):12===n&&u.push(o>>4&255),new Uint8Array(u)},predicate:function(e){return"[object Uint8Array]"===Object.prototype.toString.call(e)},represent:function(e){var t,n,r="",i=0,a=e.length,o=s;for(t=0;t<a;t++)t%3==0&&t&&(r+=o[i>>18&63],r+=o[i>>12&63],r+=o[i>>6&63],r+=o[63&i]),i=(i<<8)+e[t];return 0===(n=a%3)?(r+=o[i>>18&63],r+=o[i>>12&63],r+=o[i>>6&63],r+=o[63&i]):2===n?(r+=o[i>>10&63],r+=o[i>>4&63],r+=o[i<<2&63],r+=o[64]):1===n&&(r+=o[i>>2&63],r+=o[i<<4&63],r+=o[64],r+=o[64]),r}})},8568:(e,t,n)=>{"use strict";var r=n(8954);e.exports=new r("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},9685:(e,t,n)=>{"use strict";var r=n(1052),s=n(8954),i=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");var a=/^[-+]?[0-9]+e/;e.exports=new s("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!i.test(e)||"_"===e[e.length-1])},construct:function(e){var t,n;return n="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===n?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:n*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||r.isNegativeZero(e))},represent:function(e,t){var n;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(r.isNegativeZero(e))return"-0.0";return n=e.toString(10),a.test(n)?n.replace("e",".e"):n},defaultStyle:"lowercase"})},391:(e,t,n)=>{"use strict";var r=n(1052),s=n(8954);function i(e){return 48<=e&&e<=55}function a(e){return 48<=e&&e<=57}e.exports=new s("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,n,r=e.length,s=0,o=!1;if(!r)return!1;if("-"!==(t=e[s])&&"+"!==t||(t=e[++s]),"0"===t){if(s+1===r)return!0;if("b"===(t=e[++s])){for(s++;s<r;s++)if("_"!==(t=e[s])){if("0"!==t&&"1"!==t)return!1;o=!0}return o&&"_"!==t}if("x"===t){for(s++;s<r;s++)if("_"!==(t=e[s])){if(!(48<=(n=e.charCodeAt(s))&&n<=57||65<=n&&n<=70||97<=n&&n<=102))return!1;o=!0}return o&&"_"!==t}if("o"===t){for(s++;s<r;s++)if("_"!==(t=e[s])){if(!i(e.charCodeAt(s)))return!1;o=!0}return o&&"_"!==t}}if("_"===t)return!1;for(;s<r;s++)if("_"!==(t=e[s])){if(!a(e.charCodeAt(s)))return!1;o=!0}return!(!o||"_"===t)},construct:function(e){var t,n=e,r=1;if(-1!==n.indexOf("_")&&(n=n.replace(/_/g,"")),"-"!==(t=n[0])&&"+"!==t||("-"===t&&(r=-1),t=(n=n.slice(1))[0]),"0"===n)return 0;if("0"===t){if("b"===n[1])return r*parseInt(n.slice(2),2);if("x"===n[1])return r*parseInt(n.slice(2),16);if("o"===n[1])return r*parseInt(n.slice(2),8)}return r*parseInt(n,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!r.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0o"+e.toString(8):"-0o"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},1021:(e,t,n)=>{"use strict";var r=n(8954);e.exports=new r("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}})},3021:(e,t,n)=>{"use strict";var r=n(8954);e.exports=new r("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}})},4716:(e,t,n)=>{"use strict";var r=n(8954);e.exports=new r("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"})},7668:(e,t,n)=>{"use strict";var r=n(8954),s=Object.prototype.hasOwnProperty,i=Object.prototype.toString;e.exports=new r("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,n,r,a,o,u=[],c=e;for(t=0,n=c.length;t<n;t+=1){if(r=c[t],o=!1,"[object Object]"!==i.call(r))return!1;for(a in r)if(s.call(r,a)){if(o)return!1;o=!0}if(!o)return!1;if(-1!==u.indexOf(a))return!1;u.push(a)}return!0},construct:function(e){return null!==e?e:[]}})},7268:(e,t,n)=>{"use strict";var r=n(8954),s=Object.prototype.toString;e.exports=new r("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,n,r,i,a,o=e;for(a=new Array(o.length),t=0,n=o.length;t<n;t+=1){if(r=o[t],"[object Object]"!==s.call(r))return!1;if(1!==(i=Object.keys(r)).length)return!1;a[t]=[i[0],r[i[0]]]}return!0},construct:function(e){if(null===e)return[];var t,n,r,s,i,a=e;for(i=new Array(a.length),t=0,n=a.length;t<n;t+=1)r=a[t],s=Object.keys(r),i[t]=[s[0],r[s[0]]];return i}})},8394:(e,t,n)=>{"use strict";var r=n(8954);e.exports=new r("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}})},9784:(e,t,n)=>{"use strict";var r=n(8954),s=Object.prototype.hasOwnProperty;e.exports=new r("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,n=e;for(t in n)if(s.call(n,t)&&null!==n[t])return!1;return!0},construct:function(e){return null!==e?e:{}}})},1002:(e,t,n)=>{"use strict";var r=n(8954);e.exports=new r("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}})},8436:(e,t,n)=>{"use strict";var r=n(8954),s=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),i=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");e.exports=new r("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==s.exec(e)||null!==i.exec(e))},construct:function(e){var t,n,r,a,o,u,c,l,p=0,h=null;if(null===(t=s.exec(e))&&(t=i.exec(e)),null===t)throw new Error("Date resolve error");if(n=+t[1],r=+t[2]-1,a=+t[3],!t[4])return new Date(Date.UTC(n,r,a));if(o=+t[4],u=+t[5],c=+t[6],t[7]){for(p=t[7].slice(0,3);p.length<3;)p+="0";p=+p}return t[9]&&(h=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(h=-h)),l=new Date(Date.UTC(n,r,a,o,u,c,p)),h&&l.setTime(l.getTime()-h),l},instanceOf:Date,represent:function(e){return e.toISOString()}})},5325:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;const n="http://www.w3.org/1999/02/22-rdf-syntax-ns#",r="http://www.w3.org/2001/XMLSchema#",s="http://www.w3.org/2000/10/swap/";var i={xsd:{decimal:`${r}decimal`,boolean:`${r}boolean`,double:`${r}double`,integer:`${r}integer`,string:`${r}string`},rdf:{type:`${n}type`,nil:`${n}nil`,first:`${n}first`,rest:`${n}rest`,langString:`${n}langString`},owl:{sameAs:"http://www.w3.org/2002/07/owl#sameAs"},r:{forSome:`${s}reify#forSome`,forAll:`${s}reify#forAll`},log:{implies:`${s}log#implies`}};t.default=i},713:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.Variable=t.Triple=t.Term=t.Quad=t.NamedNode=t.Literal=t.DefaultGraph=t.BlankNode=void 0,t.escapeQuotes=E,t.termFromId=function e(t,n){if(n=n||h,!t)return n.defaultGraph();switch(t[0]){case"?":return n.variable(t.substr(1));case"_":return n.blankNode(t.substr(2));case'"':if(n===h)return new g(t);if('"'===t[t.length-1])return n.literal(t.substr(1,t.length-2));const r=t.lastIndexOf('"',t.length-1);return n.literal(t.substr(1,r-1),"@"===t[r+1]?t.substr(r+2):n.namedNode(t.substr(r+3)));case"<":const s=p.exec(t);return n.quad(e(v(s[1]),n),e(v(s[2]),n),e(v(s[3]),n),s[4]&&e(v(s[4]),n));default:return n.namedNode(t)}},t.termToId=function e(t){if("string"==typeof t)return t;if(t instanceof d&&"Quad"!==t.termType)return t.id;if(!t)return u.id;switch(t.termType){case"NamedNode":return t.value;case"BlankNode":return`_:${t.value}`;case"Variable":return`?${t.value}`;case"DefaultGraph":return"";case"Literal":return`"${t.value}"${t.language?`@${t.language}`:t.datatype&&t.datatype.value!==o.string?`^^${t.datatype.value}`:""}`;case"Quad":return`<<${E(e(t.subject))} ${E(e(t.predicate))} ${E(e(t.object))}${(0,i.isDefaultGraph)(t.graph)?"":` ${e(t.graph)}`}>>`;default:throw new Error(`Unexpected termType: ${t.termType}`)}},t.unescapeQuotes=v;var r,s=(r=n(5325))&&r.__esModule?r:{default:r},i=n(7141);const{rdf:a,xsd:o}=s.default;let u,c=0;const l=/^"(.*".*)(?="[^"]*$)/,p=/^<<("(?:""|[^"])*"[^ ]*|[^ ]+) ("(?:""|[^"])*"[^ ]*|[^ ]+) ("(?:""|[^"])*"[^ ]*|[^ ]+) ?("(?:""|[^"])*"[^ ]*|[^ ]+)?>>$/,h={namedNode:function(e){return new m(e)},blankNode:function(e){return new y(e||"n3-"+c++)},variable:function(e){return new x(e)},literal:function(e,t){if("string"==typeof t)return new g(`"${e}"@${t.toLowerCase()}`);let n=t?t.value:"";""===n&&("boolean"==typeof e?n=o.boolean:"number"==typeof e&&(Number.isFinite(e)?n=Number.isInteger(e)?o.integer:o.double:(n=o.double,Number.isNaN(e)||(e=e>0?"INF":"-INF"))));return""===n||n===o.string?new g(`"${e}"`):new g(`"${e}"^^${n}`)},defaultGraph:function(){return u},quad:S,triple:S};var f=h;t.default=f;class d{constructor(e){this.id=e}get value(){return this.id}equals(e){return e instanceof d?this.id===e.id:!!e&&this.termType===e.termType&&this.value===e.value}hashCode(){return 0}toJSON(){return{termType:this.termType,value:this.value}}}t.Term=d;class m extends d{get termType(){return"NamedNode"}}t.NamedNode=m;class g extends d{get termType(){return"Literal"}get value(){return this.id.substring(1,this.id.lastIndexOf('"'))}get language(){const e=this.id;let t=e.lastIndexOf('"')+1;return t<e.length&&"@"===e[t++]?e.substr(t).toLowerCase():""}get datatype(){return new m(this.datatypeString)}get datatypeString(){const e=this.id,t=e.lastIndexOf('"')+1,n=t<e.length?e[t]:"";return"^"===n?e.substr(t+2):"@"!==n?o.string:a.langString}equals(e){return e instanceof g?this.id===e.id:!!e&&!!e.datatype&&this.termType===e.termType&&this.value===e.value&&this.language===e.language&&this.datatype.value===e.datatype.value}toJSON(){return{termType:this.termType,value:this.value,language:this.language,datatype:{termType:"NamedNode",value:this.datatypeString}}}}t.Literal=g;class y extends d{constructor(e){super(`_:${e}`)}get termType(){return"BlankNode"}get value(){return this.id.substr(2)}}t.BlankNode=y;class x extends d{constructor(e){super(`?${e}`)}get termType(){return"Variable"}get value(){return this.id.substr(1)}}t.Variable=x;class _ extends d{constructor(){return super(""),u||this}get termType(){return"DefaultGraph"}equals(e){return this===e||!!e&&this.termType===e.termType}}t.DefaultGraph=_,u=new _;class b extends d{constructor(e,t,n,r){super(""),this._subject=e,this._predicate=t,this._object=n,this._graph=r||u}get termType(){return"Quad"}get subject(){return this._subject}get predicate(){return this._predicate}get object(){return this._object}get graph(){return this._graph}toJSON(){return{termType:this.termType,subject:this._subject.toJSON(),predicate:this._predicate.toJSON(),object:this._object.toJSON(),graph:this._graph.toJSON()}}equals(e){return!!e&&this._subject.equals(e.subject)&&this._predicate.equals(e.predicate)&&this._object.equals(e.object)&&this._graph.equals(e.graph)}}function E(e){return e.replace(l,((e,t)=>`"${t.replace(/"/g,'""')}`))}function v(e){return e.replace(l,((e,t)=>`"${t.replace(/""/g,'"')}`))}function S(e,t,n,r){return new b(e,t,n,r)}t.Triple=t.Quad=b},7141:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.inDefaultGraph=function(e){return i(e.graph)},t.isBlankNode=function(e){return!!e&&"BlankNode"===e.termType},t.isDefaultGraph=i,t.isLiteral=function(e){return!!e&&"Literal"===e.termType},t.isNamedNode=function(e){return!!e&&"NamedNode"===e.termType},t.isVariable=function(e){return!!e&&"Variable"===e.termType},t.prefix=function(e,t){return a({"":e.value||e},t)("")},t.prefixes=a;var r,s=(r=n(713))&&r.__esModule?r:{default:r};function i(e){return!!e&&"DefaultGraph"===e.termType}function a(e,t){const n=Object.create(null);for(const t in e)r(t,e[t]);function r(e,r){if("string"==typeof r){const s=Object.create(null);n[e]=e=>s[e]||(s[e]=t.namedNode(r+e))}else if(!(e in n))throw new Error(`Unknown prefix: ${e}`);return n[e]}return t=t||s.default,r}},1194:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),s(n(8279),t),s(n(370),t),s(n(1261),t),s(n(8990),t),s(n(4938),t),s(n(5414),t),s(n(3910),t)},8279:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BlankNode=void 0;t.BlankNode=class{constructor(e){this.termType="BlankNode",this.value=e}equals(e){return!!e&&"BlankNode"===e.termType&&e.value===this.value}}},370:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DataFactory=void 0;const r=n(8279),s=n(1261),i=n(8990),a=n(4938),o=n(5414),u=n(3910);let c=0;t.DataFactory=class{constructor(e){this.blankNodeCounter=0,e=e||{},this.blankNodePrefix=e.blankNodePrefix||`df_${c++}_`}namedNode(e){return new a.NamedNode(e)}blankNode(e){return new r.BlankNode(e||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(e,t){return new i.Literal(e,t)}variable(e){return new u.Variable(e)}defaultGraph(){return s.DefaultGraph.INSTANCE}quad(e,t,n,r){return new o.Quad(e,t,n,r||this.defaultGraph())}fromTerm(e){switch(e.termType){case"NamedNode":return this.namedNode(e.value);case"BlankNode":return this.blankNode(e.value);case"Literal":return e.language?this.literal(e.value,e.language):e.datatype.equals(i.Literal.XSD_STRING)?this.literal(e.value):this.literal(e.value,this.fromTerm(e.datatype));case"Variable":return this.variable(e.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(e.subject),this.fromTerm(e.predicate),this.fromTerm(e.object),this.fromTerm(e.graph))}}fromQuad(e){return this.fromTerm(e)}resetBlankNodeCounter(){this.blankNodeCounter=0}}},1261:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultGraph=void 0;class n{constructor(){this.termType="DefaultGraph",this.value=""}equals(e){return!!e&&"DefaultGraph"===e.termType}}t.DefaultGraph=n,n.INSTANCE=new n},8990:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Literal=void 0;const r=n(4938);class s{constructor(e,t){this.termType="Literal",this.value=e,"string"==typeof t?(this.language=t,this.datatype=s.RDF_LANGUAGE_STRING):t?(this.language="",this.datatype=t):(this.language="",this.datatype=s.XSD_STRING)}equals(e){return!!e&&"Literal"===e.termType&&e.value===this.value&&e.language===this.language&&e.datatype.equals(this.datatype)}}t.Literal=s,s.RDF_LANGUAGE_STRING=new r.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),s.XSD_STRING=new r.NamedNode("http://www.w3.org/2001/XMLSchema#string")},4938:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NamedNode=void 0;t.NamedNode=class{constructor(e){this.termType="NamedNode",this.value=e}equals(e){return!!e&&"NamedNode"===e.termType&&e.value===this.value}}},5414:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Quad=void 0;t.Quad=class{constructor(e,t,n,r){this.termType="Quad",this.value="",this.subject=e,this.predicate=t,this.object=n,this.graph=r}equals(e){return!!e&&("Quad"===e.termType||!e.termType)&&this.subject.equals(e.subject)&&this.predicate.equals(e.predicate)&&this.object.equals(e.object)&&this.graph.equals(e.graph)}}},3910:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=void 0;t.Variable=class{constructor(e){this.termType="Variable",this.value=e}equals(e){return!!e&&"Variable"===e.termType&&e.value===this.value}}},4436:e=>{class t{static components=[{name:"protocol",write:e=>e.protocol},{name:"hostname",write:e=>"//"+e.hostname},{name:"port",write:e=>":"+e.port},{name:"pathname",write:(e,t,n)=>{if(!n)return e.pathname;const r=t.pathname.split("/").slice(1),s=e.pathname.split("/").slice(1),i=Math.max(r.length,s.length);let a=0;for(;a<i&&r[a]===s[a];)++a;const o=r.slice(a+1).map((e=>"..")).concat(s.slice(a)).join("/");return o.length<=e.pathname.length?o:e.pathname}},{name:"search",write:e=>e.search},{name:"hash",write:e=>e.hash}];constructor(e,t){this.base=e,this.options=t}relate(e){return t.relativize(e,this.base,this.options)}static relativize(e,n,r={}){const s=new URL(n),i=new URL(e,s);let a="";for(let e of t.components)a?i[e.name]&&(a+=e.write(i,s,!1)):s[e.name]!==i[e.name]&&(a=e.write(i,s,!0));return a}}e.exports=t},8986:(e,t,n)=>{"use strict";t.G=void 0;const r=n(1101);var s;!function(e){e[e.Split=0]="Split",e[e.Rept=1]="Rept",e[e.Match=2]="Match"}(s||(s={}));class i{constructor(e,t){this.c=e,this.e=t,this.i=null}}class a{constructor(e){this.outs=e}}class o extends a{constructor(e,t,n){super(t),this.c=e,this.stack=n}}class u extends a{}class c extends u{constructor(e,t,n){super(t),this.c=e,this.expr=n}}class l extends u{constructor(e,t,n){super(t),this.c=e,this.expr=n,this.min=void 0===n.min?1:n.min,this.max=void 0===n.max?1:n.max===f?1/0:n.max}}class p extends u{constructor(e){super([]),this.c=e}}class h{constructor(e,t){this.start=e,this.tail=t}}const f=-1;t.G={name:"eval-simple-1err",description:"simple regular expression engine with n out states",compile:(e,t,n)=>{const r=t.expression;return function(){const e=[],a=y(new p(s.Match));let u,f=a;if(r){const e=g(r,[]);x(e.tail,a),f=e.start}return new m(t,e,f,a);function d(e,t,n){if(!(null!=e.min&&1!==e.min||null!=e.max&&1!==e.max))return new h(t,n);const r=y(new l(s.Rept,[t],e));return x(n,r),new h(r,[r])}function g(e,t){let r,a,l;if("string"==typeof e){return g(n.tripleExprs[e],t)}switch(e.type){case"TripleConstraint":return r=y(new o(e,[],t)),new h(r,[r]);case"OneOf":return l=[],a=[],e.expressions.forEach((function(n,r){u=g(n,t.concat([new i(e,r)])),a.push(u.start),l=l.concat(u.tail)})),r=y(new c(s.Split,a,e)),d(e,r,l);case"EachOf":return e.expressions.forEach((function(n,s){u=g(n,t.concat([new i(e,s)])),0===s?r=u.start:x(l,u.start),l=u.tail})),d(e,r,l)}}function y(t){const n=e.length;return e.push(t),n}function x(t,n){t.forEach((t=>{e[t].outs.push(n)}))}}()}};class d{constructor(e=-1,t={},n=new Map,r=[],s=[],i=[]){this.state=e,this.repeats=t,this.avail=n,this.stack=r,this.matched=s,this.errors=i}}class m{constructor(e,t,n,r){this.shape=e,this.end=r,this.states=t,this.start=n}match(e,t,n,r){const s=this;let i=[],a=[];const u=t.reduce(((e,t,n)=>(n.forEach((t=>e.add(t.triple))),e)),new Set);if(1===s.states.length)return this.matchedToResult([],t,n);let c=null;for(this.addstate(i,this.start,new d);i.length;){a=[],r&&r.push({threads:[]});for(let e=0;e<i.length;++e){const n=i[e];if(n.state===s.end)continue;const u=s.states[n.state],c=a.length;if(u instanceof o){const e=u.c;let r=void 0!==u.c.min?u.c.min:1,s=void 0!==u.c.max?u.c.max===f?1/0:u.c.max:1;n.avail.has(e)||n.avail.set(e,t.get(e).map((e=>e.triple)));const i=n.avail.get(e).splice(0,s);if(i.length>=r)do{this.addStates(a,n,i)}while(n.avail.get(e).length>0&&i.length<s&&(i.push(n.avail.get(e).shift()),1))}r&&r[r.length-1].threads.push({state:i[e].state,to:a.slice(c).map((e=>this.stateString(e.state,e.repeats)))})}if(0===a.length&&null===c)return l(p(i,s.states));const e=i;i=a,a=e;const n=i.reduce(((e,t)=>{const n=t.matched.reduce(((e,t)=>e+t.triples.length),0)===u.size;return null!==e?e:t.state===s.end&&n?t:null}),null);n&&(c=n)}if(null===c)return l([]);function l(t){return{type:"Failure",node:e,errors:p(i,s.states)}}function p(e,t){const n=t[t.length-1];return e.reduce(((e,t)=>{const r=s.states[t.state].c;let i=null;if(("string"==typeof r.valueExpr||r.valueExpr)&&(i=r.valueExpr),t.state!==s.end){const t={type:"MissingProperty",property:n.c.predicate};return i&&(t.valueExpr=i),e.concat([t])}{new Map;const r=t.matched.reduce(((e,t)=>(t.triples.forEach((t=>e.add(t))),e)),new Set),s=Array.from(u).reduce(((e,t)=>{if(!r.has(t)){const r={type:"ExcessTripleViolation",property:n.c.predicate,triple:t};i&&(r.valueExpr=i),e.push(r)}return e}),[]);return e.concat(s)}}),[])}return"errors"in c.matched?c.matched:this.matchedToResult(c.matched,t,n)}addStates(e,t,n){const r=this.states[t.state],s=this.states.map((e=>e instanceof l?e.expr:null)),i=r.stack.map((e=>{let n=t.repeats[s.indexOf(e.c)];return void 0===n?n=0:n-=1,{c:e.c,e:e.e,i:n}})),a={c:r.c,triples:n,stack:i};t.matched=t.matched.concat([a]),r.outs.forEach((n=>{this.addstate(e,n,t)}))}addstate(e,t,n,r=[]){const s=this.stateString(t,n.repeats);if(-1!==r.indexOf(s))return[];r.push(s);const i=this.states[t];if(i instanceof c)return i.outs.reduce(((t,s)=>t.concat(this.addstate(e,s,n,r))),[]);if(i instanceof l){const s=[];t in n.repeats||(n.repeats[t]=0);const a=n.repeats[t];return a<i.max&&Array.prototype.push.apply(s,this.addstate(e,i.outs[0],this.incrmRepeat(n,t),r)),a>=i.min&&a<=i.max&&Array.prototype.push.apply(s,this.addstate(e,i.outs[1],this.resetRepeat(n,t),r)),s}return[e.push(new d(t,n.repeats,n.avail,n.stack,n.matched,n.errors))-1]}resetRepeat(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(parseInt(r)!==t&&(n[r]=e.repeats[r]),n)),{});return new d(e.state,n,e.avail,e.stack,e.matched,[])}incrmRepeat(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(n[r]=parseInt(r)==t?e.repeats[r]+1:e.repeats[r],n)),{});return new d(e.state,n,[...e.avail.keys()].reduce(((t,n)=>(t.set(n,e.avail.get(n)),t)),new Map),e.stack,e.matched,[])}stateString(e,t){const n=Object.keys(t).map((e=>e+":"+t[e])).join(",");return n.length?e+"-"+n:""+e}matchedToResult(e,t,n){let s=[];const i=[],a=[],o=e.reduce(((e,o)=>{let u=0,c=e;for(;u<s.length&&o.stack[u].c===s[u].c&&o.stack[u].i===s[u].i&&o.stack[u].e===s[u].e;)c=c.solutions[s[u].i].expressions[s[u].e],++u;for(;u<o.stack.length;){let e,t;if(u>=s.length&&s.push({}),o.stack[u].c!==s[u].c){const t=[];if(c.type="EachOf"===o.stack[u].c.type?"EachOfSolutions":"OneOfSolutions",c.solutions=t,"min"in o.stack[u].c&&(c.min=o.stack[u].c.min),"max"in o.stack[u].c&&(c.max=o.stack[u].c.max),"annotations"in o.stack[u].c&&(c.annotations=o.stack[u].c.annotations),"semActs"in o.stack[u].c&&(c.semActs=o.stack[u].c.semActs),e=t,s[u].i=null,"semActs"in o.stack[u].c){const e=n.dispatchAll(o.stack[u].c.semActs,"???",c);if(e.length)throw e}}else e=c.solutions;if(o.stack[u].i!==s[u].i){const n=[];e[o.stack[u].i]={type:"EachOf"===o.stack[u].c.type?"EachOfSolution":"OneOfSolution",expressions:n},t=n,s[u].e=-1}else t=e[s[u].i].expressions;if(o.stack[u].e===s[u].e)throw"how'd we get here?";{const e={};t[o.stack[u].e]=e,o.stack[u].e>0&&void 0===t[o.stack[u].e-1]&&-1===a.indexOf(t)&&a.push(t),c=e,s.length=u+1}++u}const l=c;return l.type="TripleConstraintSolutions","min"in o.c&&(l.min=o.c.min),"max"in o.c&&(l.max=o.c.max),l.predicate=o.c.predicate,"valueExpr"in o.c&&(l.valueExpr=o.c.valueExpr),"id"in o.c&&(l.productionLabel=o.c.id),l.solutions=o.triples.map((e=>{const s={type:"TestedTriple",subject:(0,r.rdfJsTerm2Ld)(e.subject),predicate:(0,r.rdfJsTerm2Ld)(e.predicate),object:(0,r.rdfJsTerm2Ld)(e.object)},a=t.get(o.c).find((t=>t.triple===e));return a.res&&Object.keys(a.res).length>0&&(s.referenced=a.res),0===i.length&&"semActs"in o.c&&[].push.apply(i,n.dispatchAll(o.c.semActs,e,s)),s})),"annotations"in o.c&&(l.annotations=o.c.annotations),"semActs"in o.c&&(l.semActs=o.c.semActs),s=o.stack.slice(),e}),{});return i.length?{type:"SemActFailure",errors:i}:(a.forEach((e=>{for(let t=0;t<e.length;++t)null!==e[t]&&void 0!==e[t]||e.splice(t--,1)})),"semActs"in this.shape&&(o.semActs=this.shape.semActs),o)}}m.algorithm="rbenx"},6201:(e,t,n)=>{"use strict";t.G=void 0;const r=n(1101);class s{constructor(e=new Map,t=[],n=[],r){this.avail=e,this.errors=t,this.matched=n,this.expression=r}makeResultsThread(e,t,n,r,i){return new s(new Map(this.avail),n,r.concat({triples:t.map((e=>e.triple))}),Object.assign({type:"TripleConstraintSolutions",predicate:e.predicate},void 0!==e.valueExpr?{valueExpr:e.valueExpr}:{},void 0!==e.id?{productionLabel:e.id}:{},i,{solutions:t.map((e=>e.tested))}))}makeMissingPropertyThread(e,t){return new s(this.avail,this.errors.concat([Object.assign({type:"MissingProperty",property:e.predicate},e.valueExpr?{valueExpr:e.valueExpr}:{})]),t)}}t.G={name:"eval-threaded-nerr",description:"emulation of regular expression engine with error permutations",compile:(e,t,n)=>new i(t,n)};class i{constructor(e,t){this.shape=e,this.index=t,this.outerExpression=e.expression}match(e,t,n,r){const i=t.reduce(((e,t,n)=>(n.forEach((t=>e.add(t.triple))),e)),new Set),a=new s,o=this.matchTripleExpression(this.outerExpression,a,t,n),u=o.reduce(((e,t)=>{if(t.errors.length>0)return e;const n=new Set(i);return t.matched.forEach((e=>{e.triples.forEach((e=>{n.delete(e)}))})),n.forEach((e=>{t.errors.push({type:"ExcessTripleViolation",triple:e})})),null!==e?e:n.size>0?null:t}),null);if(null!==u){let e=u.expression;return void 0!==this.shape.semActs&&(e.semActs=this.shape.semActs),e}return o.length>1?{type:"PossibleErrors",errors:o.reduce(((e,t)=>e.concat([t.errors])),[])}:{type:"Failure",node:e,errors:o[0].errors}}matchTripleExpression(e,t,n,r){if("string"==typeof e){const s=this.index.tripleExprs[e];return this.matchTripleExpression(s,t,n,r)}let s=void 0!==e.min?e.min:1,i=void 0!==e.max?-1===e.max?1/0:e.max:1;switch(e.type){case"OneOf":return this.matchOneOf(e,s,i,t,n,r);case"EachOf":return this.matchEachOf(e,s,i,t,n,r);case"TripleConstraint":return this.matchTripleConstraint(e,s,i,t,n,r);default:throw Error("how'd we get here?")}}matchOneOf(e,t,n,r,a,o){return i.matchRepeat(e,t,n,r,"OneOfSolutions",(t=>{const n=[],r=[];return e.expressions.forEach((e=>{const i=new s(new Map(t.avail),t.errors,t.matched),u=this.matchTripleExpression(e,i,a,o);0===u[0].errors.length?(Array.prototype.push.apply(n,u),u.forEach((e=>{const t=void 0!==i.solution?i.solution.expressions:[];void 0!==e.expression&&t.push(e.expression),delete e.expression,e.solution={type:"OneOfSolution",expressions:t}}))):Array.prototype.push.apply(r,u)})),n.length>0?n:r}),o)}matchEachOf(e,t,n,r,s,a){return i.homogenize(i.matchRepeat(e,t,n,r,"EachOfSolutions",(t=>e.expressions.reduce(((e,t)=>i.homogenize(e.reduce(((e,n)=>{const r=this.matchTripleExpression(t,n,s,a);return r.forEach((e=>{if(0===e.errors.length){const t=void 0!==n.solution?n.solution.expressions.slice():[];void 0!==e.expression&&t.push(e.expression),delete e.expression,e.solution={type:"EachOfSolution",expressions:t}}})),e.concat(r)}),[]))),[t])),a))}matchTripleConstraint(e,t,n,s,i,a){void 0===s.avail.get(e)&&s.avail.set(e,i.get(e).map((e=>e.triple)));const o=s.avail.get(e).splice(0,t);if(!(o.length>=t))return[s.makeMissingPropertyThread(e,s.matched)];const u=[],c={};(void 0!==e.min&&1!==e.min||void 0!==e.max&&1!==e.max)&&(c.min=e.min,c.max=e.max),void 0!==e.semActs&&(c.semActs=e.semActs),void 0!==e.annotations&&(c.annotations=e.annotations);do{const t=o.reduce(((t,n)=>{const o={type:"TestedTriple",subject:(0,r.rdfJsTerm2Ld)(n.subject),predicate:(0,r.rdfJsTerm2Ld)(n.predicate),object:(0,r.rdfJsTerm2Ld)(n.object)},u=i.get(e).find((e=>e.triple===n));void 0!==u.res&&(o.referenced=u.res);const c=s.errors.concat(void 0!==e.semActs?a.dispatchAll(e.semActs,n,o):[]);return c.length>0?t.fail.push({triple:n,tested:o,semActErrors:c}):t.pass.push({triple:n,tested:o,semActErrors:c}),t}),{pass:[],fail:[]});if(0===t.fail.length){const n=0===o.length?s.errors.slice():[],r=s.makeResultsThread(e,t.pass,n,s.matched,c);u.push(r)}else t.fail.forEach((t=>u.push(s.makeResultsThread(e,[t],t.semActErrors,s.matched,c))))}while(s.avail.get(e).length>0&&o.length<n&&(o.push(s.avail.get(e).shift()),1));return u}static matchRepeat(e,t,n,r,s,i,a){let o=0,u=[r];const c={};for((void 0!==e.min&&1!==e.min||void 0!==e.max&&1!==e.max)&&(c.min=e.min,c.max=e.max),void 0!==e.semActs&&(c.semActs=e.semActs),void 0!==e.annotations&&(c.annotations=e.annotations);o<n;++o){let e=[];for(let n=0;n<u.length;++n){const r=u[n],a=i(r);if(a.length>0&&0===a[0].errors.length&&a.forEach((e=>{const t=void 0!==r.expression?r.expression.solutions.slice():[];void 0!==e.solution&&t.push(e.solution),delete e.solution,e.expression=Object.assign({type:s,solutions:t},c)})),0===a.length||a[0].errors.length>0)return o<t?a:u;e=e.concat(a)}u=e}if(u.length>0&&0===u[0].errors.length&&void 0!==e.semActs){const t=[],n=[];u.forEach((r=>{const s=a.dispatchAll(e.semActs,"???",r);0===s.length?t.push(r):(Array.prototype.push.apply(r.errors,s),n.push(r))})),u=t.length>0?t:n}return u}static homogenize(e){return e.reduce(((e,t)=>0===t.errors.length?e.errors?{errors:!1,l:[t]}:{errors:!1,l:e.l.concat(t)}:e.errors?{errors:!0,l:e.l.concat(t)}:e),{errors:!0,l:[]}).l}}},3530:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MapArray=void 0;t.MapArray=class{constructor(){this.data=new Map,this.reduce=(e,t)=>{const n=[...this.data.keys()];for(const r of n)t=e(t,r,this.data.get(r));return t}}add(e,t){if(this.data.has(e)||this.data.set(e,[]),-1!==this.data.get(e).indexOf(t))throw Error(`Error adding [${e}] ${t}; already included`);this.data.get(e).push(t)}get length(){return this.data.size}get keys(){return this.data.keys()}get(e){return this.data.get(e)}empty(e){this.data.set(e,[])}}},6053:(e,t,n)=>{const r=n(5325).default,s=n(713),{Term:i}=s,a=s.default,{isDefaultGraph:o}=n(7141),u=a.defaultGraph(),{rdf:c,xsd:l}=r,p=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,h=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,f={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};class d extends i{equals(){return!1}}const m="  ";class g{constructor(e,t,n,r){if(this.constructor===g)throw new TypeError(`Cannot construct ${new.target.name} instances directly`);const s=["close"].filter((e=>this[e]===g.prototype[e]));if(s.length)throw new TypeError(`${new.target.name} missing methods: ${s.join(", ")}`);this._stream=e,this._indent=t,this._subject=n,this._predicate=r}close(e){this._abstract("close")}_abstract(e){throw new TypeError(`${this.constructor.name}.${e} not implemented`)}}class y extends g{constructor(e,t,n){super(e,"  ",t,n)}close(e){this.used&&(this._stream._write(".\n",e),this.used=!1)}}class x extends g{constructor(e,t,n){super(e,t,n,null)}close(e,t){this._stream._write((this.used?`\n${t._indent}`:"")+"]",e)}}class _ extends g{constructor(e,t,n){super(e,t,null,null),this._members=n,this.leadSpace=!1}close(e,t){this._stream._write(`\n${t._indent})`,e)}}function b(e){let t=f[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function E(e){return e.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&")}e.exports={Writer:class{constructor(e,t){if(this._prefixRegex=/$0^/,e&&"function"!=typeof e.write&&(t=e,e=null),t=t||{},this._lists=t.lists,this._indent=t.indent||"  ",this._checkCorefs=t.checkCorefs||(e=>!1),this._version=t.version||1,this._localName=1===this._version?"[_a-zA-Z][\\-_a-zA-Z0-9]*":"[_a-zA-Z0-9][\\-_a-zA-Z0-9.]*",e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{let e="";this._outputStream={write(n,r,s){t.debug&&console.log({chunk:n,output:e}),e+=n,s&&s()},end:t=>{t&&t(null,e)}},this._endStream=!0}this._nestings=[new y(this,null,null)],/triple|quad/i.test(t.format)?(this._lineMode=!0,this._writeQuad=this._writeQuadLine):(this._lineMode=!1,this._graph=u,this._prefixIRIs=Object.create(null),t.prefixes&&this.addPrefixes(t.prefixes),t.baseIRI&&(this._baseMatcher=new RegExp(`^${E(t.baseIRI)}${t.baseIRI.endsWith("/")?"":"[#?]"}`),this._baseLength=t.baseIRI.length))}get _inDefaultGraph(){return u.equals(this._graph)}_write(e,t){this._outputStream.write(e,"utf8",t)}_writeQuad(e,t,n,r,s){try{r.equals(this._graph)||(this._getNestingForSubject(u),this._write((1===this._nestings.length?"":this._inDefaultGraph?".\n":"\n}\n")+(u.equals(r)?"":`${this._encodeIriOrBlank(r)} {\n`)),this._graph=r);this._nestings.length;let i,[a,o]=this._getNestingForSubject(e);this._lists&&n.value in this._lists?(i="(",this._nestings.push(new _(this,a._indent+m,this._lists[n.value]))):"BlankNode"===n.termType&&this._checkCorefs&&!this._checkCorefs(n)?(i="[",this._nestings.push(new x(this,a._indent+m,n))):i=this._encodeObject(n),o?t.equals(a.predicate)?this._write(`, ${i}`,s):this._write(`${a.used?";":""}\n${a._indent}${this._encodePredicate(a.predicate=t)} ${i}`,s):(a._subject=e,a._predicate=t,this._write(`${this._encodeSubject(e)} ${this._encodePredicate(t)} ${i}`,s)),a.used=!0}catch(e){if(!s)throw e;s(e)}}_getNestingForSubject(e){let t=this._nestings.length>0?this._nestings[this._nestings.length-1]:null;for(;t&&!e.equals(t._subject);)if(t instanceof _){const n=t.leadSpace?" ":"";if(t._subject&&(this._write(`${n}${this._encodeObject(t._subject)}`),t._subject=null,t.leadSpace=!0),0===t._members.length)t=this._closeNesting();else{const r=t._members.shift();r.value in this._lists?(this._write(`${n}(`),this._nestings.push(t=new _(this,t._indent+m,this._lists[r.value])),t.leadSpace=!1):r.equals(e)?(this._write("\n"+t._indent+"["),t._subject=null,this._nestings.push(t=new x(this,t._indent+m,e)),t.leadSpace=!1):t._subject=r}}else{if(!(t instanceof x))return t.close(),[t,!1];t=this._closeNesting()}return[t,e.equals(t._subject)]}_closeNesting(){const e=this._nestings.pop(),t=this._nestings[this._nestings.length-1];return e.close(null,t),t}_finish(){const e=this._nestings.length;return this._getNestingForSubject(u),1!==e&&(this._inDefaultGraph||this._write("\n}\n"),!0)}_writeQuadLine(e,t,n,r,s){delete this._prefixMatch,this._write(this.quadToString(e,t,n,r),s)}quadToString(e,t,n,r){return`${this._encodeSubject(e)} ${this._encodeIriOrBlank(t)} ${this._encodeObject(n)}${r&&r.value?` ${this._encodeIriOrBlank(r)} .\n`:" .\n"}`}quadsToString(e){return e.map((e=>this.quadToString(e.subject,e.predicate,e.object,e.graph))).join("")}_encodeSubject(e){return"Quad"===e.termType?this._encodeQuad(e):this._encodeIriOrBlank(e)}_encodeIriOrBlank(e){if("NamedNode"!==e.termType)return"id"in e?e.id:`_:${e.value}`;let t=e.value;this._baseMatcher&&this._baseMatcher.test(t)&&(t=t.substr(this._baseLength)),p.test(t)&&(t=t.replace(h,b));const n=this._prefixRegex.exec(t);return n?n[1]?this._prefixIRIs[n[1]]+n[2]:t:`<${t}>`}_encodeLiteral(e){let t=e.value;if(p.test(t)&&(t=t.replace(h,b)),e.language)return`"${t}"@${e.language}`;if(this._lineMode){if(e.datatype.value===l.string)return`"${t}"`}else switch(e.datatype.value){case l.string:return`"${t}"`;case l.boolean:if("true"===t||"false"===t)return t;break;case l.integer:if(/^[+-]?\d+$/.test(t))return t;break;case l.decimal:if(/^[+-]?\d*\.\d+$/.test(t))return t;break;case l.double:if(/^[+-]?(?:\d+\.\d*|\.?\d+)[eE][+-]?\d+$/.test(t))return t}return`"${t}"^^${this._encodeIriOrBlank(e.datatype)}`}_encodePredicate(e){return e.value===c.type?"a":this._encodeIriOrBlank(e)}_encodeObject(e){switch(e.termType){case"Quad":return this._encodeQuad(e);case"Literal":return this._encodeLiteral(e);default:return this._encodeIriOrBlank(e)}}_encodeQuad({subject:e,predicate:t,object:n,graph:r}){return`<<${this._encodeSubject(e)} ${this._encodePredicate(t)} ${this._encodeObject(n)}${o(r)?"":` ${this._encodeIriOrBlank(r)}`}>>`}_blockedWrite(){throw new Error("Cannot write because the writer has been closed.")}addQuad(e,t,n,r,s){void 0===n?this._writeQuad(e.subject,e.predicate,e.object,e.graph,t):"function"==typeof r?this._writeQuad(e,t,n,u,r):this._writeQuad(e,t,n,r||u,s)}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}addPrefix(e,t,n){const r={};r[e]=t,this.addPrefixes(r,n)}addPrefixes(e,t){if(!this._prefixIRIs)return t&&t();let n=!1;for(let t in e){let r=e[t];"string"!=typeof r&&(r=r.value),n=!0,this._finish()&&(this._graph=""),this._prefixIRIs[r]=t+=":",this._version>1?this._write(`PREFIX ${t} <${r}>\n`):this._write(`@prefix ${t} <${r}>.\n`)}if(n){let e="",t="";for(const n in this._prefixIRIs)e+=e?`|${n}`:n,t+=(t?"|":"")+this._prefixIRIs[n];e=E(e),this._prefixRegex=new RegExp(`^(?:${t})[^/]*$|^(${e})(${this._localName})$`)}this._write(n?"\n":"",t)}blank(e,t){let n,r,s=e;switch(void 0===e?s=[]:e.termType?s=[{predicate:e,object:t}]:"length"in e||(s=[e]),r=s.length){case 0:return new d("[]");case 1:if(n=s[0],!(n.object instanceof d))return new d(`[ ${this._encodePredicate(n.predicate)} ${this._encodeObject(n.object)} ]`);default:let t="[";for(let i=0;i<r;i++)n=s[i],n.predicate.equals(e)?t+=`, ${this._encodeObject(n.object)}`:(t+=`${(i?";\n  ":"\n  ")+this._encodePredicate(n.predicate)} ${this._encodeObject(n.object)}`,e=n.predicate);return new d(`${t}\n]`)}}list(e){const t=e&&e.length||0,n=new Array(t);for(let r=0;r<t;r++)n[r]=this._encodeObject(e[r]);return new d(`(${n.join(" ")})`)}comment(e){this._finish(),this._write(e+"\n")}end(e){this._finish(),this._write=this._blockedWrite;let t=e&&((n,r)=>{t=null,e(n,r)});if(this._endStream)try{return this._outputStream.end(t)}catch(e){}t&&t()}}}},4865:(e,t,n)=>{const{rdfJsTerm2Ld:r}=n(1101);e.exports=function(e){const t=e.Validator.Start,s=!1,i=n(1101),a=(n(1279),-1),o="http://www.w3.org/2001/XMLSchema#",u=[o+"integer",o+"nonPositiveInteger",o+"negativeInteger",o+"long",o+"int",o+"short",o+"byte",o+"nonNegativeInteger",o+"unsignedLong",o+"unsignedInt",o+"unsignedShort",o+"unsignedByte",o+"positiveInteger"],c=[o+"decimal"].concat(u),l=[o+"float",o+"double"].concat(c),p={};p[o+"integer"]=function(e,t){return e.match(/^[+-]?[0-9]+$/)||t("illegal integer value '"+e+"'"),parseInt(e)},p[o+"decimal"]=function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal integer value '"+e+"'"),parseFloat(e)},p[o+"float"]=function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal integer value '"+e+"'"),parseFloat(e)},p[o+"double"]=function(e,t){return e.match(/[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/)||t("illegal integer value '"+e+"'"),Number(e)};const h={length:function(e,t){return e.length===t},minlength:function(e,t){return e.length>=t},maxlength:function(e,t){return e.length<=t}},f={mininclusive:function(e,t){return e>=t},minexclusive:function(e,t){return e>t},maxinclusive:function(e,t){return e<=t},maxexclusive:function(e,t){return e<t}},d={totaldigits:function(e,t){const n=e.match(/[0-9]/g);return n&&n.length<=t},fractiondigits:function(e,t){const n=e.match(/^[+-]?[0-9]*\.?([0-9]*)$/);return n&&n[1].length<=t}};function m(e,t,n){function r(){this.type="Epsilon"}function s(e,t,n,r,s){this.type="TripleConstraint",this.inverse=!!n,this.negated=!!r,this.predicate=t,void 0!==s&&(this.valueExpr=s)}function i(e){this.type="Choice",this.disjuncts=e}function o(e){this.type="EachOf",this.conjuncts=e}function u(e,t){this.type="SemActs",this.expression=e,this.semActs=t}function c(e){this.type="KleeneStar",this.expression=e}return e?function e(n,l){let p,h;function f(e,t,n){if(void 0===t&&(t=1),void 0===n&&(n=1),1===t&&1===n)return e;const s=n===a?new c(e):g(n-t).reduce((function(t,n,s){return new i(0===s?[e,new r]:[new o([e,t]),new r])}),void 0);return 0!==t?new o(g(t).map((function(t){return e})).concat(s)):s}if("TripleConstraint"===n.type){const e="valueExprRef"in n?l.valueExprDefns[n.valueExprRef]:n.valueExpr;return p=f(new s(t.push(n)-1,n.predicate,n.inverse,n.negated,e),n.min,n.max),n.semActs?new u(p,n.semActs):p}if("OneOf"===n.type)return h=new i(n.expressions.map((function(t){return e(t,l)}))),p=f(h,n.min,n.max),n.semActs?new u(p,n.semActs):p;if("EachOf"===n.type)return h=new o(n.expressions.map((function(t){return e(t,l)}))),p=f(h,n.min,n.max),n.semActs?new u(p,n.semActs):p;if("Inclusion"===n.type){return e(l._index.shapeExprs[n.include].expression,l)}throw Error("unexpected expr type: "+n.type)}(e,n):new r}function g(e){return 0===e?[]:Array(e).join(" ").split(/ /)}function y(e,t,n){t in e||_("expected "+JSON.stringify(e)+" to have a '"+t+"' attribute."),arguments.length>2&&e[t]!==n&&_("expected "+t+" attribute '"+e[t]+"' to equal '"+n+"'.")}function x(){}function _(){const e=Array.prototype.join.call(arguments,""),t=new Error("Runtime error: "+e);throw Error.captureStackTrace(t,_),t}return{construct:function a(c,g,b){if(!(this instanceof a))return new a(c,g,b);this.type="ShExValidator",b=b||{},this.options=b,this.options.or=this.options.or||"someOf",this.options.partition=this.options.partition||"exhaustive","noCache"in b&&b.noCache||(this.known=function(){const e={},t={};return{cached:function(n,r){const s=i.rdfJsTerm2Turtle(n);let a=e[s];if(!a)return e[s]=a=[],void(t[s]=[]);const o=a.indexOf(r);return-1===o?void 0:t[s][o]},remember:function(n,r,s){const a=i.rdfJsTerm2Turtle(n),o=e[a];if(o){if(-1!==o.indexOf(r))throw Error("not expecting duplicate key "+a)}else e[a]=[],t[a]=[];e[a].push(r),t[a].push(s)}}}());const E=this;this.schema=c,this._expect=this.options.lax?x:y,this._optimize={},this.reset=function(){};const v=this.options.regexModule||n(1670);let S=0;const A=b.nextBNode||function(){return"_:b"+S++};this.getAST=function(){return{type:"AST",shapes:Object.keys(this.schema._index.shapeExprs).reduce((function(e,t){return e[t]={type:"ASTshape",expression:m(E.schema._index.shapeExprs[t].expression,[],E.schema)},e}),{})}},this.indexTripleConstraints=function(e){const t=[];return e&&function e(n){"TripleConstraint"===n.type?t.push(n):"OneOf"===n.type||"EachOf"===n.type?n.expressions.forEach((function(t){e(t)})):"Inclusion"===n.type?e(c.productions[n.include]):_("unexpected expr type: "+n.type)}(e),t},this.validateShapeMap=function(e,t,n,r){return t.map((t=>{let s=new Date;const a=this.validate(e,i.ld2RdfJsTerm(t.node),t.shape,n,r);return s=new Date-s,{node:t.node,shape:t.shape,status:"errors"in a?"nonconformant":"conformant",appinfo:a,elapsed:s}}))},this.validate=function(n,s,a,o,u){if(a&&a!==e.Validator.Start||(c.start||_("start production not defined"),a=c.start),"string"!=typeof a)return this._validateShapeExpr(n,s,a,"_: -start-",o,u);a in this.schema._index.shapeExprs||_("shape "+a+" not defined");const l=a;void 0===u&&(u={});const p=i.rdfJsTerm2Turtle(s)+"@"+(l===t?"_: -start-":l);if(p in u)return{type:"Recursion",node:r(s),shape:l};u[p]={point:s,shapeLabel:l};const h=this._validateShapeDecl(n,s,c._index.shapeExprs[l],l,o,u);return delete u[p],h},this._validateShapeDecl=function(e,t,n,r,s,i,a,o){return this._validateShapeExpr(e,t,n.shapeExpr,r,s,i,a,o)},this._lookupShape=function(e){if("shapes"in this.schema&&0!==this.schema.shapes.length){if(e in index.shapeExprs)return index.shapeExprs[e];_("shape "+e+" not found in:\n"+Object.keys(index.shapeExprs||[]).map((e=>"  "+e)).join("\n"))}else _("shape "+e+" not found; no shapes in schema")},this._validateShapeExpr=function(e,t,n,s,i,a){if("known"in this&&this.known.cached(t,n))return this.known.cached(t,n);let o=null;if(""===t)throw Error("validation needs a valid focus node");if("string"==typeof n)o=this._validateShapeDecl(e,t,c._index.shapeExprs[n],n,i,a);else if("NodeConstraint"===n.type){const e=this._errorsMatchingNodeConstraint(t,n,null);o=e.length?{type:"Failure",node:r(t),shape:s,errors:e.map((function(e){return{type:"NodeConstraintViolation",shapeExpr:n}}))}:{type:"NodeConstraintTest",node:r(t),shape:s,shapeExpr:n}}else if("Shape"===n.type)o=this._validateShape(e,t,v.compile(c,n),n,s,i,a);else if("ShapeExternal"===n.type)o=this.options.validateExtern(e,t,s,i,a);else if("ShapeOr"===n.type){const r=[];o={type:"ShapeOrFailure",errors:r};for(let u=0;u<n.shapeExprs.length;++u){const c=n.shapeExprs[u],l=this._validateShapeExpr(e,t,c,s,i,a);if(!("errors"in l)){o={type:"ShapeOrResults",solution:l};break}r.push(l)}}else if("ShapeNot"===n.type){const r=this._validateShapeExpr(e,t,n.shapeExpr,s,i,a);o="errors"in r?{type:"ShapeNotResults",solution:r}:{type:"ShapeNotFailure",errors:r}}else{if("ShapeAnd"!==n.type)throw Error("expected one of Shape{Ref,And,Or} or NodeConstraint, got "+JSON.stringify(n));{const r=[];o={type:"ShapeAndResults",solutions:r};for(let u=0;u<n.shapeExprs.length;++u){const c=n.shapeExprs[u],l=this._validateShapeExpr(e,t,c,s,i,a);if("errors"in l){o={type:"ShapeAndFailure",errors:l};break}r.push(l)}}}return"known"in this&&this.known.remember(t,n,o),o},this._validateShape=function(t,n,i,a,o,u,l){const p=this;void 0===u&&(u=0);const h=new Array(u+1).join("  ");function f(){s&&console.log(h+Array.prototype.join.call(arguments,""))}let d=null;if("startActs"in c&&!this.semActHandler.dispatchAll(c.startActs,null,{}))return null;f("validating <"+n+"> as <"+o+">");const m=[],y=this.indexTripleConstraints(a.expression),x=[];for(let S=0;S<1;++S){function _(e,n){return p.validate(t,e,n,u+1,l)}function b(e,n){return p._validateShapeExpr(t,e,n,o,u,l)}function E(e,t,n,r){return p._errorsMatchingShapeExpr(e,t,n,r)}const w=i.match(t,n,y,v,m,_,b,this.semActHandler,E,null);function v(r,s,i,a){const o=y[r],u={cs:n},c=new e.rdfjs.Store;g.visitTripleConstraint(o,u,A,c,{_maybeSet:()=>{}},p.schema,t,_,b,E);const l=a.length,h=[...c.match()];return a.push.apply(a,h),Array.apply(null,{length:h.length}).map(((e,t)=>t+l))}if("errors"in w){if(x.push({errors:w.errors}),"exhaustive"!==p.options.partition)break;continue}const T={type:"ShapeTest",node:r(n),shape:o};if(Object.keys(w).length>0&&(T.solution=w),!("semActs"in a)||this.semActHandler.dispatchAll(a.semActs,w,T))d=T;else if(x.push({errors:[{type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}]}),"exhaustive"!==p.options.partition)break}if(null===d){const O=[];d={type:"Failure",node:r(n),shape:o,errors:O.concat(1===x.length?x[0].errors:x)}}return s&&m.forEach((function(e){delete e.toString})),"startActs"in c&&0===u&&(d.startActs=c.startActs),f("</"+o+">"),d},this._triplesMatchingShapeExpr=function(e,t,n,r,s){const i=this,a=[],o=[];return e.forEach((function(e){const u=n?e.subject:e.object,c=void 0===t?[]:i._errorsMatchingShapeExpr(u,t,r,s);0===c.length?o.push(e):-1===o.indexOf(e)&&a.push({triple:e,errors:c})})),{hits:o,misses:a}},this._errorsMatchingShapeExpr=function(e,t,n,r){const s=this;if("string"==typeof t)return n?n(e,t):[];if("NodeConstraint"===t.type)return this._errorsMatchingNodeConstraint(e,t,null);if("Shape"===t.type)return void 0===r?[]:r(e,t);if("ShapeOr"===t.type){let i=[];for(let a=0;a<t.shapeExprs.length;++a){const o=s._errorsMatchingShapeExpr(e,t.shapeExprs[a],n,r);if(0===o.length)return o;i=i.concat(o)}return i}if("ShapeAnd"===t.type)return t.shapeExprs.reduce((function(t,i,a){return t.concat(s._errorsMatchingShapeExpr(e,i,n,r,!0))}),[]);throw Error("unknown value expression type '"+t.type+"'")},this._errorsMatchingNodeConstraint=function(e,t,n){const s=[],a=e.value,c="Literal"===e.termType?e.datatype.value:null,m=-1!==u.indexOf(c)?o+"integer":-1!==l.indexOf(c)?c:void 0;function g(){const n=Array.prototype.join.call(arguments,"");return s.push("Error validating "+i.rdfJsTerm2Turtle(e)+" as "+JSON.stringify(t)+": "+n),!1}if("nodeKind"in t&&(-1===["iri","bnode","literal","nonliteral"].indexOf(t.nodeKind)&&g("unknown node kind '"+t.nodeKind+"'"),"BlankNode"===e.termType?"iri"!==t.nodeKind&&"literal"!==t.nodeKind||g("blank node found when "+t.nodeKind+" expected"):"Literal"===e.termType?"literal"!==t.nodeKind&&g("literal found when "+t.nodeKind+" expected"):"bnode"!==t.nodeKind&&"literal"!==t.nodeKind||g("iri found when "+t.nodeKind+" expected")),t.datatype&&t.values&&g("found both datatype and values in "+t),t.datatype&&("Literal"!==e.termType?g("mismatched datatype: "+JSON.stringify(r(e))+" is not a literal with datatype "+t.datatype):e.datatype.value!==t.datatype?g("mismatched datatype: "+e.datatype.value+" !== "+t.datatype):m?function(e,t,n){const r={integer:{min:-1/0,max:1/0},decimal:{min:-1/0,max:1/0},float:{min:-1/0,max:1/0},double:{min:-1/0,max:1/0},nonPositiveInteger:{min:-1/0,max:0},negativeInteger:{min:-1/0,max:-1},long:{min:-0x8000000000000000,max:0x8000000000000000},int:{min:-2147483648,max:2147483647},short:{min:-32768,max:32767},byte:{min:-128,max:127},nonNegativeInteger:{min:0,max:1/0},unsignedLong:{min:0,max:0x10000000000000000},unsignedInt:{min:0,max:4294967295},unsignedShort:{min:0,max:65535},unsignedByte:{min:0,max:255},positiveInteger:{min:1,max:1/0}}[t.substr(o.length)];if(!r)throw Error("unexpected datatype: "+t);e<r.min?n('"'+e+'"^^<'+t+"> is less than the min:",r.min):e>r.max&&n('"'+e+'"^^<'+t+"> is greater than the max:",r.min)}(p[m](a,g),t.datatype,g):t.datatype===o+"boolean"?"true"!==a&&"false"!==a&&"1"!==a&&"0"!==a&&g("illegal boolean value: "+a):t.datatype===o+"dateTime"&&(a.match(/^[+-]?\d{4}-[01]\d-[0-3]\dT[0-5]\d:[0-5]\d:[0-5]\d(\.\d+)?([+-][0-2]\d:[0-5]\d|Z)?$/)||g("illegal dateTime value: "+a))),t.values&&("Literal"===e.termType&&t.values.reduce(((t,n)=>{if(t)return!0;const s=r(e);return"Language"===n.type?n.languageTag===s.language:"object"==typeof n&&"value"in n&&!(n.value!==a||"type"in n&&n.type!==e.datatype.value||"language"in n&&n.language!==e.language)}),!1)||-1!==t.values.indexOf(a)||t.values.some((function(t){if("object"==typeof t&&!("value"in t)){"type"in t||_("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const s=/(Iri|Literal|Language)(Stem)?(Range)?/,i=t.type.match(s);i||_("expected type attribute '"+t.type+"' to match "+s+".");const[a,o,u,c]=i;if("Iri"===o){if("NamedNode"!==e.termType)return!1}else if("Literal"!==e.termType)return!1;function n(e,n,r){return-1!==["Literal","Language"].indexOf(o)?-1!==["LiteralStem","LiteralStemRange"].indexOf(t.type)?r(e.value,n):-1!==["LanguageStem","LanguageStemRange"].indexOf(t.type)?r(e.language||null,n):g("literal "+JSON.stringify(e)+" not comparable with non-literal "+n):-1===["IriStem","IriStemRange"].indexOf(t.type)?g("nonliteral "+JSON.stringify(e)+" not comparable with literal "+JSON.stringify(n)):r(e.value,n)}function r(e,r){return n(e,r,((e,n)=>"LanguageStem"===t.type||"LanguageStemRange"===t.type?null!==e&&(e===n||""===n||"-"===e[n.length]):e.startsWith(n)))}if(isTerm(t.stem)){if(!r(e,t.stem))return!1}else y(t.stem,"type","Wildcard");return!t.exclusions||!t.exclusions.some((function(t){if(isTerm(t))return n(e,t,((e,t)=>e===t));{"type"in t||_("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const n=["IriStem","LiteralStem","LanguageStem"];return-1===n.indexOf(t.type)&&_("expected type attribute '"+t.type+"' to be in '"+n+"'."),r(e,t.stem)}}))}}))||g("value "+a+" not found in set "+JSON.stringify(t.values))),"pattern"in t){const e="flags"in t?new RegExp(t.pattern,t.flags):new RegExp(t.pattern);a.match(e)||g("value "+a+" did not match pattern "+t.pattern)}Object.keys(h).forEach((function(e){e in t&&!h[e](a,t[e])&&g("facet violation: expected "+e+" of "+t[e]+" but got "+a)})),Object.keys(f).forEach((function(e){e in t&&(m?f[e](p[m](a,g),t[e])||g("facet violation: expected "+e+" of "+t[e]+" but got "+a):g("facet violation: numeric facet "+e+" can't apply to "+a))})),Object.keys(d).forEach((function(e){e in t&&(m===o+"integer"||m===o+"decimal"?d[e](""+p[m](a,g),t[e])||g("facet violation: expected "+e+" of "+t[e]+" but got "+a):g("facet violation: numeric facet "+e+" can't apply to "+a))}));const x={type:null,focus:r(e),shapeExpr:t};return s.length?(x.type="NodeConstraintViolation",x.errors=s):x.type="NodeConstraintTest",x},this.semActHandler={handlers:{},results:{},register:function(e,t){this.handlers[e]=t},dispatchAll:function(e,t,n){const r=this;return e.reduce((function(e,s){if(e&&s.name in r.handlers){const i="code"in s?s.code:E.options.semActs[s.name],a="extensions"in n&&s.name in n.extensions,o=a?n.extensions[s.name]:{};return e=e&&r.handlers[s.name].dispatch(i,t,o),!a&&Object.keys(o).length>0&&("extensions"in n||(n.extensions={}),n.extensions[s.name]=o),e}return e}),!0)}}},options:{or:{oneOf:"exactly one disjunct must pass",someOf:"one or more disjuncts must pass",firstOf:"disjunct evaluation stops after one passes"},partition:{greedy:"each triple constraint consumes all triples matching predicate and object",exhaustive:"search all mappings of triples to triple constriant"}}}}},1670:(e,t,n)=>{const{rdfJsTerm2Ld:r}=n(1101),s=function(){n(1101);const e="<span class='keyword' title='Split'>|</span>",t="<span class='keyword' title='Repeat'>×</span>",s="<span class='keyword' title='Match'>␃</span>",i=-1;function a(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}return{name:"eval-simple-1err",description:"simple regular expression engine with n out states",compile:function(n,o){const u=o.expression;return function(){const r=[],a=h(s,[]);let o=a;let l;if(u){const e=p(u,[]);f(e.tail,a),o=e.start}return{algorithm:"rbenx",end:a,states:r,start:o,match:c};function p(s,a){let o,u,c;function d(e,n){return null!=s.min&&1!==s.min||null!=s.max&&1!==s.max?(o=h(t,[e]),r[o].expr=s,r[o].min="min"in s?s.min:1,r[o].max="max"in s?s.max===i?1/0:s.max:1,f(n,o),{start:o,tail:[o]}):{start:e,tail:n}}if("TripleConstraint"===s.type)return o=h(s,[]),r[o].stack=a,{start:o,tail:[o]};if("OneOf"===s.type)return c=[],u=[],s.expressions.forEach((function(e,t){l=p(e,a.concat({c:s,e:t})),u.push(l.start),c=c.concat(l.tail)})),o=h(e,u),r[o].expr=s,d(o,c);if("EachOf"===s.type)return s.expressions.forEach((function(e,t){l=p(e,a.concat({c:s,e:t})),0===t?o=l.start:f(c,l.start),c=l.tail})),d(o,c);if("Inclusion"===s.type){return p(n.productions[s.include],a)}runtimeError("unexpected expr type: "+s.type)}function h(e,t,n){const s=r.length;return r.push({c:e,outs:t}),n&&(r[s].negated=!0),s}function f(e,t){e.forEach((e=>{r[e].outs.push(t)}))}}();function c(r,s,o,u,c,p,h,f,d,m){const g=this;let y=[],x=[];function _(e,t){const n=Object.keys(t).map((e=>e+":"+t[e])).join(",");return n.length?e+"-"+n:""+e}function b(n,r,s,i){i=i||[];const a=_(r,s.repeats);if(-1!==i.indexOf(a))return;i.push(a);const o=g.states[r];if(o.c===e)return o.outs.reduce(((e,t,r)=>e.concat(b(n,t,s,i))),[]);if(o.c===t){let e=[];r in s.repeats||(s.repeats[r]=0);const t=s.repeats[r];return t<o.max&&(e=e.concat(b(n,o.outs[0],function(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(n[r]=parseInt(r)==t?e.repeats[r]+1:e.repeats[r],n)),{});return{state:e.state,repeats:n,matched:e.matched,avail:e.avail.slice(),stack:e.stack}}(s,r),i))),t>=o.min&&t<=o.max&&(e=e.concat(b(n,o.outs[1],function(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(parseInt(r)!==t&&(n[r]=e.repeats[r]),n)),{});return{state:e.state,repeats:n,matched:e.matched,avail:e.avail.slice(),stack:e.stack}}(s,r),i))),e}return[n.push({state:r,repeats:s.repeats,avail:s.avail.map((e=>e.slice())),stack:s.stack,matched:s.matched,errors:s.errors})-1]}if(1===g.states.length)return l([],o,c,p,h,f,d);let E=null;for(b(y,this.start,{repeats:{},avail:[],matched:[],stack:[],errors:[]});y.length;){x.length=0,m&&m.push({threads:[]});for(let e=0;e<y.length;++e){const n=y[e];if(n.state===g.end)continue;const r=g.states[n.state],s=x.length,a=o.indexOf(r.c);let l="min"in r.c?r.c.min:1,p="max"in r.c?r.c.max===i?1/0:r.c.max:1;"negated"in r.c&&r.c.negated&&(l=p=0),void 0===n.avail[a]&&(n.avail[a]=u(a,l,p,c));const h=n.avail[a].splice(0,p);if(h.length>=l)do{const e=g.states.map((e=>e.c===t?e.expr:null)),s=r.stack.map((t=>{let r=n.repeats[e.indexOf(t.c)];return void 0===r?r=0:r-=1,{c:t.c,e:t.e,i:r}})),i={c:r.c,triples:h,stack:s};n.matched=n.matched.concat(i),r.outs.forEach((e=>{b(x,e,n)}))}while(n.avail[a].length>0&&h.length<p&&(h.push(n.avail[a].shift()),1));m&&m[m.length-1].threads.push({state:y[e].state,to:x.slice(s).map((e=>_(e.state,e.repeats)))})}if(0===x.length&&null===E)return v(S(y,g.states));const e=y;y=x,x=e;const n=y.reduce(((e,t)=>null!==e?e:t.state===g.end?t:null),null);n&&(E=n)}if(null===E)return v(S(y,g.states));function v(e){return{type:"Failure",node:s,errors:e}}function S(e,t){const r=t[t.length-1];return e.map((e=>{const t=a({},g.states[e.state].c.valueExpr);if("reference"in t){const e=t.reference;"BlankNode"===e.termType&&(t.reference=n.shapes[e])}return a({type:r.c.negated?"NegatedProperty":e.state===g.end?"ExcessTripleViolation":"MissingProperty",property:r.c.predicate},Object.keys(t).length>0?{valueExpr:t}:{})}))}return"errors"in E.matched?E.matched:l(E.matched,o,c,p,h,f,d)}function l(e,t,n,s,i,a,u){let c=[];const l=[],p=[],h=e.reduce(((e,t)=>{let o,h=0,f=e;for(;h<c.length&&t.stack[h].c===c[h].c&&t.stack[h].i===c[h].i&&t.stack[h].e===c[h].e;)f=f.solutions[c[h].i].expressions[c[h].e],++h;for(;h<t.stack.length;){if(h>=c.length&&c.push({}),t.stack[h].c!==c[h].c){if(o=[],f.type="EachOf"===t.stack[h].c.type?"EachOfSolutions":"OneOfSolutions",f.solutions=o,"min"in t.stack[h].c&&(f.min=t.stack[h].c.min),"max"in t.stack[h].c&&(f.max=t.stack[h].c.max),"annotations"in t.stack[h].c&&(f.annotations=t.stack[h].c.annotations),"semActs"in t.stack[h].c&&(f.semActs=t.stack[h].c.semActs),f=o,c[h].i=null,"semActs"in t.stack[h].c&&!a.dispatchAll(t.stack[h].c.semActs,"???",f))throw{type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}}else f=f.solutions;if(t.stack[h].i!==c[h].i?(o=[],f[t.stack[h].i]={type:"EachOf"===t.stack[h].c.type?"EachOfSolution":"OneOfSolution",expressions:o},f=o,c[h].e=null):f=f[c[h].i].expressions,t.stack[h].e===c[h].e)throw"how'd we get here?";o={},f[t.stack[h].e]=o,t.stack[h].e>0&&void 0===f[t.stack[h].e-1]&&-1===p.indexOf(f)&&p.push(f),f=o,c.length=h+1,++h}return f.type="TripleConstraintSolutions","min"in t.c&&(f.min=t.c.min),"max"in t.c&&(f.max=t.c.max),f.predicate=t.c.predicate,"valueExpr"in t.c&&(f.valueExpr=t.c.valueExpr),"productionLabel"in t.c&&(f.productionLabel=t.c.productionLabel),f.solutions=t.triples.map((e=>{const o=n[e],c={type:"TestedTriple",subject:r(o.subject),predicate:r(o.predicate),object:r(o.object)};function p(e,t,n){const r=n(e,t);if("errors"in r){const n={type:"ReferenceError",focus:e,shape:t,errors:r};return"BlankNode"===shapeLabel.termType&&(n.referencedShape=t),[n]}return("solution"in r&&0!==Object.keys(r.solution).length||"Recursion"===r.type)&&(c.referenced=r),[]}if("valueExpr"in f){const e=u(f.inverse?o.subject:o.object,f.valueExpr,(function(e,t){return p(e,t,s)}),(function(e,t){return p(e,t,i)}));"errors"in e&&[].push.apply(l,e.errors)}return 0===l.length&&"semActs"in t.c&&!a.dispatchAll(t.c.semActs,o,c)&&l.push({type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}),c})),"annotations"in t.c&&(f.annotations=t.c.annotations),"semActs"in t.c&&(f.semActs=t.c.semActs),c=t.stack.slice(),e}),{});return l.length?{type:"SemActFailure",errors:l}:(p.forEach((e=>{for(let t=0;t<e.length;++t)null!==e[t]&&void 0!==e[t]||e.splice(t--,1)})),"semActs"in o&&(h.semActs=o.semActs),h)}}}}();e.exports=s},1961:e=>{const t={collapseSpaces:function(e){return e.replace(/  +/g," ")},trimQuotes:function(e){return void 0===e||e.length<2||'"'!==e[0]&&"'"!==e[0]||e[0]!==e[e.length-1]?e:e.substring(1,e.length-1)},unescapeMetaChars:function(e){return e.replace(/\\([\/^$])/g,"$1")}};e.exports=t},1386:(e,t,n)=>{const r=function(){const e=n(9445),t=n(7521);n(1961);function r(e){if(void 0===e)throw Error("Invalid extension function: "+e+"!");const t=(e=e.trim()).indexOf("(",0),n=e.lastIndexOf(")");if(t<2||n<4||n<=t+1||n!=e.length-1)throw Error("Invalid extension function: "+e+"!");return{name:e.substring(0,t),args:e.substring(t+1,n)}}return{lift:function(n,s,i){const a=r(n);switch(a.name){case"hashmap":return e.lift(n,s,i,a.args);case"regex":return t.lift(n,s,i,a.args);case"test":return n;default:throw Error("Unknown extension: "+n+"!")}},lower:function(n,s,i){const a=r(n);switch(a.name){case"hashmap":return e.lower(n,s,i,a.args);case"regex":return t.lower(n,s,i,a.args);case"test":return n;default:throw Error("Unknown extension: "+n+"!")}}}}();e.exports=r},9445:(e,t,n)=>{const r=function(){const e=n(1961);function t(e,t){if(void 0===t||0===t.length)throw Error("Hashmap extension requires a variable name and map as arguments, but found none!");const n=/^[ ]*([\w:<>]+)[ ]*,[ ]*({.*)$/s.exec(t);if(null===n||n.length<3)throw Error("Hashmap extension requires a variable name and map as arguments, but found: "+e+"!");const r=n[1],s=n[2];let i;try{if(i=JSON.parse(s),0===Object.keys(i).length)throw Error("Empty hashmap!")}catch(t){throw Error("Hashmap extension unable to parse map in "+e+"!"+t.message)}const a=Object.values(i);if(a.length!=[...new Set(a)].length)throw Error("Hashmap extension requires unique key/value pairs!");return{varName:r,hash:i}}function r(e,t){const n=e.match(/^([\w]+):(.*)$/);if(null!==n&&3==n.length){const r=n[1],s=n[2];if(0===r.length||0===s.length)throw Error("Hashmap extension given invalid target variable name "+e);if(!(r in t))throw Error("Hashmap extension given undefined variable prefix "+r);expandedName=t[r]+s}else expandedName=e;return expandedName}return{lift:function(n,s,i,a){const o=t(n,a),u=r(o.varName,i),c=e.trimQuotes(s);if(0===c.length)throw Error("Hashmap extension has no input");return{[u]:o.hash[c]}},lower:function(n,s,i,a){const o=t(n,a),u=r(o.varName,i),c=e.trimQuotes(s.get(u));if(void 0===c)throw Error("Unable to find mapped value for "+o.varName);const l=function(e,t){const n=Object.keys(e).find((n=>t===e[n]));if(!n)throw Error("Hashmap extension was unable to invert the value "+t+" with map "+JSON.stringify(e,{depth:null})+"!");return n}(o.hash,c);return 0!==l.length?e.unescapeMetaChars(e.collapseSpaces(l)):l}}}();e.exports=r},7521:(e,t,n)=>{const r=function(){const e=n(1961),t="(\\?<(?:[a-zA-Z:]+|<[^>]+>)>)";function r(t,n,r){const s=function(e,t){const n=e.match(/^ *(?:<([^>]*)>|([^:]*):([^ ]*)) *$/);if(null===n)throw Error('variable "'+e+'" did not match expected pattern!');let r;if(n[1])r=n[1];else{if(!(n[2]in t))throw Error("Unknown prefix "+n[2]+' in "'+e+'"!');r=t[n[2]]+n[3]}return r}(e.unescapeMetaChars(t.substr(2,t.length-3)),r);if(s in n)throw Error("unable to process prefixes in "+s);return n.push(s),s}function s(e){if(/^\s*\/.*\/\s*$/.test(e)&&(e=/^\s*\/(.*)\/\s*$/.exec(e)[1]).length<1)throw Error(mapDirective+" is missing the required regex pattern");return e}return{lift:function(e,n,i,a){a=s(a);const o=[],u=a.replace(RegExp(t,"g"),(function(e,t,n,s){return r(t,o,i),""}));if(0===o.length)throw Error("Found no capture variable in "+e+"!");let c;try{c=n.match(RegExp(u))}catch(t){throw Error("Error pattern matching "+e+" with "+n+": "+t.message)}if(!c)throw Error(e+' found no match for input "'+n+'"!');const l={};for(let e=1;e<c.length;++e)l[o[e-1]]=c[e];return l},lower:function(n,i,a,o){o=s(o);const u=[];let c=!1,l=o.replace(RegExp("\\("+t+"[^)]+\\)","g"),(function(t,s,o,l){c=!0;const p=r(s,u,a),h=i.get(p);if(void 0===h)throw Error("Unable to process "+n+' because variable "'+p+'" was not found!');return e.trimQuotes(h)}));if(!c)throw Error("Found no capture variable in "+n+"!");return l=e.collapseSpaces(l),e.unescapeMetaChars(l)}}}();e.exports=r},3146:(e,t,n)=>{"use strict";const{DataFactory:r}=n(1194),s=new r;function i(e){if("_"===e[0]&&":"===e[1])return s.blankNode(e.substr(2));if('"'===e[0]||"'"===e[0]){const t=e.lastIndexOf(e[0]);if(-1===t)throw new Error(`no close ${e[0]}: ${e}`);const n=e.substr(1,t-1).replace(/\\"/g,'"'),r=e.length===t+1?void 0:"@"===e[t+1]?e.substr(t+2):function(t){if("^"!==e[t]||"^"!==e[t+1])throw new Error(`garbage after closing ": ${e}`);return s.namedNode(e.substr(t+2))}(t+1);return s.literal(n,r)}return s.namedNode(e)}e.exports={n3idQuad2RdfJs:function(e,t,n,r){const a=r?i(r):s.defaultGraph();return s.quad(i(e),i(t),i(n),a)},n3idTerm2RdfJs:i}},1279:(e,t,n)=>{const{rdfJsTerm2Ld:r}=n(1101);e.exports=function(e){n(1101);const t=n(1386),s=(n(7141),n(713).default,n(4865)(e)),i=n(3146),a="http://shex.io/extensions/Map/#",o=/^ *(?:<([^>]*)>|([^:]*):([^ ]*)) *$/,u=-1,c=50;function l(e){if("object"!=typeof e)return e;const t='"'+e.value+'"';return"language"in e?t+"@"+e.language:"type"in e?t+"^^"+e.type:t}function p(e,t){const n=/(?:^|"\^\^)([^:\/#"'\^_]*):[^\/]*$/.exec(e);let r,s,i;return n&&(r=n[1],s=t[r],i=n.index),void 0===s?e:0===i?s+e.substr(r.length+1):e.substr(0,i+3)+s+e.substr(i+r.length+4)}return{register:function(n,s){if(void 0===s||!("ShExTerm"in s))throw Error("SemAct extensions must be called with register(validator, {ShExTerm, ...)");const h="_prefixes"in n.schema?n.schema._prefixes:{};return n.semActHandler.results[a]={},n.semActHandler.register(a,{dispatch:function(e,s,i){function u(e){const t=Error(e);throw Error.captureStackTrace(t,u),t}const c=function(t,s){if(!t)throw Error("Invocation error: "+a+' code "'+e+"\" didn't match "+o);const c=function(t){return"string"==typeof t?t:t[1]?t[1]:t[2]in h?h[t[2]]+t[3]:u("unknown prefix "+t[2]+' in "'+e+'".')}(t),l=r(s);n.semActHandler.results[a][c]=l,i[c]=l};if(/.*[(].*[)].*$/s.test(e)){const n=t.lift(e,s.object.value,h);for(key in n)c(key,RdfJs.DataFactory.literal(n[key]))}else{c(e.match(o),s.node||s.object)}return[]}}),{results:n.semActHandler.results[a],binder:function(e){let t=[];const n={};function r(e,t){for(let n in e)Array.isArray(e[n])?r(e[n],t):Object.keys(t).forEach((r=>{if(r in e[n])throw Error("unexpected duplicate key: "+r+" in "+JSON.stringify(e[n]));e[n][r]=t[r]}))}return function e(t){const n=[],s=[],i=Object.keys(t).reduce(((r,i)=>{let a=null;return"object"!=typeof t[i]||"value"in t[i]?a=function(e,t){const n={};return n[e]=t,n}(i,1):(a=e(t[i]),Array.isArray(t[i])?n.push(i):s.push(i)),function(e,t){const n=Object.assign({},e);return Object.keys(t).reduce(((e,n)=>{const r=n in t?t[n]:1;return e[n]=n in e?e[n]+r:r,e}),n)}(r,a)}),{});n.length>0&&(s.forEach((e=>{const s=Object.keys(t[e]).filter((e=>1===i[e]));if(s.length){const i=s.reduce(((n,r)=>(n[r]=t[e][r],n)),{});n.forEach((e=>{r(t[e],i)}))}})),s.reverse(),s.forEach((e=>{t.splice(e,1)})));return i}(e),e=Array.isArray(e)?function e(t){const n=t.reduce(((t,n)=>t.concat(Array.isArray(n)?e(n):n)),[]);return 1===n.length?n[0]:n}(e):[e],{get:function(r){if(null===t)return;if(r in n)return n[r];const s=t.slice();let i=u(s);for(;!(r in i);){let e;for(;!Array.isArray(i);)e=s.pop(),i=o(s);if(i.length===e+1)return void(t=null);s.push(e+1),i=u(s)}t=s.slice();const a=i[r];return delete i[r],a;function o(t){return t.reduce((function(e,t){return e[t]}),e)}function u(e){for(;Array.isArray(o(e));)e.push(0);return o(e)}}}},trivialMaterializer:function(t,r){let i=0;const a=t._index||s.ShExUtil.index(t);return r=r||function(){return"_:b"+i++},{materialize:function(i,o,u,c){u=u&&u!==n.Start?-1!==t.shapes.indexOf(u)?u:this._lookupShape(u):t.start,c=c||new e.rdfjs.Store;const l={cs:o||r()},p=s.ShExUtil.Visitor(),h=p.visitShapeRef;return p.visitShapeRef=function(e){return this.visitShapeDecl(a.shapeExprs[e],e),h.call(p,e)},p.visitValueRef=function(e){return this.visitTripleExpr(t.shapes[e],e),this._visitValue(e)},p.visitTripleConstraint=function(e){f(e,l,r,c,this,t,i)},p.visitShapeExpr(u,"_: -start-"),c}}},visitTripleConstraint:f};function f(e,n,r,s,h,f,d,m,g,y){function x(e,t,n){return s.addQuad(i.n3idQuad2RdfJs(e,t,n)),e}const _=(e.semActs||[]).filter((function(e){return e.name===a}));if(_.length)_.forEach((function(r){const s=r.code,i=s.match(o);let a;if(i){const e=i[1]?i[1]:p(i[2]+":"+i[3],f._prefixes),t=l(d.get(e));void 0!==t&&(a=t)}void 0===a&&/[ a-zA-Z0-9]+\(/.test(s)&&(a=t.lower(s,d,f.prefixes)),void 0===a||(e.inverse?x(a,e.predicate,n.cs):x(n.cs,e.predicate,a))}));else if("string"!=typeof e.valueExpr&&"values"in e.valueExpr&&1===e.valueExpr.values.length)e.inverse?x(e.valueExpr.values[0],e.predicate,n.cs):x(n.cs,e.predicate,l(e.valueExpr.values[0]));else{const t=n.cs;let s="max"in e?e.max===u?1/0:e.max:1;s>c&&(s=c),m||(s=1);for(let a=0;a<s;++a){if(n.cs=r(),m){if("errors"in y(i.n3idTerm2RdfJs(n.cs),e.valueExpr,m,g))break}e.inverse?x(n.cs,e.predicate,t):x(t,e.predicate,n.cs)}h._maybeSet(e,{type:"TripleConstraint"},"TripleConstraint",["inverse","negated","predicate","valueExpr","min","max","annotations","semActs"]),n.cs=t}}},done:function(e){0===Object.keys(e.semActHandler.results[a]).length&&delete e.semActHandler.results[a]},materializer:s,url:a,extension:{hashmap:n(9445),regex:n(7521)},extensions:n(1386),utils:n(1961)}}},9709:(e,t,n)=>{ShExWebApp=function(){const e=n(6261);return Object.assign({},{ShExTerm:n(1101),Util:n(9443),RdfJsDb:n(319).ctor,Validator:n(7403).ShExValidator,Writer:n(95),Loader:n(2863),Parser:n(931),"eval-simple-1err":n(8986).G,"eval-threaded-nerr":n(6201).G,ShapeMap:e,ShapeMapParser:e.Parser,JsYaml:n(9431),DcTap:n(5281).DcTap,Map:n(1279),StringToRdfJs:n(3146),NestedTurtleWriter:n(6053)})}(),e.exports=ShExWebApp},3486:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sparqlOrder=t.Start=void 0,t.Start={term:"START"},t.sparqlOrder=function(e,t){const[n,s]=[r(e),r(t)];return n===s?e.value.localeCompare(t.value):n-s};const n={BlankNode:1,Literal:2,NamedNode:3};function r(e){let t=e.termType;if("Quad"===t||"Variable"===t||"DefaultGraph"===t)throw Error(`no defined SPARQL order for ${t} ${e.value}`);return n[t]}},319:(e,t,n)=>{const r=function(){const e=n(3486);return{name:"neighborhood-rdfjs",description:"Implementation of @shexjs/neighborhood-api which gets data from an @rdfjs/dataset",ctor:function(t,n){return{getNeighborhood:function(r,s){let i;n&&(i=new Date,n.start(!1,r,s));const a=[...t.match(r,null,null,null)].sort(((t,n)=>e.sparqlOrder(t.object,n.object)));if(n){const e=new Date;n.end(a,e.valueOf()-i.valueOf()),i=e}n&&n.start(!0,r,s);const o=[...t.match(null,null,r,null)].sort(((t,n)=>e.sparqlOrder(t.object,n.object)));return n&&n.end(o,(new Date).valueOf()-i.valueOf()),{outgoing:a,incoming:o}},getSubjects:function(){return t.getSubjects()},getPredicates:function(){return t.getPredicates()},getObjects:function(){return t.getObjects()},getQuads:function(){return t.getQuads.apply(t,arguments)},get size(){return t.size}}}}}();e.exports=r},2839:(e,t,n)=>{const r=n(9443),s=n(1014),i="http://www.w3.org/2001/XMLSchema#",a=i+"integer",o=i+"decimal",u=i+"double",c=i+"boolean",l=/^[a-z][a-z0-9+.-]*:/i;function p(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function h(){const e={};for(let t=0;t<arguments.length;t+=2)e[arguments[t]]=arguments[t+1];return e}function f(e,t){return h("@value",e,"@type",t)}const d={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},m={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"};function g(e,t){return e=e.substring(t,e.length-t),h("@value",r.unescapeText(e,d))}function y(e,t,n){const s=e.indexOf(":");return t.expandPrefix(e.substr(0,s),n)+r.unescapeText(e.substr(s+1),m)}const{JisonParser:x,o:_}=n(9041),b=[1,7],E=[1,16],v=[1,11],S=[1,14],A=[1,25],w=[1,24],T=[1,21],O=[1,22],k=[1,23],N=[1,28],I=[1,26],F=[1,27],L=[1,29],C=[1,12],j=[1,13],$=[1,15],R=[4,9],D=[16,19,20,21],M=[2,25],P=[16,19,20,21,37],Q=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],G=[4,9,16,19,20,21,37,43,74,75],B=[4,9,43],J=[29,46,80,81,82],U=[4,9,42,43],V=[1,59],z=[46,79,80,81,82],q=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],Z=[1,94],K=[1,85],X=[1,86],W=[1,87],H=[1,90],Y=[1,91],ee=[1,92],te=[1,93],ne=[1,95],re=[33,48,49,50,53,54,55,56,63],se=[4,9,37,65],ie=[1,99],ae=[9,37],oe=[9,65];t.HW=class extends x{constructor(e={},t=new ce(e)){super(e,t),this.symbols_={error:2,shapeMap:3,EOF:4,pair:5,Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star:6,QGT_COMMA_E_Opt:7,O_QGT_COMMA_E_S_Qpair_E_C:8,GT_COMMA:9,nodeSelector:10,statusAndShape:11,Qreason_E_Opt:12,QjsonAttributes_E_Opt:13,reason:14,jsonAttributes:15,GT_AT:16,Qstatus_E_Opt:17,shapeSelector:18,ATSTART:19,ATPNAME_NS:20,ATPNAME_LN:21,status:22,objectTerm:23,triplePattern:24,IT_SPARQL:25,string:26,nodeIri:27,shapeIri:28,START:29,subjectTerm:30,BLANK_NODE_LABEL:31,literal:32,GT_LCURLEY:33,IT_FOCUS:34,nodePredicate:35,O_QobjectTerm_E_Or_QIT___E_C:36,GT_RCURLEY:37,O_QsubjectTerm_E_Or_QIT___E_C:38,IT__:39,GT_NOT:40,GT_OPT:41,GT_DIVIDE:42,GT_DOLLAR:43,O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C:44,jsonValue:45,APPINFO_COLON:46,APPINFO_SPACE_COLON:47,IT_false:48,IT_null:49,IT_true:50,jsonObject:51,jsonArray:52,INTEGER:53,DECIMAL:54,DOUBLE:55,STRING_LITERAL2:56,Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt:57,O_QGT_COMMA_E_S_QjsonMember_E_C:58,jsonMember:59,Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star:60,O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C:61,STRING_LITERAL2_COLON:62,GT_LBRACKET:63,Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt:64,GT_RBRACKET:65,O_QGT_COMMA_E_S_QjsonValue_E_C:66,Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star:67,O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C:68,rdfLiteral:69,numericLiteral:70,booleanLiteral:71,Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt:72,O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C:73,LANGTAG:74,GT_DTYPE:75,STRING_LITERAL1:76,STRING_LITERAL_LONG1:77,STRING_LITERAL_LONG2:78,IT_a:79,IRIREF:80,PNAME_LN:81,PNAME_NS:82,$accept:0,$end:1},this.terminals_={2:"error",4:"EOF",9:"GT_COMMA",16:"GT_AT",19:"ATSTART",20:"ATPNAME_NS",21:"ATPNAME_LN",25:"IT_SPARQL",29:"START",31:"BLANK_NODE_LABEL",33:"GT_LCURLEY",34:"IT_FOCUS",37:"GT_RCURLEY",39:"IT__",40:"GT_NOT",41:"GT_OPT",42:"GT_DIVIDE",43:"GT_DOLLAR",46:"APPINFO_COLON",47:"APPINFO_SPACE_COLON",48:"IT_false",49:"IT_null",50:"IT_true",53:"INTEGER",54:"DECIMAL",55:"DOUBLE",56:"STRING_LITERAL2",62:"STRING_LITERAL2_COLON",63:"GT_LBRACKET",65:"GT_RBRACKET",74:"LANGTAG",75:"GT_DTYPE",76:"STRING_LITERAL1",77:"STRING_LITERAL_LONG1",78:"STRING_LITERAL_LONG2",79:"IT_a",80:"IRIREF",81:"PNAME_LN",82:"PNAME_NS"},this.productions_=[0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],this.table=[{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:b,26:20,27:8,30:9,31:E,32:10,33:v,46:S,48:A,50:w,53:T,54:O,55:k,56:N,69:17,70:18,71:19,76:I,77:F,78:L,80:C,81:j,82:$},{1:[3]},{1:[2,1]},_(R,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},_(D,[2,19]),_(D,[2,20]),{26:36,56:N,76:I,77:F,78:L},_(D,M,{26:37,56:N,76:I,77:F,78:L}),_(P,[2,27]),_(P,[2,28]),{27:42,30:40,31:E,34:[1,38],38:39,39:[1,41],46:S,80:C,81:j,82:$},_(Q,[2,84]),_(Q,[2,85]),_(Q,[2,86]),_(Q,[2,87]),_([16,19,20,21,37,46,79,80,81,82],[2,26]),_(P,[2,65]),_(P,[2,66]),_(P,[2,67]),_(P,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),_(P,[2,68]),_(P,[2,69]),_(P,[2,70]),_(P,[2,76]),_(P,[2,77]),_(G,[2,78]),_(G,[2,79]),_(G,[2,80]),_(G,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},_(B,[2,9],{12:50,14:51,42:[1,52]}),_(J,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),_(U,[2,14]),_(U,[2,15]),_(U,[2,16]),_(D,[2,21]),_(D,[2,22]),{27:58,35:57,46:S,79:V,80:C,81:j,82:$},{27:58,35:60,46:S,79:V,80:C,81:j,82:$},_(z,[2,33]),_(z,[2,34]),_([37,46,79,80,81,82],M),_(P,[2,71]),_(P,[2,75]),_(P,[2,72]),{27:61,46:S,80:C,81:j,82:$},{4:[1,62]},_(R,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:b,26:20,27:8,30:9,31:E,32:10,33:v,46:S,48:A,50:w,53:T,54:O,55:k,56:N,69:17,70:18,71:19,76:I,77:F,78:L,80:C,81:j,82:$},_(R,[2,11],{13:64,15:65,43:[1,66]}),_(B,[2,10]),{26:67,56:N,76:I,77:F,78:L},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},_(J,[2,18]),_(J,[2,35]),_(J,[2,36]),{23:76,26:20,27:42,30:9,31:E,32:10,36:75,39:[1,77],46:S,48:A,50:w,53:T,54:O,55:k,56:N,69:17,70:18,71:19,76:I,77:F,78:L,80:C,81:j,82:$},_(q,[2,82]),_(q,[2,83]),{34:[1,78]},_(P,[2,73]),{1:[2,2]},_(R,[2,3]),_(R,[2,8]),_(R,[2,12]),{44:79,46:[1,80],47:[1,81]},_(B,[2,37]),_(U,[2,13]),_(U,[2,23]),_(U,[2,24]),_(U,[2,88]),_(U,[2,89]),_(U,[2,90]),_(U,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:Z,45:84,48:K,49:X,50:W,51:88,52:89,53:H,54:Y,55:ee,56:te,63:ne},_(re,[2,39]),_(re,[2,40]),_(D,[2,29]),_(D,[2,30]),_(R,[2,38]),_(se,[2,41]),_(se,[2,42]),_(se,[2,43]),_(se,[2,44]),_(se,[2,45]),_(se,[2,46]),_(se,[2,47]),_(se,[2,48]),_(se,[2,49]),{37:[2,55],57:96,59:98,61:97,62:ie},{33:Z,45:102,48:K,49:X,50:W,51:88,52:89,53:H,54:Y,55:ee,56:te,63:ne,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},_(ae,[2,52],{60:104}),{33:Z,45:105,48:K,49:X,50:W,51:88,52:89,53:H,54:Y,55:ee,56:te,63:ne},{65:[1,106]},{65:[2,64]},_(oe,[2,60],{67:107}),_(se,[2,50]),{9:[1,109],37:[2,54],58:108},_(ae,[2,57]),_(se,[2,58]),{9:[1,111],65:[2,62],66:110},_(ae,[2,53]),{59:112,62:ie},_(oe,[2,61]),{33:Z,45:113,48:K,49:X,50:W,51:88,52:89,53:H,54:Y,55:ee,56:te,63:ne},_(ae,[2,51]),_(oe,[2,59])],this.defaultActions={2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]}}performAction(e,t,n,i,d,m,x){const _=m.length-1;switch(d){case 1:return[];case 2:return[m[_-3]].concat(m[_-2]);case 3:case 51:case 59:this.$=m[_];break;case 4:case 60:case 63:this.$=[];break;case 5:case 61:this.$=m[_-1].concat(m[_]);break;case 8:this.$=p({node:m[_-3]},m[_-2],m[_-1],m[_]);break;case 9:case 11:case 52:case 55:case 74:this.$={};break;case 13:this.$=p({shape:m[_]},m[_-1]);break;case 14:this.$={shape:s.Start};break;case 15:m[_]=m[_].substr(1,m[_].length-1),this.$={shape:i.schemaMeta.expandPrefix(m[_].substr(0,m[_].length-1),i)};break;case 16:m[_]=m[_].substr(1,m[_].length-1);const e=m[_].indexOf(":");this.$={shape:i.schemaMeta.expandPrefix(m[_].substr(0,e),i)+m[_].substr(e+1)};break;case 17:this.$={status:"conformant"};break;case 18:this.$={status:m[_]};break;case 21:this.$={type:"Extension",language:"http://www.w3.org/ns/shex#Extensions-sparql",lexical:m[_]["@value"]};break;case 22:this.$={type:"Extension",language:m[_-1],lexical:m[_]["@value"]};break;case 24:this.$=s.Start;break;case 29:this.$={type:"TriplePattern",subject:s.Focus,predicate:m[_-2],object:m[_-1]};break;case 30:this.$={type:"TriplePattern",subject:m[_-3],predicate:m[_-2],object:s.Focus};break;case 32:case 34:case 42:this.$=null;break;case 35:this.$="nonconformant";break;case 36:this.$="unknown";break;case 37:this.$={reason:m[_]};break;case 38:this.$={appinfo:m[_]};break;case 41:this.$=!1;break;case 43:this.$=!0;break;case 46:case 47:case 48:this.$=parseFloat(m[_]);break;case 49:this.$=g(m[_],1)["@value"];break;case 50:case 58:this.$=m[_-1];break;case 53:case 54:case 71:this.$=p(m[_-1],m[_]);break;case 57:this.$={};const t=m[_-1].substr(0,m[_-1].length-1).trim();this.$[g(t,1)["@value"]]=m[_];break;case 62:this.$=[m[_-1]].concat(m[_]);break;case 68:this.$=f(m[_],a);break;case 69:this.$=f(m[_],o);break;case 70:this.$=f(m[_],u);break;case 72:this.$=h("@language",m[_].substr(1).toLowerCase());break;case 73:this.$=h("@type",m[_]);break;case 76:this.$=f("true",c);break;case 77:this.$=f("false",c);break;case 78:case 80:this.$=g(m[_],1);break;case 79:case 81:this.$=g(m[_],3);break;case 83:this.$="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";break;case 84:const n=r.unescapeText(m[_].slice(1,-1),{});this.$=null===i.dataMeta.base||l.test(n)?n:i.dataMeta._resolveIRI(n);break;case 85:case 86:this.$=y(m[_],i.dataMeta,i);break;case 87:this.$=i.dataMeta.expandPrefix(m[_].substr(0,m[_].length-1),i);break;case 88:const d=r.unescapeText(m[_].slice(1,-1),{});this.$=null===i.schemaMeta.base||l.test(d)?d:i.schemaMeta._resolveIRI(d);break;case 89:case 90:this.$=y(m[_],i.schemaMeta,i);break;case 91:this.$=i.schemaMeta.expandPrefix(m[_].substr(0,m[_].length-1),i)}}};const{JisonLexer:ue}=n(2752);class ce extends ue{constructor(e={}){super(e),this.options={moduleName:"ShapeMapJison"},this.rules=[/^(?:\s+|(#[^\u000a\u000d]*|\/\*([^*]|\*([^/]|\\\/))*\*\/))/,/^(?:(appinfo[\u0020\u000A\u0009]+:))/,/^(?:("([^\u0022\u005C\u000A\u000D]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"[\u0020\u000A\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\u0000-\u0020<>\"{}|^`\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|[0-9])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"))/,/^(?:a\b)/,/^(?:,)/,/^(?:\{)/,/^(?:\})/,/^(?:@)/,/^(?:!)/,/^(?:\?)/,/^(?:\/)/,/^(?:\$)/,/^(?:\[)/,/^(?:\])/,/^(?:\^\^)/,/^(?:_\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:null\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],this.conditions={INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],inclusive:!0}}}performAction(e,t,n,r){switch(n){case 0:break;case 1:return 47;case 2:return 62;case 3:return 34;case 4:return 29;case 5:return 19;case 6:return 25;case 7:return 21;case 8:return 20;case 9:return 74;case 10:return 81;case 11:return 46;case 12:return 82;case 13:return 55;case 14:return 54;case 15:return 53;case 16:return 80;case 17:return 31;case 18:return 77;case 19:return 78;case 20:return 76;case 21:return 56;case 22:return 79;case 23:return 9;case 24:return 33;case 25:return 37;case 26:return 16;case 27:return 40;case 28:return 41;case 29:return 42;case 30:return 43;case 31:return 63;case 32:return 65;case 33:return 75;case 34:return 39;case 35:return 50;case 36:return 48;case 37:return 49;case 38:return 4;case 39:return'unexpected word "'+t.yytext+'"';case 40:return"invalid character "+t.yytext}}}},3018:(e,t,n)=>{const r=function(){ShapeMapJison=n(2839).HW;const e=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,t=/(?:^|\/)\.\.?(?:$|[\/#?])/;class r{constructor(){}reset(){this.prefixes=null,this.base=this._baseIRI=this._baseIRIPath=this._baseIRIRoot=null}_setBase(t){t||(t=null),(this.base=t)&&(this._basePath=t.replace(/[^\/?]*(?:\?.*)?$/,""),t=t.match(e),this._baseRoot=t[0],this._baseScheme=t[1])}_resolveIRI(e){switch(e[0]){case void 0:return this.base;case"#":return this.base+e;case"?":return this.base.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?this._baseScheme:this._baseRoot)+this._removeDotSegments(e);default:return this._removeDotSegments(this._basePath+e)}}_removeDotSegments(e){if(!t.test(e))return e;const n=e.length;let r="",s=-1,i=-1,a="/",o=0;for(;s<n;){switch(a){case":":if(i<0&&"/"===e[++s]&&"/"===e[++s])for(;(i=s+1)<n&&"/"!==e[i];)s=i;break;case"?":case"#":s=n;break;case"/":if("."===e[s+1])switch(a=e[1+ ++s],a){case"/":r+=e.substring(o,s-1),o=s+1;break;case void 0:case"?":case"#":return r+e.substring(o,s)+e.substr(s+1);case".":if(a=e[1+ ++s],void 0===a||"/"===a||"?"===a||"#"===a){if(r+=e.substring(o,s-2),(o=r.lastIndexOf("/"))>=i&&(r=r.substr(0,o)),"/"!==a)return r+"/"+e.substr(s+1);o=s+1}}}a=e[++s]}return r+e.substring(o)}expandPrefix(e,t){return e in this.prefixes||t.error(new Error('Parse error; unknown prefix "'+e+':"')),this.prefixes[e]}}class s{constructor(){this.schemaMeta=new r,this.dataMeta=new r,this._fileName=void 0}reset(){this.schemaMeta.reset(),this.dataMeta.reset()}_setFileName(e){this._fileName=e}error(e){const t={text:this.lexer.match,line:this.lexer.thislineno,loc:this.lexer.thislloc,pos:this.lexer.showPosition()};if(e.hash=t,!this.recoverable)throw e;this.recoverable(e)}}return{construct:function(e,t,n){const r=t.base,i={};for(const e in t.prefixes||{})i[e]=t.prefixes[e];const a=n.base,o={};for(const e in n.prefixes||{})o[e]=n.prefixes[e];const u=new ShapeMapJison,c=u.parse;return u.parse=function t(n,l=null){const p=globalThis.PS=new s;p.schemaMeta.prefixes=Object.create(i),p.schemaMeta._setBase(r),p.dataMeta.prefixes=Object.create(o),p.dataMeta._setBase(a),p._setFileName(e),p._fileName=l;try{return c.call(u,n,p)}catch(n){const r="lexer"in u.yy?u.yy.lexer.yylineno+1:1,s="lexer"in u.yy?u.yy.lexer.showPosition():"",i=Error(`${e}(${r}): ${n.message}\n${s}`);throw Error.captureStackTrace(i,t),p.reset(),i}},u}}}();e.exports=r},1014:e=>{const t={Focus:{term:"FOCUS"},Start:{term:"START"},Wildcard:{term:"WILDCARD"}};e.exports=t},6261:(e,t,n)=>{const r=function(){const e=n(1014);return e.Parser=n(3018),e}();e.exports=r},2863:(e,t,n)=>{e.exports=function(e={}){const t=n(9443),r=n(931);class s extends Error{constructor(e,t){super(e),this.url=t}}class i extends s{constructor(e,t,n,r){super(e,t),this.status=n,this.text=r}}class a extends s{constructor(e,t){super(e),this.url=t}}class o{constructor(e){this.schemasSeen=e.map((e=>"object"==typeof e?e.url:e)),this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),this.toLoad=[],this.results=[],this.loaded=0}add(e){this.toLoad.push(e);const t=this.toLoad.length-1;return e.then((e=>{++this.loaded,this.results[t]=e,this.loaded===this.toLoad.length&&this.resolve(this.results)})).catch((e=>this.reject(e))),e}allLoaded(){return this.toLoad.length>0?this.promise:Promise.resolve([])}loadNovelUrl(e,t=null){if(-1!==this.schemasSeen.indexOf(e))return!1;if(this.schemasSeen.push(e),t){const e=this.schemasSeen.indexOf(t);-1!==e&&this.schemasSeen.splice(e,1)}return!0}}const u={load:async function(n,r,s={},i={}){const a={schema:t.emptySchema(),data:e.rdfjs?new e.rdfjs.Store:null,schemaMeta:[],dataMeta:[]};let u,p;{const{shexc:e=[],json:t=[],turtle:r=[]}=n||{};u=new o(e.concat(t).concat(r)),h(e,a.schemaMeta,"text/shex",f,c,s,u),h(t,a.schemaMeta,"application/json",d,c,s,u),h(r||[],a.schemaMeta,"text/turtle",m,c,s,u)}{const{turtle:e=[],jsonld:t=[]}=r||{};p=new o(e.concat(t)),h(e,a.dataMeta,"text/turtle",g,l,i,p),h(t,a.dataMeta,"application/ld+json",y,l,i,p)}const[x,_]=await Promise.all([u.allLoaded(),p.allLoaded()]);x.forEach((e=>{t.merge(a.schema,e.schema,s.collisionPolicy,!0),delete e.schema})),_.forEach((e=>{a.data.addQuads(e.graph),delete e.graph})),a.schemaMeta.length>0&&t.isWellDefined(a.schema);return a},loadExtensions:function(e){return[]},GET:async function(t,n){let r;return(r=t.match("^data:([^,]+),(.*)$"))?Promise.resolve({text:r[2],url:r[0]}):t.match("^(blob:)?[a-z]+://.")?async function(t,n){if("function"!=typeof e.fetch)throw new s(`Unable to fetch ${t} with fetch=${e.fetch}`);let r;try{r=await e.fetch(t,{headers:{Accept:"text/shex,text/turtle,*/*"}})}catch(e){throw new s(`GET <${t}> network failure: ${e.message}`)}if(!r.ok)throw new i(`GET <${t}> failed: ${r.status} ${r.statusText}`,t,r.status,r.text);return{text:await r.text(),url:t}}(t):(()=>{throw new s(`Unrecognized URL protocol ${t}`)})()},ResourceLoadControler:o,loadSchemaImports:p,WebError:s,FetchError:i};return u;async function c(e,t,n,r){if(!("schema"in e))throw Error(`Bad parameter to mergeSchema; ${s(e)} is not a loaded schema`);if("Schema"!==e.schema.type)throw Error(`Bad parameter to mergeSchema .schema; ${s(e.schema)} !== ""Schema`);try{return p(e.schema,n,r),{mediaType:t,url:e.url,schema:e.schema}}catch(t){const n=Error("error merging schema object "+e.schema+": "+t);throw n.stack=t.stack,n}function s(t){const n=Math.random(),r=Object.keys(e).reduce(((t,r)=>(t[r]="object"==typeof e[r]?n:e[r],t)),{});return JSON.stringify(r).replace(new RegExp(n,"g"),"…")}}async function l(e,t,n,r){try{const n=Array.isArray(typeof e.graph)?e.graph:e.graph.getQuads();return{mediaType:t,url:e.url,graph:n}}catch(t){const n=Error("error merging graph object "+e.graph+": "+t);throw n.stack=t.stack,n}}function p(e,t,n){if(!("imports"in e))return e;if(n.keepImports)return e;const r=Object.assign({},e);r.imports;return delete r.imports,e.imports.map((e=>"iriTransform"in n?n.iriTransform(e):e)).filter((e=>t.loadNovelUrl(e))).map((e=>{t.add(u.GET(e).then((e=>{const r={url:e.url,base:e.url,prefixes:{}};return f(e.text,"text/shex",e.url,r,n,t).then((({mediaType:e,url:t,schema:n})=>(n.start&&delete n.start,{mediaType:e,url:t,schema:n})))})))})),r}async function h(e,t,n,r,s,i,a){return e.map((e=>{const o=function(e,t,n){const r={mediaType:t,url:e,base:e,prefixes:{}};return n.push(r),r}("string"==typeof e?e:e.url,n,t);let c;return c="string"==typeof e?u.GET(e,n).then((t=>(o.base=o.url=t.url,a.loadNovelUrl(t.url,e),r(t.text,n,t.url,o,i,a)))):"text"in e?r(e.text,n,e.url,o,i,a):s(e,n,a,i),a.add(c),c}))}function f(e,t,n,s,i,a){const o=i&&"parser"in i?i.parser:r.construct(n,{},i);try{s.prefixes={};const r=o.parse(e,n,{meta:s});return r.base===n&&delete r.base,p(r,a,i),Promise.resolve({mediaType:t,url:n,schema:r})}catch(e){return e.message="error parsing ShEx "+n+": "+e.message,Promise.reject(e)}}function d(e,n,r,s,i,a){try{const i=t.ShExJtoAS(JSON.parse(e));return s.prefixes={},s.base=null,p(i,a),Promise.resolve({mediaType:n,url:r,schema:i})}catch(e){const t=Error("error parsing JSON "+r+": "+e);return Promise.reject(t)}}async function m(n,r,s,i,o,u){try{const c=await g(n,r,s,i,o),l=new e.rdfjs.Store;l.addQuads(c.graph);const h=new o.graphParser.validator(o.graphParser.schema,o.graphParser.rdfjsdb(l),{}),f=l.getQuads(null,t.RDF.type,"http://www.w3.org/ns/shex#Schema")[0].subject,d=h.validate(f,o.graphParser.validator.Start);if("errors"in d)throw a(`${s} did not validate as a ShEx schema: ${JSON.stringify(d.errors,null,2)}`,s);const m=t.ShExJtoAS(t.ShExRtoShExJ(t.valuesToSchema(t.valToValues(d))));return await p(m,u),Promise.resolve({mediaType:r,url:s,schema:m})}catch(e){const t=Error("error parsing Turtle schema "+s+": "+e);return"object"==typeof e&&"stack"in e&&(t.stack=e.stack),Promise.reject(t)}}function g(t,n,r,s,i){return new Promise((function(i,a){const o=[];new e.rdfjs.Parser({baseIRI:r,blankNodePrefix:"",format:"text/turtle"}).parse(t,(function(e,t,u){u&&(s.prefixes=u),e?a("error parsing "+r+": "+e):t?o.push(t):(s.base=this._base,i({mediaType:n,url:r,graph:o}))}))}))}async function y(t,n,r,s,i,o){const u=JSON.parse(t);try{const t=await e.jsonld.toRDF(u,Object.assign({format:"application/nquads",base:r},e.jsonLdOptions||{}));return i.prefixes={},i.base=r,g(t,n,r,s)}catch(e){let t=e;throw"details"in t&&(t=t.details),"cause"in t&&(t=t.cause),new a("error parsing JSON-ld "+r+": "+t,r)}}}},9509:(e,t,n)=>{const r=n(9443),s="http://www.w3.org/1999/02/22-rdf-syntax-ns#",i=s+"type",a="http://www.w3.org/2001/XMLSchema#",o=a+"integer",u=a+"decimal",c=a+"float",l=a+"double",p=a+"boolean",h=[a+"integer",a+"decimal",a+"float",a+"double",a+"string",a+"boolean",a+"dateTime",a+"nonPositiveInteger",a+"negativeInteger",a+"long",a+"int",a+"short",a+"byte",a+"nonNegativeInteger",a+"unsignedLong",a+"unsignedInt",a+"unsignedShort",a+"unsignedByte",a+"positiveInteger"],f=/^[a-z][a-z0-9+.-]*:/i,d=["mininclusive","minexclusive","maxinclusive","maxexclusive"];function m(e){return e.toLowerCase()}function g(e,t){return e.push(t),e}function y(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function x(){let e=[];for(let t=0,n=arguments.length;t<n;t++)e=e.concat.apply(e,arguments[t]);return e}function _(e,t){return{value:e,type:t}}const b={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},E={"\\":"\\","%":"%"},v={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"};function S(e,t){return e=e.substring(t,e.length-t),{value:r.unescapeText(e,b)}}function A(e,t){const n=e.lastIndexOf("@"),r=e.substr(n);return y(S(e=e.substr(0,n),t),{language:m(r.substr(1))})}function w(e,t){const n={};return n[e]=t,n}function T(e,t,n){return 0===n.length?O(t):t.type!==e||t.nested?{type:e,shapeExprs:[O(t)].concat(n.map(O))}:(O(t).shapeExprs=O(t).shapeExprs.concat(n),t)}function O(e){return delete e.nested,e}const{JisonParser:k,o:N}=n(9041),I=[7,18,19,20,21,23,26,36,193,215,216],F=[19,21,215,216],L=[2,27],C=[1,22],j=[1,23],$=[2,12],R=[2,13],D=[2,14],M=[7,18,19,20,21,23,26,36,215,216],P=[1,29],Q=[1,32],G=[1,31],B=[2,18],J=[2,19],U=[1,38],V=[1,42],z=[1,41],q=[1,40],Z=[1,44],K=[1,47],X=[1,46],W=[2,15],H=[2,17],Y=[2,261],ee=[2,262],te=[2,263],ne=[2,264],re=[19,21,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,189,215,227],se=[2,62],ie=[1,65],ae=[19,21,40,44,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,179,189,215,227,229],oe=[2,29],ue=[2,239],ce=[2,240],le=[2,265],pe=[193,195],he=[1,73],fe=[1,76],de=[1,75],me=[2,16],ge=[7,18,19,20,21,23,26,36,51,215,216],ye=[2,48],xe=[7,18,19,20,21,23,26,36,51,53,215,216],_e=[2,55],be=[119,125,127,189,227],Ee=[2,140],ve=[1,111],Se=[1,119],Ae=[1,93],we=[1,101],Te=[1,102],Oe=[1,103],ke=[1,110],Ne=[1,115],Ie=[1,116],Fe=[1,117],Le=[1,120],Ce=[1,121],je=[1,122],$e=[1,123],Re=[1,124],De=[1,125],Me=[1,106],Pe=[1,118],Qe=[2,63],Ge=[19,21,69,71,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,189,215,227],Be=[1,138],Je=[1,137],Ue=[2,230],Ve=[2,231],ze=[2,232],qe=[2,20],Ze=[1,145],Ke=[2,54],Xe=[1,147],We=[2,61],He=[2,70],Ye=[1,153],et=[1,154],tt=[1,155],nt=[2,66],rt=[2,72],st=[1,162],it=[1,163],at=[1,164],ot=[1,167],ut=[1,170],ct=[1,172],lt=[1,173],pt=[1,174],ht=[2,69],ft=[7,18,19,20,21,23,26,36,51,53,79,80,81,119,125,127,189,190,193,215,216,227],dt=[2,96],mt=[7,18,19,20,21,23,26,36,51,53,190,193,215,216],gt=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,215,216],yt=[2,88],xt=[2,89],_t=[7,18,19,20,21,23,26,36,51,53,79,80,81,101,102,103,104,119,125,127,189,190,193,215,216,227],bt=[2,109],Et=[2,108],vt=[7,18,19,20,21,23,26,36,51,53,101,102,103,104,112,113,114,115,116,117,190,193,215,216],St=[2,103],At=[2,102],wt=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,190,193,215,216],Tt=[2,92],Ot=[2,93],kt=[2,113],Nt=[2,114],It=[2,115],Ft=[2,111],Lt=[2,238],Ct=[19,21,71,81,100,108,109,163,185,204,205,206,207,208,209,210,211,212,213,215],jt=[2,184],$t=[7,18,19,20,21,23,26,36,51,53,112,113,114,115,116,117,190,193,215,216],Rt=[2,105],Dt=[1,197],Mt=[1,199],Pt=[1,201],Qt=[1,200],Gt=[2,119],Bt=[1,208],Jt=[1,209],Ut=[1,210],Vt=[1,211],zt=[100,108,109,206,207,208,209],qt=[2,26],Zt=[2,31],Kt=[2,32],Xt=[2,33],Wt=[79,80,81,119,125,127,189,227],Ht=[1,273],Yt=[1,278],en=[1,255],tn=[1,263],nn=[1,264],rn=[1,265],sn=[1,272],an=[1,268],on=[1,277],un=[2,49],cn=[2,56],ln=[2,65],pn=[2,71],hn=[2,67],fn=[2,73],dn=[7,18,19,20,21,23,26,36,51,53,101,102,103,104,190,193,215,216],mn=[1,332],gn=[1,340],yn=[1,341],xn=[1,342],_n=[1,348],bn=[1,349],En=[51,53],vn=[7,18,19,20,21,23,26,36,51,53,79,80,81,119,125,127,189,193,215,216,227],Sn=[2,228],An=[7,18,19,20,21,23,26,36,51,53,193,215,216],wn=[1,365],Tn=[2,107],On=[2,112],kn=[2,99],Nn=[1,371],In=[2,100],Fn=[2,101],Ln=[2,106],Cn=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,193,215,216],jn=[2,94],$n=[1,388],Rn=[1,394],Dn=[1,383],Mn=[1,387],Pn=[1,397],Qn=[1,398],Gn=[1,399],Bn=[1,386],Jn=[1,400],Un=[1,401],Vn=[1,406],zn=[1,407],qn=[1,408],Zn=[1,409],Kn=[1,402],Xn=[1,403],Wn=[1,404],Hn=[1,405],Yn=[1,393],er=[19,21,69,160,199,215],tr=[2,168],nr=[2,142],rr=[1,422],sr=[1,421],ir=[1,432],ar=[1,435],or=[1,431],ur=[1,434],cr=[19,21,44,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,189,215,227],lr=[2,118],pr=[2,123],hr=[2,125],fr=[2,126],dr=[2,127],mr=[2,253],gr=[2,254],yr=[2,255],xr=[2,256],_r=[2,124],br=[2,36],Er=[2,40],vr=[2,43],Sr=[2,46],Ar=[19,21,40,44,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,179,189,190,193,215,227,229],wr=[2,37],Tr=[2,75],Or=[2,78],kr=[1,457],Nr=[1,459],Ir=[1,465],Fr=[1,466],Lr=[1,467],Cr=[1,474],jr=[1,475],$r=[1,476],Rr=[1,479],Dr=[2,42],Mr=[1,557],Pr=[2,45],Qr=[1,593],Gr=[2,68],Br=[51,53,70],Jr=[1,622],Ur=[51,53,70,79,80,81,119,125,127,189,190,193,227],Vr=[51,53,70,190,193],zr=[51,53,70,96,97,98,101,102,103,104,190,193],qr=[51,53,70,79,80,81,101,102,103,104,119,125,127,189,190,193,227],Zr=[51,53,70,101,102,103,104,112,113,114,115,116,117,190,193],Kr=[51,53,70,112,113,114,115,116,117,190,193],Xr=[51,70],Wr=[7,18,19,20,21,23,26,36,51,53,79,80,81,119,125,127,189,215,216,227],Hr=[2,98],Yr=[2,97],es=[2,227],ts=[1,664],ns=[1,667],rs=[1,663],ss=[1,666],is=[2,95],as=[2,110],os=[2,104],us=[2,116],cs=[2,117],ls=[2,135],ps=[2,183],hs=[1,697],fs=[19,21,71,81,100,108,109,163,178,185,204,205,206,207,208,209,210,211,212,213,215],ds=[2,233],ms=[2,234],gs=[2,235],ys=[2,246],xs=[2,249],_s=[2,243],bs=[2,244],Es=[2,245],vs=[2,251],Ss=[2,252],As=[2,257],ws=[2,258],Ts=[2,259],Os=[2,260],ks=[19,21,71,81,100,108,109,111,163,178,185,204,205,206,207,208,209,210,211,212,213,215],Ns=[2,147],Is=[2,148],Fs=[1,705],Ls=[2,149],Cs=[121,135],js=[2,154],$s=[2,155],Rs=[2,157],Ds=[1,708],Ms=[1,709],Ps=[19,21,199,215],Qs=[2,176],Gs=[1,717],Bs=[121,135,140,141],Js=[2,166],Us=[51,119,125,127,189,227],Vs=[51,53,119,125,127,189,227],zs=[2,274],qs=[1,750],Zs=[1,751],Ks=[1,752],Xs=[1,762],Ws=[19,21,119,125,127,189,199,215,227],Hs=[2,236],Ys=[2,237],ei=[2,44],ti=[2,41],ni=[2,47],ri=[19,21,40,44,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,179,189,193,215,227,229],si=[2,34],ii=[2,38],ai=[2,74],oi=[2,76],ui=[2,35],ci=[1,809],li=[1,815],pi=[1,855],hi=[1,902],fi=[51,53,70,101,102,103,104,190,193],di=[51,53,70,79,80,81,119,125,127,189,193,227],mi=[51,53,70,193],gi=[1,945],yi=[51,53,70,96,97,98,101,102,103,104,193],xi=[1,955],_i=[1,992],bi=[1,1028],Ei=[2,229],vi=[1,1039],Si=[1,1045],Ai=[1,1044],wi=[19,21,100,108,109,204,205,206,207,208,209,210,211,212,213,215],Ti=[1,1065],Oi=[1,1071],ki=[1,1070],Ni=[1,1092],Ii=[1,1098],Fi=[1,1097],Li=[1,1115],Ci=[1,1117],ji=[1,1119],$i=[19,21,71,81,100,108,109,163,179,185,204,205,206,207,208,209,210,211,212,213,215],Ri=[1,1123],Di=[1,1129],Mi=[1,1132],Pi=[1,1133],Qi=[1,1134],Gi=[1,1122],Bi=[1,1135],Ji=[1,1136],Ui=[1,1141],Vi=[1,1142],zi=[1,1143],qi=[1,1144],Zi=[1,1137],Ki=[1,1138],Xi=[1,1139],Wi=[1,1140],Hi=[1,1128],Yi=[2,247],ea=[2,250],ta=[2,136],na=[2,150],ra=[2,152],sa=[2,156],ia=[2,158],aa=[2,159],oa=[2,163],ua=[2,165],ca=[2,170],la=[2,171],pa=[1,1159],ha=[1,1162],fa=[1,1158],da=[1,1161],ma=[1,1172],ga=[2,223],ya=[2,241],xa=[2,242],_a=[2,272],ba=[2,276],Ea=[2,278],va=[2,86],Sa=[1,1193],Aa=[2,281],wa=[79,80,81,101,102,103,104,119,125,127,189,227],Ta=[51,53,101,102,103,104,112,113,114,115,116,117,119,125,127,189,227],Oa=[51,53,96,97,98,101,102,103,104,119,125,127,189,227],ka=[2,90],Na=[2,91],Ia=[51,53,112,113,114,115,116,117,119,125,127,189,227],Fa=[2,128],La=[2,77],Ca=[1,1252],ja=[1,1288],$a=[1,1347],Ra=[1,1353],Da=[1,1385],Ma=[1,1391],Pa=[51,53,70,79,80,81,119,125,127,189,227],Qa=[51,53,70,96,97,98,101,102,103,104],Ga=[1,1449],Ba=[1,1496],Ja=[2,224],Ua=[2,225],Va=[2,226],za=[7,18,19,20,21,23,26,36,51,53,79,80,81,111,119,125,127,189,190,193,215,216,227],qa=[7,18,19,20,21,23,26,36,51,53,111,190,193,215,216],Za=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,111,190,193,215,216],Ka=[2,206],Xa=[1,1549],Wa=[19,21,71,81,100,108,109,163,178,179,185,204,205,206,207,208,209,210,211,212,213,215],Ha=[19,21,71,81,100,108,109,111,163,178,179,185,204,205,206,207,208,209,210,211,212,213,215],Ya=[2,248],eo=[2,153],to=[2,151],no=[2,160],ro=[2,164],so=[2,161],io=[2,162],ao=[1,1566],oo=[70,135],uo=[1,1569],co=[1,1570],lo=[70,135,140,141],po=[2,275],ho=[2,277],fo=[2,279],mo=[2,87],go=[51,53,101,102,103,104,119,125,127,189,227],yo=[1,1608],xo=[1,1618],_o=[1,1624],bo=[1,1623],Eo=[1,1661],vo=[1,1708],So=[1,1741],Ao=[1,1747],wo=[1,1746],To=[1,1767],Oo=[1,1773],ko=[1,1772],No=[1,1794],Io=[1,1800],Fo=[1,1799],Lo=[1,1845],Co=[1,1911],jo=[1,1917],$o=[1,1916],Ro=[1,1937],Do=[1,1943],Mo=[1,1942],Po=[1,1963],Qo=[1,1969],Go=[1,1968],Bo=[1,2010],Jo=[1,2016],Uo=[1,2048],Vo=[1,2054],zo=[121,135,140,141,190,193],qo=[2,173],Zo=[1,2074],Ko=[1,2075],Xo=[1,2076],Wo=[1,2077],Ho=[121,135,140,141,156,157,158,159,190,193],Yo=[2,39],eu=[51,121,135,140,141,156,157,158,159,190,193],tu=[2,52],nu=[51,53,121,135,140,141,156,157,158,159,190,193],ru=[2,59],su=[1,2106],iu=[2,273],au=[2,280],ou=[19,21,40,44,69,71,79,80,81,85,96,97,98,101,102,103,104,111,112,113,114,115,116,117,119,125,127,161,179,189,190,193,215,227,229],uu=[1,2219],cu=[1,2225],lu=[1,2257],pu=[1,2263],hu=[1,2316],fu=[1,2349],du=[1,2355],mu=[1,2354],gu=[1,2375],yu=[1,2381],xu=[1,2380],_u=[1,2402],bu=[1,2408],Eu=[1,2407],vu=[1,2429],Su=[1,2435],Au=[1,2434],wu=[1,2455],Tu=[1,2461],Ou=[1,2460],ku=[1,2482],Nu=[1,2488],Iu=[1,2487],Fu=[51,53,70,79,80,81,111,119,125,127,189,190,193,227],Lu=[51,53,70,111,190,193],Cu=[51,53,70,96,97,98,101,102,103,104,111,190,193],ju=[1,2557],$u=[2,174],Ru=[2,178],Du=[2,179],Mu=[2,180],Pu=[2,181],Qu=[2,50],Gu=[2,57],Bu=[2,64],Ju=[2,84],Uu=[2,80],Vu=[1,2640],zu=[2,83],qu=[51,53,79,80,81,101,102,103,104,119,121,125,127,135,140,141,156,157,158,159,189,190,193,227],Zu=[51,53,79,80,81,119,121,125,127,135,140,141,156,157,158,159,189,190,193,227],Ku=[51,53,101,102,103,104,112,113,114,115,116,117,121,135,140,141,156,157,158,159,190,193],Xu=[51,53,96,97,98,101,102,103,104,121,135,140,141,156,157,158,159,190,193],Wu=[51,53,112,113,114,115,116,117,121,135,140,141,156,157,158,159,190,193],Hu=[1,2690],Yu=[1,2728],ec=[1,2783],tc=[1,2872],nc=[1,2878],rc=[1,2961],sc=[1,2994],ic=[1,3e3],ac=[1,2999],oc=[1,3020],uc=[1,3026],cc=[1,3025],lc=[1,3047],pc=[1,3053],hc=[1,3052],fc=[1,3074],dc=[1,3080],mc=[1,3079],gc=[1,3100],yc=[1,3106],xc=[1,3105],_c=[1,3127],bc=[1,3133],Ec=[1,3132],vc=[121,135,140,141,193],Sc=[1,3152],Ac=[2,53],wc=[2,60],Tc=[2,79],Oc=[2,85],kc=[2,81],Nc=[51,53,101,102,103,104,121,135,140,141,156,157,158,159,190,193],Ic=[1,3176],Fc=[70,135,140,141,190,193],Lc=[1,3185],Cc=[1,3186],jc=[1,3187],$c=[1,3188],Rc=[70,135,140,141,156,157,158,159,190,193],Dc=[51,70,135,140,141,156,157,158,159,190,193],Mc=[51,53,70,135,140,141,156,157,158,159,190,193],Pc=[1,3217],Qc=[1,3244],Gc=[1,3267],Bc=[1,3298],Jc=[1,3331],Uc=[1,3337],Vc=[1,3336],zc=[1,3357],qc=[1,3363],Zc=[1,3362],Kc=[1,3384],Xc=[1,3390],Wc=[1,3389],Hc=[1,3411],Yc=[1,3417],el=[1,3416],tl=[1,3437],nl=[1,3443],rl=[1,3442],sl=[1,3464],il=[1,3470],al=[1,3469],ol=[1,3547],ul=[1,3553],cl=[2,175],ll=[2,51],pl=[1,3641],hl=[2,58],fl=[1,3674],dl=[2,82],ml=[2,172],gl=[1,3719],yl=[51,53,70,79,80,81,101,102,103,104,119,125,127,135,140,141,156,157,158,159,189,190,193,227],xl=[51,53,70,79,80,81,119,125,127,135,140,141,156,157,158,159,189,190,193,227],_l=[51,53,70,101,102,103,104,112,113,114,115,116,117,135,140,141,156,157,158,159,190,193],bl=[51,53,70,96,97,98,101,102,103,104,135,140,141,156,157,158,159,190,193],El=[51,53,70,112,113,114,115,116,117,135,140,141,156,157,158,159,190,193],vl=[1,3824],Sl=[1,3830],Al=[1,3893],wl=[1,3899],Tl=[1,3898],Ol=[1,3919],kl=[1,3925],Nl=[1,3924],Il=[1,3946],Fl=[1,3952],Ll=[1,3951],Cl=[1,4011],jl=[1,4017],$l=[1,4016],Rl=[1,4052],Dl=[1,4094],Ml=[70,135,140,141,193],Pl=[1,4124],Ql=[51,53,70,101,102,103,104,135,140,141,156,157,158,159,190,193],Gl=[1,4148],Bl=[1,4171],Jl=[1,4265],Ul=[1,4271],Vl=[1,4270],zl=[1,4291],ql=[1,4297],Zl=[1,4296],Kl=[1,4318],Xl=[1,4324],Wl=[1,4323],Hl=[111,121,135,140,141,190,193],Yl=[1,4366],ep=[1,4390],tp=[1,4432],np=[1,4465],rp=[1,4505],sp=[1,4528],ip=[1,4534],ap=[1,4533],op=[1,4554],up=[1,4560],cp=[1,4559],lp=[1,4581],pp=[1,4587],hp=[1,4586],fp=[1,4661],dp=[1,4704],mp=[1,4710],gp=[1,4709],yp=[1,4745],xp=[1,4787],_p=[1,4877],bp=[70,111,135,140,141,190,193],Ep=[1,4932],vp=[1,4956],Sp=[1,4994],Ap=[1,5040],wp=[1,5118],Tp=[1,5167];t.Fm=class extends k{constructor(e={},t=new kp(e)){super(e,t),this.symbols_={error:2,shexDoc:3,initParser:4,Qdirective_E_Star:5,Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt:6,EOF:7,directive:8,O_QnotStartAction_E_Or_QstartActions_E_C:9,notStartAction:10,startActions:11,Qstatement_E_Star:12,statement:13,O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C:14,baseDecl:15,prefixDecl:16,importDecl:17,IT_BASE:18,IRIREF:19,IT_PREFIX:20,PNAME_NS:21,iri:22,IT_IMPORT:23,start:24,shapeExprDecl:25,IT_start:26,"=":27,shapeAnd:28,Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star:29,QcodeDecl_E_Plus:30,codeDecl:31,QIT_ABSTRACT_E_Opt:32,shapeExprLabel:33,Qrestriction_E_Star:34,O_QshapeExpression_E_Or_QshapeRef_E_Or_QIT_EXTERNAL_E_C:35,IT_ABSTRACT:36,restriction:37,shapeExpression:38,shapeRef:39,IT_EXTERNAL:40,QIT_NOT_E_Opt:41,shapeAtomNoRef:42,QshapeOr_E_Opt:43,IT_NOT:44,shapeOr:45,inlineShapeExpression:46,inlineShapeOr:47,Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus:48,Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus:49,O_QIT_OR_E_S_QshapeAnd_E_C:50,IT_OR:51,O_QIT_AND_E_S_QshapeNot_E_C:52,IT_AND:53,shapeNot:54,inlineShapeAnd:55,Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star:56,O_QIT_OR_E_S_QinlineShapeAnd_E_C:57,Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star:58,inlineShapeNot:59,Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star:60,O_QIT_AND_E_S_QinlineShapeNot_E_C:61,shapeAtom:62,inlineShapeAtom:63,nonLitNodeConstraint:64,QshapeOrRef_E_Opt:65,litNodeConstraint:66,shapeOrRef:67,QnonLitNodeConstraint_E_Opt:68,"(":69,")":70,".":71,shapeDefinition:72,nonLitInlineNodeConstraint:73,QinlineShapeOrRef_E_Opt:74,litInlineNodeConstraint:75,inlineShapeOrRef:76,QnonLitInlineNodeConstraint_E_Opt:77,inlineShapeDefinition:78,ATPNAME_LN:79,ATPNAME_NS:80,"@":81,Qannotation_E_Star:82,semanticActions:83,annotation:84,IT_LITERAL:85,QxsFacet_E_Star:86,datatype:87,valueSet:88,QnumericFacet_E_Plus:89,xsFacet:90,numericFacet:91,nonLiteralKind:92,QstringFacet_E_Star:93,QstringFacet_E_Plus:94,stringFacet:95,IT_IRI:96,IT_BNODE:97,IT_NONLITERAL:98,stringLength:99,INTEGER:100,REGEXP:101,IT_LENGTH:102,IT_MINLENGTH:103,IT_MAXLENGTH:104,numericRange:105,rawNumeric:106,numericLength:107,DECIMAL:108,DOUBLE:109,string:110,"^^":111,IT_MININCLUSIVE:112,IT_MINEXCLUSIVE:113,IT_MAXINCLUSIVE:114,IT_MAXEXCLUSIVE:115,IT_TOTALDIGITS:116,IT_FRACTIONDIGITS:117,Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star:118,"{":119,QtripleExpression_E_Opt:120,"}":121,O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C:122,extension:123,extraPropertySet:124,IT_CLOSED:125,tripleExpression:126,IT_EXTRA:127,Qpredicate_E_Plus:128,predicate:129,oneOfTripleExpr:130,groupTripleExpr:131,multiElementOneOf:132,Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus:133,O_QGT_PIPE_E_S_QgroupTripleExpr_E_C:134,"|":135,singleElementGroup:136,multiElementGroup:137,unaryTripleExpr:138,QGT_SEMI_E_Opt:139,",":140,";":141,Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus:142,O_QGT_SEMI_E_S_QunaryTripleExpr_E_C:143,Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt:144,O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C:145,include:146,O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C:147,$:148,tripleExprLabel:149,tripleConstraint:150,bracketedTripleExpr:151,Qcardinality_E_Opt:152,cardinality:153,QsenseFlags_E_Opt:154,senseFlags:155,"*":156,"+":157,"?":158,REPEAT_RANGE:159,"^":160,"[":161,QvalueSetValue_E_Star:162,"]":163,valueSetValue:164,iriRange:165,literalRange:166,languageRange:167,O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C:168,QiriExclusion_E_Plus:169,iriExclusion:170,QliteralExclusion_E_Plus:171,literalExclusion:172,QlanguageExclusion_E_Plus:173,languageExclusion:174,Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt:175,QiriExclusion_E_Star:176,O_QGT_TILDE_E_S_QiriExclusion_E_Star_C:177,"~":178,"-":179,QGT_TILDE_E_Opt:180,literal:181,Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt:182,QliteralExclusion_E_Star:183,O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C:184,LANGTAG:185,Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt:186,O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C:187,QlanguageExclusion_E_Star:188,"&":189,"//":190,O_Qiri_E_Or_Qliteral_E_C:191,QcodeDecl_E_Star:192,"%":193,O_QCODE_E_Or_QGT_MODULO_E_C:194,CODE:195,rdfLiteral:196,numericLiteral:197,booleanLiteral:198,a:199,blankNode:200,langString:201,Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt:202,O_QGT_DTYPE_E_S_Qdatatype_E_C:203,IT_true:204,IT_false:205,STRING_LITERAL1:206,STRING_LITERAL_LONG1:207,STRING_LITERAL2:208,STRING_LITERAL_LONG2:209,LANG_STRING_LITERAL1:210,LANG_STRING_LITERAL_LONG1:211,LANG_STRING_LITERAL2:212,LANG_STRING_LITERAL_LONG2:213,prefixedName:214,PNAME_LN:215,BLANK_NODE_LABEL:216,O_QIT_EXTENDS_E_Or_QGT_AMP_E_C:217,extendsShapeExpression:218,extendsShapeOr:219,extendsShapeAnd:220,Q_O_QIT_OR_E_S_QextendsShapeAnd_E_C_E_Star:221,O_QIT_OR_E_S_QextendsShapeAnd_E_C:222,extendsShapeNot:223,Q_O_QIT_AND_E_S_QextendsShapeNot_E_C_E_Star:224,O_QIT_AND_E_S_QextendsShapeNot_E_C:225,extendsShapeAtom:226,IT_EXTENDS:227,O_QIT_RESTRICTS_E_Or_QGT_MINUS_E_C:228,IT_RESTRICTS:229,$accept:0,$end:1},this.terminals_={2:"error",7:"EOF",18:"IT_BASE",19:"IRIREF",20:"IT_PREFIX",21:"PNAME_NS",23:"IT_IMPORT",26:"IT_start",27:"=",36:"IT_ABSTRACT",40:"IT_EXTERNAL",44:"IT_NOT",51:"IT_OR",53:"IT_AND",69:"(",70:")",71:".",79:"ATPNAME_LN",80:"ATPNAME_NS",81:"@",85:"IT_LITERAL",96:"IT_IRI",97:"IT_BNODE",98:"IT_NONLITERAL",100:"INTEGER",101:"REGEXP",102:"IT_LENGTH",103:"IT_MINLENGTH",104:"IT_MAXLENGTH",108:"DECIMAL",109:"DOUBLE",111:"^^",112:"IT_MININCLUSIVE",113:"IT_MINEXCLUSIVE",114:"IT_MAXINCLUSIVE",115:"IT_MAXEXCLUSIVE",116:"IT_TOTALDIGITS",117:"IT_FRACTIONDIGITS",119:"{",121:"}",125:"IT_CLOSED",127:"IT_EXTRA",135:"|",140:",",141:";",148:"$",156:"*",157:"+",158:"?",159:"REPEAT_RANGE",160:"^",161:"[",163:"]",178:"~",179:"-",185:"LANGTAG",189:"&",190:"//",193:"%",195:"CODE",199:"a",204:"IT_true",205:"IT_false",206:"STRING_LITERAL1",207:"STRING_LITERAL_LONG1",208:"STRING_LITERAL2",209:"STRING_LITERAL_LONG2",210:"LANG_STRING_LITERAL1",211:"LANG_STRING_LITERAL_LONG1",212:"LANG_STRING_LITERAL2",213:"LANG_STRING_LITERAL_LONG2",215:"PNAME_LN",216:"BLANK_NODE_LABEL",227:"IT_EXTENDS",229:"IT_RESTRICTS"},this.productions_=[0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[10,1],[10,1],[24,4],[11,1],[30,1],[30,2],[13,1],[13,1],[25,4],[32,0],[32,1],[34,0],[34,2],[35,1],[35,1],[35,1],[38,3],[38,3],[38,2],[43,0],[43,1],[46,1],[45,1],[45,2],[50,2],[48,1],[48,2],[52,2],[49,1],[49,2],[29,0],[29,2],[47,2],[57,2],[56,0],[56,2],[28,2],[58,0],[58,2],[55,2],[61,2],[60,0],[60,2],[54,2],[41,0],[41,1],[59,2],[62,2],[62,1],[62,2],[62,3],[62,1],[65,0],[65,1],[68,0],[68,1],[42,2],[42,1],[42,2],[42,3],[42,1],[63,2],[63,1],[63,2],[63,3],[63,1],[74,0],[74,1],[77,0],[77,1],[67,1],[67,1],[76,1],[76,1],[39,1],[39,1],[39,2],[66,3],[82,0],[82,2],[64,3],[75,2],[75,2],[75,2],[75,1],[86,0],[86,2],[89,1],[89,2],[73,2],[73,1],[93,0],[93,2],[94,1],[94,2],[92,1],[92,1],[92,1],[90,1],[90,1],[95,2],[95,1],[99,1],[99,1],[99,1],[91,2],[91,2],[106,1],[106,1],[106,1],[106,3],[105,1],[105,1],[105,1],[105,1],[107,1],[107,1],[72,3],[78,4],[122,1],[122,1],[122,1],[118,0],[118,2],[120,0],[120,1],[124,2],[128,1],[128,2],[126,1],[130,1],[130,1],[132,2],[134,2],[133,1],[133,2],[131,1],[131,1],[136,2],[139,0],[139,1],[139,1],[137,3],[143,2],[143,2],[142,1],[142,2],[138,2],[138,1],[147,2],[144,0],[144,1],[145,1],[145,1],[151,6],[152,0],[152,1],[150,6],[154,0],[154,1],[153,1],[153,1],[153,1],[153,1],[155,1],[88,3],[162,0],[162,2],[164,1],[164,1],[164,1],[164,2],[169,1],[169,2],[171,1],[171,2],[173,1],[173,2],[168,1],[168,1],[168,1],[165,2],[176,0],[176,2],[177,2],[175,0],[175,1],[170,3],[180,0],[180,1],[166,2],[183,0],[183,2],[184,2],[182,0],[182,1],[172,3],[167,2],[167,2],[188,0],[188,2],[187,2],[186,0],[186,1],[174,3],[146,2],[84,3],[191,1],[191,1],[83,1],[192,0],[192,2],[31,3],[194,1],[194,1],[181,1],[181,1],[181,1],[129,1],[129,1],[87,1],[33,1],[33,1],[149,1],[149,1],[197,1],[197,1],[197,1],[196,1],[196,2],[203,2],[202,0],[202,1],[198,1],[198,1],[110,1],[110,1],[110,1],[110,1],[201,1],[201,1],[201,1],[201,1],[22,1],[22,1],[214,1],[214,1],[200,1],[123,2],[218,1],[219,2],[222,2],[221,0],[221,2],[220,2],[225,2],[224,0],[224,2],[223,2],[226,2],[226,1],[226,2],[226,3],[226,1],[217,1],[217,1],[37,2],[228,1],[228,1]],this.table=[N(I,[2,2],{3:1,4:2}),{1:[3]},N(I,[2,3],{5:3}),N(F,L,{6:4,8:5,14:6,15:7,16:8,17:9,9:10,10:14,11:15,24:16,25:17,30:18,32:20,31:21,7:[2,10],18:[1,11],20:[1,12],23:[1,13],26:[1,19],36:C,193:j}),{7:[1,24]},N(I,[2,4]),{7:[2,11]},N(I,$),N(I,R),N(I,D),N(M,[2,7],{12:25}),{19:[1,26]},{21:[1,27]},{19:P,21:Q,22:28,214:30,215:G},N(M,[2,5]),N(M,[2,6]),N(M,B),N(M,J),N(M,[2,21],{31:33,193:j}),{27:[1,34]},{19:U,21:V,22:36,33:35,200:37,214:39,215:z,216:q},N(I,[2,22]),N(F,[2,28]),{19:Z,21:K,22:43,214:45,215:X},{1:[2,1]},N(F,L,{13:48,8:49,10:50,15:51,16:52,17:53,24:54,25:55,32:60,7:[2,9],18:[1,56],20:[1,57],23:[1,58],26:[1,59],36:C}),N(I,W),{19:P,21:Q,22:61,214:30,215:G},N(I,H),N(I,Y),N(I,ee),N(I,te),N(I,ne),N(I,[2,23]),N(re,se,{28:62,54:63,41:64,44:ie}),N(ae,oe,{34:66}),N(ae,ue),N(ae,ce),N(ae,Y),N(ae,ee),N(ae,le),N(ae,te),N(ae,ne),{193:[1,69],194:67,195:[1,68]},N(pe,Y),N(pe,ee),N(pe,te),N(pe,ne),N(M,[2,8]),N(M,[2,24]),N(M,[2,25]),N(M,$),N(M,R),N(M,D),N(M,B),N(M,J),{19:[1,70]},{21:[1,71]},{19:he,21:fe,22:72,214:74,215:de},{27:[1,77]},{19:U,21:V,22:36,33:78,200:37,214:39,215:z,216:q},N(I,me),N(ge,ye,{29:79}),N(xe,_e,{58:80}),N(be,Ee,{62:81,64:82,66:83,67:84,73:87,75:88,72:89,39:90,92:91,94:92,87:94,88:95,89:96,78:97,95:104,22:105,91:107,118:108,99:109,214:112,105:113,107:114,19:ve,21:Se,69:[1,85],71:[1,86],79:[1,98],80:[1,99],81:[1,100],85:Ae,96:we,97:Te,98:Oe,101:ke,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:Me,215:Pe}),N(re,Qe),N(Ge,se,{35:126,37:127,38:128,39:129,228:131,41:132,40:[1,130],44:[1,133],79:[1,134],80:[1,135],81:[1,136],179:Be,229:Je}),N(I,Ue),N(I,Ve),N(I,ze),N(M,W),{19:he,21:fe,22:139,214:74,215:de},N(M,H),N(M,Y),N(M,ee),N(M,te),N(M,ne),N(re,se,{28:140,54:141,41:142,44:ie}),N(ae,oe,{34:143}),N(M,qe,{50:144,51:Ze}),N(ge,Ke,{52:146,53:Xe}),N(xe,We),N(xe,He,{65:148,67:149,72:150,39:151,78:152,118:156,79:Ye,80:et,81:tt,119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:157,64:158,73:159,92:160,94:161,95:165,99:166,96:st,97:it,98:at,101:ot,102:Ne,103:Ie,104:Fe}),N(Ge,se,{38:168,41:169,39:171,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:175}),N(mt,dt,{82:176}),N(gt,yt),N(gt,xt),N(_t,bt,{93:177}),N(ft,Et,{99:109,95:178,101:ke,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:179}),N(vt,St,{86:180}),N(vt,St,{86:181}),N(mt,At,{105:113,107:114,91:182,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:183}),N(gt,Tt),N(gt,Ot),{19:[1,187],21:[1,191],22:185,33:184,200:186,214:188,215:[1,190],216:[1,189]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:192}),N($t,Rt),{119:[1,193],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,202]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,204],106:203,108:[1,205],109:[1,206],110:207,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,212]},{100:[2,120]},{100:[2,121]},{100:[2,122]},N(vt,te),N(vt,ne),N(zt,[2,129]),N(zt,[2,130]),N(zt,[2,131]),N(zt,[2,132]),{100:[2,133]},{100:[2,134]},N(M,qt),N(ae,[2,30]),N(M,Zt),N(M,Kt,{45:213,48:214,49:215,50:216,52:217,51:Ze,53:Xe}),N(M,Xt),N(be,Ee,{67:218,72:219,39:220,78:221,118:225,79:[1,222],80:[1,223],81:[1,224]}),N(be,Ee,{73:87,75:88,92:91,94:92,87:94,88:95,89:96,78:97,95:104,22:105,91:107,118:108,99:109,214:112,105:113,107:114,42:226,64:227,66:228,72:229,19:ve,21:Se,69:[1,230],71:[1,231],85:Ae,96:we,97:Te,98:Oe,101:ke,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:Me,215:Pe}),N(Ge,Qe,{39:232,79:Ye,80:et,81:tt}),N(xe,Tt),N(xe,Ot),{19:[1,236],21:[1,240],22:234,33:233,200:235,214:237,215:[1,239],216:[1,238]},N(Wt,[2,285]),N(Wt,[2,286]),N(M,me),N(ge,ye,{29:241}),N(xe,_e,{58:242}),N(be,Ee,{62:243,64:244,66:245,67:246,73:249,75:250,72:251,39:252,92:253,94:254,87:256,88:257,89:258,78:259,95:266,22:267,91:269,118:270,99:271,214:274,105:275,107:276,19:Ht,21:Yt,69:[1,247],71:[1,248],79:[1,260],80:[1,261],81:[1,262],85:en,96:tn,97:nn,98:rn,101:sn,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:an,215:on}),N(Ge,se,{37:127,228:131,35:279,38:280,39:281,41:283,40:[1,282],44:[1,284],79:[1,285],80:[1,286],81:[1,287],179:Be,229:Je}),N(ge,un),N(re,se,{28:288,54:289,41:290,44:ie}),N(xe,cn),N(re,se,{54:291,41:292,44:ie}),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:293}),N(xe,Tt),N(xe,Ot),{19:[1,297],21:[1,301],22:295,33:294,200:296,214:298,215:[1,300],216:[1,299]},{119:[1,302],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:303}),N(dn,bt,{93:304}),N(mt,Et,{99:166,95:305,101:ot,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,306]},N(dn,Gt),{70:[1,307]},N(be,Ee,{42:308,64:309,66:310,72:311,73:314,75:315,78:316,92:317,94:318,87:320,88:321,89:322,118:323,95:327,22:328,91:330,99:331,214:334,105:335,107:336,19:[1,333],21:[1,338],69:[1,312],71:[1,313],85:[1,319],96:[1,324],97:[1,325],98:[1,326],101:mn,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,329],215:[1,337]}),N(Ge,Qe,{39:339,79:gn,80:yn,81:xn}),{45:343,48:344,49:345,50:346,51:_n,52:347,53:bn},N(En,Tt),N(En,Ot),{19:[1,353],21:[1,357],22:351,33:350,200:352,214:354,215:[1,356],216:[1,355]},N(vn,Sn,{83:358,84:359,192:360,190:[1,361]}),N(An,Sn,{83:362,84:363,192:364,190:wn}),N(ft,Tn,{99:109,95:366,101:ke,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:367,95:368,91:369,99:370,105:372,107:373,101:Nn,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:367,95:368,91:369,99:370,105:372,107:373,101:Nn,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:367,95:368,91:369,99:370,105:372,107:373,101:Nn,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:374,84:375,192:376,190:[1,377]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,378],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{120:410,126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,121:nr,148:rr,189:sr}),N(be,[2,141]),N(be,[2,137]),N(be,[2,138]),N(be,[2,139]),N(re,se,{218:423,219:424,220:425,223:426,41:427,44:ie}),{19:ir,21:ar,22:430,128:428,129:429,199:or,214:433,215:ur},N(cr,[2,282]),N(cr,[2,283]),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,436]},{111:mr},{111:gr},{111:yr},{111:xr},N($t,_r),N(M,br),N(M,Er,{50:437,51:Ze}),N(ge,ye,{29:438,52:439,53:Xe}),N(ge,vr),N(xe,Sr),N(ae,[2,284]),N(ae,yt),N(ae,xt),N(Ar,dt,{82:440}),N(ae,Tt),N(ae,Ot),{19:[1,444],21:[1,448],22:442,33:441,200:443,214:445,215:[1,447],216:[1,446]},{119:[1,449],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(M,wr,{48:214,49:215,50:216,52:217,43:450,45:451,51:Ze,53:Xe}),N(xe,He,{67:149,72:150,39:151,78:152,118:156,65:452,79:Ye,80:et,81:tt,119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,Tr),N(xe,rt,{64:158,73:159,92:160,94:161,95:165,99:166,68:453,96:st,97:it,98:at,101:ot,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:454,44:ut,79:ct,80:lt,81:pt}),N(xe,Or),N(M,wr,{48:214,49:215,50:216,52:217,45:451,43:455,51:Ze,53:Xe}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(M,qe,{50:456,51:kr}),N(ge,Ke,{52:458,53:Nr}),N(xe,We),N(xe,He,{65:460,67:461,72:462,39:463,78:464,118:468,79:Ir,80:Fr,81:Lr,119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:469,64:470,73:471,92:472,94:473,95:477,99:478,96:Cr,97:jr,98:$r,101:Rr,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:480,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:481}),N(mt,dt,{82:482}),N(gt,yt),N(gt,xt),N(_t,bt,{93:483}),N(ft,Et,{99:271,95:484,101:sn,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:485}),N(vt,St,{86:486}),N(vt,St,{86:487}),N(mt,At,{105:275,107:276,91:488,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:489}),N(gt,Tt),N(gt,Ot),{19:[1,493],21:[1,497],22:491,33:490,200:492,214:494,215:[1,496],216:[1,495]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:498}),N($t,Rt),{119:[1,499],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,500]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,502],106:501,108:[1,503],109:[1,504],110:505,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,506]},N(vt,te),N(vt,ne),N(M,qt),N(M,Zt),N(M,Kt,{45:507,48:508,49:509,50:510,52:511,51:kr,53:Nr}),N(M,Xt),N(be,Ee,{73:249,75:250,92:253,94:254,87:256,88:257,89:258,78:259,95:266,22:267,91:269,118:270,99:271,214:274,105:275,107:276,42:512,64:513,66:514,72:515,19:Ht,21:Yt,69:[1,516],71:[1,517],85:en,96:tn,97:nn,98:rn,101:sn,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:an,215:on}),N(Ge,Qe,{39:518,79:Ir,80:Fr,81:Lr}),N(xe,Tt),N(xe,Ot),{19:[1,522],21:[1,526],22:520,33:519,200:521,214:523,215:[1,525],216:[1,524]},N(ge,Dr),N(xe,_e,{58:527}),N(be,Ee,{62:528,64:529,66:530,67:531,73:534,75:535,72:536,39:537,92:538,94:539,87:541,88:542,89:543,78:544,95:551,22:552,91:554,118:555,99:556,214:559,105:560,107:561,19:[1,558],21:[1,563],69:[1,532],71:[1,533],79:[1,545],80:[1,546],81:[1,547],85:[1,540],96:[1,548],97:[1,549],98:[1,550],101:Mr,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,553],215:[1,562]}),N(xe,Pr),N(be,Ee,{62:564,64:565,66:566,67:567,73:570,75:571,72:572,39:573,92:574,94:575,87:577,88:578,89:579,78:580,95:587,22:588,91:590,118:591,99:592,214:595,105:596,107:597,19:[1,594],21:[1,599],69:[1,568],71:[1,569],79:[1,581],80:[1,582],81:[1,583],85:[1,576],96:[1,584],97:[1,585],98:[1,586],101:Qr,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,589],215:[1,598]}),N(An,Sn,{84:363,192:364,83:600,190:wn}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:601,121:nr,148:rr,189:sr}),N(An,Sn,{84:363,192:364,83:602,190:wn}),N(mt,Tn,{99:166,95:603,101:ot,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),{43:604,45:605,48:344,49:345,50:346,51:_n,52:347,53:bn,70:wr},N(be,Ee,{65:606,67:607,72:608,39:609,78:610,118:611,51:He,53:He,70:He,79:gn,80:yn,81:xn}),N(Br,Tr),N(Br,rt,{68:612,64:613,73:614,92:615,94:616,95:620,99:621,96:[1,617],97:[1,618],98:[1,619],101:Jr,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:623,44:ut,79:ct,80:lt,81:pt}),N(Br,Or),N(Ur,dt,{82:624}),N(Vr,dt,{82:625}),N(zr,dt,{82:626}),N(qr,bt,{93:627}),N(Ur,Et,{99:331,95:628,101:mn,102:Ne,103:Ie,104:Fe}),N(Zr,St,{86:629}),N(Zr,St,{86:630}),N(Zr,St,{86:631}),N(Vr,At,{105:335,107:336,91:632,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),{119:[1,633],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(qr,kt),N(qr,Nt),N(qr,It),N(qr,Ft),N(Zr,Lt),N(Ct,jt,{162:634}),N(Kr,Rt),{100:[1,635]},N(qr,Gt),N(Zr,Y),N(Zr,ee),{100:[1,637],106:636,108:[1,638],109:[1,639],110:640,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,641]},N(Zr,te),N(Zr,ne),{43:642,45:605,48:344,49:345,50:346,51:_n,52:347,53:bn,70:wr},N(Br,Tt),N(Br,Ot),{19:[1,646],21:[1,650],22:644,33:643,200:645,214:647,215:[1,649],216:[1,648]},{70:br},{50:651,51:_n,70:Er},N(Xr,ye,{29:652,52:653,53:bn}),N(Xr,vr),N(Br,Sr),N(re,se,{28:654,54:655,41:656,44:ie}),N(re,se,{54:657,41:658,44:ie}),N(En,jn),N(En,ue),N(En,ce),N(En,Y),N(En,ee),N(En,le),N(En,te),N(En,ne),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:659,193:[1,660]}),{19:ts,21:ns,22:662,129:661,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:668,193:[1,669]}),{19:ts,21:ns,22:662,129:670,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,671]},N(vt,Gt),{100:[1,673],106:672,108:[1,674],109:[1,675],110:676,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,677]},N(gt,ls),N(wt,Yr),N(gt,es,{31:678,193:[1,679]}),{19:ts,21:ns,22:662,129:680,199:rs,214:665,215:ss},N(vt,ps),N(Ct,[2,185]),N(Ct,[2,186]),N(Ct,[2,187]),N(Ct,[2,188]),{168:681,169:682,170:685,171:683,172:686,173:684,174:687,179:[1,688]},N(Ct,[2,203],{175:689,177:690,178:[1,691]}),N(Ct,[2,212],{182:692,184:693,178:[1,694]}),N(Ct,[2,220],{186:695,187:696,178:hs}),{178:hs,187:698},N(fs,Y),N(fs,ee),N(fs,ds),N(fs,ms),N(fs,gs),N(fs,te),N(fs,ne),N(fs,ys),N(fs,xs,{202:699,203:700,111:[1,701]}),N(fs,_s),N(fs,bs),N(fs,Es),N(fs,vs),N(fs,Ss),N(fs,As),N(fs,ws),N(fs,Ts),N(fs,Os),N(ks,mr),N(ks,gr),N(ks,yr),N(ks,xr),{121:[1,702]},{121:[2,143]},{121:Ns},{121:Is,133:703,134:704,135:Fs},{121:Ls},N(Cs,js),N(Cs,$s),N(Cs,Rs,{139:706,142:707,143:710,140:Ds,141:Ms}),N(Ps,Qs,{145:711,150:712,151:713,154:714,155:716,69:[1,715],160:Gs}),N(Bs,Js),N(er,[2,169]),{19:[1,721],21:[1,725],22:719,149:718,200:720,214:722,215:[1,724],216:[1,723]},{19:[1,729],21:[1,733],22:727,149:726,200:728,214:730,215:[1,732],216:[1,731]},N(be,[2,266]),N(be,[2,267]),N(Us,[2,270],{221:734}),N(Vs,zs,{224:735}),N(be,Ee,{226:736,73:737,75:738,76:739,92:742,94:743,87:745,88:746,89:747,78:748,39:749,95:753,22:754,91:756,118:757,99:761,214:764,105:765,107:766,19:[1,763],21:[1,768],69:[1,740],71:[1,741],79:[1,758],80:[1,759],81:[1,760],85:[1,744],96:qs,97:Zs,98:Ks,101:Xs,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,755],215:[1,767]}),N(be,[2,144],{22:430,214:433,129:769,19:ir,21:ar,199:or,215:ur}),N(Ws,[2,145]),N(Ws,Hs),N(Ws,Ys),N(Ws,Y),N(Ws,ee),N(Ws,te),N(Ws,ne),{19:[1,772],21:[1,775],22:771,87:770,214:773,215:[1,774]},N(ge,ei),N(M,ti,{50:144,51:Ze}),N(xe,ni),N(ri,Sn,{83:776,84:777,192:778,190:[1,779]}),N(ae,jn),N(ae,ue),N(ae,ce),N(ae,Y),N(ae,ee),N(ae,le),N(ae,te),N(ae,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:780,121:nr,148:rr,189:sr}),N(M,si),N(M,ii),N(xe,ai),N(xe,oi),{70:[1,781]},N(M,ui),N(ge,un),N(re,se,{28:782,54:783,41:784,44:ie}),N(xe,cn),N(re,se,{54:785,41:786,44:ie}),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:787}),N(xe,Tt),N(xe,Ot),{19:[1,791],21:[1,795],22:789,33:788,200:790,214:792,215:[1,794],216:[1,793]},{119:[1,796],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:797}),N(dn,bt,{93:798}),N(mt,Et,{99:478,95:799,101:Rr,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,800]},N(dn,Gt),{70:[1,801]},N(vn,Sn,{83:802,84:803,192:804,190:[1,805]}),N(An,Sn,{83:806,84:807,192:808,190:ci}),N(ft,Tn,{99:271,95:810,101:sn,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:811,95:812,91:813,99:814,105:816,107:817,101:li,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:811,95:812,91:813,99:814,105:816,107:817,101:li,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:811,95:812,91:813,99:814,105:816,107:817,101:li,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:818,84:819,192:820,190:[1,821]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,822],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:823,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,824]},N($t,_r),N(M,br),N(M,Er,{50:825,51:kr}),N(ge,ye,{29:826,52:827,53:Nr}),N(ge,vr),N(xe,Sr),N(M,wr,{48:508,49:509,50:510,52:511,43:828,45:829,51:kr,53:Nr}),N(xe,He,{67:461,72:462,39:463,78:464,118:468,65:830,79:Ir,80:Fr,81:Lr,119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,Tr),N(xe,rt,{64:470,73:471,92:472,94:473,95:477,99:478,68:831,96:Cr,97:jr,98:$r,101:Rr,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:832,44:ut,79:ct,80:lt,81:pt}),N(xe,Or),N(M,wr,{48:508,49:509,50:510,52:511,45:829,43:833,51:kr,53:Nr}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(ge,Ke,{52:834,53:[1,835]}),N(xe,We),N(xe,He,{65:836,67:837,72:838,39:839,78:840,118:844,79:[1,841],80:[1,842],81:[1,843],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:845,64:846,73:847,92:848,94:849,95:853,99:854,96:[1,850],97:[1,851],98:[1,852],101:pi,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:856,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:857}),N(mt,dt,{82:858}),N(gt,yt),N(gt,xt),N(_t,bt,{93:859}),N(ft,Et,{99:556,95:860,101:Mr,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:861}),N(vt,St,{86:862}),N(vt,St,{86:863}),N(mt,At,{105:560,107:561,91:864,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:865}),N(gt,Tt),N(gt,Ot),{19:[1,869],21:[1,873],22:867,33:866,200:868,214:870,215:[1,872],216:[1,871]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:874}),N($t,Rt),{119:[1,875],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,876]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,878],106:877,108:[1,879],109:[1,880],110:881,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,882]},N(vt,te),N(vt,ne),N(xe,We),N(xe,He,{65:883,67:884,72:885,39:886,78:887,118:891,79:[1,888],80:[1,889],81:[1,890],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:892,64:893,73:894,92:895,94:896,95:900,99:901,96:[1,897],97:[1,898],98:[1,899],101:hi,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:903,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:904}),N(mt,dt,{82:905}),N(gt,yt),N(gt,xt),N(_t,bt,{93:906}),N(ft,Et,{99:592,95:907,101:Qr,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:908}),N(vt,St,{86:909}),N(vt,St,{86:910}),N(mt,At,{105:596,107:597,91:911,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:912}),N(gt,Tt),N(gt,Ot),{19:[1,916],21:[1,920],22:914,33:913,200:915,214:917,215:[1,919],216:[1,918]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:921}),N($t,Rt),{119:[1,922],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,923]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,925],106:924,108:[1,926],109:[1,927],110:928,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,929]},N(vt,te),N(vt,ne),N(xe,ls),{121:[1,930]},N(xe,Hr),N(dn,as),{70:si},{70:ii},N(Br,ai),N(Br,pn),N(Br,yt),N(Br,xt),N(Vr,dt,{82:931}),{119:[1,932],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Br,oi),N(Br,fn),N(Vr,dt,{82:933}),N(fi,bt,{93:934}),N(Vr,Et,{99:621,95:935,101:Jr,102:Ne,103:Ie,104:Fe}),N(fi,kt),N(fi,Nt),N(fi,It),N(fi,Ft),{100:[1,936]},N(fi,Gt),{70:[1,937]},N(di,Sn,{83:938,84:939,192:940,190:[1,941]}),N(mi,Sn,{83:942,84:943,192:944,190:gi}),N(yi,Sn,{83:946,84:947,192:948,190:[1,949]}),N(Ur,Tn,{99:331,95:950,101:mn,102:Ne,103:Ie,104:Fe}),N(qr,On),N(Vr,kn,{90:951,95:952,91:953,99:954,105:956,107:957,101:xi,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,In,{90:951,95:952,91:953,99:954,105:956,107:957,101:xi,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,Fn,{90:951,95:952,91:953,99:954,105:956,107:957,101:xi,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Kr,Ln),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:958,121:nr,148:rr,189:sr}),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,959],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(qr,lr),N(Kr,pr),N(Kr,hr),N(Kr,fr),N(Kr,dr),{111:[1,960]},N(Kr,_r),{70:ui},N(Br,jn),N(Br,ue),N(Br,ce),N(Br,Y),N(Br,ee),N(Br,le),N(Br,te),N(Br,ne),N(Xr,ei),{50:961,51:_n,70:ti},N(Br,ni),N(Xr,Dr),N(Br,_e,{58:962}),N(be,Ee,{62:963,64:964,66:965,67:966,73:969,75:970,72:971,39:972,92:973,94:974,87:976,88:977,89:978,78:979,95:986,22:987,91:989,118:990,99:991,214:994,105:995,107:996,19:[1,993],21:[1,998],69:[1,967],71:[1,968],79:[1,980],80:[1,981],81:[1,982],85:[1,975],96:[1,983],97:[1,984],98:[1,985],101:_i,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,988],215:[1,997]}),N(Br,Pr),N(be,Ee,{62:999,64:1e3,66:1001,67:1002,73:1005,75:1006,72:1007,39:1008,92:1009,94:1010,87:1012,88:1013,89:1014,78:1015,95:1022,22:1023,91:1025,118:1026,99:1027,214:1030,105:1031,107:1032,19:[1,1029],21:[1,1034],69:[1,1003],71:[1,1004],79:[1,1016],80:[1,1017],81:[1,1018],85:[1,1011],96:[1,1019],97:[1,1020],98:[1,1021],101:bi,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,1024],215:[1,1033]}),N(vn,Ei),{19:Z,21:K,22:1035,214:45,215:X},{19:vi,21:Si,22:1037,100:[1,1048],108:[1,1049],109:[1,1050],110:1047,181:1038,191:1036,196:1041,197:1042,198:1043,201:1046,204:[1,1051],205:[1,1052],206:[1,1057],207:[1,1058],208:[1,1059],209:[1,1060],210:[1,1053],211:[1,1054],212:[1,1055],213:[1,1056],214:1040,215:Ai},N(wi,Hs),N(wi,Ys),N(wi,Y),N(wi,ee),N(wi,te),N(wi,ne),N(An,Ei),{19:Z,21:K,22:1061,214:45,215:X},{19:Ti,21:Oi,22:1063,100:[1,1074],108:[1,1075],109:[1,1076],110:1073,181:1064,191:1062,196:1067,197:1068,198:1069,201:1072,204:[1,1077],205:[1,1078],206:[1,1083],207:[1,1084],208:[1,1085],209:[1,1086],210:[1,1079],211:[1,1080],212:[1,1081],213:[1,1082],214:1066,215:ki},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,1087]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:1088,214:45,215:X},{19:Ni,21:Ii,22:1090,100:[1,1101],108:[1,1102],109:[1,1103],110:1100,181:1091,191:1089,196:1094,197:1095,198:1096,201:1099,204:[1,1104],205:[1,1105],206:[1,1110],207:[1,1111],208:[1,1112],209:[1,1113],210:[1,1106],211:[1,1107],212:[1,1108],213:[1,1109],214:1093,215:Fi},N(Ct,[2,189]),N(Ct,[2,196],{170:1114,179:Li}),N(Ct,[2,197],{172:1116,179:Ci}),N(Ct,[2,198],{174:1118,179:ji}),N($i,[2,190]),N($i,[2,192]),N($i,[2,194]),{19:Ri,21:Di,22:1120,100:Mi,108:Pi,109:Qi,110:1131,181:1121,185:Gi,196:1125,197:1126,198:1127,201:1130,204:Bi,205:Ji,206:Ui,207:Vi,208:zi,209:qi,210:Zi,211:Ki,212:Xi,213:Wi,214:1124,215:Hi},N(Ct,[2,199]),N(Ct,[2,204]),N($i,[2,200],{176:1145}),N(Ct,[2,208]),N(Ct,[2,213]),N($i,[2,209],{183:1146}),N(Ct,[2,215]),N(Ct,[2,221]),N($i,[2,217],{188:1147}),N(Ct,[2,216]),N(fs,Yi),N(fs,ea),{19:$n,21:Rn,22:1149,87:1148,214:389,215:Yn},N(wt,ta),{121:na,134:1150,135:Fs},N(Cs,ra),N(er,tr,{136:415,137:416,138:417,144:418,146:419,147:420,131:1151,148:rr,189:sr}),N(Cs,sa),N(Cs,Rs,{139:1152,143:1153,140:Ds,141:Ms}),N(er,tr,{144:418,146:419,147:420,138:1154,121:ia,135:ia,148:rr,189:sr}),N(er,tr,{144:418,146:419,147:420,138:1155,121:aa,135:aa,148:rr,189:sr}),N(Bs,oa),N(Bs,ua),N(Bs,ca),N(Bs,la),{19:pa,21:ha,22:1157,129:1156,199:fa,214:1160,215:da},N(er,tr,{147:420,126:1163,130:1164,131:1165,132:1166,136:1167,137:1168,138:1169,144:1170,146:1171,148:rr,189:ma}),N(Ps,[2,177]),N(Ps,[2,182]),N(Bs,ga),N(Bs,ya),N(Bs,xa),N(Bs,Y),N(Bs,ee),N(Bs,le),N(Bs,te),N(Bs,ne),N(er,[2,167]),N(er,ya),N(er,xa),N(er,Y),N(er,ee),N(er,le),N(er,te),N(er,ne),N(be,[2,268],{222:1173,51:[1,1174]}),N(Us,_a,{225:1175,53:[1,1176]}),N(Vs,ba),N(be,Ee,{76:1177,78:1178,39:1179,118:1180,79:[1,1181],80:[1,1182],81:[1,1183]}),N(Vs,Ea),N(Vs,va,{77:1184,73:1185,92:1186,94:1187,95:1191,99:1192,96:[1,1188],97:[1,1189],98:[1,1190],101:Sa,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:1194,44:ut,79:ct,80:lt,81:pt}),N(Vs,Aa),N(wa,bt,{93:1195}),N(Wt,Et,{99:761,95:1196,101:Xs,102:Ne,103:Ie,104:Fe}),N(Ta,St,{86:1197}),N(Ta,St,{86:1198}),N(Ta,St,{86:1199}),N(Vs,At,{105:765,107:766,91:1200,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Oa,ka),N(Oa,Na),N(wa,kt),N(wa,Nt),N(wa,It),N(wa,Ft),N(Ta,Lt),N(Ct,jt,{162:1201}),N(Ia,Rt),{119:[1,1202],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Oa,Tt),N(Oa,Ot),{19:[1,1206],21:[1,1210],22:1204,33:1203,200:1205,214:1207,215:[1,1209],216:[1,1208]},{100:[1,1211]},N(wa,Gt),N(Ta,Y),N(Ta,ee),{100:[1,1213],106:1212,108:[1,1214],109:[1,1215],110:1216,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1217]},N(Ta,te),N(Ta,ne),N(Ws,[2,146]),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(ae,ls),N(Ar,Yr),N(ae,es,{31:1218,193:[1,1219]}),{19:ts,21:ns,22:662,129:1220,199:rs,214:665,215:ss},{121:[1,1221]},N(xe,La),N(ge,Dr),N(xe,_e,{58:1222}),N(be,Ee,{62:1223,64:1224,66:1225,67:1226,73:1229,75:1230,72:1231,39:1232,92:1233,94:1234,87:1236,88:1237,89:1238,78:1239,95:1246,22:1247,91:1249,118:1250,99:1251,214:1254,105:1255,107:1256,19:[1,1253],21:[1,1258],69:[1,1227],71:[1,1228],79:[1,1240],80:[1,1241],81:[1,1242],85:[1,1235],96:[1,1243],97:[1,1244],98:[1,1245],101:Ca,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,1248],215:[1,1257]}),N(xe,Pr),N(be,Ee,{62:1259,64:1260,66:1261,67:1262,73:1265,75:1266,72:1267,39:1268,92:1269,94:1270,87:1272,88:1273,89:1274,78:1275,95:1282,22:1283,91:1285,118:1286,99:1287,214:1290,105:1291,107:1292,19:[1,1289],21:[1,1294],69:[1,1263],71:[1,1264],79:[1,1276],80:[1,1277],81:[1,1278],85:[1,1271],96:[1,1279],97:[1,1280],98:[1,1281],101:ja,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,1284],215:[1,1293]}),N(An,Sn,{84:807,192:808,83:1295,190:ci}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1296,121:nr,148:rr,189:sr}),N(An,Sn,{84:807,192:808,83:1297,190:ci}),N(mt,Tn,{99:478,95:1298,101:Rr,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:1299,193:[1,1300]}),{19:ts,21:ns,22:662,129:1301,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:1302,193:[1,1303]}),{19:ts,21:ns,22:662,129:1304,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,1305]},N(vt,Gt),{100:[1,1307],106:1306,108:[1,1308],109:[1,1309],110:1310,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1311]},N(gt,ls),N(wt,Yr),N(gt,es,{31:1312,193:[1,1313]}),{19:ts,21:ns,22:662,129:1314,199:rs,214:665,215:ss},N(vt,ps),{121:[1,1315]},{19:[1,1318],21:[1,1321],22:1317,87:1316,214:1319,215:[1,1320]},N(ge,ei),N(M,ti,{50:456,51:kr}),N(xe,ni),N(M,si),N(M,ii),N(xe,ai),N(xe,oi),{70:[1,1322]},N(M,ui),N(xe,cn),N(re,se,{54:1323,41:1324,44:ie}),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:1325}),N(xe,Tt),N(xe,Ot),{19:[1,1329],21:[1,1333],22:1327,33:1326,200:1328,214:1330,215:[1,1332],216:[1,1331]},{119:[1,1334],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:1335}),N(dn,bt,{93:1336}),N(mt,Et,{99:854,95:1337,101:pi,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,1338]},N(dn,Gt),{70:[1,1339]},N(vn,Sn,{83:1340,84:1341,192:1342,190:[1,1343]}),N(An,Sn,{83:1344,84:1345,192:1346,190:$a}),N(ft,Tn,{99:556,95:1348,101:Mr,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:1349,95:1350,91:1351,99:1352,105:1354,107:1355,101:Ra,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:1349,95:1350,91:1351,99:1352,105:1354,107:1355,101:Ra,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:1349,95:1350,91:1351,99:1352,105:1354,107:1355,101:Ra,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:1356,84:1357,192:1358,190:[1,1359]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,1360],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1361,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,1362]},N($t,_r),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:1363}),N(xe,Tt),N(xe,Ot),{19:[1,1367],21:[1,1371],22:1365,33:1364,200:1366,214:1368,215:[1,1370],216:[1,1369]},{119:[1,1372],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:1373}),N(dn,bt,{93:1374}),N(mt,Et,{99:901,95:1375,101:hi,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,1376]},N(dn,Gt),{70:[1,1377]},N(vn,Sn,{83:1378,84:1379,192:1380,190:[1,1381]}),N(An,Sn,{83:1382,84:1383,192:1384,190:Da}),N(ft,Tn,{99:592,95:1386,101:Qr,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:1387,95:1388,91:1389,99:1390,105:1392,107:1393,101:Ma,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:1387,95:1388,91:1389,99:1390,105:1392,107:1393,101:Ma,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:1387,95:1388,91:1389,99:1390,105:1392,107:1393,101:Ma,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:1394,84:1395,192:1396,190:[1,1397]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,1398],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1399,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,1400]},N($t,_r),N(mt,ta),N(mi,Sn,{84:943,192:944,83:1401,190:gi}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1402,121:nr,148:rr,189:sr}),N(mi,Sn,{84:943,192:944,83:1403,190:gi}),N(Vr,Tn,{99:621,95:1404,101:Jr,102:Ne,103:Ie,104:Fe}),N(fi,On),N(fi,lr),N(Br,La),N(Pa,Hr),N(Ur,Yr),N(Pa,es,{31:1405,193:[1,1406]}),{19:ts,21:ns,22:662,129:1407,199:rs,214:665,215:ss},N(Br,is),N(Vr,Yr),N(Br,es,{31:1408,193:[1,1409]}),{19:ts,21:ns,22:662,129:1410,199:rs,214:665,215:ss},N(Qa,ls),N(zr,Yr),N(Qa,es,{31:1411,193:[1,1412]}),{19:ts,21:ns,22:662,129:1413,199:rs,214:665,215:ss},N(qr,as),N(Zr,os),N(Zr,us),N(Zr,cs),{100:[1,1414]},N(Zr,Gt),{100:[1,1416],106:1415,108:[1,1417],109:[1,1418],110:1419,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1420]},{121:[1,1421]},N(Zr,ps),{19:[1,1424],21:[1,1427],22:1423,87:1422,214:1425,215:[1,1426]},N(Xr,un),N(Xr,Ke,{52:1428,53:[1,1429]}),N(Br,We),N(be,Ee,{65:1430,67:1431,72:1432,39:1433,78:1434,118:1438,51:He,53:He,70:He,79:[1,1435],80:[1,1436],81:[1,1437]}),N(Br,nt),N(Br,rt,{68:1439,64:1440,73:1441,92:1442,94:1443,95:1447,99:1448,96:[1,1444],97:[1,1445],98:[1,1446],101:Ga,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:1450,44:ut,79:ct,80:lt,81:pt}),N(Br,ht),N(Ur,dt,{82:1451}),N(Vr,dt,{82:1452}),N(Qa,yt),N(Qa,xt),N(qr,bt,{93:1453}),N(Ur,Et,{99:991,95:1454,101:_i,102:Ne,103:Ie,104:Fe}),N(Zr,St,{86:1455}),N(Zr,St,{86:1456}),N(Zr,St,{86:1457}),N(Vr,At,{105:995,107:996,91:1458,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(zr,dt,{82:1459}),N(Qa,Tt),N(Qa,Ot),{19:[1,1463],21:[1,1467],22:1461,33:1460,200:1462,214:1464,215:[1,1466],216:[1,1465]},N(qr,kt),N(qr,Nt),N(qr,It),N(qr,Ft),N(Zr,Lt),N(Ct,jt,{162:1468}),N(Kr,Rt),{119:[1,1469],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,1470]},N(qr,Gt),N(Zr,Y),N(Zr,ee),{100:[1,1472],106:1471,108:[1,1473],109:[1,1474],110:1475,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1476]},N(Zr,te),N(Zr,ne),N(Br,We),N(be,Ee,{65:1477,67:1478,72:1479,39:1480,78:1481,118:1485,51:He,53:He,70:He,79:[1,1482],80:[1,1483],81:[1,1484]}),N(Br,nt),N(Br,rt,{68:1486,64:1487,73:1488,92:1489,94:1490,95:1494,99:1495,96:[1,1491],97:[1,1492],98:[1,1493],101:Ba,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:1497,44:ut,79:ct,80:lt,81:pt}),N(Br,ht),N(Ur,dt,{82:1498}),N(Vr,dt,{82:1499}),N(Qa,yt),N(Qa,xt),N(qr,bt,{93:1500}),N(Ur,Et,{99:1027,95:1501,101:bi,102:Ne,103:Ie,104:Fe}),N(Zr,St,{86:1502}),N(Zr,St,{86:1503}),N(Zr,St,{86:1504}),N(Vr,At,{105:1031,107:1032,91:1505,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(zr,dt,{82:1506}),N(Qa,Tt),N(Qa,Ot),{19:[1,1510],21:[1,1514],22:1508,33:1507,200:1509,214:1511,215:[1,1513],216:[1,1512]},N(qr,kt),N(qr,Nt),N(qr,It),N(qr,Ft),N(Zr,Lt),N(Ct,jt,{162:1515}),N(Kr,Rt),{119:[1,1516],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,1517]},N(qr,Gt),N(Zr,Y),N(Zr,ee),{100:[1,1519],106:1518,108:[1,1520],109:[1,1521],110:1522,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1523]},N(Zr,te),N(Zr,ne),{193:[1,1526],194:1524,195:[1,1525]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:1527,203:1528,111:[1,1529]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,1532],194:1530,195:[1,1531]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:1533,203:1534,111:[1,1535]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,1538],21:[1,1541],22:1537,87:1536,214:1539,215:[1,1540]},{193:[1,1544],194:1542,195:[1,1543]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:1545,203:1546,111:[1,1547]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N($i,[2,191]),{19:Ri,21:Di,22:1120,214:1124,215:Hi},N($i,[2,193]),{100:Mi,108:Pi,109:Qi,110:1131,181:1121,196:1125,197:1126,198:1127,201:1130,204:Bi,205:Ji,206:Ui,207:Vi,208:zi,209:qi,210:Zi,211:Ki,212:Xi,213:Wi},N($i,[2,195]),{185:Gi},N($i,Ka,{180:1548,178:Xa}),N($i,Ka,{180:1550,178:Xa}),N($i,Ka,{180:1551,178:Xa}),N(Wa,Y),N(Wa,ee),N(Wa,ds),N(Wa,ms),N(Wa,gs),N(Wa,te),N(Wa,ne),N(Wa,ys),N(Wa,xs,{202:1552,203:1553,111:[1,1554]}),N(Wa,_s),N(Wa,bs),N(Wa,Es),N(Wa,vs),N(Wa,Ss),N(Wa,As),N(Wa,ws),N(Wa,Ts),N(Wa,Os),N(Ha,mr),N(Ha,gr),N(Ha,yr),N(Ha,xr),N(Ct,[2,202],{170:1555,179:Li}),N(Ct,[2,211],{172:1556,179:Ci}),N(Ct,[2,219],{174:1557,179:ji}),N(fs,Ya),N(fs,Lt),N(Cs,eo),N(Cs,to),N(Cs,no),N(Bs,ro),N(Bs,so),N(Bs,io),N(re,se,{46:1558,47:1559,55:1560,59:1561,41:1562,44:ie}),N(cr,Hs),N(cr,Ys),N(cr,Y),N(cr,ee),N(cr,te),N(cr,ne),{70:[1,1563]},{70:Ns},{70:Is,133:1564,134:1565,135:ao},{70:Ls},N(oo,js),N(oo,$s),N(oo,Rs,{139:1567,142:1568,143:1571,140:uo,141:co}),N(Ps,Qs,{155:716,145:1572,150:1573,151:1574,154:1575,69:[1,1576],160:Gs}),N(lo,Js),{19:[1,1580],21:[1,1584],22:1578,149:1577,200:1579,214:1581,215:[1,1583],216:[1,1582]},N(Us,[2,271]),N(re,se,{220:1585,223:1586,41:1587,44:ie}),N(Vs,po),N(re,se,{223:1588,41:1589,44:ie}),N(Vs,ho),N(Vs,ka),N(Vs,Na),{119:[1,1590],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Vs,Tt),N(Vs,Ot),{19:[1,1594],21:[1,1598],22:1592,33:1591,200:1593,214:1595,215:[1,1597],216:[1,1596]},N(Vs,fo),N(Vs,mo),N(go,bt,{93:1599}),N(Vs,Et,{99:1192,95:1600,101:Sa,102:Ne,103:Ie,104:Fe}),N(go,kt),N(go,Nt),N(go,It),N(go,Ft),{100:[1,1601]},N(go,Gt),{70:[1,1602]},N(Wt,Tn,{99:761,95:1603,101:Xs,102:Ne,103:Ie,104:Fe}),N(wa,On),N(Vs,kn,{90:1604,95:1605,91:1606,99:1607,105:1609,107:1610,101:yo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,In,{90:1604,95:1605,91:1606,99:1607,105:1609,107:1610,101:yo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,Fn,{90:1604,95:1605,91:1606,99:1607,105:1609,107:1610,101:yo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Ia,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,1611],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1612,121:nr,148:rr,189:sr}),N(Oa,jn),N(Oa,ue),N(Oa,ce),N(Oa,Y),N(Oa,ee),N(Oa,le),N(Oa,te),N(Oa,ne),N(wa,lr),N(Ia,pr),N(Ia,hr),N(Ia,fr),N(Ia,dr),{111:[1,1613]},N(Ia,_r),N(ri,Ei),{19:Z,21:K,22:1614,214:45,215:X},{19:xo,21:_o,22:1616,100:[1,1627],108:[1,1628],109:[1,1629],110:1626,181:1617,191:1615,196:1620,197:1621,198:1622,201:1625,204:[1,1630],205:[1,1631],206:[1,1636],207:[1,1637],208:[1,1638],209:[1,1639],210:[1,1632],211:[1,1633],212:[1,1634],213:[1,1635],214:1619,215:bo},N(Ar,ta),N(ge,Ke,{52:1640,53:[1,1641]}),N(xe,We),N(xe,He,{65:1642,67:1643,72:1644,39:1645,78:1646,118:1650,79:[1,1647],80:[1,1648],81:[1,1649],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:1651,64:1652,73:1653,92:1654,94:1655,95:1659,99:1660,96:[1,1656],97:[1,1657],98:[1,1658],101:Eo,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:1662,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:1663}),N(mt,dt,{82:1664}),N(gt,yt),N(gt,xt),N(_t,bt,{93:1665}),N(ft,Et,{99:1251,95:1666,101:Ca,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:1667}),N(vt,St,{86:1668}),N(vt,St,{86:1669}),N(mt,At,{105:1255,107:1256,91:1670,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:1671}),N(gt,Tt),N(gt,Ot),{19:[1,1675],21:[1,1679],22:1673,33:1672,200:1674,214:1676,215:[1,1678],216:[1,1677]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:1680}),N($t,Rt),{119:[1,1681],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,1682]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,1684],106:1683,108:[1,1685],109:[1,1686],110:1687,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1688]},N(vt,te),N(vt,ne),N(xe,We),N(xe,He,{65:1689,67:1690,72:1691,39:1692,78:1693,118:1697,79:[1,1694],80:[1,1695],81:[1,1696],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:1698,64:1699,73:1700,92:1701,94:1702,95:1706,99:1707,96:[1,1703],97:[1,1704],98:[1,1705],101:vo,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:1709,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:1710}),N(mt,dt,{82:1711}),N(gt,yt),N(gt,xt),N(_t,bt,{93:1712}),N(ft,Et,{99:1287,95:1713,101:ja,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:1714}),N(vt,St,{86:1715}),N(vt,St,{86:1716}),N(mt,At,{105:1291,107:1292,91:1717,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:1718}),N(gt,Tt),N(gt,Ot),{19:[1,1722],21:[1,1726],22:1720,33:1719,200:1721,214:1723,215:[1,1725],216:[1,1724]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:1727}),N($t,Rt),{119:[1,1728],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,1729]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,1731],106:1730,108:[1,1732],109:[1,1733],110:1734,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1735]},N(vt,te),N(vt,ne),N(xe,ls),{121:[1,1736]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:1737,214:45,215:X},{19:So,21:Ao,22:1739,100:[1,1750],108:[1,1751],109:[1,1752],110:1749,181:1740,191:1738,196:1743,197:1744,198:1745,201:1748,204:[1,1753],205:[1,1754],206:[1,1759],207:[1,1760],208:[1,1761],209:[1,1762],210:[1,1755],211:[1,1756],212:[1,1757],213:[1,1758],214:1742,215:wo},N(An,Ei),{19:Z,21:K,22:1763,214:45,215:X},{19:To,21:Oo,22:1765,100:[1,1776],108:[1,1777],109:[1,1778],110:1775,181:1766,191:1764,196:1769,197:1770,198:1771,201:1774,204:[1,1779],205:[1,1780],206:[1,1785],207:[1,1786],208:[1,1787],209:[1,1788],210:[1,1781],211:[1,1782],212:[1,1783],213:[1,1784],214:1768,215:ko},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,1789]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:1790,214:45,215:X},{19:No,21:Io,22:1792,100:[1,1803],108:[1,1804],109:[1,1805],110:1802,181:1793,191:1791,196:1796,197:1797,198:1798,201:1801,204:[1,1806],205:[1,1807],206:[1,1812],207:[1,1813],208:[1,1814],209:[1,1815],210:[1,1808],211:[1,1809],212:[1,1810],213:[1,1811],214:1795,215:Fo},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(xe,La),N(xe,Pr),N(be,Ee,{62:1816,64:1817,66:1818,67:1819,73:1822,75:1823,72:1824,39:1825,92:1826,94:1827,87:1829,88:1830,89:1831,78:1832,95:1839,22:1840,91:1842,118:1843,99:1844,214:1847,105:1848,107:1849,19:[1,1846],21:[1,1851],69:[1,1820],71:[1,1821],79:[1,1833],80:[1,1834],81:[1,1835],85:[1,1828],96:[1,1836],97:[1,1837],98:[1,1838],101:Lo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,1841],215:[1,1850]}),N(An,Sn,{84:1345,192:1346,83:1852,190:$a}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1853,121:nr,148:rr,189:sr}),N(An,Sn,{84:1345,192:1346,83:1854,190:$a}),N(mt,Tn,{99:854,95:1855,101:pi,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:1856,193:[1,1857]}),{19:ts,21:ns,22:662,129:1858,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:1859,193:[1,1860]}),{19:ts,21:ns,22:662,129:1861,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,1862]},N(vt,Gt),{100:[1,1864],106:1863,108:[1,1865],109:[1,1866],110:1867,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1868]},N(gt,ls),N(wt,Yr),N(gt,es,{31:1869,193:[1,1870]}),{19:ts,21:ns,22:662,129:1871,199:rs,214:665,215:ss},N(vt,ps),{121:[1,1872]},{19:[1,1875],21:[1,1878],22:1874,87:1873,214:1876,215:[1,1877]},N(An,Sn,{84:1383,192:1384,83:1879,190:Da}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:1880,121:nr,148:rr,189:sr}),N(An,Sn,{84:1383,192:1384,83:1881,190:Da}),N(mt,Tn,{99:901,95:1882,101:hi,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:1883,193:[1,1884]}),{19:ts,21:ns,22:662,129:1885,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:1886,193:[1,1887]}),{19:ts,21:ns,22:662,129:1888,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,1889]},N(vt,Gt),{100:[1,1891],106:1890,108:[1,1892],109:[1,1893],110:1894,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,1895]},N(gt,ls),N(wt,Yr),N(gt,es,{31:1896,193:[1,1897]}),{19:ts,21:ns,22:662,129:1898,199:rs,214:665,215:ss},N(vt,ps),{121:[1,1899]},{19:[1,1902],21:[1,1905],22:1901,87:1900,214:1903,215:[1,1904]},N(Br,ls),{121:[1,1906]},N(Br,Hr),N(fi,as),N(di,Ei),{19:Z,21:K,22:1907,214:45,215:X},{19:Co,21:jo,22:1909,100:[1,1920],108:[1,1921],109:[1,1922],110:1919,181:1910,191:1908,196:1913,197:1914,198:1915,201:1918,204:[1,1923],205:[1,1924],206:[1,1929],207:[1,1930],208:[1,1931],209:[1,1932],210:[1,1925],211:[1,1926],212:[1,1927],213:[1,1928],214:1912,215:$o},N(mi,Ei),{19:Z,21:K,22:1933,214:45,215:X},{19:Ro,21:Do,22:1935,100:[1,1946],108:[1,1947],109:[1,1948],110:1945,181:1936,191:1934,196:1939,197:1940,198:1941,201:1944,204:[1,1949],205:[1,1950],206:[1,1955],207:[1,1956],208:[1,1957],209:[1,1958],210:[1,1951],211:[1,1952],212:[1,1953],213:[1,1954],214:1938,215:Mo},N(yi,Ei),{19:Z,21:K,22:1959,214:45,215:X},{19:Po,21:Qo,22:1961,100:[1,1972],108:[1,1973],109:[1,1974],110:1971,181:1962,191:1960,196:1965,197:1966,198:1967,201:1970,204:[1,1975],205:[1,1976],206:[1,1981],207:[1,1982],208:[1,1983],209:[1,1984],210:[1,1977],211:[1,1978],212:[1,1979],213:[1,1980],214:1964,215:Go},N(Zr,lr),N(Zr,pr),N(Zr,hr),N(Zr,fr),N(Zr,dr),{111:[1,1985]},N(Zr,_r),N(zr,ta),N(Kr,Fa),N(Kr,Lt),N(Kr,Y),N(Kr,ee),N(Kr,te),N(Kr,ne),N(Br,cn),N(re,se,{54:1986,41:1987,44:ie}),N(Br,ln),N(Br,pn),N(Br,yt),N(Br,xt),N(Vr,dt,{82:1988}),N(Br,Tt),N(Br,Ot),{19:[1,1992],21:[1,1996],22:1990,33:1989,200:1991,214:1993,215:[1,1995],216:[1,1994]},{119:[1,1997],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Br,hn),N(Br,fn),N(Vr,dt,{82:1998}),N(fi,bt,{93:1999}),N(Vr,Et,{99:1448,95:2e3,101:Ga,102:Ne,103:Ie,104:Fe}),N(fi,kt),N(fi,Nt),N(fi,It),N(fi,Ft),{100:[1,2001]},N(fi,Gt),{70:[1,2002]},N(di,Sn,{83:2003,84:2004,192:2005,190:[1,2006]}),N(mi,Sn,{83:2007,84:2008,192:2009,190:Bo}),N(Ur,Tn,{99:991,95:2011,101:_i,102:Ne,103:Ie,104:Fe}),N(qr,On),N(Vr,kn,{90:2012,95:2013,91:2014,99:2015,105:2017,107:2018,101:Jo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,In,{90:2012,95:2013,91:2014,99:2015,105:2017,107:2018,101:Jo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,Fn,{90:2012,95:2013,91:2014,99:2015,105:2017,107:2018,101:Jo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Kr,Ln),N(yi,Sn,{83:2019,84:2020,192:2021,190:[1,2022]}),N(Qa,jn),N(Qa,ue),N(Qa,ce),N(Qa,Y),N(Qa,ee),N(Qa,le),N(Qa,te),N(Qa,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,2023],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2024,121:nr,148:rr,189:sr}),N(qr,lr),N(Kr,pr),N(Kr,hr),N(Kr,fr),N(Kr,dr),{111:[1,2025]},N(Kr,_r),N(Br,ln),N(Br,pn),N(Br,yt),N(Br,xt),N(Vr,dt,{82:2026}),N(Br,Tt),N(Br,Ot),{19:[1,2030],21:[1,2034],22:2028,33:2027,200:2029,214:2031,215:[1,2033],216:[1,2032]},{119:[1,2035],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Br,hn),N(Br,fn),N(Vr,dt,{82:2036}),N(fi,bt,{93:2037}),N(Vr,Et,{99:1495,95:2038,101:Ba,102:Ne,103:Ie,104:Fe}),N(fi,kt),N(fi,Nt),N(fi,It),N(fi,Ft),{100:[1,2039]},N(fi,Gt),{70:[1,2040]},N(di,Sn,{83:2041,84:2042,192:2043,190:[1,2044]}),N(mi,Sn,{83:2045,84:2046,192:2047,190:Uo}),N(Ur,Tn,{99:1027,95:2049,101:bi,102:Ne,103:Ie,104:Fe}),N(qr,On),N(Vr,kn,{90:2050,95:2051,91:2052,99:2053,105:2055,107:2056,101:Vo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,In,{90:2050,95:2051,91:2052,99:2053,105:2055,107:2056,101:Vo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,Fn,{90:2050,95:2051,91:2052,99:2053,105:2055,107:2056,101:Vo,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Kr,Ln),N(yi,Sn,{83:2057,84:2058,192:2059,190:[1,2060]}),N(Qa,jn),N(Qa,ue),N(Qa,ce),N(Qa,Y),N(Qa,ee),N(Qa,le),N(Qa,te),N(Qa,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,2061],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2062,121:nr,148:rr,189:sr}),N(qr,lr),N(Kr,pr),N(Kr,hr),N(Kr,fr),N(Kr,dr),{111:[1,2063]},N(Kr,_r),N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:vi,21:Si,22:2065,87:2064,214:1040,215:Ai},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:Ti,21:Oi,22:2067,87:2066,214:1066,215:ki},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:Ni,21:Ii,22:2069,87:2068,214:1093,215:Fi},N($i,[2,205]),N($i,[2,207]),N($i,[2,214]),N($i,[2,222]),N(Wa,Yi),N(Wa,ea),{19:Ri,21:Di,22:2071,87:2070,214:1124,215:Hi},N($i,[2,201]),N($i,[2,210]),N($i,[2,218]),N(zo,qo,{152:2072,153:2073,156:Zo,157:Ko,158:Xo,159:Wo}),N(Ho,Yo),N(eu,tu,{56:2078}),N(nu,ru,{60:2079}),N(be,Ee,{63:2080,73:2081,75:2082,76:2083,92:2086,94:2087,87:2089,88:2090,89:2091,78:2092,39:2093,95:2097,22:2098,91:2100,118:2101,99:2105,214:2108,105:2109,107:2110,19:[1,2107],21:[1,2112],69:[1,2084],71:[1,2085],79:[1,2102],80:[1,2103],81:[1,2104],85:[1,2088],96:[1,2094],97:[1,2095],98:[1,2096],101:su,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,2099],215:[1,2111]}),N(zo,qo,{153:2073,152:2113,156:Zo,157:Ko,158:Xo,159:Wo}),{70:na,134:2114,135:ao},N(oo,ra),N(er,tr,{147:420,136:1167,137:1168,138:1169,144:1170,146:1171,131:2115,148:rr,189:ma}),N(oo,sa),N(oo,Rs,{139:2116,143:2117,140:uo,141:co}),N(er,tr,{147:420,144:1170,146:1171,138:2118,70:ia,135:ia,148:rr,189:ma}),N(er,tr,{147:420,144:1170,146:1171,138:2119,70:aa,135:aa,148:rr,189:ma}),N(lo,oa),N(lo,ua),N(lo,ca),N(lo,la),{19:pa,21:ha,22:1157,129:2120,199:fa,214:1160,215:da},N(er,tr,{147:420,130:1164,131:1165,132:1166,136:1167,137:1168,138:1169,144:1170,146:1171,126:2121,148:rr,189:ma}),N(lo,ga),N(lo,ya),N(lo,xa),N(lo,Y),N(lo,ee),N(lo,le),N(lo,te),N(lo,ne),N(Us,[2,269]),N(Vs,zs,{224:2122}),N(be,Ee,{92:742,94:743,95:753,99:761,226:2123,73:2124,75:2125,76:2126,87:2130,88:2131,89:2132,78:2133,39:2134,22:2135,91:2137,118:2138,214:2143,105:2144,107:2145,19:[1,2142],21:[1,2147],69:[1,2127],71:[1,2128],79:[1,2139],80:[1,2140],81:[1,2141],85:[1,2129],96:qs,97:Zs,98:Ks,101:Xs,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,2136],215:[1,2146]}),N(Vs,iu),N(be,Ee,{92:742,94:743,95:753,99:761,226:2148,73:2149,75:2150,76:2151,87:2155,88:2156,89:2157,78:2158,39:2159,22:2160,91:2162,118:2163,214:2168,105:2169,107:2170,19:[1,2167],21:[1,2172],69:[1,2152],71:[1,2153],79:[1,2164],80:[1,2165],81:[1,2166],85:[1,2154],96:qs,97:Zs,98:Ks,101:Xs,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,2161],215:[1,2171]}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2173,121:nr,148:rr,189:sr}),N(Vs,jn),N(Vs,ue),N(Vs,ce),N(Vs,Y),N(Vs,ee),N(Vs,le),N(Vs,te),N(Vs,ne),N(Vs,Tn,{99:1192,95:2174,101:Sa,102:Ne,103:Ie,104:Fe}),N(go,On),N(go,lr),N(Vs,au),N(wa,as),N(Ta,os),N(Ta,us),N(Ta,cs),{100:[1,2175]},N(Ta,Gt),{100:[1,2177],106:2176,108:[1,2178],109:[1,2179],110:2180,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2181]},N(Ta,ps),{121:[1,2182]},{19:[1,2185],21:[1,2188],22:2184,87:2183,214:2186,215:[1,2187]},{193:[1,2191],194:2189,195:[1,2190]},N(Ar,Ja),N(Ar,Ua),N(Ar,Va),N(Ar,Y),N(Ar,ee),N(Ar,ds),N(Ar,ms),N(Ar,gs),N(Ar,te),N(Ar,ne),N(Ar,ys),N(Ar,xs,{202:2192,203:2193,111:[1,2194]}),N(Ar,_s),N(Ar,bs),N(Ar,Es),N(Ar,vs),N(Ar,Ss),N(Ar,As),N(Ar,ws),N(Ar,Ts),N(Ar,Os),N(ou,mr),N(ou,gr),N(ou,yr),N(ou,xr),N(xe,cn),N(re,se,{54:2195,41:2196,44:ie}),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:2197}),N(xe,Tt),N(xe,Ot),{19:[1,2201],21:[1,2205],22:2199,33:2198,200:2200,214:2202,215:[1,2204],216:[1,2203]},{119:[1,2206],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:2207}),N(dn,bt,{93:2208}),N(mt,Et,{99:1660,95:2209,101:Eo,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,2210]},N(dn,Gt),{70:[1,2211]},N(vn,Sn,{83:2212,84:2213,192:2214,190:[1,2215]}),N(An,Sn,{83:2216,84:2217,192:2218,190:uu}),N(ft,Tn,{99:1251,95:2220,101:Ca,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:2221,95:2222,91:2223,99:2224,105:2226,107:2227,101:cu,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:2221,95:2222,91:2223,99:2224,105:2226,107:2227,101:cu,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:2221,95:2222,91:2223,99:2224,105:2226,107:2227,101:cu,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:2228,84:2229,192:2230,190:[1,2231]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,2232],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2233,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,2234]},N($t,_r),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:2235}),N(xe,Tt),N(xe,Ot),{19:[1,2239],21:[1,2243],22:2237,33:2236,200:2238,214:2240,215:[1,2242],216:[1,2241]},{119:[1,2244],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:2245}),N(dn,bt,{93:2246}),N(mt,Et,{99:1707,95:2247,101:vo,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,2248]},N(dn,Gt),{70:[1,2249]},N(vn,Sn,{83:2250,84:2251,192:2252,190:[1,2253]}),N(An,Sn,{83:2254,84:2255,192:2256,190:lu}),N(ft,Tn,{99:1287,95:2258,101:ja,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:2259,95:2260,91:2261,99:2262,105:2264,107:2265,101:pu,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:2259,95:2260,91:2261,99:2262,105:2264,107:2265,101:pu,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:2259,95:2260,91:2261,99:2262,105:2264,107:2265,101:pu,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:2266,84:2267,192:2268,190:[1,2269]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,2270],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2271,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,2272]},N($t,_r),N(mt,ta),{193:[1,2275],194:2273,195:[1,2274]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:2276,203:2277,111:[1,2278]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,2281],194:2279,195:[1,2280]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:2282,203:2283,111:[1,2284]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,2287],21:[1,2290],22:2286,87:2285,214:2288,215:[1,2289]},{193:[1,2293],194:2291,195:[1,2292]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:2294,203:2295,111:[1,2296]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(xe,We),N(xe,He,{65:2297,67:2298,72:2299,39:2300,78:2301,118:2305,79:[1,2302],80:[1,2303],81:[1,2304],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:2306,64:2307,73:2308,92:2309,94:2310,95:2314,99:2315,96:[1,2311],97:[1,2312],98:[1,2313],101:hu,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:2317,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:2318}),N(mt,dt,{82:2319}),N(gt,yt),N(gt,xt),N(_t,bt,{93:2320}),N(ft,Et,{99:1844,95:2321,101:Lo,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:2322}),N(vt,St,{86:2323}),N(vt,St,{86:2324}),N(mt,At,{105:1848,107:1849,91:2325,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:2326}),N(gt,Tt),N(gt,Ot),{19:[1,2330],21:[1,2334],22:2328,33:2327,200:2329,214:2331,215:[1,2333],216:[1,2332]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:2335}),N($t,Rt),{119:[1,2336],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,2337]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,2339],106:2338,108:[1,2340],109:[1,2341],110:2342,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2343]},N(vt,te),N(vt,ne),N(xe,ls),{121:[1,2344]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:2345,214:45,215:X},{19:fu,21:du,22:2347,100:[1,2358],108:[1,2359],109:[1,2360],110:2357,181:2348,191:2346,196:2351,197:2352,198:2353,201:2356,204:[1,2361],205:[1,2362],206:[1,2367],207:[1,2368],208:[1,2369],209:[1,2370],210:[1,2363],211:[1,2364],212:[1,2365],213:[1,2366],214:2350,215:mu},N(An,Ei),{19:Z,21:K,22:2371,214:45,215:X},{19:gu,21:yu,22:2373,100:[1,2384],108:[1,2385],109:[1,2386],110:2383,181:2374,191:2372,196:2377,197:2378,198:2379,201:2382,204:[1,2387],205:[1,2388],206:[1,2393],207:[1,2394],208:[1,2395],209:[1,2396],210:[1,2389],211:[1,2390],212:[1,2391],213:[1,2392],214:2376,215:xu},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,2397]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:2398,214:45,215:X},{19:_u,21:bu,22:2400,100:[1,2411],108:[1,2412],109:[1,2413],110:2410,181:2401,191:2399,196:2404,197:2405,198:2406,201:2409,204:[1,2414],205:[1,2415],206:[1,2420],207:[1,2421],208:[1,2422],209:[1,2423],210:[1,2416],211:[1,2417],212:[1,2418],213:[1,2419],214:2403,215:Eu},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(xe,ls),{121:[1,2424]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:2425,214:45,215:X},{19:vu,21:Su,22:2427,100:[1,2438],108:[1,2439],109:[1,2440],110:2437,181:2428,191:2426,196:2431,197:2432,198:2433,201:2436,204:[1,2441],205:[1,2442],206:[1,2447],207:[1,2448],208:[1,2449],209:[1,2450],210:[1,2443],211:[1,2444],212:[1,2445],213:[1,2446],214:2430,215:Au},N(An,Ei),{19:Z,21:K,22:2451,214:45,215:X},{19:wu,21:Tu,22:2453,100:[1,2464],108:[1,2465],109:[1,2466],110:2463,181:2454,191:2452,196:2457,197:2458,198:2459,201:2462,204:[1,2467],205:[1,2468],206:[1,2473],207:[1,2474],208:[1,2475],209:[1,2476],210:[1,2469],211:[1,2470],212:[1,2471],213:[1,2472],214:2456,215:Ou},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,2477]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:2478,214:45,215:X},{19:ku,21:Nu,22:2480,100:[1,2491],108:[1,2492],109:[1,2493],110:2490,181:2481,191:2479,196:2484,197:2485,198:2486,201:2489,204:[1,2494],205:[1,2495],206:[1,2500],207:[1,2501],208:[1,2502],209:[1,2503],210:[1,2496],211:[1,2497],212:[1,2498],213:[1,2499],214:2483,215:Iu},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(Vr,ta),{193:[1,2506],194:2504,195:[1,2505]},N(Ur,Ja),N(Ur,Ua),N(Ur,Va),N(Ur,Y),N(Ur,ee),N(Ur,ds),N(Ur,ms),N(Ur,gs),N(Ur,te),N(Ur,ne),N(Ur,ys),N(Ur,xs,{202:2507,203:2508,111:[1,2509]}),N(Ur,_s),N(Ur,bs),N(Ur,Es),N(Ur,vs),N(Ur,Ss),N(Ur,As),N(Ur,ws),N(Ur,Ts),N(Ur,Os),N(Fu,mr),N(Fu,gr),N(Fu,yr),N(Fu,xr),{193:[1,2512],194:2510,195:[1,2511]},N(Vr,Ja),N(Vr,Ua),N(Vr,Va),N(Vr,Y),N(Vr,ee),N(Vr,ds),N(Vr,ms),N(Vr,gs),N(Vr,te),N(Vr,ne),N(Vr,ys),N(Vr,xs,{202:2513,203:2514,111:[1,2515]}),N(Vr,_s),N(Vr,bs),N(Vr,Es),N(Vr,vs),N(Vr,Ss),N(Vr,As),N(Vr,ws),N(Vr,Ts),N(Vr,Os),N(Lu,mr),N(Lu,gr),N(Lu,yr),N(Lu,xr),{193:[1,2518],194:2516,195:[1,2517]},N(zr,Ja),N(zr,Ua),N(zr,Va),N(zr,Y),N(zr,ee),N(zr,ds),N(zr,ms),N(zr,gs),N(zr,te),N(zr,ne),N(zr,ys),N(zr,xs,{202:2519,203:2520,111:[1,2521]}),N(zr,_s),N(zr,bs),N(zr,Es),N(zr,vs),N(zr,Ss),N(zr,As),N(zr,ws),N(zr,Ts),N(zr,Os),N(Cu,mr),N(Cu,gr),N(Cu,yr),N(Cu,xr),{19:[1,2524],21:[1,2527],22:2523,87:2522,214:2525,215:[1,2526]},N(Br,Pr),N(be,Ee,{62:2528,64:2529,66:2530,67:2531,73:2534,75:2535,72:2536,39:2537,92:2538,94:2539,87:2541,88:2542,89:2543,78:2544,95:2551,22:2552,91:2554,118:2555,99:2556,214:2559,105:2560,107:2561,19:[1,2558],21:[1,2563],69:[1,2532],71:[1,2533],79:[1,2545],80:[1,2546],81:[1,2547],85:[1,2540],96:[1,2548],97:[1,2549],98:[1,2550],101:ju,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,2553],215:[1,2562]}),N(mi,Sn,{84:2008,192:2009,83:2564,190:Bo}),N(Br,jn),N(Br,ue),N(Br,ce),N(Br,Y),N(Br,ee),N(Br,le),N(Br,te),N(Br,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2565,121:nr,148:rr,189:sr}),N(mi,Sn,{84:2008,192:2009,83:2566,190:Bo}),N(Vr,Tn,{99:1448,95:2567,101:Ga,102:Ne,103:Ie,104:Fe}),N(fi,On),N(fi,lr),N(Br,Gr),N(Pa,Hr),N(Ur,Yr),N(Pa,es,{31:2568,193:[1,2569]}),{19:ts,21:ns,22:662,129:2570,199:rs,214:665,215:ss},N(Br,is),N(Vr,Yr),N(Br,es,{31:2571,193:[1,2572]}),{19:ts,21:ns,22:662,129:2573,199:rs,214:665,215:ss},N(qr,as),N(Zr,os),N(Zr,us),N(Zr,cs),{100:[1,2574]},N(Zr,Gt),{100:[1,2576],106:2575,108:[1,2577],109:[1,2578],110:2579,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2580]},N(Qa,ls),N(zr,Yr),N(Qa,es,{31:2581,193:[1,2582]}),{19:ts,21:ns,22:662,129:2583,199:rs,214:665,215:ss},N(Zr,ps),{121:[1,2584]},{19:[1,2587],21:[1,2590],22:2586,87:2585,214:2588,215:[1,2589]},N(mi,Sn,{84:2046,192:2047,83:2591,190:Uo}),N(Br,jn),N(Br,ue),N(Br,ce),N(Br,Y),N(Br,ee),N(Br,le),N(Br,te),N(Br,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2592,121:nr,148:rr,189:sr}),N(mi,Sn,{84:2046,192:2047,83:2593,190:Uo}),N(Vr,Tn,{99:1495,95:2594,101:Ba,102:Ne,103:Ie,104:Fe}),N(fi,On),N(fi,lr),N(Br,Gr),N(Pa,Hr),N(Ur,Yr),N(Pa,es,{31:2595,193:[1,2596]}),{19:ts,21:ns,22:662,129:2597,199:rs,214:665,215:ss},N(Br,is),N(Vr,Yr),N(Br,es,{31:2598,193:[1,2599]}),{19:ts,21:ns,22:662,129:2600,199:rs,214:665,215:ss},N(qr,as),N(Zr,os),N(Zr,us),N(Zr,cs),{100:[1,2601]},N(Zr,Gt),{100:[1,2603],106:2602,108:[1,2604],109:[1,2605],110:2606,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2607]},N(Qa,ls),N(zr,Yr),N(Qa,es,{31:2608,193:[1,2609]}),{19:ts,21:ns,22:662,129:2610,199:rs,214:665,215:ss},N(Zr,ps),{121:[1,2611]},{19:[1,2614],21:[1,2617],22:2613,87:2612,214:2615,215:[1,2616]},N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(Wa,Ya),N(Wa,Lt),N(zo,dt,{82:2618}),N(zo,$u),N(zo,Ru),N(zo,Du),N(zo,Mu),N(zo,Pu),N(Ho,Qu,{57:2619,51:[1,2620]}),N(eu,Gu,{61:2621,53:[1,2622]}),N(nu,Bu),N(nu,Ju,{74:2623,76:2624,78:2625,39:2626,118:2627,79:[1,2628],80:[1,2629],81:[1,2630],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(nu,Uu),N(nu,va,{77:2631,73:2632,92:2633,94:2634,95:2638,99:2639,96:[1,2635],97:[1,2636],98:[1,2637],101:Vu,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:2641,44:ut,79:ct,80:lt,81:pt}),N(nu,zu),N(qu,bt,{93:2642}),N(Zu,Et,{99:2105,95:2643,101:su,102:Ne,103:Ie,104:Fe}),N(Ku,St,{86:2644}),N(Ku,St,{86:2645}),N(Ku,St,{86:2646}),N(nu,At,{105:2109,107:2110,91:2647,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Xu,ka),N(Xu,Na),N(qu,kt),N(qu,Nt),N(qu,It),N(qu,Ft),N(Ku,Lt),N(Ct,jt,{162:2648}),N(Wu,Rt),{119:[1,2649],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Xu,Tt),N(Xu,Ot),{19:[1,2653],21:[1,2657],22:2651,33:2650,200:2652,214:2654,215:[1,2656],216:[1,2655]},{100:[1,2658]},N(qu,Gt),N(Ku,Y),N(Ku,ee),{100:[1,2660],106:2659,108:[1,2661],109:[1,2662],110:2663,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2664]},N(Ku,te),N(Ku,ne),N(zo,dt,{82:2665}),N(oo,eo),N(oo,to),N(oo,no),N(lo,ro),N(lo,so),N(lo,io),N(re,se,{46:2666,47:2667,55:2668,59:2669,41:2670,44:ie}),{70:[1,2671]},N(Us,_a,{225:2672,53:[1,2673]}),N(Vs,ba),N(be,Ee,{76:2674,78:2675,39:2676,118:2677,79:[1,2678],80:[1,2679],81:[1,2680]}),N(Vs,Ea),N(Vs,va,{77:2681,73:2682,92:2683,94:2684,95:2688,99:2689,96:[1,2685],97:[1,2686],98:[1,2687],101:Hu,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:2691,44:ut,79:ct,80:lt,81:pt}),N(Vs,Aa),N(Ta,St,{86:2692}),N(Ta,St,{86:2693}),N(Ta,St,{86:2694}),N(Vs,At,{105:2144,107:2145,91:2695,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Oa,ka),N(Oa,Na),N(Ta,Lt),N(Ct,jt,{162:2696}),N(Ia,Rt),{119:[1,2697],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Oa,Tt),N(Oa,Ot),{19:[1,2701],21:[1,2705],22:2699,33:2698,200:2700,214:2702,215:[1,2704],216:[1,2703]},N(Ta,Y),N(Ta,ee),{100:[1,2707],106:2706,108:[1,2708],109:[1,2709],110:2710,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2711]},N(Ta,te),N(Ta,ne),N(Vs,ba),N(be,Ee,{76:2712,78:2713,39:2714,118:2715,79:[1,2716],80:[1,2717],81:[1,2718]}),N(Vs,Ea),N(Vs,va,{77:2719,73:2720,92:2721,94:2722,95:2726,99:2727,96:[1,2723],97:[1,2724],98:[1,2725],101:Yu,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:2729,44:ut,79:ct,80:lt,81:pt}),N(Vs,Aa),N(Ta,St,{86:2730}),N(Ta,St,{86:2731}),N(Ta,St,{86:2732}),N(Vs,At,{105:2169,107:2170,91:2733,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Oa,ka),N(Oa,Na),N(Ta,Lt),N(Ct,jt,{162:2734}),N(Ia,Rt),{119:[1,2735],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Oa,Tt),N(Oa,Ot),{19:[1,2739],21:[1,2743],22:2737,33:2736,200:2738,214:2740,215:[1,2742],216:[1,2741]},N(Ta,Y),N(Ta,ee),{100:[1,2745],106:2744,108:[1,2746],109:[1,2747],110:2748,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2749]},N(Ta,te),N(Ta,ne),{121:[1,2750]},N(go,as),N(Ta,lr),N(Ta,pr),N(Ta,hr),N(Ta,fr),N(Ta,dr),{111:[1,2751]},N(Ta,_r),N(Oa,ta),N(Ia,Fa),N(Ia,Lt),N(Ia,Y),N(Ia,ee),N(Ia,te),N(Ia,ne),N(ri,Ue),N(ri,Ve),N(ri,ze),N(Ar,Yi),N(Ar,ea),{19:xo,21:_o,22:2753,87:2752,214:1619,215:bo},N(xe,Pr),N(be,Ee,{62:2754,64:2755,66:2756,67:2757,73:2760,75:2761,72:2762,39:2763,92:2764,94:2765,87:2767,88:2768,89:2769,78:2770,95:2777,22:2778,91:2780,118:2781,99:2782,214:2785,105:2786,107:2787,19:[1,2784],21:[1,2789],69:[1,2758],71:[1,2759],79:[1,2771],80:[1,2772],81:[1,2773],85:[1,2766],96:[1,2774],97:[1,2775],98:[1,2776],101:ec,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,2779],215:[1,2788]}),N(An,Sn,{84:2217,192:2218,83:2790,190:uu}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2791,121:nr,148:rr,189:sr}),N(An,Sn,{84:2217,192:2218,83:2792,190:uu}),N(mt,Tn,{99:1660,95:2793,101:Eo,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:2794,193:[1,2795]}),{19:ts,21:ns,22:662,129:2796,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:2797,193:[1,2798]}),{19:ts,21:ns,22:662,129:2799,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,2800]},N(vt,Gt),{100:[1,2802],106:2801,108:[1,2803],109:[1,2804],110:2805,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2806]},N(gt,ls),N(wt,Yr),N(gt,es,{31:2807,193:[1,2808]}),{19:ts,21:ns,22:662,129:2809,199:rs,214:665,215:ss},N(vt,ps),{121:[1,2810]},{19:[1,2813],21:[1,2816],22:2812,87:2811,214:2814,215:[1,2815]},N(An,Sn,{84:2255,192:2256,83:2817,190:lu}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2818,121:nr,148:rr,189:sr}),N(An,Sn,{84:2255,192:2256,83:2819,190:lu}),N(mt,Tn,{99:1707,95:2820,101:vo,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:2821,193:[1,2822]}),{19:ts,21:ns,22:662,129:2823,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:2824,193:[1,2825]}),{19:ts,21:ns,22:662,129:2826,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,2827]},N(vt,Gt),{100:[1,2829],106:2828,108:[1,2830],109:[1,2831],110:2832,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2833]},N(gt,ls),N(wt,Yr),N(gt,es,{31:2834,193:[1,2835]}),{19:ts,21:ns,22:662,129:2836,199:rs,214:665,215:ss},N(vt,ps),{121:[1,2837]},{19:[1,2840],21:[1,2843],22:2839,87:2838,214:2841,215:[1,2842]},N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:So,21:Ao,22:2845,87:2844,214:1742,215:wo},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:To,21:Oo,22:2847,87:2846,214:1768,215:ko},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:No,21:Io,22:2849,87:2848,214:1795,215:Fo},N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:2850}),N(xe,Tt),N(xe,Ot),{19:[1,2854],21:[1,2858],22:2852,33:2851,200:2853,214:2855,215:[1,2857],216:[1,2856]},{119:[1,2859],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:2860}),N(dn,bt,{93:2861}),N(mt,Et,{99:2315,95:2862,101:hu,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,2863]},N(dn,Gt),{70:[1,2864]},N(vn,Sn,{83:2865,84:2866,192:2867,190:[1,2868]}),N(An,Sn,{83:2869,84:2870,192:2871,190:tc}),N(ft,Tn,{99:1844,95:2873,101:Lo,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:2874,95:2875,91:2876,99:2877,105:2879,107:2880,101:nc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:2874,95:2875,91:2876,99:2877,105:2879,107:2880,101:nc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:2874,95:2875,91:2876,99:2877,105:2879,107:2880,101:nc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:2881,84:2882,192:2883,190:[1,2884]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,2885],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:2886,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,2887]},N($t,_r),N(mt,ta),{193:[1,2890],194:2888,195:[1,2889]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:2891,203:2892,111:[1,2893]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,2896],194:2894,195:[1,2895]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:2897,203:2898,111:[1,2899]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,2902],21:[1,2905],22:2901,87:2900,214:2903,215:[1,2904]},{193:[1,2908],194:2906,195:[1,2907]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:2909,203:2910,111:[1,2911]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(mt,ta),{193:[1,2914],194:2912,195:[1,2913]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:2915,203:2916,111:[1,2917]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,2920],194:2918,195:[1,2919]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:2921,203:2922,111:[1,2923]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,2926],21:[1,2929],22:2925,87:2924,214:2927,215:[1,2928]},{193:[1,2932],194:2930,195:[1,2931]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:2933,203:2934,111:[1,2935]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(di,Ue),N(di,Ve),N(di,ze),N(Ur,Yi),N(Ur,ea),{19:Co,21:jo,22:2937,87:2936,214:1912,215:$o},N(mi,Ue),N(mi,Ve),N(mi,ze),N(Vr,Yi),N(Vr,ea),{19:Ro,21:Do,22:2939,87:2938,214:1938,215:Mo},N(yi,Ue),N(yi,Ve),N(yi,ze),N(zr,Yi),N(zr,ea),{19:Po,21:Qo,22:2941,87:2940,214:1964,215:Go},N(Zr,Fa),N(Zr,Lt),N(Zr,Y),N(Zr,ee),N(Zr,te),N(Zr,ne),N(Br,We),N(be,Ee,{65:2942,67:2943,72:2944,39:2945,78:2946,118:2950,51:He,53:He,70:He,79:[1,2947],80:[1,2948],81:[1,2949]}),N(Br,nt),N(Br,rt,{68:2951,64:2952,73:2953,92:2954,94:2955,95:2959,99:2960,96:[1,2956],97:[1,2957],98:[1,2958],101:rc,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:2962,44:ut,79:ct,80:lt,81:pt}),N(Br,ht),N(Ur,dt,{82:2963}),N(Vr,dt,{82:2964}),N(Qa,yt),N(Qa,xt),N(qr,bt,{93:2965}),N(Ur,Et,{99:2556,95:2966,101:ju,102:Ne,103:Ie,104:Fe}),N(Zr,St,{86:2967}),N(Zr,St,{86:2968}),N(Zr,St,{86:2969}),N(Vr,At,{105:2560,107:2561,91:2970,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(zr,dt,{82:2971}),N(Qa,Tt),N(Qa,Ot),{19:[1,2975],21:[1,2979],22:2973,33:2972,200:2974,214:2976,215:[1,2978],216:[1,2977]},N(qr,kt),N(qr,Nt),N(qr,It),N(qr,Ft),N(Zr,Lt),N(Ct,jt,{162:2980}),N(Kr,Rt),{119:[1,2981],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,2982]},N(qr,Gt),N(Zr,Y),N(Zr,ee),{100:[1,2984],106:2983,108:[1,2985],109:[1,2986],110:2987,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,2988]},N(Zr,te),N(Zr,ne),N(Br,ls),{121:[1,2989]},N(Br,Hr),N(fi,as),N(di,Ei),{19:Z,21:K,22:2990,214:45,215:X},{19:sc,21:ic,22:2992,100:[1,3003],108:[1,3004],109:[1,3005],110:3002,181:2993,191:2991,196:2996,197:2997,198:2998,201:3001,204:[1,3006],205:[1,3007],206:[1,3012],207:[1,3013],208:[1,3014],209:[1,3015],210:[1,3008],211:[1,3009],212:[1,3010],213:[1,3011],214:2995,215:ac},N(mi,Ei),{19:Z,21:K,22:3016,214:45,215:X},{19:oc,21:uc,22:3018,100:[1,3029],108:[1,3030],109:[1,3031],110:3028,181:3019,191:3017,196:3022,197:3023,198:3024,201:3027,204:[1,3032],205:[1,3033],206:[1,3038],207:[1,3039],208:[1,3040],209:[1,3041],210:[1,3034],211:[1,3035],212:[1,3036],213:[1,3037],214:3021,215:cc},N(Zr,lr),N(Zr,pr),N(Zr,hr),N(Zr,fr),N(Zr,dr),{111:[1,3042]},N(Zr,_r),N(yi,Ei),{19:Z,21:K,22:3043,214:45,215:X},{19:lc,21:pc,22:3045,100:[1,3056],108:[1,3057],109:[1,3058],110:3055,181:3046,191:3044,196:3049,197:3050,198:3051,201:3054,204:[1,3059],205:[1,3060],206:[1,3065],207:[1,3066],208:[1,3067],209:[1,3068],210:[1,3061],211:[1,3062],212:[1,3063],213:[1,3064],214:3048,215:hc},N(zr,ta),N(Kr,Fa),N(Kr,Lt),N(Kr,Y),N(Kr,ee),N(Kr,te),N(Kr,ne),N(Br,ls),{121:[1,3069]},N(Br,Hr),N(fi,as),N(di,Ei),{19:Z,21:K,22:3070,214:45,215:X},{19:fc,21:dc,22:3072,100:[1,3083],108:[1,3084],109:[1,3085],110:3082,181:3073,191:3071,196:3076,197:3077,198:3078,201:3081,204:[1,3086],205:[1,3087],206:[1,3092],207:[1,3093],208:[1,3094],209:[1,3095],210:[1,3088],211:[1,3089],212:[1,3090],213:[1,3091],214:3075,215:mc},N(mi,Ei),{19:Z,21:K,22:3096,214:45,215:X},{19:gc,21:yc,22:3098,100:[1,3109],108:[1,3110],109:[1,3111],110:3108,181:3099,191:3097,196:3102,197:3103,198:3104,201:3107,204:[1,3112],205:[1,3113],206:[1,3118],207:[1,3119],208:[1,3120],209:[1,3121],210:[1,3114],211:[1,3115],212:[1,3116],213:[1,3117],214:3101,215:xc},N(Zr,lr),N(Zr,pr),N(Zr,hr),N(Zr,fr),N(Zr,dr),{111:[1,3122]},N(Zr,_r),N(yi,Ei),{19:Z,21:K,22:3123,214:45,215:X},{19:_c,21:bc,22:3125,100:[1,3136],108:[1,3137],109:[1,3138],110:3135,181:3126,191:3124,196:3129,197:3130,198:3131,201:3134,204:[1,3139],205:[1,3140],206:[1,3145],207:[1,3146],208:[1,3147],209:[1,3148],210:[1,3141],211:[1,3142],212:[1,3143],213:[1,3144],214:3128,215:Ec},N(zr,ta),N(Kr,Fa),N(Kr,Lt),N(Kr,Y),N(Kr,ee),N(Kr,te),N(Kr,ne),N(vc,Sn,{83:3149,84:3150,192:3151,190:Sc}),N(eu,Ac),N(re,se,{55:3153,59:3154,41:3155,44:ie}),N(nu,wc),N(re,se,{59:3156,41:3157,44:ie}),N(nu,Tc),N(nu,Oc),N(nu,ka),N(nu,Na),{119:[1,3158],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(nu,Tt),N(nu,Ot),{19:[1,3162],21:[1,3166],22:3160,33:3159,200:3161,214:3163,215:[1,3165],216:[1,3164]},N(nu,kc),N(nu,mo),N(Nc,bt,{93:3167}),N(nu,Et,{99:2639,95:3168,101:Vu,102:Ne,103:Ie,104:Fe}),N(Nc,kt),N(Nc,Nt),N(Nc,It),N(Nc,Ft),{100:[1,3169]},N(Nc,Gt),{70:[1,3170]},N(Zu,Tn,{99:2105,95:3171,101:su,102:Ne,103:Ie,104:Fe}),N(qu,On),N(nu,kn,{90:3172,95:3173,91:3174,99:3175,105:3177,107:3178,101:Ic,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,In,{90:3172,95:3173,91:3174,99:3175,105:3177,107:3178,101:Ic,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,Fn,{90:3172,95:3173,91:3174,99:3175,105:3177,107:3178,101:Ic,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Wu,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,3179],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3180,121:nr,148:rr,189:sr}),N(Xu,jn),N(Xu,ue),N(Xu,ce),N(Xu,Y),N(Xu,ee),N(Xu,le),N(Xu,te),N(Xu,ne),N(qu,lr),N(Wu,pr),N(Wu,hr),N(Wu,fr),N(Wu,dr),{111:[1,3181]},N(Wu,_r),N(vc,Sn,{84:3150,192:3151,83:3182,190:Sc}),N(Fc,qo,{152:3183,153:3184,156:Lc,157:Cc,158:jc,159:$c}),N(Rc,Yo),N(Dc,tu,{56:3189}),N(Mc,ru,{60:3190}),N(be,Ee,{63:3191,73:3192,75:3193,76:3194,92:3197,94:3198,87:3200,88:3201,89:3202,78:3203,39:3204,95:3208,22:3209,91:3211,118:3212,99:3216,214:3219,105:3220,107:3221,19:[1,3218],21:[1,3223],69:[1,3195],71:[1,3196],79:[1,3213],80:[1,3214],81:[1,3215],85:[1,3199],96:[1,3205],97:[1,3206],98:[1,3207],101:Pc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,3210],215:[1,3222]}),N(Fc,qo,{153:3184,152:3224,156:Lc,157:Cc,158:jc,159:$c}),N(Vs,po),N(re,se,{223:3225,41:3226,44:ie}),N(Vs,ho),N(Vs,ka),N(Vs,Na),{119:[1,3227],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Vs,Tt),N(Vs,Ot),{19:[1,3231],21:[1,3235],22:3229,33:3228,200:3230,214:3232,215:[1,3234],216:[1,3233]},N(Vs,fo),N(Vs,mo),N(go,bt,{93:3236}),N(Vs,Et,{99:2689,95:3237,101:Hu,102:Ne,103:Ie,104:Fe}),N(go,kt),N(go,Nt),N(go,It),N(go,Ft),{100:[1,3238]},N(go,Gt),{70:[1,3239]},N(Vs,kn,{90:3240,95:3241,91:3242,99:3243,105:3245,107:3246,101:Qc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,In,{90:3240,95:3241,91:3242,99:3243,105:3245,107:3246,101:Qc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,Fn,{90:3240,95:3241,91:3242,99:3243,105:3245,107:3246,101:Qc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Ia,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,3247],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3248,121:nr,148:rr,189:sr}),N(Oa,jn),N(Oa,ue),N(Oa,ce),N(Oa,Y),N(Oa,ee),N(Oa,le),N(Oa,te),N(Oa,ne),N(Ia,pr),N(Ia,hr),N(Ia,fr),N(Ia,dr),{111:[1,3249]},N(Ia,_r),N(Vs,ho),N(Vs,ka),N(Vs,Na),{119:[1,3250],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Vs,Tt),N(Vs,Ot),{19:[1,3254],21:[1,3258],22:3252,33:3251,200:3253,214:3255,215:[1,3257],216:[1,3256]},N(Vs,fo),N(Vs,mo),N(go,bt,{93:3259}),N(Vs,Et,{99:2727,95:3260,101:Yu,102:Ne,103:Ie,104:Fe}),N(go,kt),N(go,Nt),N(go,It),N(go,Ft),{100:[1,3261]},N(go,Gt),{70:[1,3262]},N(Vs,kn,{90:3263,95:3264,91:3265,99:3266,105:3268,107:3269,101:Gc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,In,{90:3263,95:3264,91:3265,99:3266,105:3268,107:3269,101:Gc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,Fn,{90:3263,95:3264,91:3265,99:3266,105:3268,107:3269,101:Gc,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Ia,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,3270],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3271,121:nr,148:rr,189:sr}),N(Oa,jn),N(Oa,ue),N(Oa,ce),N(Oa,Y),N(Oa,ee),N(Oa,le),N(Oa,te),N(Oa,ne),N(Ia,pr),N(Ia,hr),N(Ia,fr),N(Ia,dr),{111:[1,3272]},N(Ia,_r),N(Vs,ta),{19:[1,3275],21:[1,3278],22:3274,87:3273,214:3276,215:[1,3277]},N(Ar,Ya),N(Ar,Lt),N(xe,We),N(xe,He,{65:3279,67:3280,72:3281,39:3282,78:3283,118:3287,79:[1,3284],80:[1,3285],81:[1,3286],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(xe,nt),N(xe,rt,{68:3288,64:3289,73:3290,92:3291,94:3292,95:3296,99:3297,96:[1,3293],97:[1,3294],98:[1,3295],101:Bc,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:3299,44:ut,79:ct,80:lt,81:pt}),N(xe,ht),N(ft,dt,{82:3300}),N(mt,dt,{82:3301}),N(gt,yt),N(gt,xt),N(_t,bt,{93:3302}),N(ft,Et,{99:2782,95:3303,101:ec,102:Ne,103:Ie,104:Fe}),N(vt,St,{86:3304}),N(vt,St,{86:3305}),N(vt,St,{86:3306}),N(mt,At,{105:2786,107:2787,91:3307,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(wt,dt,{82:3308}),N(gt,Tt),N(gt,Ot),{19:[1,3312],21:[1,3316],22:3310,33:3309,200:3311,214:3313,215:[1,3315],216:[1,3314]},N(_t,kt),N(_t,Nt),N(_t,It),N(_t,Ft),N(vt,Lt),N(Ct,jt,{162:3317}),N($t,Rt),{119:[1,3318],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},{100:[1,3319]},N(_t,Gt),N(vt,Y),N(vt,ee),{100:[1,3321],106:3320,108:[1,3322],109:[1,3323],110:3324,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3325]},N(vt,te),N(vt,ne),N(xe,ls),{121:[1,3326]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:3327,214:45,215:X},{19:Jc,21:Uc,22:3329,100:[1,3340],108:[1,3341],109:[1,3342],110:3339,181:3330,191:3328,196:3333,197:3334,198:3335,201:3338,204:[1,3343],205:[1,3344],206:[1,3349],207:[1,3350],208:[1,3351],209:[1,3352],210:[1,3345],211:[1,3346],212:[1,3347],213:[1,3348],214:3332,215:Vc},N(An,Ei),{19:Z,21:K,22:3353,214:45,215:X},{19:zc,21:qc,22:3355,100:[1,3366],108:[1,3367],109:[1,3368],110:3365,181:3356,191:3354,196:3359,197:3360,198:3361,201:3364,204:[1,3369],205:[1,3370],206:[1,3375],207:[1,3376],208:[1,3377],209:[1,3378],210:[1,3371],211:[1,3372],212:[1,3373],213:[1,3374],214:3358,215:Zc},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,3379]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:3380,214:45,215:X},{19:Kc,21:Xc,22:3382,100:[1,3393],108:[1,3394],109:[1,3395],110:3392,181:3383,191:3381,196:3386,197:3387,198:3388,201:3391,204:[1,3396],205:[1,3397],206:[1,3402],207:[1,3403],208:[1,3404],209:[1,3405],210:[1,3398],211:[1,3399],212:[1,3400],213:[1,3401],214:3385,215:Wc},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(xe,ls),{121:[1,3406]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:3407,214:45,215:X},{19:Hc,21:Yc,22:3409,100:[1,3420],108:[1,3421],109:[1,3422],110:3419,181:3410,191:3408,196:3413,197:3414,198:3415,201:3418,204:[1,3423],205:[1,3424],206:[1,3429],207:[1,3430],208:[1,3431],209:[1,3432],210:[1,3425],211:[1,3426],212:[1,3427],213:[1,3428],214:3412,215:el},N(An,Ei),{19:Z,21:K,22:3433,214:45,215:X},{19:tl,21:nl,22:3435,100:[1,3446],108:[1,3447],109:[1,3448],110:3445,181:3436,191:3434,196:3439,197:3440,198:3441,201:3444,204:[1,3449],205:[1,3450],206:[1,3455],207:[1,3456],208:[1,3457],209:[1,3458],210:[1,3451],211:[1,3452],212:[1,3453],213:[1,3454],214:3438,215:rl},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,3459]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:3460,214:45,215:X},{19:sl,21:il,22:3462,100:[1,3473],108:[1,3474],109:[1,3475],110:3472,181:3463,191:3461,196:3466,197:3467,198:3468,201:3471,204:[1,3476],205:[1,3477],206:[1,3482],207:[1,3483],208:[1,3484],209:[1,3485],210:[1,3478],211:[1,3479],212:[1,3480],213:[1,3481],214:3465,215:al},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(An,Sn,{84:2870,192:2871,83:3486,190:tc}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3487,121:nr,148:rr,189:sr}),N(An,Sn,{84:2870,192:2871,83:3488,190:tc}),N(mt,Tn,{99:2315,95:3489,101:hu,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:3490,193:[1,3491]}),{19:ts,21:ns,22:662,129:3492,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:3493,193:[1,3494]}),{19:ts,21:ns,22:662,129:3495,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,3496]},N(vt,Gt),{100:[1,3498],106:3497,108:[1,3499],109:[1,3500],110:3501,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3502]},N(gt,ls),N(wt,Yr),N(gt,es,{31:3503,193:[1,3504]}),{19:ts,21:ns,22:662,129:3505,199:rs,214:665,215:ss},N(vt,ps),{121:[1,3506]},{19:[1,3509],21:[1,3512],22:3508,87:3507,214:3510,215:[1,3511]},N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:fu,21:du,22:3514,87:3513,214:2350,215:mu},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:gu,21:yu,22:3516,87:3515,214:2376,215:xu},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:_u,21:bu,22:3518,87:3517,214:2403,215:Eu},N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:vu,21:Su,22:3520,87:3519,214:2430,215:Au},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:wu,21:Tu,22:3522,87:3521,214:2456,215:Ou},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:ku,21:Nu,22:3524,87:3523,214:2483,215:Iu},N(Ur,Ya),N(Ur,Lt),N(Vr,Ya),N(Vr,Lt),N(zr,Ya),N(zr,Lt),N(Br,ln),N(Br,pn),N(Br,yt),N(Br,xt),N(Vr,dt,{82:3525}),N(Br,Tt),N(Br,Ot),{19:[1,3529],21:[1,3533],22:3527,33:3526,200:3528,214:3530,215:[1,3532],216:[1,3531]},{119:[1,3534],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Br,hn),N(Br,fn),N(Vr,dt,{82:3535}),N(fi,bt,{93:3536}),N(Vr,Et,{99:2960,95:3537,101:rc,102:Ne,103:Ie,104:Fe}),N(fi,kt),N(fi,Nt),N(fi,It),N(fi,Ft),{100:[1,3538]},N(fi,Gt),{70:[1,3539]},N(di,Sn,{83:3540,84:3541,192:3542,190:[1,3543]}),N(mi,Sn,{83:3544,84:3545,192:3546,190:ol}),N(Ur,Tn,{99:2556,95:3548,101:ju,102:Ne,103:Ie,104:Fe}),N(qr,On),N(Vr,kn,{90:3549,95:3550,91:3551,99:3552,105:3554,107:3555,101:ul,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,In,{90:3549,95:3550,91:3551,99:3552,105:3554,107:3555,101:ul,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vr,Fn,{90:3549,95:3550,91:3551,99:3552,105:3554,107:3555,101:ul,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Kr,Ln),N(yi,Sn,{83:3556,84:3557,192:3558,190:[1,3559]}),N(Qa,jn),N(Qa,ue),N(Qa,ce),N(Qa,Y),N(Qa,ee),N(Qa,le),N(Qa,te),N(Qa,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,3560],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3561,121:nr,148:rr,189:sr}),N(qr,lr),N(Kr,pr),N(Kr,hr),N(Kr,fr),N(Kr,dr),{111:[1,3562]},N(Kr,_r),N(Vr,ta),{193:[1,3565],194:3563,195:[1,3564]},N(Ur,Ja),N(Ur,Ua),N(Ur,Va),N(Ur,Y),N(Ur,ee),N(Ur,ds),N(Ur,ms),N(Ur,gs),N(Ur,te),N(Ur,ne),N(Ur,ys),N(Ur,xs,{202:3566,203:3567,111:[1,3568]}),N(Ur,_s),N(Ur,bs),N(Ur,Es),N(Ur,vs),N(Ur,Ss),N(Ur,As),N(Ur,ws),N(Ur,Ts),N(Ur,Os),N(Fu,mr),N(Fu,gr),N(Fu,yr),N(Fu,xr),{193:[1,3571],194:3569,195:[1,3570]},N(Vr,Ja),N(Vr,Ua),N(Vr,Va),N(Vr,Y),N(Vr,ee),N(Vr,ds),N(Vr,ms),N(Vr,gs),N(Vr,te),N(Vr,ne),N(Vr,ys),N(Vr,xs,{202:3572,203:3573,111:[1,3574]}),N(Vr,_s),N(Vr,bs),N(Vr,Es),N(Vr,vs),N(Vr,Ss),N(Vr,As),N(Vr,ws),N(Vr,Ts),N(Vr,Os),N(Lu,mr),N(Lu,gr),N(Lu,yr),N(Lu,xr),{19:[1,3577],21:[1,3580],22:3576,87:3575,214:3578,215:[1,3579]},{193:[1,3583],194:3581,195:[1,3582]},N(zr,Ja),N(zr,Ua),N(zr,Va),N(zr,Y),N(zr,ee),N(zr,ds),N(zr,ms),N(zr,gs),N(zr,te),N(zr,ne),N(zr,ys),N(zr,xs,{202:3584,203:3585,111:[1,3586]}),N(zr,_s),N(zr,bs),N(zr,Es),N(zr,vs),N(zr,Ss),N(zr,As),N(zr,ws),N(zr,Ts),N(zr,Os),N(Cu,mr),N(Cu,gr),N(Cu,yr),N(Cu,xr),N(Vr,ta),{193:[1,3589],194:3587,195:[1,3588]},N(Ur,Ja),N(Ur,Ua),N(Ur,Va),N(Ur,Y),N(Ur,ee),N(Ur,ds),N(Ur,ms),N(Ur,gs),N(Ur,te),N(Ur,ne),N(Ur,ys),N(Ur,xs,{202:3590,203:3591,111:[1,3592]}),N(Ur,_s),N(Ur,bs),N(Ur,Es),N(Ur,vs),N(Ur,Ss),N(Ur,As),N(Ur,ws),N(Ur,Ts),N(Ur,Os),N(Fu,mr),N(Fu,gr),N(Fu,yr),N(Fu,xr),{193:[1,3595],194:3593,195:[1,3594]},N(Vr,Ja),N(Vr,Ua),N(Vr,Va),N(Vr,Y),N(Vr,ee),N(Vr,ds),N(Vr,ms),N(Vr,gs),N(Vr,te),N(Vr,ne),N(Vr,ys),N(Vr,xs,{202:3596,203:3597,111:[1,3598]}),N(Vr,_s),N(Vr,bs),N(Vr,Es),N(Vr,vs),N(Vr,Ss),N(Vr,As),N(Vr,ws),N(Vr,Ts),N(Vr,Os),N(Lu,mr),N(Lu,gr),N(Lu,yr),N(Lu,xr),{19:[1,3601],21:[1,3604],22:3600,87:3599,214:3602,215:[1,3603]},{193:[1,3607],194:3605,195:[1,3606]},N(zr,Ja),N(zr,Ua),N(zr,Va),N(zr,Y),N(zr,ee),N(zr,ds),N(zr,ms),N(zr,gs),N(zr,te),N(zr,ne),N(zr,ys),N(zr,xs,{202:3608,203:3609,111:[1,3610]}),N(zr,_s),N(zr,bs),N(zr,Es),N(zr,vs),N(zr,Ss),N(zr,As),N(zr,ws),N(zr,Ts),N(zr,Os),N(Cu,mr),N(Cu,gr),N(Cu,yr),N(Cu,xr),N(Bs,cl),N(zo,Yr),N(Bs,es,{31:3611,193:[1,3612]}),{19:ts,21:ns,22:662,129:3613,199:rs,214:665,215:ss},N(eu,ll),N(nu,ru,{60:3614}),N(be,Ee,{63:3615,73:3616,75:3617,76:3618,92:3621,94:3622,87:3624,88:3625,89:3626,78:3627,39:3628,95:3632,22:3633,91:3635,118:3636,99:3640,214:3643,105:3644,107:3645,19:[1,3642],21:[1,3647],69:[1,3619],71:[1,3620],79:[1,3637],80:[1,3638],81:[1,3639],85:[1,3623],96:[1,3629],97:[1,3630],98:[1,3631],101:pl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,3634],215:[1,3646]}),N(nu,hl),N(be,Ee,{63:3648,73:3649,75:3650,76:3651,92:3654,94:3655,87:3657,88:3658,89:3659,78:3660,39:3661,95:3665,22:3666,91:3668,118:3669,99:3673,214:3676,105:3677,107:3678,19:[1,3675],21:[1,3680],69:[1,3652],71:[1,3653],79:[1,3670],80:[1,3671],81:[1,3672],85:[1,3656],96:[1,3662],97:[1,3663],98:[1,3664],101:fl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,3667],215:[1,3679]}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3681,121:nr,148:rr,189:sr}),N(nu,jn),N(nu,ue),N(nu,ce),N(nu,Y),N(nu,ee),N(nu,le),N(nu,te),N(nu,ne),N(nu,Tn,{99:2639,95:3682,101:Vu,102:Ne,103:Ie,104:Fe}),N(Nc,On),N(Nc,lr),N(nu,dl),N(qu,as),N(Ku,os),N(Ku,us),N(Ku,cs),{100:[1,3683]},N(Ku,Gt),{100:[1,3685],106:3684,108:[1,3686],109:[1,3687],110:3688,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3689]},N(Ku,ps),{121:[1,3690]},{19:[1,3693],21:[1,3696],22:3692,87:3691,214:3694,215:[1,3695]},N(Bs,ml),N(Fc,dt,{82:3697}),N(Fc,$u),N(Fc,Ru),N(Fc,Du),N(Fc,Mu),N(Fc,Pu),N(Rc,Qu,{57:3698,51:[1,3699]}),N(Dc,Gu,{61:3700,53:[1,3701]}),N(Mc,Bu),N(Mc,Ju,{74:3702,76:3703,78:3704,39:3705,118:3706,79:[1,3707],80:[1,3708],81:[1,3709],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(Mc,Uu),N(Mc,va,{77:3710,73:3711,92:3712,94:3713,95:3717,99:3718,96:[1,3714],97:[1,3715],98:[1,3716],101:gl,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:3720,44:ut,79:ct,80:lt,81:pt}),N(Mc,zu),N(yl,bt,{93:3721}),N(xl,Et,{99:3216,95:3722,101:Pc,102:Ne,103:Ie,104:Fe}),N(_l,St,{86:3723}),N(_l,St,{86:3724}),N(_l,St,{86:3725}),N(Mc,At,{105:3220,107:3221,91:3726,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(bl,ka),N(bl,Na),N(yl,kt),N(yl,Nt),N(yl,It),N(yl,Ft),N(_l,Lt),N(Ct,jt,{162:3727}),N(El,Rt),{119:[1,3728],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(bl,Tt),N(bl,Ot),{19:[1,3732],21:[1,3736],22:3730,33:3729,200:3731,214:3733,215:[1,3735],216:[1,3734]},{100:[1,3737]},N(yl,Gt),N(_l,Y),N(_l,ee),{100:[1,3739],106:3738,108:[1,3740],109:[1,3741],110:3742,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3743]},N(_l,te),N(_l,ne),N(Fc,dt,{82:3744}),N(Vs,iu),N(be,Ee,{92:742,94:743,95:753,99:761,226:3745,73:3746,75:3747,76:3748,87:3752,88:3753,89:3754,78:3755,39:3756,22:3757,91:3759,118:3760,214:3765,105:3766,107:3767,19:[1,3764],21:[1,3769],69:[1,3749],71:[1,3750],79:[1,3761],80:[1,3762],81:[1,3763],85:[1,3751],96:qs,97:Zs,98:Ks,101:Xs,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,3758],215:[1,3768]}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3770,121:nr,148:rr,189:sr}),N(Vs,jn),N(Vs,ue),N(Vs,ce),N(Vs,Y),N(Vs,ee),N(Vs,le),N(Vs,te),N(Vs,ne),N(Vs,Tn,{99:2689,95:3771,101:Hu,102:Ne,103:Ie,104:Fe}),N(go,On),N(go,lr),N(Vs,au),N(Ta,os),N(Ta,us),N(Ta,cs),{100:[1,3772]},N(Ta,Gt),{100:[1,3774],106:3773,108:[1,3775],109:[1,3776],110:3777,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3778]},N(Ta,ps),{121:[1,3779]},{19:[1,3782],21:[1,3785],22:3781,87:3780,214:3783,215:[1,3784]},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3786,121:nr,148:rr,189:sr}),N(Vs,jn),N(Vs,ue),N(Vs,ce),N(Vs,Y),N(Vs,ee),N(Vs,le),N(Vs,te),N(Vs,ne),N(Vs,Tn,{99:2727,95:3787,101:Yu,102:Ne,103:Ie,104:Fe}),N(go,On),N(go,lr),N(Vs,au),N(Ta,os),N(Ta,us),N(Ta,cs),{100:[1,3788]},N(Ta,Gt),{100:[1,3790],106:3789,108:[1,3791],109:[1,3792],110:3793,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3794]},N(Ta,ps),{121:[1,3795]},{19:[1,3798],21:[1,3801],22:3797,87:3796,214:3799,215:[1,3800]},N(Ta,Fa),N(Ta,Lt),N(Ta,Y),N(Ta,ee),N(Ta,te),N(Ta,ne),N(xe,ln),N(xe,pn),N(xe,yt),N(xe,xt),N(mt,dt,{82:3802}),N(xe,Tt),N(xe,Ot),{19:[1,3806],21:[1,3810],22:3804,33:3803,200:3805,214:3807,215:[1,3809],216:[1,3808]},{119:[1,3811],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(xe,hn),N(xe,fn),N(mt,dt,{82:3812}),N(dn,bt,{93:3813}),N(mt,Et,{99:3297,95:3814,101:Bc,102:Ne,103:Ie,104:Fe}),N(dn,kt),N(dn,Nt),N(dn,It),N(dn,Ft),{100:[1,3815]},N(dn,Gt),{70:[1,3816]},N(vn,Sn,{83:3817,84:3818,192:3819,190:[1,3820]}),N(An,Sn,{83:3821,84:3822,192:3823,190:vl}),N(ft,Tn,{99:2782,95:3825,101:ec,102:Ne,103:Ie,104:Fe}),N(_t,On),N(mt,kn,{90:3826,95:3827,91:3828,99:3829,105:3831,107:3832,101:Sl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,In,{90:3826,95:3827,91:3828,99:3829,105:3831,107:3832,101:Sl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(mt,Fn,{90:3826,95:3827,91:3828,99:3829,105:3831,107:3832,101:Sl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N($t,Ln),N(Cn,Sn,{83:3833,84:3834,192:3835,190:[1,3836]}),N(gt,jn),N(gt,ue),N(gt,ce),N(gt,Y),N(gt,ee),N(gt,le),N(gt,te),N(gt,ne),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,3837],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3838,121:nr,148:rr,189:sr}),N(_t,lr),N($t,pr),N($t,hr),N($t,fr),N($t,dr),{111:[1,3839]},N($t,_r),N(mt,ta),{193:[1,3842],194:3840,195:[1,3841]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:3843,203:3844,111:[1,3845]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,3848],194:3846,195:[1,3847]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:3849,203:3850,111:[1,3851]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,3854],21:[1,3857],22:3853,87:3852,214:3855,215:[1,3856]},{193:[1,3860],194:3858,195:[1,3859]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:3861,203:3862,111:[1,3863]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(mt,ta),{193:[1,3866],194:3864,195:[1,3865]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:3867,203:3868,111:[1,3869]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,3872],194:3870,195:[1,3871]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:3873,203:3874,111:[1,3875]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,3878],21:[1,3881],22:3877,87:3876,214:3879,215:[1,3880]},{193:[1,3884],194:3882,195:[1,3883]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:3885,203:3886,111:[1,3887]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(xe,ls),{121:[1,3888]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:3889,214:45,215:X},{19:Al,21:wl,22:3891,100:[1,3902],108:[1,3903],109:[1,3904],110:3901,181:3892,191:3890,196:3895,197:3896,198:3897,201:3900,204:[1,3905],205:[1,3906],206:[1,3911],207:[1,3912],208:[1,3913],209:[1,3914],210:[1,3907],211:[1,3908],212:[1,3909],213:[1,3910],214:3894,215:Tl},N(An,Ei),{19:Z,21:K,22:3915,214:45,215:X},{19:Ol,21:kl,22:3917,100:[1,3928],108:[1,3929],109:[1,3930],110:3927,181:3918,191:3916,196:3921,197:3922,198:3923,201:3926,204:[1,3931],205:[1,3932],206:[1,3937],207:[1,3938],208:[1,3939],209:[1,3940],210:[1,3933],211:[1,3934],212:[1,3935],213:[1,3936],214:3920,215:Nl},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,3941]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:3942,214:45,215:X},{19:Il,21:Fl,22:3944,100:[1,3955],108:[1,3956],109:[1,3957],110:3954,181:3945,191:3943,196:3948,197:3949,198:3950,201:3953,204:[1,3958],205:[1,3959],206:[1,3964],207:[1,3965],208:[1,3966],209:[1,3967],210:[1,3960],211:[1,3961],212:[1,3962],213:[1,3963],214:3947,215:Ll},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(mi,Sn,{84:3545,192:3546,83:3968,190:ol}),N(Br,jn),N(Br,ue),N(Br,ce),N(Br,Y),N(Br,ee),N(Br,le),N(Br,te),N(Br,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:3969,121:nr,148:rr,189:sr}),N(mi,Sn,{84:3545,192:3546,83:3970,190:ol}),N(Vr,Tn,{99:2960,95:3971,101:rc,102:Ne,103:Ie,104:Fe}),N(fi,On),N(fi,lr),N(Br,Gr),N(Pa,Hr),N(Ur,Yr),N(Pa,es,{31:3972,193:[1,3973]}),{19:ts,21:ns,22:662,129:3974,199:rs,214:665,215:ss},N(Br,is),N(Vr,Yr),N(Br,es,{31:3975,193:[1,3976]}),{19:ts,21:ns,22:662,129:3977,199:rs,214:665,215:ss},N(qr,as),N(Zr,os),N(Zr,us),N(Zr,cs),{100:[1,3978]},N(Zr,Gt),{100:[1,3980],106:3979,108:[1,3981],109:[1,3982],110:3983,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,3984]},N(Qa,ls),N(zr,Yr),N(Qa,es,{31:3985,193:[1,3986]}),{19:ts,21:ns,22:662,129:3987,199:rs,214:665,215:ss},N(Zr,ps),{121:[1,3988]},{19:[1,3991],21:[1,3994],22:3990,87:3989,214:3992,215:[1,3993]},N(di,Ue),N(di,Ve),N(di,ze),N(Ur,Yi),N(Ur,ea),{19:sc,21:ic,22:3996,87:3995,214:2995,215:ac},N(mi,Ue),N(mi,Ve),N(mi,ze),N(Vr,Yi),N(Vr,ea),{19:oc,21:uc,22:3998,87:3997,214:3021,215:cc},N(Zr,Fa),N(Zr,Lt),N(Zr,Y),N(Zr,ee),N(Zr,te),N(Zr,ne),N(yi,Ue),N(yi,Ve),N(yi,ze),N(zr,Yi),N(zr,ea),{19:lc,21:pc,22:4e3,87:3999,214:3048,215:hc},N(di,Ue),N(di,Ve),N(di,ze),N(Ur,Yi),N(Ur,ea),{19:fc,21:dc,22:4002,87:4001,214:3075,215:mc},N(mi,Ue),N(mi,Ve),N(mi,ze),N(Vr,Yi),N(Vr,ea),{19:gc,21:yc,22:4004,87:4003,214:3101,215:xc},N(Zr,Fa),N(Zr,Lt),N(Zr,Y),N(Zr,ee),N(Zr,te),N(Zr,ne),N(yi,Ue),N(yi,Ve),N(yi,ze),N(zr,Yi),N(zr,ea),{19:_c,21:bc,22:4006,87:4005,214:3128,215:Ec},N(vc,Ei),{19:Z,21:K,22:4007,214:45,215:X},{19:Cl,21:jl,22:4009,100:[1,4020],108:[1,4021],109:[1,4022],110:4019,181:4010,191:4008,196:4013,197:4014,198:4015,201:4018,204:[1,4023],205:[1,4024],206:[1,4029],207:[1,4030],208:[1,4031],209:[1,4032],210:[1,4025],211:[1,4026],212:[1,4027],213:[1,4028],214:4012,215:$l},N(eu,Gu,{61:4033,53:[1,4034]}),N(nu,Bu),N(nu,Ju,{74:4035,76:4036,78:4037,39:4038,118:4039,79:[1,4040],80:[1,4041],81:[1,4042],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(nu,Uu),N(nu,va,{77:4043,73:4044,92:4045,94:4046,95:4050,99:4051,96:[1,4047],97:[1,4048],98:[1,4049],101:Rl,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:4053,44:ut,79:ct,80:lt,81:pt}),N(nu,zu),N(qu,bt,{93:4054}),N(Zu,Et,{99:3640,95:4055,101:pl,102:Ne,103:Ie,104:Fe}),N(Ku,St,{86:4056}),N(Ku,St,{86:4057}),N(Ku,St,{86:4058}),N(nu,At,{105:3644,107:3645,91:4059,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Xu,ka),N(Xu,Na),N(qu,kt),N(qu,Nt),N(qu,It),N(qu,Ft),N(Ku,Lt),N(Ct,jt,{162:4060}),N(Wu,Rt),{119:[1,4061],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Xu,Tt),N(Xu,Ot),{19:[1,4065],21:[1,4069],22:4063,33:4062,200:4064,214:4066,215:[1,4068],216:[1,4067]},{100:[1,4070]},N(qu,Gt),N(Ku,Y),N(Ku,ee),{100:[1,4072],106:4071,108:[1,4073],109:[1,4074],110:4075,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4076]},N(Ku,te),N(Ku,ne),N(nu,Bu),N(nu,Ju,{74:4077,76:4078,78:4079,39:4080,118:4081,79:[1,4082],80:[1,4083],81:[1,4084],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(nu,Uu),N(nu,va,{77:4085,73:4086,92:4087,94:4088,95:4092,99:4093,96:[1,4089],97:[1,4090],98:[1,4091],101:Dl,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:4095,44:ut,79:ct,80:lt,81:pt}),N(nu,zu),N(qu,bt,{93:4096}),N(Zu,Et,{99:3673,95:4097,101:fl,102:Ne,103:Ie,104:Fe}),N(Ku,St,{86:4098}),N(Ku,St,{86:4099}),N(Ku,St,{86:4100}),N(nu,At,{105:3677,107:3678,91:4101,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Xu,ka),N(Xu,Na),N(qu,kt),N(qu,Nt),N(qu,It),N(qu,Ft),N(Ku,Lt),N(Ct,jt,{162:4102}),N(Wu,Rt),{119:[1,4103],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Xu,Tt),N(Xu,Ot),{19:[1,4107],21:[1,4111],22:4105,33:4104,200:4106,214:4108,215:[1,4110],216:[1,4109]},{100:[1,4112]},N(qu,Gt),N(Ku,Y),N(Ku,ee),{100:[1,4114],106:4113,108:[1,4115],109:[1,4116],110:4117,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4118]},N(Ku,te),N(Ku,ne),{121:[1,4119]},N(Nc,as),N(Ku,lr),N(Ku,pr),N(Ku,hr),N(Ku,fr),N(Ku,dr),{111:[1,4120]},N(Ku,_r),N(Xu,ta),N(Wu,Fa),N(Wu,Lt),N(Wu,Y),N(Wu,ee),N(Wu,te),N(Wu,ne),N(Ml,Sn,{83:4121,84:4122,192:4123,190:Pl}),N(Dc,Ac),N(re,se,{55:4125,59:4126,41:4127,44:ie}),N(Mc,wc),N(re,se,{59:4128,41:4129,44:ie}),N(Mc,Tc),N(Mc,Oc),N(Mc,ka),N(Mc,Na),{119:[1,4130],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Mc,Tt),N(Mc,Ot),{19:[1,4134],21:[1,4138],22:4132,33:4131,200:4133,214:4135,215:[1,4137],216:[1,4136]},N(Mc,kc),N(Mc,mo),N(Ql,bt,{93:4139}),N(Mc,Et,{99:3718,95:4140,101:gl,102:Ne,103:Ie,104:Fe}),N(Ql,kt),N(Ql,Nt),N(Ql,It),N(Ql,Ft),{100:[1,4141]},N(Ql,Gt),{70:[1,4142]},N(xl,Tn,{99:3216,95:4143,101:Pc,102:Ne,103:Ie,104:Fe}),N(yl,On),N(Mc,kn,{90:4144,95:4145,91:4146,99:4147,105:4149,107:4150,101:Gl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,In,{90:4144,95:4145,91:4146,99:4147,105:4149,107:4150,101:Gl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,Fn,{90:4144,95:4145,91:4146,99:4147,105:4149,107:4150,101:Gl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(El,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4151],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4152,121:nr,148:rr,189:sr}),N(bl,jn),N(bl,ue),N(bl,ce),N(bl,Y),N(bl,ee),N(bl,le),N(bl,te),N(bl,ne),N(yl,lr),N(El,pr),N(El,hr),N(El,fr),N(El,dr),{111:[1,4153]},N(El,_r),N(Ml,Sn,{84:4122,192:4123,83:4154,190:Pl}),N(Vs,ba),N(be,Ee,{76:4155,78:4156,39:4157,118:4158,79:[1,4159],80:[1,4160],81:[1,4161]}),N(Vs,Ea),N(Vs,va,{77:4162,73:4163,92:4164,94:4165,95:4169,99:4170,96:[1,4166],97:[1,4167],98:[1,4168],101:Bl,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:4172,44:ut,79:ct,80:lt,81:pt}),N(Vs,Aa),N(Ta,St,{86:4173}),N(Ta,St,{86:4174}),N(Ta,St,{86:4175}),N(Vs,At,{105:3766,107:3767,91:4176,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Oa,ka),N(Oa,Na),N(Ta,Lt),N(Ct,jt,{162:4177}),N(Ia,Rt),{119:[1,4178],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Oa,Tt),N(Oa,Ot),{19:[1,4182],21:[1,4186],22:4180,33:4179,200:4181,214:4183,215:[1,4185],216:[1,4184]},N(Ta,Y),N(Ta,ee),{100:[1,4188],106:4187,108:[1,4189],109:[1,4190],110:4191,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4192]},N(Ta,te),N(Ta,ne),{121:[1,4193]},N(go,as),N(Ta,lr),N(Ta,pr),N(Ta,hr),N(Ta,fr),N(Ta,dr),{111:[1,4194]},N(Ta,_r),N(Oa,ta),N(Ia,Fa),N(Ia,Lt),N(Ia,Y),N(Ia,ee),N(Ia,te),N(Ia,ne),{121:[1,4195]},N(go,as),N(Ta,lr),N(Ta,pr),N(Ta,hr),N(Ta,fr),N(Ta,dr),{111:[1,4196]},N(Ta,_r),N(Oa,ta),N(Ia,Fa),N(Ia,Lt),N(Ia,Y),N(Ia,ee),N(Ia,te),N(Ia,ne),N(An,Sn,{84:3822,192:3823,83:4197,190:vl}),N(xe,jn),N(xe,ue),N(xe,ce),N(xe,Y),N(xe,ee),N(xe,le),N(xe,te),N(xe,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4198,121:nr,148:rr,189:sr}),N(An,Sn,{84:3822,192:3823,83:4199,190:vl}),N(mt,Tn,{99:3297,95:4200,101:Bc,102:Ne,103:Ie,104:Fe}),N(dn,On),N(dn,lr),N(xe,Gr),N(Wr,Hr),N(ft,Yr),N(Wr,es,{31:4201,193:[1,4202]}),{19:ts,21:ns,22:662,129:4203,199:rs,214:665,215:ss},N(xe,is),N(mt,Yr),N(xe,es,{31:4204,193:[1,4205]}),{19:ts,21:ns,22:662,129:4206,199:rs,214:665,215:ss},N(_t,as),N(vt,os),N(vt,us),N(vt,cs),{100:[1,4207]},N(vt,Gt),{100:[1,4209],106:4208,108:[1,4210],109:[1,4211],110:4212,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4213]},N(gt,ls),N(wt,Yr),N(gt,es,{31:4214,193:[1,4215]}),{19:ts,21:ns,22:662,129:4216,199:rs,214:665,215:ss},N(vt,ps),{121:[1,4217]},{19:[1,4220],21:[1,4223],22:4219,87:4218,214:4221,215:[1,4222]},N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:Jc,21:Uc,22:4225,87:4224,214:3332,215:Vc},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:zc,21:qc,22:4227,87:4226,214:3358,215:Zc},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:Kc,21:Xc,22:4229,87:4228,214:3385,215:Wc},N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:Hc,21:Yc,22:4231,87:4230,214:3412,215:el},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:tl,21:nl,22:4233,87:4232,214:3438,215:rl},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:sl,21:il,22:4235,87:4234,214:3465,215:al},N(mt,ta),{193:[1,4238],194:4236,195:[1,4237]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:4239,203:4240,111:[1,4241]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,4244],194:4242,195:[1,4243]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:4245,203:4246,111:[1,4247]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,4250],21:[1,4253],22:4249,87:4248,214:4251,215:[1,4252]},{193:[1,4256],194:4254,195:[1,4255]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:4257,203:4258,111:[1,4259]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(Br,ls),{121:[1,4260]},N(Br,Hr),N(fi,as),N(di,Ei),{19:Z,21:K,22:4261,214:45,215:X},{19:Jl,21:Ul,22:4263,100:[1,4274],108:[1,4275],109:[1,4276],110:4273,181:4264,191:4262,196:4267,197:4268,198:4269,201:4272,204:[1,4277],205:[1,4278],206:[1,4283],207:[1,4284],208:[1,4285],209:[1,4286],210:[1,4279],211:[1,4280],212:[1,4281],213:[1,4282],214:4266,215:Vl},N(mi,Ei),{19:Z,21:K,22:4287,214:45,215:X},{19:zl,21:ql,22:4289,100:[1,4300],108:[1,4301],109:[1,4302],110:4299,181:4290,191:4288,196:4293,197:4294,198:4295,201:4298,204:[1,4303],205:[1,4304],206:[1,4309],207:[1,4310],208:[1,4311],209:[1,4312],210:[1,4305],211:[1,4306],212:[1,4307],213:[1,4308],214:4292,215:Zl},N(Zr,lr),N(Zr,pr),N(Zr,hr),N(Zr,fr),N(Zr,dr),{111:[1,4313]},N(Zr,_r),N(yi,Ei),{19:Z,21:K,22:4314,214:45,215:X},{19:Kl,21:Xl,22:4316,100:[1,4327],108:[1,4328],109:[1,4329],110:4326,181:4317,191:4315,196:4320,197:4321,198:4322,201:4325,204:[1,4330],205:[1,4331],206:[1,4336],207:[1,4337],208:[1,4338],209:[1,4339],210:[1,4332],211:[1,4333],212:[1,4334],213:[1,4335],214:4319,215:Wl},N(zr,ta),N(Kr,Fa),N(Kr,Lt),N(Kr,Y),N(Kr,ee),N(Kr,te),N(Kr,ne),N(Ur,Ya),N(Ur,Lt),N(Vr,Ya),N(Vr,Lt),N(zr,Ya),N(zr,Lt),N(Ur,Ya),N(Ur,Lt),N(Vr,Ya),N(Vr,Lt),N(zr,Ya),N(zr,Lt),{193:[1,4342],194:4340,195:[1,4341]},N(zo,Ja),N(zo,Ua),N(zo,Va),N(zo,Y),N(zo,ee),N(zo,ds),N(zo,ms),N(zo,gs),N(zo,te),N(zo,ne),N(zo,ys),N(zo,xs,{202:4343,203:4344,111:[1,4345]}),N(zo,_s),N(zo,bs),N(zo,Es),N(zo,vs),N(zo,Ss),N(zo,As),N(zo,ws),N(zo,Ts),N(zo,Os),N(Hl,mr),N(Hl,gr),N(Hl,yr),N(Hl,xr),N(nu,wc),N(re,se,{59:4346,41:4347,44:ie}),N(nu,Tc),N(nu,Oc),N(nu,ka),N(nu,Na),{119:[1,4348],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(nu,Tt),N(nu,Ot),{19:[1,4352],21:[1,4356],22:4350,33:4349,200:4351,214:4353,215:[1,4355],216:[1,4354]},N(nu,kc),N(nu,mo),N(Nc,bt,{93:4357}),N(nu,Et,{99:4051,95:4358,101:Rl,102:Ne,103:Ie,104:Fe}),N(Nc,kt),N(Nc,Nt),N(Nc,It),N(Nc,Ft),{100:[1,4359]},N(Nc,Gt),{70:[1,4360]},N(Zu,Tn,{99:3640,95:4361,101:pl,102:Ne,103:Ie,104:Fe}),N(qu,On),N(nu,kn,{90:4362,95:4363,91:4364,99:4365,105:4367,107:4368,101:Yl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,In,{90:4362,95:4363,91:4364,99:4365,105:4367,107:4368,101:Yl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,Fn,{90:4362,95:4363,91:4364,99:4365,105:4367,107:4368,101:Yl,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Wu,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4369],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4370,121:nr,148:rr,189:sr}),N(Xu,jn),N(Xu,ue),N(Xu,ce),N(Xu,Y),N(Xu,ee),N(Xu,le),N(Xu,te),N(Xu,ne),N(qu,lr),N(Wu,pr),N(Wu,hr),N(Wu,fr),N(Wu,dr),{111:[1,4371]},N(Wu,_r),N(nu,Tc),N(nu,Oc),N(nu,ka),N(nu,Na),{119:[1,4372],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(nu,Tt),N(nu,Ot),{19:[1,4376],21:[1,4380],22:4374,33:4373,200:4375,214:4377,215:[1,4379],216:[1,4378]},N(nu,kc),N(nu,mo),N(Nc,bt,{93:4381}),N(nu,Et,{99:4093,95:4382,101:Dl,102:Ne,103:Ie,104:Fe}),N(Nc,kt),N(Nc,Nt),N(Nc,It),N(Nc,Ft),{100:[1,4383]},N(Nc,Gt),{70:[1,4384]},N(Zu,Tn,{99:3673,95:4385,101:fl,102:Ne,103:Ie,104:Fe}),N(qu,On),N(nu,kn,{90:4386,95:4387,91:4388,99:4389,105:4391,107:4392,101:ep,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,In,{90:4386,95:4387,91:4388,99:4389,105:4391,107:4392,101:ep,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,Fn,{90:4386,95:4387,91:4388,99:4389,105:4391,107:4392,101:ep,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Wu,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4393],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4394,121:nr,148:rr,189:sr}),N(Xu,jn),N(Xu,ue),N(Xu,ce),N(Xu,Y),N(Xu,ee),N(Xu,le),N(Xu,te),N(Xu,ne),N(qu,lr),N(Wu,pr),N(Wu,hr),N(Wu,fr),N(Wu,dr),{111:[1,4395]},N(Wu,_r),N(nu,ta),{19:[1,4398],21:[1,4401],22:4397,87:4396,214:4399,215:[1,4400]},N(lo,cl),N(Fc,Yr),N(lo,es,{31:4402,193:[1,4403]}),{19:ts,21:ns,22:662,129:4404,199:rs,214:665,215:ss},N(Dc,ll),N(Mc,ru,{60:4405}),N(be,Ee,{63:4406,73:4407,75:4408,76:4409,92:4412,94:4413,87:4415,88:4416,89:4417,78:4418,39:4419,95:4423,22:4424,91:4426,118:4427,99:4431,214:4434,105:4435,107:4436,19:[1,4433],21:[1,4438],69:[1,4410],71:[1,4411],79:[1,4428],80:[1,4429],81:[1,4430],85:[1,4414],96:[1,4420],97:[1,4421],98:[1,4422],101:tp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,4425],215:[1,4437]}),N(Mc,hl),N(be,Ee,{63:4439,73:4440,75:4441,76:4442,92:4445,94:4446,87:4448,88:4449,89:4450,78:4451,39:4452,95:4456,22:4457,91:4459,118:4460,99:4464,214:4467,105:4468,107:4469,19:[1,4466],21:[1,4471],69:[1,4443],71:[1,4444],79:[1,4461],80:[1,4462],81:[1,4463],85:[1,4447],96:[1,4453],97:[1,4454],98:[1,4455],101:np,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,4458],215:[1,4470]}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4472,121:nr,148:rr,189:sr}),N(Mc,jn),N(Mc,ue),N(Mc,ce),N(Mc,Y),N(Mc,ee),N(Mc,le),N(Mc,te),N(Mc,ne),N(Mc,Tn,{99:3718,95:4473,101:gl,102:Ne,103:Ie,104:Fe}),N(Ql,On),N(Ql,lr),N(Mc,dl),N(yl,as),N(_l,os),N(_l,us),N(_l,cs),{100:[1,4474]},N(_l,Gt),{100:[1,4476],106:4475,108:[1,4477],109:[1,4478],110:4479,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4480]},N(_l,ps),{121:[1,4481]},{19:[1,4484],21:[1,4487],22:4483,87:4482,214:4485,215:[1,4486]},N(lo,ml),N(Vs,ho),N(Vs,ka),N(Vs,Na),{119:[1,4488],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Vs,Tt),N(Vs,Ot),{19:[1,4492],21:[1,4496],22:4490,33:4489,200:4491,214:4493,215:[1,4495],216:[1,4494]},N(Vs,fo),N(Vs,mo),N(go,bt,{93:4497}),N(Vs,Et,{99:4170,95:4498,101:Bl,102:Ne,103:Ie,104:Fe}),N(go,kt),N(go,Nt),N(go,It),N(go,Ft),{100:[1,4499]},N(go,Gt),{70:[1,4500]},N(Vs,kn,{90:4501,95:4502,91:4503,99:4504,105:4506,107:4507,101:rp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,In,{90:4501,95:4502,91:4503,99:4504,105:4506,107:4507,101:rp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Vs,Fn,{90:4501,95:4502,91:4503,99:4504,105:4506,107:4507,101:rp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Ia,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4508],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4509,121:nr,148:rr,189:sr}),N(Oa,jn),N(Oa,ue),N(Oa,ce),N(Oa,Y),N(Oa,ee),N(Oa,le),N(Oa,te),N(Oa,ne),N(Ia,pr),N(Ia,hr),N(Ia,fr),N(Ia,dr),{111:[1,4510]},N(Ia,_r),N(Vs,ta),{19:[1,4513],21:[1,4516],22:4512,87:4511,214:4514,215:[1,4515]},N(Vs,ta),{19:[1,4519],21:[1,4522],22:4518,87:4517,214:4520,215:[1,4521]},N(xe,ls),{121:[1,4523]},N(xe,Hr),N(dn,as),N(vn,Ei),{19:Z,21:K,22:4524,214:45,215:X},{19:sp,21:ip,22:4526,100:[1,4537],108:[1,4538],109:[1,4539],110:4536,181:4527,191:4525,196:4530,197:4531,198:4532,201:4535,204:[1,4540],205:[1,4541],206:[1,4546],207:[1,4547],208:[1,4548],209:[1,4549],210:[1,4542],211:[1,4543],212:[1,4544],213:[1,4545],214:4529,215:ap},N(An,Ei),{19:Z,21:K,22:4550,214:45,215:X},{19:op,21:up,22:4552,100:[1,4563],108:[1,4564],109:[1,4565],110:4562,181:4553,191:4551,196:4556,197:4557,198:4558,201:4561,204:[1,4566],205:[1,4567],206:[1,4572],207:[1,4573],208:[1,4574],209:[1,4575],210:[1,4568],211:[1,4569],212:[1,4570],213:[1,4571],214:4555,215:cp},N(vt,lr),N(vt,pr),N(vt,hr),N(vt,fr),N(vt,dr),{111:[1,4576]},N(vt,_r),N(Cn,Ei),{19:Z,21:K,22:4577,214:45,215:X},{19:lp,21:pp,22:4579,100:[1,4590],108:[1,4591],109:[1,4592],110:4589,181:4580,191:4578,196:4583,197:4584,198:4585,201:4588,204:[1,4593],205:[1,4594],206:[1,4599],207:[1,4600],208:[1,4601],209:[1,4602],210:[1,4595],211:[1,4596],212:[1,4597],213:[1,4598],214:4582,215:hp},N(wt,ta),N($t,Fa),N($t,Lt),N($t,Y),N($t,ee),N($t,te),N($t,ne),N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:Al,21:wl,22:4604,87:4603,214:3894,215:Tl},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:Ol,21:kl,22:4606,87:4605,214:3920,215:Nl},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:Il,21:Fl,22:4608,87:4607,214:3947,215:Ll},N(Vr,ta),{193:[1,4611],194:4609,195:[1,4610]},N(Ur,Ja),N(Ur,Ua),N(Ur,Va),N(Ur,Y),N(Ur,ee),N(Ur,ds),N(Ur,ms),N(Ur,gs),N(Ur,te),N(Ur,ne),N(Ur,ys),N(Ur,xs,{202:4612,203:4613,111:[1,4614]}),N(Ur,_s),N(Ur,bs),N(Ur,Es),N(Ur,vs),N(Ur,Ss),N(Ur,As),N(Ur,ws),N(Ur,Ts),N(Ur,Os),N(Fu,mr),N(Fu,gr),N(Fu,yr),N(Fu,xr),{193:[1,4617],194:4615,195:[1,4616]},N(Vr,Ja),N(Vr,Ua),N(Vr,Va),N(Vr,Y),N(Vr,ee),N(Vr,ds),N(Vr,ms),N(Vr,gs),N(Vr,te),N(Vr,ne),N(Vr,ys),N(Vr,xs,{202:4618,203:4619,111:[1,4620]}),N(Vr,_s),N(Vr,bs),N(Vr,Es),N(Vr,vs),N(Vr,Ss),N(Vr,As),N(Vr,ws),N(Vr,Ts),N(Vr,Os),N(Lu,mr),N(Lu,gr),N(Lu,yr),N(Lu,xr),{19:[1,4623],21:[1,4626],22:4622,87:4621,214:4624,215:[1,4625]},{193:[1,4629],194:4627,195:[1,4628]},N(zr,Ja),N(zr,Ua),N(zr,Va),N(zr,Y),N(zr,ee),N(zr,ds),N(zr,ms),N(zr,gs),N(zr,te),N(zr,ne),N(zr,ys),N(zr,xs,{202:4630,203:4631,111:[1,4632]}),N(zr,_s),N(zr,bs),N(zr,Es),N(zr,vs),N(zr,Ss),N(zr,As),N(zr,ws),N(zr,Ts),N(zr,Os),N(Cu,mr),N(Cu,gr),N(Cu,yr),N(Cu,xr),N(vc,Ue),N(vc,Ve),N(vc,ze),N(zo,Yi),N(zo,ea),{19:Cl,21:jl,22:4634,87:4633,214:4012,215:$l},N(nu,hl),N(be,Ee,{63:4635,73:4636,75:4637,76:4638,92:4641,94:4642,87:4644,88:4645,89:4646,78:4647,39:4648,95:4652,22:4653,91:4655,118:4656,99:4660,214:4663,105:4664,107:4665,19:[1,4662],21:[1,4667],69:[1,4639],71:[1,4640],79:[1,4657],80:[1,4658],81:[1,4659],85:[1,4643],96:[1,4649],97:[1,4650],98:[1,4651],101:fp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,4654],215:[1,4666]}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4668,121:nr,148:rr,189:sr}),N(nu,jn),N(nu,ue),N(nu,ce),N(nu,Y),N(nu,ee),N(nu,le),N(nu,te),N(nu,ne),N(nu,Tn,{99:4051,95:4669,101:Rl,102:Ne,103:Ie,104:Fe}),N(Nc,On),N(Nc,lr),N(nu,dl),N(qu,as),N(Ku,os),N(Ku,us),N(Ku,cs),{100:[1,4670]},N(Ku,Gt),{100:[1,4672],106:4671,108:[1,4673],109:[1,4674],110:4675,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4676]},N(Ku,ps),{121:[1,4677]},{19:[1,4680],21:[1,4683],22:4679,87:4678,214:4681,215:[1,4682]},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4684,121:nr,148:rr,189:sr}),N(nu,jn),N(nu,ue),N(nu,ce),N(nu,Y),N(nu,ee),N(nu,le),N(nu,te),N(nu,ne),N(nu,Tn,{99:4093,95:4685,101:Dl,102:Ne,103:Ie,104:Fe}),N(Nc,On),N(Nc,lr),N(nu,dl),N(qu,as),N(Ku,os),N(Ku,us),N(Ku,cs),{100:[1,4686]},N(Ku,Gt),{100:[1,4688],106:4687,108:[1,4689],109:[1,4690],110:4691,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4692]},N(Ku,ps),{121:[1,4693]},{19:[1,4696],21:[1,4699],22:4695,87:4694,214:4697,215:[1,4698]},N(Ku,Fa),N(Ku,Lt),N(Ku,Y),N(Ku,ee),N(Ku,te),N(Ku,ne),N(Ml,Ei),{19:Z,21:K,22:4700,214:45,215:X},{19:dp,21:mp,22:4702,100:[1,4713],108:[1,4714],109:[1,4715],110:4712,181:4703,191:4701,196:4706,197:4707,198:4708,201:4711,204:[1,4716],205:[1,4717],206:[1,4722],207:[1,4723],208:[1,4724],209:[1,4725],210:[1,4718],211:[1,4719],212:[1,4720],213:[1,4721],214:4705,215:gp},N(Dc,Gu,{61:4726,53:[1,4727]}),N(Mc,Bu),N(Mc,Ju,{74:4728,76:4729,78:4730,39:4731,118:4732,79:[1,4733],80:[1,4734],81:[1,4735],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(Mc,Uu),N(Mc,va,{77:4736,73:4737,92:4738,94:4739,95:4743,99:4744,96:[1,4740],97:[1,4741],98:[1,4742],101:yp,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:4746,44:ut,79:ct,80:lt,81:pt}),N(Mc,zu),N(yl,bt,{93:4747}),N(xl,Et,{99:4431,95:4748,101:tp,102:Ne,103:Ie,104:Fe}),N(_l,St,{86:4749}),N(_l,St,{86:4750}),N(_l,St,{86:4751}),N(Mc,At,{105:4435,107:4436,91:4752,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(bl,ka),N(bl,Na),N(yl,kt),N(yl,Nt),N(yl,It),N(yl,Ft),N(_l,Lt),N(Ct,jt,{162:4753}),N(El,Rt),{119:[1,4754],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(bl,Tt),N(bl,Ot),{19:[1,4758],21:[1,4762],22:4756,33:4755,200:4757,214:4759,215:[1,4761],216:[1,4760]},{100:[1,4763]},N(yl,Gt),N(_l,Y),N(_l,ee),{100:[1,4765],106:4764,108:[1,4766],109:[1,4767],110:4768,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4769]},N(_l,te),N(_l,ne),N(Mc,Bu),N(Mc,Ju,{74:4770,76:4771,78:4772,39:4773,118:4774,79:[1,4775],80:[1,4776],81:[1,4777],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(Mc,Uu),N(Mc,va,{77:4778,73:4779,92:4780,94:4781,95:4785,99:4786,96:[1,4782],97:[1,4783],98:[1,4784],101:xp,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:4788,44:ut,79:ct,80:lt,81:pt}),N(Mc,zu),N(yl,bt,{93:4789}),N(xl,Et,{99:4464,95:4790,101:np,102:Ne,103:Ie,104:Fe}),N(_l,St,{86:4791}),N(_l,St,{86:4792}),N(_l,St,{86:4793}),N(Mc,At,{105:4468,107:4469,91:4794,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(bl,ka),N(bl,Na),N(yl,kt),N(yl,Nt),N(yl,It),N(yl,Ft),N(_l,Lt),N(Ct,jt,{162:4795}),N(El,Rt),{119:[1,4796],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(bl,Tt),N(bl,Ot),{19:[1,4800],21:[1,4804],22:4798,33:4797,200:4799,214:4801,215:[1,4803],216:[1,4802]},{100:[1,4805]},N(yl,Gt),N(_l,Y),N(_l,ee),{100:[1,4807],106:4806,108:[1,4808],109:[1,4809],110:4810,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4811]},N(_l,te),N(_l,ne),{121:[1,4812]},N(Ql,as),N(_l,lr),N(_l,pr),N(_l,hr),N(_l,fr),N(_l,dr),{111:[1,4813]},N(_l,_r),N(bl,ta),N(El,Fa),N(El,Lt),N(El,Y),N(El,ee),N(El,te),N(El,ne),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4814,121:nr,148:rr,189:sr}),N(Vs,jn),N(Vs,ue),N(Vs,ce),N(Vs,Y),N(Vs,ee),N(Vs,le),N(Vs,te),N(Vs,ne),N(Vs,Tn,{99:4170,95:4815,101:Bl,102:Ne,103:Ie,104:Fe}),N(go,On),N(go,lr),N(Vs,au),N(Ta,os),N(Ta,us),N(Ta,cs),{100:[1,4816]},N(Ta,Gt),{100:[1,4818],106:4817,108:[1,4819],109:[1,4820],110:4821,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4822]},N(Ta,ps),{121:[1,4823]},{19:[1,4826],21:[1,4829],22:4825,87:4824,214:4827,215:[1,4828]},N(Ta,Fa),N(Ta,Lt),N(Ta,Y),N(Ta,ee),N(Ta,te),N(Ta,ne),N(Ta,Fa),N(Ta,Lt),N(Ta,Y),N(Ta,ee),N(Ta,te),N(Ta,ne),N(mt,ta),{193:[1,4832],194:4830,195:[1,4831]},N(ft,Ja),N(ft,Ua),N(ft,Va),N(ft,Y),N(ft,ee),N(ft,ds),N(ft,ms),N(ft,gs),N(ft,te),N(ft,ne),N(ft,ys),N(ft,xs,{202:4833,203:4834,111:[1,4835]}),N(ft,_s),N(ft,bs),N(ft,Es),N(ft,vs),N(ft,Ss),N(ft,As),N(ft,ws),N(ft,Ts),N(ft,Os),N(za,mr),N(za,gr),N(za,yr),N(za,xr),{193:[1,4838],194:4836,195:[1,4837]},N(mt,Ja),N(mt,Ua),N(mt,Va),N(mt,Y),N(mt,ee),N(mt,ds),N(mt,ms),N(mt,gs),N(mt,te),N(mt,ne),N(mt,ys),N(mt,xs,{202:4839,203:4840,111:[1,4841]}),N(mt,_s),N(mt,bs),N(mt,Es),N(mt,vs),N(mt,Ss),N(mt,As),N(mt,ws),N(mt,Ts),N(mt,Os),N(qa,mr),N(qa,gr),N(qa,yr),N(qa,xr),{19:[1,4844],21:[1,4847],22:4843,87:4842,214:4845,215:[1,4846]},{193:[1,4850],194:4848,195:[1,4849]},N(wt,Ja),N(wt,Ua),N(wt,Va),N(wt,Y),N(wt,ee),N(wt,ds),N(wt,ms),N(wt,gs),N(wt,te),N(wt,ne),N(wt,ys),N(wt,xs,{202:4851,203:4852,111:[1,4853]}),N(wt,_s),N(wt,bs),N(wt,Es),N(wt,vs),N(wt,Ss),N(wt,As),N(wt,ws),N(wt,Ts),N(wt,Os),N(Za,mr),N(Za,gr),N(Za,yr),N(Za,xr),N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(di,Ue),N(di,Ve),N(di,ze),N(Ur,Yi),N(Ur,ea),{19:Jl,21:Ul,22:4855,87:4854,214:4266,215:Vl},N(mi,Ue),N(mi,Ve),N(mi,ze),N(Vr,Yi),N(Vr,ea),{19:zl,21:ql,22:4857,87:4856,214:4292,215:Zl},N(Zr,Fa),N(Zr,Lt),N(Zr,Y),N(Zr,ee),N(Zr,te),N(Zr,ne),N(yi,Ue),N(yi,Ve),N(yi,ze),N(zr,Yi),N(zr,ea),{19:Kl,21:Xl,22:4859,87:4858,214:4319,215:Wl},N(zo,Ya),N(zo,Lt),N(nu,Bu),N(nu,Ju,{74:4860,76:4861,78:4862,39:4863,118:4864,79:[1,4865],80:[1,4866],81:[1,4867],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(nu,Uu),N(nu,va,{77:4868,73:4869,92:4870,94:4871,95:4875,99:4876,96:[1,4872],97:[1,4873],98:[1,4874],101:_p,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:4878,44:ut,79:ct,80:lt,81:pt}),N(nu,zu),N(qu,bt,{93:4879}),N(Zu,Et,{99:4660,95:4880,101:fp,102:Ne,103:Ie,104:Fe}),N(Ku,St,{86:4881}),N(Ku,St,{86:4882}),N(Ku,St,{86:4883}),N(nu,At,{105:4664,107:4665,91:4884,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Xu,ka),N(Xu,Na),N(qu,kt),N(qu,Nt),N(qu,It),N(qu,Ft),N(Ku,Lt),N(Ct,jt,{162:4885}),N(Wu,Rt),{119:[1,4886],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Xu,Tt),N(Xu,Ot),{19:[1,4890],21:[1,4894],22:4888,33:4887,200:4889,214:4891,215:[1,4893],216:[1,4892]},{100:[1,4895]},N(qu,Gt),N(Ku,Y),N(Ku,ee),{100:[1,4897],106:4896,108:[1,4898],109:[1,4899],110:4900,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,4901]},N(Ku,te),N(Ku,ne),{121:[1,4902]},N(Nc,as),N(Ku,lr),N(Ku,pr),N(Ku,hr),N(Ku,fr),N(Ku,dr),{111:[1,4903]},N(Ku,_r),N(Xu,ta),N(Wu,Fa),N(Wu,Lt),N(Wu,Y),N(Wu,ee),N(Wu,te),N(Wu,ne),{121:[1,4904]},N(Nc,as),N(Ku,lr),N(Ku,pr),N(Ku,hr),N(Ku,fr),N(Ku,dr),{111:[1,4905]},N(Ku,_r),N(Xu,ta),N(Wu,Fa),N(Wu,Lt),N(Wu,Y),N(Wu,ee),N(Wu,te),N(Wu,ne),{193:[1,4908],194:4906,195:[1,4907]},N(Fc,Ja),N(Fc,Ua),N(Fc,Va),N(Fc,Y),N(Fc,ee),N(Fc,ds),N(Fc,ms),N(Fc,gs),N(Fc,te),N(Fc,ne),N(Fc,ys),N(Fc,xs,{202:4909,203:4910,111:[1,4911]}),N(Fc,_s),N(Fc,bs),N(Fc,Es),N(Fc,vs),N(Fc,Ss),N(Fc,As),N(Fc,ws),N(Fc,Ts),N(Fc,Os),N(bp,mr),N(bp,gr),N(bp,yr),N(bp,xr),N(Mc,wc),N(re,se,{59:4912,41:4913,44:ie}),N(Mc,Tc),N(Mc,Oc),N(Mc,ka),N(Mc,Na),{119:[1,4914],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Mc,Tt),N(Mc,Ot),{19:[1,4918],21:[1,4922],22:4916,33:4915,200:4917,214:4919,215:[1,4921],216:[1,4920]},N(Mc,kc),N(Mc,mo),N(Ql,bt,{93:4923}),N(Mc,Et,{99:4744,95:4924,101:yp,102:Ne,103:Ie,104:Fe}),N(Ql,kt),N(Ql,Nt),N(Ql,It),N(Ql,Ft),{100:[1,4925]},N(Ql,Gt),{70:[1,4926]},N(xl,Tn,{99:4431,95:4927,101:tp,102:Ne,103:Ie,104:Fe}),N(yl,On),N(Mc,kn,{90:4928,95:4929,91:4930,99:4931,105:4933,107:4934,101:Ep,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,In,{90:4928,95:4929,91:4930,99:4931,105:4933,107:4934,101:Ep,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,Fn,{90:4928,95:4929,91:4930,99:4931,105:4933,107:4934,101:Ep,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(El,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4935],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4936,121:nr,148:rr,189:sr}),N(bl,jn),N(bl,ue),N(bl,ce),N(bl,Y),N(bl,ee),N(bl,le),N(bl,te),N(bl,ne),N(yl,lr),N(El,pr),N(El,hr),N(El,fr),N(El,dr),{111:[1,4937]},N(El,_r),N(Mc,Tc),N(Mc,Oc),N(Mc,ka),N(Mc,Na),{119:[1,4938],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Mc,Tt),N(Mc,Ot),{19:[1,4942],21:[1,4946],22:4940,33:4939,200:4941,214:4943,215:[1,4945],216:[1,4944]},N(Mc,kc),N(Mc,mo),N(Ql,bt,{93:4947}),N(Mc,Et,{99:4786,95:4948,101:xp,102:Ne,103:Ie,104:Fe}),N(Ql,kt),N(Ql,Nt),N(Ql,It),N(Ql,Ft),{100:[1,4949]},N(Ql,Gt),{70:[1,4950]},N(xl,Tn,{99:4464,95:4951,101:np,102:Ne,103:Ie,104:Fe}),N(yl,On),N(Mc,kn,{90:4952,95:4953,91:4954,99:4955,105:4957,107:4958,101:vp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,In,{90:4952,95:4953,91:4954,99:4955,105:4957,107:4958,101:vp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,Fn,{90:4952,95:4953,91:4954,99:4955,105:4957,107:4958,101:vp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(El,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4959],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4960,121:nr,148:rr,189:sr}),N(bl,jn),N(bl,ue),N(bl,ce),N(bl,Y),N(bl,ee),N(bl,le),N(bl,te),N(bl,ne),N(yl,lr),N(El,pr),N(El,hr),N(El,fr),N(El,dr),{111:[1,4961]},N(El,_r),N(Mc,ta),{19:[1,4964],21:[1,4967],22:4963,87:4962,214:4965,215:[1,4966]},{121:[1,4968]},N(go,as),N(Ta,lr),N(Ta,pr),N(Ta,hr),N(Ta,fr),N(Ta,dr),{111:[1,4969]},N(Ta,_r),N(Oa,ta),N(Ia,Fa),N(Ia,Lt),N(Ia,Y),N(Ia,ee),N(Ia,te),N(Ia,ne),N(vn,Ue),N(vn,Ve),N(vn,ze),N(ft,Yi),N(ft,ea),{19:sp,21:ip,22:4971,87:4970,214:4529,215:ap},N(An,Ue),N(An,Ve),N(An,ze),N(mt,Yi),N(mt,ea),{19:op,21:up,22:4973,87:4972,214:4555,215:cp},N(vt,Fa),N(vt,Lt),N(vt,Y),N(vt,ee),N(vt,te),N(vt,ne),N(Cn,Ue),N(Cn,Ve),N(Cn,ze),N(wt,Yi),N(wt,ea),{19:lp,21:pp,22:4975,87:4974,214:4582,215:hp},N(Ur,Ya),N(Ur,Lt),N(Vr,Ya),N(Vr,Lt),N(zr,Ya),N(zr,Lt),N(nu,Tc),N(nu,Oc),N(nu,ka),N(nu,Na),{119:[1,4976],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(nu,Tt),N(nu,Ot),{19:[1,4980],21:[1,4984],22:4978,33:4977,200:4979,214:4981,215:[1,4983],216:[1,4982]},N(nu,kc),N(nu,mo),N(Nc,bt,{93:4985}),N(nu,Et,{99:4876,95:4986,101:_p,102:Ne,103:Ie,104:Fe}),N(Nc,kt),N(Nc,Nt),N(Nc,It),N(Nc,Ft),{100:[1,4987]},N(Nc,Gt),{70:[1,4988]},N(Zu,Tn,{99:4660,95:4989,101:fp,102:Ne,103:Ie,104:Fe}),N(qu,On),N(nu,kn,{90:4990,95:4991,91:4992,99:4993,105:4995,107:4996,101:Sp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,In,{90:4990,95:4991,91:4992,99:4993,105:4995,107:4996,101:Sp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(nu,Fn,{90:4990,95:4991,91:4992,99:4993,105:4995,107:4996,101:Sp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Wu,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,4997],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:4998,121:nr,148:rr,189:sr}),N(Xu,jn),N(Xu,ue),N(Xu,ce),N(Xu,Y),N(Xu,ee),N(Xu,le),N(Xu,te),N(Xu,ne),N(qu,lr),N(Wu,pr),N(Wu,hr),N(Wu,fr),N(Wu,dr),{111:[1,4999]},N(Wu,_r),N(nu,ta),{19:[1,5002],21:[1,5005],22:5001,87:5e3,214:5003,215:[1,5004]},N(nu,ta),{19:[1,5008],21:[1,5011],22:5007,87:5006,214:5009,215:[1,5010]},N(Ml,Ue),N(Ml,Ve),N(Ml,ze),N(Fc,Yi),N(Fc,ea),{19:dp,21:mp,22:5013,87:5012,214:4705,215:gp},N(Mc,hl),N(be,Ee,{63:5014,73:5015,75:5016,76:5017,92:5020,94:5021,87:5023,88:5024,89:5025,78:5026,39:5027,95:5031,22:5032,91:5034,118:5035,99:5039,214:5042,105:5043,107:5044,19:[1,5041],21:[1,5046],69:[1,5018],71:[1,5019],79:[1,5036],80:[1,5037],81:[1,5038],85:[1,5022],96:[1,5028],97:[1,5029],98:[1,5030],101:Ap,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De,161:[1,5033],215:[1,5045]}),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:5047,121:nr,148:rr,189:sr}),N(Mc,jn),N(Mc,ue),N(Mc,ce),N(Mc,Y),N(Mc,ee),N(Mc,le),N(Mc,te),N(Mc,ne),N(Mc,Tn,{99:4744,95:5048,101:yp,102:Ne,103:Ie,104:Fe}),N(Ql,On),N(Ql,lr),N(Mc,dl),N(yl,as),N(_l,os),N(_l,us),N(_l,cs),{100:[1,5049]},N(_l,Gt),{100:[1,5051],106:5050,108:[1,5052],109:[1,5053],110:5054,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,5055]},N(_l,ps),{121:[1,5056]},{19:[1,5059],21:[1,5062],22:5058,87:5057,214:5060,215:[1,5061]},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:5063,121:nr,148:rr,189:sr}),N(Mc,jn),N(Mc,ue),N(Mc,ce),N(Mc,Y),N(Mc,ee),N(Mc,le),N(Mc,te),N(Mc,ne),N(Mc,Tn,{99:4786,95:5064,101:xp,102:Ne,103:Ie,104:Fe}),N(Ql,On),N(Ql,lr),N(Mc,dl),N(yl,as),N(_l,os),N(_l,us),N(_l,cs),{100:[1,5065]},N(_l,Gt),{100:[1,5067],106:5066,108:[1,5068],109:[1,5069],110:5070,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,5071]},N(_l,ps),{121:[1,5072]},{19:[1,5075],21:[1,5078],22:5074,87:5073,214:5076,215:[1,5077]},N(_l,Fa),N(_l,Lt),N(_l,Y),N(_l,ee),N(_l,te),N(_l,ne),N(Vs,ta),{19:[1,5081],21:[1,5084],22:5080,87:5079,214:5082,215:[1,5083]},N(ft,Ya),N(ft,Lt),N(mt,Ya),N(mt,Lt),N(wt,Ya),N(wt,Lt),N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:5085,121:nr,148:rr,189:sr}),N(nu,jn),N(nu,ue),N(nu,ce),N(nu,Y),N(nu,ee),N(nu,le),N(nu,te),N(nu,ne),N(nu,Tn,{99:4876,95:5086,101:_p,102:Ne,103:Ie,104:Fe}),N(Nc,On),N(Nc,lr),N(nu,dl),N(qu,as),N(Ku,os),N(Ku,us),N(Ku,cs),{100:[1,5087]},N(Ku,Gt),{100:[1,5089],106:5088,108:[1,5090],109:[1,5091],110:5092,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,5093]},N(Ku,ps),{121:[1,5094]},{19:[1,5097],21:[1,5100],22:5096,87:5095,214:5098,215:[1,5099]},N(Ku,Fa),N(Ku,Lt),N(Ku,Y),N(Ku,ee),N(Ku,te),N(Ku,ne),N(Ku,Fa),N(Ku,Lt),N(Ku,Y),N(Ku,ee),N(Ku,te),N(Ku,ne),N(Fc,Ya),N(Fc,Lt),N(Mc,Bu),N(Mc,Ju,{74:5101,76:5102,78:5103,39:5104,118:5105,79:[1,5106],80:[1,5107],81:[1,5108],119:Ee,125:Ee,127:Ee,189:Ee,227:Ee}),N(Mc,Uu),N(Mc,va,{77:5109,73:5110,92:5111,94:5112,95:5116,99:5117,96:[1,5113],97:[1,5114],98:[1,5115],101:wp,102:Ne,103:Ie,104:Fe}),N(Ge,se,{41:169,39:171,38:5119,44:ut,79:ct,80:lt,81:pt}),N(Mc,zu),N(yl,bt,{93:5120}),N(xl,Et,{99:5039,95:5121,101:Ap,102:Ne,103:Ie,104:Fe}),N(_l,St,{86:5122}),N(_l,St,{86:5123}),N(_l,St,{86:5124}),N(Mc,At,{105:5043,107:5044,91:5125,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(bl,ka),N(bl,Na),N(yl,kt),N(yl,Nt),N(yl,It),N(yl,Ft),N(_l,Lt),N(Ct,jt,{162:5126}),N(El,Rt),{119:[1,5127],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(bl,Tt),N(bl,Ot),{19:[1,5131],21:[1,5135],22:5129,33:5128,200:5130,214:5132,215:[1,5134],216:[1,5133]},{100:[1,5136]},N(yl,Gt),N(_l,Y),N(_l,ee),{100:[1,5138],106:5137,108:[1,5139],109:[1,5140],110:5141,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,5142]},N(_l,te),N(_l,ne),{121:[1,5143]},N(Ql,as),N(_l,lr),N(_l,pr),N(_l,hr),N(_l,fr),N(_l,dr),{111:[1,5144]},N(_l,_r),N(bl,ta),N(El,Fa),N(El,Lt),N(El,Y),N(El,ee),N(El,te),N(El,ne),{121:[1,5145]},N(Ql,as),N(_l,lr),N(_l,pr),N(_l,hr),N(_l,fr),N(_l,dr),{111:[1,5146]},N(_l,_r),N(bl,ta),N(El,Fa),N(El,Lt),N(El,Y),N(El,ee),N(El,te),N(El,ne),N(Ta,Fa),N(Ta,Lt),N(Ta,Y),N(Ta,ee),N(Ta,te),N(Ta,ne),{121:[1,5147]},N(Nc,as),N(Ku,lr),N(Ku,pr),N(Ku,hr),N(Ku,fr),N(Ku,dr),{111:[1,5148]},N(Ku,_r),N(Xu,ta),N(Wu,Fa),N(Wu,Lt),N(Wu,Y),N(Wu,ee),N(Wu,te),N(Wu,ne),N(Mc,Tc),N(Mc,Oc),N(Mc,ka),N(Mc,Na),{119:[1,5149],122:194,123:195,124:196,125:Dt,127:Mt,189:Pt,217:198,227:Qt},N(Mc,Tt),N(Mc,Ot),{19:[1,5153],21:[1,5157],22:5151,33:5150,200:5152,214:5154,215:[1,5156],216:[1,5155]},N(Mc,kc),N(Mc,mo),N(Ql,bt,{93:5158}),N(Mc,Et,{99:5117,95:5159,101:wp,102:Ne,103:Ie,104:Fe}),N(Ql,kt),N(Ql,Nt),N(Ql,It),N(Ql,Ft),{100:[1,5160]},N(Ql,Gt),{70:[1,5161]},N(xl,Tn,{99:5039,95:5162,101:Ap,102:Ne,103:Ie,104:Fe}),N(yl,On),N(Mc,kn,{90:5163,95:5164,91:5165,99:5166,105:5168,107:5169,101:Tp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,In,{90:5163,95:5164,91:5165,99:5166,105:5168,107:5169,101:Tp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(Mc,Fn,{90:5163,95:5164,91:5165,99:5166,105:5168,107:5169,101:Tp,102:Ne,103:Ie,104:Fe,112:Le,113:Ce,114:je,115:$e,116:Re,117:De}),N(El,Ln),{19:$n,21:Rn,22:384,71:Dn,81:Mn,100:Pn,108:Qn,109:Gn,110:396,163:[1,5170],164:379,165:380,166:381,167:382,181:385,185:Bn,196:390,197:391,198:392,201:395,204:Jn,205:Un,206:Vn,207:zn,208:qn,209:Zn,210:Kn,211:Xn,212:Wn,213:Hn,214:389,215:Yn},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:5171,121:nr,148:rr,189:sr}),N(bl,jn),N(bl,ue),N(bl,ce),N(bl,Y),N(bl,ee),N(bl,le),N(bl,te),N(bl,ne),N(yl,lr),N(El,pr),N(El,hr),N(El,fr),N(El,dr),{111:[1,5172]},N(El,_r),N(Mc,ta),{19:[1,5175],21:[1,5178],22:5174,87:5173,214:5176,215:[1,5177]},N(Mc,ta),{19:[1,5181],21:[1,5184],22:5180,87:5179,214:5182,215:[1,5183]},N(nu,ta),{19:[1,5187],21:[1,5190],22:5186,87:5185,214:5188,215:[1,5189]},N(er,tr,{126:411,130:412,131:413,132:414,136:415,137:416,138:417,144:418,146:419,147:420,120:5191,121:nr,148:rr,189:sr}),N(Mc,jn),N(Mc,ue),N(Mc,ce),N(Mc,Y),N(Mc,ee),N(Mc,le),N(Mc,te),N(Mc,ne),N(Mc,Tn,{99:5117,95:5192,101:wp,102:Ne,103:Ie,104:Fe}),N(Ql,On),N(Ql,lr),N(Mc,dl),N(yl,as),N(_l,os),N(_l,us),N(_l,cs),{100:[1,5193]},N(_l,Gt),{100:[1,5195],106:5194,108:[1,5196],109:[1,5197],110:5198,206:Bt,207:Jt,208:Ut,209:Vt},{100:[1,5199]},N(_l,ps),{121:[1,5200]},{19:[1,5203],21:[1,5206],22:5202,87:5201,214:5204,215:[1,5205]},N(_l,Fa),N(_l,Lt),N(_l,Y),N(_l,ee),N(_l,te),N(_l,ne),N(_l,Fa),N(_l,Lt),N(_l,Y),N(_l,ee),N(_l,te),N(_l,ne),N(Ku,Fa),N(Ku,Lt),N(Ku,Y),N(Ku,ee),N(Ku,te),N(Ku,ne),{121:[1,5207]},N(Ql,as),N(_l,lr),N(_l,pr),N(_l,hr),N(_l,fr),N(_l,dr),{111:[1,5208]},N(_l,_r),N(bl,ta),N(El,Fa),N(El,Lt),N(El,Y),N(El,ee),N(El,te),N(El,ne),N(Mc,ta),{19:[1,5211],21:[1,5214],22:5210,87:5209,214:5212,215:[1,5213]},N(_l,Fa),N(_l,Lt),N(_l,Y),N(_l,ee),N(_l,te),N(_l,ne)],this.defaultActions={6:[2,11],24:[2,1],115:[2,120],116:[2,121],117:[2,122],124:[2,133],125:[2,134],208:[2,253],209:[2,254],210:[2,255],211:[2,256],343:[2,36],411:[2,143],412:[2,147],414:[2,149],604:[2,34],605:[2,38],642:[2,35],1164:[2,147],1166:[2,149]}}performAction(e,t,n,s,a,m,b){const k=m.length-1;switch(a){case 1:let e=Object.keys(s._imports).length?{imports:s._imports}:{};const t=s.start?{start:s.start}:{},n=s.startActs?{startActs:s.startActs}:{};let a=s.shapes?{shapes:Object.values(s.shapes)}:{};const b=Object.assign({type:"Schema"},e,n,t,a);return s.options.index&&(null!==s._base&&(b._base=s._base),b._prefixes=s._prefixes,b._index={shapeExprs:s.shapes||{},tripleExprs:s.productions||{}},b._sourceMap=s._sourceMap),b;case 2:s.parser.yy={lexer:s.lexer};break;case 15:s._setBase(null===s._base||f.test(m[k].slice(1,-1))?m[k].slice(1,-1):s._resolveIRI(m[k].slice(1,-1)));break;case 16:s._prefixes[m[k-1].slice(0,-1)]=m[k];break;case 17:s._imports.push(m[k]);break;case 20:s.start&&s.error(new Error("Parse error: start already defined")),s.start=T("ShapeOr",m[k-1],m[k]);break;case 21:s.startActs=m[k];break;case 22:case 43:case 46:case 145:case 152:case 163:case 190:case 192:case 194:this.$=[m[k]];break;case 23:case 30:case 97:case 146:case 153:case 164:case 185:case 191:case 193:case 195:case 201:case 210:case 218:case 229:this.$=g(m[k-1],m[k]);break;case 26:s.addShape(m[k-2],Object.assign({type:"ShapeDecl"},m[k-3],m[k-1].length>0?{restricts:m[k-1]}:{},{shapeExpr:m[k]}));break;case 27:case 103:case 109:case 173:this.$={};break;case 28:this.$={abstract:!0};break;case 29:case 96:case 48:case 52:case 55:case 59:case 270:case 274:case 184:case 200:case 209:case 217:case 228:this.$=[];break;case 31:this.$=O(m[k]);break;case 33:this.$={type:"ShapeExternal"};break;case 34:m[k-2]&&(m[k-1]={type:"ShapeNot",shapeExpr:O(m[k-1])}),m[k]?(m[k].needsAtom.unshift(O(m[k-1])),delete m[k].needsAtom,this.$=m[k]):this.$=m[k-1];break;case 35:m[k-1]={type:"ShapeNot",shapeExpr:O(m[k-1])},m[k]?(m[k].needsAtom.unshift(O(m[k-1])),delete m[k].needsAtom,this.$=m[k]):this.$=m[k-1];break;case 36:m[k].needsAtom.unshift(O(m[k-1])),delete m[k].needsAtom,this.$=m[k];break;case 37:case 232:case 249:this.$=null;break;case 38:case 42:case 45:case 51:case 58:case 189:case 248:case 269:case 273:case 144:case 151:case 161:case 162:case 202:case 211:case 219:case 266:case 284:this.$=m[k];break;case 40:const N=m[k].map(O);this.$={type:"ShapeOr",shapeExprs:N,needsAtom:N};break;case 41:m[k-1].filter((e=>"ShapeAnd"===e.type)).length,m[k-1].length;const I={type:"ShapeAnd",shapeExprs:m[k-1].reduce(((e,t)=>e.concat("ShapeAnd"!==t.type||t.nested?O(t):t.shapeExprs)),[])};this.$=m[k].length>0?{type:"ShapeOr",shapeExprs:[I].concat(m[k].map(O))}:I,this.$.needsAtom=I.shapeExprs;break;case 44:case 47:case 49:case 53:case 56:case 60:case 271:case 275:this.$=m[k-1].concat(m[k]);break;case 50:case 268:this.$=T("ShapeOr",m[k-1],m[k]);break;case 54:case 57:case 272:this.$=T("ShapeAnd",m[k-1],m[k]);break;case 61:case 64:case 276:this.$=m[k-1]?{type:"ShapeNot",shapeExpr:O(m[k])}:m[k];break;case 62:this.$=!1;break;case 63:this.$=!0;break;case 65:case 74:case 79:case 277:case 279:case 81:this.$=m[k]?{type:"ShapeAnd",shapeExprs:[y({type:"NodeConstraint"},m[k-1]),m[k]]}:m[k-1];break;case 67:case 76:this.$=m[k]?T("ShapeAnd",m[k-1],[m[k]]):m[k-1];break;case 68:case 77:case 82:case 280:this.$=Object.assign(m[k-1],{nested:!0});break;case 69:case 78:case 83:case 281:this.$=s.EmptyShape;break;case 92:m[k]=m[k].substr(1,m[k].length-1);const F=m[k].indexOf(":");this.$=s.addSourceMap(s.expandPrefix(m[k].substr(0,F),s)+m[k].substr(F+1));break;case 93:m[k]=m[k].substr(1,m[k].length-1),this.$=s.addSourceMap(s.expandPrefix(m[k].substr(0,m[k].length-1),s));break;case 94:case 167:case 223:this.$=s.addSourceMap(m[k]);break;case 95:case 98:this.$=m[k-2],m[k-1].length&&(this.$.annotations=m[k-1]),m[k]&&(this.$.semActs=m[k].semActs);break;case 99:this.$=y({type:"NodeConstraint",nodeKind:"literal"},m[k]);break;case 100:-1===h.indexOf(m[k-1])&&d.forEach((function(e){e in m[k]&&s.error(new Error("Parse error: facet "+e+" not allowed for unknown datatype "+m[k-1]))})),this.$=y({type:"NodeConstraint",datatype:m[k-1]},m[k]);break;case 101:this.$={type:"NodeConstraint",values:m[k-1]};break;case 102:case 108:this.$=y({type:"NodeConstraint"},m[k]);break;case 104:case 106:case 112:case 110:-1!==Object.keys(m[k-1]).indexOf(Object.keys(m[k])[0])&&s.error(new Error("Parse error: facet "+Object.keys(m[k])[0]+" defined multiple times")),this.$=y(m[k-1],m[k]);break;case 107:this.$=y({type:"NodeConstraint"},m[k-1],m[k]?m[k]:{});break;case 113:this.$={nodeKind:"iri"};break;case 114:this.$={nodeKind:"bnode"};break;case 115:this.$={nodeKind:"nonliteral"};break;case 118:case 124:this.$=w(m[k-1],parseInt(m[k],10));break;case 119:this.$=function(e){const t=e.lastIndexOf("/");let n=e.substr(1,t-1);n=r.unescapeText(n,{".":"\\.","\\":"\\\\","?":"\\?","*":"\\*","+":"\\+","{":"\\{","}":"\\}","(":"\\(",")":"\\)","|":"\\|","^":"\\^",$:"\\$","[":"\\[","]":"\\]","/":"\\/",t:"\\t",n:"\\n",r:"\\r","-":"\\-","/":"/"});const s={pattern:n};return e.length>t+1&&(s.flags=e.substr(t+1)),s}(m[k]);break;case 120:this.$="length";break;case 121:this.$="minlength";break;case 122:this.$="maxlength";break;case 123:this.$=w(m[k-1],m[k]);break;case 125:this.$=parseInt(m[k],10);break;case 126:case 127:this.$=parseFloat(m[k]);break;case 128:m[k]===u||m[k]===c||m[k]===l?this.$=parseFloat(m[k-2].value):-1!==h.indexOf(m[k])?this.$=parseInt(m[k-2].value):s.error(new Error("Parse error: numeric range facet expected numeric datatype instead of "+m[k]));break;case 129:this.$="mininclusive";break;case 130:this.$="minexclusive";break;case 131:this.$="maxinclusive";break;case 132:this.$="maxexclusive";break;case 133:this.$="totaldigits";break;case 134:this.$="fractiondigits";break;case 135:this.$=m[k-2]===s.EmptyShape?{type:"Shape"}:m[k-2],m[k-1].length&&(this.$.annotations=m[k-1]),m[k]&&(this.$.semActs=m[k].semActs);break;case 136:const L=m[k-1]?{expression:m[k-1]}:s.EmptyObject;this.$=L===s.EmptyObject&&m[k-3]===s.EmptyObject?s.EmptyShape:y({type:"Shape"},L,m[k-3]);break;case 137:this.$=["extends",[m[k]]];break;case 138:this.$=["extra",m[k]];break;case 139:this.$=["closed",!0];break;case 140:this.$=s.EmptyObject;break;case 141:m[k-1]===s.EmptyObject&&(m[k-1]={}),"closed"===m[k][0]?m[k-1].closed=!0:m[k][0]in m[k-1]?m[k-1][m[k][0]]=x(m[k-1][m[k][0]],m[k][1]):m[k-1][m[k][0]]=m[k][1],this.$=m[k-1];break;case 150:this.$={type:"OneOf",expressions:x([m[k-1]],m[k])};break;case 156:case 183:this.$=m[k-1];break;case 160:this.$={type:"EachOf",expressions:x([m[k-2]],m[k-1])};break;case 165:m[k-1]?(this.$=y({id:m[k-1]},m[k]),s.addProduction(m[k-1],this.$)):this.$=m[k];break;case 172:this.$=m[k-4],"min"in m[k-2]&&(this.$.min=m[k-2].min),"max"in m[k-2]&&(this.$.max=m[k-2].max),m[k-1].length&&(this.$.annotations=m[k-1]),m[k]&&(this.$.semActs="semActs"in m[k-4]?m[k-4].semActs.concat(m[k].semActs):m[k].semActs);break;case 175:m[k-3],s.EmptyShape,0,this.$=y({type:"TripleConstraint"},m[k-5],{predicate:m[k-4]},m[k-3]===s.EmptyShape?{}:{valueExpr:m[k-3]},m[k-2],m[k]),m[k-1].length&&(this.$.annotations=m[k-1]);break;case 178:this.$={min:0,max:-1};break;case 179:this.$={min:1,max:-1};break;case 180:this.$={min:0,max:1};break;case 181:m[k]=m[k].substr(1,m[k].length-2);const C=m[k].match(/(\d+)/g);this.$={min:parseInt(C[0],10)},2===C.length?this.$.max=parseInt(C[1],10):-1===m[k].indexOf(",")?this.$.max=parseInt(C[0],10):this.$.max=-1;break;case 182:this.$={inverse:!0};break;case 196:this.$={type:"IriStemRange",stem:{type:"Wildcard"},exclusions:m[k]};break;case 197:this.$={type:"LiteralStemRange",stem:{type:"Wildcard"},exclusions:m[k]};break;case 198:this.$={type:"LanguageStemRange",stem:{type:"Wildcard"},exclusions:m[k]};break;case 199:m[k]?(this.$={type:m[k].length?"IriStemRange":"IriStem",stem:m[k-1]},m[k].length&&(this.$.exclusions=m[k])):this.$=m[k-1];break;case 205:this.$=m[k]?{type:"IriStem",stem:m[k-1]}:m[k-1];break;case 208:m[k]?(this.$={type:m[k].length?"LiteralStemRange":"LiteralStem",stem:m[k-1].value},m[k].length&&(this.$.exclusions=m[k])):this.$=m[k-1];break;case 214:this.$=m[k]?{type:"LiteralStem",stem:m[k-1].value}:m[k-1].value;break;case 215:m[k]?(this.$={type:m[k].length?"LanguageStemRange":"LanguageStem",stem:m[k-1]},m[k].length&&(this.$.exclusions=m[k])):this.$={type:"Language",languageTag:m[k-1]};break;case 216:this.$={type:m[k].length?"LanguageStemRange":"LanguageStem",stem:""},m[k].length&&(this.$.exclusions=m[k]);break;case 222:this.$=m[k]?{type:"LanguageStem",stem:m[k-1]}:m[k-1];break;case 224:this.$={type:"Annotation",predicate:m[k-1],object:m[k]};break;case 227:this.$=m[k].length?{semActs:m[k]}:null;break;case 230:this.$=m[k]?function(e,t){return t=t.substring(1,t.length-2),{type:"SemAct",name:e,code:r.unescapeText(t,E)}}(m[k-1],m[k]):{type:"SemAct",name:m[k-1]};break;case 237:this.$=i;break;case 243:this.$=_(m[k],o);break;case 244:this.$=_(m[k],u);break;case 245:this.$=_(m[k],l);break;case 247:this.$=m[k]?y(m[k-1],{type:m[k]}):m[k-1];break;case 251:this.$={value:"true",type:p};break;case 252:this.$={value:"false",type:p};break;case 253:case 255:this.$=S(m[k],1);break;case 254:case 256:this.$=S(m[k],3);break;case 257:case 259:this.$=A(m[k],1);break;case 258:case 260:this.$=A(m[k],3);break;case 261:const j=r.unescapeText(m[k].slice(1,-1),{});this.$=null===s._base||f.test(j)?j:s._resolveIRI(j);break;case 263:const $=m[k].indexOf(":");this.$=s.expandPrefix(m[k].substr(0,$),s)+r.unescapeText(m[k].substr($+1),v);break;case 264:this.$=s.expandPrefix(m[k].substr(0,m[k].length-1),s)}}};const{JisonLexer:Op}=n(2752);class kp extends Op{constructor(e={}){super(e),this.options={moduleName:"ShExJison"},this.rules=[/^(?:\s+|(#[^\u000a\u000d]*|\/\*([^*]|\*([^/]|\\\/))*\*\/))/,/^(?:(@(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*)))/,/^(?:(\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\*)?))?\}))/,/^(?:(([+-])?((([0-9])+\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\u0000-\u0020<>\"{}|^`\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:))/,/^(?:a\b)/,/^(?:(\/([^\u002f\u005C\u000A\u000D]|\\[nrt\\|.?*+(){}$\u002D\u005B\u005D\u005E/]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|[0-9])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?))/,/^(?:(\{([^%\\]|\\[%\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\}))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Aa][Bb][Ss][Tt][Rr][Aa][Cc][Tt]))/,/^(?:([Rr][Ee][Ss][Tt][Rr][Ii][Cc][Tt][Ss]))/,/^(?:([Ee][Xx][Tt][Ee][Nn][Dd][Ss]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\/\/)/,/^(?:\{)/,/^(?:\})/,/^(?:&)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:\$)/,/^(?:!)/,/^(?:\^\^)/,/^(?:\^)/,/^(?:\.)/,/^(?:~)/,/^(?:;)/,/^(?:\*)/,/^(?:\+)/,/^(?:\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],this.conditions={INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],inclusive:!0}}}performAction(e,t,n,r){switch(n){case 0:break;case 1:return 79;case 2:return 80;case 3:return t.yytext=t.yytext.substr(1),185;case 4:return 81;case 5:return 215;case 6:return 159;case 7:return 109;case 8:return 108;case 9:return 100;case 10:return"ANON";case 11:return 19;case 12:return 21;case 13:return 199;case 14:return 101;case 15:return 216;case 16:return 195;case 17:return 211;case 18:return 213;case 19:return 210;case 20:return 212;case 21:return 207;case 22:return 209;case 23:return 206;case 24:return 208;case 25:return 18;case 26:return 20;case 27:return 23;case 28:return 26;case 29:return 40;case 30:return 36;case 31:return 229;case 32:return 227;case 33:return 125;case 34:return 127;case 35:return 85;case 36:return 97;case 37:return 96;case 38:return 98;case 39:return 53;case 40:return 51;case 41:return 44;case 42:return 112;case 43:return 113;case 44:return 114;case 45:return 115;case 46:return 102;case 47:return 103;case 48:return 104;case 49:return 116;case 50:return 117;case 51:return 27;case 52:return 190;case 53:return 119;case 54:return 121;case 55:return 189;case 56:return"||";case 57:return 135;case 58:return 140;case 59:return 69;case 60:return 70;case 61:return 161;case 62:return 163;case 63:return 148;case 64:return"!";case 65:return 111;case 66:return 160;case 67:return 71;case 68:return 178;case 69:return 141;case 70:return 156;case 71:return 157;case 72:return 158;case 73:return 179;case 74:return 193;case 75:return 204;case 76:return 205;case 77:return 7;case 78:return'unexpected word "'+t.yytext+'"';case 79:return"invalid character "+t.yytext}}}},931:(e,t,n)=>{const r=function(){const e=n(9509).Fm,t=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,r=/(?:^|\/)\.\.?(?:$|[\/#?])/;class s{constructor(){this.blankId=0,this._fileName=void 0,this.EmptyObject={},this.EmptyShape={type:"Shape"}}reset(){this._prefixes=this._imports=this._sourceMap=this.shapes=this.productions=this.start=this.startActs=null,this._base=this._baseIRI=this._baseIRIPath=this._baseIRIRoot=null}_setFileName(e){this._fileName=e}blank(){return"_:b"+this.blankId++}_resetBlanks(e){this.blankId=void 0===e?0:e}_setBase(e){e||(e=null),(this._base=e)&&(this._basePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(t),this._baseRoot=e[0],this._baseScheme=e[1])}_resolveIRI(e){switch(e[0]){case void 0:return this._base;case"#":return this._base+e;case"?":return this._base.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?this._baseScheme:this._baseRoot)+this._removeDotSegments(e);default:return this._removeDotSegments(this._basePath+e)}}_removeDotSegments(e){if(!r.test(e))return e;const t=e.length;let n="",s=-1,i=-1,a="/",o=0;for(;s<t;){switch(a){case":":if(i<0&&"/"===e[++s]&&"/"===e[++s])for(;(i=s+1)<t&&"/"!==e[i];)s=i;break;case"?":case"#":s=t;break;case"/":if("."===e[s+1])switch(a=e[1+ ++s],a){case"/":n+=e.substring(o,s-1),o=s+1;break;case void 0:case"?":case"#":return n+e.substring(o,s)+e.substr(s+1);case".":if(a=e[1+ ++s],void 0===a||"/"===a||"?"===a||"#"===a){if(n+=e.substring(o,s-2),(o=n.lastIndexOf("/"))>=i&&(n=n.substr(0,o)),"/"!==a)return n+"/"+e.substr(s+1);o=s+1}}}a=e[++s]}return n+e.substring(o)}error(e){const t={text:this.lexer.match,line:this.lexer.yylineno,loc:this.lexer.yylloc,pos:this.lexer.showPosition()};if(e.hash=t,!this.recoverable)throw e;this.recoverable(e)}expandPrefix(e){return e in this._prefixes||this.error(new Error('Parse error; unknown prefix "'+e+':"')),this._prefixes[e]}addShape(e,t){t===this.EmptyShape&&(t={type:"Shape"}),this.productions&&e in this.productions&&this.error(new Error("Structural error: "+e+" is a triple expression")),this.shapes||(this.shapes={}),e in this.shapes?"replace"===this.options.duplicateShape?this.shapes[e]=t:"ignore"!==this.options.duplicateShape&&this.error(new Error("Parse error: "+e+" already defined")):this.shapes[e]=Object.assign({id:e},t)}addProduction(e,t){this.shapes&&e in this.shapes&&this.error(new Error("Structural error: "+e+" is a shape expression")),this.productions||(this.productions={}),e in this.productions?"replace"===this.options.duplicateShape?this.productions[e]=t:"ignore"!==this.options.duplicateShape&&this.error(new Error("Parse error: "+e+" already defined")):this.productions[e]=t}addSourceMap(e){this._sourceMap||(this._sourceMap=new Map);let t=this._sourceMap.get(e);return t||this._sourceMap.set(e,t=[]),t.push(this.lexer.yylloc),e}}return{construct:function(t,n,r){r=r||{};const i={};for(const e in n||{})i[e]=n[e];const a=new e(s),o=a.parse;return a.parse=function(e,n=t,u=r,c=null){const l=globalThis.PS=new s;l._prefixes=Object.create(i),l._imports=[],l._setBase(n),l._setFileName(t),l.options=r;let p=[];l.recoverable=e=>p.push(e);let h=null;try{h=o.call(a,e,l)}catch(e){p.push(e)}if("meta"in u&&(u.meta.base=l._base,u.meta.prefixes=l._prefixes),l.reset(),p.forEach((e=>{if("hash"in e){const t=e.hash,n=t.loc;delete t.loc,Object.assign(e,t,{location:n})}return e})),1==p.length)throw p[0].parsed=h,p[0];if(p.length){const e=new Error(p.length+" parser errors:\n"+p.map((e=>function(e,n){const r=e.location.first_line,s=e.location.first_column+1,i="pos"in e.hash?"\n"+e.hash.pos:"";return`${t}\n line: ${r}, column: ${s}: ${e.message}${i}`}(e,a.yy.lexer))).join("\n"));throw e.errors=p,e.parsed=h,e}return h},a._setBase=function(e){t=e},a}}}();e.exports=r},1101:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rdfJsTerm2Ld=t.ld2RdfJsTerm=t.shExJsTerm2Turtle=t.rdfJsTerm2Turtle=t.Terminals=t.XsdString=t.RdfLangString=void 0;const r=n(4436).relativize,s=new(n(1194).DataFactory);t.RdfLangString="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",t.XsdString="http://www.w3.org/2001/XMLSchema#string";const i="A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�",a=i+"_",o=a+"0-9·̀-ͯ‿-⁀",u=[i,o+".-",o+"-"],c=[a+":0-9",o+".:-",o+":-"];t.Terminals={Turtle:{PN_CHARS_BASE:i,PN_CHARS_U:a,PN_CHARS_WO_HYPHEN:o,PN_PREFIX:u,PN_LOCAL:c}},t.rdfJsTerm2Turtle=function(e,n){switch(e.termType){case"NamedNode":return d(e.value,n);case"BlankNode":return"_:"+e.value;case"Literal":return'"'+e.value.replace(/"/g,'\\"')+'"'+(e.datatype.value===t.RdfLangString?"@"+e.language:e.datatype.value===t.XsdString?"":"^^"+e.datatype.value);default:throw Error(`rdfJsTerm2Turtle: unknown RDFJS node type: ${JSON.stringify(e)}`)}},t.shExJsTerm2Turtle=function(e,t={base:"",prefixes:{}},n){if("string"==typeof e)return e.startsWith("_:")?e:d(e,t,n);if("Literal"===e.termType){let n=e.value;const r=e.datatype.value,s=e.language;return l.test(n)&&(n=n.replace(p,f)),s?'"'+n+'"@'+s:r&&"http://www.w3.org/2001/XMLSchema#string"!==r?'"'+n+'"^^'+d(r,t,!1):'"'+n+'"'}throw Error("Unknown internal term type: "+JSON.stringify(e))};const l=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,p=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,h={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};function f(e){let t=h[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function d(e,n={base:"",prefixes:{}},s=!0){const{base:i,prefixes:a={}}=n;if(s&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"===e)return"a";const o="<"+(i.length>0?r(e,i):e)+">";for(const n in a){const r=a[n];if(e.startsWith(r)){const s=e.substr(r.length),i=n+":"+s.slice(0,1).replaceAll(new RegExp("[^"+t.Terminals.Turtle.PN_LOCAL[0]+"]","g"),(e=>"\\"+e))+s.slice(1,s.length-1).replaceAll(new RegExp("[^"+t.Terminals.Turtle.PN_LOCAL[1]+"]","g"),(e=>"\\"+e))+(s.length>1?s.slice(s.length-1).replaceAll(new RegExp("[^"+t.Terminals.Turtle.PN_LOCAL[2]+"]","g"),(e=>"\\"+e)):"");if(i.length<o.length)return i}}return o}t.ld2RdfJsTerm=function(e){switch(typeof e){case"object":const t=JSON.parse(JSON.stringify(e));if(!t.value)throw Error(`JSON-LD-style object literal has no value: ${JSON.stringify(e)}`);const n=t.value;if(delete t.value,t.language)return s.literal(n,t.language);if(t.type)return s.literal(n,s.namedNode(t.type));if(Object.keys(t).length>0)throw Error(`Unrecognized attributes inn JSON-LD-style object literal: ${JSON.stringify(Object.keys(t))}`);return s.literal(n);case"string":return e.startsWith("_:")?s.blankNode(e.substr(2)):s.namedNode(e);default:throw Error(`Unrecognized JSON-LD-style term: ${JSON.stringify(e)}`)}},t.rdfJsTerm2Ld=function(e){switch(e.termType){case"NamedNode":return e.value;case"BlankNode":return"_:"+e.value;case"Literal":const t={value:e.value},n=e.datatype.value,r=e.language;return n&&"http://www.w3.org/2001/XMLSchema#string"!==n&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==n&&(t.type=n),r&&(t.language=r),t;default:throw Error(`Unrecognized termType ${e.termType} ${e.value}`)}}},7625:(t,n,r)=>{const s=function(){r(1101);const t={_namespace:"http://www.w3.org/2001/XMLSchema#"};return["anyURI","string"].forEach((e=>{t[e]=t._namespace+e})),class{write(t){const r=this;if(Array.isArray(t))return t.reduce(((e,t)=>{const n=r.write(t).map((e=>"  "+e));return e.length?e.concat(["AND"]).concat(n):n}),[]);if("string"==typeof t)return[t];switch(t.type){case"FailureList":return t.errors.reduce(((e,t)=>e.concat(r.write(t))),[]);case"Failure":return["validating "+t.node+" as "+t.shape+":"].concat(function e(t){return t.reduce((function(t,n){const r=Object.keys(n);return t.concat(1===r.length&&"errors"===r[0]?e(n.errors):n)}),[])}(t.errors).reduce(((e,t)=>{const n=r.write(t).map((e=>"  "+e));return e.length>0?e.concat(["  OR"]).concat(n):n.map((e=>"  "+e))}),[]));case"TypeMismatch":{const s=Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:r.write(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:r.write(t.errors));return["validating "+n(t.triple.object)+":"].concat(s)}case"RestrictionError":{const s=t.errors.constructor===Array?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:r.write(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:r.write(t.errors));return["validating restrictions on "+n(t.focus)+":"].concat(s)}case"ShapeAndFailure":return Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:r.write(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:r.write(t.errors));case"ShapeOrFailure":return Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(" OR "+("string"==typeof t?[t]:r.write(t)))),[]):" OR "+("string"==typeof e?[t.errors]:r.write(t.errors));case"ShapeNotFailure":return["Node "+t.errors.node+" expected to NOT pass "+t.errors.shape];case"ExcessTripleViolation":return["validating "+n(t.triple.object)+": exceeds cardinality"];case"ClosedShapeViolation":return["Unexpected triple(s): {"].concat(t.unexpectedTriples.map((e=>"  "+e.subject+" "+e.predicate+" "+n(e.object)+" ."))).concat(["}"]);case"NodeConstraintViolation":return["NodeConstraintError: expected to "+this.nodeConstraintToSimple(t.shapeExpr).join(", ")];case"MissingProperty":return["Missing property: "+t.property];case"NegatedProperty":return["Unexpected property: "+t.property];case"AbstractShapeFailure":return["Abstract Shape: "+t.shape];case"SemActFailure":{const n=Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:r.write(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:r.write(t.errors));return["rejected by semantic action:"].concat(n)}case"SemActViolation":return[t.message];default:throw Error('unknown shapeExpression type "'+t.type+'" in '+JSON.stringify(t))}}nodeConstraintToSimple(e){const t=[];return"nodeKind"in e&&t.push(`be a ${e.nodeKind.toUpperCase()}`),"datatype"in e&&t.push(`have datatype ${e.datatype}`),"length"in e&&t.push(`have length ${e.length}`),"minlength"in e&&t.push(`have length at least ${e.length}`),"maxlength"in e&&t.push(`have length at most ${e.length}`),"pattern"in e&&t.push(`match regex /${e.pattern}/${e.flags?e.flags:""}`),"mininclusive"in e&&t.push(`have value at least ${e.mininclusive}`),"minexclusive"in e&&t.push(`have value more than ${e.minexclusive}`),"maxinclusive"in e&&t.push(`have value at most ${e.maxinclusive}`),"maxexclusive"in e&&t.push(`have value less than ${e.maxexclusive}`),"totaldigits"in e&&t.push(`have have ${e.totaldigits} digits`),"fractiondigits"in e&&t.push(`have have ${e.fractiondigits} digits after the decimal`),"values"in e&&t.push(`have a value in [${function(e,t,n){if(e.length<=t)return e;--t;for(;t>0&&e[t].match(n);)--t;return e.slice(0,t)+"…"}(this.valuesToSimple(e.values).join(", "),80,/[, ]^>/)}]`),t}valuesToSimple(e){return e.map((e=>{if("string"==typeof e)return`<${e}>`;if("value"in e)return this.objectLiteralToSimple(e);if("Language"===e.type)return`literal with langauge tag ${e.languageTag}`;const[t,n,r]=e.type.match(/^(Iri|Literal|Language)Stem(Range)?$/);let s=n.toLowerCase();return"object"!=typeof e.stem&&(s+=` starting with ${e.stem}`),"exclusions"in e&&(s+=` excluding ${e.exclusions.map((e=>"string"==typeof e?e:"anything starting with "+e.stem)).join(" or ")}`),s}))}objectLiteralToSimple(e){return`"${e}`+("type"in e&&e.type!==t.string?`^^<${e.type}>`:"")+("language"in e?`@${e.language}`:"")}};function n(e){if("object"!=typeof e)return e;const t='"'+e.value+'"';return"language"in e?t+"@"+e.language:"type"in e?t+"^^"+e.type:t}}();t.exports=s},9443:(e,t,n)=>{const r=function(){const e=n(1101),{Visitor:t,index:r}=n(8806),s=n(2515),i=n(7625),a={_namespace:"http://www.w3.org/ns/shex#"};["Schema","@context","imports","startActs","start","shapes","ShapeDecl","ShapeOr","ShapeAnd","shapeExprs","nodeKind","NodeConstraint","iri","bnode","nonliteral","literal","datatype","length","minlength","maxlength","pattern","flags","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits","values","ShapeNot","shapeExpr","Shape","abstract","closed","extra","expression","extends","restricts","semActs","ShapeRef","reference","ShapeExternal","EachOf","OneOf","expressions","min","max","annotation","TripleConstraint","inverse","negated","predicate","valueExpr","Inclusion","include","Language","languageTag","IriStem","LiteralStem","LanguageStem","stem","IriStemRange","LiteralStemRange","LanguageStemRange","exclusion","Wildcard","SemAct","name","code","Annotation","object"].forEach((e=>{a[e]=a._namespace+e}));const o={_namespace:"http://www.w3.org/1999/02/22-rdf-syntax-ns#"};["type","first","rest","nil"].forEach((e=>{o[e]=o._namespace+e}));const u={_namespace:"http://www.w3.org/2002/07/owl#"};["Thing"].forEach((e=>{u[e]=u._namespace+e}));const c={},l=-1;function p(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}const h={SX:a,RDF:o,version:function(){return"0.5.0"},Visitor:t,index:r,getAST:function(e){return{type:"AST",shapes:e.shapes.reduce((function(n,r){return n[r.id]={type:"ASTshape",expression:t(r.shapeExpr.expression,[],e)},n}),{})};function t(e,t,n){function r(){this.type="Epsilon"}function s(e,t,n,r,s){this.type="TripleConstraint",this.inverse=!!n,this.negated=!!r,this.predicate=t,void 0!==s&&(this.valueExpr=s)}function i(e){this.type="Choice",this.disjuncts=e}function a(e){this.type="EachOf",this.conjuncts=e}function o(e,t){this.type="SemActs",this.expression=e,this.semActs=t}function u(e){this.type="KleeneStar",this.expression=e}return e?function e(n,c){let p,h;function f(e,t,n){if(void 0===t&&(t=1),void 0===n&&(n=1),1===t&&1===n)return e;const s=n===l?new u(e):Array.from(Array(n-t)).reduce((function(t,n,s){return new i(0===s?[e,new r]:[new a([e,t]),new r])}),void 0);return 0!==t?new a(Array.from(Array(t)).map((function(t){return e})).concat(s)):s}if("string"==typeof n){return e(c._index.tripleExprs[n].expression,c)}if("TripleConstraint"===n.type){const e="valueExprRef"in n?c.valueExprDefns[n.valueExprRef]:n.valueExpr;return p=f(new s(t.push(n)-1,n.predicate,n.inverse,n.negated,e),n.min,n.max),n.semActs?new o(p,n.semActs):p}if("OneOf"===n.type)return h=new i(n.expressions.map((function(t){return e(t,c)}))),p=f(h,n.min,n.max),n.semActs?new o(p,n.semActs):p;if("EachOf"===n.type)return h=new a(n.expressions.map((function(t){return e(t,c)}))),p=f(h,n.min,n.max),n.semActs?new o(p,n.semActs):p;throw Error("unexpected expr type: "+n.type)}(e,n):new r}},ShExJtoAS:function(e){return e._prefixes=e._prefixes||{},e._index=this.index(e),e},AStoShExJ:function(e,t){return e["@context"]=e["@context"]||"http://www.w3.org/ns/shex.jsonld",delete e._index,delete e._prefixes,e},ShExRVisitor:function(e){const t=h.Visitor(),n={},r=t.visitShapeExpr,s=(t.visitValueExpr,t.visitTripleExpr);return t.keepShapeExpr=r,t.visitShapeExpr=function(t,...n){if("string"==typeof t)return t;if("id"in t){if(e.has(t.id)||1===Object.keys(t).length){const n=e.get(t.id);return"object"==typeof t.expression&&(n||e.set(t.id,r.call(this,t,label))),t.id}delete t.id}return r.call(this,t,...n)},t.visitTripleExpr=function(e,...t){if("string"==typeof e)return e;if("id"in e&&e.id in n)return n[e.id].refCount++,e.id;const r=s.call(this,e,...t);return n[e.id]={refCount:1,expr:r},r},t.cleanIds=function(){for(let e in n){const t=n[e];1===t.refCount&&t.expr.id.startsWith("_:")&&delete t.expr.id}},t},ShExRtoShExJ:function(e){const t=new Map;"shapes"in e&&e.shapes.forEach((e=>t.set(e.id,null)));const n=this.ShExRVisitor(t);return"start"in e&&(e.start=n.visitShapeExpr(e.start)),"shapes"in e&&(e.shapes=e.shapes.map((e=>n.visitShapeDecl(e)))),n.cleanIds(),e},valGrep:function(e,t,n){const r=this,s=[];for(let i in e){const a=e[i];"object"==typeof a&&("type"in a&&a.type===t&&s.push(n(a)),s.push.apply(s,r.valGrep(a,t,n)))}return s},valToN3js:function(e,t){return this.valGrep(e,"TestedTriple",(function(e){const t=JSON.parse(JSON.stringify(e));return"object"==typeof e.object&&(t.object='"'+e.object.value+'"'+("type"in e.object?"^^"+e.object.type:"language"in e.object?"@"+e.object.language:"")),t}))},canonicalize:function(e,t){const n=JSON.parse(JSON.stringify(e));n["@context"]=n["@context"]||"http://www.w3.org/ns/shex.jsonld",delete n._prefixes,delete n._base;let r=n._index||this.index(e);delete n._index;n._sourceMap;delete n._sourceMap;const s=h.Visitor(),i=[],a=s.visitInclusion,o=s.visitTripleExpr;s.visitExtra;return s.visitInclusion=function(e){return-1===i.indexOf(e)&&e in r.tripleExprs?(i.push(e),o.call(s,r.tripleExprs[e])):a.call(s,e)},s.visitTripleExpr=function(e){return"object"==typeof e&&"id"in e?-1===i.indexOf(e.id)?(i.push(e.id),o.call(s,r.tripleExprs[e.id])):e.id:o.call(s,e)},s.visitExtra=function(e){return e.slice().sort()},t&&(s.visitIRI=function(e){return e.replace(t,"")},"imports"in n&&(n.imports=s.visitImports(n.imports))),"shapes"in n&&(n.shapes=Object.keys(r.shapeExprs).map((e=>("extra"in r.shapeExprs[e]&&r.shapeExprs[e].extra.sort(),s.visitShapeDecl(r.shapeExprs[e]))))),n},BiDiClosure:function(){return{needs:{},neededBy:{},inCycle:[],test:function(){function e(e,t){const n=JSON.stringify(e),r=JSON.stringify(t);if(n!==r)throw Error(n+" !== "+r)}this.add(2,3),e(this.needs,{2:[3]}),e(this.neededBy,{3:[2]}),this.add(1,2),e(this.needs,{1:[2,3],2:[3]}),e(this.neededBy,{3:[2,1],2:[1]}),this.add(1,3),e(this.needs,{1:[2,3],2:[3]}),e(this.neededBy,{3:[2,1],2:[1]}),this.add(3,4),e(this.needs,{1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{3:[2,1],2:[1],4:[3,2,1]}),this.add(6,7),e(this.needs,{6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6],3:[2,1],2:[1],4:[3,2,1]}),this.add(5,6),e(this.needs,{5:[6,7],6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],3:[2,1],2:[1],4:[3,2,1]}),this.add(5,7),e(this.needs,{5:[6,7],6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],3:[2,1],2:[1],4:[3,2,1]}),this.add(7,8),e(this.needs,{5:[6,7,8],6:[7,8],7:[8],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],8:[7,6,5],3:[2,1],2:[1],4:[3,2,1]}),this.add(4,5),e(this.needs,{1:[2,3,4,5,6,7,8],2:[3,4,5,6,7,8],3:[4,5,6,7,8],4:[5,6,7,8],5:[6,7,8],6:[7,8],7:[8]}),e(this.neededBy,{2:[1],3:[2,1],4:[3,2,1],5:[4,3,2,1],6:[5,4,3,2,1],7:[6,5,4,3,2,1],8:[7,6,5,4,3,2,1]})},add:function(e,t,n){const r=this;e in r.needs||(r.needs[e]=[]),t in r.neededBy||(r.neededBy[t]=[]),r.needs[e]=r.needs[e].concat([t],r.needs[t]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t})),r.neededBy[t]=r.neededBy[t].concat([e],r.neededBy[e]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t})),e in this.neededBy&&this.neededBy[e].forEach((function(e){r.needs[e]=r.needs[e].concat([t],r.needs[t]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t}))})),t in this.needs&&this.needs[t].forEach((function(t){r.neededBy[t]=r.neededBy[t].concat([e],r.neededBy[e]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t}))})),-1!==r.needs[e].indexOf(e)&&(r.inCycle=r.inCycle.concat(r.needs[e]))},trim:function(){function e(e){for(let t=e.length-1;t>-1;--t)e.indexOf(e[t])<t&&e.splice(t,t+1)}for(k in this.needs)e(this.needs[k]);for(k in this.neededBy)e(this.neededBy[k])},foundIn:{},addIn:function(e,t){this.foundIn[e]=t}}},nestShapes:function(e,t={}){const n=this,r=e._index||this.index(e);"no"in t||(t.no=!1);let s=Object.keys(r.shapeExprs||[]),i={};s.forEach((e=>{const t=r.shapeExprs[e].shapeExpr;if(o(e,null),"Shape"===t.type)"extends"in t&&t.extends.forEach((e=>o(e,t))),"expression"in t&&(n.simpleTripleConstraints(t)||[]).forEach((t=>{o(n.getValueType(t.valueExpr,!0),{type:"tc",shapeLabel:e,tc:t})}));else if("NodeConstraint"!==t.type)throw Error("nestShapes currently only supports Shapes and NodeConstraints")}));let a=Object.keys(i).filter((e=>1===i[e].length&&"tc"===i[e][0].type&&e in r.shapeExprs&&"Shape"===r.shapeExprs[e].shapeExpr.type&&!r.shapeExprs[e].abstract)).filter((e=>!("noNestPattern"in t)||!e.match(RegExp(t.noNestPattern)))).reduce(((e,t)=>(e[t]={referrer:i[t][0].shapeLabel,predicate:i[t][0].tc.predicate},e)),{});if(!t.no){let n={};if(t.rename){"transform"in t||(t.transform=function(){let e=s.reduce(((e,t,n)=>(e[t]="_:renamed"+n,e)),{});return function(t,n){return e[t]}}()),Object.keys(a).forEach((e=>{let o=r.shapeExprs[e],u=t.transform(e,o);if(n[e]=o.id=u,s[s.indexOf(e)]=u,a[u]=a[e],a[u].was=e,delete a[e],r.shapeExprs[u]=r.shapeExprs[e],delete r.shapeExprs[e],1!==i[e].length)throw Error("assertion: "+e+" doesn't have one reference: ["+i[e]+"]");let c=i[e][0];if("tc"!==c.type)throw"Shape"===c.type?Error("assertion: rename not implemented for Shape: "+c):Error("assertion: "+c.type+" not TripleConstraint or Shape");if("string"!=typeof c.tc.valueExpr)throw Error("assertion: rename not implemented for TripleConstraint expr: "+c.tc.valueExpr);c.tc.valueExpr=u})),Object.keys(a).forEach((e=>{let t=a[e];t.referrer in n&&(t.newReferrer=n[t.referrer])}));let e={};s.forEach((t=>e[t]=r.shapeExprs[t])),r.shapeExprs=e}else{const t=[],n=e.shapes.map((e=>e.id));Object.keys(a).forEach((s=>{const a=r.shapeExprs[s].shapeExpr;i[s][0].tc.valueExpr=a;const o=n.indexOf(s);if(e.shapes[o].id!==s)throw Error("assertion: found "+e.shapes[o].id+" instead of "+s);t.push(o),delete r.shapeExprs[s]})),t.sort(((e,t)=>t-e)).forEach((t=>{const n=e.shapes[t].id;if(!a[n])throw Error("deleting unexpected shape "+n);delete e.shapes[t].id,e.shapes.splice(t,1)}))}}return a;function o(e,t){e in i||(i[e]=[]),t&&i[e].push(t)}},getPredicateUsage:function(e,t={}){const n=this;let r=s.create();Object.keys(e.shapes).forEach((t=>{let n=e.shapes[t].shapeExpr;"Shape"===n.type&&(n.extends||[]).forEach((e=>r.add(e.reference,t)))})),Object.keys(e.shapes).forEach((e=>{e in r.parents||(r.parents[e]=[])}));let i={};return Object.keys(e.shapes).forEach((s=>{let a=e.shapes[s].shapeExpr;if("Shape"===a.type){(n.simpleTripleConstraints(a)||[]).forEach((e=>{let a=n.getValueType(e.valueExpr);if(e.predicate in i){i[e.predicate].uses.push(s);let n=i[e.predicate].commonType;if("object"==typeof n||null===n)t[e.predicate].references.push({shapeLabel:s,newType:a});else if("object"==typeof a)i[e.predicate].commonType=null,t[e.predicate]={shapeLabel:s,predicate:e.predicate,curType:n,newType:a,references:[]};else if(n===a);else if(r.parents[n]&&-1!==r.parents[n].indexOf(a))i[e.predicate].polymorphic=!0;else{let o=r.parents[a]?r.parents[a].indexOf(n):-1;if(-1===o){let o=r.parents[n]?r.parents[n].filter((e=>-1!==r.parents[a].indexOf(e))):[];0===o.length?(t[e.predicate]={shapeLabel:s,predicate:e.predicate,curType:n,newType:a,references:[]},i[e.predicate].commonType=null):(i[e.predicate].commonType=o[0],i[e.predicate].polymorphic=!0)}else i[e.predicate].commonType=r.parents[a][o],i[e.predicate].polymorphic=!0}}else i[e.predicate]={uses:[s],commonType:a,polymorphic:!1},"object"==typeof a&&(t[e.predicate]={shapeLabel:s,predicate:e.predicate,newType:a,references:[]})}))}})),i},simpleTripleConstraints:function(e){if(!("expression"in e))return[];if("TripleConstraint"===e.expression.type)return[e.expression];if("EachOf"===e.expression.type&&!e.expression.expressions.find((e=>"TripleConstraint"!==e.type)))return e.expression.expressions;throw Error("can't (yet) express "+JSON.stringify(e))},getValueType:function(e){return"string"==typeof e?e:e.reference?e.reference:"iri"===e.nodeKind?u.Thing:e.datatype?e.datatype:e},getDependencies:function(e,t){return t=t||this.BiDiClosure(),(e.shapes||[]).forEach((function(e){function n(r,s){if("string"==typeof r)t.add(e.id,r);else if("ShapeOr"===r.type||"ShapeAnd"===r.type)r.shapeExprs.forEach((function(e){n(e,s)}));else if("ShapeNot"===r.type)n(r.shapeExpr,1^s);else if("Shape"===r.type)!function(r,s){function i(r,s){function a(e,t){e.forEach((function(e){i(e,t)}))}function o(r,s){if(r.valueExpr&&n(r.valueExpr,s),s&&-1!==t.inCycle.indexOf(e.id))throw Error("Structural error: "+e.id+" appears in negated cycle")}if("string"==typeof r)t.add(e.id,r);else if("id"in r&&t.addIn(r.id,e.id),"TripleConstraint"===r.type)o(r,s);else{if("OneOf"!==r.type&&"EachOf"!==r.type)throw Error("expected {TripleConstraint,OneOf,EachOf,Inclusion} in "+r);a(r.expressions)}}["extends","restricts"].forEach((n=>{r[n]&&r[n].length>0&&r[n].forEach((function(n){t.add(e.id,n)}))})),r.expression&&i(r.expression,s)}(r,s);else if("NodeConstraint"===r.type);else if("ShapeExternal"!==r.type)throw Error("expected Shape{And,Or,Ref,External} or NodeConstraint in "+JSON.stringify(r))}n(e.shapeExpr,0)})),t},partition:function(e,t,n,r){const s=e._index||this.index(e),i={shapeExprs:new Map,tripleExprs:new Map};t=t instanceof Array?t:[t],n=n||this.getDependencies(e),r=r||function(e,t){throw new Error("Error: can't find shape "+(t?t+" dependency "+e:e))};const a={};for(let t in e)a[t]="shapes"===t?[]:e[t];return t.forEach((function(e){if(e in i.shapeExprs);else if(e in s.shapeExprs){const t=s.shapeExprs[e];a.shapes.push(t),i.shapeExprs[t.id]=t,e in n.needs&&n.needs[e].forEach((function(t){if(t in n.foundIn&&(t=n.foundIn[t]),t in i.shapeExprs);else if(t in s.shapeExprs){const e=s.shapeExprs[t];a.shapes.push(e),i.shapeExprs[e.id]=e}else r(t,e)}))}else r(e,"supplied")})),a},flatten:function(e,t,n){return this.Visitor().visitSchema(e)},emptySchema:function(){return{type:"Schema"}},merge:function(e,t,n="throw",r){const s="left"===n?()=>!1:"right"===n?()=>!0:"function"==typeof n?n:(e,t,n)=>{throw Error(`${e} ${JSON.stringify(n,null,2)} collides with ${JSON.stringify(t,null,2)}`)},i=r?e:this.emptySchema();var a;"_base"in e&&(i._base=e._base),"_base"in t&&("_base"in e||(i._base=t._base)),a="_prefixes",Object.keys(e[a]||{}).forEach((function(t){a in i||(i[a]={}),i[a][t]=e[a][t]})),Object.keys(t[a]||{}).forEach((function(n){a in e&&n in e[a]&&!s(a,i[a][n],t[a][n])||(a in i||(i[a]={}),i[a][n]=t[a][n])})),function(n){(e[n]||new Map).forEach((function(t,r,s){n in i||(i[n]=new Map),i[n].set(r,e[n].get(r))})),(t[n]||new Map).forEach((function(r,a,o){n in e&&e[n].has(a)&&!s(n,i[n].get(a),t[n].get(a))||(n in i||(i[n]=new Map),i[n].set(a,t[n].get(a)))}))}("_sourceMap"),"imports"in t&&("imports"in e?[].push.apply(i.imports,t.imports.filter((e=>-1===i.imports.indexOf(e)))):i.imports=t.imports),"startActs"in e&&(i.startActs=e.startActs),"startActs"in t&&("startActs"in e&&!s("startActs",i.startActs,t.startActs)||(i.startActs=t.startActs)),"start"in e&&(i.start=e.start),"start"in t&&("start"in e&&!s("start",i.start,t.start)||(i.start=t.start));const o=e._index||this.index(e);return r||(e.shapes||[]).forEach((function(e){"shapes"in i||(i.shapes=[]),i.shapes.push(e)})),(t.shapes||[]).forEach((function(e){if("shapes"in i){const t=o.shapeExprs[e.id];t?s("shapeDecl",t,e)&&(i.shapes.splice(i.shapes.indexOf(t),1),o.shapeExprs[e.id]=e,i.shapes.push(e)):i.shapes.push(e)}else i.shapes=[],i.shapes.push(e),o.shapeExprs[e.id]=e})),(e._index||t._index)&&(i._index=this.index(i)),i},absolutizeResults:function(e,t){function n(e,n){-1===["shape","reference","node","subject","predicate","object"].indexOf(e)||"string"!=typeof n[e]||n[e].startsWith("_:")||(n[e]=new URL(n[e],t).href)}return function e(t){Object.keys(t).forEach((function(r){"object"==typeof t[r]&&e(t[r]),n&&n(r,t)}))}(e),e},getProofGraph:function(t,n,r){return function t(s){if("NodeConstraintTest"===s.type);else if("SolutionList"===s.type||"ShapeAndResults"===s.type||"ExtensionResults"===s.type)s.solutions.forEach((e=>{e.solution&&t(e.solution)}));else if("ShapeOrResults"===s.type)t(s.solution);else if("ShapeTest"===s.type)"solution"in s&&t(s.solution);else if("OneOfSolutions"===s.type||"EachOfSolutions"===s.type)s.solutions.forEach((e=>{t(e)}));else if("OneOfSolution"===s.type||"EachOfSolution"===s.type)s.expressions.forEach((e=>{t(e)}));else if("TripleConstraintSolutions"===s.type)s.solutions.map((s=>{if("TestedTriple"!==s.type)throw Error("unexpected result type: "+s.type);const i=e.ld2RdfJsTerm(s.subject),a=e.ld2RdfJsTerm(s.predicate),o=e.ld2RdfJsTerm(s.object),u="graph"in s?e.ld2RdfJsTerm(s.graph):r.defaultGraph();n.addQuad(r.quad(i,a,o,u)),"referenced"in s&&t(s.referenced)}));else if("ExtendedResults"===s.type)t(s.extensions),"local"in s&&t(s.local);else if(-1===["ShapeNotResults","Recursion"].indexOf(s.type))throw Error("unexpected expr type "+s.type+" in "+JSON.stringify(s))}(t),n},validateSchema:function(e){const t=this.Visitor();let n=currentExtra=null,r=!1,i=!1;const a=t.visitShape,o=s.create(),u=s.create();let c=e.index||this.index(e);t.visitShape=function(e,...n){const r=currentExtra;currentExtra=e.extra;const s=a.call(t,e,...n);return currentExtra=r,s};const l=t.visitShapeNot;t.visitShapeNot=function(e,...n){const s=r;r^=!0;const i=l.call(t,e,...n);return r=s,i};const p=t.visitTripleConstraint;t.visitTripleConstraint=function(e,...n){const s=r;currentExtra&&-1!==currentExtra.indexOf(e.predicate)&&(r^=!0),i=!0;const a=p.call(t,e,...n);return i=!1,r=s,a};const h=t.visitShapeRef;t.visitShapeRef=function(e,...s){if(!(e in c.shapeExprs))throw g(Error("Structural error: reference to "+JSON.stringify(e)+" not found in schema shape expressions:\n"+m(c.shapeExprs)+"."),e);if(!i&&e===n)throw g(Error("Structural error: circular reference to "+n+"."),e);return(r?o:u).add(n,e),h.call(t,e,...s)};const f=t.visitInclusion;t.visitInclusion=function(e,...n){let r;if(!(r=c.tripleExprs[e]))throw g(Error("Structural error: included shape "+e+" not found in schema triple expressions:\n"+m(c.tripleExprs)+"."),e);return f.call(t,e,...n)},(e.shapes||[]).forEach((function(e){n=e.id,t.visitShapeDecl(e,e.id)}));let d=Object.keys(o.children).filter((e=>o.children[e].filter((t=>t in o.children&&-1!==o.children[t].indexOf(e)||t in u.children&&-1!==u.children[t].indexOf(e))).length>0));if(d.length)throw g(Error("Structural error: circular negative dependencies on "+d.join(",")+"."),d[0]);function m(e){return e?Object.keys(e).map((e=>"_:"===e.substr(0,2)?e:"<"+e+">")).join("\n        "):"- none defined -"}function g(t,n){return"_sourceMap"in e&&(t.location=(e._sourceMap.get(n)||[void 0])[0]),t}},isWellDefined:function(e){return this.validateSchema(e),e},walkVal:function(e,t){const n=this;if("string"==typeof e)return null;switch(e.type){case"SolutionList":return e.solutions.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});case"NodeConstraintTest":case"ShapeNotTest":case"ShapeNot":return n.walkVal(e.shapeExpr,t);case"NodeConstraint":case"Shape":case"ShapeNotResults":case"Failure":case"Recursion":return null;case"ShapeTest":const s=[];r(e,s);const i=s.length?{"http://shex.io/reflex":s}:{};return"solution"in e&&Object.assign(i,n.walkVal(e.solution,t)),Object.keys(i).length?i:null;case"ShapeOrResults":return n.walkVal(e.solution,t);case"ShapeOr":return e.shapeExprs.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});case"ShapeAndResults":case"ExtensionResults":return e.solutions.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});case"ShapeAnd":return e.shapeExprs.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});case"ExtendedResults":return["extensions","local"].reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});case"EachOfSolutions":case"OneOfSolutions":return e.solutions.reduce(((e,r)=>(r.expressions.forEach((r=>{const s=n.walkVal(r,t);s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]}))})),e)),{});case"TripleConstraintSolutions":if("solutions"in e){const t={},n=[];return t[e.predicate]=n,e.solutions.forEach((e=>r(e,n))),n.length?t:null}return null;default:throw Error("unknown shapeExpression type in "+JSON.stringify(e))}return e;function r(e,r){const s=[];if(function e(s){if(!s)return!1;if(s.node===o.nil)return!0;if("solution"in s&&"solutions"in s.solution&&1===s.solution.solutions.length&&"expressions"in s.solution.solutions[0]&&2===s.solution.solutions[0].expressions.length&&"predicate"in s.solution.solutions[0].expressions[0]&&s.solution.solutions[0].expressions[0].predicate===o.first&&s.solution.solutions[0].expressions[1].predicate===o.rest){const i=s.solution.solutions[0].expressions,a=i[0],u=i[1].solutions[0],c=a.solutions[0];let l=t(c);if("referenced"in c){const e=n.walkVal(c.referenced,t);e&&(l?l.nested=e:l=e)}return l&&r.push(l),u.object===o.nil||e("ShapeOrResults"===u.referenced.type?u.referenced.solution:u.referenced)}}(e.referenced))[].push.apply(r,s);else{const s=t(e)||{};if("referenced"in e){const r=n.walkVal(e.referenced,t);r&&(s.nested=r)}Object.keys(s).length>0&&r.push(s)}}},valToValues:function(e){return this.walkVal(e,(function(e){return"object"in e?{ldterm:e.object}:null}))},valToExtension:function(e,t){return function e(n){const r=[];let s={};function i(e){if(null===s)return e;if(Array.isArray(e))return s=null,e;for(k in e){if(k in s)return s=null,e;s[k]=e[k]}return e}for(let s in n)if("extensions"===s)n[s]&&r.push(i(n[s][t]));else if("nested"===s){const t=e(n[s]);Array.isArray(t)?t.forEach(i):i(t),r.push(t)}else r.push(i(e(n[s])));return 1===r.length?r[0]:s||r}(this.walkVal(e,(function(e){return"extensions"in e?{extensions:e.extensions}:null})))},valuesToSchema:function(e){const t=e;if(e[o.type][0].ldterm===a.Schema){const n={"@context":"http://www.w3.org/ns/shex.jsonld",type:"Schema"};a.startActs in t&&(n.startActs=t[a.startActs].map((e=>{const t={type:"SemAct",name:e.nested[a.name][0].ldterm};return a.code in e.nested&&(t.code=e.nested[a.code][0].ldterm.value),t}))),a.imports in t&&(n.imports=t[a.imports].map((e=>e.ldterm))),e[a.start]&&(n.start=p({id:e[a.start][0].ldterm},r(e[a.start][0].nested)));const s=e[a.shapes];return s&&(n.shapes=s.map((e=>{e.nested[o.type][0].ldterm;const t=r(e.nested);return p({id:e.ldterm},t)}))),n}throw Error("unknown schema type in "+JSON.stringify(e));function n(e,t,n){const r=e[o.type][0].ldterm.substr(a._namespace.length),s=t[r];if(!s)return c;if(s.nary){const t={type:r};return t[s.prop]=e[a[s.prop]].map((e=>i(e))),t}{const t={type:r};return s.prop&&(t[s.prop]=i(e[a[s.prop]][0])),t}function i(e){return s.expr&&"nested"in e?p({id:e.ldterm},n(e.nested)):e.ldterm}}function r(e){let t=n(e,{ShapeAnd:{nary:!0,expr:!0,prop:"shapeExprs"},ShapeOr:{nary:!0,expr:!0,prop:"shapeExprs"},ShapeNot:{nary:!1,expr:!0,prop:"shapeExpr"},ShapeRef:{nary:!1,expr:!1,prop:"reference"},ShapeExternal:{nary:!1,expr:!1,prop:null}},r);if(t!==c)return t;const u=e[o.type][0].ldterm;if(u===a.ShapeDecl){const t={type:"ShapeDecl"};return["abstract"].forEach((n=>{a[n]in e&&(t[n]=!!e[a[n]][0].ldterm.value)})),a.shapeExpr in e&&(t.shapeExpr="nested"in e[a.shapeExpr][0]?p({id:e[a.shapeExpr][0].ldterm},r(e[a.shapeExpr][0].nested)):e[a.shapeExpr][0].ldterm),t}if(u===a.Shape)return t={type:"Shape"},["closed"].forEach((n=>{a[n]in e&&(t[n]=!!e[a[n]][0].ldterm.value)})),["extra","extends","restricts"].forEach((n=>{a[n]in e&&(t[n]=e[a[n]].map((e=>e.ldterm)))})),a.expression in e&&(t.expression="nested"in e[a.expression][0]?p({id:e[a.expression][0].ldterm},i(e[a.expression][0].nested)):e[a.expression][0].ldterm),a.annotation in e&&(t.annotations=e[a.annotation].map((e=>({type:"Annotation",predicate:e.nested[a.predicate][0].ldterm,object:e.nested[a.object][0].ldterm})))),a.semActs in e&&(t.semActs=e[a.semActs].map((e=>{const t={type:"SemAct",name:e.nested[a.name][0].ldterm};return a.code in e.nested&&(t.code=e.nested[a.code][0].ldterm.value),t}))),t;if(u===a.NodeConstraint){const t={type:"NodeConstraint"};return a.values in e&&(t.values=e[a.values].map((e=>s(e)))),a.nodeKind in e&&(t.nodeKind=e[a.nodeKind][0].ldterm.substr(a._namespace.length)),["length","minlength","maxlength","mininclusive","maxinclusive","minexclusive","maxexclusive","totaldigits","fractiondigits"].forEach((n=>{a[n]in e&&(t[n]=parseFloat(e[a[n]][0].ldterm.value))})),a.pattern in e&&(t.pattern=e[a.pattern][0].ldterm.value),a.flags in e&&(t.flags=e[a.flags][0].ldterm.value),a.datatype in e&&(t.datatype=e[a.datatype][0].ldterm),t}throw Error("unknown shapeDeclOrExpr type in "+JSON.stringify(e))}function s(e,t){if("nested"in e){const t=e.nested[o.type][0].ldterm;if(-1!==[a.IriStem,a.LiteralStem,a.LanguageStem].indexOf(t)){const n=e.nested[a.stem][0].ldterm.value;return{type:t.substr(a._namespace.length),stem:n}}if(-1!==[a.Language].indexOf(t))return{type:"Language",languageTag:e.nested[a.languageTag][0].ldterm.value};if(-1!==[a.IriStemRange,a.LiteralStemRange,a.LanguageStemRange].indexOf(t)){const n=e.nested[a.stem][0];let r=n;"object"==typeof n&&("object"==typeof n.ldterm?r=n.ldterm:n.ldterm.startsWith("_:")&&(r={type:"Wildcard"}));const i={type:t.substr(a._namespace.length),stem:"Wildcard"!==r.type?r.value:r};return a.exclusion in e.nested&&(i.exclusions=e.nested[a.exclusion].map((e=>s(e,t!==a.IriStemRange)))),i}throw Error("unknown objectValue type in "+JSON.stringify(e))}return t?e.ldterm.value:e.ldterm}function i(e){const t=n(e,{EachOf:{nary:!0,expr:!0,prop:"expressions"},OneOf:{nary:!0,expr:!0,prop:"expressions"},Inclusion:{nary:!1,expr:!1,prop:"include"}},i);if(t!==c)return u(e,t),t;if(e[o.type][0].ldterm===a.TripleConstraint){const t={type:"TripleConstraint",predicate:e[a.predicate][0].ldterm};return["inverse"].forEach((n=>{a[n]in e&&(t[n]=!!e[a[n]][0].ldterm.value)})),a.valueExpr in e&&(t.valueExpr=p({id:e[a.valueExpr][0].ldterm},"nested"in e[a.valueExpr][0]?r(e[a.valueExpr][0].nested):{})),u(e,t),t}throw Error("unknown tripleExpr type in "+JSON.stringify(e))}function u(e,t){return a.min in e&&(t.min=parseInt(e[a.min][0].ldterm.value)),a.max in e&&(t.max=parseInt(e[a.max][0].ldterm.value),isNaN(t.max)&&(t.max=l)),a.annotation in e&&(t.annotations=e[a.annotation].map((e=>({type:"Annotation",predicate:e.nested[a.predicate][0].ldterm,object:e.nested[a.object][0].ldterm})))),a.semActs in e&&(t.semActs=e[a.semActs].map((e=>{const t={type:"SemAct",name:e.nested[a.name][0].ldterm};return a.code in e.nested&&(t.code=e.nested[a.code][0].ldterm.value),t}))),t}},simpleToShapeMap:function(e){return Object.keys(e).reduce(((t,n)=>(e[n].forEach((e=>{t.push({node:n,shape:e})})),t)),[])},absolutizeShapeMap:function(e,t){return e.map((e=>Object.assign(e,{node:new URL(e.node,t).href,shape:new URL(e.shape,t).href})))},errsToSimple:function(e){return(new i).write(e)},resolvePrefixedIRI:function(e,t){const n=e.indexOf(":");if(-1===n)return null;const r=t[e.substr(0,n)];return void 0===r?null:r+e.substr(n+1)},parsePassedNode:function(e,t,n,r,s){if(void 0===e||0===e.length)return r&&r(t.base)?t.base:n?n():this.NotSupplied;if("_"===e[0]&&":"===e[1])return e;if('"'===e[0]){const n=e.match(/^"((?:[^"\\]|\\")*)"(?:@(.+)|\^\^(?:<(.*)>|([^:]*):(.*)))?$/);if(!n)throw Error("malformed literal: "+e);const r=n[1],s=n[2],i=n[3],a=n[4],o=n[5],u='"'+r+'"';if(void 0!==s)return u+"@"+s;if(void 0!==a){if(!(a in t.prefixes))throw Error("error parsing node "+e+' no prefix for "'+a+'"');return u+"^^"+t.prefixes[a]+o}return void 0!==i?u+"^^"+new URL(i,t.base).href:u}if(!t)return r(e)?e:this.UnknownIRI;const i="<"===e[0]&&">"===e[e.length-1];i&&(e=e.substr(1,e.length-2));const a=new URL(e,t.base||"").href;if(r(a))return a;if(!i){const n=this.resolvePrefixedIRI(e,t.prefixes);if(null!==n&&r(n))return n}return s?s(a):this.UnknownIRI},executeQueryPromise:function(e,t){const n=t+"?query="+encodeURIComponent(e);return fetch(n,{headers:{Accept:"application/sparql-results+json"}}).then((e=>e.json())).then((e=>this.parseSparqlJsonResults(e)))},executeQuery:function(e,t){const n=t+"?query="+encodeURIComponent(e),r=new XMLHttpRequest;r.open("GET",n,!1),r.setRequestHeader("Accept","application/sparql-results+json"),r.send();const s=JSON.parse(r.responseText);return this.parseSparqlJsonResults(s)},parseSparqlJsonResults:function(e){const t=e.head.vars;return e.results.bindings.map((e=>t.map((t=>{const n=e[t];switch(n.type){case"uri":return n.value;case"bnode":return"_:"+n.value;case"literal":return'"'+n.value.replace(/"/g,'\\""')+'"'+("xml:lang"in n?"@"+n["xml:lang"]:"")+("datatype"in n?"^^"+n.datatype:"");case"typed-literal":return'"'+n.value.replace(/"/g,'\\""')+'"^^'+n.datatype;default:throw"unknown XML results type: "+n.type}}))))},NotSupplied:"-- not supplied --",UnknownIRI:"-- not found --",unescapeText:function(e,t){const n=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g;try{return e=e.replace(n,(function(e,n,r,s){let i;if(n){if(i=parseInt(n,16),isNaN(i))throw new Error;return String.fromCharCode(i)}if(r){if(i=parseInt(r,16),isNaN(i))throw new Error;return i<65535?String.fromCharCode(i):String.fromCharCode(55296+((i-=65536)>>10),56320+(1023&i))}{const e=t[s];if(!e)throw new Error("no replacement found for '"+s+"'");return e}}))}catch(e){return console.warn(e),""}}};function f(e,t){for(let n in h)t?e.prototype[n]=d(h[n]):e[n]=h[n];return e}function d(e){return function(t){return e(this,t)}}return f(f)}();e.exports=r},7403:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,s)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return s(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ShExValidator=t.resultMapToShapeExprTest=t.InterfaceOptions=void 0;const a=i(n(1101)),o=n(1101),u=n(3530),c=i(n(2515)),l=n(3486),p=n(8994),h=n(8806);t.InterfaceOptions={coverage:{firstError:"fail on first error (usually used with eval-simple-1err)",exhaustive:"find as many errors as possible (usually used with eval-threaded-nerr)"}};const f=!1,d=n(6201).G;class m{constructor(e){this.handlers={},this.results={},this.externalCode=e||{}}register(e,t){this.handlers[e]=t}dispatchAll(e,t,n){return e.reduce(((e,r)=>{if(0===e.length&&r.name in this.handlers){const s=("code"in r?r.code:this.externalCode[r.name])||null,i="extensions"in n&&r.name in n.extensions,a=i?n.extensions[r.name]:{},o=this.handlers[r.name].dispatch(s,t,a);if("object"!=typeof o||!Array.isArray(o))throw Error("unsupported response from semantic action handler: "+JSON.stringify(o));return o.length>0&&e.push({type:"SemActFailure",errors:o}),!i&&Object.keys(a).length>0&&("extensions"in n||(n.extensions={}),n.extensions[r.name]=a),e}return e}),[])}}class g{constructor(){this.depth=0}recurse(e){}known(e){}enter(e,t){++this.depth}exit(e,t,n){--this.depth}}class y{constructor(e,t,n,r,s,i,a){this.parent=e,this.label=t,this.depth=n,this.tracker=r,this.seen=s,this.matchTarget=i,this.subGraph=a}checkShapeLabel(e){return new y(this,e,this.depth+1,this.tracker,this.seen,this.matchTarget,this.subGraph)}followTripleConstraint(){return new y(this,this.label,this.depth+1,this.tracker,this.seen,this.matchTarget,null)}checkExtendsPartition(e){return new y(this,this.label,this.depth+1,this.tracker,this.seen,this.matchTarget,e)}checkExtendingClass(e,t){return new y(this,e,this.depth+1,this.tracker,this.seen,t,this.subGraph)}}class x{constructor(){this.data=new Map}set(e,t,n){if(this.data.has(e)||this.data.set(e,new Map),this.data.get(e).has(t))throw Error(`Error setting [${e}][${t}]=${n}; already has value ${this.data.get(e).get(t)}`);this.data.get(e).set(t,n)}get(e,t){return this.data.get(e).get(t)}}class _{constructor(e,t){this.hits=e,this.misses=t}}class b{constructor(e,t){this.triple=e,this.sub=t}}class E extends b{}class v extends b{constructor(e){super(e,void 0)}}class S extends b{}t.resultMapToShapeExprTest=function(e){const t=e.reduce(((e,t)=>{const n=t.appinfo;return"errors"in n?{passes:e.passes,failures:e.failures.concat([n])}:{passes:e.passes.concat([n]),failures:e.failures}}),{passes:[],failures:[]});return t.failures.length>0?1!==t.failures.length?{type:"FailureList",errors:t.failures}:t.failures[0]:1!==t.passes.length?{type:"SolutionList",solutions:t.passes}:t.passes[0]};class A{constructor(e){this.incoming=[],this.outgoing=[],this.queryTracker=e}getTriplesByIRI(e,t,n,r){return this.incoming.concat(this.outgoing).filter((r=>!(e&&e!==r.subject||t&&t!==r.predicate||n&&n!==r.object)))}getNeighborhood(e,t,n){return{outgoing:this.outgoing,incoming:this.incoming}}getSubjects(){throw Error("!Triples DB can't index subjects")}getPredicates(){throw Error("!Triples DB can't index predicates")}getObjects(){throw Error("!Triples DB can't index objects")}getQuads(){throw Error("!Triples DB doesn't have Quads")}get size(){return this.incoming.length+this.outgoing.length}addIncomingTriples(e){Array.prototype.push.apply(this.incoming,e)}addOutgoingTriples(e){Array.prototype.push.apply(this.outgoing,e)}}class w{constructor(e,t,n={}){const r=e._index||(0,h.index)(e);void 0===r.labelToTcs&&(r.labelToTcs={}),this.index=r,n=n||{},this.options=n,this.known={},this.schema=e,this.db=t,this.regexModule=this.options.regexModule||d,this.semActHandler=new m(n.semActs)}validateShapeMap(e,t=new g,n={}){return e.map((e=>{const r=this.validateNodeShapePair(a.ld2RdfJsTerm(e.node),e.shape,t,n);return{node:e.node,shape:e.shape,status:"errors"in r?"nonconformant":"conformant",appinfo:r}}))}validateNodeShapePair(e,t,n=new g,r={}){const s=new y(null,t,0,n,r,null,null);if("startActs"in this.schema){const t={},n=this.semActHandler.dispatchAll(this.schema.startActs,null,t);if(n.length)return{type:"Failure",node:(0,o.rdfJsTerm2Ld)(e),shape:s.label,errors:n}}const i=this.validateShapeLabel(e,s);return"startActs"in this.schema&&(i.startActs=this.schema.startActs),i}validateShapeLabel(e,t){if("string"!=typeof t.label)return t.label!==w.Start&&L(`unknown shape ctx.label ${JSON.stringify(t.label)}`),this.schema.start||L("start production not defined"),this.validateShapeExpr(e,this.schema.start,t);const n=a.rdfJsTerm2Turtle(e)+"@"+t.label;if(!t.subGraph){if(n in t.seen){let n={type:"Recursion",node:(0,o.rdfJsTerm2Ld)(e),shape:t.label};return t.tracker.recurse(n),n}if("known"in this&&n in this.known){const e=this.known[n];return t.tracker.known(e),e}t.seen[n]={node:e,shape:t.label},t.tracker.enter(e,t.label)}const r=this.validateDescendants(e,t.label,t,!1);return t.subGraph||(t.tracker.exit(e,t.label,r),delete t.seen[n],"known"in this&&(this.known[n]=r)),r}validateDescendants(e,t,n,r=!1){const s=this;if(n.subGraph){const r=this.validateShapeDecl(e,this.lookupShape(t),n);return n.matchTarget&&t===n.matchTarget.label&&!("errors"in r)&&n.matchTarget.count++,r}let i=[t];i=i.concat(function(e){const t={},n=c.create();return function(){const e=(0,h.Visitor)();let r,i;const a=e.visitShapeDecl;return e.visitShapeDecl=function(n){return r=n.id,i=n.abstract,t[n.id]=!!n.abstract,a.call(e,n,n.id)},e.visitShape=function(e){return void 0!==e.extends&&e.extends.forEach((e=>{const t=(0,h.Visitor)();t.visitExpression=function(e,...t){return"null"},t.visitShapeRef=function(e,...i){return n.add(e,r),t.visitShapeDecl(s.lookupShape(e)),"null"},t.visitShapeExpr(e)})),"null"},e}().visitSchema(e),n.children}(this.schema)[t]||[]);for(let e=i.length-1;e>=0;--e)i.indexOf(i[e])<e&&i.splice(e,1);r||(i=i.filter((e=>!this.lookupShape(e).abstract)));const a=i.reduce(((r,s)=>{const i=this.lookupShape(s),a=s===t?null:{label:t,count:0};n=n.checkExtendingClass(s,a);const o=this.validateShapeDecl(e,i,n);return"errors"in o||a&&0===a.count?{passes:r.passes,failures:r.failures.concat(o)}:{passes:r.passes.concat(o),failures:r.failures}}),{passes:[],failures:[]});let o;return o=a.passes.length>0?1!==a.passes.length?{type:"SolutionList",solutions:a.passes}:a.passes[0]:a.failures.length>0?1!==a.failures.length?{type:"FailureList",errors:a.failures}:a.failures[0]:{type:"AbstractShapeFailure",shape:t,errors:[t+" has no non-abstract children"]},o}validateShapeDecl(e,t,n){const r=(t.restricts||[]).concat([t.shapeExpr]),s=1===r.length?r[0]:{type:"ShapeAnd",shapeExprs:r};return this.validateShapeExpr(e,s,n)}lookupShape(e){if(void 0===this.schema.shapes)L("shape "+e+" not found; no shapes in schema");else if(e in this.index.shapeExprs)return this.index.shapeExprs[e];L("shape "+e+" not found in:\n"+Object.keys(this.index.shapeExprs||[]).map((e=>"  "+e)).join("\n"))}validateShapeExpr(e,t,n){if("string"==typeof t)return this.validateShapeLabel(e,n.checkShapeLabel(t));switch(t.type){case"NodeConstraint":return this.validateNodeConstraint(e,t,n);case"Shape":return this.validateShape(e,t,n);case"ShapeExternal":if("function"!=typeof this.options.validateExtern)throw L(`validating ${a.shExJsTerm2Turtle(e)} as EXTERNAL shapeExpr ${n.label} requires a 'validateExtern' option`);return this.options.validateExtern(e,n.label,n.checkShapeLabel(n.label));case"ShapeOr":const r=[];for(let s=0;s<t.shapeExprs.length;++s){const i=t.shapeExprs[s],a=this.validateShapeExpr(e,i,n);if("errors"in a)r.push(a);else if(!n.matchTarget||n.matchTarget.count>0)return{type:"ShapeOrResults",solution:a}}return{type:"ShapeOrFailure",errors:r};case"ShapeNot":const s=this.validateShapeExpr(e,t.shapeExpr,n);return"errors"in s?{type:"ShapeNotResults",solution:s}:{type:"ShapeNotFailure",errors:s};case"ShapeAnd":const i=[],o=[];for(let r=0;r<t.shapeExprs.length;++r){const s=t.shapeExprs[r],a=this.validateShapeExpr(e,s,n);"errors"in a?o.push(a):i.push(a)}return o.length>0?{type:"ShapeAndFailure",errors:o}:{type:"ShapeAndResults",solutions:i};default:throw Error("expected one of Shape{Ref,And,Or} or NodeConstraint, got "+JSON.stringify(t))}}evaluateShapeExprSemActs(e,t,n,r){if(!("errors"in e)&&void 0!==t.semActs){const s=this.semActHandler.dispatchAll(t.semActs,Object.assign({node:n},e),e);if(s.length)return{type:"Failure",node:(0,o.rdfJsTerm2Ld)(n),shape:r,errors:s}}return e}validateShape(e,t,n){let r=null;const s=(n.subGraph||this.db).getNeighborhood(e,n.label,t),i=s.outgoing.concat(s.incoming),{extendsTCs:a,tc2exts:u,localTCs:c}=this.TripleConstraintsVisitor(this.index.labelToTcs).getAllTripleConstraints(t),l=a.concat(c),{t2tcs:p,t2tcErrors:h,tc2TResults:d}=this.matchByPredicate(l,s,n),{missErrors:m,matchedExtras:g}=this.whatsMissing(p,h,t.extra||[]),y=new N(p,a,u),x=[],_=void 0===t.expression?null:this.regexModule.compile(this.schema,t,this.index);for(let i=y.next();null!==i&&null===r;i=y.next()){const{errors:c,results:p}=this.tryPartition(i,e,t,n,a,u,g,l,d,s.outgoing,_),h={type:"ShapeTest",node:(0,o.rdfJsTerm2Ld)(e),shape:n.label};if(0===c.length&&null!==p&&(h.solution=p),"semActs"in t){const n=this.semActHandler.dispatchAll(t.semActs,Object.assign({node:e},p),h);n.length&&Array.prototype.push.apply(c,n)}x.push(c),0===c.length&&(r=h)}const b=x[x.length-1];let E=m.concat(1===b.length?b[0]:b);return E.length>0&&(r={type:"Failure",node:(0,o.rdfJsTerm2Ld)(e),shape:n.label,errors:E}),f&&i.forEach((function(e){delete e.toString})),this.addShapeAttributes(t,r)}tryPartition(e,t,n,r,s,i,a,c,l,p,h){const f=new u.MapArray;c.forEach((e=>f.empty(e)));const d=[],m=(g=(n.extends||[]).length,Array.from(Array(g))).map((()=>[]));var g;e.forEach(((e,t)=>{if(-1!==s.indexOf(e))for(let n of i.get(e))m[n].push(t);else f.add(e,{triple:t,res:l.get(e,t)})})),p.forEach((t=>{e.has(t)||-1!==a.indexOf(t)||d.push(t)}));const y=[];n.closed&&d.length>0&&y.push({type:"ClosedShapeViolation",unexpectedTriples:d.map((e=>({subject:(0,o.rdfJsTerm2Ld)(e.subject),predicate:(0,o.rdfJsTerm2Ld)(e.predicate),object:(0,o.rdfJsTerm2Ld)(e.object)})))});let x=this.testExtends(n,t,m,r);if(null===x||!("errors"in x))if(null!==h){const e=h.match(t,f,this.semActHandler,null);x=!("errors"in e)&&x?{type:"ExtendedResults",extensions:x,local:e}:e}else x&&(x={type:"ExtendedResults",extensions:x});return null!==x&&void 0!==x.errors&&Array.prototype.push.apply(y,x.errors),{errors:y,results:x}}matchByPredicate(e,t,n){const r=this,s=F(t.outgoing),i=F(t.incoming),a={t2tcErrors:new Map,tc2TResults:new x,t2tcs:new u.MapArray};return[t.outgoing,t.incoming].forEach((e=>e.forEach((e=>a.t2tcs.data.set(e,[]))))),e.reduce((function(e,t){const a=(t.inverse?i:s).byPredicate.get(t.predicate)||[],o=r.triplesMatchingShapeExpr(a,t,n);return o.hits.forEach((function(n){e.t2tcs.add(n.triple,t),e.tc2TResults.set(t,n.triple,n.sub)})),o.misses.forEach((function(n){e.t2tcErrors.set(n.triple,{constraint:t,errors:n.sub})})),e}),a)}whatsMissing(e,t,n){const r=[];return{missErrors:e.reduce(((e,s,i)=>(0===i.length&&t.has(s)&&(-1!==n.indexOf(s.predicate.value)?r.push(s):e.push({type:"TypeMismatch",triple:{type:"TestedTriple",subject:(0,o.rdfJsTerm2Ld)(s.subject),predicate:(0,o.rdfJsTerm2Ld)(s.predicate),object:(0,o.rdfJsTerm2Ld)(s.object)},constraint:t.get(s).constraint,errors:t.get(s).errors})),e)),[]),matchedExtras:r}}addShapeAttributes(e,t){return void 0!==e.annotations&&(t.annotations=e.annotations),t}testExtends(e,t,n,r){if(void 0===e.extends)return null;const s=[],i=[];for(let a=0;a<e.extends.length;++a){const o=e.extends[a],u=new A(null);n[a].forEach((e=>u.addOutgoingTriples([e]))),r=r.checkExtendsPartition(u);const c=this.validateShapeExpr(t,o,r);"errors"in c?i.push(c):s.push(c)}return i.length>0?{type:"ExtensionFailure",errors:i}:{type:"ExtensionResults",solutions:s}}TripleConstraintsVisitor(e){const t=this,n=(0,h.Visitor)(e);function r(){return[]}function s(e,t,r){return{extendsTCs:void 0!==e.extends?e.extends.map((e=>n.visitShapeExpr(e,t,r))):[],localTCs:void 0===e.expression?[]:n.visitExpression(e.expression,t,r)}}function i(e,t){return void 0===t.max?e:-1===e||-1===t.max?-1:e*t.max}function a(e){return Array.prototype.concat.apply([],e)}return n.visitShapeDecl=function(t,r,s){return e[t.id]=t.shapeExpr?n.visitShapeExpr(t.shapeExpr,1,1):[],[{type:"Ref",ref:t.id}]},n.visitShapeOr=function(e,t,n){return e.shapeExprs.reduce(((e,t)=>e.concat(this.visitShapeExpr(t,0,n))),[])},n.visitShapeAnd=function(e,t,n){const r=new Set;return e.shapeExprs.reduce(((e,s)=>(this.visitShapeExpr(s,t,n).forEach((t=>{const n=`${t.min} ${t.max} ${t.predicate}`;r.has(n)||(r.add(n),e.push(t))})),e)),[])},n.visitShapeNot=function(e,t,n){throw Error(`don't know what to do when extending ${JSON.stringify(e)}`)},n.visitShapeExternal=r,n.visitNodeConstraint=r,n.visitShapeRef=function(e,r,s){return n.visitShapeDecl(t.lookupShape(e),r,s)},n.visitShape=function(e,t,n){const{extendsTCs:r,localTCs:i}=s(e,t,n);return r.flat().concat(i)},n.visitOneOf=function(e,t,r){return a(e.expressions.map((t=>n.visitTripleExpr(t,0,i(r,e)))))},n.visitEachOf=function(e,t,r){return a(e.expressions.map((s=>n.visitTripleExpr(s,function(e,t){return void 0===t.min?e:e*t.min}(t,e),i(r,e)))))},n.visitInclusion=function(e,r,s){return n.visitTripleExpr(t.index.tripleExprs[e],r,s)},n.visitTripleConstraint=function(e,t,n){return[e]},{getAllTripleConstraints:function(t){const{extendsTCs:n,localTCs:r}=s(t,1,1),i=[],a=new Map;return n.map(((e,t)=>o(e,t))),{extendsTCs:i,tc2exts:a,localTCs:r};function o(t,n){return t.forEach((t=>{var r;"TripleConstraint"===t.type?(r=t,-1===i.indexOf(r)?(i.push(r),a.set(r,[n])):-1===a.get(r).indexOf(n)&&a.get(r).push(n)):o(e[t.ref],n)}))}}}}triplesMatchingShapeExpr(e,t,n){const r=this,s=[],i=[];return e.forEach((function(e){const a=t.inverse?e.subject:e.object,o=JSON.parse(JSON.stringify(r.semActHandler.results));if(void 0===t.valueExpr)i.push(new v(e));else{n=n.followTripleConstraint();const u=r.validateShapeExpr(a,t.valueExpr,n);void 0===u.errors?i.push(new E(e,u)):(r.semActHandler.results=JSON.parse(JSON.stringify(o)),s.push(new S(e,u)))}})),new _(i,s)}validateNodeConstraint(e,t,n){const r=[];function s(...n){const s=Array.prototype.join.call(n,"");return r.push("Error validating "+a.rdfJsTerm2Turtle(e)+" as "+JSON.stringify(t)+": "+s),!1}void 0!==t.nodeKind&&(-1===["iri","bnode","literal","nonliteral"].indexOf(t.nodeKind)&&s(`unknown node kind '${t.nodeKind}'`),"BlankNode"===e.termType?"iri"!==t.nodeKind&&"literal"!==t.nodeKind||s(`blank node found when ${t.nodeKind} expected`):"Literal"===e.termType?"literal"!==t.nodeKind&&s(`literal found when ${t.nodeKind} expected`):"bnode"!==t.nodeKind&&"literal"!==t.nodeKind||s(`iri found when ${t.nodeKind} expected`)),t.datatype&&t.values&&s("found both datatype and values in "+t),void 0!==t.values&&(t.values.some((t=>function(e,t){if("string"==typeof e)return"NamedNode"===t.termType&&t.value===e;if(!("object"!=typeof e||void 0!==e.type&&e.type.match(/^(?:Iri|Literal|Language)(?:Stem(?:Range)?)?$/))){if("Literal"!==t.termType)return!1;{const n=e,r=t;return!(t.value!==n.value||void 0!==n.language&&n.language!==r.language||void 0!==n.type&&n.type!==r.datatype.value)}}{const n=e;switch(n.type){case"IriStem":return"NamedNode"===t.termType&&t.value.startsWith(n.stem);case"IriStemRange":return"NamedNode"===t.termType&&(!("string"==typeof n.stem&&!t.value.startsWith(n.stem))&&!O(n.exclusions,t.value));case"LiteralStem":return"Literal"===t.termType&&t.value.startsWith(n.stem);case"LiteralStemRange":return"Literal"===t.termType&&(!("string"==typeof n.stem&&!t.value.startsWith(n.stem))&&!O(n.exclusions,t.value));case"Language":return"Literal"===t.termType&&t.language===n.languageTag;case"LanguageStem":return"Literal"===t.termType&&T(t.language,n.stem);case"LanguageStemRange":return"Literal"===t.termType&&(!("string"==typeof n.stem&&!T(t.language,n.stem))&&!O(n.exclusions,t.language))}}}(t,e)))||s(`value ${e.value} not found in set ${JSON.stringify(t.values)}`));const i=(0,p.getNumericDatatype)(e);void 0!==t.datatype&&(0,p.testKnownTypes)(e,s,o.rdfJsTerm2Ld,t.datatype,i,e.value),(0,p.testFacets)(t,e.value,s,i);const u=Object.assign({},{type:null,node:(0,o.rdfJsTerm2Ld)(e)},n.label?{shape:n.label}:{},{shapeExpr:t});return Object.assign(u,r.length>0?{type:"NodeConstraintViolation",errors:r}:{type:"NodeConstraintTest"}),this.evaluateShapeExprSemActs(u,t,e,n.label)}}function T(e,t){const n=e.substring(t.length);return""!==e&&e.startsWith(t)&&(""===t||""===n||"-"===n[0])}function O(e,t){return e.some((e=>{if("string"==typeof e)return t===e;if("object"==typeof e&&void 0!==e.type&&!e.type.match(/^(?:Iri|Literal|Language)(?:Stem(?:Range)?)?$/))return t===e.value;{const n=e;switch(n.type){case"IriStem":case"LiteralStem":return t.startsWith(n.stem);case"Language":return t===n.languageTag;case"LanguageStem":return T(t,n.stem)}}return!1}))}t.ShExValidator=w,w.Start=l.Start,w.InterfaceOptions=t.InterfaceOptions,w.type="ShExValidator";const k=Symbol("NO_TRIPLE_CONSTRAINT");class N{constructor(e,t,n){this.uniqueTCs=[],this.extendsTCs=t,this.tc2exts=n,this.subgraphCache=new Map,this.crossProduct=function(e,t){const n=e.length,r=[],s=[...e.keys];let i=null;function a(){i=[];for(let a=0;a<n;a++)r[a]=0,i[a]=e.get(s[a]).length>0?e.get(s[a])[0]:t}function o(){if(null!==i&&0===i.length)return!1;if(null===i)return a(),!0;let o=n-1;if(r[o]++,r[o]<e.get(s[o]).length)return i[o]=e.get(s[o])[r[o]],!0;for(;r[o]>=e.get(s[o]).length;){if(0===o)return!1;r[o]=0,i[o]=e.get(s[o]).length>0?e.get(s[o])[0]:t,r[--o]++}return i[o]=e.get(s[o])[r[o]],!0}return{next:o,get:function(){return i.reduce(((e,n,r)=>(n!==t&&e.set(s[r],n),e)),new Map)}}}(e,k)}next(){for(;this.crossProduct.next();){const e=this.crossProduct.get(),t=[...e.entries()].map((([e,t])=>-1!==this.extendsTCs.indexOf(t)?""+this.tc2exts.get(t).map((e=>"E"+e)):"L"+this.getUniqueTcNo(t))).join("-");if(!this.subgraphCache.has(t))return this.subgraphCache.set(t,!0),e}return null}getUniqueTcNo(e){let t=this.uniqueTCs.indexOf(e);return-1===t&&(t=this.uniqueTCs.length,this.uniqueTCs.push(e)),t}}const I=function(){function e(e){return"Literal"===e.termType?-1!==["http://www.w3.org/2001/XMLSchema#integer","http://www.w3.org/2001/XMLSchema#float","http://www.w3.org/2001/XMLSchema#double"].indexOf(e.datatype.value)?parseInt(e.value):e:"BlankNode"===e.termType?e:"<"+e+">"}return e(this.subject)+" "+e(this.predicate)+" "+e(this.object)+" ."};function F(e){return{byPredicate:e.reduce((function(e,t){const n=t.predicate.value;return e.has(n)||e.set(n,[]),e.get(n).push(t),f&&(t.toString=I),e}),new Map),misses:[]}}function L(...e){const t=e.join(""),n=new Error(t);throw Error.captureStackTrace(n,L),n}},8994:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.testFacets=t.testKnownTypes=t.getNumericDatatype=void 0;const n="http://www.w3.org/2001/XMLSchema#",r=[n+"integer",n+"nonPositiveInteger",n+"negativeInteger",n+"long",n+"int",n+"short",n+"byte",n+"nonNegativeInteger",n+"unsignedLong",n+"unsignedInt",n+"unsignedShort",n+"unsignedByte",n+"positiveInteger"],s=[n+"decimal"].concat(r),i=[n+"float",n+"double"].concat(s),a={};a[n+"integer"]=function(e,t){return e.match(/^[+-]?[0-9]+$/)||t("illegal integer value '"+e+"'"),parseInt(e)},a[n+"decimal"]=function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal decimal value '"+e+"'"),parseFloat(e)};const o=/^[+\-]?(?:[0-9]+(?:\.[0-9]*)?|\.[0-9]+)(?:[eE][+\-]?[0-9]+)?$/;a[n+"float"]=function(e,t){return"NaN"===e?NaN:"INF"===e?1/0:"-INF"===e?-1/0:(e.match(o)||t("illegal float value '"+e+"'"),parseFloat(e))},a[n+"double"]=function(e,t){return"NaN"===e?NaN:"INF"===e?1/0:"-INF"===e?-1/0:(e.match(o)||t("illegal double value '"+e+"'"),Number(e))};const u={length:function(e,t){return e.length===t},minlength:function(e,t){return e.length>=t},maxlength:function(e,t){return e.length<=t}},c={mininclusive:function(e,t){return e>=t},minexclusive:function(e,t){return e>t},maxinclusive:function(e,t){return e<=t},maxexclusive:function(e,t){return e<t}},l={totaldigits:function(e,t){const n=e.match(/[0-9]/g);return!!n&&n.length<=t},fractiondigits:function(e,t){const n=e.match(/^[+-]?[0-9]*\.?([0-9]*)$/);return!!n&&n[1].length<=t}};t.getNumericDatatype=function(e){return"Literal"!==e.termType?null:-1!==r.indexOf(e.datatype.value)?n+"integer":-1!==i.indexOf(e.datatype.value)?e.datatype.value:null},t.testKnownTypes=function(e,t,r,s,i,o){"Literal"!==e.termType?t(`mismatched datatype: ${JSON.stringify(r(e))} is not a literal with datatype ${s}`):e.datatype.value!==s?t(`mismatched datatype: ${e.datatype.value} !== ${s}`):i?function(e,t,r){const s={integer:{min:-1/0,max:1/0},decimal:{min:-1/0,max:1/0},float:{min:-1/0,max:1/0},double:{min:-1/0,max:1/0},nonPositiveInteger:{min:-1/0,max:0},negativeInteger:{min:-1/0,max:-1},long:{min:-0x8000000000000000,max:0x8000000000000000},int:{min:-2147483648,max:2147483647},short:{min:-32768,max:32767},byte:{min:-128,max:127},nonNegativeInteger:{min:0,max:1/0},unsignedLong:{min:0,max:0x10000000000000000},unsignedInt:{min:0,max:4294967295},unsignedShort:{min:0,max:65535},unsignedByte:{min:0,max:255},positiveInteger:{min:1,max:1/0}}[t.substr(n.length)];if(!s)throw Error("unexpected datatype: "+t);e<s.min?r(`"${e}"^^<${t}> is less than the min: ${s.min}`):e>s.max&&r(`"${e}"^^<${t}> is greater than the min: ${s.max}`)}(a[i](o,t),s,t):s===n+"boolean"?"true"!==o&&"false"!==o&&"1"!==o&&"0"!==o&&t(`illegal boolean value: ${o}`):s===n+"dateTime"&&(o.match(/^[+-]?\d{4}-[01]\d-[0-3]\dT[0-5]\d:[0-5]\d:[0-5]\d(\.\d+)?([+-][0-2]\d:[0-5]\d|Z)?$/)||t(`illegal dateTime value: ${o}`))},t.testFacets=function(e,t,r,s){if(void 0!==e.pattern){const n=void 0!==e.flags?new RegExp(e.pattern,e.flags):new RegExp(e.pattern);t.match(n)||r(`value ${t} did not match pattern ${e.pattern}`)}for(const[n,s]of Object.entries(u)){const i=e[n];n in e&&!s(t,i)&&r(`facet violation: expected ${n} of ${i} but got ${t}`)}for(const[n,i]of Object.entries(c))if(n in e)if(s){const o=e[n];i(a[s](t,r),o)||r(`facet violation: expected ${n} of ${o} but got ${t}`)}else r(`facet violation: numeric facet ${n} can't apply to ${t}`);for(const[i,o]of Object.entries(l))if(i in e)if(s===n+"integer"||s===n+"decimal"){const n=String(a[s](t,r)),u=e[i];o(n,u)||r(`facet violation: expected ${i} of ${u} but got ${t}`)}else r(`facet violation: numeric facet ${i} can't apply to ${t}`)}},8806:e=>{function t(...e){function t(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}function n(e){return"string"==typeof e}this.ctor_args=e;const r={runtimeError:function(e){throw e},visitSchema:function(e,...t){const n={type:"Schema"};return this._expect(e,"type","Schema"),this._maybeSet(e,n,"Schema",["@context","prefixes","base","imports","startActs","start","shapes"],["_base","_prefixes","_index","_sourceMap"],...t),n},visitPrefixes:function(e,...t){return void 0===e?void 0:function(e,t){const n={};return Object.keys(e).forEach((function(r){n[r]=t(e[r])})),n}(e,(function(e){return e}))},visitIRI:function(e,...t){return e},visitImports:function(e,...t){const n=this;return e.map((function(e){return n.visitIRI(e,t)}))},visitStartActs:function(e,...t){const n=this;return void 0===e?void 0:e.map((function(e){return n.visitSemAct(e,...t)}))},visitSemActs:function(e,...t){const n=this;if(void 0===e)return;const r=[];return Object.keys(e).forEach((function(s){r.push(n.visitSemAct(e[s],s,...t))})),r},visitSemAct:function(e,t,...n){const r={type:"SemAct"};return this._expect(e,"type","SemAct"),this._maybeSet(e,r,"SemAct",["name","code"],null,...n),r},visitShapes:function(e,...t){const n=this;if(void 0!==e)return e.map((e=>n.visitShapeDecl(e,...t)))},visitShapeDecl:function(e,...t){return this._maybeSet(e,{type:"ShapeDecl"},"ShapeDecl",["id","abstract","restricts","shapeExpr"],null,...t)},visitShapeExpr:function(e,...t){if(n(e))return this.visitShapeRef(e,...t);switch(e.type){case"Shape":return this.visitShape(e,...t);case"NodeConstraint":return this.visitNodeConstraint(e,...t);case"ShapeAnd":return this.visitShapeAnd(e,...t);case"ShapeOr":return this.visitShapeOr(e,...t);case"ShapeNot":return this.visitShapeNot(e,...t);case"ShapeExternal":return this.visitShapeExternal(e,...t);default:throw Error("unexpected shapeExpr type: "+e.type)}},visitValueExpr:function(e,...t){return this.visitShapeExpr(e,...t)},_visitShapeGroup:function(e,...t){this._testUnknownAttributes(e,["shapeExprs"],e.type,this.visitShapeNot);const n=this,r={type:e.type};return"id"in e&&(r.id=e.id),r.shapeExprs=e.shapeExprs.map((function(e){return n.visitShapeExpr(e,...t)})),r},visitShapeNot:function(e,...t){this._testUnknownAttributes(e,["shapeExpr"],"ShapeNot",this.visitShapeNot);const n={type:e.type};return"id"in e&&(n.id=e.id),n.shapeExpr=this.visitShapeExpr(e.shapeExpr,...t),n},visitShape:function(e,...t){const n={type:"Shape"};return this._expect(e,"type","Shape"),this._maybeSet(e,n,"Shape",["abstract","extends","closed","expression","extra","semActs","annotations"],null,...t),n},_visitShapeExprList:function(e,...t){const n=this;return e.map((function(e){return n.visitShapeExpr(e,...t)}))},visitNodeConstraint:function(e,...t){const n={type:"NodeConstraint"};return this._expect(e,"type","NodeConstraint"),this._maybeSet(e,n,"NodeConstraint",["nodeKind","datatype","pattern","flags","length","reference","minlength","maxlength","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits","values","annotations","semActs"],null,...t),n},visitShapeRef:function(e,...t){if("string"!=typeof e){let t=Exception("visitShapeRef expected a string, not "+JSON.stringify(e));throw console.warn(t),t}return e},visitShapeExternal:function(e,...t){return this._testUnknownAttributes(e,["id"],"ShapeExternal",this.visitShapeNot),Object.assign("id"in e?{id:e.id}:{},{type:"ShapeExternal"})},_visitGroup:function(e,t,...n){const r=this,s=Object.assign("id"in e?{id:null}:{},{type:e.type});return s.expressions=e.expressions.map((function(e){return r.visitExpression(e,...n)})),this._maybeSet(e,s,"expr",["id","min","max","annotations","semActs"],["expressions"],...n)},visitTripleConstraint:function(e,...t){return this._maybeSet(e,Object.assign("id"in e?{id:null}:{},{type:"TripleConstraint"}),"TripleConstraint",["id","inverse","predicate","valueExpr","min","max","annotations","semActs"],null,...t)},visitTripleExpr:function(e,...t){if("string"==typeof e)return this.visitInclusion(e);switch(e.type){case"TripleConstraint":return this.visitTripleConstraint(e,...t);case"OneOf":return this.visitOneOf(e,...t);case"EachOf":return this.visitEachOf(e,...t);default:throw Error("unexpected expression type: "+e.type)}},visitExpression:function(e,...t){return this.visitTripleExpr(e,...t)},visitValues:function(e,...n){const r=this;return e.map((function(e){return t(e)||"Language"===e.type?e:r.visitStemRange(e,...n)}))},visitStemRange:function(e,...n){const r=this;"type"in e||r.runtimeError(Error("expected "+JSON.stringify(e)+" to have a 'type' attribute."));const s=["IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];let i;return-1===s.indexOf(e.type)&&r.runtimeError(Error("expected type attribute '"+e.type+"' to be in '"+s+"'.")),t(e)?(this._expect(e.stem,"type","Wildcard"),i={type:e.type,stem:{type:"Wildcard"}}):i={type:e.type,stem:e.stem},e.exclusions&&(i.exclusions=e.exclusions.map((function(e){return r.visitExclusion(e,...n)}))),i},visitExclusion:function(e,...n){if(t(e))return e;{"type"in e||_Visitor.runtimeError(Error("expected "+JSON.stringify(e)+" to have a 'type' attribute."));const t=["IriStem","LiteralStem","LanguageStem"];return-1===t.indexOf(e.type)&&_Visitor.runtimeError(Error("expected type attribute '"+e.type+"' to be in '"+t+"'.")),{type:e.type,stem:e.stem}}},visitInclusion:function(e,...t){if("string"!=typeof e){let t=Exception("visitInclusion expected a string, not "+JSON.stringify(e));throw console.warn(t),t}return e},_maybeSet:function(e,t,n,r,s,...i){const a=this;return this._testUnknownAttributes(e,s?r.concat(s):r,n,this._maybeSet),r.forEach((function(n){const r="visit"+n.charAt(0).toUpperCase()+n.slice(1);if(n in e){const s=a[r];if("function"!=typeof s)throw Error(r+" not found in Visitor");const o=s.call(a,e[n],...i);void 0!==o&&(t[n]=o)}})),t},_visitValue:function(e,...t){return e},_visitList:function(e,...t){return e.slice()},_testUnknownAttributes:function(e,t,n,r){const s=Object.keys(e).reduce((function(e,n){return"type"!==n&&-1===t.indexOf(n)?e.concat(n):e}),[]);if(s.length>0){const t=Error("unknown propert"+(s.length>1?"ies":"y")+": "+s.map((function(e){return'"'+e+'"'})).join(",")+" in "+n+": "+JSON.stringify(e));throw Error.captureStackTrace(t,r),t}},_expect:function(e,t,n){t in e||this.runtimeError(Error("expected "+JSON.stringify(e)+" to have a ."+t)),arguments.length>2&&e[t]!==n&&this.runtimeError(Error("expected "+e[t]+" to equal "+n))}};return r.visitBase=r.visitStart=r.visitClosed=r["visit@context"]=r._visitValue,r.visitRestricts=r.visitExtends=r._visitShapeExprList,r.visitExtra=r.visitAnnotations=r._visitList,r.visitAbstract=r.visitInverse=r.visitPredicate=r._visitValue,r.visitName=r.visitId=r.visitCode=r.visitMin=r.visitMax=r._visitValue,r.visitType=r.visitNodeKind=r.visitDatatype=r.visitPattern=r.visitFlags=r.visitLength=r.visitMinlength=r.visitMaxlength=r.visitMininclusive=r.visitMinexclusive=r.visitMaxinclusive=r.visitMaxexclusive=r.visitTotaldigits=r.visitFractiondigits=r._visitValue,r.visitOneOf=r.visitEachOf=r._visitGroup,r.visitShapeAnd=r.visitShapeOr=r._visitShapeGroup,r.visitInclude=r._visitValue,r}e.exports={Visitor:t,index:function(e){let n={shapeExprs:{},tripleExprs:{}},r=t(),s=r.visitTripleExpr;r.visitTripleExpr=function(e,...t){return"object"==typeof e&&"id"in e&&(n.tripleExprs[e.id]=e),s.call(r,e,...t)};let i=r.visitShapeDecl;return r.visitShapeDecl=function(e,...t){return"object"==typeof e&&"id"in e&&(n.shapeExprs[e.id]=e),i.call(r,e,...t)},r.visitSchema(e),n}}},95:(e,t,n)=>{const r=function(){const e=n(4436).relativize,t=-1,r=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,s=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,i={"\\":"\\\\",'"':'\\"',"/":"\\/","\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"},a={iri:"IRI",bnode:"BNODE",literal:"LITERAL",nonliteral:"NONLITERAL"};function o(e,t){if(!(this instanceof o))return new o(e,t);if(e&&"function"!=typeof e.write&&(t=e,e=null),t=t||{},e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{let e="";this._outputStream={write:function(t,n,r){e+=t,r&&r()},end:function(t){t&&t(null,e)}},this._endStream=!0}this._prefixIRIs=Object.create(null),this._baseIRI=t.base||null,t.prefixes&&this.addPrefixes(t.prefixes),this._error=t.error||l,this.forceParens=!t.simplifyParentheses,this._expect=t.lax?h:p}function u(e){let t=i[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function c(e){return e.replace(/\\/g,"\\\\").replace(/%/g,"\\%")}function l(e,t){"function"!=typeof e&&(t=e,e=l);const n=new Error(t);throw Error.captureStackTrace(n,e),n}function p(e,t,n){t in e||this._error(p,"expected "+e+" to have a ."+t),arguments.length>2&&e[t]!==n&&this._error(p,"expected "+e[e]+" to equal ."+n)}function h(){}return o.prototype={_write:function(e,t){this._outputStream.write(e,"utf8",t)},_writeSchema:function(e,t){const n=this;this._expect(e,"type","Schema"),n.addPrefixes(e._prefixes),e._base&&(n._baseIRI=e._base),n._baseIRI&&n._write("BASE <"+n._baseIRI+">\n"),e.imports&&e.imports.forEach((function(e){n._write("IMPORT "+n._encodeIriOrBlankNode(e)+"\n")})),e.startActs&&e.startActs.forEach((function(e){n._expect(e,"type","SemAct"),n._write(" %"+n._encodePredicate(e.name)+("code"in e?"{"+c(e.code)+"%}":"%"))})),e.start&&n._write("start = "+n._writeShapeExpr(e.start,t,!0,0).join("")+"\n"),"shapes"in e&&e.shapes.forEach((function(e){n._write(n._writeShapeDecl(e,t,!0,0).join("")+"\n",t)}))},_writeShapeDecl:function(e,t,n,r){const s=[];return e.abstract&&s.push("ABSTRACT "),s.push(this._encodeShapeName(e.id,!1)," "),s.concat(this._writeShapeExpr(e.shapeExpr,t,!0,0))},_writeShapeExpr:function(e,t,n,r){const s=this,i=[];if("string"==typeof e)i.push("@",s._encodeShapeName(e));else if("ShapeExternal"===e.type)i.push("EXTERNAL");else if("ShapeAnd"===e.type){r>=3&&i.push("(");let n=!1;e.shapeExprs.forEach((function(r,a){if(a>0){function o(t){let n=e.shapeExprs[t];return!("NodeConstraint"!==n.type||"nodeKind"in n&&"literal"===n.nodeKind||"datatype"in n||"values"in n)}let c=!n&&(o(a-1)&&function(t){let n=e.shapeExprs[t];return"Shape"===n.type||"ShapeRef"===n.type}(a)||(u=a-1,"Shape"===e.shapeExprs[u].type&&o(a)));i.push(" AND "),n=c}var u;[].push.apply(i,s._writeShapeExpr(r,t,!1,3))})),r>=3&&i.push(")")}else if("ShapeOr"===e.type)r>=2&&i.push("("),e.shapeExprs.forEach((function(e,r){r>0&&i.push(" OR "),[].push.apply(i,s._writeShapeExpr(e,t,n,2))})),r>=2&&i.push(")");else if("ShapeNot"===e.type)r>=4&&i.push("("),i.push("NOT "),[].push.apply(i,s._writeShapeExpr(e.shapeExpr,t,n,4)),r>=4&&i.push(")");else if("Shape"===e.type)[].push.apply(i,s._writeShape(e,t,n));else{if("NodeConstraint"!==e.type)throw Error("expected Shape{,And,Or,Ref} or NodeConstraint in "+JSON.stringify(e));[].push.apply(i,s._writeNodeConstraint(e,t,n))}return i},_writeShape:function(e,n,r){const s=this;try{const o=[];this._expect(e,"type","Shape"),e.closed&&o.push("CLOSED "),[{keyword:"extends",marker:"EXTENDS "}].forEach((t=>{e[t.keyword]&&e[t.keyword].length>0&&(e[t.keyword].forEach((function(e,r){r&&o.push(" "),o.push(t.marker),[].push.apply(o,s._writeShapeExpr(e,n,!0,0))})),o.push(" "))})),e.extra&&e.extra.length>0&&(o.push("EXTRA "),e.extra.forEach((function(e,t){o.push(s._encodeShapeName(e,!1)+" ")})),o.push(" "));function i(e,n){0===e&&1===n?o.push("?"):0===e&&n===t?o.push("*"):void 0===e&&void 0===n||(1===e&&n===t?o.push("+"):o.push("{",e,",",n===t?"*":n,"}"))}return o.push("{\n"),e.expression&&function e(t,r,a){function u(e){e&&e.forEach((function(e){s._expect(e,"type","SemAct"),o.push("\n"+r+"   %"),o.push(s._encodeValue(e.name)),"code"in e?o.push("{"+c(e.code)+"%}"):o.push("%")}))}function l(t,n,s,i){const u=s<a||i;u&&o.push("("),t.forEach((function(i,a){e(i,r+"  ",s),a<t.length-1&&o.push(n)})),u&&o.push(")")}if("string"==typeof t)o.push("&"),o.push(s._encodeShapeName(t,!1));else if("id"in t&&(o.push("$"),o.push(s._encodeIriOrBlankNode(t.id,!0))),"TripleConstraint"===t.type)t.inverse&&o.push("^"),t.negated&&o.push("!"),o.push(r,s._encodePredicate(t.predicate)," "),"valueExpr"in t?[].push.apply(o,s._writeShapeExpr(t.valueExpr,n,!0,0)):o.push(". "),i(t.min,t.max),s._annotations(o,t.annotations,r),u(t.semActs);else if("OneOf"===t.type){const e="id"in t||"min"in t||"max"in t||"annotations"in t||"semActs"in t;l(t.expressions,"\n"+r+"| ",1,e||s.forceParens),i(t.min,t.max),s._annotations(o,t.annotations,r),u(t.semActs)}else{if("EachOf"!==t.type)throw Error("unexpected expr type: "+t.type);{const e="id"in t||"min"in t||"max"in t||"annotations"in t||"semActs"in t;l(t.expressions,";\n"+r,2,e||s.forceParens),i(t.min,t.max),s._annotations(o,t.annotations,r),u(t.semActs)}}}(e.expression,"  ",0),o.push("\n}"),(a=e.semActs)&&a.forEach((function(e){s._expect(e,"type","SemAct"),o.push(" %",s._encodePredicate(e.name),"code"in e?"{"+c(e.code)+"%}":"%")})),s._annotations(o,e.annotations,"  "),o}catch(u){n&&n(u)}var a},_writeNodeConstraint:function(e,t){const n=this;try{n._expect(e,"type","NodeConstraint");const r=[];return e.nodeKind in a?r.push(a[e.nodeKind]," "):void 0!==e.nodeKind&&n._error("unexpected nodeKind: "+e.nodeKind),this._fillNodeConstraint(r,e,t),this._annotations(r,e.annotations,"  "),r}catch(e){t&&t(e)}},_annotations:function(e,t,n){const r=this;t&&t.forEach((function(t){r._expect(t,"type","Annotation"),e.push("//\n"+n+"   "),e.push(r._encodeValue(t.predicate)),e.push(" "),e.push(r._encodeValue(t.object))}))},_fillNodeConstraint:function(e,t,n){const r=this;if(t.datatype&&t.values&&r._error("found both datatype and values in "+expr),t.datatype&&e.push(r._encodeShapeName(t.datatype)),t.values&&(e.push("["),t.values.forEach((function(t,n){if(n>0&&e.push(" "),i(t))e.push(r._encodeValue(t));else{"type"in t||runtimeError("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const o=["Language","IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];function a(e,t){return-1!==["LanguageStem","LanguageStemRange"].indexOf(e.type)?"@"+t:-1!==["LiteralStem","LiteralStemRange"].indexOf(e.type)?'"'+t.replace(s,t)+'"':r._encodeValue(t)}-1===o.indexOf(t.type)&&runtimeError("expected type attribute '"+t.type+"' to be in '"+o+"'."),"Language"===t.type?e.push("@"+t.languageTag):i(t.stem)?e.push(a(t,t.stem)+"~"):(p(t.stem,"type","Wildcard"),e.push(".")),t.exclusions&&t.exclusions.forEach((function(n){if(e.push(" - "),i(n))e.push(a(t,n));else{"type"in n||runtimeError("expected "+JSON.stringify(n)+" to have a 'type' attribute.");const r=["IriStem","LiteralStem","LanguageStem"];-1===r.indexOf(n.type)&&runtimeError("expected type attribute '"+n.type+"' to be in '"+r+"'."),e.push(a(t,n.stem)+"~")}}))}})),e.push("]")),"pattern"in t){const n=t.pattern.replace(/\//g,"\\/"),r="flags"in t?t.flags:"";e.push("/"+n+"/"+r+" ")}return["length","minlength","maxlength","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits"].forEach((function(n){t[n]&&e.push(" ",n," ",t[n])})),e;function i(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}},_encodeIriOrBlankNode:function(e,t){if(t=t?" ":"","_"===e[0]&&":"===e[1])return e;r.test(e)&&(e=e.replace(s,u));const n=this._prefixRegex.exec(e);return n?(n[1]?this._prefixIRIs[n[1]]+n[2]:e)+t:this._relateUrl(e)},_relateUrl:function(t){const n=this._baseIRI;try{n&&new URL(n).host===new URL(t).host&&(t=e(t,n))}catch(e){}return"<"+t+">"},_encodeLiteral:function(e,t,n){return r.test(e)&&(e=e.replace(s,u)),n?'"'+e+'"@'+n:t?"http://www.w3.org/2001/XMLSchema#integer"===t&&e.match(/^[+-]?[0-9]+$/)||"http://www.w3.org/2001/XMLSchema#decimal"===t&&e.match(/^[+-]?[0-9]*\.[0-9]+$/)||"http://www.w3.org/2001/XMLSchema#double"===t&&e.match(/^[+-]?([0-9]+\.[0-9]*[eE][+-]?[0-9]+|\.?[0-9]+[eE][+-]?[0-9]+)$/)?e:'"'+e+'"^^'+this._encodeIriOrBlankNode(t):'"'+e+'"'},_encodeShapeName:function(e,t){if('"'===e[0])throw new Error("A literal as subject is not allowed: "+e);return this._encodeIriOrBlankNode(e,t)},_encodePredicate:function(e){if('"'===e[0])throw new Error("A literal as predicate is not allowed: "+e);return"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"===e?"a":this._encodeIriOrBlankNode(e)},_encodeValue:function(e){return"object"!=typeof e?this._encodeIriOrBlankNode(e):this._encodeLiteral(e.value,e.type,e.language)},_blockedWrite:function(){throw new Error("Cannot write because the writer has been closed.")},writeSchema:function(e,t){this._writeSchema(e,t),this.end(t)},addShape:function(e,t,n){this._write(_ShExWriter._encodeShapeName(t,!1)+" "+_ShExWriter._writeShapeExpr(e,n,!0,0).join(""),n)},addShapes:function(e){for(let t=0;t<e.length;t++)this.addShape(e[t])},addPrefix:function(e,t,n){const r={};r[e]=t,this.addPrefixes(r,n)},addPrefixes:function(e,t){const n=this._prefixIRIs;let r=!1;for(let t in e){const s=e[t];n[s]!==(t+=":")&&(r=!0,n[s]=t,this._write("PREFIX "+t+" <"+s+">\n"))}if(r){let e="",t="";for(let r in n)e+=e?"|"+r:r,t+=(t?"|":"")+n[r];e=e.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&"),this._prefixRegex=new RegExp("^(?:"+t+")[^/]*$|^("+e+")([a-zA-Z][\\-_a-zA-Z0-9]*)$")}this._write(r?"\n":"",t)},_prefixRegex:/$0^/,end:function(e){this._write=this._blockedWrite;let t=e&&function(n,r){t=null,e(n,r)};if(this._endStream)try{return this._outputStream.end(t)}catch(e){}t&&t()}},o}();e.exports=r}},n={};(function e(r){var s=n[r];if(void 0!==s)return s.exports;var i=n[r]={exports:{}};return t[r].call(i.exports,i,i.exports,e),i.exports})(9709)})();