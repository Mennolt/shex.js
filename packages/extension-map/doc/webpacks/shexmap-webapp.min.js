/*! For license information please see shexmap-webapp.min.js.LICENSE.txt */
(()=>{var t={752:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JisonLexer=void 0;var n=function(){function e(e){void 0===e&&(e={}),this.yy=e,this.EOF=1,this.options={},this.yyleng=0,this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0}}return e.prototype.parseError=function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},e.prototype.setInput=function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},e.prototype.input=function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},e.prototype.unput=function(e){var t=e.length,n=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var s=this.yylloc.range,i={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-t};return this.yylloc=i,this.options.ranges&&(this.yylloc.range=[s[0],s[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},e.prototype.more=function(){return this._more=!0,this},e.prototype.reject=function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},e.prototype.less=function(e){this.unput(this.match.slice(e))},e.prototype.pastInput=function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},e.prototype.upcomingInput=function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},e.prototype.showPosition=function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},e.prototype.test_match=function(e,t){var n,r,s;if(this.options.backtrack_lexer&&(s={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.yylloc.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(s.yylloc.range=this.yylloc.range.slice(0))),(r=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],n=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var i in s)this[i]=s[i];return!1}return!1},e.prototype.next=function(){if(this.done)return this.EOF;this._input||(this.done=!0);var e,t,n,r=null;this._more||(this.yytext="",this.match="");for(var s=this._currentRules(),i=0;i<s.length;i++)if((t=this._input.match(this.rules[s[i]]))&&(!r||t[0].length>r[0].length)){if(r=t,n=i,this.options.backtrack_lexer){if(!1!==(e=this.test_match(t,s[i])))return e;if(this._backtrack){r=null;continue}return!1}if(!this.options.flex)break}return r?!1!==(e=this.test_match(r,s[n]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},e.prototype.lex=function(){var e=this.next();return e||this.lex()},e.prototype.begin=function(e){this.conditionStack.push(e)},e.prototype.popState=function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},e.prototype._currentRules=function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},e.prototype.topState=function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},e.prototype.pushState=function(e){this.begin(e)},e.prototype.stateStackSize=function(){return this.conditionStack.length},e}();t.JisonLexer=n},41:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.o=t.JisonParser=void 0;var n=function(){function e(e,t){void 0===e&&(e={}),this.yy=e,this.lexer=t}return e.prototype.trace=function(e){},e.prototype.parseError=function(e,t){if(!t.recoverable){var n=new Error(e);throw n.hash=t,n}this.trace(e)},e.prototype.parse=function(e){var t=this,n=[0],r=[null],s=[],i=this.table,a="",o=0,u=0,c=0,l=2,p=1,f=s.slice.call(arguments,1),h=Object.create(this.lexer),d={},m={yy:d};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(m.yy[y]=this.yy[y]);h.setInput(e,m.yy),m.yy.lexer=h,m.yy.parser=this,void 0===h.yylloc&&(h.yylloc={});var x=h.yylloc;s.push(x);var g=h.options&&h.options.ranges;function _(e){n.length=n.length-2*e,r.length=r.length-e,s.length=s.length-e}"function"==typeof m.yy.parseError&&(this.parseError=m.yy.parseError);for(var E,b,S,v,A,O,w,T,I,N=function(){var e;return"number"!=typeof(e=h.lex()||p)&&(e=t.symbols_[e]||e),e},F={};;){if(S=n[n.length-1],this.defaultActions[S]?v=this.defaultActions[S]:(null==E&&(E=N()),v=i[S]&&i[S][E]),void 0===v||!v.length||!v[0]){var k=null,L="";if(c)b!==p&&(k=j(S));else{for(var R in k=j(S),I=[],i[S])O=Number(R),this.terminals_[O]&&O>l&&I.push("'"+this.terminals_[O]+"'");L=h.showPosition?"Parse error on line "+(o+1)+":\n"+h.showPosition()+"\nExpecting "+I.join(", ")+", got '"+(this.terminals_[E]||E)+"'":"Parse error on line "+(o+1)+": Unexpected "+(E==p?"end of input":"'"+(this.terminals_[E]||E)+"'"),this.parseError(L,{text:h.match,token:this.terminals_[E]||E,line:h.yylineno,loc:h.yylloc,expected:I,recoverable:null!==k})}if(3==c){if(E===p||b===p)throw new Error(L||"Parsing halted while starting to recover from another error.");u=h.yyleng,a=h.yytext,o=h.yylineno,x=h.yylloc,E=N()}if(null===k)throw new Error(L||"Parsing halted. No suitable error recovery rule available.");_(k||0),b=E==l?null:E,E=l,S=n[n.length-1],v=i[S]&&i[S][l],c=3}if(v[0]instanceof Array&&v.length>1)throw new Error("Parse Error: multiple actions possible at state: "+S+", token: "+E);switch(v[0]){case 1:n.push(E),r.push(h.yytext),s.push(h.yylloc),n.push(v[1]),E=null,b?(E=b,b=null):(u=h.yyleng,a=h.yytext,o=h.yylineno,x=h.yylloc,c>0&&c--);break;case 2:if(w=this.productions_[v[1]][1],F.$=r[r.length-w],F._$={first_line:s[s.length-(w||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(w||1)].first_column,last_column:s[s.length-1].last_column},g&&(F._$.range=[s[s.length-(w||1)].range[0],s[s.length-1].range[1]]),void 0!==(A=this.performAction.apply(F,[a,u,o,m.yy,v[1],r,s].concat(f))))return A;w&&(n=n.slice(0,-1*w*2),r=r.slice(0,-1*w),s=s.slice(0,-1*w)),n.push(this.productions_[v[1]][0]),r.push(F.$),s.push(F._$),T=i[n[n.length-2]][n[n.length-1]],n.push(T);break;case 3:return!0}}return!0;function j(e){for(var t=n.length-1,r=0;;){if(l.toString()in i[e])return r;if(0===e||t<2)return null;e=n[t-=2],++r}}},e}();t.JisonParser=n,t.o=function(e,t,n){var r=e.length;for(n=n||{};r--;n[e[r]]=t);return n}},515:e=>{var t={create:function(){let e={},t={},n={},r={};return{add:function(s,i){if(s in n&&-1!==n[s].indexOf(i))return;let a=s in r?c(s):e[s]=c(s),o=c(i);function u(e,t,n,r){e[r]=e[r].filter((t=>-1===e[n].indexOf(t))).concat(-1===e[n].indexOf(n)?[n]:[],e[n]),e[n].forEach((e=>t[e]=t[e].filter((e=>e!==r&&-1===t[r].indexOf(e))).concat(-1===t[r].indexOf(r)?[r]:[],t[r])))}function c(e){return e in r||(t[e]=[],n[e]=[],r[e]={}),r[e]}a[i]=o,delete e[i],u(n,t,i,s),u(t,n,s,i)},roots:e,parents:t,children:n}},depthFirst:function e(t,n,r){return Object.keys(t).reduce(((s,i)=>s.concat(e(t[i],n,i),r?n(i,r):[])),[])}};e.exports=t},325:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;const n="http://www.w3.org/1999/02/22-rdf-syntax-ns#",r="http://www.w3.org/2001/XMLSchema#",s="http://www.w3.org/2000/10/swap/";var i={xsd:{decimal:`${r}decimal`,boolean:`${r}boolean`,double:`${r}double`,integer:`${r}integer`,string:`${r}string`},rdf:{type:`${n}type`,nil:`${n}nil`,first:`${n}first`,rest:`${n}rest`,langString:`${n}langString`},owl:{sameAs:"http://www.w3.org/2002/07/owl#sameAs"},r:{forSome:`${s}reify#forSome`,forAll:`${s}reify#forAll`},log:{implies:`${s}log#implies`}};t.default=i},713:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.Variable=t.Triple=t.Term=t.Quad=t.NamedNode=t.Literal=t.DefaultGraph=t.BlankNode=void 0,t.escapeQuotes=b,t.termFromId=function e(t,n){if(n=n||f,!t)return n.defaultGraph();switch(t[0]){case"?":return n.variable(t.substr(1));case"_":return n.blankNode(t.substr(2));case'"':if(n===f)return new y(t);if('"'===t[t.length-1])return n.literal(t.substr(1,t.length-2));const r=t.lastIndexOf('"',t.length-1);return n.literal(t.substr(1,r-1),"@"===t[r+1]?t.substr(r+2):n.namedNode(t.substr(r+3)));case"<":const s=p.exec(t);return n.quad(e(S(s[1]),n),e(S(s[2]),n),e(S(s[3]),n),s[4]&&e(S(s[4]),n));default:return n.namedNode(t)}},t.termToId=function e(t){if("string"==typeof t)return t;if(t instanceof d&&"Quad"!==t.termType)return t.id;if(!t)return u.id;switch(t.termType){case"NamedNode":return t.value;case"BlankNode":return`_:${t.value}`;case"Variable":return`?${t.value}`;case"DefaultGraph":return"";case"Literal":return`"${t.value}"${t.language?`@${t.language}`:t.datatype&&t.datatype.value!==o.string?`^^${t.datatype.value}`:""}`;case"Quad":return`<<${b(e(t.subject))} ${b(e(t.predicate))} ${b(e(t.object))}${(0,i.isDefaultGraph)(t.graph)?"":` ${e(t.graph)}`}>>`;default:throw new Error(`Unexpected termType: ${t.termType}`)}},t.unescapeQuotes=S;var r,s=(r=n(325))&&r.__esModule?r:{default:r},i=n(670);const{rdf:a,xsd:o}=s.default;let u,c=0;const l=/^"(.*".*)(?="[^"]*$)/,p=/^<<("(?:""|[^"])*"[^ ]*|[^ ]+) ("(?:""|[^"])*"[^ ]*|[^ ]+) ("(?:""|[^"])*"[^ ]*|[^ ]+) ?("(?:""|[^"])*"[^ ]*|[^ ]+)?>>$/,f={namedNode:function(e){return new m(e)},blankNode:function(e){return new x(e||"n3-"+c++)},variable:function(e){return new g(e)},literal:function(e,t){if("string"==typeof t)return new y(`"${e}"@${t.toLowerCase()}`);let n=t?t.value:"";""===n&&("boolean"==typeof e?n=o.boolean:"number"==typeof e&&(Number.isFinite(e)?n=Number.isInteger(e)?o.integer:o.double:(n=o.double,Number.isNaN(e)||(e=e>0?"INF":"-INF"))));return""===n||n===o.string?new y(`"${e}"`):new y(`"${e}"^^${n}`)},defaultGraph:function(){return u},quad:v,triple:v};var h=f;t.default=h;class d{constructor(e){this.id=e}get value(){return this.id}get hashCode(){return 0}equals(e){return e instanceof d?this.id===e.id:!!e&&this.termType===e.termType&&this.value===e.value}toJSON(){return{termType:this.termType,value:this.value}}}t.Term=d;class m extends d{get termType(){return"NamedNode"}}t.NamedNode=m;class y extends d{get termType(){return"Literal"}get value(){return this.id.substring(1,this.id.lastIndexOf('"'))}get language(){const e=this.id;let t=e.lastIndexOf('"')+1;return t<e.length&&"@"===e[t++]?e.substr(t).toLowerCase():""}get datatype(){return new m(this.datatypeString)}get datatypeString(){const e=this.id,t=e.lastIndexOf('"')+1,n=t<e.length?e[t]:"";return"^"===n?e.substr(t+2):"@"!==n?o.string:a.langString}equals(e){return e instanceof y?this.id===e.id:!!e&&!!e.datatype&&this.termType===e.termType&&this.value===e.value&&this.language===e.language&&this.datatype.value===e.datatype.value}toJSON(){return{termType:this.termType,value:this.value,language:this.language,datatype:{termType:"NamedNode",value:this.datatypeString}}}}t.Literal=y;class x extends d{constructor(e){super(`_:${e}`)}get termType(){return"BlankNode"}get value(){return this.id.substr(2)}}t.BlankNode=x;class g extends d{constructor(e){super(`?${e}`)}get termType(){return"Variable"}get value(){return this.id.substr(1)}}t.Variable=g;class _ extends d{constructor(){return super(""),u||this}get termType(){return"DefaultGraph"}equals(e){return this===e||!!e&&this.termType===e.termType}}t.DefaultGraph=_,u=new _;class E extends d{constructor(e,t,n,r){super(""),this._subject=e,this._predicate=t,this._object=n,this._graph=r||u}get termType(){return"Quad"}get subject(){return this._subject}get predicate(){return this._predicate}get object(){return this._object}get graph(){return this._graph}toJSON(){return{termType:this.termType,subject:this._subject.toJSON(),predicate:this._predicate.toJSON(),object:this._object.toJSON(),graph:this._graph.toJSON()}}equals(e){return!!e&&this._subject.equals(e.subject)&&this._predicate.equals(e.predicate)&&this._object.equals(e.object)&&this._graph.equals(e.graph)}}function b(e){return e.replace(l,((e,t)=>`"${t.replace(/"/g,'""')}`))}function S(e){return e.replace(l,((e,t)=>`"${t.replace(/""/g,'"')}`))}function v(e,t,n,r){return new E(e,t,n,r)}t.Triple=t.Quad=E},670:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.inDefaultGraph=function(e){return i(e.graph)},t.isBlankNode=function(e){return!!e&&"BlankNode"===e.termType},t.isDefaultGraph=i,t.isLiteral=function(e){return!!e&&"Literal"===e.termType},t.isNamedNode=function(e){return!!e&&"NamedNode"===e.termType},t.isVariable=function(e){return!!e&&"Variable"===e.termType},t.prefix=function(e,t){return a({"":e},t)("")},t.prefixes=a;var r,s=(r=n(713))&&r.__esModule?r:{default:r};function i(e){return!!e&&"DefaultGraph"===e.termType}function a(e,t){const n=Object.create(null);for(const t in e)r(t,e[t]);function r(e,r){if("string"==typeof r){const s=Object.create(null);n[e]=e=>s[e]||(s[e]=t.namedNode(r+e))}else if(!(e in n))throw new Error(`Unknown prefix: ${e}`);return n[e]}return t=t||s.default,r}},808:e=>{"use strict";function t(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,n,r,s){n=n||"&",r=r||"=";var i={};if("string"!=typeof e||0===e.length)return i;var a=/\+/g;e=e.split(n);var o=1e3;s&&"number"==typeof s.maxKeys&&(o=s.maxKeys);var u=e.length;o>0&&u>o&&(u=o);for(var c=0;c<u;++c){var l,p,f,h,d=e[c].replace(a,"%20"),m=d.indexOf(r);m>=0?(l=d.substr(0,m),p=d.substr(m+1)):(l=d,p=""),f=decodeURIComponent(l),h=decodeURIComponent(p),t(i,f)?Array.isArray(i[f])?i[f].push(h):i[f]=[i[f],h]:i[f]=h}return i}},368:e=>{"use strict";var t=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,n,r,s){return n=n||"&",r=r||"=",null===e&&(e=void 0),"object"==typeof e?Object.keys(e).map((function(s){var i=encodeURIComponent(t(s))+r;return Array.isArray(e[s])?e[s].map((function(e){return i+encodeURIComponent(t(e))})).join(n):i+encodeURIComponent(t(e[s]))})).join(n):s?encodeURIComponent(t(s))+r+encodeURIComponent(t(e)):""}},642:(e,t,n)=>{"use strict";t.decode=t.parse=n(808),t.encode=t.stringify=n(368)},362:e=>{"use strict";e.exports={ABSOLUTE:"absolute",PATH_RELATIVE:"pathRelative",ROOT_RELATIVE:"rootRelative",SHORTEST:"shortest"}},779:(e,t,n)=>{"use strict";var r=n(362);function s(e,t){var n=t.removeEmptyQueries&&e.extra.relation.minimumPort;return e.query.string[n?"stripped":"full"]}function i(e,t){return!e.extra.relation.minimumQuery||t.output===r.ABSOLUTE||t.output===r.ROOT_RELATIVE}function a(e,t){var n=t.removeDirectoryIndexes&&e.extra.resourceIsIndex,s=e.extra.relation.minimumResource&&t.output!==r.ABSOLUTE&&t.output!==r.ROOT_RELATIVE;return!!e.resource&&!s&&!n}e.exports=function(e,t){var n="";return n+=function(e,t){var n="";return(e.extra.relation.maximumHost||t.output===r.ABSOLUTE)&&(e.extra.relation.minimumScheme&&t.schemeRelative&&t.output!==r.ABSOLUTE?n+="//":n+=e.scheme+"://"),n}(e,t),n+=function(e,t){return!e.auth||t.removeAuth||!e.extra.relation.maximumHost&&t.output!==r.ABSOLUTE?"":e.auth+"@"}(e,t),n+=function(e,t){return e.host.full&&(e.extra.relation.maximumAuth||t.output===r.ABSOLUTE)?e.host.full:""}(e,t),n+=function(e,t){return e.port&&!e.extra.portIsDefault&&e.extra.relation.maximumHost?":"+e.port:""}(e),n+=function(e,t){var n="",o=e.path.absolute.string,u=e.path.relative.string,c=a(e,t);if(e.extra.relation.maximumHost||t.output===r.ABSOLUTE||t.output===r.ROOT_RELATIVE)n=o;else if(u.length<=o.length&&t.output===r.SHORTEST||t.output===r.PATH_RELATIVE){if(""===(n=u)){var l=i(e,t)&&!!s(e,t);e.extra.relation.maximumPath&&!c?n="./":!e.extra.relation.overridesQuery||c||l||(n="./")}}else n=o;return"/"!==n||c||!t.removeRootTrailingSlash||e.extra.relation.minimumPort&&t.output!==r.ABSOLUTE||(n=""),n}(e,t),n+=function(e,t){return a(e,t)?e.resource:""}(e,t),n+=function(e,t){return i(e,t)?s(e,t):""}(e,t),n+=function(e,t){return e.hash?e.hash:""}(e),n}},755:(e,t,n)=>{"use strict";var r=n(362),s=n(779),i=n(141),a=n(609),o=n(398),u=n(258);function c(e,t){this.options=i(t,{defaultPorts:{ftp:21,http:80,https:443},directoryIndexes:["index.html"],ignore_www:!1,output:c.SHORTEST,rejectedSchemes:["data","javascript","mailto"],removeAuth:!1,removeDirectoryIndexes:!0,removeEmptyQueries:!1,removeRootTrailingSlash:!0,schemeRelative:!0,site:void 0,slashesDenoteHost:!0}),this.from=o.from(e,this.options,null)}c.prototype.relate=function(e,t,n){if(a.isPlainObject(t)?(n=t,t=e,e=null):t||(t=e,e=null),n=i(n,this.options),e=e||n.site,!(e=o.from(e,n,this.from))||!e.href)throw new Error("from value not defined.");if(e.extra.hrefInfo.minimumPathOnly)throw new Error("from value supplied is not absolute: "+e.href);return!1===(t=o.to(t,n)).valid?t.href:(t=u(e,t,n),t=s(t,n))},c.relate=function(e,t,n){return(new c).relate(e,t,n)},a.shallowMerge(c,r),e.exports=c},141:(e,t,n)=>{"use strict";var r=n(609);function s(e,t){return t instanceof Object&&e instanceof Object?t instanceof Array&&e instanceof Array?t.concat(e):r.shallowMerge(e,t):e}e.exports=function(e,t){if(r.isPlainObject(e)){var n={};for(var i in t)t.hasOwnProperty(i)&&(void 0!==e[i]?n[i]=s(e[i],t[i]):n[i]=t[i]);return n}return t}},420:e=>{"use strict";e.exports=function(e,t){if(t.ignore_www){var n=e.host.full;if(n){var r=n;0===n.indexOf("www.")&&(r=n.substr(4)),e.host.stripped=r}}}},849:e=>{"use strict";e.exports=function(e){var t=!(e.scheme||e.auth||e.host.full||e.port),n=t&&!e.path.absolute.string,r=n&&!e.resource,s=r&&!e.query.string.full.length,i=s&&!e.hash;e.extra.hrefInfo.minimumPathOnly=t,e.extra.hrefInfo.minimumResourceOnly=n,e.extra.hrefInfo.minimumQueryOnly=r,e.extra.hrefInfo.minimumHashOnly=s,e.extra.hrefInfo.empty=i}},398:(e,t,n)=>{"use strict";var r=n(849),s=n(420),i=n(965),a=n(22),o=n(150),u=n(936),c=n(831);function l(e,t){var n=u(e,t);return!1===n.valid||(s(n,t),a(n,t),i(n,t),o(n,t),r(n)),n}e.exports={from:function(e,t,n){if(e){var r=l(e,t),s=c.resolveDotSegments(r.path.absolute.array);return r.path.absolute.array=s,r.path.absolute.string="/"+c.join(s),r}return n},to:l}},965:e=>{"use strict";function t(e){if("/"!==e){var t=[];return e.split("/").forEach((function(e){""!==e&&t.push(e)})),t}return[]}e.exports=function(e,n){var r=e.path.absolute.string;if(r){var s=r.lastIndexOf("/");if(s>-1){if(++s<r.length){var i=r.substr(s);"."!==i&&".."!==i?(e.resource=i,r=r.substr(0,s)):r+="/"}e.path.absolute.string=r,e.path.absolute.array=t(r)}else"."===r||".."===r?(r+="/",e.path.absolute.string=r,e.path.absolute.array=t(r)):(e.resource=r,e.path.absolute.string=null);e.extra.resourceIsIndex=function(e,t){var n=!1;return t.directoryIndexes.every((function(t){return t!==e||(n=!0,!1)})),n}(e.resource,n)}}},22:e=>{"use strict";e.exports=function(e,t){var n=-1;for(var r in t.defaultPorts)if(r===e.scheme&&t.defaultPorts.hasOwnProperty(r)){n=t.defaultPorts[r];break}n>-1&&(n=n.toString(),null===e.port&&(e.port=n),e.extra.portIsDefault=e.port===n)}},150:e=>{"use strict";var t=Object.prototype.hasOwnProperty;function n(e,n){var r=0,s="";for(var i in e)if(""!==i&&!0===t.call(e,i)){var a=e[i];""===a&&n||(s+=1==++r?"?":"&",i=encodeURIComponent(i),s+=""!==a?i+"="+encodeURIComponent(a).replace(/%20/g,"+"):i)}return s}e.exports=function(e,t){e.query.string.full=n(e.query.object,!1),t.removeEmptyQueries&&(e.query.string.stripped=n(e.query.object,!0))}},936:(e,t,n)=>{"use strict";var r=n(883).Qc;e.exports=function(e,t){return function(e,t){var n=!0;return t.rejectedSchemes.every((function(t){return n=!(0===e.indexOf(t+":"))})),n}(e,t)?(n=r(e,!0,t.slashesDenoteHost),(s=n.protocol)&&s.indexOf(":")===s.length-1&&(s=s.substr(0,s.length-1)),n.host={full:n.hostname,stripped:null},n.path={absolute:{array:null,string:n.pathname},relative:{array:null,string:null}},n.query={object:n.query,string:{full:null,stripped:null}},n.extra={hrefInfo:{minimumPathOnly:null,minimumResourceOnly:null,minimumQueryOnly:null,minimumHashOnly:null,empty:null,separatorOnlyQuery:"?"===n.search},portIsDefault:null,relation:{maximumScheme:null,maximumAuth:null,maximumHost:null,maximumPort:null,maximumPath:null,maximumResource:null,maximumQuery:null,maximumHash:null,minimumScheme:null,minimumAuth:null,minimumHost:null,minimumPort:null,minimumPath:null,minimumResource:null,minimumQuery:null,minimumHash:null,overridesQuery:null},resourceIsIndex:null,slashes:n.slashes},n.resource=null,n.scheme=s,delete n.hostname,delete n.pathname,delete n.protocol,delete n.search,delete n.slashes,n):{href:e,valid:!1};var n,s}},799:(e,t,n)=>{"use strict";var r=n(19),s=n(609),i=n(831);e.exports=function(e,t,n){r.upToPath(e,t,n),e.extra.relation.minimumScheme&&(e.scheme=t.scheme),e.extra.relation.minimumAuth&&(e.auth=t.auth),e.extra.relation.minimumHost&&(e.host=s.clone(t.host)),e.extra.relation.minimumPort&&function(e,t){e.port=t.port,e.extra.portIsDefault=t.extra.portIsDefault}(e,t),e.extra.relation.minimumScheme&&function(e,t){if(e.extra.relation.maximumHost||!e.extra.hrefInfo.minimumResourceOnly){var n=e.path.absolute.array,r="/";n?(e.extra.hrefInfo.minimumPathOnly&&0!==e.path.absolute.string.indexOf("/")&&(n=t.path.absolute.array.concat(n)),n=i.resolveDotSegments(n),r+=i.join(n)):n=[],e.path.absolute.array=n,e.path.absolute.string=r}else e.path=s.clone(t.path)}(e,t),r.pathOn(e,t,n),e.extra.relation.minimumResource&&function(e,t){e.resource=t.resource,e.extra.resourceIsIndex=t.extra.resourceIsIndex}(e,t),e.extra.relation.minimumQuery&&(e.query=s.clone(t.query)),e.extra.relation.minimumHash&&(e.hash=t.hash)}},19:e=>{"use strict";e.exports={pathOn:function(e,t,n){var r=e.extra.hrefInfo.minimumQueryOnly,s=e.extra.hrefInfo.minimumHashOnly,i=e.extra.hrefInfo.empty,a=e.extra.relation.minimumPort,o=e.extra.relation.minimumScheme,u=a&&e.path.absolute.string===t.path.absolute.string,c=e.resource===t.resource||!e.resource&&t.extra.resourceIsIndex||n.removeDirectoryIndexes&&e.extra.resourceIsIndex&&!t.resource,l=u&&(c||r||s||i),p=n.removeEmptyQueries?"stripped":"full",f=e.query.string[p],h=t.query.string[p],d=l&&!!f&&f===h||(s||i)&&!e.extra.hrefInfo.separatorOnlyQuery,m=d&&e.hash===t.hash;e.extra.relation.minimumPath=u,e.extra.relation.minimumResource=l,e.extra.relation.minimumQuery=d,e.extra.relation.minimumHash=m,e.extra.relation.maximumPort=!o||o&&!u,e.extra.relation.maximumPath=!o||o&&!l,e.extra.relation.maximumResource=!o||o&&!d,e.extra.relation.maximumQuery=!o||o&&!m,e.extra.relation.maximumHash=!o||o&&!m,e.extra.relation.overridesQuery=u&&e.extra.relation.maximumResource&&!d&&!!h},upToPath:function(e,t,n){var r=e.extra.hrefInfo.minimumPathOnly,s=e.scheme===t.scheme||!e.scheme,i=s&&(e.auth===t.auth||n.removeAuth||r),a=n.ignore_www?"stripped":"full",o=i&&(e.host[a]===t.host[a]||r),u=o&&(e.port===t.port||r);e.extra.relation.minimumScheme=s,e.extra.relation.minimumAuth=i,e.extra.relation.minimumHost=o,e.extra.relation.minimumPort=u,e.extra.relation.maximumScheme=!s||s&&!i,e.extra.relation.maximumAuth=!s||s&&!o,e.extra.relation.maximumHost=!s||s&&!u}}},258:(e,t,n)=>{"use strict";var r=n(799),s=n(255);e.exports=function(e,t,n){return r(t,e,n),s(t,e,n),t}},255:(e,t,n)=>{"use strict";var r=n(831);e.exports=function(e,t,n){if(e.extra.relation.minimumScheme){var s=(i=e.path.absolute.array,a=t.path.absolute.array,o=[],u=!0,c=-1,a.forEach((function(e,t){u&&(i[t]!==e?u=!1:c=t),u||o.push("..")})),i.forEach((function(e,t){t>c&&o.push(e)})),o);e.path.relative.array=s,e.path.relative.string=r.join(s)}var i,a,o,u,c}},609:e=>{"use strict";e.exports={clone:function e(t){if(t instanceof Object){var n=t instanceof Array?[]:{};for(var r in t)t.hasOwnProperty(r)&&(n[r]=e(t[r]));return n}return t},isPlainObject:function(e){return!!e&&"object"==typeof e&&e.constructor===Object},shallowMerge:function(e,t){if(e instanceof Object&&t instanceof Object)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}}},831:e=>{"use strict";e.exports={join:function(e){return e.length>0?e.join("/")+"/":""},resolveDotSegments:function(e){var t=[];return e.forEach((function(e){".."!==e?"."!==e&&t.push(e):t.length>0&&t.splice(t.length-1,1)})),t}}},639:function(e,t,n){var r;e=n.nmd(e),function(s){t&&t.nodeType,e&&e.nodeType;var i="object"==typeof n.g&&n.g;i.global!==i&&i.window!==i&&i.self;var a,o=2147483647,u=36,c=/^xn--/,l=/[^\x20-\x7E]/,p=/[\x2E\u3002\uFF0E\uFF61]/g,f={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},h=Math.floor,d=String.fromCharCode;function m(e){throw RangeError(f[e])}function y(e,t){for(var n=e.length,r=[];n--;)r[n]=t(e[n]);return r}function x(e,t){var n=e.split("@"),r="";return n.length>1&&(r=n[0]+"@",e=n[1]),r+y((e=e.replace(p,".")).split("."),t).join(".")}function g(e){for(var t,n,r=[],s=0,i=e.length;s<i;)(t=e.charCodeAt(s++))>=55296&&t<=56319&&s<i?56320==(64512&(n=e.charCodeAt(s++)))?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),s--):r.push(t);return r}function _(e){return y(e,(function(e){var t="";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join("")}function E(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function b(e,t,n){var r=0;for(e=n?h(e/700):e>>1,e+=h(e/t);e>455;r+=u)e=h(e/35);return h(r+36*e/(e+38))}function S(e){var t,n,r,s,i,a,c,l,p,f,d,y=[],x=e.length,g=0,E=128,S=72;for((n=e.lastIndexOf("-"))<0&&(n=0),r=0;r<n;++r)e.charCodeAt(r)>=128&&m("not-basic"),y.push(e.charCodeAt(r));for(s=n>0?n+1:0;s<x;){for(i=g,a=1,c=u;s>=x&&m("invalid-input"),((l=(d=e.charCodeAt(s++))-48<10?d-22:d-65<26?d-65:d-97<26?d-97:u)>=u||l>h((o-g)/a))&&m("overflow"),g+=l*a,!(l<(p=c<=S?1:c>=S+26?26:c-S));c+=u)a>h(o/(f=u-p))&&m("overflow"),a*=f;S=b(g-i,t=y.length+1,0==i),h(g/t)>o-E&&m("overflow"),E+=h(g/t),g%=t,y.splice(g++,0,E)}return _(y)}function v(e){var t,n,r,s,i,a,c,l,p,f,y,x,_,S,v,A=[];for(x=(e=g(e)).length,t=128,n=0,i=72,a=0;a<x;++a)(y=e[a])<128&&A.push(d(y));for(r=s=A.length,s&&A.push("-");r<x;){for(c=o,a=0;a<x;++a)(y=e[a])>=t&&y<c&&(c=y);for(c-t>h((o-n)/(_=r+1))&&m("overflow"),n+=(c-t)*_,t=c,a=0;a<x;++a)if((y=e[a])<t&&++n>o&&m("overflow"),y==t){for(l=n,p=u;!(l<(f=p<=i?1:p>=i+26?26:p-i));p+=u)v=l-f,S=u-f,A.push(d(E(f+v%S,0))),l=h(v/S);A.push(d(E(l,0))),i=b(n,_,r==s),n=0,++r}++n,++t}return A.join("")}a={version:"1.3.2",ucs2:{decode:g,encode:_},decode:S,encode:v,toASCII:function(e){return x(e,(function(e){return l.test(e)?"xn--"+v(e):e}))},toUnicode:function(e){return x(e,(function(e){return c.test(e)?S(e.slice(4).toLowerCase()):e}))}},void 0===(r=function(){return a}.call(t,n,t,e))||(e.exports=r)}()},883:(e,t,n)=>{"use strict";var r=n(639),s=n(225);function i(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}t.Qc=_;var a=/^([a-z0-9.+-]+:)/i,o=/:[0-9]*$/,u=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,c=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),l=["'"].concat(c),p=["%","/","?",";","#"].concat(l),f=["/","?","#"],h=/^[+a-z0-9A-Z_-]{0,63}$/,d=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},y={javascript:!0,"javascript:":!0},x={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},g=n(642);function _(e,t,n){if(e&&s.isObject(e)&&e instanceof i)return e;var r=new i;return r.parse(e,t,n),r}i.prototype.parse=function(e,t,n){if(!s.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var i=e.indexOf("?"),o=-1!==i&&i<e.indexOf("#")?"?":"#",c=e.split(o);c[0]=c[0].replace(/\\/g,"/");var _=e=c.join(o);if(_=_.trim(),!n&&1===e.split("#").length){var E=u.exec(_);if(E)return this.path=_,this.href=_,this.pathname=E[1],E[2]?(this.search=E[2],this.query=t?g.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var b=a.exec(_);if(b){var S=(b=b[0]).toLowerCase();this.protocol=S,_=_.substr(b.length)}if(n||b||_.match(/^\/\/[^@\/]+@[^@\/]+/)){var v="//"===_.substr(0,2);!v||b&&y[b]||(_=_.substr(2),this.slashes=!0)}if(!y[b]&&(v||b&&!x[b])){for(var A,O,w=-1,T=0;T<f.length;T++){-1!==(I=_.indexOf(f[T]))&&(-1===w||I<w)&&(w=I)}-1!==(O=-1===w?_.lastIndexOf("@"):_.lastIndexOf("@",w))&&(A=_.slice(0,O),_=_.slice(O+1),this.auth=decodeURIComponent(A)),w=-1;for(T=0;T<p.length;T++){var I;-1!==(I=_.indexOf(p[T]))&&(-1===w||I<w)&&(w=I)}-1===w&&(w=_.length),this.host=_.slice(0,w),_=_.slice(w),this.parseHost(),this.hostname=this.hostname||"";var N="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!N)for(var F=this.hostname.split(/\./),k=(T=0,F.length);T<k;T++){var L=F[T];if(L&&!L.match(h)){for(var R="",j=0,C=L.length;j<C;j++)L.charCodeAt(j)>127?R+="x":R+=L[j];if(!R.match(h)){var D=F.slice(0,T),$=F.slice(T+1),P=L.match(d);P&&(D.push(P[1]),$.unshift(P[2])),$.length&&(_="/"+$.join(".")+_),this.hostname=D.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),N||(this.hostname=r.toASCII(this.hostname));var M=this.port?":"+this.port:"",Q=this.hostname||"";this.host=Q+M,this.href+=this.host,N&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==_[0]&&(_="/"+_))}if(!m[S])for(T=0,k=l.length;T<k;T++){var B=l[T];if(-1!==_.indexOf(B)){var G=encodeURIComponent(B);G===B&&(G=escape(B)),_=_.split(B).join(G)}}var V=_.indexOf("#");-1!==V&&(this.hash=_.substr(V),_=_.slice(0,V));var U=_.indexOf("?");if(-1!==U?(this.search=_.substr(U),this.query=_.substr(U+1),t&&(this.query=g.parse(this.query)),_=_.slice(0,U)):t&&(this.search="",this.query={}),_&&(this.pathname=_),x[S]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){M=this.pathname||"";var J=this.search||"";this.path=M+J}return this.href=this.format(),this},i.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",n=this.pathname||"",r=this.hash||"",i=!1,a="";this.host?i=e+this.host:this.hostname&&(i=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&s.isObject(this.query)&&Object.keys(this.query).length&&(a=g.stringify(this.query));var o=this.search||a&&"?"+a||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||x[t])&&!1!==i?(i="//"+(i||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),o&&"?"!==o.charAt(0)&&(o="?"+o),t+i+(n=n.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(o=o.replace("#","%23"))+r},i.prototype.resolve=function(e){return this.resolveObject(_(e,!1,!0)).format()},i.prototype.resolveObject=function(e){if(s.isString(e)){var t=new i;t.parse(e,!1,!0),e=t}for(var n=new i,r=Object.keys(this),a=0;a<r.length;a++){var o=r[a];n[o]=this[o]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var u=Object.keys(e),c=0;c<u.length;c++){var l=u[c];"protocol"!==l&&(n[l]=e[l])}return x[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!x[e.protocol]){for(var p=Object.keys(e),f=0;f<p.length;f++){var h=p[f];n[h]=e[h]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||y[e.protocol])n.pathname=e.pathname;else{for(var d=(e.pathname||"").split("/");d.length&&!(e.host=d.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==d[0]&&d.unshift(""),d.length<2&&d.unshift(""),n.pathname=d.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var m=n.pathname||"",g=n.search||"";n.path=m+g}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var _=n.pathname&&"/"===n.pathname.charAt(0),E=e.host||e.pathname&&"/"===e.pathname.charAt(0),b=E||_||n.host&&e.pathname,S=b,v=n.pathname&&n.pathname.split("/")||[],A=(d=e.pathname&&e.pathname.split("/")||[],n.protocol&&!x[n.protocol]);if(A&&(n.hostname="",n.port=null,n.host&&(""===v[0]?v[0]=n.host:v.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===d[0]?d[0]=e.host:d.unshift(e.host)),e.host=null),b=b&&(""===d[0]||""===v[0])),E)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,v=d;else if(d.length)v||(v=[]),v.pop(),v=v.concat(d),n.search=e.search,n.query=e.query;else if(!s.isNullOrUndefined(e.search)){if(A)n.hostname=n.host=v.shift(),(N=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=N.shift(),n.host=n.hostname=N.shift());return n.search=e.search,n.query=e.query,s.isNull(n.pathname)&&s.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!v.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var O=v.slice(-1)[0],w=(n.host||e.host||v.length>1)&&("."===O||".."===O)||""===O,T=0,I=v.length;I>=0;I--)"."===(O=v[I])?v.splice(I,1):".."===O?(v.splice(I,1),T++):T&&(v.splice(I,1),T--);if(!b&&!S)for(;T--;T)v.unshift("..");!b||""===v[0]||v[0]&&"/"===v[0].charAt(0)||v.unshift(""),w&&"/"!==v.join("/").substr(-1)&&v.push("");var N,F=""===v[0]||v[0]&&"/"===v[0].charAt(0);A&&(n.hostname=n.host=F?"":v.length?v.shift():"",(N=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=N.shift(),n.host=n.hostname=N.shift()));return(b=b||n.host&&v.length)&&!F&&v.unshift(""),v.length?n.pathname=v.join("/"):(n.pathname=null,n.path=null),s.isNull(n.pathname)&&s.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},i.prototype.parseHost=function(){var e=this.host,t=o.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},225:e=>{"use strict";e.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},863:(e,t,n)=>{const r=function(){const e=n(118);function t(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}return{name:"eval-threaded-nerr",description:"emulation of regular expression engine with error permutations",compile:function(n,r,s){const i=r.expression;return{match:function(n,o,u,c,l,p,f,h){if(!i)return{};const d=function n(r,i){if("string"==typeof r)return n(s.tripleExprs[r],i);const o=u.indexOf(r);let l="min"in r?r.min:1,h="max"in r?-1===r.max?1/0:r.max:1;function d(e,n){let s=0,a=[i];const o={};("min"in r&&1!==r.min||"max"in r&&1!==r.max)&&(o.min=r.min,o.max=r.max),"semActs"in r&&(o.semActs=r.semActs),"annotations"in r&&(o.annotations=r.annotations);for(;s<h;++s){let r=[];for(let i=0;i<a.length;++i){const u=a[i],c=n(u);if(c.length>0&&0===c[0].errors.length&&c.forEach((n=>{const r="expression"in u?u.expression.solutions.slice():[];"solution"in n&&r.push(n.solution),delete n.solution,n.expression=t({type:e,solutions:r},o)})),0===c.length||c[0].errors.length>0)return s<l?c:a;r=r.concat(c)}a=r}if(a.length>0&&0===a[0].errors.length&&"semActs"in r){const e=[],t=[];a.forEach((n=>{const s=f.dispatchAll(r.semActs,"???",n);0===s.length?e.push(n):([].push.apply(n.errors,s),t.push(n))})),a=e.length>0?e:t}return a}if("TripleConstraint"===r.type){const n="negated"in r&&r.negated||0===h;n&&(l=h=1/0),void 0===i.avail[o]&&(i.avail[o]=c[o].map((e=>e.tNo)));const u={};("min"in r&&1!==r.min||"max"in r&&1!==r.max)&&(u.min=r.min,u.max=r.max),"semActs"in r&&(u.semActs=r.semActs),"annotations"in r&&(u.annotations=r.annotations);const d=i.avail[o].splice(0,l),y=n?0===d.length:d.length>=l,x=[],g=i.matched;if(y)do{const e=d.reduce(((e,t)=>{const n=p[t],s={type:"TestedTriple",subject:n.subject,predicate:n.predicate,object:a(n.object)},u=c[o].find((e=>e.tNo===t));u.res&&Object.keys(u.res).length>0&&(s.referenced=u.res);const l=i.errors.concat("semActs"in r?f.dispatchAll(r.semActs,s,s):[]);return l.length>0?e.fail.push({tripleNo:t,tested:s,semActErrors:l}):e.pass.push({tripleNo:t,tested:s,semActErrors:l}),e}),{pass:[],fail:[]});if(0===e.fail.length){const t=0===d.length?i.errors.slice():[],n=m(e.pass,t);x.push(n)}else e.fail.forEach((e=>x.push(m([e],e.semActErrors))));function m(e,n){return{avail:i.avail.map((e=>e.slice())),errors:n,matched:g.concat({tNos:e.map((e=>e.tripleNo))}),expression:t({type:"TripleConstraintSolutions",predicate:r.predicate},"valueExpr"in r?{valueExpr:r.valueExpr}:{},"id"in r?{productionLabel:r.id}:{},u,{solutions:e.map((e=>e.tested))})}}}while(i.avail[o].length>0&&d.length<h&&(d.push(i.avail[o].shift()),1));else{let a=null;"string"==typeof r.valueExpr?(a=r.valueExpr,e.isBlank(a)&&(a=s.shapeExprs[a])):r.valueExpr&&(a=t({},r.valueExpr)),x.push({avail:i.avail,errors:i.errors.concat([t({type:n?"NegatedProperty":"MissingProperty",property:r.predicate},a?{valueExpr:a}:{})]),matched:g})}return x}if("OneOf"===r.type)return d("OneOfSolutions",(e=>{const t=[],s=[];return r.expressions.forEach((r=>{const i={avail:e.avail.map((e=>e.slice())),errors:e.errors,matched:e.matched},a=n(r,i);0===a[0].errors.length?([].push.apply(t,a),a.forEach((e=>{const t="solution"in i?i.solution.expressions:[];"expression"in e&&t.push(e.expression),delete e.expression,e.solution={type:"OneOfSolution",expressions:t}}))):[].push.apply(s,a)})),t.length>0?t:s}));if("EachOf"===r.type)return y(d("EachOfSolutions",(e=>r.expressions.reduce(((e,t)=>y(e.reduce(((e,r)=>{const s=n(t,r);return s.forEach((e=>{if(0===e.errors.length){const t="solution"in r?r.solution.expressions.slice():[];"expression"in e&&t.push(e.expression),delete e.expression,e.solution={type:"EachOfSolution",expressions:t}}})),e.concat(s)}),[]))),[e]))));function y(e){return e.reduce(((e,t)=>0===t.errors.length?e.errors?{errors:!1,l:[t]}:{errors:!1,l:e.l.concat(t)}:e.errors?{errors:!0,l:e.l.concat(t)}:e),{errors:!0,l:[]}).l}runtimeError("unexpected expr type: "+r.type)}(i,{avail:[],matched:[],errors:[]}),m=d.reduce(((e,t)=>{if(t.errors.length>0)return e;const n={};return Object.keys(l).forEach((e=>{"NO_TRIPLE_CONSTRAINT"!==l[e]&&(n[e]=l[e])})),t.matched.forEach((e=>{e.tNos.forEach((e=>{delete n[e]}))})),Object.keys(n).forEach((e=>{t.errors.push({type:"ExcessTripleViolation",triple:p[e],constraint:u[n[e]]})})),null!==e?e:Object.keys(n).length>0?null:t}),null);return null!==m?function(t,n,s,i){function o(u){if("OneOfSolutions"===u.type||"EachOfSolutions"===u.type)u.solutions.forEach((e=>{e.expressions.forEach((e=>{o(e)}))}));else{if("TripleConstraintSolutions"!==u.type)throw Error("unexpected expr type in "+JSON.stringify(u));u.solutions=u.solutions.map((o=>{if("TestedTriple"===o.type)return o;const u=s[o.tripleNo],c=n[o.constraintNo],l={type:"TestedTriple",subject:u.subject,predicate:u.predicate,object:a(u.object)};function p(t,n,s){const i=s(t,n);if("errors"in i){const s={type:"ReferenceError",focus:t,shape:n};return"string"==typeof n&&e.isBlank(n)&&(s.referencedShape=r),s.errors=i,[s]}return(("solution"in i||"solutions"in i)&&0!==Object.keys(i.solution||i.solutions).length||"Recursion"===i.type)&&(l.referenced=i),[]}function f(e,t){return p(e,t,recurse)}function h(e,t){return p(e,t,direct)}const d="valueExpr"in c?checkValueExpr(c.inverse?u.subject:u.object,c.valueExpr,f,h):[];return 0===d.length&&"semActs"in c&&[].push.apply(d,i.dispatchAll(c.semActs,l,l)),d.length>0&&(t.errors=t.errors||[],t.errors=t.errors.concat(d)),l}))}}Object.keys(t).length>0&&o(t);"semActs"in r&&(t.semActs=r.semActs);return t}(m.expression,u,p,f):d.length>1?{type:"PossibleErrors",errors:d.reduce(((e,t)=>e.concat([t.errors])),[])}:d[0]}};function a(t){if('"'!==t[0])return t;const n={value:e.getLiteralValue(t)},r=e.getLiteralType(t);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=e.getLiteralLanguage(t);return s&&(n.language=s),n}}}}();e.exports=r},865:(e,t,n)=>{e.exports=function(e){const t=n(118);n(279);const r="http://www.w3.org/2001/XMLSchema#",s=[r+"integer",r+"nonPositiveInteger",r+"negativeInteger",r+"long",r+"int",r+"short",r+"byte",r+"nonNegativeInteger",r+"unsignedLong",r+"unsignedInt",r+"unsignedShort",r+"unsignedByte",r+"positiveInteger"],i=[r+"decimal"].concat(s),a=[r+"float",r+"double"].concat(i),o={"http://www.w3.org/2001/XMLSchema#integer":function(e,t){return e.match(/^[+-]?[0-9]+$/)||t("illegal integer value '"+e+"'"),parseInt(e)},"http://www.w3.org/2001/XMLSchema#decimal":function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal integer value '"+e+"'"),parseFloat(e)},"http://www.w3.org/2001/XMLSchema#float":function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal integer value '"+e+"'"),parseFloat(e)},"http://www.w3.org/2001/XMLSchema#double":function(e,t){return e.match(/[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/)||t("illegal integer value '"+e+"'"),Number(e)}},u={length:function(e,t){return e.length===t},minlength:function(e,t){return e.length>=t},maxlength:function(e,t){return e.length<=t}},c={mininclusive:function(e,t){return e>=t},minexclusive:function(e,t){return e>t},maxinclusive:function(e,t){return e<=t},maxexclusive:function(e,t){return e<t}},l={totaldigits:function(e,t){const n=e.match(/[0-9]/g);return n&&n.length<=t},fractiondigits:function(e,t){const n=e.match(/^[+-]?[0-9]*\.?([0-9]*)$/);return n&&n[1].length<=t}};function p(e){if('"'!==e[0])return e;const n={value:t.getLiteralValue(e)},r=t.getLiteralType(e);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=t.getLiteralLanguage(e);return s&&(n.language=s),n}function f(e,t,n){function r(){this.type="Epsilon"}function s(e,t,n,r,s){this.type="TripleConstraint",this.inverse=!!n,this.negated=!!r,this.predicate=t,void 0!==s&&(this.valueExpr=s)}function i(e){this.type="Choice",this.disjuncts=e}function a(e){this.type="EachOf",this.conjuncts=e}function o(e,t){this.type="SemActs",this.expression=e,this.semActs=t}function u(e){this.type="KleeneStar",this.expression=e}return e?function e(n,c){let l,p;function f(e,t,n){if(void 0===t&&(t=1),void 0===n&&(n=1),1===t&&1===n)return e;const s=-1===n?new u(e):h(n-t).reduce((function(t,n,s){return new i(0===s?[e,new r]:[new a([e,t]),new r])}),void 0);return 0!==t?new a(h(t).map((function(t){return e})).concat(s)):s}if("TripleConstraint"===n.type){const e="valueExprRef"in n?c.valueExprDefns[n.valueExprRef]:n.valueExpr;return l=f(new s(t.push(n)-1,n.predicate,n.inverse,n.negated,e),n.min,n.max),n.semActs?new o(l,n.semActs):l}if("OneOf"===n.type)return p=new i(n.expressions.map((function(t){return e(t,c)}))),l=f(p,n.min,n.max),n.semActs?new o(l,n.semActs):l;if("EachOf"===n.type)return p=new a(n.expressions.map((function(t){return e(t,c)}))),l=f(p,n.min,n.max),n.semActs?new o(l,n.semActs):l;if("Inclusion"===n.type){return e(c._index.shapeExprs[n.include].expression,c)}throw Error("unexpected expr type: "+n.type)}(e,n):new r}function h(e){return 0===e?[]:Array(e).join(" ").split(/ /)}function d(e,t,n){t in e||y("expected "+JSON.stringify(e)+" to have a '"+t+"' attribute."),arguments.length>2&&e[t]!==n&&y("expected "+t+" attribute '"+e[t]+"' to equal '"+n+"'.")}function m(){}function y(){const e=Array.prototype.join.call(arguments,""),t=new Error("Runtime error: "+e);throw Error.captureStackTrace(t,y),t}return{construct:function i(h,x,g){if(!(this instanceof i))return new i(h,x,g);this.type="ShExValidator",g=g||{},this.options=g,this.options.or=this.options.or||"someOf",this.options.partition=this.options.partition||"exhaustive","noCache"in g&&g.noCache||(this.known=function(){const e={},t={};return{cached:function(n,r){let s=e[n];if(!s)return e[n]=s=[],void(t[n]=[]);const i=s.indexOf(r);return-1===i?void 0:t[n][i]},remember:function(n,r,s){const i=e[n];if(i){if(-1!==i.indexOf(r))throw Error("not expecting duplicate key "+key)}else e[n]=[],t[n]=[];e[n].push(r),t[n].push(s)}}}());const _=this;this.schema=h,this._expect=this.options.lax?m:d,this._optimize={},this.reset=function(){};const E=this.options.regexModule||n(991);let b=0;const S=g.nextBNode||function(){return"_:b"+b++};this.getAST=function(){return{type:"AST",shapes:Object.keys(this.schema._index.shapeExprs).reduce((function(e,t){return e[t]={type:"ASTshape",expression:f(_.schema._index.shapeExprs[t].expression,[],_.schema)},e}),{})}},this.indexTripleConstraints=function(e){const t=[];return e&&function e(n){"TripleConstraint"===n.type?t.push(n):"OneOf"===n.type||"EachOf"===n.type?n.expressions.forEach((function(t){e(t)})):"Inclusion"===n.type?e(h.productions[n.include]):y("unexpected expr type: "+n.type)}(e),t},this.validate=function(t,n,r,s,i){if(r&&r!==e.Validator.start||(h.start||y("start production not defined"),r=h.start),"string"!=typeof r)return this._validateShapeExpr(t,n,r,"_: -start-",s,i);r in this.schema._index.shapeExprs||y("shape "+r+" not defined");const a=r;void 0===i&&(i={});const o=n+"|"+a;if(o in i)return{type:"Recursion",node:p(n),shape:a};i[o]={point:n,shapeLabel:a};const u=this._validateShapeExpr(t,n,h._index.shapeExprs[a],a,s,i);return delete i[o],u},this._validateShapeExpr=function(e,t,n,r,s,i){if("known"in this&&this.known.cached(t,n))return this.known.cached(t,n);let a=null;if(""===t)throw Error("validation needs a valid focus node");if("string"==typeof n)a=this._validateShapeExpr(e,t,h._index.shapeExprs[n],n,s,i);else if("NodeConstraint"===n.type){const e=this._errorsMatchingNodeConstraint(t,n,null);a=e.length?{type:"Failure",node:p(t),shape:r,errors:e.map((function(e){return{type:"NodeConstraintViolation",shapeExpr:n}}))}:{type:"NodeConstraintTest",node:p(t),shape:r,shapeExpr:n}}else if("Shape"===n.type)a=this._validateShape(e,t,E.compile(h,n),n,r,s,i);else if("ShapeExternal"===n.type)a=this.options.validateExtern(e,t,r,s,i);else if("ShapeOr"===n.type){const o=[];a={type:"ShapeOrFailure",errors:o};for(let u=0;u<n.shapeExprs.length;++u){const c=n.shapeExprs[u],l=this._validateShapeExpr(e,t,c,r,s,i);if(!("errors"in l)){a={type:"ShapeOrResults",solution:l};break}o.push(l)}}else if("ShapeNot"===n.type){const o=this._validateShapeExpr(e,t,n.shapeExpr,r,s,i);a="errors"in o?{type:"ShapeNotResults",solution:o}:{type:"ShapeNotFailure",errors:o}}else{if("ShapeAnd"!==n.type)throw Error("expected one of Shape{Ref,And,Or} or NodeConstraint, got "+JSON.stringify(n));{const o=[];a={type:"ShapeAndResults",solutions:o};for(let u=0;u<n.shapeExprs.length;++u){const c=n.shapeExprs[u],l=this._validateShapeExpr(e,t,c,r,s,i);if("errors"in l){a={type:"ShapeAndFailure",errors:l};break}o.push(l)}}}return"known"in this&&this.known.remember(t,n,a),a},this._validateShape=function(n,r,s,i,a,o,u){const c=this;void 0===o&&(o=0);new Array(o+1).join("  ");let l=null;if("startActs"in h&&!this.semActHandler.dispatchAll(h.startActs,null,{}))return null;const f=[],d=this.indexTripleConstraints(i.expression),m=[];for(let h=0;h<1;++h){function y(e,t){return c.validate(n,e,t,o+1,u)}function g(e,t){return c._validateShapeExpr(n,e,t,a,o,u)}function _(e,t,n,r){return c._errorsMatchingShapeExpr(e,t,n,r)}const h=s.match(n,r,d,E,f,y,g,this.semActHandler,_,null);function E(s,i,a,o){const u=d[s],l={cs:r},p=new e.rdfjs.Store;x.visitTripleConstraint(u,l,S,p,{_maybeSet:()=>{}},c.schema,n,y,g,_);const f=o.length,h=p.getQuads().map(t.internalTriple);return o.push.apply(o,h),Array.apply(null,{length:h.length}).map(((e,t)=>t+f))}if("errors"in h){if(m.push({errors:h.errors}),"exhaustive"!==c.options.partition)break;continue}const b={type:"ShapeTest",node:p(r),shape:a};if(Object.keys(h).length>0&&(b.solution=h),!("semActs"in i)||this.semActHandler.dispatchAll(i.semActs,h,b))l=b;else if(m.push({errors:[{type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}]}),"exhaustive"!==c.options.partition)break}if(null===l){const e=[];l={type:"Failure",node:p(r),shape:a,errors:e.concat(1===m.length?m[0].errors:m)}}return"startActs"in h&&0===o&&(l.startActs=h.startActs),l},this._triplesMatchingShapeExpr=function(e,t,n,r,s){const i=this,a=[],o=[];return e.forEach((function(e){const u=n?e.subject:e.object,c=void 0===t?[]:i._errorsMatchingShapeExpr(u,t,r,s);0===c.length?o.push(e):-1===o.indexOf(e)&&a.push({triple:e,errors:c})})),{hits:o,misses:a}},this._errorsMatchingShapeExpr=function(e,t,n,r){const s=this;if("string"==typeof t)return n?n(e,t):[];if("NodeConstraint"===t.type)return this._errorsMatchingNodeConstraint(e,t,null);if("Shape"===t.type)return void 0===r?[]:r(e,t);if("ShapeOr"===t.type){const i=[];for(let a=0;a<t.shapeExprs.length;++a){const o=s._errorsMatchingShapeExpr(e,t.shapeExprs[a],n,r);if(0===o.length)return o;i=i.concat(o)}return i}if("ShapeAnd"===t.type)return t.shapeExprs.reduce((function(t,i,a){return t.concat(s._errorsMatchingShapeExpr(e,i,n,r,!0))}),[]);throw Error("unknown value expression type '"+t.type+"'")},this._errorsMatchingNodeConstraint=function(e,n,i){const f=[];function h(){const t=Array.prototype.join.call(arguments,"");f.push("Error validating "+e+" as "+JSON.stringify(n)+": "+t)}if("nodeKind"in n&&(-1===["iri","bnode","literal","nonliteral"].indexOf(n.nodeKind)&&h("unknown node kind '"+n.nodeKind+"'"),t.isBlank(e)?"iri"!==n.nodeKind&&"literal"!==n.nodeKind||h("blank node found when "+n.nodeKind+" expected"):t.isLiteral(e)?"literal"!==n.nodeKind&&h("literal found when "+n.nodeKind+" expected"):"bnode"!==n.nodeKind&&"literal"!==n.nodeKind||h("iri found when "+n.nodeKind+" expected")),n.datatype&&n.values&&h("found both datatype and values in "+tripleConstraint),n.datatype&&(t.isLiteral(e)?t.getLiteralType(e)!==n.datatype&&h("mismatched datatype: "+t.getLiteralType(e)+" !== "+n.datatype):h("mismatched datatype: "+e+" is not a literal with datatype "+n.datatype)),n.values&&(t.isLiteral(e)&&n.values.reduce(((t,n)=>{if(t)return!0;if("object"!=typeof n||!("value"in n))return!1;const r=p(e);return n.value===r.value&&n.type===r.type&&n.language===r.language}),!1)||-1!==n.values.indexOf(e)||n.values.some((function(t){if("object"==typeof t&&!("value"in t)){if(d(t,"type","StemRange"),"object"==typeof t.stem)d(t.stem,"type","Wildcard");else if(!e.startsWith(t.stem))return!1;return!t.exclusions||!t.exclusions.some((function(t){return"object"==typeof t?(d(t,"type","Stem"),e.startsWith(t.stem)):e===t}))}}))||h("value "+e+" not found in set "+n.values)),"pattern"in n){const r=new RegExp(n.pattern);(m=e,t.isIRI(m)?m:t.isLiteral(m)?t.getLiteralValue(m):m.substr(2)).match(r)||h("value "+e+" did not match pattern "+n.pattern)}var m;const y=t.isLiteral(e)?t.getLiteralValue(e):t.isBlank(e)?e.substring(2):e,x=t.isLiteral(e)?t.getLiteralType(e):null,g=-1!==s.indexOf(x)?r+"integer":-1!==a.indexOf(x)?x:void 0;return Object.keys(u).forEach((function(t){t in n&&!u[t](y,n[t])&&h("facet violation: expected "+t+" of "+n[t]+" but got "+e)})),Object.keys(c).forEach((function(t){t in n&&(g?c[t](o[g](y,h),n[t])||h("facet violation: expected "+t+" of "+n[t]+" but got "+e):h("facet violation: numeric facet "+t+" can't apply to "+e))})),Object.keys(l).forEach((function(t){t in n&&(g===r+"integer"||g===r+"decimal"?l[t](""+o[g](y,h),n[t])||h("facet violation: expected "+t+" of "+n[t]+" but got "+e):h("facet violation: numeric facet "+t+" can't apply to "+e))})),f},this.semActHandler={handlers:{},results:{},register:function(e,t){this.handlers[e]=t},dispatchAll:function(e,t,n){const r=this;return e.reduce((function(e,s){if(e&&s.name in r.handlers){const i="code"in s?s.code:_.options.semActs[s.name],a="extensions"in n&&s.name in n.extensions,o=a?n.extensions[s.name]:{};return e=e&&r.handlers[s.name].dispatch(i,t,o),!a&&Object.keys(o).length>0&&("extensions"in n||(n.extensions={}),n.extensions[s.name]=o),e}return e}),!0)}}},options:{or:{oneOf:"exactly one disjunct must pass",someOf:"one or more disjuncts must pass",firstOf:"disjunct evaluation stops after one passes"},partition:{greedy:"each triple constraint consumes all triples matching predicate and object",exhaustive:"search all mappings of triples to triple constriant"}}}}},991:(e,t,n)=>{const r=function(){const e=n(118),t="<span class='keyword' title='Split'>|</span>",r="<span class='keyword' title='Repeat'>×</span>",s="<span class='keyword' title='Match'>␃</span>";function i(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}return{name:"eval-simple-1err",description:"simple regular expression engine with n out states",compile:function(n,a){const o=a.expression;return function(){const e=[],i=p(s,[]);let a=i;let c;if(o){const e=l(o,[]);f(e.tail,i),a=e.start}return{algorithm:"rbenx",end:i,states:e,start:a,match:u};function l(s,i){let a,o,u;function h(t,n){return null!=s.min&&1!==s.min||null!=s.max&&1!==s.max?(a=p(r,[t]),e[a].expr=s,e[a].min="min"in s?s.min:1,e[a].max="max"in s?-1===s.max?1/0:s.max:1,f(n,a),{start:a,tail:[a]}):{start:t,tail:n}}if("TripleConstraint"===s.type)return a=p(s,[]),e[a].stack=i,{start:a,tail:[a]};if("OneOf"===s.type)return u=[],o=[],s.expressions.forEach((function(e,t){c=l(e,i.concat({c:s,e:t})),o.push(c.start),u=u.concat(c.tail)})),a=p(t,o),e[a].expr=s,h(a,u);if("EachOf"===s.type)return s.expressions.forEach((function(e,t){c=l(e,i.concat({c:s,e:t})),0===t?a=c.start:f(u,c.start),u=c.tail})),h(a,u);if("Inclusion"===s.type){return l(n.productions[s.include],i)}runtimeError("unexpected expr type: "+s.type)}function p(t,n,r){const s=e.length;return e.push({c:t,outs:n}),r&&(e[s].negated=!0),s}function f(t,n){t.forEach((t=>{e[t].outs.push(n)}))}}();function u(s,a,o,u,l,p,f,h,d,m){const y=this;let x=[],g=[];function _(e,t){const n=Object.keys(t).map((e=>e+":"+t[e])).join(",");return n.length?e+"-"+n:""+e}function E(e,n,s,i){i=i||[];const a=_(n,s.repeats);if(-1!==i.indexOf(a))return;i.push(a);const o=y.states[n];if(o.c===t)return o.outs.reduce(((t,n,r)=>t.concat(E(e,n,s,i))),[]);if(o.c===r){const t=[];n in s.repeats||(s.repeats[n]=0);const r=s.repeats[n];return r<o.max&&(t=t.concat(E(e,o.outs[0],function(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(n[r]=parseInt(r)==t?e.repeats[r]+1:e.repeats[r],n)),{});return{state:e.state,repeats:n,matched:e.matched,avail:e.avail.slice(),stack:e.stack}}(s,n),i))),r>=o.min&&r<=o.max&&(t=t.concat(E(e,o.outs[1],function(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(parseInt(r)!==t&&(n[r]=e.repeats[r]),n)),{});return{state:e.state,repeats:n,matched:e.matched,avail:e.avail.slice(),stack:e.stack}}(s,n),i))),t}return[e.push({state:n,repeats:s.repeats,avail:s.avail.map((e=>e.slice())),stack:s.stack,matched:s.matched,errors:s.errors})-1]}if(1===y.states.length)return c([],o,l,p,f,h,d);let b=null;for(E(x,this.start,{repeats:{},avail:[],matched:[],stack:[],errors:[]});x.length;){g.length=0,m&&m.push({threads:[]});for(let e=0;e<x.length;++e){const t=x[e];if(t.state===y.end)continue;const n=y.states[t.state],s=g.length,i=o.indexOf(n.c),a="min"in n.c?n.c.min:1,c="max"in n.c?-1===n.c.max?1/0:n.c.max:1;"negated"in n.c&&n.c.negated&&(a=c=0),void 0===t.avail[i]&&(t.avail[i]=u(i,a,c,l));const p=t.avail[i].splice(0,c);if(p.length>=a)do{const e=y.states.map((e=>e.c===r?e.expr:null)),s=n.stack.map((n=>{let r=t.repeats[e.indexOf(n.c)];return void 0===r?r=0:r-=1,{c:n.c,e:n.e,i:r}})),i={c:n.c,triples:p,stack:s};t.matched=t.matched.concat(i),n.outs.forEach((e=>{E(g,e,t)}))}while(t.avail[i].length>0&&p.length<c&&(p.push(t.avail[i].shift()),1));m&&m[m.length-1].threads.push({state:x[e].state,to:g.slice(s).map((e=>_(e.state,e.repeats)))})}if(0===g.length&&null===b)return S(v(x,y.states));const e=x;x=g,g=e;const t=x.reduce(((e,t)=>null!==e?e:t.state===y.end?t:null),null);t&&(b=t)}if(null===b)return S(v(x,y.states));function S(e){return{type:"Failure",node:a,errors:e}}function v(t,r){const s=r[r.length-1];return t.map((t=>{const r=i({},y.states[t.state].c.valueExpr);if("reference"in r){const t=r.reference;e.isBlank(t)&&(r.reference=n.shapes[t])}return i({type:s.c.negated?"NegatedProperty":t.state===y.end?"ExcessTripleViolation":"MissingProperty",property:s.c.predicate},Object.keys(r).length>0?{valueExpr:r}:{})}))}return"errors"in b.matched?b.matched:c(b.matched,o,l,p,f,h,d)}function c(t,n,r,s,i,o,u){let c=[];const l=[],p=[],f=t.reduce(((t,n)=>{let a,f=0,h=t;for(;f<c.length&&n.stack[f].c===c[f].c&&n.stack[f].i===c[f].i&&n.stack[f].e===c[f].e;)h=h.solutions[c[f].i].expressions[c[f].e],++f;for(;f<n.stack.length;){if(f>=c.length&&c.push({}),n.stack[f].c!==c[f].c){if(a=[],h.type="EachOf"===n.stack[f].c.type?"EachOfSolutions":"OneOfSolutions",h.solutions=a,"min"in n.stack[f].c&&(h.min=n.stack[f].c.min),"max"in n.stack[f].c&&(h.max=n.stack[f].c.max),"annotations"in n.stack[f].c&&(h.annotations=n.stack[f].c.annotations),"semActs"in n.stack[f].c&&(h.semActs=n.stack[f].c.semActs),h=a,c[f].i=null,"semActs"in n.stack[f].c&&!o.dispatchAll(n.stack[f].c.semActs,"???",h))throw{type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}}else h=h.solutions;if(n.stack[f].i!==c[f].i?(a=[],h[n.stack[f].i]={type:"EachOf"===n.stack[f].c.type?"EachOfSolution":"OneOfSolution",expressions:a},h=a,c[f].e=null):h=h[c[f].i].expressions,n.stack[f].e===c[f].e)throw"how'd we get here?";a={},h[n.stack[f].e]=a,n.stack[f].e>0&&void 0===h[n.stack[f].e-1]&&-1===p.indexOf(h)&&p.push(h),h=a,c.length=f+1,++f}return h.type="TripleConstraintSolutions","min"in n.c&&(h.min=n.c.min),"max"in n.c&&(h.max=n.c.max),h.predicate=n.c.predicate,"valueExpr"in n.c&&(h.valueExpr=n.c.valueExpr),"productionLabel"in n.c&&(h.productionLabel=n.c.productionLabel),h.solutions=n.triples.map((t=>{const a=r[t],c={type:"TestedTriple",subject:a.subject,predicate:a.predicate,object:function(t){if('"'!==t[0])return t;const n={value:e.getLiteralValue(t)},r=e.getLiteralType(t);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=e.getLiteralLanguage(t);s&&(n.language=s);return n}(a.object)};function p(t,n,r){const s=r(t,n);if("errors"in s){const r={type:"ReferenceError",focus:t,shape:n,errors:s};return"string"==typeof shapeLabel&&e.isBlank(shapeLabel)&&(r.referencedShape=n),[r]}return("solution"in s&&0!==Object.keys(s.solution).length||"Recursion"===s.type)&&(c.referenced=s),[]}return"valueExpr"in h&&[].push.apply(l,u(h.inverse?a.subject:a.object,h.valueExpr,(function(e,t){return p(e,t,s)}),(function(e,t){return p(e,t,i)}))),0===l.length&&"semActs"in n.c&&!o.dispatchAll(n.c.semActs,a,c)&&l.push({type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}),c})),"annotations"in n.c&&(h.annotations=n.c.annotations),"semActs"in n.c&&(h.semActs=n.c.semActs),c=n.stack.slice(),t}),{});return l.length?{type:"SemActFailure",errors:l}:(p.forEach((e=>{for(let t=0;t<e.length;++t)null!==e[t]&&void 0!==e[t]||e.splice(t--,1)})),"semActs"in a&&(f.semActs=a.semActs),f)}}}}();e.exports=r},961:e=>{const t={collapseSpaces:function(e){return e.replace(/  +/g," ")},trimQuotes:function(e){return void 0===e||e.length<2||'"'!==e[0]&&"'"!==e[0]||e[0]!==e[e.length-1]?e:e.substring(1,e.length-1)},unescapeMetaChars:function(e){return e.replace(/\\([\/^$])/g,"$1")}};e.exports=t},386:(e,t,n)=>{const r=function(){const e=n(445),t=n(521);n(961);function r(e){if(void 0===e)throw Error("Invalid extension function: "+e+"!");const t=(e=e.trim()).indexOf("(",0),n=e.lastIndexOf(")");if(t<2||n<4||n<=t+1||n!=e.length-1)throw Error("Invalid extension function: "+e+"!");return{name:e.substring(0,t),args:e.substring(t+1,n)}}return{lift:function(n,s,i){const a=r(n);switch(a.name){case"hashmap":return e.lift(n,s,i,a.args);case"regex":return t.lift(n,s,i,a.args);case"test":return n;default:throw Error("Unknown extension: "+n+"!")}},lower:function(n,s,i){const a=r(n);switch(a.name){case"hashmap":return e.lower(n,s,i,a.args);case"regex":return t.lower(n,s,i,a.args);case"test":return n;default:throw Error("Unknown extension: "+n+"!")}}}}();e.exports=r},445:(e,t,n)=>{const r=function(){const e=n(961);function t(e,t){if(void 0===t||0===t.length)throw Error("Hashmap extension requires a variable name and map as arguments, but found none!");const n=/^[ ]*([\w:<>]+)[ ]*,[ ]*({.*)$/.exec(t);if(null===n||n.length<3)throw Error("Hashmap extension requires a variable name and map as arguments, but found: "+e+"!");const r=n[1],s=n[2];let i;try{if(i=JSON.parse(s),0===Object.keys(i).length)throw Error("Empty hashmap!")}catch(t){throw Error("Hashmap extension unable to parse map in "+e+"!"+t.message)}const a=Object.values(i);if(a.length!=[...new Set(a)].length)throw Error("Hashmap extension requires unique key/value pairs!");return{varName:r,hash:i}}function r(e,t){const n=e.match(/^([\w]+):(.*)$/);if(null!==n&&3==n.length){const r=n[1],s=n[2];if(0===r.length||0===s.length)throw Error("Hashmap extension given invalid target variable name "+e);if(!(r in t))throw Error("Hashmap extension given undefined variable prefix "+r);expandedName=t[r]+s}else expandedName=e;return expandedName}return{lift:function(n,s,i,a){const o=t(n,a),u=r(o.varName,i),c=e.trimQuotes(s);if(0===c.length)throw Error("Hashmap extension has no input");return{[u]:o.hash[c]}},lower:function(n,s,i,a){const o=t(n,a),u=r(o.varName,i),c=e.trimQuotes(s.get(u));if(void 0===c)throw Error("Unable to find mapped value for "+o.varName);const l=function(e,t){const n=Object.keys(e).find((n=>t===e[n]));if(!n)throw Error("Hashmap extension was unable to invert the value "+t+" with map "+JSON.stringify(e,{depth:null})+"!");return n}(o.hash,c);return 0!==l.length?e.unescapeMetaChars(e.collapseSpaces(l)):l}}}();e.exports=r},521:(e,t,n)=>{const r=function(){const e=n(961),t="(\\?<(?:[a-zA-Z:]+|<[^>]+>)>)";function r(t,n,r){const s=function(e,t){const n=e.match(/^ *(?:<([^>]*)>|([^:]*):([^ ]*)) *$/);if(null===n)throw Error('variable "'+e+'" did not match expected pattern!');let r;if(n[1])r=n[1];else{if(!(n[2]in t))throw Error("Unknown prefix "+n[2]+' in "'+e+'"!');r=t[n[2]]+n[3]}return r}(e.unescapeMetaChars(t.substr(2,t.length-3)),r);if(s in n)throw Error("unable to process prefixes in "+s);return n.push(s),s}function s(e){if(/^\s*\/.*\/\s*$/.test(e)&&(e=/^\s*\/(.*)\/\s*$/.exec(e)[1]).length<1)throw Error(mapDirective+" is missing the required regex pattern");return e}return{lift:function(e,n,i,a){a=s(a);const o=[],u=a.replace(RegExp(t,"g"),(function(e,t,n,s){return r(t,o,i),""}));if(0===o.length)throw Error("Found no capture variable in "+e+"!");let c;try{c=n.match(RegExp(u))}catch(t){throw Error("Error pattern matching "+e+" with "+n+": "+t.message)}if(!c)throw Error(e+' found no match for input "'+n+'"!');const l={};for(let e=1;e<c.length;++e)l[o[e-1]]=c[e];return l},lower:function(n,i,a,o){o=s(o);const u=[];let c=!1,l=o.replace(RegExp("\\("+t+"[^)]+\\)","g"),(function(t,s,o,l){c=!0;const p=r(s,u,a),f=i.get(p);if(void 0===f)throw Error("Unable to process "+n+' because variable "'+p+'" was not found!');return e.trimQuotes(f)}));if(!c)throw Error("Found no capture variable in "+n+"!");return l=e.collapseSpaces(l),e.unescapeMetaChars(l)}}}();e.exports=r},279:(e,t,n)=>{e.exports=function(e){const t=n(386),r=(n(670),n(713).default),s=n(865)(e),i="http://shex.io/extensions/Map/#",a=/^ *(?:<([^>]*)>|([^:]*):([^ ]*)) *$/;function o(e){if("object"!=typeof e)return e;const t='"'+e.value+'"';return"language"in e?t+"@"+e.language:"type"in e?t+"^^"+e.type:t}function u(e,t){const n=/(?:^|"\^\^)([^:\/#"'\^_]*):[^\/]*$/.exec(e);let r,s,i;return n&&(r=n[1],s=t[r],i=n.index),void 0===s?e:0===i?s+e.substr(r.length+1):e.substr(0,i+3)+s+e.substr(i+r.length+4)}return{register:function(n,s){if(void 0===s||!("ShExTerm"in s))throw Error("SemAct extensions must be called with register(validator, {ShExTerm, ...)");const c="_prefixes"in n.schema?n.schema._prefixes:{};return n.semActHandler.results[i]={},n.semActHandler.register(i,{dispatch:function(e,r,s){function o(e){const t=Error(e);throw Error.captureStackTrace(t,o),t}const u=function(t,r){if(!t)throw Error("Invocation error: "+i+' code "'+e+"\" didn't match "+a);const u=function(t){return"string"==typeof t?t:t[1]?t[1]:t[2]in c?c[t[2]]+t[3]:o("unknown prefix "+t[2]+' in "'+e+'".')}(t),l=r;n.semActHandler.results[i][u]=l,s[u]=l};if(/.*[(].*[)].*$/.test(e)){const n=t.lift(e,r.object,c);for(key in n)u(key,n[key])}else{u(e.match(a),r.node||r.object)}return!0}}),{results:n.semActHandler.results[i],binder:function(e){let t=[];const n={};function r(e,t){for(let n in e)Array.isArray(e[n])?r(e[n],t):Object.keys(t).forEach((r=>{if(r in e[n])throw Error("unexpected duplicate key: "+r+" in "+JSON.stringify(e[n]));e[n][r]=t[r]}))}return function e(t){const n=[],s=[],i=Object.keys(t).reduce(((r,i)=>{let a=null;return"object"!=typeof t[i]||"value"in t[i]?a=function(e,t){const n={};return n[e]=t,n}(i,1):(a=e(t[i]),Array.isArray(t[i])?n.push(i):s.push(i)),function(e,t){const n=Object.assign({},e);return Object.keys(t).reduce(((e,n)=>{const r=n in t?t[n]:1;return e[n]=n in e?e[n]+r:r,e}),n)}(r,a)}),{});n.length>0&&(s.forEach((e=>{const s=Object.keys(t[e]).filter((e=>1===i[e]));if(s.length){const i=s.reduce(((n,r)=>(n[r]=t[e][r],n)),{});n.forEach((e=>{r(t[e],i)}))}})),s.reverse(),s.forEach((e=>{t.splice(e,1)})));return i}(e),e=Array.isArray(e)?function e(t){const n=t.reduce(((t,n)=>t.concat(Array.isArray(n)?e(n):n)),[]);return 1===n.length?n[0]:n}(e):[e],{get:function(r){if(null===t)return;if(r in n)return n[r];const s=t.slice();let i=u(s);for(;!(r in i);){let e;for(;!Array.isArray(i);)e=s.pop(),i=o(s);if(i.length===e+1)return void(t=null);s.push(e+1),i=u(s)}t=s.slice();const a=i[r];return delete i[r],a;function o(t){return t.reduce((function(e,t){return e[t]}),e)}function u(e){for(;Array.isArray(o(e));)e.push(0);return o(e)}}}},trivialMaterializer:function(t,r){let i=0;const a=t._index||s.ShExUtil.index(t);return r=r||function(){return"_:b"+i++},{materialize:function(i,o,u,c){u=u&&u!==n.start?u:t.start,c=c||new e.rdfjs.Store;const p={cs:o||r()},f=s.ShExUtil.Visitor(),h=f.visitShapeRef;return f.visitShapeRef=function(e){return this.visitShapeExpr(a.shapeExprs[e],e),h.call(f,e)},f.visitValueRef=function(e){return this.visitExpression(t.shapes[e],e),this._visitValue(e)},f.visitTripleConstraint=function(e){l(e,p,r,c,this,t,i)},f.visitShapeExpr(u,"_: -start-"),c}}},visitTripleConstraint:l};function l(e,n,c,l,p,f,h,d,m,y){function x(e,t,n){return l.addQuad(s.ShExTerm.externalTriple({subject:e,predicate:t,object:n},r)),e}const g=(e.semActs||[]).filter((function(e){return e.name===i}));if(g.length)g.forEach((function(r){const s=r.code,i=s.match(a);let c;if(i){const e=i[1]?i[1]:u(i[2]+":"+i[3],f._prefixes),t=o(h.get(e));void 0!==t&&(c=t)}void 0===c&&/[ a-zA-Z0-9]+\(/.test(s)&&(c=t.lower(s,h,f.prefixes)),void 0===c||(e.inverse?x(c,e.predicate,n.cs):x(n.cs,e.predicate,c))}));else if("string"!=typeof e.valueExpr&&"values"in e.valueExpr&&1===e.valueExpr.values.length)e.inverse?x(e.valueExpr.values[0],e.predicate,n.cs):x(n.cs,e.predicate,o(e.valueExpr.values[0]));else{const t=n.cs;let r="max"in e?-1===e.max?1/0:e.max:1;r>50&&(r=50),d||(r=1);for(let s=0;s<r;++s){if(n.cs=c(),d){if("errors"in y(n.cs,e.valueExpr,d,m))break}e.inverse?x(n.cs,e.predicate,t):x(t,e.predicate,n.cs)}p._maybeSet(e,{type:"TripleConstraint"},"TripleConstraint",["inverse","negated","predicate","valueExpr","min","max","annotations","semActs"]),n.cs=t}}},done:function(e){0===Object.keys(e.semActHandler.results[i]).length&&delete e.semActHandler.results[i]},materializer:s,url:i,extension:{hashmap:n(445),regex:n(521)},extensions:n(386),utils:n(961)}}},709:(e,t,n)=>{ShExWebApp=function(){const e=n(261);return Object.assign({},{ShExTerm:n(118),Util:n(443),Validator:n(457),Writer:n(95),Api:n(237),Parser:n(931),ShapeMap:e,ShapeMapParser:e.Parser,Map:n(279)})}(),e.exports=ShExWebApp},839:(e,t,n)=>{const r=n(14),s="http://www.w3.org/2001/XMLSchema#",i=s+"boolean",a=/^[a-z][a-z0-9+.-]*:/i,o=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,u=/(?:^|\/)\.\.?(?:$|[\/#?])/;function c(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function l(e){if(!u.test(e))return e;const t="",n=e.length,r=-1,s=-1,i=0,a="/";for(;r<n;){switch(a){case":":if(s<0&&"/"===e[++r]&&"/"===e[++r])for(;(s=r+1)<n&&"/"!==e[s];)r=s;break;case"?":case"#":r=n;break;case"/":if("."===e[r+1])switch(a=e[1+ ++r],a){case"/":t+=e.substring(i,r-1),i=r+1;break;case void 0:case"?":case"#":return t+e.substring(i,r)+e.substr(r+1);case".":if(a=e[1+ ++r],void 0===a||"/"===a||"?"===a||"#"===a){if(t+=e.substring(i,r-2),(i=t.lastIndexOf("/"))>=s&&(t=t.substr(0,i)),"/"!==a)return t+"/"+e.substr(r+1);i=r+1}}}a=e[++r]}return t+e.substring(i)}function p(){const e={};for(let t=0;t<arguments.length;t+=2)e[arguments[t]]=arguments[t+1];return e}function f(e,t){return p("@value",e,"@type",t)}O._setSchemaBase=function(e){e||(e=null),(O._schemaBase=e)&&(O._schemaBasePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(o),O._schemaBaseRoot=e[0],O._schemaBaseScheme=e[1])},O._setDataBase=function(e){e||(e=null),(O._dataBase=e)&&(O._dataBasePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(o),O._dataBaseRoot=e[0],O._dataBaseScheme=e[1])};const h=0;let d;O._resetBlanks=function(){h=0},O.reset=function(){O._prefixes=O._imports=O.valueExprDefns=O.shapes=O.productions=O.start=O.startActs=null,O._schemaBase=O._schemaBasePath=O._schemaBaseRoot=O._schemaBaseIRIScheme=null},O._setFileName=function(e){d=e};const m={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},y={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"};function x(e,t){return p("@value",b(e=e.substring(t,e.length-t),m))}function g(e){throw O.reset(),new Error(e)}function _(e,t){const n=e.indexOf(":");return E(t,e.substr(0,n))+b(e.substr(n+1),y)}function E(e,t){return t in e||g("Parse error; unknown prefix: "+t),e[t]}function b(e,t){const n=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g;try{return e=e.replace(n,(function(e,n,r,s){let i;if(n){if(i=parseInt(n,16),isNaN(i))throw new Error;return String.fromCharCode(i)}if(r){if(i=parseInt(r,16),isNaN(i))throw new Error;return i<65535?String.fromCharCode(i):String.fromCharCode(55296+((i-=65536)>>10),56320+(1023&i))}{const e=t[s];if(!e)throw new Error("no replacement found for '"+s+"'");return e}}))}catch(e){return console.warn(e),""}}const{JisonParser:S,o:v}=n(41),{JisonLexer:A}=n(752);function O(e={},t=new w(e)){const n=[1,7],s=[1,16],o=[1,11],u=[1,14],h=[1,25],d=[1,24],m=[1,21],y=[1,22],g=[1,23],A=[1,28],T=[1,26],I=[1,27],N=[1,29],F=[1,12],k=[1,13],L=[1,15],R=[4,9],j=[16,19,20,21],C=[2,25],D=[16,19,20,21,37],$=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],P=[4,9,16,19,20,21,37,43,74,75],M=[4,9,43],Q=[29,46,80,81,82],B=[4,9,42,43],G=[1,59],V=[46,79,80,81,82],U=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],J=[1,94],z=[1,85],X=[1,86],H=[1,87],q=[1,90],Z=[1,91],K=[1,92],W=[1,93],Y=[1,95],ee=[33,48,49,50,53,54,55,56,63],te=[4,9,37,65],ne=[1,99],re=[9,37],se=[9,65];S.call(this,e,t),this.symbols_={error:2,shapeMap:3,EOF:4,pair:5,Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star:6,QGT_COMMA_E_Opt:7,O_QGT_COMMA_E_S_Qpair_E_C:8,GT_COMMA:9,nodeSelector:10,statusAndShape:11,Qreason_E_Opt:12,QjsonAttributes_E_Opt:13,reason:14,jsonAttributes:15,GT_AT:16,Qstatus_E_Opt:17,shapeSelector:18,ATSTART:19,ATPNAME_NS:20,ATPNAME_LN:21,status:22,objectTerm:23,triplePattern:24,IT_SPARQL:25,string:26,nodeIri:27,shapeIri:28,START:29,subjectTerm:30,BLANK_NODE_LABEL:31,literal:32,GT_LCURLEY:33,IT_FOCUS:34,nodePredicate:35,O_QobjectTerm_E_Or_QIT___E_C:36,GT_RCURLEY:37,O_QsubjectTerm_E_Or_QIT___E_C:38,IT__:39,GT_NOT:40,GT_OPT:41,GT_DIVIDE:42,GT_DOLLAR:43,O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C:44,jsonValue:45,APPINFO_COLON:46,APPINFO_SPACE_COLON:47,IT_false:48,IT_null:49,IT_true:50,jsonObject:51,jsonArray:52,INTEGER:53,DECIMAL:54,DOUBLE:55,STRING_LITERAL2:56,Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt:57,O_QGT_COMMA_E_S_QjsonMember_E_C:58,jsonMember:59,Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star:60,O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C:61,STRING_LITERAL2_COLON:62,GT_LBRACKET:63,Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt:64,GT_RBRACKET:65,O_QGT_COMMA_E_S_QjsonValue_E_C:66,Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star:67,O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C:68,rdfLiteral:69,numericLiteral:70,booleanLiteral:71,Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt:72,O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C:73,LANGTAG:74,GT_DTYPE:75,STRING_LITERAL1:76,STRING_LITERAL_LONG1:77,STRING_LITERAL_LONG2:78,IT_a:79,IRIREF:80,PNAME_LN:81,PNAME_NS:82,$accept:0,$end:1},this.terminals_={2:"error",4:"EOF",9:"GT_COMMA",16:"GT_AT",19:"ATSTART",20:"ATPNAME_NS",21:"ATPNAME_LN",25:"IT_SPARQL",29:"START",31:"BLANK_NODE_LABEL",33:"GT_LCURLEY",34:"IT_FOCUS",37:"GT_RCURLEY",39:"IT__",40:"GT_NOT",41:"GT_OPT",42:"GT_DIVIDE",43:"GT_DOLLAR",46:"APPINFO_COLON",47:"APPINFO_SPACE_COLON",48:"IT_false",49:"IT_null",50:"IT_true",53:"INTEGER",54:"DECIMAL",55:"DOUBLE",56:"STRING_LITERAL2",62:"STRING_LITERAL2_COLON",63:"GT_LBRACKET",65:"GT_RBRACKET",74:"LANGTAG",75:"GT_DTYPE",76:"STRING_LITERAL1",77:"STRING_LITERAL_LONG1",78:"STRING_LITERAL_LONG2",79:"IT_a",80:"IRIREF",81:"PNAME_LN",82:"PNAME_NS"},this.productions_=[0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],this.table=[{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:n,26:20,27:8,30:9,31:s,32:10,33:o,46:u,48:h,50:d,53:m,54:y,55:g,56:A,69:17,70:18,71:19,76:T,77:I,78:N,80:F,81:k,82:L},{1:[3]},{1:[2,1]},v(R,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},v(j,[2,19]),v(j,[2,20]),{26:36,56:A,76:T,77:I,78:N},v(j,C,{26:37,56:A,76:T,77:I,78:N}),v(D,[2,27]),v(D,[2,28]),{27:42,30:40,31:s,34:[1,38],38:39,39:[1,41],46:u,80:F,81:k,82:L},v($,[2,84]),v($,[2,85]),v($,[2,86]),v($,[2,87]),v([16,19,20,21,37,46,79,80,81,82],[2,26]),v(D,[2,65]),v(D,[2,66]),v(D,[2,67]),v(D,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),v(D,[2,68]),v(D,[2,69]),v(D,[2,70]),v(D,[2,76]),v(D,[2,77]),v(P,[2,78]),v(P,[2,79]),v(P,[2,80]),v(P,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},v(M,[2,9],{12:50,14:51,42:[1,52]}),v(Q,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),v(B,[2,14]),v(B,[2,15]),v(B,[2,16]),v(j,[2,21]),v(j,[2,22]),{27:58,35:57,46:u,79:G,80:F,81:k,82:L},{27:58,35:60,46:u,79:G,80:F,81:k,82:L},v(V,[2,33]),v(V,[2,34]),v([37,46,79,80,81,82],C),v(D,[2,71]),v(D,[2,75]),v(D,[2,72]),{27:61,46:u,80:F,81:k,82:L},{4:[1,62]},v(R,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:n,26:20,27:8,30:9,31:s,32:10,33:o,46:u,48:h,50:d,53:m,54:y,55:g,56:A,69:17,70:18,71:19,76:T,77:I,78:N,80:F,81:k,82:L},v(R,[2,11],{13:64,15:65,43:[1,66]}),v(M,[2,10]),{26:67,56:A,76:T,77:I,78:N},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},v(Q,[2,18]),v(Q,[2,35]),v(Q,[2,36]),{23:76,26:20,27:42,30:9,31:s,32:10,36:75,39:[1,77],46:u,48:h,50:d,53:m,54:y,55:g,56:A,69:17,70:18,71:19,76:T,77:I,78:N,80:F,81:k,82:L},v(U,[2,82]),v(U,[2,83]),{34:[1,78]},v(D,[2,73]),{1:[2,2]},v(R,[2,3]),v(R,[2,8]),v(R,[2,12]),{44:79,46:[1,80],47:[1,81]},v(M,[2,37]),v(B,[2,13]),v(B,[2,23]),v(B,[2,24]),v(B,[2,88]),v(B,[2,89]),v(B,[2,90]),v(B,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:J,45:84,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y},v(ee,[2,39]),v(ee,[2,40]),v(j,[2,29]),v(j,[2,30]),v(R,[2,38]),v(te,[2,41]),v(te,[2,42]),v(te,[2,43]),v(te,[2,44]),v(te,[2,45]),v(te,[2,46]),v(te,[2,47]),v(te,[2,48]),v(te,[2,49]),{37:[2,55],57:96,59:98,61:97,62:ne},{33:J,45:102,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},v(re,[2,52],{60:104}),{33:J,45:105,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y},{65:[1,106]},{65:[2,64]},v(se,[2,60],{67:107}),v(te,[2,50]),{9:[1,109],37:[2,54],58:108},v(re,[2,57]),v(te,[2,58]),{9:[1,111],65:[2,62],66:110},v(re,[2,53]),{59:112,62:ne},v(se,[2,61]),{33:J,45:113,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y},v(re,[2,51]),v(se,[2,59])],this.defaultActions={2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},this.performAction=function(e,t,n,s,o,u,h){const d=u.length-1;switch(o){case 1:return[];case 2:return[u[d-3]].concat(u[d-2]);case 3:case 51:case 59:this.$=u[d];break;case 4:case 60:case 63:this.$=[];break;case 5:case 61:this.$=u[d-1].concat(u[d]);break;case 8:this.$=c({node:u[d-3]},u[d-2],u[d-1],u[d]);break;case 9:case 11:case 52:case 55:case 74:this.$={};break;case 13:this.$=c({shape:u[d]},u[d-1]);break;case 14:this.$={shape:r.start};break;case 15:u[d]=u[d].substr(1,u[d].length-1),this.$={shape:E(O._schemaPrefixes,u[d].substr(0,u[d].length-1))};break;case 16:u[d]=u[d].substr(1,u[d].length-1);const e=u[d].indexOf(":");this.$={shape:E(O._schemaPrefixes,u[d].substr(0,e))+u[d].substr(e+1)};break;case 17:this.$={status:"conformant"};break;case 18:this.$={status:u[d]};break;case 21:this.$={type:"Extension",language:"http://www.w3.org/ns/shex#Extensions-sparql",lexical:u[d]["@value"]};break;case 22:this.$={type:"Extension",language:u[d-1],lexical:u[d]["@value"]};break;case 24:this.$=r.start;break;case 29:this.$={type:"TriplePattern",subject:r.focus,predicate:u[d-2],object:u[d-1]};break;case 30:this.$={type:"TriplePattern",subject:u[d-3],predicate:u[d-2],object:r.focus};break;case 32:case 34:case 42:this.$=null;break;case 35:this.$="nonconformant";break;case 36:this.$="unknown";break;case 37:this.$={reason:u[d]};break;case 38:this.$={appinfo:u[d]};break;case 41:this.$=!1;break;case 43:this.$=!0;break;case 46:case 47:case 48:this.$=parseFloat(u[d]);break;case 49:this.$=x(u[d],1)["@value"];break;case 50:case 58:this.$=u[d-1];break;case 53:case 54:case 71:this.$=c(u[d-1],u[d]);break;case 57:this.$={};const t=u[d-1].substr(0,u[d-1].length-1).trim();this.$[x(t,1)["@value"]]=u[d];break;case 62:this.$=[u[d-1]].concat(u[d]);break;case 68:this.$=f(u[d],"http://www.w3.org/2001/XMLSchema#integer");break;case 69:this.$=f(u[d],"http://www.w3.org/2001/XMLSchema#decimal");break;case 70:this.$=f(u[d],"http://www.w3.org/2001/XMLSchema#double");break;case 72:this.$=p("@language",u[d].substr(1).toLowerCase());break;case 73:this.$=p("@type",u[d]);break;case 76:this.$=f("true",i);break;case 77:this.$=f("false",i);break;case 78:case 80:this.$=x(u[d],1);break;case 79:case 81:this.$=x(u[d],3);break;case 83:this.$="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";break;case 84:const n=b(u[d].slice(1,-1),{});this.$=null===O._dataBase||a.test(n)?n:function(e){switch(e[0]){case void 0:return O._dataBase;case"#":return O._dataBase+e;case"?":return O._dataBase.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?O._dataBaseScheme:O._dataBaseRoot)+l(e);default:return l(O._dataBasePath+e)}}(n);break;case 85:case 86:this.$=_(u[d],O._dataPrefixes);break;case 87:this.$=E(O._dataPrefixes,u[d].substr(0,u[d].length-1));break;case 88:const s=b(u[d].slice(1,-1),{});this.$=null===O._schemaBase||a.test(s)?s:function(e){switch(e[0]){case void 0:return O._schemaBase;case"#":return O._schemaBase+e;case"?":return O._schemaBase.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?O._schemaBaseScheme:O._schemaBaseRoot)+l(e);default:return l(O._schemaBasePath+e)}}(s);break;case 89:case 90:this.$=_(u[d],O._schemaPrefixes);break;case 91:this.$=E(O._schemaPrefixes,u[d].substr(0,u[d].length-1))}}}function w(e={}){this.options={moduleName:"ShapeMapJison"},A.call(this,e),this.rules=[/^(?:\s+|(#[^\u000a\u000d]*|\/\*([^*]|\*([^/]|\\\/))*\*\/))/,/^(?:(appinfo[\u0020\u000A\u0009]+:))/,/^(?:("([^\u0022\u005C\u000A\u000D]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"[\u0020\u000A\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\u0000-\u0020<>\"{}|^`\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|[0-9])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"))/,/^(?:a\b)/,/^(?:,)/,/^(?:\{)/,/^(?:\})/,/^(?:@)/,/^(?:!)/,/^(?:\?)/,/^(?:\/)/,/^(?:\$)/,/^(?:\[)/,/^(?:\])/,/^(?:\^\^)/,/^(?:_\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:null\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],this.conditions={INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],inclusive:!0}},this.performAction=function(e,t,n,r){switch(n){case 0:break;case 1:return 47;case 2:return 62;case 3:return 34;case 4:return 29;case 5:return 19;case 6:return 25;case 7:return 21;case 8:return 20;case 9:return 74;case 10:return 81;case 11:return 46;case 12:return 82;case 13:return 55;case 14:return 54;case 15:return 53;case 16:return 80;case 17:return 31;case 18:return 77;case 19:return 78;case 20:return 76;case 21:return 56;case 22:return 79;case 23:return 9;case 24:return 33;case 25:return 37;case 26:return 16;case 27:return 40;case 28:return 41;case 29:return 42;case 30:return 43;case 31:return 63;case 32:return 65;case 33:return 75;case 34:return 39;case 35:return 50;case 36:return 48;case 37:return 49;case 38:return 4;case 39:return'unexpected word "'+t.yytext+'"';case 40:return"invalid character "+t.yytext}}}O.prototype=Object.create(S.prototype),Object.defineProperty(O.prototype,"constructor",{value:O,enumerable:!1,writable:!0}),t._b=O,w.prototype=Object.create(A.prototype),Object.defineProperty(w.prototype,"constructor",{value:w,enumerable:!1,writable:!0})},18:(e,t,n)=>{const r=function(){ShapeMapJison=n(839)._b;return{construct:function(e,t,n){const r=t.base,s={};for(const e in t.prefixes||{})s[e]=t.prefixes[e];const i=n.base,a={};for(const e in n.prefixes||{})a[e]=n.prefixes[e];const o=new ShapeMapJison;return o.parse=function t(){ShapeMapJison._schemaPrefixes=Object.create(s),ShapeMapJison._setSchemaBase(r),ShapeMapJison._dataPrefixes=Object.create(a),ShapeMapJison._setDataBase(i),ShapeMapJison._setFileName(e);try{return ShapeMapJison.prototype.parse.apply(o,arguments)}catch(n){const r="lexer"in o.yy?o.yy.lexer.yylineno+1:1,s="lexer"in o.yy?o.yy.lexer.showPosition():"",i=Error(`${e}(${r}): ${n.message}\n${s}`);throw Error.captureStackTrace(i,t),o.reset(),i}},o._setSchemaBase=function(e){ShapeMapJison._setSchemaBase,r=e},o._setDataBase=function(e){ShapeMapJison._setDataBase,i=e},o._setFileName=ShapeMapJison._setFileName,o.reset=ShapeMapJison.reset,o}}}();e.exports=r},14:e=>{const t={focus:{term:"FOCUS"},start:{term:"START"},wildcard:{term:"WILDCARD"}};e.exports=t},261:(e,t,n)=>{const r=function(){const e=n(14);return e.Parser=n(18),e}();e.exports=r},237:(e,t,n)=>{e.exports=function(e={}){const t=n(443),r=n(931),s={load:async function(n,r,l,p,f={},h={}){const d={schema:t.emptySchema(),data:e.rdfjs?new e.rdfjs.Store:null,schemaMeta:[],dataMeta:[]},m=[],y=n.concat(r).map((e=>"object"==typeof e?e.url:e));let x=null;f&&"iriTransform"in f&&(x=f.iriTransform,delete f.iriTransform);const g=function(){const e=[],t=[];let n,r,s=0;const i=new Promise((function(e,t){n=e,r=t}));return i.all=function(t){return 0===t.length?n([]):t.forEach((function(t,n){e.push(t),a(t,n)})),i},i.add=function(t){return e.push(t),a(t,e.length-1),i},i;function a(i,a){i.then((function(r){t[a]=r,++s,s===e.length&&n(t)})).catch((function(e){r(e)}))}}();function _(e){if(!("imports"in e))return e;if(f.keepImports)return e;const t=Object.assign({},e);t.imports;return delete t.imports,e.imports.map((function(e){return x?x(e):e})).filter((function(e){return-1===y.indexOf(e)})).map((e=>{y.push(e),g.add(s.GET(e).then((function(e){const t={url:e.url,base:e.url,prefixes:{}};return a(e.text,"text/shex",e.url,d.schema,t,f,_)})))})),t}return[].push.apply(m,[i(n,d.schemaMeta,"text/shex",a,d.schema,f,_),i(r,d.schemaMeta,"text/json",o,d.schema,f,_),i(l,d.dataMeta,"text/turtle",u,d.data,h),i(p,d.dataMeta,"application/ld+json",c,d.data,h)].reduce(((e,t)=>e.concat(t)),[])),g.all(m).then((function(e){return d.schemaMeta.length>0&&t.isWellDefined(d.schema),d}))},loadExtensions:function(e){return[]},GET:async function(t,n){let r;return(r=t.match("^data:([^,]+),(.*)$"))?Promise.resolve({text:r[2],url:r[0]}):t.match("^(blob:)?[a-z]+://.")?async function(t,n){if("function"!=typeof e.fetch)throw Error(`Unable to fetch ${t} with fetch=${e.fetch}`);let r;try{r=await e.fetch(t,{headers:{Accept:"text/shex,text/turtle,*/*"}})}catch(e){throw Error(`GET <${t}> network failure: ${e.message}`)}if(!r.ok)throw Error(`GET <${t}> failed: ${r.status} ${r.statusText}`);return{text:await r.text(),url:t}}(t):(()=>{throw Error(`Don't know how to fetch ${t}`)})()},loadShExImports_NotUsed:function(e,n,r){const i=[e],a={type:"Schema"};return s.GET(e).then((function e(o){const u=n.parse(o.text),c=u.imports;if(delete u.imports,t.merge(a,u,!1,!0),c){const t=c.map((function(e){return r?r(e):e})).filter((function(e){return-1===i.indexOf(e)}));return Promise.all(t.map((t=>(i.push(t),s.GET(t).then(e))))).then((e=>null))}return null})).then((function(){return t.isWellDefined(a),a}))}};return s;function i(e,n,r,i,a,o,u){return e.map((async e=>"object"==typeof e?async function(e){const n=c(e.url,r);try{return t.merge(a,e.schema,!0,!0),n._prefixes=a._prefixes||{},n.base=a._base,u(e.schema),[r,e.url]}catch(t){const n=Error("error merging schema object "+e.schema+": "+t);throw n.stack=t.stack,n}}(e):await async function(e){return s.GET(e,r).then((function(e){return i(e.text,r,e.url,a,c(e.url,r),o,u)}))}(e)));function c(e,t){const r={mediaType:t,url:e,base:e,prefixes:{}};return n.push(r),r}}function a(e,n,s,i,a,o,u){const c=o&&"parser"in o?o.parser:r.construct(s,{},o);try{const r=c.parse(e);return r.base===s&&delete r.base,a.prefixes=r._prefixes||{},a.base=r._base||a.base,t.merge(i,u(r),!1,!0),Promise.resolve([n,s])}catch(e){return e.message="error parsing ShEx "+s+": "+e.message,Promise.reject(e)}}function o(e,n,r,s,i,a,o){try{const a=t.ShExJtoAS(JSON.parse(e));return t.merge(s,a,!0,!0),i.prefixes=s._prefixes,i.base=s.base,o(a),Promise.resolve([n,r])}catch(e){const t=Error("error parsing JSON "+r+": "+e);return Promise.reject(t)}}function u(t,n,r,s,i,a){return new Promise((function(a,o){new e.rdfjs.Parser({baseIRI:r,blankNodePrefix:"",format:"text/turtle"}).parse(t,(function(e,t,u){u&&(i.prefixes=u),e?o("error parsing "+r+": "+e):t?s.addQuad(t):(i.base=this._base,a([n,r]))}))}))}async function c(t,n,r,s,i,a){const o=JSON.parse(t);try{const t=await e.jsonld.toRDF(o,{format:"application/nquads",base:r});return i.prefixes={},i.base=r,u(t,n,r,s,i)}catch(e){throw Error("error parsing JSON-ld "+r+": "+e)}}}},509:(e,t,n)=>{const r=n(443),s="http://www.w3.org/2001/XMLSchema#",i=s+"decimal",a=s+"double",o=s+"boolean",u=[s+"integer",s+"decimal",s+"float",s+"double",s+"string",s+"boolean",s+"dateTime",s+"nonPositiveInteger",s+"negativeInteger",s+"long",s+"int",s+"short",s+"byte",s+"nonNegativeInteger",s+"unsignedLong",s+"unsignedInt",s+"unsignedShort",s+"unsignedByte",s+"positiveInteger"],c=/^[a-z][a-z0-9+.-]*:/i,l=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,p=/(?:^|\/)\.\.?(?:$|[\/#?])/,f=["mininclusive","minexclusive","maxinclusive","maxexclusive"];function h(e){return e.toLowerCase()}function d(e,t){return e.push(t),e}function m(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function y(){let e=[];for(let t=0,n=arguments.length;t<n;t++)e=e.concat.apply(e,arguments[t]);return e}function x(e){switch(e[0]){case void 0:return M._base;case"#":return M._base+e;case"?":return M._base.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?M._baseScheme:M._baseRoot)+g(e);default:return g(M._basePath+e)}}function g(e){if(!p.test(e))return e;const t=e.length;let n="",r=-1,s=-1,i="/",a=0;for(;r<t;){switch(i){case":":if(s<0&&"/"===e[++r]&&"/"===e[++r])for(;(s=r+1)<t&&"/"!==e[s];)r=s;break;case"?":case"#":r=t;break;case"/":if("."===e[r+1])switch(i=e[1+ ++r],i){case"/":n+=e.substring(a,r-1),a=r+1;break;case void 0:case"?":case"#":return n+e.substring(a,r)+e.substr(r+1);case".":if(i=e[1+ ++r],void 0===i||"/"===i||"?"===i||"#"===i){if(n+=e.substring(a,r-2),(a=n.lastIndexOf("/"))>=s&&(n=n.substr(0,a)),"/"!==i)return n+"/"+e.substr(r+1);a=r+1}}}i=e[++r]}return n+e.substring(a)}function _(e,t){return{value:e,type:t}}M._setBase=function(e){e||(e=null),(M._base=e)&&(M._basePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(l),M._baseRoot=e[0],M._baseScheme=e[1])};let E,b=0;M._resetBlanks=function(){b=0},M.reset=function(){M._prefixes=M._imports=M._sourceMap=M.shapes=M.productions=M.start=M.startActs=null,M._base=M._baseIRI=M._baseIRIPath=M._baseIRIRoot=null},M._setFileName=function(e){E=e};const S={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},v={"\\":"\\","%":"%"},A={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"};function O(e,t){return e=e.substring(t,e.length-t),{value:r.unescapeText(e,S)}}function w(e,t){const n=e.lastIndexOf("@"),r=e.substr(n);return m(O(e=e.substr(0,n),t),{language:h(r.substr(1))})}function T(e,t){const n={};return n[e]=t,n}function I(e,t){const n={text:t.lexer.match,line:t.lexer.yylineno,loc:t.lexer.yylloc,pos:t.lexer.showPosition()};if(e.hash=n,!M.recoverable)throw e;M.recoverable(e)}function N(e,t){return e in M._prefixes||I(new Error('Parse error; unknown prefix "'+e+':"'),t),M._prefixes[e]}function F(e,t,n){t===C&&(t={type:"Shape"}),M.productions&&e in M.productions&&I(new Error("Structural error: "+e+" is a triple expression"),n),M.shapes||(M.shapes={}),e in M.shapes?"replace"===M.options.duplicateShape?M.shapes[e]=t:"ignore"!==M.options.duplicateShape&&I(new Error("Parse error: "+e+" already defined"),n):M.shapes[e]=Object.assign({id:e},t)}function k(e,t){M._sourceMap||(M._sourceMap=new Map);let n=M._sourceMap.get(e);return n||M._sourceMap.set(e,n=[]),n.push(t.lexer.yylloc),e}function L(e,t,n){return 0===n.length?R(t):t.type!==e||t.nested?{type:e,shapeExprs:[R(t)].concat(n.map(R))}:(R(t).shapeExprs=R(t).shapeExprs.concat(n),t)}function R(e){return delete e.nested,e}const j={},C={type:"Shape"};const{JisonParser:D,o:$}=n(41),{JisonLexer:P}=n(752);function M(e={},t=new Q(e)){const n=[7,18,19,20,21,23,26,36,193,215,216],s=[19,21,215,216],l=[2,27],p=[1,22],h=[1,23],g=[2,12],E=[2,13],b=[2,14],S=[7,18,19,20,21,23,26,36,215,216],P=[1,29],B=[1,32],G=[1,31],V=[2,18],U=[2,19],J=[1,38],z=[1,42],X=[1,41],H=[1,40],q=[1,44],Z=[1,47],K=[1,46],W=[2,15],Y=[2,17],ee=[2,260],te=[2,261],ne=[2,262],re=[2,263],se=[19,21,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,189,215,218],ie=[2,61],ae=[1,65],oe=[19,21,39,43,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,179,189,215,218,220],ue=[2,29],ce=[2,238],le=[2,239],pe=[2,264],fe=[193,195],he=[1,73],de=[1,76],me=[1,75],ye=[2,16],xe=[7,18,19,20,21,23,26,36,51,215,216],ge=[2,47],_e=[7,18,19,20,21,23,26,36,51,53,215,216],Ee=[2,54],be=[119,125,127,189,218],Se=[2,139],ve=[1,111],Ae=[1,119],Oe=[1,93],we=[1,101],Te=[1,102],Ie=[1,103],Ne=[1,110],Fe=[1,115],ke=[1,116],Le=[1,117],Re=[1,120],je=[1,121],Ce=[1,122],De=[1,123],$e=[1,124],Pe=[1,125],Me=[1,106],Qe=[1,118],Be=[2,62],Ge=[19,21,69,71,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,189,215,218],Ve=[1,136],Ue=[1,137],Je=[1,138],ze=[1,135],Xe=[1,134],He=[2,229],qe=[2,230],Ze=[2,231],Ke=[2,20],We=[1,145],Ye=[2,53],et=[1,147],tt=[2,60],nt=[2,69],rt=[1,153],st=[1,154],it=[1,155],at=[2,65],ot=[2,71],ut=[1,162],ct=[1,163],lt=[1,164],pt=[1,167],ft=[1,170],ht=[2,68],dt=[7,18,19,20,21,23,26,36,51,53,79,80,81,119,125,127,189,190,193,215,216,218],mt=[2,95],yt=[7,18,19,20,21,23,26,36,51,53,190,193,215,216],xt=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,215,216],gt=[2,87],_t=[2,88],Et=[7,18,19,20,21,23,26,36,51,53,79,80,81,101,102,103,104,119,125,127,189,190,193,215,216,218],bt=[2,108],St=[2,107],vt=[7,18,19,20,21,23,26,36,51,53,101,102,103,104,112,113,114,115,116,117,190,193,215,216],At=[2,102],Ot=[2,101],wt=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,190,193,215,216],Tt=[2,91],It=[2,92],Nt=[2,112],Ft=[2,113],kt=[2,114],Lt=[2,110],Rt=[2,237],jt=[19,21,71,81,100,108,109,163,185,204,205,206,207,208,209,210,211,212,213,215],Ct=[2,183],Dt=[7,18,19,20,21,23,26,36,51,53,112,113,114,115,116,117,190,193,215,216],$t=[2,104],Pt=[1,194],Mt=[1,196],Qt=[1,198],Bt=[1,197],Gt=[2,118],Vt=[1,205],Ut=[1,206],Jt=[1,207],zt=[1,208],Xt=[100,108,109,206,207,208,209],Ht=[2,26],qt=[2,31],Zt=[2,32],Kt=[79,80,81,119,125,127,189,218],Wt=[51,53],Yt=[1,270],en=[1,275],tn=[1,252],nn=[1,260],rn=[1,261],sn=[1,262],an=[1,269],on=[1,265],un=[1,274],cn=[2,48],ln=[2,55],pn=[2,64],fn=[2,70],hn=[2,66],dn=[2,72],mn=[7,18,19,20,21,23,26,36,51,53,101,102,103,104,190,193,215,216],yn=[1,326],xn=[1,334],gn=[1,335],_n=[1,336],En=[1,342],bn=[1,343],Sn=[7,18,19,20,21,23,26,36,51,53,79,80,81,119,125,127,189,193,215,216,218],vn=[2,227],An=[7,18,19,20,21,23,26,36,51,53,193,215,216],On=[1,351],wn=[2,106],Tn=[2,111],In=[2,98],Nn=[1,357],Fn=[2,99],kn=[2,100],Ln=[2,105],Rn=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,193,215,216],jn=[2,93],Cn=[1,374],Dn=[1,380],$n=[1,369],Pn=[1,373],Mn=[1,383],Qn=[1,384],Bn=[1,385],Gn=[1,372],Vn=[1,386],Un=[1,387],Jn=[1,392],zn=[1,393],Xn=[1,394],Hn=[1,395],qn=[1,388],Zn=[1,389],Kn=[1,390],Wn=[1,391],Yn=[1,379],er=[19,21,69,160,199,215],tr=[2,167],nr=[2,141],rr=[1,408],sr=[1,407],ir=[1,421],ar=[1,424],or=[1,420],ur=[1,423],cr=[2,117],lr=[2,122],pr=[2,124],fr=[2,125],hr=[2,126],dr=[2,252],mr=[2,253],yr=[2,254],xr=[2,255],gr=[2,123],_r=[19,21,39,43,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,179,189,190,193,215,218,220],Er=[2,36],br=[2,74],Sr=[2,77],vr=[2,35],Ar=[2,39],Or=[2,42],wr=[2,45],Tr=[1,446],Ir=[1,448],Nr=[1,454],Fr=[1,455],kr=[1,456],Lr=[1,463],Rr=[1,464],jr=[1,465],Cr=[1,468],Dr=[2,41],$r=[1,538],Pr=[2,44],Mr=[1,574],Qr=[2,67],Br=[51,53,70],Gr=[1,603],Vr=[51,53,70,79,80,81,119,125,127,189,190,193,218],Ur=[51,53,70,190,193],Jr=[51,53,70,96,97,98,101,102,103,104,190,193],zr=[51,53,70,79,80,81,101,102,103,104,119,125,127,189,190,193,218],Xr=[51,53,70,101,102,103,104,112,113,114,115,116,117,190,193],Hr=[51,53,70,112,113,114,115,116,117,190,193],qr=[51,70],Zr=[7,18,19,20,21,23,26,36,51,53,79,80,81,119,125,127,189,215,216,218],Kr=[2,97],Wr=[2,96],Yr=[2,226],es=[1,645],ts=[1,648],ns=[1,644],rs=[1,647],ss=[2,94],is=[2,109],as=[2,103],os=[2,115],us=[2,116],cs=[2,134],ls=[2,182],ps=[1,678],fs=[19,21,71,81,100,108,109,163,178,185,204,205,206,207,208,209,210,211,212,213,215],hs=[2,232],ds=[2,233],ms=[2,234],ys=[2,245],xs=[2,248],gs=[2,242],_s=[2,243],Es=[2,244],bs=[2,250],Ss=[2,251],vs=[2,256],As=[2,257],Os=[2,258],ws=[2,259],Ts=[19,21,71,81,100,108,109,111,163,178,185,204,205,206,207,208,209,210,211,212,213,215],Is=[2,146],Ns=[2,147],Fs=[1,686],ks=[2,148],Ls=[121,135],Rs=[2,153],js=[2,154],Cs=[2,156],Ds=[1,689],$s=[1,690],Ps=[19,21,199,215],Ms=[2,175],Qs=[1,698],Bs=[121,135,140,141],Gs=[2,165],Vs=[119,125,127,189,190,193,218],Us=[19,21,119,125,127,189,199,215,218],Js=[2,235],zs=[2,236],Xs=[19,21,39,43,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,179,189,193,215,218,220],Hs=[2,33],qs=[2,37],Zs=[2,73],Ks=[2,75],Ws=[2,34],Ys=[2,43],ei=[2,40],ti=[2,46],ni=[1,765],ri=[1,771],si=[1,811],ii=[1,858],ai=[51,53,70,101,102,103,104,190,193],oi=[51,53,70,79,80,81,119,125,127,189,193,218],ui=[51,53,70,193],ci=[1,901],li=[51,53,70,96,97,98,101,102,103,104,193],pi=[1,911],fi=[1,948],hi=[1,984],di=[2,228],mi=[1,995],yi=[1,1001],xi=[1,1e3],gi=[19,21,100,108,109,204,205,206,207,208,209,210,211,212,213,215],_i=[1,1021],Ei=[1,1027],bi=[1,1026],Si=[1,1048],vi=[1,1054],Ai=[1,1053],Oi=[1,1071],wi=[1,1073],Ti=[1,1075],Ii=[19,21,71,81,100,108,109,163,179,185,204,205,206,207,208,209,210,211,212,213,215],Ni=[1,1079],Fi=[1,1085],ki=[1,1088],Li=[1,1089],Ri=[1,1090],ji=[1,1078],Ci=[1,1091],Di=[1,1092],$i=[1,1097],Pi=[1,1098],Mi=[1,1099],Qi=[1,1100],Bi=[1,1093],Gi=[1,1094],Vi=[1,1095],Ui=[1,1096],Ji=[1,1084],zi=[2,246],Xi=[2,249],Hi=[2,135],qi=[2,149],Zi=[2,151],Ki=[2,155],Wi=[2,157],Yi=[2,158],ea=[2,162],ta=[2,164],na=[2,169],ra=[2,170],sa=[1,1115],ia=[1,1118],aa=[1,1114],oa=[1,1117],ua=[1,1128],ca=[2,222],la=[2,240],pa=[2,241],fa=[119,125,127,189,193,218],ha=[2,127],da=[2,76],ma=[1,1168],ya=[1,1204],xa=[1,1263],ga=[1,1269],_a=[1,1301],Ea=[1,1307],ba=[51,53,70,79,80,81,119,125,127,189,218],Sa=[51,53,70,96,97,98,101,102,103,104],va=[1,1365],Aa=[1,1412],Oa=[2,223],wa=[2,224],Ta=[2,225],Ia=[7,18,19,20,21,23,26,36,51,53,79,80,81,111,119,125,127,189,190,193,215,216,218],Na=[7,18,19,20,21,23,26,36,51,53,111,190,193,215,216],Fa=[7,18,19,20,21,23,26,36,51,53,96,97,98,101,102,103,104,111,190,193,215,216],ka=[2,205],La=[1,1465],Ra=[19,21,71,81,100,108,109,163,178,179,185,204,205,206,207,208,209,210,211,212,213,215],ja=[19,21,71,81,100,108,109,111,163,178,179,185,204,205,206,207,208,209,210,211,212,213,215],Ca=[2,247],Da=[2,152],$a=[2,150],Pa=[2,159],Ma=[2,163],Qa=[2,160],Ba=[2,161],Ga=[19,21,43,69,71,79,80,81,85,96,97,98,101,102,103,104,112,113,114,115,116,117,119,125,127,161,189,215,218],Va=[1,1482],Ua=[70,135],Ja=[1,1485],za=[1,1486],Xa=[70,135,140,141],Ha=[1,1509],qa=[1,1515],Za=[1,1514],Ka=[1,1552],Wa=[1,1599],Ya=[1,1632],eo=[1,1638],to=[1,1637],no=[1,1658],ro=[1,1664],so=[1,1663],io=[1,1685],ao=[1,1691],oo=[1,1690],uo=[1,1736],co=[1,1802],lo=[1,1808],po=[1,1807],fo=[1,1828],ho=[1,1834],mo=[1,1833],yo=[1,1854],xo=[1,1860],go=[1,1859],_o=[1,1901],Eo=[1,1907],bo=[1,1939],So=[1,1945],vo=[121,135,140,141,190,193],Ao=[2,172],Oo=[1,1965],wo=[1,1966],To=[1,1967],Io=[1,1968],No=[121,135,140,141,156,157,158,159,190,193],Fo=[2,38],ko=[51,121,135,140,141,156,157,158,159,190,193],Lo=[2,51],Ro=[51,53,121,135,140,141,156,157,158,159,190,193],jo=[2,58],Co=[1,1997],Do=[1,2017],$o=[1,2023],Po=[1,2022],Mo=[19,21,39,43,69,71,79,80,81,85,96,97,98,101,102,103,104,111,112,113,114,115,116,117,119,125,127,161,179,189,190,193,215,218,220],Qo=[1,2069],Bo=[1,2075],Go=[1,2107],Vo=[1,2113],Uo=[1,2166],Jo=[1,2199],zo=[1,2205],Xo=[1,2204],Ho=[1,2225],qo=[1,2231],Zo=[1,2230],Ko=[1,2252],Wo=[1,2258],Yo=[1,2257],eu=[1,2279],tu=[1,2285],nu=[1,2284],ru=[1,2305],su=[1,2311],iu=[1,2310],au=[1,2332],ou=[1,2338],uu=[1,2337],cu=[51,53,70,79,80,81,111,119,125,127,189,190,193,218],lu=[51,53,70,111,190,193],pu=[51,53,70,96,97,98,101,102,103,104,111,190,193],fu=[1,2407],hu=[2,173],du=[2,177],mu=[2,178],yu=[2,179],xu=[2,180],gu=[2,49],_u=[2,56],Eu=[2,63],bu=[2,83],Su=[2,79],vu=[2,85],Au=[1,2490],Ou=[2,82],wu=[51,53,79,80,81,101,102,103,104,119,121,125,127,135,140,141,156,157,158,159,189,190,193,218],Tu=[51,53,79,80,81,119,121,125,127,135,140,141,156,157,158,159,189,190,193,218],Iu=[51,53,101,102,103,104,112,113,114,115,116,117,121,135,140,141,156,157,158,159,190,193],Nu=[51,53,96,97,98,101,102,103,104,121,135,140,141,156,157,158,159,190,193],Fu=[2,89],ku=[2,90],Lu=[51,53,112,113,114,115,116,117,121,135,140,141,156,157,158,159,190,193],Ru=[111,119,125,127,189,190,193,218],ju=[1,2559],Cu=[1,2648],Du=[1,2654],$u=[1,2737],Pu=[1,2770],Mu=[1,2776],Qu=[1,2775],Bu=[1,2796],Gu=[1,2802],Vu=[1,2801],Uu=[1,2823],Ju=[1,2829],zu=[1,2828],Xu=[1,2850],Hu=[1,2856],qu=[1,2855],Zu=[1,2876],Ku=[1,2882],Wu=[1,2881],Yu=[1,2903],ec=[1,2909],tc=[1,2908],nc=[121,135,140,141,193],rc=[1,2928],sc=[2,52],ic=[2,59],ac=[2,78],oc=[2,84],uc=[2,80],cc=[2,86],lc=[51,53,101,102,103,104,121,135,140,141,156,157,158,159,190,193],pc=[1,2952],fc=[70,135,140,141,190,193],hc=[1,2961],dc=[1,2962],mc=[1,2963],yc=[1,2964],xc=[70,135,140,141,156,157,158,159,190,193],gc=[51,70,135,140,141,156,157,158,159,190,193],_c=[51,53,70,135,140,141,156,157,158,159,190,193],Ec=[1,2993],bc=[1,3022],Sc=[1,3055],vc=[1,3061],Ac=[1,3060],Oc=[1,3081],wc=[1,3087],Tc=[1,3086],Ic=[1,3108],Nc=[1,3114],Fc=[1,3113],kc=[1,3135],Lc=[1,3141],Rc=[1,3140],jc=[1,3161],Cc=[1,3167],Dc=[1,3166],$c=[1,3188],Pc=[1,3194],Mc=[1,3193],Qc=[1,3271],Bc=[1,3277],Gc=[2,174],Vc=[2,50],Uc=[1,3365],Jc=[2,57],zc=[1,3398],Xc=[2,81],Hc=[2,171],qc=[1,3443],Zc=[51,53,70,79,80,81,101,102,103,104,119,125,127,135,140,141,156,157,158,159,189,190,193,218],Kc=[51,53,70,79,80,81,119,125,127,135,140,141,156,157,158,159,189,190,193,218],Wc=[51,53,70,101,102,103,104,112,113,114,115,116,117,135,140,141,156,157,158,159,190,193],Yc=[51,53,70,96,97,98,101,102,103,104,135,140,141,156,157,158,159,190,193],el=[51,53,70,112,113,114,115,116,117,135,140,141,156,157,158,159,190,193],tl=[1,3491],nl=[1,3497],rl=[1,3560],sl=[1,3566],il=[1,3565],al=[1,3586],ol=[1,3592],ul=[1,3591],cl=[1,3613],ll=[1,3619],pl=[1,3618],fl=[1,3678],hl=[1,3684],dl=[1,3683],ml=[1,3719],yl=[1,3761],xl=[70,135,140,141,193],gl=[1,3791],_l=[51,53,70,101,102,103,104,135,140,141,156,157,158,159,190,193],El=[1,3815],bl=[1,3890],Sl=[1,3896],vl=[1,3895],Al=[1,3916],Ol=[1,3922],wl=[1,3921],Tl=[1,3943],Il=[1,3949],Nl=[1,3948],Fl=[111,121,135,140,141,190,193],kl=[1,3991],Ll=[1,4015],Rl=[1,4057],jl=[1,4090],Cl=[1,4118],Dl=[1,4124],$l=[1,4123],Pl=[1,4144],Ml=[1,4150],Ql=[1,4149],Bl=[1,4171],Gl=[1,4177],Vl=[1,4176],Ul=[1,4251],Jl=[1,4294],zl=[1,4300],Xl=[1,4299],Hl=[1,4335],ql=[1,4377],Zl=[1,4451],Kl=[70,111,135,140,141,190,193],Wl=[1,4506],Yl=[1,4530],ep=[1,4566],tp=[1,4612],np=[1,4684],rp=[1,4733];D.call(this,e,t),this.symbols_={error:2,shexDoc:3,initParser:4,Qdirective_E_Star:5,Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt:6,EOF:7,directive:8,O_QnotStartAction_E_Or_QstartActions_E_C:9,notStartAction:10,startActions:11,Qstatement_E_Star:12,statement:13,O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C:14,baseDecl:15,prefixDecl:16,importDecl:17,IT_BASE:18,IRIREF:19,IT_PREFIX:20,PNAME_NS:21,iri:22,IT_IMPORT:23,start:24,shapeExprDecl:25,IT_start:26,"=":27,shapeAnd:28,Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star:29,QcodeDecl_E_Plus:30,codeDecl:31,QIT_ABSTRACT_E_Opt:32,shapeExprLabel:33,Qrestriction_E_Star:34,O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C:35,IT_ABSTRACT:36,restriction:37,shapeExpression:38,IT_EXTERNAL:39,QIT_NOT_E_Opt:40,shapeAtomNoRef:41,QshapeOr_E_Opt:42,IT_NOT:43,shapeRef:44,shapeOr:45,inlineShapeExpression:46,inlineShapeOr:47,Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus:48,Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus:49,O_QIT_OR_E_S_QshapeAnd_E_C:50,IT_OR:51,O_QIT_AND_E_S_QshapeNot_E_C:52,IT_AND:53,shapeNot:54,inlineShapeAnd:55,Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star:56,O_QIT_OR_E_S_QinlineShapeAnd_E_C:57,Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star:58,inlineShapeNot:59,Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star:60,O_QIT_AND_E_S_QinlineShapeNot_E_C:61,shapeAtom:62,inlineShapeAtom:63,nonLitNodeConstraint:64,QshapeOrRef_E_Opt:65,litNodeConstraint:66,shapeOrRef:67,QnonLitNodeConstraint_E_Opt:68,"(":69,")":70,".":71,shapeDefinition:72,nonLitInlineNodeConstraint:73,QinlineShapeOrRef_E_Opt:74,litInlineNodeConstraint:75,inlineShapeOrRef:76,QnonLitInlineNodeConstraint_E_Opt:77,inlineShapeDefinition:78,ATPNAME_LN:79,ATPNAME_NS:80,"@":81,Qannotation_E_Star:82,semanticActions:83,annotation:84,IT_LITERAL:85,QxsFacet_E_Star:86,datatype:87,valueSet:88,QnumericFacet_E_Plus:89,xsFacet:90,numericFacet:91,nonLiteralKind:92,QstringFacet_E_Star:93,QstringFacet_E_Plus:94,stringFacet:95,IT_IRI:96,IT_BNODE:97,IT_NONLITERAL:98,stringLength:99,INTEGER:100,REGEXP:101,IT_LENGTH:102,IT_MINLENGTH:103,IT_MAXLENGTH:104,numericRange:105,rawNumeric:106,numericLength:107,DECIMAL:108,DOUBLE:109,string:110,"^^":111,IT_MININCLUSIVE:112,IT_MINEXCLUSIVE:113,IT_MAXINCLUSIVE:114,IT_MAXEXCLUSIVE:115,IT_TOTALDIGITS:116,IT_FRACTIONDIGITS:117,Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star:118,"{":119,QtripleExpression_E_Opt:120,"}":121,O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C:122,extension:123,extraPropertySet:124,IT_CLOSED:125,tripleExpression:126,IT_EXTRA:127,Qpredicate_E_Plus:128,predicate:129,oneOfTripleExpr:130,groupTripleExpr:131,multiElementOneOf:132,Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus:133,O_QGT_PIPE_E_S_QgroupTripleExpr_E_C:134,"|":135,singleElementGroup:136,multiElementGroup:137,unaryTripleExpr:138,QGT_SEMI_E_Opt:139,",":140,";":141,Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus:142,O_QGT_SEMI_E_S_QunaryTripleExpr_E_C:143,Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt:144,O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C:145,include:146,O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C:147,$:148,tripleExprLabel:149,tripleConstraint:150,bracketedTripleExpr:151,Qcardinality_E_Opt:152,cardinality:153,QsenseFlags_E_Opt:154,senseFlags:155,"*":156,"+":157,"?":158,REPEAT_RANGE:159,"^":160,"[":161,QvalueSetValue_E_Star:162,"]":163,valueSetValue:164,iriRange:165,literalRange:166,languageRange:167,O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C:168,QiriExclusion_E_Plus:169,iriExclusion:170,QliteralExclusion_E_Plus:171,literalExclusion:172,QlanguageExclusion_E_Plus:173,languageExclusion:174,Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt:175,QiriExclusion_E_Star:176,O_QGT_TILDE_E_S_QiriExclusion_E_Star_C:177,"~":178,"-":179,QGT_TILDE_E_Opt:180,literal:181,Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt:182,QliteralExclusion_E_Star:183,O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C:184,LANGTAG:185,Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt:186,O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C:187,QlanguageExclusion_E_Star:188,"&":189,"//":190,O_Qiri_E_Or_Qliteral_E_C:191,QcodeDecl_E_Star:192,"%":193,O_QCODE_E_Or_QGT_MODULO_E_C:194,CODE:195,rdfLiteral:196,numericLiteral:197,booleanLiteral:198,a:199,blankNode:200,langString:201,Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt:202,O_QGT_DTYPE_E_S_Qdatatype_E_C:203,IT_true:204,IT_false:205,STRING_LITERAL1:206,STRING_LITERAL_LONG1:207,STRING_LITERAL2:208,STRING_LITERAL_LONG2:209,LANG_STRING_LITERAL1:210,LANG_STRING_LITERAL_LONG1:211,LANG_STRING_LITERAL2:212,LANG_STRING_LITERAL_LONG2:213,prefixedName:214,PNAME_LN:215,BLANK_NODE_LABEL:216,O_QIT_EXTENDS_E_Or_QGT_AMP_E_C:217,IT_EXTENDS:218,O_QIT_RESTRICTS_E_Or_QGT_MINUS_E_C:219,IT_RESTRICTS:220,$accept:0,$end:1},this.terminals_={2:"error",7:"EOF",18:"IT_BASE",19:"IRIREF",20:"IT_PREFIX",21:"PNAME_NS",23:"IT_IMPORT",26:"IT_start",27:"=",36:"IT_ABSTRACT",39:"IT_EXTERNAL",43:"IT_NOT",51:"IT_OR",53:"IT_AND",69:"(",70:")",71:".",79:"ATPNAME_LN",80:"ATPNAME_NS",81:"@",85:"IT_LITERAL",96:"IT_IRI",97:"IT_BNODE",98:"IT_NONLITERAL",100:"INTEGER",101:"REGEXP",102:"IT_LENGTH",103:"IT_MINLENGTH",104:"IT_MAXLENGTH",108:"DECIMAL",109:"DOUBLE",111:"^^",112:"IT_MININCLUSIVE",113:"IT_MINEXCLUSIVE",114:"IT_MAXINCLUSIVE",115:"IT_MAXEXCLUSIVE",116:"IT_TOTALDIGITS",117:"IT_FRACTIONDIGITS",119:"{",121:"}",125:"IT_CLOSED",127:"IT_EXTRA",135:"|",140:",",141:";",148:"$",156:"*",157:"+",158:"?",159:"REPEAT_RANGE",160:"^",161:"[",163:"]",178:"~",179:"-",185:"LANGTAG",189:"&",190:"//",193:"%",195:"CODE",199:"a",204:"IT_true",205:"IT_false",206:"STRING_LITERAL1",207:"STRING_LITERAL_LONG1",208:"STRING_LITERAL2",209:"STRING_LITERAL_LONG2",210:"LANG_STRING_LITERAL1",211:"LANG_STRING_LITERAL_LONG1",212:"LANG_STRING_LITERAL2",213:"LANG_STRING_LITERAL_LONG2",215:"PNAME_LN",216:"BLANK_NODE_LABEL",218:"IT_EXTENDS",220:"IT_RESTRICTS"},this.productions_=[0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[10,1],[10,1],[24,4],[11,1],[30,1],[30,2],[13,1],[13,1],[25,4],[32,0],[32,1],[34,0],[34,2],[35,1],[35,1],[38,3],[38,3],[38,2],[42,0],[42,1],[46,1],[45,1],[45,2],[50,2],[48,1],[48,2],[52,2],[49,1],[49,2],[29,0],[29,2],[47,2],[57,2],[56,0],[56,2],[28,2],[58,0],[58,2],[55,2],[61,2],[60,0],[60,2],[54,2],[40,0],[40,1],[59,2],[62,2],[62,1],[62,2],[62,3],[62,1],[65,0],[65,1],[68,0],[68,1],[41,2],[41,1],[41,2],[41,3],[41,1],[63,2],[63,1],[63,2],[63,3],[63,1],[74,0],[74,1],[77,0],[77,1],[67,1],[67,1],[76,1],[76,1],[44,1],[44,1],[44,2],[66,3],[82,0],[82,2],[64,3],[75,2],[75,2],[75,2],[75,1],[86,0],[86,2],[89,1],[89,2],[73,2],[73,1],[93,0],[93,2],[94,1],[94,2],[92,1],[92,1],[92,1],[90,1],[90,1],[95,2],[95,1],[99,1],[99,1],[99,1],[91,2],[91,2],[106,1],[106,1],[106,1],[106,3],[105,1],[105,1],[105,1],[105,1],[107,1],[107,1],[72,3],[78,4],[122,1],[122,1],[122,1],[118,0],[118,2],[120,0],[120,1],[124,2],[128,1],[128,2],[126,1],[130,1],[130,1],[132,2],[134,2],[133,1],[133,2],[131,1],[131,1],[136,2],[139,0],[139,1],[139,1],[137,3],[143,2],[143,2],[142,1],[142,2],[138,2],[138,1],[147,2],[144,0],[144,1],[145,1],[145,1],[151,6],[152,0],[152,1],[150,6],[154,0],[154,1],[153,1],[153,1],[153,1],[153,1],[155,1],[88,3],[162,0],[162,2],[164,1],[164,1],[164,1],[164,2],[169,1],[169,2],[171,1],[171,2],[173,1],[173,2],[168,1],[168,1],[168,1],[165,2],[176,0],[176,2],[177,2],[175,0],[175,1],[170,3],[180,0],[180,1],[166,2],[183,0],[183,2],[184,2],[182,0],[182,1],[172,3],[167,2],[167,2],[188,0],[188,2],[187,2],[186,0],[186,1],[174,3],[146,2],[84,3],[191,1],[191,1],[83,1],[192,0],[192,2],[31,3],[194,1],[194,1],[181,1],[181,1],[181,1],[129,1],[129,1],[87,1],[33,1],[33,1],[149,1],[149,1],[197,1],[197,1],[197,1],[196,1],[196,2],[203,2],[202,0],[202,1],[198,1],[198,1],[110,1],[110,1],[110,1],[110,1],[201,1],[201,1],[201,1],[201,1],[22,1],[22,1],[214,1],[214,1],[200,1],[123,2],[217,1],[217,1],[37,2],[219,1],[219,1]],this.table=[$(n,[2,2],{3:1,4:2}),{1:[3]},$(n,[2,3],{5:3}),$(s,l,{6:4,8:5,14:6,15:7,16:8,17:9,9:10,10:14,11:15,24:16,25:17,30:18,32:20,31:21,7:[2,10],18:[1,11],20:[1,12],23:[1,13],26:[1,19],36:p,193:h}),{7:[1,24]},$(n,[2,4]),{7:[2,11]},$(n,g),$(n,E),$(n,b),$(S,[2,7],{12:25}),{19:[1,26]},{21:[1,27]},{19:P,21:B,22:28,214:30,215:G},$(S,[2,5]),$(S,[2,6]),$(S,V),$(S,U),$(S,[2,21],{31:33,193:h}),{27:[1,34]},{19:J,21:z,22:36,33:35,200:37,214:39,215:X,216:H},$(n,[2,22]),$(s,[2,28]),{19:q,21:Z,22:43,214:45,215:K},{1:[2,1]},$(s,l,{13:48,8:49,10:50,15:51,16:52,17:53,24:54,25:55,32:60,7:[2,9],18:[1,56],20:[1,57],23:[1,58],26:[1,59],36:p}),$(n,W),{19:P,21:B,22:61,214:30,215:G},$(n,Y),$(n,ee),$(n,te),$(n,ne),$(n,re),$(n,[2,23]),$(se,ie,{28:62,54:63,40:64,43:ae}),$(oe,ue,{34:66}),$(oe,ce),$(oe,le),$(oe,ee),$(oe,te),$(oe,pe),$(oe,ne),$(oe,re),{193:[1,69],194:67,195:[1,68]},$(fe,ee),$(fe,te),$(fe,ne),$(fe,re),$(S,[2,8]),$(S,[2,24]),$(S,[2,25]),$(S,g),$(S,E),$(S,b),$(S,V),$(S,U),{19:[1,70]},{21:[1,71]},{19:he,21:de,22:72,214:74,215:me},{27:[1,77]},{19:J,21:z,22:36,33:78,200:37,214:39,215:X,216:H},$(n,ye),$(xe,ge,{29:79}),$(_e,Ee,{58:80}),$(be,Se,{62:81,64:82,66:83,67:84,73:87,75:88,72:89,44:90,92:91,94:92,87:94,88:95,89:96,78:97,95:104,22:105,91:107,118:108,99:109,214:112,105:113,107:114,19:ve,21:Ae,69:[1,85],71:[1,86],79:[1,98],80:[1,99],81:[1,100],85:Oe,96:we,97:Te,98:Ie,101:Ne,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:Me,215:Qe}),$(se,Be),$(Ge,ie,{35:126,37:127,38:128,219:130,40:131,44:133,39:[1,129],43:[1,132],79:Ve,80:Ue,81:Je,179:ze,220:Xe}),$(n,He),$(n,qe),$(n,Ze),$(S,W),{19:he,21:de,22:139,214:74,215:me},$(S,Y),$(S,ee),$(S,te),$(S,ne),$(S,re),$(se,ie,{28:140,54:141,40:142,43:ae}),$(oe,ue,{34:143}),$(S,Ke,{50:144,51:We}),$(xe,Ye,{52:146,53:et}),$(_e,tt),$(_e,nt,{65:148,67:149,72:150,44:151,78:152,118:156,79:rt,80:st,81:it,119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:157,64:158,73:159,92:160,94:161,95:165,99:166,96:ut,97:ct,98:lt,101:pt,102:Fe,103:ke,104:Le}),$(Ge,ie,{38:168,40:169,44:171,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:172}),$(yt,mt,{82:173}),$(xt,gt),$(xt,_t),$(Et,bt,{93:174}),$(dt,St,{99:109,95:175,101:Ne,102:Fe,103:ke,104:Le}),$(vt,At,{86:176}),$(vt,At,{86:177}),$(vt,At,{86:178}),$(yt,Ot,{105:113,107:114,91:179,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:180}),$(xt,Tt),$(xt,It),{19:[1,184],21:[1,188],22:182,33:181,200:183,214:185,215:[1,187],216:[1,186]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:189}),$(Dt,$t),{119:[1,190],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,199]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,201],106:200,108:[1,202],109:[1,203],110:204,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,209]},{100:[2,119]},{100:[2,120]},{100:[2,121]},$(vt,ne),$(vt,re),$(Xt,[2,128]),$(Xt,[2,129]),$(Xt,[2,130]),$(Xt,[2,131]),{100:[2,132]},{100:[2,133]},$(S,Ht),$(oe,[2,30]),$(S,qt),$(S,Zt),$(be,Se,{67:210,72:211,44:212,78:213,118:217,79:[1,214],80:[1,215],81:[1,216]}),$(be,Se,{73:87,75:88,92:91,94:92,87:94,88:95,89:96,78:97,95:104,22:105,91:107,118:108,99:109,214:112,105:113,107:114,41:218,64:219,66:220,72:221,19:ve,21:Ae,69:[1,222],71:[1,223],85:Oe,96:we,97:Te,98:Ie,101:Ne,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:Me,215:Qe}),$(Ge,Be,{44:224,79:rt,80:st,81:it}),{45:225,48:226,49:227,50:228,51:We,52:229,53:et},$(Kt,[2,269]),$(Kt,[2,270]),$(Wt,Tt),$(Wt,It),{19:[1,233],21:[1,237],22:231,33:230,200:232,214:234,215:[1,236],216:[1,235]},$(S,ye),$(xe,ge,{29:238}),$(_e,Ee,{58:239}),$(be,Se,{62:240,64:241,66:242,67:243,73:246,75:247,72:248,44:249,92:250,94:251,87:253,88:254,89:255,78:256,95:263,22:264,91:266,118:267,99:268,214:271,105:272,107:273,19:Yt,21:en,69:[1,244],71:[1,245],79:[1,257],80:[1,258],81:[1,259],85:tn,96:nn,97:rn,98:sn,101:an,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:on,215:un}),$(Ge,ie,{37:127,219:130,35:276,38:277,40:279,44:281,39:[1,278],43:[1,280],79:Ve,80:Ue,81:Je,179:ze,220:Xe}),$(xe,cn),$(se,ie,{28:282,54:283,40:284,43:ae}),$(_e,ln),$(se,ie,{54:285,40:286,43:ae}),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:287}),$(_e,Tt),$(_e,It),{19:[1,291],21:[1,295],22:289,33:288,200:290,214:292,215:[1,294],216:[1,293]},{119:[1,296],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:297}),$(mn,bt,{93:298}),$(yt,St,{99:166,95:299,101:pt,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,300]},$(mn,Gt),{70:[1,301]},$(be,Se,{41:302,64:303,66:304,72:305,73:308,75:309,78:310,92:311,94:312,87:314,88:315,89:316,118:317,95:321,22:322,91:324,99:325,214:328,105:329,107:330,19:[1,327],21:[1,332],69:[1,306],71:[1,307],85:[1,313],96:[1,318],97:[1,319],98:[1,320],101:yn,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,323],215:[1,331]}),$(Ge,Be,{44:333,79:xn,80:gn,81:_n}),{45:337,48:338,49:339,50:340,51:En,52:341,53:bn},$(Sn,vn,{83:344,84:345,192:346,190:[1,347]}),$(An,vn,{83:348,84:349,192:350,190:On}),$(dt,wn,{99:109,95:352,101:Ne,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:353,95:354,91:355,99:356,105:358,107:359,101:Nn,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:353,95:354,91:355,99:356,105:358,107:359,101:Nn,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:353,95:354,91:355,99:356,105:358,107:359,101:Nn,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:360,84:361,192:362,190:[1,363]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,364],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{120:396,126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,121:nr,148:rr,189:sr}),$(be,[2,140]),$(be,[2,136]),$(be,[2,137]),$(be,[2,138]),$(be,Se,{67:409,72:410,44:411,78:412,118:416,79:[1,413],80:[1,414],81:[1,415]}),{19:ir,21:ar,22:419,128:417,129:418,199:or,214:422,215:ur},$(Kt,[2,266]),$(Kt,[2,267]),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,425]},{111:dr},{111:mr},{111:yr},{111:xr},$(Dt,gr),$(oe,[2,268]),$(oe,gt),$(oe,_t),$(_r,mt,{82:426}),$(oe,Tt),$(oe,It),{19:[1,430],21:[1,434],22:428,33:427,200:429,214:431,215:[1,433],216:[1,432]},{119:[1,435],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(S,Er,{48:226,49:227,50:228,52:229,42:436,45:437,51:We,53:et}),$(_e,nt,{67:149,72:150,44:151,78:152,118:156,65:438,79:rt,80:st,81:it,119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,br),$(_e,ot,{64:158,73:159,92:160,94:161,95:165,99:166,68:439,96:ut,97:ct,98:lt,101:pt,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:440,43:ft,79:Ve,80:Ue,81:Je}),$(_e,Sr),$(S,Er,{48:226,49:227,50:228,52:229,45:437,42:441,51:We,53:et}),$(S,vr),$(S,Ar,{50:442,51:We}),$(xe,ge,{29:443,52:444,53:et}),$(xe,Or),$(_e,wr),$(Wt,jn),$(Wt,ce),$(Wt,le),$(Wt,ee),$(Wt,te),$(Wt,pe),$(Wt,ne),$(Wt,re),$(S,Ke,{50:445,51:Tr}),$(xe,Ye,{52:447,53:Ir}),$(_e,tt),$(_e,nt,{65:449,67:450,72:451,44:452,78:453,118:457,79:Nr,80:Fr,81:kr,119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:458,64:459,73:460,92:461,94:462,95:466,99:467,96:Lr,97:Rr,98:jr,101:Cr,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:469,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:470}),$(yt,mt,{82:471}),$(xt,gt),$(xt,_t),$(Et,bt,{93:472}),$(dt,St,{99:268,95:473,101:an,102:Fe,103:ke,104:Le}),$(vt,At,{86:474}),$(vt,At,{86:475}),$(vt,At,{86:476}),$(yt,Ot,{105:272,107:273,91:477,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:478}),$(xt,Tt),$(xt,It),{19:[1,482],21:[1,486],22:480,33:479,200:481,214:483,215:[1,485],216:[1,484]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:487}),$(Dt,$t),{119:[1,488],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,489]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,491],106:490,108:[1,492],109:[1,493],110:494,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,495]},$(vt,ne),$(vt,re),$(S,Ht),$(S,qt),$(S,Zt),$(be,Se,{73:246,75:247,92:250,94:251,87:253,88:254,89:255,78:256,95:263,22:264,91:266,118:267,99:268,214:271,105:272,107:273,41:496,64:497,66:498,72:499,19:Yt,21:en,69:[1,500],71:[1,501],85:tn,96:nn,97:rn,98:sn,101:an,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:on,215:un}),$(Ge,Be,{44:502,79:Nr,80:Fr,81:kr}),{45:503,48:504,49:505,50:506,51:Tr,52:507,53:Ir},$(xe,Dr),$(_e,Ee,{58:508}),$(be,Se,{62:509,64:510,66:511,67:512,73:515,75:516,72:517,44:518,92:519,94:520,87:522,88:523,89:524,78:525,95:532,22:533,91:535,118:536,99:537,214:540,105:541,107:542,19:[1,539],21:[1,544],69:[1,513],71:[1,514],79:[1,526],80:[1,527],81:[1,528],85:[1,521],96:[1,529],97:[1,530],98:[1,531],101:$r,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,534],215:[1,543]}),$(_e,Pr),$(be,Se,{62:545,64:546,66:547,67:548,73:551,75:552,72:553,44:554,92:555,94:556,87:558,88:559,89:560,78:561,95:568,22:569,91:571,118:572,99:573,214:576,105:577,107:578,19:[1,575],21:[1,580],69:[1,549],71:[1,550],79:[1,562],80:[1,563],81:[1,564],85:[1,557],96:[1,565],97:[1,566],98:[1,567],101:Mr,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,570],215:[1,579]}),$(An,vn,{84:349,192:350,83:581,190:On}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:582,121:nr,148:rr,189:sr}),$(An,vn,{84:349,192:350,83:583,190:On}),$(yt,wn,{99:166,95:584,101:pt,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),{42:585,45:586,48:338,49:339,50:340,51:En,52:341,53:bn,70:Er},$(be,Se,{65:587,67:588,72:589,44:590,78:591,118:592,51:nt,53:nt,70:nt,79:xn,80:gn,81:_n}),$(Br,br),$(Br,ot,{68:593,64:594,73:595,92:596,94:597,95:601,99:602,96:[1,598],97:[1,599],98:[1,600],101:Gr,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:604,43:ft,79:Ve,80:Ue,81:Je}),$(Br,Sr),$(Vr,mt,{82:605}),$(Ur,mt,{82:606}),$(Jr,mt,{82:607}),$(zr,bt,{93:608}),$(Vr,St,{99:325,95:609,101:yn,102:Fe,103:ke,104:Le}),$(Xr,At,{86:610}),$(Xr,At,{86:611}),$(Xr,At,{86:612}),$(Ur,Ot,{105:329,107:330,91:613,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),{119:[1,614],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(zr,Nt),$(zr,Ft),$(zr,kt),$(zr,Lt),$(Xr,Rt),$(jt,Ct,{162:615}),$(Hr,$t),{100:[1,616]},$(zr,Gt),$(Xr,ee),$(Xr,te),{100:[1,618],106:617,108:[1,619],109:[1,620],110:621,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,622]},$(Xr,ne),$(Xr,re),{42:623,45:586,48:338,49:339,50:340,51:En,52:341,53:bn,70:Er},$(Br,Tt),$(Br,It),{19:[1,627],21:[1,631],22:625,33:624,200:626,214:628,215:[1,630],216:[1,629]},{70:vr},{50:632,51:En,70:Ar},$(qr,ge,{29:633,52:634,53:bn}),$(qr,Or),$(Br,wr),$(se,ie,{28:635,54:636,40:637,43:ae}),$(se,ie,{54:638,40:639,43:ae}),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:640,193:[1,641]}),{19:es,21:ts,22:643,129:642,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:649,193:[1,650]}),{19:es,21:ts,22:643,129:651,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,652]},$(vt,Gt),{100:[1,654],106:653,108:[1,655],109:[1,656],110:657,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,658]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:659,193:[1,660]}),{19:es,21:ts,22:643,129:661,199:ns,214:646,215:rs},$(vt,ls),$(jt,[2,184]),$(jt,[2,185]),$(jt,[2,186]),$(jt,[2,187]),{168:662,169:663,170:666,171:664,172:667,173:665,174:668,179:[1,669]},$(jt,[2,202],{175:670,177:671,178:[1,672]}),$(jt,[2,211],{182:673,184:674,178:[1,675]}),$(jt,[2,219],{186:676,187:677,178:ps}),{178:ps,187:679},$(fs,ee),$(fs,te),$(fs,hs),$(fs,ds),$(fs,ms),$(fs,ne),$(fs,re),$(fs,ys),$(fs,xs,{202:680,203:681,111:[1,682]}),$(fs,gs),$(fs,_s),$(fs,Es),$(fs,bs),$(fs,Ss),$(fs,vs),$(fs,As),$(fs,Os),$(fs,ws),$(Ts,dr),$(Ts,mr),$(Ts,yr),$(Ts,xr),{121:[1,683]},{121:[2,142]},{121:Is},{121:Ns,133:684,134:685,135:Fs},{121:ks},$(Ls,Rs),$(Ls,js),$(Ls,Cs,{139:687,142:688,143:691,140:Ds,141:$s}),$(Ps,Ms,{145:692,150:693,151:694,154:695,155:697,69:[1,696],160:Qs}),$(Bs,Gs),$(er,[2,168]),{19:[1,702],21:[1,706],22:700,149:699,200:701,214:703,215:[1,705],216:[1,704]},{19:[1,710],21:[1,714],22:708,149:707,200:709,214:711,215:[1,713],216:[1,712]},$(be,[2,265]),$(be,gt),$(be,_t),$(Vs,mt,{82:715}),$(be,Tt),$(be,It),{19:[1,719],21:[1,723],22:717,33:716,200:718,214:720,215:[1,722],216:[1,721]},{119:[1,724],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(be,[2,143],{22:419,214:422,129:725,19:ir,21:ar,199:or,215:ur}),$(Us,[2,144]),$(Us,Js),$(Us,zs),$(Us,ee),$(Us,te),$(Us,ne),$(Us,re),{19:[1,728],21:[1,731],22:727,87:726,214:729,215:[1,730]},$(Xs,vn,{83:732,84:733,192:734,190:[1,735]}),$(oe,jn),$(oe,ce),$(oe,le),$(oe,ee),$(oe,te),$(oe,pe),$(oe,ne),$(oe,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:736,121:nr,148:rr,189:sr}),$(S,Hs),$(S,qs),$(_e,Zs),$(_e,Ks),{70:[1,737]},$(S,Ws),$(xe,Ys),$(S,ei,{50:144,51:We}),$(_e,ti),$(xe,cn),$(se,ie,{28:738,54:739,40:740,43:ae}),$(_e,ln),$(se,ie,{54:741,40:742,43:ae}),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:743}),$(_e,Tt),$(_e,It),{19:[1,747],21:[1,751],22:745,33:744,200:746,214:748,215:[1,750],216:[1,749]},{119:[1,752],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:753}),$(mn,bt,{93:754}),$(yt,St,{99:467,95:755,101:Cr,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,756]},$(mn,Gt),{70:[1,757]},$(Sn,vn,{83:758,84:759,192:760,190:[1,761]}),$(An,vn,{83:762,84:763,192:764,190:ni}),$(dt,wn,{99:268,95:766,101:an,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:767,95:768,91:769,99:770,105:772,107:773,101:ri,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:767,95:768,91:769,99:770,105:772,107:773,101:ri,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:767,95:768,91:769,99:770,105:772,107:773,101:ri,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:774,84:775,192:776,190:[1,777]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,778],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:779,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,780]},$(Dt,gr),$(S,Er,{48:504,49:505,50:506,52:507,42:781,45:782,51:Tr,53:Ir}),$(_e,nt,{67:450,72:451,44:452,78:453,118:457,65:783,79:Nr,80:Fr,81:kr,119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,br),$(_e,ot,{64:459,73:460,92:461,94:462,95:466,99:467,68:784,96:Lr,97:Rr,98:jr,101:Cr,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:785,43:ft,79:Ve,80:Ue,81:Je}),$(_e,Sr),$(S,Er,{48:504,49:505,50:506,52:507,45:782,42:786,51:Tr,53:Ir}),$(S,vr),$(S,Ar,{50:787,51:Tr}),$(xe,ge,{29:788,52:789,53:Ir}),$(xe,Or),$(_e,wr),$(xe,Ye,{52:790,53:[1,791]}),$(_e,tt),$(_e,nt,{65:792,67:793,72:794,44:795,78:796,118:800,79:[1,797],80:[1,798],81:[1,799],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:801,64:802,73:803,92:804,94:805,95:809,99:810,96:[1,806],97:[1,807],98:[1,808],101:si,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:812,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:813}),$(yt,mt,{82:814}),$(xt,gt),$(xt,_t),$(Et,bt,{93:815}),$(dt,St,{99:537,95:816,101:$r,102:Fe,103:ke,104:Le}),$(vt,At,{86:817}),$(vt,At,{86:818}),$(vt,At,{86:819}),$(yt,Ot,{105:541,107:542,91:820,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:821}),$(xt,Tt),$(xt,It),{19:[1,825],21:[1,829],22:823,33:822,200:824,214:826,215:[1,828],216:[1,827]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:830}),$(Dt,$t),{119:[1,831],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,832]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,834],106:833,108:[1,835],109:[1,836],110:837,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,838]},$(vt,ne),$(vt,re),$(_e,tt),$(_e,nt,{65:839,67:840,72:841,44:842,78:843,118:847,79:[1,844],80:[1,845],81:[1,846],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:848,64:849,73:850,92:851,94:852,95:856,99:857,96:[1,853],97:[1,854],98:[1,855],101:ii,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:859,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:860}),$(yt,mt,{82:861}),$(xt,gt),$(xt,_t),$(Et,bt,{93:862}),$(dt,St,{99:573,95:863,101:Mr,102:Fe,103:ke,104:Le}),$(vt,At,{86:864}),$(vt,At,{86:865}),$(vt,At,{86:866}),$(yt,Ot,{105:577,107:578,91:867,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:868}),$(xt,Tt),$(xt,It),{19:[1,872],21:[1,876],22:870,33:869,200:871,214:873,215:[1,875],216:[1,874]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:877}),$(Dt,$t),{119:[1,878],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,879]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,881],106:880,108:[1,882],109:[1,883],110:884,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,885]},$(vt,ne),$(vt,re),$(_e,cs),{121:[1,886]},$(_e,Kr),$(mn,is),{70:Hs},{70:qs},$(Br,Zs),$(Br,fn),$(Br,gt),$(Br,_t),$(Ur,mt,{82:887}),{119:[1,888],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Br,Ks),$(Br,dn),$(Ur,mt,{82:889}),$(ai,bt,{93:890}),$(Ur,St,{99:602,95:891,101:Gr,102:Fe,103:ke,104:Le}),$(ai,Nt),$(ai,Ft),$(ai,kt),$(ai,Lt),{100:[1,892]},$(ai,Gt),{70:[1,893]},$(oi,vn,{83:894,84:895,192:896,190:[1,897]}),$(ui,vn,{83:898,84:899,192:900,190:ci}),$(li,vn,{83:902,84:903,192:904,190:[1,905]}),$(Vr,wn,{99:325,95:906,101:yn,102:Fe,103:ke,104:Le}),$(zr,Tn),$(Ur,In,{90:907,95:908,91:909,99:910,105:912,107:913,101:pi,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,Fn,{90:907,95:908,91:909,99:910,105:912,107:913,101:pi,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,kn,{90:907,95:908,91:909,99:910,105:912,107:913,101:pi,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Hr,Ln),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:914,121:nr,148:rr,189:sr}),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,915],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(zr,cr),$(Hr,lr),$(Hr,pr),$(Hr,fr),$(Hr,hr),{111:[1,916]},$(Hr,gr),{70:Ws},$(Br,jn),$(Br,ce),$(Br,le),$(Br,ee),$(Br,te),$(Br,pe),$(Br,ne),$(Br,re),$(qr,Ys),{50:917,51:En,70:ei},$(Br,ti),$(qr,Dr),$(Br,Ee,{58:918}),$(be,Se,{62:919,64:920,66:921,67:922,73:925,75:926,72:927,44:928,92:929,94:930,87:932,88:933,89:934,78:935,95:942,22:943,91:945,118:946,99:947,214:950,105:951,107:952,19:[1,949],21:[1,954],69:[1,923],71:[1,924],79:[1,936],80:[1,937],81:[1,938],85:[1,931],96:[1,939],97:[1,940],98:[1,941],101:fi,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,944],215:[1,953]}),$(Br,Pr),$(be,Se,{62:955,64:956,66:957,67:958,73:961,75:962,72:963,44:964,92:965,94:966,87:968,88:969,89:970,78:971,95:978,22:979,91:981,118:982,99:983,214:986,105:987,107:988,19:[1,985],21:[1,990],69:[1,959],71:[1,960],79:[1,972],80:[1,973],81:[1,974],85:[1,967],96:[1,975],97:[1,976],98:[1,977],101:hi,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,980],215:[1,989]}),$(Sn,di),{19:q,21:Z,22:991,214:45,215:K},{19:mi,21:yi,22:993,100:[1,1004],108:[1,1005],109:[1,1006],110:1003,181:994,191:992,196:997,197:998,198:999,201:1002,204:[1,1007],205:[1,1008],206:[1,1013],207:[1,1014],208:[1,1015],209:[1,1016],210:[1,1009],211:[1,1010],212:[1,1011],213:[1,1012],214:996,215:xi},$(gi,Js),$(gi,zs),$(gi,ee),$(gi,te),$(gi,ne),$(gi,re),$(An,di),{19:q,21:Z,22:1017,214:45,215:K},{19:_i,21:Ei,22:1019,100:[1,1030],108:[1,1031],109:[1,1032],110:1029,181:1020,191:1018,196:1023,197:1024,198:1025,201:1028,204:[1,1033],205:[1,1034],206:[1,1039],207:[1,1040],208:[1,1041],209:[1,1042],210:[1,1035],211:[1,1036],212:[1,1037],213:[1,1038],214:1022,215:bi},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,1043]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:1044,214:45,215:K},{19:Si,21:vi,22:1046,100:[1,1057],108:[1,1058],109:[1,1059],110:1056,181:1047,191:1045,196:1050,197:1051,198:1052,201:1055,204:[1,1060],205:[1,1061],206:[1,1066],207:[1,1067],208:[1,1068],209:[1,1069],210:[1,1062],211:[1,1063],212:[1,1064],213:[1,1065],214:1049,215:Ai},$(jt,[2,188]),$(jt,[2,195],{170:1070,179:Oi}),$(jt,[2,196],{172:1072,179:wi}),$(jt,[2,197],{174:1074,179:Ti}),$(Ii,[2,189]),$(Ii,[2,191]),$(Ii,[2,193]),{19:Ni,21:Fi,22:1076,100:ki,108:Li,109:Ri,110:1087,181:1077,185:ji,196:1081,197:1082,198:1083,201:1086,204:Ci,205:Di,206:$i,207:Pi,208:Mi,209:Qi,210:Bi,211:Gi,212:Vi,213:Ui,214:1080,215:Ji},$(jt,[2,198]),$(jt,[2,203]),$(Ii,[2,199],{176:1101}),$(jt,[2,207]),$(jt,[2,212]),$(Ii,[2,208],{183:1102}),$(jt,[2,214]),$(jt,[2,220]),$(Ii,[2,216],{188:1103}),$(jt,[2,215]),$(fs,zi),$(fs,Xi),{19:Cn,21:Dn,22:1105,87:1104,214:375,215:Yn},$(wt,Hi),{121:qi,134:1106,135:Fs},$(Ls,Zi),$(er,tr,{136:401,137:402,138:403,144:404,146:405,147:406,131:1107,148:rr,189:sr}),$(Ls,Ki),$(Ls,Cs,{139:1108,143:1109,140:Ds,141:$s}),$(er,tr,{144:404,146:405,147:406,138:1110,121:Wi,135:Wi,148:rr,189:sr}),$(er,tr,{144:404,146:405,147:406,138:1111,121:Yi,135:Yi,148:rr,189:sr}),$(Bs,ea),$(Bs,ta),$(Bs,na),$(Bs,ra),{19:sa,21:ia,22:1113,129:1112,199:aa,214:1116,215:oa},$(er,tr,{147:406,126:1119,130:1120,131:1121,132:1122,136:1123,137:1124,138:1125,144:1126,146:1127,148:rr,189:ua}),$(Ps,[2,176]),$(Ps,[2,181]),$(Bs,ca),$(Bs,la),$(Bs,pa),$(Bs,ee),$(Bs,te),$(Bs,pe),$(Bs,ne),$(Bs,re),$(er,[2,166]),$(er,la),$(er,pa),$(er,ee),$(er,te),$(er,pe),$(er,ne),$(er,re),$(fa,vn,{83:1129,84:1130,192:1131,190:[1,1132]}),$(be,jn),$(be,ce),$(be,le),$(be,ee),$(be,te),$(be,pe),$(be,ne),$(be,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1133,121:nr,148:rr,189:sr}),$(Us,[2,145]),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(oe,cs),$(_r,Wr),$(oe,Yr,{31:1134,193:[1,1135]}),{19:es,21:ts,22:643,129:1136,199:ns,214:646,215:rs},{121:[1,1137]},$(_e,da),$(xe,Dr),$(_e,Ee,{58:1138}),$(be,Se,{62:1139,64:1140,66:1141,67:1142,73:1145,75:1146,72:1147,44:1148,92:1149,94:1150,87:1152,88:1153,89:1154,78:1155,95:1162,22:1163,91:1165,118:1166,99:1167,214:1170,105:1171,107:1172,19:[1,1169],21:[1,1174],69:[1,1143],71:[1,1144],79:[1,1156],80:[1,1157],81:[1,1158],85:[1,1151],96:[1,1159],97:[1,1160],98:[1,1161],101:ma,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,1164],215:[1,1173]}),$(_e,Pr),$(be,Se,{62:1175,64:1176,66:1177,67:1178,73:1181,75:1182,72:1183,44:1184,92:1185,94:1186,87:1188,88:1189,89:1190,78:1191,95:1198,22:1199,91:1201,118:1202,99:1203,214:1206,105:1207,107:1208,19:[1,1205],21:[1,1210],69:[1,1179],71:[1,1180],79:[1,1192],80:[1,1193],81:[1,1194],85:[1,1187],96:[1,1195],97:[1,1196],98:[1,1197],101:ya,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,1200],215:[1,1209]}),$(An,vn,{84:763,192:764,83:1211,190:ni}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1212,121:nr,148:rr,189:sr}),$(An,vn,{84:763,192:764,83:1213,190:ni}),$(yt,wn,{99:467,95:1214,101:Cr,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:1215,193:[1,1216]}),{19:es,21:ts,22:643,129:1217,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:1218,193:[1,1219]}),{19:es,21:ts,22:643,129:1220,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,1221]},$(vt,Gt),{100:[1,1223],106:1222,108:[1,1224],109:[1,1225],110:1226,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1227]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:1228,193:[1,1229]}),{19:es,21:ts,22:643,129:1230,199:ns,214:646,215:rs},$(vt,ls),{121:[1,1231]},{19:[1,1234],21:[1,1237],22:1233,87:1232,214:1235,215:[1,1236]},$(S,Hs),$(S,qs),$(_e,Zs),$(_e,Ks),{70:[1,1238]},$(S,Ws),$(xe,Ys),$(S,ei,{50:445,51:Tr}),$(_e,ti),$(_e,ln),$(se,ie,{54:1239,40:1240,43:ae}),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:1241}),$(_e,Tt),$(_e,It),{19:[1,1245],21:[1,1249],22:1243,33:1242,200:1244,214:1246,215:[1,1248],216:[1,1247]},{119:[1,1250],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:1251}),$(mn,bt,{93:1252}),$(yt,St,{99:810,95:1253,101:si,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,1254]},$(mn,Gt),{70:[1,1255]},$(Sn,vn,{83:1256,84:1257,192:1258,190:[1,1259]}),$(An,vn,{83:1260,84:1261,192:1262,190:xa}),$(dt,wn,{99:537,95:1264,101:$r,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:1265,95:1266,91:1267,99:1268,105:1270,107:1271,101:ga,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:1265,95:1266,91:1267,99:1268,105:1270,107:1271,101:ga,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:1265,95:1266,91:1267,99:1268,105:1270,107:1271,101:ga,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:1272,84:1273,192:1274,190:[1,1275]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,1276],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1277,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,1278]},$(Dt,gr),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:1279}),$(_e,Tt),$(_e,It),{19:[1,1283],21:[1,1287],22:1281,33:1280,200:1282,214:1284,215:[1,1286],216:[1,1285]},{119:[1,1288],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:1289}),$(mn,bt,{93:1290}),$(yt,St,{99:857,95:1291,101:ii,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,1292]},$(mn,Gt),{70:[1,1293]},$(Sn,vn,{83:1294,84:1295,192:1296,190:[1,1297]}),$(An,vn,{83:1298,84:1299,192:1300,190:_a}),$(dt,wn,{99:573,95:1302,101:Mr,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:1303,95:1304,91:1305,99:1306,105:1308,107:1309,101:Ea,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:1303,95:1304,91:1305,99:1306,105:1308,107:1309,101:Ea,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:1303,95:1304,91:1305,99:1306,105:1308,107:1309,101:Ea,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:1310,84:1311,192:1312,190:[1,1313]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,1314],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1315,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,1316]},$(Dt,gr),$(yt,Hi),$(ui,vn,{84:899,192:900,83:1317,190:ci}),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1318,121:nr,148:rr,189:sr}),$(ui,vn,{84:899,192:900,83:1319,190:ci}),$(Ur,wn,{99:602,95:1320,101:Gr,102:Fe,103:ke,104:Le}),$(ai,Tn),$(ai,cr),$(Br,da),$(ba,Kr),$(Vr,Wr),$(ba,Yr,{31:1321,193:[1,1322]}),{19:es,21:ts,22:643,129:1323,199:ns,214:646,215:rs},$(Br,ss),$(Ur,Wr),$(Br,Yr,{31:1324,193:[1,1325]}),{19:es,21:ts,22:643,129:1326,199:ns,214:646,215:rs},$(Sa,cs),$(Jr,Wr),$(Sa,Yr,{31:1327,193:[1,1328]}),{19:es,21:ts,22:643,129:1329,199:ns,214:646,215:rs},$(zr,is),$(Xr,as),$(Xr,os),$(Xr,us),{100:[1,1330]},$(Xr,Gt),{100:[1,1332],106:1331,108:[1,1333],109:[1,1334],110:1335,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1336]},{121:[1,1337]},$(Xr,ls),{19:[1,1340],21:[1,1343],22:1339,87:1338,214:1341,215:[1,1342]},$(qr,cn),$(qr,Ye,{52:1344,53:[1,1345]}),$(Br,tt),$(be,Se,{65:1346,67:1347,72:1348,44:1349,78:1350,118:1354,51:nt,53:nt,70:nt,79:[1,1351],80:[1,1352],81:[1,1353]}),$(Br,at),$(Br,ot,{68:1355,64:1356,73:1357,92:1358,94:1359,95:1363,99:1364,96:[1,1360],97:[1,1361],98:[1,1362],101:va,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:1366,43:ft,79:Ve,80:Ue,81:Je}),$(Br,ht),$(Vr,mt,{82:1367}),$(Ur,mt,{82:1368}),$(Sa,gt),$(Sa,_t),$(zr,bt,{93:1369}),$(Vr,St,{99:947,95:1370,101:fi,102:Fe,103:ke,104:Le}),$(Xr,At,{86:1371}),$(Xr,At,{86:1372}),$(Xr,At,{86:1373}),$(Ur,Ot,{105:951,107:952,91:1374,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Jr,mt,{82:1375}),$(Sa,Tt),$(Sa,It),{19:[1,1379],21:[1,1383],22:1377,33:1376,200:1378,214:1380,215:[1,1382],216:[1,1381]},$(zr,Nt),$(zr,Ft),$(zr,kt),$(zr,Lt),$(Xr,Rt),$(jt,Ct,{162:1384}),$(Hr,$t),{119:[1,1385],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,1386]},$(zr,Gt),$(Xr,ee),$(Xr,te),{100:[1,1388],106:1387,108:[1,1389],109:[1,1390],110:1391,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1392]},$(Xr,ne),$(Xr,re),$(Br,tt),$(be,Se,{65:1393,67:1394,72:1395,44:1396,78:1397,118:1401,51:nt,53:nt,70:nt,79:[1,1398],80:[1,1399],81:[1,1400]}),$(Br,at),$(Br,ot,{68:1402,64:1403,73:1404,92:1405,94:1406,95:1410,99:1411,96:[1,1407],97:[1,1408],98:[1,1409],101:Aa,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:1413,43:ft,79:Ve,80:Ue,81:Je}),$(Br,ht),$(Vr,mt,{82:1414}),$(Ur,mt,{82:1415}),$(Sa,gt),$(Sa,_t),$(zr,bt,{93:1416}),$(Vr,St,{99:983,95:1417,101:hi,102:Fe,103:ke,104:Le}),$(Xr,At,{86:1418}),$(Xr,At,{86:1419}),$(Xr,At,{86:1420}),$(Ur,Ot,{105:987,107:988,91:1421,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Jr,mt,{82:1422}),$(Sa,Tt),$(Sa,It),{19:[1,1426],21:[1,1430],22:1424,33:1423,200:1425,214:1427,215:[1,1429],216:[1,1428]},$(zr,Nt),$(zr,Ft),$(zr,kt),$(zr,Lt),$(Xr,Rt),$(jt,Ct,{162:1431}),$(Hr,$t),{119:[1,1432],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,1433]},$(zr,Gt),$(Xr,ee),$(Xr,te),{100:[1,1435],106:1434,108:[1,1436],109:[1,1437],110:1438,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1439]},$(Xr,ne),$(Xr,re),{193:[1,1442],194:1440,195:[1,1441]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:1443,203:1444,111:[1,1445]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,1448],194:1446,195:[1,1447]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:1449,203:1450,111:[1,1451]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,1454],21:[1,1457],22:1453,87:1452,214:1455,215:[1,1456]},{193:[1,1460],194:1458,195:[1,1459]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:1461,203:1462,111:[1,1463]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(Ii,[2,190]),{19:Ni,21:Fi,22:1076,214:1080,215:Ji},$(Ii,[2,192]),{100:ki,108:Li,109:Ri,110:1087,181:1077,196:1081,197:1082,198:1083,201:1086,204:Ci,205:Di,206:$i,207:Pi,208:Mi,209:Qi,210:Bi,211:Gi,212:Vi,213:Ui},$(Ii,[2,194]),{185:ji},$(Ii,ka,{180:1464,178:La}),$(Ii,ka,{180:1466,178:La}),$(Ii,ka,{180:1467,178:La}),$(Ra,ee),$(Ra,te),$(Ra,hs),$(Ra,ds),$(Ra,ms),$(Ra,ne),$(Ra,re),$(Ra,ys),$(Ra,xs,{202:1468,203:1469,111:[1,1470]}),$(Ra,gs),$(Ra,_s),$(Ra,Es),$(Ra,bs),$(Ra,Ss),$(Ra,vs),$(Ra,As),$(Ra,Os),$(Ra,ws),$(ja,dr),$(ja,mr),$(ja,yr),$(ja,xr),$(jt,[2,201],{170:1471,179:Oi}),$(jt,[2,210],{172:1472,179:wi}),$(jt,[2,218],{174:1473,179:Ti}),$(fs,Ca),$(fs,Rt),$(Ls,Da),$(Ls,$a),$(Ls,Pa),$(Bs,Ma),$(Bs,Qa),$(Bs,Ba),$(se,ie,{46:1474,47:1475,55:1476,59:1477,40:1478,43:ae}),$(Ga,Js),$(Ga,zs),$(Ga,ee),$(Ga,te),$(Ga,ne),$(Ga,re),{70:[1,1479]},{70:Is},{70:Ns,133:1480,134:1481,135:Va},{70:ks},$(Ua,Rs),$(Ua,js),$(Ua,Cs,{139:1483,142:1484,143:1487,140:Ja,141:za}),$(Ps,Ms,{155:697,145:1488,150:1489,151:1490,154:1491,69:[1,1492],160:Qs}),$(Xa,Gs),{19:[1,1496],21:[1,1500],22:1494,149:1493,200:1495,214:1497,215:[1,1499],216:[1,1498]},$(be,cs),$(Vs,Wr),$(be,Yr,{31:1501,193:[1,1502]}),{19:es,21:ts,22:643,129:1503,199:ns,214:646,215:rs},{121:[1,1504]},$(Xs,di),{19:q,21:Z,22:1505,214:45,215:K},{19:Ha,21:qa,22:1507,100:[1,1518],108:[1,1519],109:[1,1520],110:1517,181:1508,191:1506,196:1511,197:1512,198:1513,201:1516,204:[1,1521],205:[1,1522],206:[1,1527],207:[1,1528],208:[1,1529],209:[1,1530],210:[1,1523],211:[1,1524],212:[1,1525],213:[1,1526],214:1510,215:Za},$(_r,Hi),$(xe,Ye,{52:1531,53:[1,1532]}),$(_e,tt),$(_e,nt,{65:1533,67:1534,72:1535,44:1536,78:1537,118:1541,79:[1,1538],80:[1,1539],81:[1,1540],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:1542,64:1543,73:1544,92:1545,94:1546,95:1550,99:1551,96:[1,1547],97:[1,1548],98:[1,1549],101:Ka,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:1553,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:1554}),$(yt,mt,{82:1555}),$(xt,gt),$(xt,_t),$(Et,bt,{93:1556}),$(dt,St,{99:1167,95:1557,101:ma,102:Fe,103:ke,104:Le}),$(vt,At,{86:1558}),$(vt,At,{86:1559}),$(vt,At,{86:1560}),$(yt,Ot,{105:1171,107:1172,91:1561,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:1562}),$(xt,Tt),$(xt,It),{19:[1,1566],21:[1,1570],22:1564,33:1563,200:1565,214:1567,215:[1,1569],216:[1,1568]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:1571}),$(Dt,$t),{119:[1,1572],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,1573]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,1575],106:1574,108:[1,1576],109:[1,1577],110:1578,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1579]},$(vt,ne),$(vt,re),$(_e,tt),$(_e,nt,{65:1580,67:1581,72:1582,44:1583,78:1584,118:1588,79:[1,1585],80:[1,1586],81:[1,1587],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:1589,64:1590,73:1591,92:1592,94:1593,95:1597,99:1598,96:[1,1594],97:[1,1595],98:[1,1596],101:Wa,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:1600,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:1601}),$(yt,mt,{82:1602}),$(xt,gt),$(xt,_t),$(Et,bt,{93:1603}),$(dt,St,{99:1203,95:1604,101:ya,102:Fe,103:ke,104:Le}),$(vt,At,{86:1605}),$(vt,At,{86:1606}),$(vt,At,{86:1607}),$(yt,Ot,{105:1207,107:1208,91:1608,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:1609}),$(xt,Tt),$(xt,It),{19:[1,1613],21:[1,1617],22:1611,33:1610,200:1612,214:1614,215:[1,1616],216:[1,1615]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:1618}),$(Dt,$t),{119:[1,1619],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,1620]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,1622],106:1621,108:[1,1623],109:[1,1624],110:1625,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1626]},$(vt,ne),$(vt,re),$(_e,cs),{121:[1,1627]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:1628,214:45,215:K},{19:Ya,21:eo,22:1630,100:[1,1641],108:[1,1642],109:[1,1643],110:1640,181:1631,191:1629,196:1634,197:1635,198:1636,201:1639,204:[1,1644],205:[1,1645],206:[1,1650],207:[1,1651],208:[1,1652],209:[1,1653],210:[1,1646],211:[1,1647],212:[1,1648],213:[1,1649],214:1633,215:to},$(An,di),{19:q,21:Z,22:1654,214:45,215:K},{19:no,21:ro,22:1656,100:[1,1667],108:[1,1668],109:[1,1669],110:1666,181:1657,191:1655,196:1660,197:1661,198:1662,201:1665,204:[1,1670],205:[1,1671],206:[1,1676],207:[1,1677],208:[1,1678],209:[1,1679],210:[1,1672],211:[1,1673],212:[1,1674],213:[1,1675],214:1659,215:so},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,1680]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:1681,214:45,215:K},{19:io,21:ao,22:1683,100:[1,1694],108:[1,1695],109:[1,1696],110:1693,181:1684,191:1682,196:1687,197:1688,198:1689,201:1692,204:[1,1697],205:[1,1698],206:[1,1703],207:[1,1704],208:[1,1705],209:[1,1706],210:[1,1699],211:[1,1700],212:[1,1701],213:[1,1702],214:1686,215:oo},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(_e,da),$(_e,Pr),$(be,Se,{62:1707,64:1708,66:1709,67:1710,73:1713,75:1714,72:1715,44:1716,92:1717,94:1718,87:1720,88:1721,89:1722,78:1723,95:1730,22:1731,91:1733,118:1734,99:1735,214:1738,105:1739,107:1740,19:[1,1737],21:[1,1742],69:[1,1711],71:[1,1712],79:[1,1724],80:[1,1725],81:[1,1726],85:[1,1719],96:[1,1727],97:[1,1728],98:[1,1729],101:uo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,1732],215:[1,1741]}),$(An,vn,{84:1261,192:1262,83:1743,190:xa}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1744,121:nr,148:rr,189:sr}),$(An,vn,{84:1261,192:1262,83:1745,190:xa}),$(yt,wn,{99:810,95:1746,101:si,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:1747,193:[1,1748]}),{19:es,21:ts,22:643,129:1749,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:1750,193:[1,1751]}),{19:es,21:ts,22:643,129:1752,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,1753]},$(vt,Gt),{100:[1,1755],106:1754,108:[1,1756],109:[1,1757],110:1758,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1759]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:1760,193:[1,1761]}),{19:es,21:ts,22:643,129:1762,199:ns,214:646,215:rs},$(vt,ls),{121:[1,1763]},{19:[1,1766],21:[1,1769],22:1765,87:1764,214:1767,215:[1,1768]},$(An,vn,{84:1299,192:1300,83:1770,190:_a}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1771,121:nr,148:rr,189:sr}),$(An,vn,{84:1299,192:1300,83:1772,190:_a}),$(yt,wn,{99:857,95:1773,101:ii,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:1774,193:[1,1775]}),{19:es,21:ts,22:643,129:1776,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:1777,193:[1,1778]}),{19:es,21:ts,22:643,129:1779,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,1780]},$(vt,Gt),{100:[1,1782],106:1781,108:[1,1783],109:[1,1784],110:1785,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,1786]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:1787,193:[1,1788]}),{19:es,21:ts,22:643,129:1789,199:ns,214:646,215:rs},$(vt,ls),{121:[1,1790]},{19:[1,1793],21:[1,1796],22:1792,87:1791,214:1794,215:[1,1795]},$(Br,cs),{121:[1,1797]},$(Br,Kr),$(ai,is),$(oi,di),{19:q,21:Z,22:1798,214:45,215:K},{19:co,21:lo,22:1800,100:[1,1811],108:[1,1812],109:[1,1813],110:1810,181:1801,191:1799,196:1804,197:1805,198:1806,201:1809,204:[1,1814],205:[1,1815],206:[1,1820],207:[1,1821],208:[1,1822],209:[1,1823],210:[1,1816],211:[1,1817],212:[1,1818],213:[1,1819],214:1803,215:po},$(ui,di),{19:q,21:Z,22:1824,214:45,215:K},{19:fo,21:ho,22:1826,100:[1,1837],108:[1,1838],109:[1,1839],110:1836,181:1827,191:1825,196:1830,197:1831,198:1832,201:1835,204:[1,1840],205:[1,1841],206:[1,1846],207:[1,1847],208:[1,1848],209:[1,1849],210:[1,1842],211:[1,1843],212:[1,1844],213:[1,1845],214:1829,215:mo},$(li,di),{19:q,21:Z,22:1850,214:45,215:K},{19:yo,21:xo,22:1852,100:[1,1863],108:[1,1864],109:[1,1865],110:1862,181:1853,191:1851,196:1856,197:1857,198:1858,201:1861,204:[1,1866],205:[1,1867],206:[1,1872],207:[1,1873],208:[1,1874],209:[1,1875],210:[1,1868],211:[1,1869],212:[1,1870],213:[1,1871],214:1855,215:go},$(Xr,cr),$(Xr,lr),$(Xr,pr),$(Xr,fr),$(Xr,hr),{111:[1,1876]},$(Xr,gr),$(Jr,Hi),$(Hr,ha),$(Hr,Rt),$(Hr,ee),$(Hr,te),$(Hr,ne),$(Hr,re),$(Br,ln),$(se,ie,{54:1877,40:1878,43:ae}),$(Br,pn),$(Br,fn),$(Br,gt),$(Br,_t),$(Ur,mt,{82:1879}),$(Br,Tt),$(Br,It),{19:[1,1883],21:[1,1887],22:1881,33:1880,200:1882,214:1884,215:[1,1886],216:[1,1885]},{119:[1,1888],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Br,hn),$(Br,dn),$(Ur,mt,{82:1889}),$(ai,bt,{93:1890}),$(Ur,St,{99:1364,95:1891,101:va,102:Fe,103:ke,104:Le}),$(ai,Nt),$(ai,Ft),$(ai,kt),$(ai,Lt),{100:[1,1892]},$(ai,Gt),{70:[1,1893]},$(oi,vn,{83:1894,84:1895,192:1896,190:[1,1897]}),$(ui,vn,{83:1898,84:1899,192:1900,190:_o}),$(Vr,wn,{99:947,95:1902,101:fi,102:Fe,103:ke,104:Le}),$(zr,Tn),$(Ur,In,{90:1903,95:1904,91:1905,99:1906,105:1908,107:1909,101:Eo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,Fn,{90:1903,95:1904,91:1905,99:1906,105:1908,107:1909,101:Eo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,kn,{90:1903,95:1904,91:1905,99:1906,105:1908,107:1909,101:Eo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Hr,Ln),$(li,vn,{83:1910,84:1911,192:1912,190:[1,1913]}),$(Sa,jn),$(Sa,ce),$(Sa,le),$(Sa,ee),$(Sa,te),$(Sa,pe),$(Sa,ne),$(Sa,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,1914],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1915,121:nr,148:rr,189:sr}),$(zr,cr),$(Hr,lr),$(Hr,pr),$(Hr,fr),$(Hr,hr),{111:[1,1916]},$(Hr,gr),$(Br,pn),$(Br,fn),$(Br,gt),$(Br,_t),$(Ur,mt,{82:1917}),$(Br,Tt),$(Br,It),{19:[1,1921],21:[1,1925],22:1919,33:1918,200:1920,214:1922,215:[1,1924],216:[1,1923]},{119:[1,1926],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Br,hn),$(Br,dn),$(Ur,mt,{82:1927}),$(ai,bt,{93:1928}),$(Ur,St,{99:1411,95:1929,101:Aa,102:Fe,103:ke,104:Le}),$(ai,Nt),$(ai,Ft),$(ai,kt),$(ai,Lt),{100:[1,1930]},$(ai,Gt),{70:[1,1931]},$(oi,vn,{83:1932,84:1933,192:1934,190:[1,1935]}),$(ui,vn,{83:1936,84:1937,192:1938,190:bo}),$(Vr,wn,{99:983,95:1940,101:hi,102:Fe,103:ke,104:Le}),$(zr,Tn),$(Ur,In,{90:1941,95:1942,91:1943,99:1944,105:1946,107:1947,101:So,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,Fn,{90:1941,95:1942,91:1943,99:1944,105:1946,107:1947,101:So,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,kn,{90:1941,95:1942,91:1943,99:1944,105:1946,107:1947,101:So,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Hr,Ln),$(li,vn,{83:1948,84:1949,192:1950,190:[1,1951]}),$(Sa,jn),$(Sa,ce),$(Sa,le),$(Sa,ee),$(Sa,te),$(Sa,pe),$(Sa,ne),$(Sa,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,1952],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:1953,121:nr,148:rr,189:sr}),$(zr,cr),$(Hr,lr),$(Hr,pr),$(Hr,fr),$(Hr,hr),{111:[1,1954]},$(Hr,gr),$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:mi,21:yi,22:1956,87:1955,214:996,215:xi},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:_i,21:Ei,22:1958,87:1957,214:1022,215:bi},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:Si,21:vi,22:1960,87:1959,214:1049,215:Ai},$(Ii,[2,204]),$(Ii,[2,206]),$(Ii,[2,213]),$(Ii,[2,221]),$(Ra,zi),$(Ra,Xi),{19:Ni,21:Fi,22:1962,87:1961,214:1080,215:Ji},$(Ii,[2,200]),$(Ii,[2,209]),$(Ii,[2,217]),$(vo,Ao,{152:1963,153:1964,156:Oo,157:wo,158:To,159:Io}),$(No,Fo),$(ko,Lo,{56:1969}),$(Ro,jo,{60:1970}),$(be,Se,{63:1971,73:1972,75:1973,76:1974,92:1977,94:1978,87:1980,88:1981,89:1982,78:1983,44:1984,95:1988,22:1989,91:1991,118:1992,99:1996,214:1999,105:2e3,107:2001,19:[1,1998],21:[1,2003],69:[1,1975],71:[1,1976],79:[1,1993],80:[1,1994],81:[1,1995],85:[1,1979],96:[1,1985],97:[1,1986],98:[1,1987],101:Co,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,1990],215:[1,2002]}),$(vo,Ao,{153:1964,152:2004,156:Oo,157:wo,158:To,159:Io}),{70:qi,134:2005,135:Va},$(Ua,Zi),$(er,tr,{147:406,136:1123,137:1124,138:1125,144:1126,146:1127,131:2006,148:rr,189:ua}),$(Ua,Ki),$(Ua,Cs,{139:2007,143:2008,140:Ja,141:za}),$(er,tr,{147:406,144:1126,146:1127,138:2009,70:Wi,135:Wi,148:rr,189:ua}),$(er,tr,{147:406,144:1126,146:1127,138:2010,70:Yi,135:Yi,148:rr,189:ua}),$(Xa,ea),$(Xa,ta),$(Xa,na),$(Xa,ra),{19:sa,21:ia,22:1113,129:2011,199:aa,214:1116,215:oa},$(er,tr,{147:406,130:1120,131:1121,132:1122,136:1123,137:1124,138:1125,144:1126,146:1127,126:2012,148:rr,189:ua}),$(Xa,ca),$(Xa,la),$(Xa,pa),$(Xa,ee),$(Xa,te),$(Xa,pe),$(Xa,ne),$(Xa,re),$(fa,di),{19:q,21:Z,22:2013,214:45,215:K},{19:Do,21:$o,22:2015,100:[1,2026],108:[1,2027],109:[1,2028],110:2025,181:2016,191:2014,196:2019,197:2020,198:2021,201:2024,204:[1,2029],205:[1,2030],206:[1,2035],207:[1,2036],208:[1,2037],209:[1,2038],210:[1,2031],211:[1,2032],212:[1,2033],213:[1,2034],214:2018,215:Po},$(Vs,Hi),{193:[1,2041],194:2039,195:[1,2040]},$(_r,Oa),$(_r,wa),$(_r,Ta),$(_r,ee),$(_r,te),$(_r,hs),$(_r,ds),$(_r,ms),$(_r,ne),$(_r,re),$(_r,ys),$(_r,xs,{202:2042,203:2043,111:[1,2044]}),$(_r,gs),$(_r,_s),$(_r,Es),$(_r,bs),$(_r,Ss),$(_r,vs),$(_r,As),$(_r,Os),$(_r,ws),$(Mo,dr),$(Mo,mr),$(Mo,yr),$(Mo,xr),$(_e,ln),$(se,ie,{54:2045,40:2046,43:ae}),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:2047}),$(_e,Tt),$(_e,It),{19:[1,2051],21:[1,2055],22:2049,33:2048,200:2050,214:2052,215:[1,2054],216:[1,2053]},{119:[1,2056],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:2057}),$(mn,bt,{93:2058}),$(yt,St,{99:1551,95:2059,101:Ka,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,2060]},$(mn,Gt),{70:[1,2061]},$(Sn,vn,{83:2062,84:2063,192:2064,190:[1,2065]}),$(An,vn,{83:2066,84:2067,192:2068,190:Qo}),$(dt,wn,{99:1167,95:2070,101:ma,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:2071,95:2072,91:2073,99:2074,105:2076,107:2077,101:Bo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:2071,95:2072,91:2073,99:2074,105:2076,107:2077,101:Bo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:2071,95:2072,91:2073,99:2074,105:2076,107:2077,101:Bo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:2078,84:2079,192:2080,190:[1,2081]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,2082],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2083,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,2084]},$(Dt,gr),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:2085}),$(_e,Tt),$(_e,It),{19:[1,2089],21:[1,2093],22:2087,33:2086,200:2088,214:2090,215:[1,2092],216:[1,2091]},{119:[1,2094],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:2095}),$(mn,bt,{93:2096}),$(yt,St,{99:1598,95:2097,101:Wa,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,2098]},$(mn,Gt),{70:[1,2099]},$(Sn,vn,{83:2100,84:2101,192:2102,190:[1,2103]}),$(An,vn,{83:2104,84:2105,192:2106,190:Go}),$(dt,wn,{99:1203,95:2108,101:ya,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:2109,95:2110,91:2111,99:2112,105:2114,107:2115,101:Vo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:2109,95:2110,91:2111,99:2112,105:2114,107:2115,101:Vo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:2109,95:2110,91:2111,99:2112,105:2114,107:2115,101:Vo,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:2116,84:2117,192:2118,190:[1,2119]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,2120],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2121,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,2122]},$(Dt,gr),$(yt,Hi),{193:[1,2125],194:2123,195:[1,2124]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:2126,203:2127,111:[1,2128]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,2131],194:2129,195:[1,2130]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:2132,203:2133,111:[1,2134]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,2137],21:[1,2140],22:2136,87:2135,214:2138,215:[1,2139]},{193:[1,2143],194:2141,195:[1,2142]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:2144,203:2145,111:[1,2146]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(_e,tt),$(_e,nt,{65:2147,67:2148,72:2149,44:2150,78:2151,118:2155,79:[1,2152],80:[1,2153],81:[1,2154],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:2156,64:2157,73:2158,92:2159,94:2160,95:2164,99:2165,96:[1,2161],97:[1,2162],98:[1,2163],101:Uo,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:2167,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:2168}),$(yt,mt,{82:2169}),$(xt,gt),$(xt,_t),$(Et,bt,{93:2170}),$(dt,St,{99:1735,95:2171,101:uo,102:Fe,103:ke,104:Le}),$(vt,At,{86:2172}),$(vt,At,{86:2173}),$(vt,At,{86:2174}),$(yt,Ot,{105:1739,107:1740,91:2175,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:2176}),$(xt,Tt),$(xt,It),{19:[1,2180],21:[1,2184],22:2178,33:2177,200:2179,214:2181,215:[1,2183],216:[1,2182]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:2185}),$(Dt,$t),{119:[1,2186],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,2187]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,2189],106:2188,108:[1,2190],109:[1,2191],110:2192,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2193]},$(vt,ne),$(vt,re),$(_e,cs),{121:[1,2194]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:2195,214:45,215:K},{19:Jo,21:zo,22:2197,100:[1,2208],108:[1,2209],109:[1,2210],110:2207,181:2198,191:2196,196:2201,197:2202,198:2203,201:2206,204:[1,2211],205:[1,2212],206:[1,2217],207:[1,2218],208:[1,2219],209:[1,2220],210:[1,2213],211:[1,2214],212:[1,2215],213:[1,2216],214:2200,215:Xo},$(An,di),{19:q,21:Z,22:2221,214:45,215:K},{19:Ho,21:qo,22:2223,100:[1,2234],108:[1,2235],109:[1,2236],110:2233,181:2224,191:2222,196:2227,197:2228,198:2229,201:2232,204:[1,2237],205:[1,2238],206:[1,2243],207:[1,2244],208:[1,2245],209:[1,2246],210:[1,2239],211:[1,2240],212:[1,2241],213:[1,2242],214:2226,215:Zo},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,2247]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:2248,214:45,215:K},{19:Ko,21:Wo,22:2250,100:[1,2261],108:[1,2262],109:[1,2263],110:2260,181:2251,191:2249,196:2254,197:2255,198:2256,201:2259,204:[1,2264],205:[1,2265],206:[1,2270],207:[1,2271],208:[1,2272],209:[1,2273],210:[1,2266],211:[1,2267],212:[1,2268],213:[1,2269],214:2253,215:Yo},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(_e,cs),{121:[1,2274]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:2275,214:45,215:K},{19:eu,21:tu,22:2277,100:[1,2288],108:[1,2289],109:[1,2290],110:2287,181:2278,191:2276,196:2281,197:2282,198:2283,201:2286,204:[1,2291],205:[1,2292],206:[1,2297],207:[1,2298],208:[1,2299],209:[1,2300],210:[1,2293],211:[1,2294],212:[1,2295],213:[1,2296],214:2280,215:nu},$(An,di),{19:q,21:Z,22:2301,214:45,215:K},{19:ru,21:su,22:2303,100:[1,2314],108:[1,2315],109:[1,2316],110:2313,181:2304,191:2302,196:2307,197:2308,198:2309,201:2312,204:[1,2317],205:[1,2318],206:[1,2323],207:[1,2324],208:[1,2325],209:[1,2326],210:[1,2319],211:[1,2320],212:[1,2321],213:[1,2322],214:2306,215:iu},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,2327]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:2328,214:45,215:K},{19:au,21:ou,22:2330,100:[1,2341],108:[1,2342],109:[1,2343],110:2340,181:2331,191:2329,196:2334,197:2335,198:2336,201:2339,204:[1,2344],205:[1,2345],206:[1,2350],207:[1,2351],208:[1,2352],209:[1,2353],210:[1,2346],211:[1,2347],212:[1,2348],213:[1,2349],214:2333,215:uu},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(Ur,Hi),{193:[1,2356],194:2354,195:[1,2355]},$(Vr,Oa),$(Vr,wa),$(Vr,Ta),$(Vr,ee),$(Vr,te),$(Vr,hs),$(Vr,ds),$(Vr,ms),$(Vr,ne),$(Vr,re),$(Vr,ys),$(Vr,xs,{202:2357,203:2358,111:[1,2359]}),$(Vr,gs),$(Vr,_s),$(Vr,Es),$(Vr,bs),$(Vr,Ss),$(Vr,vs),$(Vr,As),$(Vr,Os),$(Vr,ws),$(cu,dr),$(cu,mr),$(cu,yr),$(cu,xr),{193:[1,2362],194:2360,195:[1,2361]},$(Ur,Oa),$(Ur,wa),$(Ur,Ta),$(Ur,ee),$(Ur,te),$(Ur,hs),$(Ur,ds),$(Ur,ms),$(Ur,ne),$(Ur,re),$(Ur,ys),$(Ur,xs,{202:2363,203:2364,111:[1,2365]}),$(Ur,gs),$(Ur,_s),$(Ur,Es),$(Ur,bs),$(Ur,Ss),$(Ur,vs),$(Ur,As),$(Ur,Os),$(Ur,ws),$(lu,dr),$(lu,mr),$(lu,yr),$(lu,xr),{193:[1,2368],194:2366,195:[1,2367]},$(Jr,Oa),$(Jr,wa),$(Jr,Ta),$(Jr,ee),$(Jr,te),$(Jr,hs),$(Jr,ds),$(Jr,ms),$(Jr,ne),$(Jr,re),$(Jr,ys),$(Jr,xs,{202:2369,203:2370,111:[1,2371]}),$(Jr,gs),$(Jr,_s),$(Jr,Es),$(Jr,bs),$(Jr,Ss),$(Jr,vs),$(Jr,As),$(Jr,Os),$(Jr,ws),$(pu,dr),$(pu,mr),$(pu,yr),$(pu,xr),{19:[1,2374],21:[1,2377],22:2373,87:2372,214:2375,215:[1,2376]},$(Br,Pr),$(be,Se,{62:2378,64:2379,66:2380,67:2381,73:2384,75:2385,72:2386,44:2387,92:2388,94:2389,87:2391,88:2392,89:2393,78:2394,95:2401,22:2402,91:2404,118:2405,99:2406,214:2409,105:2410,107:2411,19:[1,2408],21:[1,2413],69:[1,2382],71:[1,2383],79:[1,2395],80:[1,2396],81:[1,2397],85:[1,2390],96:[1,2398],97:[1,2399],98:[1,2400],101:fu,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,2403],215:[1,2412]}),$(ui,vn,{84:1899,192:1900,83:2414,190:_o}),$(Br,jn),$(Br,ce),$(Br,le),$(Br,ee),$(Br,te),$(Br,pe),$(Br,ne),$(Br,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2415,121:nr,148:rr,189:sr}),$(ui,vn,{84:1899,192:1900,83:2416,190:_o}),$(Ur,wn,{99:1364,95:2417,101:va,102:Fe,103:ke,104:Le}),$(ai,Tn),$(ai,cr),$(Br,Qr),$(ba,Kr),$(Vr,Wr),$(ba,Yr,{31:2418,193:[1,2419]}),{19:es,21:ts,22:643,129:2420,199:ns,214:646,215:rs},$(Br,ss),$(Ur,Wr),$(Br,Yr,{31:2421,193:[1,2422]}),{19:es,21:ts,22:643,129:2423,199:ns,214:646,215:rs},$(zr,is),$(Xr,as),$(Xr,os),$(Xr,us),{100:[1,2424]},$(Xr,Gt),{100:[1,2426],106:2425,108:[1,2427],109:[1,2428],110:2429,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2430]},$(Sa,cs),$(Jr,Wr),$(Sa,Yr,{31:2431,193:[1,2432]}),{19:es,21:ts,22:643,129:2433,199:ns,214:646,215:rs},$(Xr,ls),{121:[1,2434]},{19:[1,2437],21:[1,2440],22:2436,87:2435,214:2438,215:[1,2439]},$(ui,vn,{84:1937,192:1938,83:2441,190:bo}),$(Br,jn),$(Br,ce),$(Br,le),$(Br,ee),$(Br,te),$(Br,pe),$(Br,ne),$(Br,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2442,121:nr,148:rr,189:sr}),$(ui,vn,{84:1937,192:1938,83:2443,190:bo}),$(Ur,wn,{99:1411,95:2444,101:Aa,102:Fe,103:ke,104:Le}),$(ai,Tn),$(ai,cr),$(Br,Qr),$(ba,Kr),$(Vr,Wr),$(ba,Yr,{31:2445,193:[1,2446]}),{19:es,21:ts,22:643,129:2447,199:ns,214:646,215:rs},$(Br,ss),$(Ur,Wr),$(Br,Yr,{31:2448,193:[1,2449]}),{19:es,21:ts,22:643,129:2450,199:ns,214:646,215:rs},$(zr,is),$(Xr,as),$(Xr,os),$(Xr,us),{100:[1,2451]},$(Xr,Gt),{100:[1,2453],106:2452,108:[1,2454],109:[1,2455],110:2456,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2457]},$(Sa,cs),$(Jr,Wr),$(Sa,Yr,{31:2458,193:[1,2459]}),{19:es,21:ts,22:643,129:2460,199:ns,214:646,215:rs},$(Xr,ls),{121:[1,2461]},{19:[1,2464],21:[1,2467],22:2463,87:2462,214:2465,215:[1,2466]},$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(Ra,Ca),$(Ra,Rt),$(vo,mt,{82:2468}),$(vo,hu),$(vo,du),$(vo,mu),$(vo,yu),$(vo,xu),$(No,gu,{57:2469,51:[1,2470]}),$(ko,_u,{61:2471,53:[1,2472]}),$(Ro,Eu),$(Ro,bu,{74:2473,76:2474,78:2475,44:2476,118:2477,79:[1,2478],80:[1,2479],81:[1,2480],119:Se,125:Se,127:Se,189:Se,218:Se}),$(Ro,Su),$(Ro,vu,{77:2481,73:2482,92:2483,94:2484,95:2488,99:2489,96:[1,2485],97:[1,2486],98:[1,2487],101:Au,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:2491,43:ft,79:Ve,80:Ue,81:Je}),$(Ro,Ou),$(wu,bt,{93:2492}),$(Tu,St,{99:1996,95:2493,101:Co,102:Fe,103:ke,104:Le}),$(Iu,At,{86:2494}),$(Iu,At,{86:2495}),$(Iu,At,{86:2496}),$(Ro,Ot,{105:2e3,107:2001,91:2497,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Nu,Fu),$(Nu,ku),$(wu,Nt),$(wu,Ft),$(wu,kt),$(wu,Lt),$(Iu,Rt),$(jt,Ct,{162:2498}),$(Lu,$t),{119:[1,2499],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Nu,Tt),$(Nu,It),{19:[1,2503],21:[1,2507],22:2501,33:2500,200:2502,214:2504,215:[1,2506],216:[1,2505]},{100:[1,2508]},$(wu,Gt),$(Iu,ee),$(Iu,te),{100:[1,2510],106:2509,108:[1,2511],109:[1,2512],110:2513,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2514]},$(Iu,ne),$(Iu,re),$(vo,mt,{82:2515}),$(Ua,Da),$(Ua,$a),$(Ua,Pa),$(Xa,Ma),$(Xa,Qa),$(Xa,Ba),$(se,ie,{46:2516,47:2517,55:2518,59:2519,40:2520,43:ae}),{70:[1,2521]},{193:[1,2524],194:2522,195:[1,2523]},$(Vs,Oa),$(Vs,wa),$(Vs,Ta),$(Vs,ee),$(Vs,te),$(Vs,hs),$(Vs,ds),$(Vs,ms),$(Vs,ne),$(Vs,re),$(Vs,ys),$(Vs,xs,{202:2525,203:2526,111:[1,2527]}),$(Vs,gs),$(Vs,_s),$(Vs,Es),$(Vs,bs),$(Vs,Ss),$(Vs,vs),$(Vs,As),$(Vs,Os),$(Vs,ws),$(Ru,dr),$(Ru,mr),$(Ru,yr),$(Ru,xr),$(Xs,He),$(Xs,qe),$(Xs,Ze),$(_r,zi),$(_r,Xi),{19:Ha,21:qa,22:2529,87:2528,214:1510,215:Za},$(_e,Pr),$(be,Se,{62:2530,64:2531,66:2532,67:2533,73:2536,75:2537,72:2538,44:2539,92:2540,94:2541,87:2543,88:2544,89:2545,78:2546,95:2553,22:2554,91:2556,118:2557,99:2558,214:2561,105:2562,107:2563,19:[1,2560],21:[1,2565],69:[1,2534],71:[1,2535],79:[1,2547],80:[1,2548],81:[1,2549],85:[1,2542],96:[1,2550],97:[1,2551],98:[1,2552],101:ju,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,2555],215:[1,2564]}),$(An,vn,{84:2067,192:2068,83:2566,190:Qo}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2567,121:nr,148:rr,189:sr}),$(An,vn,{84:2067,192:2068,83:2568,190:Qo}),$(yt,wn,{99:1551,95:2569,101:Ka,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:2570,193:[1,2571]}),{19:es,21:ts,22:643,129:2572,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:2573,193:[1,2574]}),{19:es,21:ts,22:643,129:2575,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,2576]},$(vt,Gt),{100:[1,2578],106:2577,108:[1,2579],109:[1,2580],110:2581,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2582]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:2583,193:[1,2584]}),{19:es,21:ts,22:643,129:2585,199:ns,214:646,215:rs},$(vt,ls),{121:[1,2586]},{19:[1,2589],21:[1,2592],22:2588,87:2587,214:2590,215:[1,2591]},$(An,vn,{84:2105,192:2106,83:2593,190:Go}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2594,121:nr,148:rr,189:sr}),$(An,vn,{84:2105,192:2106,83:2595,190:Go}),$(yt,wn,{99:1598,95:2596,101:Wa,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:2597,193:[1,2598]}),{19:es,21:ts,22:643,129:2599,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:2600,193:[1,2601]}),{19:es,21:ts,22:643,129:2602,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,2603]},$(vt,Gt),{100:[1,2605],106:2604,108:[1,2606],109:[1,2607],110:2608,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2609]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:2610,193:[1,2611]}),{19:es,21:ts,22:643,129:2612,199:ns,214:646,215:rs},$(vt,ls),{121:[1,2613]},{19:[1,2616],21:[1,2619],22:2615,87:2614,214:2617,215:[1,2618]},$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:Ya,21:eo,22:2621,87:2620,214:1633,215:to},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:no,21:ro,22:2623,87:2622,214:1659,215:so},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:io,21:ao,22:2625,87:2624,214:1686,215:oo},$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:2626}),$(_e,Tt),$(_e,It),{19:[1,2630],21:[1,2634],22:2628,33:2627,200:2629,214:2631,215:[1,2633],216:[1,2632]},{119:[1,2635],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:2636}),$(mn,bt,{93:2637}),$(yt,St,{99:2165,95:2638,101:Uo,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,2639]},$(mn,Gt),{70:[1,2640]},$(Sn,vn,{83:2641,84:2642,192:2643,190:[1,2644]}),$(An,vn,{83:2645,84:2646,192:2647,190:Cu}),$(dt,wn,{99:1735,95:2649,101:uo,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:2650,95:2651,91:2652,99:2653,105:2655,107:2656,101:Du,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:2650,95:2651,91:2652,99:2653,105:2655,107:2656,101:Du,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:2650,95:2651,91:2652,99:2653,105:2655,107:2656,101:Du,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:2657,84:2658,192:2659,190:[1,2660]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,2661],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2662,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,2663]},$(Dt,gr),$(yt,Hi),{193:[1,2666],194:2664,195:[1,2665]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:2667,203:2668,111:[1,2669]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,2672],194:2670,195:[1,2671]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:2673,203:2674,111:[1,2675]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,2678],21:[1,2681],22:2677,87:2676,214:2679,215:[1,2680]},{193:[1,2684],194:2682,195:[1,2683]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:2685,203:2686,111:[1,2687]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(yt,Hi),{193:[1,2690],194:2688,195:[1,2689]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:2691,203:2692,111:[1,2693]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,2696],194:2694,195:[1,2695]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:2697,203:2698,111:[1,2699]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,2702],21:[1,2705],22:2701,87:2700,214:2703,215:[1,2704]},{193:[1,2708],194:2706,195:[1,2707]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:2709,203:2710,111:[1,2711]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(oi,He),$(oi,qe),$(oi,Ze),$(Vr,zi),$(Vr,Xi),{19:co,21:lo,22:2713,87:2712,214:1803,215:po},$(ui,He),$(ui,qe),$(ui,Ze),$(Ur,zi),$(Ur,Xi),{19:fo,21:ho,22:2715,87:2714,214:1829,215:mo},$(li,He),$(li,qe),$(li,Ze),$(Jr,zi),$(Jr,Xi),{19:yo,21:xo,22:2717,87:2716,214:1855,215:go},$(Xr,ha),$(Xr,Rt),$(Xr,ee),$(Xr,te),$(Xr,ne),$(Xr,re),$(Br,tt),$(be,Se,{65:2718,67:2719,72:2720,44:2721,78:2722,118:2726,51:nt,53:nt,70:nt,79:[1,2723],80:[1,2724],81:[1,2725]}),$(Br,at),$(Br,ot,{68:2727,64:2728,73:2729,92:2730,94:2731,95:2735,99:2736,96:[1,2732],97:[1,2733],98:[1,2734],101:$u,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:2738,43:ft,79:Ve,80:Ue,81:Je}),$(Br,ht),$(Vr,mt,{82:2739}),$(Ur,mt,{82:2740}),$(Sa,gt),$(Sa,_t),$(zr,bt,{93:2741}),$(Vr,St,{99:2406,95:2742,101:fu,102:Fe,103:ke,104:Le}),$(Xr,At,{86:2743}),$(Xr,At,{86:2744}),$(Xr,At,{86:2745}),$(Ur,Ot,{105:2410,107:2411,91:2746,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Jr,mt,{82:2747}),$(Sa,Tt),$(Sa,It),{19:[1,2751],21:[1,2755],22:2749,33:2748,200:2750,214:2752,215:[1,2754],216:[1,2753]},$(zr,Nt),$(zr,Ft),$(zr,kt),$(zr,Lt),$(Xr,Rt),$(jt,Ct,{162:2756}),$(Hr,$t),{119:[1,2757],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,2758]},$(zr,Gt),$(Xr,ee),$(Xr,te),{100:[1,2760],106:2759,108:[1,2761],109:[1,2762],110:2763,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,2764]},$(Xr,ne),$(Xr,re),$(Br,cs),{121:[1,2765]},$(Br,Kr),$(ai,is),$(oi,di),{19:q,21:Z,22:2766,214:45,215:K},{19:Pu,21:Mu,22:2768,100:[1,2779],108:[1,2780],109:[1,2781],110:2778,181:2769,191:2767,196:2772,197:2773,198:2774,201:2777,204:[1,2782],205:[1,2783],206:[1,2788],207:[1,2789],208:[1,2790],209:[1,2791],210:[1,2784],211:[1,2785],212:[1,2786],213:[1,2787],214:2771,215:Qu},$(ui,di),{19:q,21:Z,22:2792,214:45,215:K},{19:Bu,21:Gu,22:2794,100:[1,2805],108:[1,2806],109:[1,2807],110:2804,181:2795,191:2793,196:2798,197:2799,198:2800,201:2803,204:[1,2808],205:[1,2809],206:[1,2814],207:[1,2815],208:[1,2816],209:[1,2817],210:[1,2810],211:[1,2811],212:[1,2812],213:[1,2813],214:2797,215:Vu},$(Xr,cr),$(Xr,lr),$(Xr,pr),$(Xr,fr),$(Xr,hr),{111:[1,2818]},$(Xr,gr),$(li,di),{19:q,21:Z,22:2819,214:45,215:K},{19:Uu,21:Ju,22:2821,100:[1,2832],108:[1,2833],109:[1,2834],110:2831,181:2822,191:2820,196:2825,197:2826,198:2827,201:2830,204:[1,2835],205:[1,2836],206:[1,2841],207:[1,2842],208:[1,2843],209:[1,2844],210:[1,2837],211:[1,2838],212:[1,2839],213:[1,2840],214:2824,215:zu},$(Jr,Hi),$(Hr,ha),$(Hr,Rt),$(Hr,ee),$(Hr,te),$(Hr,ne),$(Hr,re),$(Br,cs),{121:[1,2845]},$(Br,Kr),$(ai,is),$(oi,di),{19:q,21:Z,22:2846,214:45,215:K},{19:Xu,21:Hu,22:2848,100:[1,2859],108:[1,2860],109:[1,2861],110:2858,181:2849,191:2847,196:2852,197:2853,198:2854,201:2857,204:[1,2862],205:[1,2863],206:[1,2868],207:[1,2869],208:[1,2870],209:[1,2871],210:[1,2864],211:[1,2865],212:[1,2866],213:[1,2867],214:2851,215:qu},$(ui,di),{19:q,21:Z,22:2872,214:45,215:K},{19:Zu,21:Ku,22:2874,100:[1,2885],108:[1,2886],109:[1,2887],110:2884,181:2875,191:2873,196:2878,197:2879,198:2880,201:2883,204:[1,2888],205:[1,2889],206:[1,2894],207:[1,2895],208:[1,2896],209:[1,2897],210:[1,2890],211:[1,2891],212:[1,2892],213:[1,2893],214:2877,215:Wu},$(Xr,cr),$(Xr,lr),$(Xr,pr),$(Xr,fr),$(Xr,hr),{111:[1,2898]},$(Xr,gr),$(li,di),{19:q,21:Z,22:2899,214:45,215:K},{19:Yu,21:ec,22:2901,100:[1,2912],108:[1,2913],109:[1,2914],110:2911,181:2902,191:2900,196:2905,197:2906,198:2907,201:2910,204:[1,2915],205:[1,2916],206:[1,2921],207:[1,2922],208:[1,2923],209:[1,2924],210:[1,2917],211:[1,2918],212:[1,2919],213:[1,2920],214:2904,215:tc},$(Jr,Hi),$(Hr,ha),$(Hr,Rt),$(Hr,ee),$(Hr,te),$(Hr,ne),$(Hr,re),$(nc,vn,{83:2925,84:2926,192:2927,190:rc}),$(ko,sc),$(se,ie,{55:2929,59:2930,40:2931,43:ae}),$(Ro,ic),$(se,ie,{59:2932,40:2933,43:ae}),$(Ro,ac),$(Ro,oc),$(Ro,Fu),$(Ro,ku),{119:[1,2934],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Ro,Tt),$(Ro,It),{19:[1,2938],21:[1,2942],22:2936,33:2935,200:2937,214:2939,215:[1,2941],216:[1,2940]},$(Ro,uc),$(Ro,cc),$(lc,bt,{93:2943}),$(Ro,St,{99:2489,95:2944,101:Au,102:Fe,103:ke,104:Le}),$(lc,Nt),$(lc,Ft),$(lc,kt),$(lc,Lt),{100:[1,2945]},$(lc,Gt),{70:[1,2946]},$(Tu,wn,{99:1996,95:2947,101:Co,102:Fe,103:ke,104:Le}),$(wu,Tn),$(Ro,In,{90:2948,95:2949,91:2950,99:2951,105:2953,107:2954,101:pc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,Fn,{90:2948,95:2949,91:2950,99:2951,105:2953,107:2954,101:pc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,kn,{90:2948,95:2949,91:2950,99:2951,105:2953,107:2954,101:pc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Lu,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,2955],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:2956,121:nr,148:rr,189:sr}),$(Nu,jn),$(Nu,ce),$(Nu,le),$(Nu,ee),$(Nu,te),$(Nu,pe),$(Nu,ne),$(Nu,re),$(wu,cr),$(Lu,lr),$(Lu,pr),$(Lu,fr),$(Lu,hr),{111:[1,2957]},$(Lu,gr),$(nc,vn,{84:2926,192:2927,83:2958,190:rc}),$(fc,Ao,{152:2959,153:2960,156:hc,157:dc,158:mc,159:yc}),$(xc,Fo),$(gc,Lo,{56:2965}),$(_c,jo,{60:2966}),$(be,Se,{63:2967,73:2968,75:2969,76:2970,92:2973,94:2974,87:2976,88:2977,89:2978,78:2979,44:2980,95:2984,22:2985,91:2987,118:2988,99:2992,214:2995,105:2996,107:2997,19:[1,2994],21:[1,2999],69:[1,2971],71:[1,2972],79:[1,2989],80:[1,2990],81:[1,2991],85:[1,2975],96:[1,2981],97:[1,2982],98:[1,2983],101:Ec,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,2986],215:[1,2998]}),$(fc,Ao,{153:2960,152:3e3,156:hc,157:dc,158:mc,159:yc}),$(fa,He),$(fa,qe),$(fa,Ze),$(Vs,zi),$(Vs,Xi),{19:Do,21:$o,22:3002,87:3001,214:2018,215:Po},$(_r,Ca),$(_r,Rt),$(_e,tt),$(_e,nt,{65:3003,67:3004,72:3005,44:3006,78:3007,118:3011,79:[1,3008],80:[1,3009],81:[1,3010],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_e,at),$(_e,ot,{68:3012,64:3013,73:3014,92:3015,94:3016,95:3020,99:3021,96:[1,3017],97:[1,3018],98:[1,3019],101:bc,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:3023,43:ft,79:Ve,80:Ue,81:Je}),$(_e,ht),$(dt,mt,{82:3024}),$(yt,mt,{82:3025}),$(xt,gt),$(xt,_t),$(Et,bt,{93:3026}),$(dt,St,{99:2558,95:3027,101:ju,102:Fe,103:ke,104:Le}),$(vt,At,{86:3028}),$(vt,At,{86:3029}),$(vt,At,{86:3030}),$(yt,Ot,{105:2562,107:2563,91:3031,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(wt,mt,{82:3032}),$(xt,Tt),$(xt,It),{19:[1,3036],21:[1,3040],22:3034,33:3033,200:3035,214:3037,215:[1,3039],216:[1,3038]},$(Et,Nt),$(Et,Ft),$(Et,kt),$(Et,Lt),$(vt,Rt),$(jt,Ct,{162:3041}),$(Dt,$t),{119:[1,3042],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},{100:[1,3043]},$(Et,Gt),$(vt,ee),$(vt,te),{100:[1,3045],106:3044,108:[1,3046],109:[1,3047],110:3048,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3049]},$(vt,ne),$(vt,re),$(_e,cs),{121:[1,3050]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:3051,214:45,215:K},{19:Sc,21:vc,22:3053,100:[1,3064],108:[1,3065],109:[1,3066],110:3063,181:3054,191:3052,196:3057,197:3058,198:3059,201:3062,204:[1,3067],205:[1,3068],206:[1,3073],207:[1,3074],208:[1,3075],209:[1,3076],210:[1,3069],211:[1,3070],212:[1,3071],213:[1,3072],214:3056,215:Ac},$(An,di),{19:q,21:Z,22:3077,214:45,215:K},{19:Oc,21:wc,22:3079,100:[1,3090],108:[1,3091],109:[1,3092],110:3089,181:3080,191:3078,196:3083,197:3084,198:3085,201:3088,204:[1,3093],205:[1,3094],206:[1,3099],207:[1,3100],208:[1,3101],209:[1,3102],210:[1,3095],211:[1,3096],212:[1,3097],213:[1,3098],214:3082,215:Tc},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,3103]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:3104,214:45,215:K},{19:Ic,21:Nc,22:3106,100:[1,3117],108:[1,3118],109:[1,3119],110:3116,181:3107,191:3105,196:3110,197:3111,198:3112,201:3115,204:[1,3120],205:[1,3121],206:[1,3126],207:[1,3127],208:[1,3128],209:[1,3129],210:[1,3122],211:[1,3123],212:[1,3124],213:[1,3125],214:3109,215:Fc},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(_e,cs),{121:[1,3130]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:3131,214:45,215:K},{19:kc,21:Lc,22:3133,100:[1,3144],108:[1,3145],109:[1,3146],110:3143,181:3134,191:3132,196:3137,197:3138,198:3139,201:3142,204:[1,3147],205:[1,3148],206:[1,3153],207:[1,3154],208:[1,3155],209:[1,3156],210:[1,3149],211:[1,3150],212:[1,3151],213:[1,3152],214:3136,215:Rc},$(An,di),{19:q,21:Z,22:3157,214:45,215:K},{19:jc,21:Cc,22:3159,100:[1,3170],108:[1,3171],109:[1,3172],110:3169,181:3160,191:3158,196:3163,197:3164,198:3165,201:3168,204:[1,3173],205:[1,3174],206:[1,3179],207:[1,3180],208:[1,3181],209:[1,3182],210:[1,3175],211:[1,3176],212:[1,3177],213:[1,3178],214:3162,215:Dc},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,3183]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:3184,214:45,215:K},{19:$c,21:Pc,22:3186,100:[1,3197],108:[1,3198],109:[1,3199],110:3196,181:3187,191:3185,196:3190,197:3191,198:3192,201:3195,204:[1,3200],205:[1,3201],206:[1,3206],207:[1,3207],208:[1,3208],209:[1,3209],210:[1,3202],211:[1,3203],212:[1,3204],213:[1,3205],214:3189,215:Mc},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(An,vn,{84:2646,192:2647,83:3210,190:Cu}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3211,121:nr,148:rr,189:sr}),$(An,vn,{84:2646,192:2647,83:3212,190:Cu}),$(yt,wn,{99:2165,95:3213,101:Uo,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:3214,193:[1,3215]}),{19:es,21:ts,22:643,129:3216,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:3217,193:[1,3218]}),{19:es,21:ts,22:643,129:3219,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,3220]},$(vt,Gt),{100:[1,3222],106:3221,108:[1,3223],109:[1,3224],110:3225,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3226]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:3227,193:[1,3228]}),{19:es,21:ts,22:643,129:3229,199:ns,214:646,215:rs},$(vt,ls),{121:[1,3230]},{19:[1,3233],21:[1,3236],22:3232,87:3231,214:3234,215:[1,3235]},$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:Jo,21:zo,22:3238,87:3237,214:2200,215:Xo},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:Ho,21:qo,22:3240,87:3239,214:2226,215:Zo},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:Ko,21:Wo,22:3242,87:3241,214:2253,215:Yo},$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:eu,21:tu,22:3244,87:3243,214:2280,215:nu},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:ru,21:su,22:3246,87:3245,214:2306,215:iu},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:au,21:ou,22:3248,87:3247,214:2333,215:uu},$(Vr,Ca),$(Vr,Rt),$(Ur,Ca),$(Ur,Rt),$(Jr,Ca),$(Jr,Rt),$(Br,pn),$(Br,fn),$(Br,gt),$(Br,_t),$(Ur,mt,{82:3249}),$(Br,Tt),$(Br,It),{19:[1,3253],21:[1,3257],22:3251,33:3250,200:3252,214:3254,215:[1,3256],216:[1,3255]},{119:[1,3258],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Br,hn),$(Br,dn),$(Ur,mt,{82:3259}),$(ai,bt,{93:3260}),$(Ur,St,{99:2736,95:3261,101:$u,102:Fe,103:ke,104:Le}),$(ai,Nt),$(ai,Ft),$(ai,kt),$(ai,Lt),{100:[1,3262]},$(ai,Gt),{70:[1,3263]},$(oi,vn,{83:3264,84:3265,192:3266,190:[1,3267]}),$(ui,vn,{83:3268,84:3269,192:3270,190:Qc}),$(Vr,wn,{99:2406,95:3272,101:fu,102:Fe,103:ke,104:Le}),$(zr,Tn),$(Ur,In,{90:3273,95:3274,91:3275,99:3276,105:3278,107:3279,101:Bc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,Fn,{90:3273,95:3274,91:3275,99:3276,105:3278,107:3279,101:Bc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ur,kn,{90:3273,95:3274,91:3275,99:3276,105:3278,107:3279,101:Bc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Hr,Ln),$(li,vn,{83:3280,84:3281,192:3282,190:[1,3283]}),$(Sa,jn),$(Sa,ce),$(Sa,le),$(Sa,ee),$(Sa,te),$(Sa,pe),$(Sa,ne),$(Sa,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,3284],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3285,121:nr,148:rr,189:sr}),$(zr,cr),$(Hr,lr),$(Hr,pr),$(Hr,fr),$(Hr,hr),{111:[1,3286]},$(Hr,gr),$(Ur,Hi),{193:[1,3289],194:3287,195:[1,3288]},$(Vr,Oa),$(Vr,wa),$(Vr,Ta),$(Vr,ee),$(Vr,te),$(Vr,hs),$(Vr,ds),$(Vr,ms),$(Vr,ne),$(Vr,re),$(Vr,ys),$(Vr,xs,{202:3290,203:3291,111:[1,3292]}),$(Vr,gs),$(Vr,_s),$(Vr,Es),$(Vr,bs),$(Vr,Ss),$(Vr,vs),$(Vr,As),$(Vr,Os),$(Vr,ws),$(cu,dr),$(cu,mr),$(cu,yr),$(cu,xr),{193:[1,3295],194:3293,195:[1,3294]},$(Ur,Oa),$(Ur,wa),$(Ur,Ta),$(Ur,ee),$(Ur,te),$(Ur,hs),$(Ur,ds),$(Ur,ms),$(Ur,ne),$(Ur,re),$(Ur,ys),$(Ur,xs,{202:3296,203:3297,111:[1,3298]}),$(Ur,gs),$(Ur,_s),$(Ur,Es),$(Ur,bs),$(Ur,Ss),$(Ur,vs),$(Ur,As),$(Ur,Os),$(Ur,ws),$(lu,dr),$(lu,mr),$(lu,yr),$(lu,xr),{19:[1,3301],21:[1,3304],22:3300,87:3299,214:3302,215:[1,3303]},{193:[1,3307],194:3305,195:[1,3306]},$(Jr,Oa),$(Jr,wa),$(Jr,Ta),$(Jr,ee),$(Jr,te),$(Jr,hs),$(Jr,ds),$(Jr,ms),$(Jr,ne),$(Jr,re),$(Jr,ys),$(Jr,xs,{202:3308,203:3309,111:[1,3310]}),$(Jr,gs),$(Jr,_s),$(Jr,Es),$(Jr,bs),$(Jr,Ss),$(Jr,vs),$(Jr,As),$(Jr,Os),$(Jr,ws),$(pu,dr),$(pu,mr),$(pu,yr),$(pu,xr),$(Ur,Hi),{193:[1,3313],194:3311,195:[1,3312]},$(Vr,Oa),$(Vr,wa),$(Vr,Ta),$(Vr,ee),$(Vr,te),$(Vr,hs),$(Vr,ds),$(Vr,ms),$(Vr,ne),$(Vr,re),$(Vr,ys),$(Vr,xs,{202:3314,203:3315,111:[1,3316]}),$(Vr,gs),$(Vr,_s),$(Vr,Es),$(Vr,bs),$(Vr,Ss),$(Vr,vs),$(Vr,As),$(Vr,Os),$(Vr,ws),$(cu,dr),$(cu,mr),$(cu,yr),$(cu,xr),{193:[1,3319],194:3317,195:[1,3318]},$(Ur,Oa),$(Ur,wa),$(Ur,Ta),$(Ur,ee),$(Ur,te),$(Ur,hs),$(Ur,ds),$(Ur,ms),$(Ur,ne),$(Ur,re),$(Ur,ys),$(Ur,xs,{202:3320,203:3321,111:[1,3322]}),$(Ur,gs),$(Ur,_s),$(Ur,Es),$(Ur,bs),$(Ur,Ss),$(Ur,vs),$(Ur,As),$(Ur,Os),$(Ur,ws),$(lu,dr),$(lu,mr),$(lu,yr),$(lu,xr),{19:[1,3325],21:[1,3328],22:3324,87:3323,214:3326,215:[1,3327]},{193:[1,3331],194:3329,195:[1,3330]},$(Jr,Oa),$(Jr,wa),$(Jr,Ta),$(Jr,ee),$(Jr,te),$(Jr,hs),$(Jr,ds),$(Jr,ms),$(Jr,ne),$(Jr,re),$(Jr,ys),$(Jr,xs,{202:3332,203:3333,111:[1,3334]}),$(Jr,gs),$(Jr,_s),$(Jr,Es),$(Jr,bs),$(Jr,Ss),$(Jr,vs),$(Jr,As),$(Jr,Os),$(Jr,ws),$(pu,dr),$(pu,mr),$(pu,yr),$(pu,xr),$(Bs,Gc),$(vo,Wr),$(Bs,Yr,{31:3335,193:[1,3336]}),{19:es,21:ts,22:643,129:3337,199:ns,214:646,215:rs},$(ko,Vc),$(Ro,jo,{60:3338}),$(be,Se,{63:3339,73:3340,75:3341,76:3342,92:3345,94:3346,87:3348,88:3349,89:3350,78:3351,44:3352,95:3356,22:3357,91:3359,118:3360,99:3364,214:3367,105:3368,107:3369,19:[1,3366],21:[1,3371],69:[1,3343],71:[1,3344],79:[1,3361],80:[1,3362],81:[1,3363],85:[1,3347],96:[1,3353],97:[1,3354],98:[1,3355],101:Uc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,3358],215:[1,3370]}),$(Ro,Jc),$(be,Se,{63:3372,73:3373,75:3374,76:3375,92:3378,94:3379,87:3381,88:3382,89:3383,78:3384,44:3385,95:3389,22:3390,91:3392,118:3393,99:3397,214:3400,105:3401,107:3402,19:[1,3399],21:[1,3404],69:[1,3376],71:[1,3377],79:[1,3394],80:[1,3395],81:[1,3396],85:[1,3380],96:[1,3386],97:[1,3387],98:[1,3388],101:zc,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,3391],215:[1,3403]}),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3405,121:nr,148:rr,189:sr}),$(Ro,jn),$(Ro,ce),$(Ro,le),$(Ro,ee),$(Ro,te),$(Ro,pe),$(Ro,ne),$(Ro,re),$(Ro,wn,{99:2489,95:3406,101:Au,102:Fe,103:ke,104:Le}),$(lc,Tn),$(lc,cr),$(Ro,Xc),$(wu,is),$(Iu,as),$(Iu,os),$(Iu,us),{100:[1,3407]},$(Iu,Gt),{100:[1,3409],106:3408,108:[1,3410],109:[1,3411],110:3412,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3413]},$(Iu,ls),{121:[1,3414]},{19:[1,3417],21:[1,3420],22:3416,87:3415,214:3418,215:[1,3419]},$(Bs,Hc),$(fc,mt,{82:3421}),$(fc,hu),$(fc,du),$(fc,mu),$(fc,yu),$(fc,xu),$(xc,gu,{57:3422,51:[1,3423]}),$(gc,_u,{61:3424,53:[1,3425]}),$(_c,Eu),$(_c,bu,{74:3426,76:3427,78:3428,44:3429,118:3430,79:[1,3431],80:[1,3432],81:[1,3433],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_c,Su),$(_c,vu,{77:3434,73:3435,92:3436,94:3437,95:3441,99:3442,96:[1,3438],97:[1,3439],98:[1,3440],101:qc,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:3444,43:ft,79:Ve,80:Ue,81:Je}),$(_c,Ou),$(Zc,bt,{93:3445}),$(Kc,St,{99:2992,95:3446,101:Ec,102:Fe,103:ke,104:Le}),$(Wc,At,{86:3447}),$(Wc,At,{86:3448}),$(Wc,At,{86:3449}),$(_c,Ot,{105:2996,107:2997,91:3450,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Yc,Fu),$(Yc,ku),$(Zc,Nt),$(Zc,Ft),$(Zc,kt),$(Zc,Lt),$(Wc,Rt),$(jt,Ct,{162:3451}),$(el,$t),{119:[1,3452],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Yc,Tt),$(Yc,It),{19:[1,3456],21:[1,3460],22:3454,33:3453,200:3455,214:3457,215:[1,3459],216:[1,3458]},{100:[1,3461]},$(Zc,Gt),$(Wc,ee),$(Wc,te),{100:[1,3463],106:3462,108:[1,3464],109:[1,3465],110:3466,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3467]},$(Wc,ne),$(Wc,re),$(fc,mt,{82:3468}),$(Vs,Ca),$(Vs,Rt),$(_e,pn),$(_e,fn),$(_e,gt),$(_e,_t),$(yt,mt,{82:3469}),$(_e,Tt),$(_e,It),{19:[1,3473],21:[1,3477],22:3471,33:3470,200:3472,214:3474,215:[1,3476],216:[1,3475]},{119:[1,3478],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_e,hn),$(_e,dn),$(yt,mt,{82:3479}),$(mn,bt,{93:3480}),$(yt,St,{99:3021,95:3481,101:bc,102:Fe,103:ke,104:Le}),$(mn,Nt),$(mn,Ft),$(mn,kt),$(mn,Lt),{100:[1,3482]},$(mn,Gt),{70:[1,3483]},$(Sn,vn,{83:3484,84:3485,192:3486,190:[1,3487]}),$(An,vn,{83:3488,84:3489,192:3490,190:tl}),$(dt,wn,{99:2558,95:3492,101:ju,102:Fe,103:ke,104:Le}),$(Et,Tn),$(yt,In,{90:3493,95:3494,91:3495,99:3496,105:3498,107:3499,101:nl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,Fn,{90:3493,95:3494,91:3495,99:3496,105:3498,107:3499,101:nl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(yt,kn,{90:3493,95:3494,91:3495,99:3496,105:3498,107:3499,101:nl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Dt,Ln),$(Rn,vn,{83:3500,84:3501,192:3502,190:[1,3503]}),$(xt,jn),$(xt,ce),$(xt,le),$(xt,ee),$(xt,te),$(xt,pe),$(xt,ne),$(xt,re),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,3504],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3505,121:nr,148:rr,189:sr}),$(Et,cr),$(Dt,lr),$(Dt,pr),$(Dt,fr),$(Dt,hr),{111:[1,3506]},$(Dt,gr),$(yt,Hi),{193:[1,3509],194:3507,195:[1,3508]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:3510,203:3511,111:[1,3512]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,3515],194:3513,195:[1,3514]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:3516,203:3517,111:[1,3518]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,3521],21:[1,3524],22:3520,87:3519,214:3522,215:[1,3523]},{193:[1,3527],194:3525,195:[1,3526]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:3528,203:3529,111:[1,3530]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(yt,Hi),{193:[1,3533],194:3531,195:[1,3532]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:3534,203:3535,111:[1,3536]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,3539],194:3537,195:[1,3538]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:3540,203:3541,111:[1,3542]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,3545],21:[1,3548],22:3544,87:3543,214:3546,215:[1,3547]},{193:[1,3551],194:3549,195:[1,3550]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:3552,203:3553,111:[1,3554]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(_e,cs),{121:[1,3555]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:3556,214:45,215:K},{19:rl,21:sl,22:3558,100:[1,3569],108:[1,3570],109:[1,3571],110:3568,181:3559,191:3557,196:3562,197:3563,198:3564,201:3567,204:[1,3572],205:[1,3573],206:[1,3578],207:[1,3579],208:[1,3580],209:[1,3581],210:[1,3574],211:[1,3575],212:[1,3576],213:[1,3577],214:3561,215:il},$(An,di),{19:q,21:Z,22:3582,214:45,215:K},{19:al,21:ol,22:3584,100:[1,3595],108:[1,3596],109:[1,3597],110:3594,181:3585,191:3583,196:3588,197:3589,198:3590,201:3593,204:[1,3598],205:[1,3599],206:[1,3604],207:[1,3605],208:[1,3606],209:[1,3607],210:[1,3600],211:[1,3601],212:[1,3602],213:[1,3603],214:3587,215:ul},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,3608]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:3609,214:45,215:K},{19:cl,21:ll,22:3611,100:[1,3622],108:[1,3623],109:[1,3624],110:3621,181:3612,191:3610,196:3615,197:3616,198:3617,201:3620,204:[1,3625],205:[1,3626],206:[1,3631],207:[1,3632],208:[1,3633],209:[1,3634],210:[1,3627],211:[1,3628],212:[1,3629],213:[1,3630],214:3614,215:pl},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(ui,vn,{84:3269,192:3270,83:3635,190:Qc}),$(Br,jn),$(Br,ce),$(Br,le),$(Br,ee),$(Br,te),$(Br,pe),$(Br,ne),$(Br,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3636,121:nr,148:rr,189:sr}),$(ui,vn,{84:3269,192:3270,83:3637,190:Qc}),$(Ur,wn,{99:2736,95:3638,101:$u,102:Fe,103:ke,104:Le}),$(ai,Tn),$(ai,cr),$(Br,Qr),$(ba,Kr),$(Vr,Wr),$(ba,Yr,{31:3639,193:[1,3640]}),{19:es,21:ts,22:643,129:3641,199:ns,214:646,215:rs},$(Br,ss),$(Ur,Wr),$(Br,Yr,{31:3642,193:[1,3643]}),{19:es,21:ts,22:643,129:3644,199:ns,214:646,215:rs},$(zr,is),$(Xr,as),$(Xr,os),$(Xr,us),{100:[1,3645]},$(Xr,Gt),{100:[1,3647],106:3646,108:[1,3648],109:[1,3649],110:3650,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3651]},$(Sa,cs),$(Jr,Wr),$(Sa,Yr,{31:3652,193:[1,3653]}),{19:es,21:ts,22:643,129:3654,199:ns,214:646,215:rs},$(Xr,ls),{121:[1,3655]},{19:[1,3658],21:[1,3661],22:3657,87:3656,214:3659,215:[1,3660]},$(oi,He),$(oi,qe),$(oi,Ze),$(Vr,zi),$(Vr,Xi),{19:Pu,21:Mu,22:3663,87:3662,214:2771,215:Qu},$(ui,He),$(ui,qe),$(ui,Ze),$(Ur,zi),$(Ur,Xi),{19:Bu,21:Gu,22:3665,87:3664,214:2797,215:Vu},$(Xr,ha),$(Xr,Rt),$(Xr,ee),$(Xr,te),$(Xr,ne),$(Xr,re),$(li,He),$(li,qe),$(li,Ze),$(Jr,zi),$(Jr,Xi),{19:Uu,21:Ju,22:3667,87:3666,214:2824,215:zu},$(oi,He),$(oi,qe),$(oi,Ze),$(Vr,zi),$(Vr,Xi),{19:Xu,21:Hu,22:3669,87:3668,214:2851,215:qu},$(ui,He),$(ui,qe),$(ui,Ze),$(Ur,zi),$(Ur,Xi),{19:Zu,21:Ku,22:3671,87:3670,214:2877,215:Wu},$(Xr,ha),$(Xr,Rt),$(Xr,ee),$(Xr,te),$(Xr,ne),$(Xr,re),$(li,He),$(li,qe),$(li,Ze),$(Jr,zi),$(Jr,Xi),{19:Yu,21:ec,22:3673,87:3672,214:2904,215:tc},$(nc,di),{19:q,21:Z,22:3674,214:45,215:K},{19:fl,21:hl,22:3676,100:[1,3687],108:[1,3688],109:[1,3689],110:3686,181:3677,191:3675,196:3680,197:3681,198:3682,201:3685,204:[1,3690],205:[1,3691],206:[1,3696],207:[1,3697],208:[1,3698],209:[1,3699],210:[1,3692],211:[1,3693],212:[1,3694],213:[1,3695],214:3679,215:dl},$(ko,_u,{61:3700,53:[1,3701]}),$(Ro,Eu),$(Ro,bu,{74:3702,76:3703,78:3704,44:3705,118:3706,79:[1,3707],80:[1,3708],81:[1,3709],119:Se,125:Se,127:Se,189:Se,218:Se}),$(Ro,Su),$(Ro,vu,{77:3710,73:3711,92:3712,94:3713,95:3717,99:3718,96:[1,3714],97:[1,3715],98:[1,3716],101:ml,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:3720,43:ft,79:Ve,80:Ue,81:Je}),$(Ro,Ou),$(wu,bt,{93:3721}),$(Tu,St,{99:3364,95:3722,101:Uc,102:Fe,103:ke,104:Le}),$(Iu,At,{86:3723}),$(Iu,At,{86:3724}),$(Iu,At,{86:3725}),$(Ro,Ot,{105:3368,107:3369,91:3726,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Nu,Fu),$(Nu,ku),$(wu,Nt),$(wu,Ft),$(wu,kt),$(wu,Lt),$(Iu,Rt),$(jt,Ct,{162:3727}),$(Lu,$t),{119:[1,3728],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Nu,Tt),$(Nu,It),{19:[1,3732],21:[1,3736],22:3730,33:3729,200:3731,214:3733,215:[1,3735],216:[1,3734]},{100:[1,3737]},$(wu,Gt),$(Iu,ee),$(Iu,te),{100:[1,3739],106:3738,108:[1,3740],109:[1,3741],110:3742,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3743]},$(Iu,ne),$(Iu,re),$(Ro,Eu),$(Ro,bu,{74:3744,76:3745,78:3746,44:3747,118:3748,79:[1,3749],80:[1,3750],81:[1,3751],119:Se,125:Se,127:Se,189:Se,218:Se}),$(Ro,Su),$(Ro,vu,{77:3752,73:3753,92:3754,94:3755,95:3759,99:3760,96:[1,3756],97:[1,3757],98:[1,3758],101:yl,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:3762,43:ft,79:Ve,80:Ue,81:Je}),$(Ro,Ou),$(wu,bt,{93:3763}),$(Tu,St,{99:3397,95:3764,101:zc,102:Fe,103:ke,104:Le}),$(Iu,At,{86:3765}),$(Iu,At,{86:3766}),$(Iu,At,{86:3767}),$(Ro,Ot,{105:3401,107:3402,91:3768,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Nu,Fu),$(Nu,ku),$(wu,Nt),$(wu,Ft),$(wu,kt),$(wu,Lt),$(Iu,Rt),$(jt,Ct,{162:3769}),$(Lu,$t),{119:[1,3770],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Nu,Tt),$(Nu,It),{19:[1,3774],21:[1,3778],22:3772,33:3771,200:3773,214:3775,215:[1,3777],216:[1,3776]},{100:[1,3779]},$(wu,Gt),$(Iu,ee),$(Iu,te),{100:[1,3781],106:3780,108:[1,3782],109:[1,3783],110:3784,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3785]},$(Iu,ne),$(Iu,re),{121:[1,3786]},$(lc,is),$(Iu,cr),$(Iu,lr),$(Iu,pr),$(Iu,fr),$(Iu,hr),{111:[1,3787]},$(Iu,gr),$(Nu,Hi),$(Lu,ha),$(Lu,Rt),$(Lu,ee),$(Lu,te),$(Lu,ne),$(Lu,re),$(xl,vn,{83:3788,84:3789,192:3790,190:gl}),$(gc,sc),$(se,ie,{55:3792,59:3793,40:3794,43:ae}),$(_c,ic),$(se,ie,{59:3795,40:3796,43:ae}),$(_c,ac),$(_c,oc),$(_c,Fu),$(_c,ku),{119:[1,3797],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_c,Tt),$(_c,It),{19:[1,3801],21:[1,3805],22:3799,33:3798,200:3800,214:3802,215:[1,3804],216:[1,3803]},$(_c,uc),$(_c,cc),$(_l,bt,{93:3806}),$(_c,St,{99:3442,95:3807,101:qc,102:Fe,103:ke,104:Le}),$(_l,Nt),$(_l,Ft),$(_l,kt),$(_l,Lt),{100:[1,3808]},$(_l,Gt),{70:[1,3809]},$(Kc,wn,{99:2992,95:3810,101:Ec,102:Fe,103:ke,104:Le}),$(Zc,Tn),$(_c,In,{90:3811,95:3812,91:3813,99:3814,105:3816,107:3817,101:El,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,Fn,{90:3811,95:3812,91:3813,99:3814,105:3816,107:3817,101:El,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,kn,{90:3811,95:3812,91:3813,99:3814,105:3816,107:3817,101:El,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(el,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,3818],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3819,121:nr,148:rr,189:sr}),$(Yc,jn),$(Yc,ce),$(Yc,le),$(Yc,ee),$(Yc,te),$(Yc,pe),$(Yc,ne),$(Yc,re),$(Zc,cr),$(el,lr),$(el,pr),$(el,fr),$(el,hr),{111:[1,3820]},$(el,gr),$(xl,vn,{84:3789,192:3790,83:3821,190:gl}),$(An,vn,{84:3489,192:3490,83:3822,190:tl}),$(_e,jn),$(_e,ce),$(_e,le),$(_e,ee),$(_e,te),$(_e,pe),$(_e,ne),$(_e,re),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3823,121:nr,148:rr,189:sr}),$(An,vn,{84:3489,192:3490,83:3824,190:tl}),$(yt,wn,{99:3021,95:3825,101:bc,102:Fe,103:ke,104:Le}),$(mn,Tn),$(mn,cr),$(_e,Qr),$(Zr,Kr),$(dt,Wr),$(Zr,Yr,{31:3826,193:[1,3827]}),{19:es,21:ts,22:643,129:3828,199:ns,214:646,215:rs},$(_e,ss),$(yt,Wr),$(_e,Yr,{31:3829,193:[1,3830]}),{19:es,21:ts,22:643,129:3831,199:ns,214:646,215:rs},$(Et,is),$(vt,as),$(vt,os),$(vt,us),{100:[1,3832]},$(vt,Gt),{100:[1,3834],106:3833,108:[1,3835],109:[1,3836],110:3837,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,3838]},$(xt,cs),$(wt,Wr),$(xt,Yr,{31:3839,193:[1,3840]}),{19:es,21:ts,22:643,129:3841,199:ns,214:646,215:rs},$(vt,ls),{121:[1,3842]},{19:[1,3845],21:[1,3848],22:3844,87:3843,214:3846,215:[1,3847]},$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:Sc,21:vc,22:3850,87:3849,214:3056,215:Ac},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:Oc,21:wc,22:3852,87:3851,214:3082,215:Tc},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:Ic,21:Nc,22:3854,87:3853,214:3109,215:Fc},$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:kc,21:Lc,22:3856,87:3855,214:3136,215:Rc},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:jc,21:Cc,22:3858,87:3857,214:3162,215:Dc},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:$c,21:Pc,22:3860,87:3859,214:3189,215:Mc},$(yt,Hi),{193:[1,3863],194:3861,195:[1,3862]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:3864,203:3865,111:[1,3866]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,3869],194:3867,195:[1,3868]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:3870,203:3871,111:[1,3872]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,3875],21:[1,3878],22:3874,87:3873,214:3876,215:[1,3877]},{193:[1,3881],194:3879,195:[1,3880]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:3882,203:3883,111:[1,3884]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(Br,cs),{121:[1,3885]},$(Br,Kr),$(ai,is),$(oi,di),{19:q,21:Z,22:3886,214:45,215:K},{19:bl,21:Sl,22:3888,100:[1,3899],108:[1,3900],109:[1,3901],110:3898,181:3889,191:3887,196:3892,197:3893,198:3894,201:3897,204:[1,3902],205:[1,3903],206:[1,3908],207:[1,3909],208:[1,3910],209:[1,3911],210:[1,3904],211:[1,3905],212:[1,3906],213:[1,3907],214:3891,215:vl},$(ui,di),{19:q,21:Z,22:3912,214:45,215:K},{19:Al,21:Ol,22:3914,100:[1,3925],108:[1,3926],109:[1,3927],110:3924,181:3915,191:3913,196:3918,197:3919,198:3920,201:3923,204:[1,3928],205:[1,3929],206:[1,3934],207:[1,3935],208:[1,3936],209:[1,3937],210:[1,3930],211:[1,3931],212:[1,3932],213:[1,3933],214:3917,215:wl},$(Xr,cr),$(Xr,lr),$(Xr,pr),$(Xr,fr),$(Xr,hr),{111:[1,3938]},$(Xr,gr),$(li,di),{19:q,21:Z,22:3939,214:45,215:K},{19:Tl,21:Il,22:3941,100:[1,3952],108:[1,3953],109:[1,3954],110:3951,181:3942,191:3940,196:3945,197:3946,198:3947,201:3950,204:[1,3955],205:[1,3956],206:[1,3961],207:[1,3962],208:[1,3963],209:[1,3964],210:[1,3957],211:[1,3958],212:[1,3959],213:[1,3960],214:3944,215:Nl},$(Jr,Hi),$(Hr,ha),$(Hr,Rt),$(Hr,ee),$(Hr,te),$(Hr,ne),$(Hr,re),$(Vr,Ca),$(Vr,Rt),$(Ur,Ca),$(Ur,Rt),$(Jr,Ca),$(Jr,Rt),$(Vr,Ca),$(Vr,Rt),$(Ur,Ca),$(Ur,Rt),$(Jr,Ca),$(Jr,Rt),{193:[1,3967],194:3965,195:[1,3966]},$(vo,Oa),$(vo,wa),$(vo,Ta),$(vo,ee),$(vo,te),$(vo,hs),$(vo,ds),$(vo,ms),$(vo,ne),$(vo,re),$(vo,ys),$(vo,xs,{202:3968,203:3969,111:[1,3970]}),$(vo,gs),$(vo,_s),$(vo,Es),$(vo,bs),$(vo,Ss),$(vo,vs),$(vo,As),$(vo,Os),$(vo,ws),$(Fl,dr),$(Fl,mr),$(Fl,yr),$(Fl,xr),$(Ro,ic),$(se,ie,{59:3971,40:3972,43:ae}),$(Ro,ac),$(Ro,oc),$(Ro,Fu),$(Ro,ku),{119:[1,3973],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Ro,Tt),$(Ro,It),{19:[1,3977],21:[1,3981],22:3975,33:3974,200:3976,214:3978,215:[1,3980],216:[1,3979]},$(Ro,uc),$(Ro,cc),$(lc,bt,{93:3982}),$(Ro,St,{99:3718,95:3983,101:ml,102:Fe,103:ke,104:Le}),$(lc,Nt),$(lc,Ft),$(lc,kt),$(lc,Lt),{100:[1,3984]},$(lc,Gt),{70:[1,3985]},$(Tu,wn,{99:3364,95:3986,101:Uc,102:Fe,103:ke,104:Le}),$(wu,Tn),$(Ro,In,{90:3987,95:3988,91:3989,99:3990,105:3992,107:3993,101:kl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,Fn,{90:3987,95:3988,91:3989,99:3990,105:3992,107:3993,101:kl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,kn,{90:3987,95:3988,91:3989,99:3990,105:3992,107:3993,101:kl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Lu,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,3994],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:3995,121:nr,148:rr,189:sr}),$(Nu,jn),$(Nu,ce),$(Nu,le),$(Nu,ee),$(Nu,te),$(Nu,pe),$(Nu,ne),$(Nu,re),$(wu,cr),$(Lu,lr),$(Lu,pr),$(Lu,fr),$(Lu,hr),{111:[1,3996]},$(Lu,gr),$(Ro,ac),$(Ro,oc),$(Ro,Fu),$(Ro,ku),{119:[1,3997],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Ro,Tt),$(Ro,It),{19:[1,4001],21:[1,4005],22:3999,33:3998,200:4e3,214:4002,215:[1,4004],216:[1,4003]},$(Ro,uc),$(Ro,cc),$(lc,bt,{93:4006}),$(Ro,St,{99:3760,95:4007,101:yl,102:Fe,103:ke,104:Le}),$(lc,Nt),$(lc,Ft),$(lc,kt),$(lc,Lt),{100:[1,4008]},$(lc,Gt),{70:[1,4009]},$(Tu,wn,{99:3397,95:4010,101:zc,102:Fe,103:ke,104:Le}),$(wu,Tn),$(Ro,In,{90:4011,95:4012,91:4013,99:4014,105:4016,107:4017,101:Ll,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,Fn,{90:4011,95:4012,91:4013,99:4014,105:4016,107:4017,101:Ll,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,kn,{90:4011,95:4012,91:4013,99:4014,105:4016,107:4017,101:Ll,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Lu,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,4018],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4019,121:nr,148:rr,189:sr}),$(Nu,jn),$(Nu,ce),$(Nu,le),$(Nu,ee),$(Nu,te),$(Nu,pe),$(Nu,ne),$(Nu,re),$(wu,cr),$(Lu,lr),$(Lu,pr),$(Lu,fr),$(Lu,hr),{111:[1,4020]},$(Lu,gr),$(Ro,Hi),{19:[1,4023],21:[1,4026],22:4022,87:4021,214:4024,215:[1,4025]},$(Xa,Gc),$(fc,Wr),$(Xa,Yr,{31:4027,193:[1,4028]}),{19:es,21:ts,22:643,129:4029,199:ns,214:646,215:rs},$(gc,Vc),$(_c,jo,{60:4030}),$(be,Se,{63:4031,73:4032,75:4033,76:4034,92:4037,94:4038,87:4040,88:4041,89:4042,78:4043,44:4044,95:4048,22:4049,91:4051,118:4052,99:4056,214:4059,105:4060,107:4061,19:[1,4058],21:[1,4063],69:[1,4035],71:[1,4036],79:[1,4053],80:[1,4054],81:[1,4055],85:[1,4039],96:[1,4045],97:[1,4046],98:[1,4047],101:Rl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,4050],215:[1,4062]}),$(_c,Jc),$(be,Se,{63:4064,73:4065,75:4066,76:4067,92:4070,94:4071,87:4073,88:4074,89:4075,78:4076,44:4077,95:4081,22:4082,91:4084,118:4085,99:4089,214:4092,105:4093,107:4094,19:[1,4091],21:[1,4096],69:[1,4068],71:[1,4069],79:[1,4086],80:[1,4087],81:[1,4088],85:[1,4072],96:[1,4078],97:[1,4079],98:[1,4080],101:jl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,4083],215:[1,4095]}),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4097,121:nr,148:rr,189:sr}),$(_c,jn),$(_c,ce),$(_c,le),$(_c,ee),$(_c,te),$(_c,pe),$(_c,ne),$(_c,re),$(_c,wn,{99:3442,95:4098,101:qc,102:Fe,103:ke,104:Le}),$(_l,Tn),$(_l,cr),$(_c,Xc),$(Zc,is),$(Wc,as),$(Wc,os),$(Wc,us),{100:[1,4099]},$(Wc,Gt),{100:[1,4101],106:4100,108:[1,4102],109:[1,4103],110:4104,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4105]},$(Wc,ls),{121:[1,4106]},{19:[1,4109],21:[1,4112],22:4108,87:4107,214:4110,215:[1,4111]},$(Xa,Hc),$(_e,cs),{121:[1,4113]},$(_e,Kr),$(mn,is),$(Sn,di),{19:q,21:Z,22:4114,214:45,215:K},{19:Cl,21:Dl,22:4116,100:[1,4127],108:[1,4128],109:[1,4129],110:4126,181:4117,191:4115,196:4120,197:4121,198:4122,201:4125,204:[1,4130],205:[1,4131],206:[1,4136],207:[1,4137],208:[1,4138],209:[1,4139],210:[1,4132],211:[1,4133],212:[1,4134],213:[1,4135],214:4119,215:$l},$(An,di),{19:q,21:Z,22:4140,214:45,215:K},{19:Pl,21:Ml,22:4142,100:[1,4153],108:[1,4154],109:[1,4155],110:4152,181:4143,191:4141,196:4146,197:4147,198:4148,201:4151,204:[1,4156],205:[1,4157],206:[1,4162],207:[1,4163],208:[1,4164],209:[1,4165],210:[1,4158],211:[1,4159],212:[1,4160],213:[1,4161],214:4145,215:Ql},$(vt,cr),$(vt,lr),$(vt,pr),$(vt,fr),$(vt,hr),{111:[1,4166]},$(vt,gr),$(Rn,di),{19:q,21:Z,22:4167,214:45,215:K},{19:Bl,21:Gl,22:4169,100:[1,4180],108:[1,4181],109:[1,4182],110:4179,181:4170,191:4168,196:4173,197:4174,198:4175,201:4178,204:[1,4183],205:[1,4184],206:[1,4189],207:[1,4190],208:[1,4191],209:[1,4192],210:[1,4185],211:[1,4186],212:[1,4187],213:[1,4188],214:4172,215:Vl},$(wt,Hi),$(Dt,ha),$(Dt,Rt),$(Dt,ee),$(Dt,te),$(Dt,ne),$(Dt,re),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:rl,21:sl,22:4194,87:4193,214:3561,215:il},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:al,21:ol,22:4196,87:4195,214:3587,215:ul},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:cl,21:ll,22:4198,87:4197,214:3614,215:pl},$(Ur,Hi),{193:[1,4201],194:4199,195:[1,4200]},$(Vr,Oa),$(Vr,wa),$(Vr,Ta),$(Vr,ee),$(Vr,te),$(Vr,hs),$(Vr,ds),$(Vr,ms),$(Vr,ne),$(Vr,re),$(Vr,ys),$(Vr,xs,{202:4202,203:4203,111:[1,4204]}),$(Vr,gs),$(Vr,_s),$(Vr,Es),$(Vr,bs),$(Vr,Ss),$(Vr,vs),$(Vr,As),$(Vr,Os),$(Vr,ws),$(cu,dr),$(cu,mr),$(cu,yr),$(cu,xr),{193:[1,4207],194:4205,195:[1,4206]},$(Ur,Oa),$(Ur,wa),$(Ur,Ta),$(Ur,ee),$(Ur,te),$(Ur,hs),$(Ur,ds),$(Ur,ms),$(Ur,ne),$(Ur,re),$(Ur,ys),$(Ur,xs,{202:4208,203:4209,111:[1,4210]}),$(Ur,gs),$(Ur,_s),$(Ur,Es),$(Ur,bs),$(Ur,Ss),$(Ur,vs),$(Ur,As),$(Ur,Os),$(Ur,ws),$(lu,dr),$(lu,mr),$(lu,yr),$(lu,xr),{19:[1,4213],21:[1,4216],22:4212,87:4211,214:4214,215:[1,4215]},{193:[1,4219],194:4217,195:[1,4218]},$(Jr,Oa),$(Jr,wa),$(Jr,Ta),$(Jr,ee),$(Jr,te),$(Jr,hs),$(Jr,ds),$(Jr,ms),$(Jr,ne),$(Jr,re),$(Jr,ys),$(Jr,xs,{202:4220,203:4221,111:[1,4222]}),$(Jr,gs),$(Jr,_s),$(Jr,Es),$(Jr,bs),$(Jr,Ss),$(Jr,vs),$(Jr,As),$(Jr,Os),$(Jr,ws),$(pu,dr),$(pu,mr),$(pu,yr),$(pu,xr),$(nc,He),$(nc,qe),$(nc,Ze),$(vo,zi),$(vo,Xi),{19:fl,21:hl,22:4224,87:4223,214:3679,215:dl},$(Ro,Jc),$(be,Se,{63:4225,73:4226,75:4227,76:4228,92:4231,94:4232,87:4234,88:4235,89:4236,78:4237,44:4238,95:4242,22:4243,91:4245,118:4246,99:4250,214:4253,105:4254,107:4255,19:[1,4252],21:[1,4257],69:[1,4229],71:[1,4230],79:[1,4247],80:[1,4248],81:[1,4249],85:[1,4233],96:[1,4239],97:[1,4240],98:[1,4241],101:Ul,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,4244],215:[1,4256]}),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4258,121:nr,148:rr,189:sr}),$(Ro,jn),$(Ro,ce),$(Ro,le),$(Ro,ee),$(Ro,te),$(Ro,pe),$(Ro,ne),$(Ro,re),$(Ro,wn,{99:3718,95:4259,101:ml,102:Fe,103:ke,104:Le}),$(lc,Tn),$(lc,cr),$(Ro,Xc),$(wu,is),$(Iu,as),$(Iu,os),$(Iu,us),{100:[1,4260]},$(Iu,Gt),{100:[1,4262],106:4261,108:[1,4263],109:[1,4264],110:4265,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4266]},$(Iu,ls),{121:[1,4267]},{19:[1,4270],21:[1,4273],22:4269,87:4268,214:4271,215:[1,4272]},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4274,121:nr,148:rr,189:sr}),$(Ro,jn),$(Ro,ce),$(Ro,le),$(Ro,ee),$(Ro,te),$(Ro,pe),$(Ro,ne),$(Ro,re),$(Ro,wn,{99:3760,95:4275,101:yl,102:Fe,103:ke,104:Le}),$(lc,Tn),$(lc,cr),$(Ro,Xc),$(wu,is),$(Iu,as),$(Iu,os),$(Iu,us),{100:[1,4276]},$(Iu,Gt),{100:[1,4278],106:4277,108:[1,4279],109:[1,4280],110:4281,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4282]},$(Iu,ls),{121:[1,4283]},{19:[1,4286],21:[1,4289],22:4285,87:4284,214:4287,215:[1,4288]},$(Iu,ha),$(Iu,Rt),$(Iu,ee),$(Iu,te),$(Iu,ne),$(Iu,re),$(xl,di),{19:q,21:Z,22:4290,214:45,215:K},{19:Jl,21:zl,22:4292,100:[1,4303],108:[1,4304],109:[1,4305],110:4302,181:4293,191:4291,196:4296,197:4297,198:4298,201:4301,204:[1,4306],205:[1,4307],206:[1,4312],207:[1,4313],208:[1,4314],209:[1,4315],210:[1,4308],211:[1,4309],212:[1,4310],213:[1,4311],214:4295,215:Xl},$(gc,_u,{61:4316,53:[1,4317]}),$(_c,Eu),$(_c,bu,{74:4318,76:4319,78:4320,44:4321,118:4322,79:[1,4323],80:[1,4324],81:[1,4325],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_c,Su),$(_c,vu,{77:4326,73:4327,92:4328,94:4329,95:4333,99:4334,96:[1,4330],97:[1,4331],98:[1,4332],101:Hl,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:4336,43:ft,79:Ve,80:Ue,81:Je}),$(_c,Ou),$(Zc,bt,{93:4337}),$(Kc,St,{99:4056,95:4338,101:Rl,102:Fe,103:ke,104:Le}),$(Wc,At,{86:4339}),$(Wc,At,{86:4340}),$(Wc,At,{86:4341}),$(_c,Ot,{105:4060,107:4061,91:4342,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Yc,Fu),$(Yc,ku),$(Zc,Nt),$(Zc,Ft),$(Zc,kt),$(Zc,Lt),$(Wc,Rt),$(jt,Ct,{162:4343}),$(el,$t),{119:[1,4344],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Yc,Tt),$(Yc,It),{19:[1,4348],21:[1,4352],22:4346,33:4345,200:4347,214:4349,215:[1,4351],216:[1,4350]},{100:[1,4353]},$(Zc,Gt),$(Wc,ee),$(Wc,te),{100:[1,4355],106:4354,108:[1,4356],109:[1,4357],110:4358,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4359]},$(Wc,ne),$(Wc,re),$(_c,Eu),$(_c,bu,{74:4360,76:4361,78:4362,44:4363,118:4364,79:[1,4365],80:[1,4366],81:[1,4367],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_c,Su),$(_c,vu,{77:4368,73:4369,92:4370,94:4371,95:4375,99:4376,96:[1,4372],97:[1,4373],98:[1,4374],101:ql,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:4378,43:ft,79:Ve,80:Ue,81:Je}),$(_c,Ou),$(Zc,bt,{93:4379}),$(Kc,St,{99:4089,95:4380,101:jl,102:Fe,103:ke,104:Le}),$(Wc,At,{86:4381}),$(Wc,At,{86:4382}),$(Wc,At,{86:4383}),$(_c,Ot,{105:4093,107:4094,91:4384,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Yc,Fu),$(Yc,ku),$(Zc,Nt),$(Zc,Ft),$(Zc,kt),$(Zc,Lt),$(Wc,Rt),$(jt,Ct,{162:4385}),$(el,$t),{119:[1,4386],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Yc,Tt),$(Yc,It),{19:[1,4390],21:[1,4394],22:4388,33:4387,200:4389,214:4391,215:[1,4393],216:[1,4392]},{100:[1,4395]},$(Zc,Gt),$(Wc,ee),$(Wc,te),{100:[1,4397],106:4396,108:[1,4398],109:[1,4399],110:4400,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4401]},$(Wc,ne),$(Wc,re),{121:[1,4402]},$(_l,is),$(Wc,cr),$(Wc,lr),$(Wc,pr),$(Wc,fr),$(Wc,hr),{111:[1,4403]},$(Wc,gr),$(Yc,Hi),$(el,ha),$(el,Rt),$(el,ee),$(el,te),$(el,ne),$(el,re),$(yt,Hi),{193:[1,4406],194:4404,195:[1,4405]},$(dt,Oa),$(dt,wa),$(dt,Ta),$(dt,ee),$(dt,te),$(dt,hs),$(dt,ds),$(dt,ms),$(dt,ne),$(dt,re),$(dt,ys),$(dt,xs,{202:4407,203:4408,111:[1,4409]}),$(dt,gs),$(dt,_s),$(dt,Es),$(dt,bs),$(dt,Ss),$(dt,vs),$(dt,As),$(dt,Os),$(dt,ws),$(Ia,dr),$(Ia,mr),$(Ia,yr),$(Ia,xr),{193:[1,4412],194:4410,195:[1,4411]},$(yt,Oa),$(yt,wa),$(yt,Ta),$(yt,ee),$(yt,te),$(yt,hs),$(yt,ds),$(yt,ms),$(yt,ne),$(yt,re),$(yt,ys),$(yt,xs,{202:4413,203:4414,111:[1,4415]}),$(yt,gs),$(yt,_s),$(yt,Es),$(yt,bs),$(yt,Ss),$(yt,vs),$(yt,As),$(yt,Os),$(yt,ws),$(Na,dr),$(Na,mr),$(Na,yr),$(Na,xr),{19:[1,4418],21:[1,4421],22:4417,87:4416,214:4419,215:[1,4420]},{193:[1,4424],194:4422,195:[1,4423]},$(wt,Oa),$(wt,wa),$(wt,Ta),$(wt,ee),$(wt,te),$(wt,hs),$(wt,ds),$(wt,ms),$(wt,ne),$(wt,re),$(wt,ys),$(wt,xs,{202:4425,203:4426,111:[1,4427]}),$(wt,gs),$(wt,_s),$(wt,Es),$(wt,bs),$(wt,Ss),$(wt,vs),$(wt,As),$(wt,Os),$(wt,ws),$(Fa,dr),$(Fa,mr),$(Fa,yr),$(Fa,xr),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(oi,He),$(oi,qe),$(oi,Ze),$(Vr,zi),$(Vr,Xi),{19:bl,21:Sl,22:4429,87:4428,214:3891,215:vl},$(ui,He),$(ui,qe),$(ui,Ze),$(Ur,zi),$(Ur,Xi),{19:Al,21:Ol,22:4431,87:4430,214:3917,215:wl},$(Xr,ha),$(Xr,Rt),$(Xr,ee),$(Xr,te),$(Xr,ne),$(Xr,re),$(li,He),$(li,qe),$(li,Ze),$(Jr,zi),$(Jr,Xi),{19:Tl,21:Il,22:4433,87:4432,214:3944,215:Nl},$(vo,Ca),$(vo,Rt),$(Ro,Eu),$(Ro,bu,{74:4434,76:4435,78:4436,44:4437,118:4438,79:[1,4439],80:[1,4440],81:[1,4441],119:Se,125:Se,127:Se,189:Se,218:Se}),$(Ro,Su),$(Ro,vu,{77:4442,73:4443,92:4444,94:4445,95:4449,99:4450,96:[1,4446],97:[1,4447],98:[1,4448],101:Zl,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:4452,43:ft,79:Ve,80:Ue,81:Je}),$(Ro,Ou),$(wu,bt,{93:4453}),$(Tu,St,{99:4250,95:4454,101:Ul,102:Fe,103:ke,104:Le}),$(Iu,At,{86:4455}),$(Iu,At,{86:4456}),$(Iu,At,{86:4457}),$(Ro,Ot,{105:4254,107:4255,91:4458,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Nu,Fu),$(Nu,ku),$(wu,Nt),$(wu,Ft),$(wu,kt),$(wu,Lt),$(Iu,Rt),$(jt,Ct,{162:4459}),$(Lu,$t),{119:[1,4460],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Nu,Tt),$(Nu,It),{19:[1,4464],21:[1,4468],22:4462,33:4461,200:4463,214:4465,215:[1,4467],216:[1,4466]},{100:[1,4469]},$(wu,Gt),$(Iu,ee),$(Iu,te),{100:[1,4471],106:4470,108:[1,4472],109:[1,4473],110:4474,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4475]},$(Iu,ne),$(Iu,re),{121:[1,4476]},$(lc,is),$(Iu,cr),$(Iu,lr),$(Iu,pr),$(Iu,fr),$(Iu,hr),{111:[1,4477]},$(Iu,gr),$(Nu,Hi),$(Lu,ha),$(Lu,Rt),$(Lu,ee),$(Lu,te),$(Lu,ne),$(Lu,re),{121:[1,4478]},$(lc,is),$(Iu,cr),$(Iu,lr),$(Iu,pr),$(Iu,fr),$(Iu,hr),{111:[1,4479]},$(Iu,gr),$(Nu,Hi),$(Lu,ha),$(Lu,Rt),$(Lu,ee),$(Lu,te),$(Lu,ne),$(Lu,re),{193:[1,4482],194:4480,195:[1,4481]},$(fc,Oa),$(fc,wa),$(fc,Ta),$(fc,ee),$(fc,te),$(fc,hs),$(fc,ds),$(fc,ms),$(fc,ne),$(fc,re),$(fc,ys),$(fc,xs,{202:4483,203:4484,111:[1,4485]}),$(fc,gs),$(fc,_s),$(fc,Es),$(fc,bs),$(fc,Ss),$(fc,vs),$(fc,As),$(fc,Os),$(fc,ws),$(Kl,dr),$(Kl,mr),$(Kl,yr),$(Kl,xr),$(_c,ic),$(se,ie,{59:4486,40:4487,43:ae}),$(_c,ac),$(_c,oc),$(_c,Fu),$(_c,ku),{119:[1,4488],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_c,Tt),$(_c,It),{19:[1,4492],21:[1,4496],22:4490,33:4489,200:4491,214:4493,215:[1,4495],216:[1,4494]},$(_c,uc),$(_c,cc),$(_l,bt,{93:4497}),$(_c,St,{99:4334,95:4498,101:Hl,102:Fe,103:ke,104:Le}),$(_l,Nt),$(_l,Ft),$(_l,kt),$(_l,Lt),{100:[1,4499]},$(_l,Gt),{70:[1,4500]},$(Kc,wn,{99:4056,95:4501,101:Rl,102:Fe,103:ke,104:Le}),$(Zc,Tn),$(_c,In,{90:4502,95:4503,91:4504,99:4505,105:4507,107:4508,101:Wl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,Fn,{90:4502,95:4503,91:4504,99:4505,105:4507,107:4508,101:Wl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,kn,{90:4502,95:4503,91:4504,99:4505,105:4507,107:4508,101:Wl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(el,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,4509],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4510,121:nr,148:rr,189:sr}),$(Yc,jn),$(Yc,ce),$(Yc,le),$(Yc,ee),$(Yc,te),$(Yc,pe),$(Yc,ne),$(Yc,re),$(Zc,cr),$(el,lr),$(el,pr),$(el,fr),$(el,hr),{111:[1,4511]},$(el,gr),$(_c,ac),$(_c,oc),$(_c,Fu),$(_c,ku),{119:[1,4512],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_c,Tt),$(_c,It),{19:[1,4516],21:[1,4520],22:4514,33:4513,200:4515,214:4517,215:[1,4519],216:[1,4518]},$(_c,uc),$(_c,cc),$(_l,bt,{93:4521}),$(_c,St,{99:4376,95:4522,101:ql,102:Fe,103:ke,104:Le}),$(_l,Nt),$(_l,Ft),$(_l,kt),$(_l,Lt),{100:[1,4523]},$(_l,Gt),{70:[1,4524]},$(Kc,wn,{99:4089,95:4525,101:jl,102:Fe,103:ke,104:Le}),$(Zc,Tn),$(_c,In,{90:4526,95:4527,91:4528,99:4529,105:4531,107:4532,101:Yl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,Fn,{90:4526,95:4527,91:4528,99:4529,105:4531,107:4532,101:Yl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,kn,{90:4526,95:4527,91:4528,99:4529,105:4531,107:4532,101:Yl,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(el,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,4533],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4534,121:nr,148:rr,189:sr}),$(Yc,jn),$(Yc,ce),$(Yc,le),$(Yc,ee),$(Yc,te),$(Yc,pe),$(Yc,ne),$(Yc,re),$(Zc,cr),$(el,lr),$(el,pr),$(el,fr),$(el,hr),{111:[1,4535]},$(el,gr),$(_c,Hi),{19:[1,4538],21:[1,4541],22:4537,87:4536,214:4539,215:[1,4540]},$(Sn,He),$(Sn,qe),$(Sn,Ze),$(dt,zi),$(dt,Xi),{19:Cl,21:Dl,22:4543,87:4542,214:4119,215:$l},$(An,He),$(An,qe),$(An,Ze),$(yt,zi),$(yt,Xi),{19:Pl,21:Ml,22:4545,87:4544,214:4145,215:Ql},$(vt,ha),$(vt,Rt),$(vt,ee),$(vt,te),$(vt,ne),$(vt,re),$(Rn,He),$(Rn,qe),$(Rn,Ze),$(wt,zi),$(wt,Xi),{19:Bl,21:Gl,22:4547,87:4546,214:4172,215:Vl},$(Vr,Ca),$(Vr,Rt),$(Ur,Ca),$(Ur,Rt),$(Jr,Ca),$(Jr,Rt),$(Ro,ac),$(Ro,oc),$(Ro,Fu),$(Ro,ku),{119:[1,4548],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Ro,Tt),$(Ro,It),{19:[1,4552],21:[1,4556],22:4550,33:4549,200:4551,214:4553,215:[1,4555],216:[1,4554]},$(Ro,uc),$(Ro,cc),$(lc,bt,{93:4557}),$(Ro,St,{99:4450,95:4558,101:Zl,102:Fe,103:ke,104:Le}),$(lc,Nt),$(lc,Ft),$(lc,kt),$(lc,Lt),{100:[1,4559]},$(lc,Gt),{70:[1,4560]},$(Tu,wn,{99:4250,95:4561,101:Ul,102:Fe,103:ke,104:Le}),$(wu,Tn),$(Ro,In,{90:4562,95:4563,91:4564,99:4565,105:4567,107:4568,101:ep,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,Fn,{90:4562,95:4563,91:4564,99:4565,105:4567,107:4568,101:ep,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Ro,kn,{90:4562,95:4563,91:4564,99:4565,105:4567,107:4568,101:ep,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Lu,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,4569],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4570,121:nr,148:rr,189:sr}),$(Nu,jn),$(Nu,ce),$(Nu,le),$(Nu,ee),$(Nu,te),$(Nu,pe),$(Nu,ne),$(Nu,re),$(wu,cr),$(Lu,lr),$(Lu,pr),$(Lu,fr),$(Lu,hr),{111:[1,4571]},$(Lu,gr),$(Ro,Hi),{19:[1,4574],21:[1,4577],22:4573,87:4572,214:4575,215:[1,4576]},$(Ro,Hi),{19:[1,4580],21:[1,4583],22:4579,87:4578,214:4581,215:[1,4582]},$(xl,He),$(xl,qe),$(xl,Ze),$(fc,zi),$(fc,Xi),{19:Jl,21:zl,22:4585,87:4584,214:4295,215:Xl},$(_c,Jc),$(be,Se,{63:4586,73:4587,75:4588,76:4589,92:4592,94:4593,87:4595,88:4596,89:4597,78:4598,44:4599,95:4603,22:4604,91:4606,118:4607,99:4611,214:4614,105:4615,107:4616,19:[1,4613],21:[1,4618],69:[1,4590],71:[1,4591],79:[1,4608],80:[1,4609],81:[1,4610],85:[1,4594],96:[1,4600],97:[1,4601],98:[1,4602],101:tp,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe,161:[1,4605],215:[1,4617]}),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4619,121:nr,148:rr,189:sr}),$(_c,jn),$(_c,ce),$(_c,le),$(_c,ee),$(_c,te),$(_c,pe),$(_c,ne),$(_c,re),$(_c,wn,{99:4334,95:4620,101:Hl,102:Fe,103:ke,104:Le}),$(_l,Tn),$(_l,cr),$(_c,Xc),$(Zc,is),$(Wc,as),$(Wc,os),$(Wc,us),{100:[1,4621]},$(Wc,Gt),{100:[1,4623],106:4622,108:[1,4624],109:[1,4625],110:4626,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4627]},$(Wc,ls),{121:[1,4628]},{19:[1,4631],21:[1,4634],22:4630,87:4629,214:4632,215:[1,4633]},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4635,121:nr,148:rr,189:sr}),$(_c,jn),$(_c,ce),$(_c,le),$(_c,ee),$(_c,te),$(_c,pe),$(_c,ne),$(_c,re),$(_c,wn,{99:4376,95:4636,101:ql,102:Fe,103:ke,104:Le}),$(_l,Tn),$(_l,cr),$(_c,Xc),$(Zc,is),$(Wc,as),$(Wc,os),$(Wc,us),{100:[1,4637]},$(Wc,Gt),{100:[1,4639],106:4638,108:[1,4640],109:[1,4641],110:4642,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4643]},$(Wc,ls),{121:[1,4644]},{19:[1,4647],21:[1,4650],22:4646,87:4645,214:4648,215:[1,4649]},$(Wc,ha),$(Wc,Rt),$(Wc,ee),$(Wc,te),$(Wc,ne),$(Wc,re),$(dt,Ca),$(dt,Rt),$(yt,Ca),$(yt,Rt),$(wt,Ca),$(wt,Rt),$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4651,121:nr,148:rr,189:sr}),$(Ro,jn),$(Ro,ce),$(Ro,le),$(Ro,ee),$(Ro,te),$(Ro,pe),$(Ro,ne),$(Ro,re),$(Ro,wn,{99:4450,95:4652,101:Zl,102:Fe,103:ke,104:Le}),$(lc,Tn),$(lc,cr),$(Ro,Xc),$(wu,is),$(Iu,as),$(Iu,os),$(Iu,us),{100:[1,4653]},$(Iu,Gt),{100:[1,4655],106:4654,108:[1,4656],109:[1,4657],110:4658,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4659]},$(Iu,ls),{121:[1,4660]},{19:[1,4663],21:[1,4666],22:4662,87:4661,214:4664,215:[1,4665]},$(Iu,ha),$(Iu,Rt),$(Iu,ee),$(Iu,te),$(Iu,ne),$(Iu,re),$(Iu,ha),$(Iu,Rt),$(Iu,ee),$(Iu,te),$(Iu,ne),$(Iu,re),$(fc,Ca),$(fc,Rt),$(_c,Eu),$(_c,bu,{74:4667,76:4668,78:4669,44:4670,118:4671,79:[1,4672],80:[1,4673],81:[1,4674],119:Se,125:Se,127:Se,189:Se,218:Se}),$(_c,Su),$(_c,vu,{77:4675,73:4676,92:4677,94:4678,95:4682,99:4683,96:[1,4679],97:[1,4680],98:[1,4681],101:np,102:Fe,103:ke,104:Le}),$(Ge,ie,{40:169,44:171,38:4685,43:ft,79:Ve,80:Ue,81:Je}),$(_c,Ou),$(Zc,bt,{93:4686}),$(Kc,St,{99:4611,95:4687,101:tp,102:Fe,103:ke,104:Le}),$(Wc,At,{86:4688}),$(Wc,At,{86:4689}),$(Wc,At,{86:4690}),$(_c,Ot,{105:4615,107:4616,91:4691,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(Yc,Fu),$(Yc,ku),$(Zc,Nt),$(Zc,Ft),$(Zc,kt),$(Zc,Lt),$(Wc,Rt),$(jt,Ct,{162:4692}),$(el,$t),{119:[1,4693],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(Yc,Tt),$(Yc,It),{19:[1,4697],21:[1,4701],22:4695,33:4694,200:4696,214:4698,215:[1,4700],216:[1,4699]},{100:[1,4702]},$(Zc,Gt),$(Wc,ee),$(Wc,te),{100:[1,4704],106:4703,108:[1,4705],109:[1,4706],110:4707,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4708]},$(Wc,ne),$(Wc,re),{121:[1,4709]},$(_l,is),$(Wc,cr),$(Wc,lr),$(Wc,pr),$(Wc,fr),$(Wc,hr),{111:[1,4710]},$(Wc,gr),$(Yc,Hi),$(el,ha),$(el,Rt),$(el,ee),$(el,te),$(el,ne),$(el,re),{121:[1,4711]},$(_l,is),$(Wc,cr),$(Wc,lr),$(Wc,pr),$(Wc,fr),$(Wc,hr),{111:[1,4712]},$(Wc,gr),$(Yc,Hi),$(el,ha),$(el,Rt),$(el,ee),$(el,te),$(el,ne),$(el,re),{121:[1,4713]},$(lc,is),$(Iu,cr),$(Iu,lr),$(Iu,pr),$(Iu,fr),$(Iu,hr),{111:[1,4714]},$(Iu,gr),$(Nu,Hi),$(Lu,ha),$(Lu,Rt),$(Lu,ee),$(Lu,te),$(Lu,ne),$(Lu,re),$(_c,ac),$(_c,oc),$(_c,Fu),$(_c,ku),{119:[1,4715],122:191,123:192,124:193,125:Pt,127:Mt,189:Qt,217:195,218:Bt},$(_c,Tt),$(_c,It),{19:[1,4719],21:[1,4723],22:4717,33:4716,200:4718,214:4720,215:[1,4722],216:[1,4721]},$(_c,uc),$(_c,cc),$(_l,bt,{93:4724}),$(_c,St,{99:4683,95:4725,101:np,102:Fe,103:ke,104:Le}),$(_l,Nt),$(_l,Ft),$(_l,kt),$(_l,Lt),{100:[1,4726]},$(_l,Gt),{70:[1,4727]},$(Kc,wn,{99:4611,95:4728,101:tp,102:Fe,103:ke,104:Le}),$(Zc,Tn),$(_c,In,{90:4729,95:4730,91:4731,99:4732,105:4734,107:4735,101:rp,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,Fn,{90:4729,95:4730,91:4731,99:4732,105:4734,107:4735,101:rp,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(_c,kn,{90:4729,95:4730,91:4731,99:4732,105:4734,107:4735,101:rp,102:Fe,103:ke,104:Le,112:Re,113:je,114:Ce,115:De,116:$e,117:Pe}),$(el,Ln),{19:Cn,21:Dn,22:370,71:$n,81:Pn,100:Mn,108:Qn,109:Bn,110:382,163:[1,4736],164:365,165:366,166:367,167:368,181:371,185:Gn,196:376,197:377,198:378,201:381,204:Vn,205:Un,206:Jn,207:zn,208:Xn,209:Hn,210:qn,211:Zn,212:Kn,213:Wn,214:375,215:Yn},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4737,121:nr,148:rr,189:sr}),$(Yc,jn),$(Yc,ce),$(Yc,le),$(Yc,ee),$(Yc,te),$(Yc,pe),$(Yc,ne),$(Yc,re),$(Zc,cr),$(el,lr),$(el,pr),$(el,fr),$(el,hr),{111:[1,4738]},$(el,gr),$(_c,Hi),{19:[1,4741],21:[1,4744],22:4740,87:4739,214:4742,215:[1,4743]},$(_c,Hi),{19:[1,4747],21:[1,4750],22:4746,87:4745,214:4748,215:[1,4749]},$(Ro,Hi),{19:[1,4753],21:[1,4756],22:4752,87:4751,214:4754,215:[1,4755]},$(er,tr,{126:397,130:398,131:399,132:400,136:401,137:402,138:403,144:404,146:405,147:406,120:4757,121:nr,148:rr,189:sr}),$(_c,jn),$(_c,ce),$(_c,le),$(_c,ee),$(_c,te),$(_c,pe),$(_c,ne),$(_c,re),$(_c,wn,{99:4683,95:4758,101:np,102:Fe,103:ke,104:Le}),$(_l,Tn),$(_l,cr),$(_c,Xc),$(Zc,is),$(Wc,as),$(Wc,os),$(Wc,us),{100:[1,4759]},$(Wc,Gt),{100:[1,4761],106:4760,108:[1,4762],109:[1,4763],110:4764,206:Vt,207:Ut,208:Jt,209:zt},{100:[1,4765]},$(Wc,ls),{121:[1,4766]},{19:[1,4769],21:[1,4772],22:4768,87:4767,214:4770,215:[1,4771]},$(Wc,ha),$(Wc,Rt),$(Wc,ee),$(Wc,te),$(Wc,ne),$(Wc,re),$(Wc,ha),$(Wc,Rt),$(Wc,ee),$(Wc,te),$(Wc,ne),$(Wc,re),$(Iu,ha),$(Iu,Rt),$(Iu,ee),$(Iu,te),$(Iu,ne),$(Iu,re),{121:[1,4773]},$(_l,is),$(Wc,cr),$(Wc,lr),$(Wc,pr),$(Wc,fr),$(Wc,hr),{111:[1,4774]},$(Wc,gr),$(Yc,Hi),$(el,ha),$(el,Rt),$(el,ee),$(el,te),$(el,ne),$(el,re),$(_c,Hi),{19:[1,4777],21:[1,4780],22:4776,87:4775,214:4778,215:[1,4779]},$(Wc,ha),$(Wc,Rt),$(Wc,ee),$(Wc,te),$(Wc,ne),$(Wc,re)],this.defaultActions={6:[2,11],24:[2,1],115:[2,119],116:[2,120],117:[2,121],124:[2,132],125:[2,133],205:[2,252],206:[2,253],207:[2,254],208:[2,255],337:[2,35],397:[2,142],398:[2,146],400:[2,148],585:[2,33],586:[2,37],623:[2,34],1120:[2,146],1122:[2,148]},this.performAction=function(e,t,n,s,l,p,h){const g=p.length-1;switch(l){case 1:let e=Object.keys(M._imports).length?{imports:M._imports}:{};const t=M.start?{start:M.start}:{},n=M.startActs?{startActs:M.startActs}:{};let l=M.shapes?{shapes:Object.values(M.shapes)}:{};const h=Object.assign({type:"Schema"},e,n,t,l);return M.options.index&&(null!==M._base&&(h._base=M._base),h._prefixes=M._prefixes,h._index={shapeExprs:M.shapes||{},tripleExprs:M.productions||{}},h._sourceMap=M._sourceMap),h;case 2:s.parser.yy={lexer:s.lexer};break;case 15:M._setBase(null===M._base||c.test(p[g].slice(1,-1))?p[g].slice(1,-1):x(p[g].slice(1,-1)));break;case 16:M._prefixes[p[g-1].slice(0,-1)]=p[g];break;case 17:M._imports.push(p[g]);break;case 20:M.start&&I(new Error("Parse error: start already defined"),s),M.start=L("ShapeOr",p[g-1],p[g]);break;case 21:M.startActs=p[g];break;case 22:case 42:case 45:case 144:case 151:case 162:case 189:case 191:case 193:this.$=[p[g]];break;case 23:case 30:case 96:case 145:case 152:case 163:case 184:case 190:case 192:case 194:case 200:case 209:case 217:case 228:this.$=d(p[g-1],p[g]);break;case 26:p[g-3].abstract||p[g-1].length?F(p[g-2],Object.assign({type:"ShapeDecl"},p[g-3],p[g-1].length>0?{restricts:p[g-1]}:{},{shapeExpr:p[g]}),s):F(p[g-2],p[g],s);break;case 27:case 102:case 108:case 172:this.$={};break;case 28:this.$={abstract:!0};break;case 29:case 95:case 47:case 51:case 54:case 58:case 183:case 199:case 208:case 216:case 227:this.$=[];break;case 31:this.$=R(p[g]);break;case 32:this.$={type:"ShapeExternal"};break;case 33:p[g-2]&&(p[g-1]={type:"ShapeNot",shapeExpr:R(p[g-1])}),p[g]?(p[g].needsAtom.unshift(R(p[g-1])),delete p[g].needsAtom,this.$=p[g]):this.$=p[g-1];break;case 34:p[g-1]={type:"ShapeNot",shapeExpr:R(p[g-1])},p[g]?(p[g].needsAtom.unshift(R(p[g-1])),delete p[g].needsAtom,this.$=p[g]):this.$=p[g-1];break;case 35:p[g].needsAtom.unshift(R(p[g-1])),delete p[g].needsAtom,this.$=p[g];break;case 36:case 231:case 248:this.$=null;break;case 37:case 41:case 44:case 50:case 57:case 188:case 247:case 143:case 150:case 160:case 161:case 201:case 210:case 218:case 265:case 268:this.$=p[g];break;case 39:const E=p[g].map(R);this.$={type:"ShapeOr",shapeExprs:E,needsAtom:E};break;case 40:p[g-1].filter((e=>"ShapeAnd"===e.type)).length,p[g-1].length;const b={type:"ShapeAnd",shapeExprs:p[g-1].reduce(((e,t)=>e.concat("ShapeAnd"!==t.type||t.nested?R(t):t.shapeExprs)),[])};this.$=p[g].length>0?{type:"ShapeOr",shapeExprs:[b].concat(p[g].map(R))}:b,this.$.needsAtom=b.shapeExprs;break;case 43:case 46:case 48:case 52:case 55:case 59:this.$=p[g-1].concat(p[g]);break;case 49:this.$=L("ShapeOr",p[g-1],p[g]);break;case 53:case 56:this.$=L("ShapeAnd",p[g-1],p[g]);break;case 60:case 63:this.$=p[g-1]?{type:"ShapeNot",shapeExpr:R(p[g])}:p[g];break;case 61:this.$=!1;break;case 62:this.$=!0;break;case 64:case 73:case 78:case 80:this.$=p[g]?{type:"ShapeAnd",shapeExprs:[m({type:"NodeConstraint"},p[g-1]),p[g]]}:p[g-1];break;case 66:case 75:this.$=p[g]?L("ShapeAnd",p[g-1],[p[g]]):p[g-1];break;case 67:case 76:case 81:this.$=Object.assign(p[g-1],{nested:!0});break;case 68:case 77:case 82:this.$=C;break;case 91:p[g]=p[g].substr(1,p[g].length-1);const S=p[g].indexOf(":");this.$=k(N(p[g].substr(0,S),s)+p[g].substr(S+1),s);break;case 92:p[g]=p[g].substr(1,p[g].length-1),this.$=k(N(p[g].substr(0,p[g].length-1),s),s);break;case 93:case 166:case 222:this.$=k(p[g],s);break;case 94:case 97:this.$=p[g-2],p[g-1].length&&(this.$.annotations=p[g-1]),p[g]&&(this.$.semActs=p[g].semActs);break;case 98:this.$=m({type:"NodeConstraint",nodeKind:"literal"},p[g]);break;case 99:-1===u.indexOf(p[g-1])&&f.forEach((function(e){e in p[g]&&I(new Error("Parse error: facet "+e+" not allowed for unknown datatype "+p[g-1]),s)})),this.$=m({type:"NodeConstraint",datatype:p[g-1]},p[g]);break;case 100:this.$={type:"NodeConstraint",values:p[g-1]};break;case 101:case 107:this.$=m({type:"NodeConstraint"},p[g]);break;case 103:case 105:case 111:case 109:-1!==Object.keys(p[g-1]).indexOf(Object.keys(p[g])[0])&&I(new Error("Parse error: facet "+Object.keys(p[g])[0]+" defined multiple times"),s),this.$=m(p[g-1],p[g]);break;case 106:this.$=m({type:"NodeConstraint"},p[g-1],p[g]?p[g]:{});break;case 112:this.$={nodeKind:"iri"};break;case 113:this.$={nodeKind:"bnode"};break;case 114:this.$={nodeKind:"nonliteral"};break;case 117:case 123:this.$=T(p[g-1],parseInt(p[g],10));break;case 118:this.$=function(e){const t=e.lastIndexOf("/");let n=e.substr(1,t-1);n=r.unescapeText(n,{".":"\\.","\\":"\\\\","?":"\\?","*":"\\*","+":"\\+","{":"\\{","}":"\\}","(":"\\(",")":"\\)","|":"\\|","^":"\\^",$:"\\$","[":"\\[","]":"\\]","/":"\\/",t:"\\t",n:"\\n",r:"\\r","-":"\\-","/":"/"});const s={pattern:n};return e.length>t+1&&(s.flags=e.substr(t+1)),s}(p[g]);break;case 119:this.$="length";break;case 120:this.$="minlength";break;case 121:this.$="maxlength";break;case 122:this.$=T(p[g-1],p[g]);break;case 124:this.$=parseInt(p[g],10);break;case 125:case 126:this.$=parseFloat(p[g]);break;case 127:p[g]===i||"http://www.w3.org/2001/XMLSchema#float"===p[g]||p[g]===a?this.$=parseFloat(p[g-2].value):-1!==u.indexOf(p[g])?this.$=parseInt(p[g-2].value):I(new Error("Parse error: numeric range facet expected numeric datatype instead of "+p[g]),s);break;case 128:this.$="mininclusive";break;case 129:this.$="minexclusive";break;case 130:this.$="maxinclusive";break;case 131:this.$="maxexclusive";break;case 132:this.$="totaldigits";break;case 133:this.$="fractiondigits";break;case 134:this.$=p[g-2]===C?{type:"Shape"}:p[g-2],p[g-1].length&&(this.$.annotations=p[g-1]),p[g]&&(this.$.semActs=p[g].semActs);break;case 135:const D=p[g-1]?{expression:p[g-1]}:j;this.$=D===j&&p[g-3]===j?C:m({type:"Shape"},D,p[g-3]);break;case 136:this.$=["extends",[p[g]]];break;case 137:this.$=["extra",p[g]];break;case 138:this.$=["closed",!0];break;case 139:this.$=j;break;case 140:p[g-1]===j&&(p[g-1]={}),"closed"===p[g][0]?p[g-1].closed=!0:p[g][0]in p[g-1]?p[g-1][p[g][0]]=y(p[g-1][p[g][0]],p[g][1]):p[g-1][p[g][0]]=p[g][1],this.$=p[g-1];break;case 149:this.$={type:"OneOf",expressions:y([p[g-1]],p[g])};break;case 155:case 182:this.$=p[g-1];break;case 159:this.$={type:"EachOf",expressions:y([p[g-2]],p[g-1])};break;case 164:p[g-1]?(this.$=m({id:p[g-1]},p[g]),function(e,t,n){M.shapes&&e in M.shapes&&I(new Error("Structural error: "+e+" is a shape expression"),n),M.productions||(M.productions={}),e in M.productions?"replace"===M.options.duplicateShape?M.productions[e]=t:"ignore"!==M.options.duplicateShape&&I(new Error("Parse error: "+e+" already defined"),n):M.productions[e]=t}(p[g-1],this.$,s)):this.$=p[g];break;case 171:this.$=p[g-4],"min"in p[g-2]&&(this.$.min=p[g-2].min),"max"in p[g-2]&&(this.$.max=p[g-2].max),p[g-1].length&&(this.$.annotations=p[g-1]),p[g]&&(this.$.semActs="semActs"in p[g-4]?p[g-4].semActs.concat(p[g].semActs):p[g].semActs);break;case 174:p[g-3],0,this.$=m({type:"TripleConstraint"},p[g-5],{predicate:p[g-4]},p[g-3]===C?{}:{valueExpr:p[g-3]},p[g-2],p[g]),p[g-1].length&&(this.$.annotations=p[g-1]);break;case 177:this.$={min:0,max:-1};break;case 178:this.$={min:1,max:-1};break;case 179:this.$={min:0,max:1};break;case 180:p[g]=p[g].substr(1,p[g].length-2);const $=p[g].match(/(\d+)/g);this.$={min:parseInt($[0],10)},2===$.length?this.$.max=parseInt($[1],10):-1===p[g].indexOf(",")?this.$.max=parseInt($[0],10):this.$.max=-1;break;case 181:this.$={inverse:!0};break;case 195:this.$={type:"IriStemRange",stem:{type:"Wildcard"},exclusions:p[g]};break;case 196:this.$={type:"LiteralStemRange",stem:{type:"Wildcard"},exclusions:p[g]};break;case 197:this.$={type:"LanguageStemRange",stem:{type:"Wildcard"},exclusions:p[g]};break;case 198:p[g]?(this.$={type:p[g].length?"IriStemRange":"IriStem",stem:p[g-1]},p[g].length&&(this.$.exclusions=p[g])):this.$=p[g-1];break;case 204:this.$=p[g]?{type:"IriStem",stem:p[g-1]}:p[g-1];break;case 207:p[g]?(this.$={type:p[g].length?"LiteralStemRange":"LiteralStem",stem:p[g-1].value},p[g].length&&(this.$.exclusions=p[g])):this.$=p[g-1];break;case 213:this.$=p[g]?{type:"LiteralStem",stem:p[g-1].value}:p[g-1].value;break;case 214:p[g]?(this.$={type:p[g].length?"LanguageStemRange":"LanguageStem",stem:p[g-1]},p[g].length&&(this.$.exclusions=p[g])):this.$={type:"Language",languageTag:p[g-1]};break;case 215:this.$={type:p[g].length?"LanguageStemRange":"LanguageStem",stem:""},p[g].length&&(this.$.exclusions=p[g]);break;case 221:this.$=p[g]?{type:"LanguageStem",stem:p[g-1]}:p[g-1];break;case 223:this.$={type:"Annotation",predicate:p[g-1],object:p[g]};break;case 226:this.$=p[g].length?{semActs:p[g]}:null;break;case 229:this.$=p[g]?function(e,t){return t=t.substring(1,t.length-2),{type:"SemAct",name:e,code:r.unescapeText(t,v)}}(p[g-1],p[g]):{type:"SemAct",name:p[g-1]};break;case 236:this.$="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";break;case 242:this.$=_(p[g],"http://www.w3.org/2001/XMLSchema#integer");break;case 243:this.$=_(p[g],i);break;case 244:this.$=_(p[g],a);break;case 246:this.$=p[g]?m(p[g-1],{type:p[g]}):p[g-1];break;case 250:this.$={value:"true",type:o};break;case 251:this.$={value:"false",type:o};break;case 252:case 254:this.$=O(p[g],1);break;case 253:case 255:this.$=O(p[g],3);break;case 256:case 258:this.$=w(p[g],1);break;case 257:case 259:this.$=w(p[g],3);break;case 260:const P=r.unescapeText(p[g].slice(1,-1),{});this.$=null===M._base||c.test(P)?P:x(P);break;case 262:const Q=p[g].indexOf(":");this.$=N(p[g].substr(0,Q),s)+r.unescapeText(p[g].substr(Q+1),A);break;case 263:this.$=N(p[g].substr(0,p[g].length-1),s)}}}function Q(e={}){this.options={moduleName:"ShExJison"},P.call(this,e),this.rules=[/^(?:\s+|(#[^\u000a\u000d]*|\/\*([^*]|\*([^/]|\\\/))*\*\/))/,/^(?:(@(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*)))/,/^(?:(\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\*)?))?\}))/,/^(?:(([+-])?((([0-9])+\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\u0000-\u0020<>\"{}|^`\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:))/,/^(?:a\b)/,/^(?:(\/([^\u002f\u005C\u000A\u000D]|\\[nrt\\|.?*+(){}$\u002D\u005B\u005D\u005E/]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|[0-9])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?))/,/^(?:(\{([^%\\]|\\[%\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\}))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Aa][Bb][Ss][Tt][Rr][Aa][Cc][Tt]))/,/^(?:([Rr][Ee][Ss][Tt][Rr][Ii][Cc][Tt][Ss]))/,/^(?:([Ee][Xx][Tt][Ee][Nn][Dd][Ss]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\/\/)/,/^(?:\{)/,/^(?:\})/,/^(?:&)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:\$)/,/^(?:!)/,/^(?:\^\^)/,/^(?:\^)/,/^(?:\.)/,/^(?:~)/,/^(?:;)/,/^(?:\*)/,/^(?:\+)/,/^(?:\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],this.conditions={INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],inclusive:!0}},this.performAction=function(e,t,n,r){switch(n){case 0:break;case 1:return 79;case 2:return 80;case 3:return t.yytext=t.yytext.substr(1),185;case 4:return 81;case 5:return 215;case 6:return 159;case 7:return 109;case 8:return 108;case 9:return 100;case 10:return"ANON";case 11:return 19;case 12:return 21;case 13:return 199;case 14:return 101;case 15:return 216;case 16:return 195;case 17:return 211;case 18:return 213;case 19:return 210;case 20:return 212;case 21:return 207;case 22:return 209;case 23:return 206;case 24:return 208;case 25:return 18;case 26:return 20;case 27:return 23;case 28:return 26;case 29:return 39;case 30:return 36;case 31:return 220;case 32:return 218;case 33:return 125;case 34:return 127;case 35:return 85;case 36:return 97;case 37:return 96;case 38:return 98;case 39:return 53;case 40:return 51;case 41:return 43;case 42:return 112;case 43:return 113;case 44:return 114;case 45:return 115;case 46:return 102;case 47:return 103;case 48:return 104;case 49:return 116;case 50:return 117;case 51:return 27;case 52:return 190;case 53:return 119;case 54:return 121;case 55:return 189;case 56:return"||";case 57:return 135;case 58:return 140;case 59:return 69;case 60:return 70;case 61:return 161;case 62:return 163;case 63:return 148;case 64:return"!";case 65:return 111;case 66:return 160;case 67:return 71;case 68:return 178;case 69:return 141;case 70:return 156;case 71:return 157;case 72:return 158;case 73:return 179;case 74:return 193;case 75:return 204;case 76:return 205;case 77:return 7;case 78:return'unexpected word "'+t.yytext+'"';case 79:return"invalid character "+t.yytext}}}M.prototype=Object.create(D.prototype),Object.defineProperty(M.prototype,"constructor",{value:M,enumerable:!1,writable:!0}),t._b=M,Q.prototype=Object.create(P.prototype),Object.defineProperty(Q.prototype,"constructor",{value:Q,enumerable:!1,writable:!0})},931:(e,t,n)=>{const r=function(){const e=n(509)._b;return{construct:function(t,n,r){r=r||{};const s={};for(const e in n||{})s[e]=n[e];const i=new e;return i.parse=function(){e._prefixes=Object.create(s),e._imports=[],e._setBase(t),e._setFileName(t),e.options=r;let n=[];e.recoverable=e=>n.push(e);let o=null;try{o=e.prototype.parse.apply(i,arguments)}catch(e){n.push(e)}if(e.reset(),n.forEach((e=>{if("hash"in e){const t=e.hash,n=t.loc;delete t.loc,Object.assign(e,t,{location:n})}return e})),1==n.length)throw n[0].parsed=o,n[0];if(n.length){const e=new Error(n.length+" parser errors:\n"+n.map((e=>a(e,i.yy.lexer))).join("\n"));throw e.errors=n,e.parsed=o,e}return o},i._setBase=function(n){e._setBase,t=n},i._setFileName=e._setFileName,i._setOptions=function(t){e.options=t},i._resetBlanks=e._resetBlanks,i.reset=e.reset,e.options=r,i;function a(e,n){const r=e.location.first_line,s=e.location.first_column+1,i="pos"in e.hash?"\n"+e.hash.pos:"";return`${t}\n line: ${r}, column: ${s}: ${e.message}${i}`}}}}();e.exports=r},118:e=>{const t=function(){const e=/^[a-z][a-z0-9+.-]*:/i,t=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,n=/(?:^|\/)\.\.?(?:$|[\/#?])/,r="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",s="http://www.w3.org/2001/XMLSchema#string";function i(e){if(!n.test(e))return e;const t=e.length;let r="",s=-1,i=-1,a=0,o="/";for(;s<t;){switch(o){case":":if(i<0&&"/"===e[++s]&&"/"===e[++s])for(;(i=s+1)<t&&"/"!==e[i];)s=i;break;case"?":case"#":s=t;break;case"/":if("."===e[s+1])switch(o=e[1+ ++s],o){case"/":r+=e.substring(a,s-1),a=s+1;break;case void 0:case"?":case"#":return r+e.substring(a,s)+e.substr(s+1);case".":if(o=e[1+ ++s],void 0===o||"/"===o||"?"===o||"#"===o){if(r+=e.substring(a,s-2),(a=r.lastIndexOf("/"))>=i&&(r=r.substr(0,a)),"/"!==o)return r+"/"+e.substr(s+1);a=s+1}}}o=e[++s]}return r+e.substring(a)}function a(e){switch(e.termType){case"NamedNode":return e.value;case"BlankNode":return"_:"+e.value;case"Literal":return'"'+e.value.replace(/"/g,'\\"')+'"'+(e.datatypeString===r?"@"+e.language:e.datatypeString===s?"":"^^"+e.datatypeString);default:throw Error("unknown RDFJS node type: "+JSON.stringify(e))}}function o(e,t){if(u(e))return t.namedNode(e);if(l(e))return t.blankNode(e.substr(2));if(c(e)){let n=h(e)||(f(e)===s?null:t.namedNode(f(e)));return t.literal(p(e),n)}throw Error("Unknown internal term type: "+JSON.stringify(e))}function u(e){if("string"!=typeof e)return!1;if(0===e.length)return!0;{const t=e[0];return'"'!==t&&"_"!==t}}function c(e){return"string"==typeof e&&'"'===e[0]}function l(e){return"string"==typeof e&&"_:"===e.substr(0,2)}function p(e){const t=/^"([^]*)"/.exec(e);if(!t)throw new Error(e+" is not a literal");return t[1].replace(/\\"/g,'"')}function f(e){const t=/^"[^]*"(?:\^\^([^"]+)|(@)[^@"]+)?$/.exec(e);if(!t)throw new Error(e+" is not a literal");return t[1]||(t[2]?r:s)}function h(e){const t=/^"[^]*"(?:@([^@"]+)|\^\^[^"]+)?$/.exec(e);if(!t)throw new Error(e+" is not a literal");return t[1]?t[1].toLowerCase():""}const d=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,m=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,y={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};function x(e){let t=y[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}return{RdfLangString:r,XsdString:s,resolveRelativeIRI:function(n,r){if(e.test(r))return r;switch(r[0]){case void 0:return n;case"#":return n+r;case"?":return n.replace(/(?:\?.*)?$/,r);case"/":let e=n.match(t);return("/"===r[1]?e[1]:e[0])+i(r);default:return i(n.replace(/[^\/?]*(?:\?.*)?$/,"")+r)}},isIRI:u,isLiteral:c,isBlank:l,isDefaultGraph:function(e){return!e},inDefaultGraph:function(e){return!e.graph},getLiteralValue:p,getLiteralType:f,getLiteralLanguage:h,internalTerm:a,internalTriple:function(e){return{subject:a(e.subject),predicate:a(e.predicate),object:a(e.object)}},externalTerm:o,externalTriple:function(e,t){return t.quad(o(e.subject,t),o(e.predicate,t),o(e.object,t))},internalTermToTurtle:function(e,t,n){if(u(e)){d.test(e)&&(e=e.replace(m,x));const r=Object.keys(n).find((t=>e.startsWith(n[t])));if(r){const t=e.substr(n[r].length);if(-1===t.indexOf("\\"))return r+":"+t.replace(/([~!$&'()*+,;=/?#@%])/g,"\\$1")}return e.startsWith(t)?"<"+e.substr(t.length)+">":"<"+e+">"}if(l(e))return e;if(c(e)){let r=p(e);const s=f(e),i=h(e);return d.test(r)&&(r=r.replace(m,x)),i?'"'+r+'"@'+i:s&&"http://www.w3.org/2001/XMLSchema#string"!==s?'"'+r+'"^^'+this.internalTermToTurtle(s,t,n):'"'+r+'"'}throw Error("Unknown internal term type: "+JSON.stringify(e))}}}();e.exports=t},443:(t,n,r)=>{const s=function(){const t=r(118),n=r(806),s=r(515),i={_namespace:"http://www.w3.org/ns/shex#"};["Schema","@context","imports","startActs","start","shapes","ShapeDecl","ShapeOr","ShapeAnd","shapeExprs","nodeKind","NodeConstraint","iri","bnode","nonliteral","literal","datatype","length","minlength","maxlength","pattern","flags","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits","values","ShapeNot","shapeExpr","Shape","abstract","closed","extra","expression","extends","restricts","semActs","ShapeRef","reference","ShapeExternal","EachOf","OneOf","expressions","min","max","annotation","TripleConstraint","inverse","negated","predicate","valueExpr","Inclusion","include","Language","languageTag","IriStem","LiteralStem","LanguageStem","stem","IriStemRange","LiteralStemRange","LanguageStemRange","exclusion","Wildcard","SemAct","name","code","Annotation","object"].forEach((e=>{i[e]=i._namespace+e}));const a={_namespace:"http://www.w3.org/1999/02/22-rdf-syntax-ns#"};["type","first","rest","nil"].forEach((e=>{a[e]=a._namespace+e}));const o={_namespace:"http://www.w3.org/2001/XMLSchema#"};["anyURI"].forEach((e=>{o[e]=o._namespace+e}));const u={_namespace:"http://www.w3.org/2002/07/owl#"};["Thing"].forEach((e=>{u[e]=u._namespace+e}));const c={};function l(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function p(e){if('"'!==e[0])return e;const n={value:t.getLiteralValue(e)},r=t.getLiteralType(e);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=t.getLiteralLanguage(e);return s&&(n.language=s),n}const f={SX:i,RDF:a,version:function(){return"0.5.0"},Visitor:n,index:n.index,getAST:function(e){return{type:"AST",shapes:e.shapes.reduce((function(n,r){return n[r.id]={type:"ASTshape",expression:t(r.expression,[],e)},n}),{})};function t(e,t,n){function r(){this.type="Epsilon"}function s(e,t,n,r,s){this.type="TripleConstraint",this.inverse=!!n,this.negated=!!r,this.predicate=t,void 0!==s&&(this.valueExpr=s)}function i(e){this.type="Choice",this.disjuncts=e}function a(e){this.type="EachOf",this.conjuncts=e}function o(e,t){this.type="SemActs",this.expression=e,this.semActs=t}function u(e){this.type="KleeneStar",this.expression=e}return e?function e(n,c){let l,p;function f(e,t,n){if(void 0===t&&(t=1),void 0===n&&(n=1),1===t&&1===n)return e;const s=-1===n?new u(e):Array.from(Array(n-t)).reduce((function(t,n,s){return new i(0===s?[e,new r]:[new a([e,t]),new r])}),void 0);return 0!==t?new a(Array.from(Array(t)).map((function(t){return e})).concat(s)):s}if("string"==typeof n){return e(c._index.tripleExprs[n].expression,c)}if("TripleConstraint"===n.type){const e="valueExprRef"in n?c.valueExprDefns[n.valueExprRef]:n.valueExpr;return l=f(new s(t.push(n)-1,n.predicate,n.inverse,n.negated,e),n.min,n.max),n.semActs?new o(l,n.semActs):l}if("OneOf"===n.type)return p=new i(n.expressions.map((function(t){return e(t,c)}))),l=f(p,n.min,n.max),n.semActs?new o(l,n.semActs):l;if("EachOf"===n.type)return p=new a(n.expressions.map((function(t){return e(t,c)}))),l=f(p,n.min,n.max),n.semActs?new o(l,n.semActs):l;throw Error("unexpected expr type: "+n.type)}(e,n):new r}},ShExJtoAS:function(e){return e._prefixes=e._prefixes||{},e._index=this.index(e),e},AStoShExJ:function(e,t){return e["@context"]=e["@context"]||"http://www.w3.org/ns/shex.jsonld",delete e._index,delete e._prefixes,e},ShExRVisitor:function(e){const n=f.Visitor(),r={},s=n.visitShapeExpr,i=(n.visitValueExpr,n.visitExpression);return n.keepShapeExpr=s,n.visitShapeExpr=n.visitValueExpr=function(t,n){if("string"==typeof t)return t;if("id"in t){if(-1!==e.indexOf(t.id)||1===Object.keys(t).length)return t.id;delete t.id}return s.call(this,t,n)},n.visitExpression=function(e){if("string"==typeof e)return e;if("id"in e&&e.id in r)return r[e.id].refCount++,e.id;const t=i.call(this,e);return r[e.id]={refCount:1,expr:t},t},n.cleanIds=function(){for(let e in r){const n=r[e];1===n.refCount&&t.isBlank(n.expr.id)&&delete n.expr.id}},n},ShExRtoShExJ:function(e){const t=[];"shapes"in e&&[].push.apply(t,e.shapes.map((e=>e.id)));const n=this.ShExRVisitor(t);return"start"in e&&(e.start=n.visitShapeExpr(e.start)),"shapes"in e&&(e.shapes=e.shapes.map((e=>e.type===i.ShapeDecl?{type:"ShapeDecl",id:e.id,abstract:e.abstract,shapeExpr:n.visitShapeExpr(e.shapeExpr)}:n.keepShapeExpr(e)))),n.cleanIds(),e},valGrep:function(e,t,n){const r=this,s=[];for(let i in e){const a=e[i];"object"==typeof a&&("type"in a&&a.type===t&&s.push(n(a)),s.push.apply(s,r.valGrep(a,t,n)))}return s},n3jsToTurtle:function(e){return this.valGrep(e,"TestedTriple",(function(e){return["subject","predicate","object"].map((n=>{return"object"==typeof(r=e[n])?'"'+r.value+'"'+("type"in r?"^^<"+r.type+">":"language"in r?"@"+r.language:""):t.isIRI(r)?"<"+r+">":t.isBlank(r)?r:"???";var r})).join(" ")+" ."}))},valToN3js:function(e,n){return this.valGrep(e,"TestedTriple",(function(e){const r=JSON.parse(JSON.stringify(e));return"object"==typeof e.object&&(r.object='"'+e.object.value+'"'+("type"in e.object?"^^"+e.object.type:"language"in e.object?"@"+e.object.language:"")),t.externalTriple(r,n)}))},n3jsToTurtle:function(e){return e.map((function(e){return["subject","predicate","object"].map((n=>function(e){if(t.isIRI(e))return"<"+e+">";if(t.isBlank(e))return e;const n=t.getLiteralType(e);return n&&"http://www.w3.org/2001/XMLSchema#string"!==n?'"'+t.getLiteralValue(e)+'"^^<'+n+">":e}(e[n]))).join(" ")+" ."}))},canonicalize:function(e,t){const n=JSON.parse(JSON.stringify(e));n["@context"]=n["@context"]||"http://www.w3.org/ns/shex.jsonld",delete n._prefixes,delete n._base;let r=n._index||this.index(e);delete n._index;n._sourceMap;delete n._sourceMap;const s=f.Visitor(),i=[],a=s.visitInclusion,o=s.visitExpression;return s.visitInclusion=function(e){return-1===i.indexOf(e)&&e in r.tripleExprs?(i.push(e),o.call(s,r.tripleExprs[e])):a.call(s,e)},s.visitExpression=function(e){return"object"==typeof e&&"id"in e?-1===i.indexOf(e.id)?(i.push(e.id),o.call(s,r.tripleExprs[e.id])):e.id:o.call(s,e)},t&&(s.visitIRI=function(e){return e.replace(t,"")},"imports"in n&&(n.imports=s.visitImports(n.imports))),"shapes"in n&&(n.shapes=Object.keys(r.shapeExprs).sort().map((e=>("extra"in r.shapeExprs[e]&&r.shapeExprs[e].extra.sort(),s.visitShapeDecl(r.shapeExprs[e]))))),n},BiDiClosure:function(){return{needs:{},neededBy:{},inCycle:[],test:function(){function e(e,t){const n=JSON.stringify(e),r=JSON.stringify(t);if(n!==r)throw Error(n+" !== "+r)}this.add(2,3),e(this.needs,{2:[3]}),e(this.neededBy,{3:[2]}),this.add(1,2),e(this.needs,{1:[2,3],2:[3]}),e(this.neededBy,{3:[2,1],2:[1]}),this.add(1,3),e(this.needs,{1:[2,3],2:[3]}),e(this.neededBy,{3:[2,1],2:[1]}),this.add(3,4),e(this.needs,{1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{3:[2,1],2:[1],4:[3,2,1]}),this.add(6,7),e(this.needs,{6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6],3:[2,1],2:[1],4:[3,2,1]}),this.add(5,6),e(this.needs,{5:[6,7],6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],3:[2,1],2:[1],4:[3,2,1]}),this.add(5,7),e(this.needs,{5:[6,7],6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],3:[2,1],2:[1],4:[3,2,1]}),this.add(7,8),e(this.needs,{5:[6,7,8],6:[7,8],7:[8],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],8:[7,6,5],3:[2,1],2:[1],4:[3,2,1]}),this.add(4,5),e(this.needs,{1:[2,3,4,5,6,7,8],2:[3,4,5,6,7,8],3:[4,5,6,7,8],4:[5,6,7,8],5:[6,7,8],6:[7,8],7:[8]}),e(this.neededBy,{2:[1],3:[2,1],4:[3,2,1],5:[4,3,2,1],6:[5,4,3,2,1],7:[6,5,4,3,2,1],8:[7,6,5,4,3,2,1]})},add:function(e,t,n){const r=this;e in r.needs||(r.needs[e]=[]),t in r.neededBy||(r.neededBy[t]=[]),r.needs[e]=r.needs[e].concat([t],r.needs[t]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t})),r.neededBy[t]=r.neededBy[t].concat([e],r.neededBy[e]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t})),e in this.neededBy&&this.neededBy[e].forEach((function(e){r.needs[e]=r.needs[e].concat([t],r.needs[t]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t}))})),t in this.needs&&this.needs[t].forEach((function(t){r.neededBy[t]=r.neededBy[t].concat([e],r.neededBy[e]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t}))})),-1!==r.needs[e].indexOf(e)&&(r.inCycle=r.inCycle.concat(r.needs[e]))},trim:function(){function e(e){for(let t=e.length-1;t>-1;--t)e.indexOf(e[t])<t&&e.splice(t,t+1)}for(k in this.needs)e(this.needs[k]);for(k in this.neededBy)e(this.neededBy[k])},foundIn:{},addIn:function(e,t){this.foundIn[e]=t}}},nestShapes:function(e,t={}){const n=this,r=e._index||this.index(e);"no"in t||(t.no=!1);let s=Object.keys(r.shapeExprs||[]),i={};s.forEach((e=>{let t=r.shapeExprs[e];if(o(e,null),t=n.skipDecl(t),"Shape"===t.type)"extends"in t&&t.extends.forEach((e=>o(e,t))),"expression"in t&&(n.simpleTripleConstraints(t)||[]).forEach((t=>{o(n.getValueType(t.valueExpr,!0),{type:"tc",shapeLabel:e,tc:t})}));else if("NodeConstraint"!==t.type)throw Error("nestShapes currently only supports Shapes and NodeConstraints")}));let a=Object.keys(i).filter((e=>1===i[e].length&&"tc"===i[e][0].type&&e in r.shapeExprs&&"Shape"===n.skipDecl(r.shapeExprs[e]).type&&!r.shapeExprs[e].abstract)).filter((e=>!("noNestPattern"in t)||!e.match(RegExp(t.noNestPattern)))).reduce(((e,t)=>(e[t]={referrer:i[t][0].shapeLabel,predicate:i[t][0].tc.predicate},e)),{});if(!t.no){let o={};if(t.rename){"transform"in t||(t.transform=function(){let e=s.reduce(((e,t,n)=>(e[t]="_:renamed"+n,e)),{});return function(t,n){return e[t]}}()),Object.keys(a).forEach((e=>{let n=r.shapeExprs[e],u=t.transform(e,n);if(o[e]=n.id=u,s[s.indexOf(e)]=u,a[u]=a[e],a[u].was=e,delete a[e],r.shapeExprs[u]=r.shapeExprs[e],delete r.shapeExprs[e],1!==i[e].length)throw Error("assertion: "+e+" doesn't have one reference: ["+i[e]+"]");let c=i[e][0];if("tc"!==c.type)throw"Shape"===c.type?Error("assertion: rename not implemented for Shape: "+c):Error("assertion: "+c.type+" not TripleConstraint or Shape");if("string"!=typeof c.tc.valueExpr)throw Error("assertion: rename not implemented for TripleConstraint expr: "+c.tc.valueExpr);c.tc.valueExpr=u})),Object.keys(a).forEach((e=>{let t=a[e];t.referrer in o&&(t.newReferrer=o[t.referrer])}));let e={};s.forEach((t=>e[t]=r.shapeExprs[t])),r.shapeExprs=e}else{const t=[],s=e.shapes.map((e=>e.id));Object.keys(a).forEach((a=>{const o=r.shapeExprs[a];i[a][0].tc.valueExpr=n.skipDecl(o);const u=s.indexOf(a);if(e.shapes[u].id!==a)throw Error("assertion: found "+e.shapes[u].id+" instead of "+a);t.push(u),delete r.shapeExprs[a]})),t.sort(((e,t)=>t-e)).forEach((t=>{const n=e.shapes[t].id;if(!a[n])throw Error("deleting unexpected shape "+n);delete e.shapes[t].id,e.shapes.splice(t,1)}))}}return a;function o(e,t){e in i||(i[e]=[]),t&&i[e].push(t)}},getPredicateUsage:function(e,t={}){const n=this;let r=s.create();Object.keys(e.shapes).forEach((t=>{let s=n.skipDecl(e.shapes[t]);"Shape"===s.type&&(s.extends||[]).forEach((e=>r.add(e.reference,t)))})),Object.keys(e.shapes).forEach((e=>{e in r.parents||(r.parents[e]=[])}));let i={};return Object.keys(e.shapes).forEach((s=>{let a=n.skipDecl(e.shapes[s]);if("Shape"===a.type){(n.simpleTripleConstraints(a)||[]).forEach((e=>{let a=n.getValueType(e.valueExpr);if(e.predicate in i){i[e.predicate].uses.push(s);let n=i[e.predicate].commonType;if("object"==typeof n||null===n)t[e.predicate].references.push({shapeLabel:s,newType:a});else if("object"==typeof a)i[e.predicate].commonType=null,t[e.predicate]={shapeLabel:s,predicate:e.predicate,curType:n,newType:a,references:[]};else if(n===a);else if(r.parents[n]&&-1!==r.parents[n].indexOf(a))i[e.predicate].polymorphic=!0;else{let o=r.parents[a]?r.parents[a].indexOf(n):-1;if(-1===o){let o=r.parents[n]?r.parents[n].filter((e=>-1!==r.parents[a].indexOf(e))):[];0===o.length?(t[e.predicate]={shapeLabel:s,predicate:e.predicate,curType:n,newType:a,references:[]},i[e.predicate].commonType=null):(i[e.predicate].commonType=o[0],i[e.predicate].polymorphic=!0)}else i[e.predicate].commonType=r.parents[a][o],i[e.predicate].polymorphic=!0}}else i[e.predicate]={uses:[s],commonType:a,polymorphic:!1},"object"==typeof a&&(t[e.predicate]={shapeLabel:s,predicate:e.predicate,newType:a,references:[]})}))}})),i},simpleTripleConstraints:function(e){if(!("expression"in e))return[];if("TripleConstraint"===e.expression.type)return[e.expression];if("EachOf"===e.expression.type&&!e.expression.expressions.find((e=>"TripleConstraint"!==e.type)))return e.expression.expressions;throw Error("can't (yet) express "+JSON.stringify(e))},skipDecl:function(e){return"ShapeDecl"===e.type?e.shapeExpr:e},getValueType:function(e){return"string"==typeof e?e:e.reference?e.reference:"iri"===e.nodeKind?u.Thing:e.datatype?e.datatype:e},getDependencies:function(e,t){return t=t||this.BiDiClosure(),(e.shapes||[]).forEach((function(e){function n(r,s){if("string"==typeof r)t.add(e.id,r);else if("ShapeOr"===r.type||"ShapeAnd"===r.type)r.shapeExprs.forEach((function(e){n(e,s)}));else if("ShapeNot"===r.type)n(r.shapeExpr,1^s);else if("Shape"===r.type)!function(e,r){function s(r,i){function a(e,t){e.forEach((function(e){s(e,t)}))}function o(r,s){if(r.valueExpr&&n(r.valueExpr,s),s&&-1!==t.inCycle.indexOf(e.id))throw Error("Structural error: "+e.id+" appears in negated cycle")}if("string"==typeof r)t.add(e.id,r);else if("id"in r&&t.addIn(r.id,e.id),"TripleConstraint"===r.type)o(r,i);else{if("OneOf"!==r.type&&"EachOf"!==r.type)throw Error("expected {TripleConstraint,OneOf,EachOf,Inclusion} in "+r);a(r.expressions)}}["extends","restricts"].forEach((n=>{e[n]&&e[n].length>0&&e[n].forEach((function(n){t.add(e.id,n)}))})),e.expression&&s(e.expression,r)}(r,s);else if("NodeConstraint"===r.type);else if("ShapeExternal"!==r.type)throw Error("expected Shape{And,Or,Ref,External} or NodeConstraint in "+JSON.stringify(r))}"ShapeDecl"===e.type&&(e=e.shapeExpr),n(e,0)})),t},partition:function(e,t,n,r){const s=e._index||this.index(e),i={shapeExprs:new Map,tripleExprs:new Map};t=t instanceof Array?t:[t],n=n||this.getDependencies(e),r=r||function(e,t){throw new Error("Error: can't find shape "+(t?t+" dependency "+e:e))};const a={};for(let t in e)a[t]="shapes"===t?[]:e[t];return t.forEach((function(e){if(e in i.shapeExprs);else if(e in s.shapeExprs){const t=s.shapeExprs[e];a.shapes.push(t),i.shapeExprs[t.id]=t,e in n.needs&&n.needs[e].forEach((function(t){if(t in n.foundIn&&(t=n.foundIn[t]),t in i.shapeExprs);else if(t in s.shapeExprs){const e=s.shapeExprs[t];a.shapes.push(e),i.shapeExprs[e.id]=e}else r(t,e)}))}else r(e,"supplied")})),a},flatten:function(e,t,n){return this.Visitor().visitSchema(e)},emptySchema:function(){return{type:"Schema"}},merge:function(e,t,n,r){const s=r?e:this.emptySchema();var i;"_base"in e&&(s._base=e._base),"_base"in t&&("_base"in e&&!n||(s._base=t._base)),i="_prefixes",Object.keys(e[i]||{}).forEach((function(t){i in s||(s[i]={}),s[i][t]=e[i][t]})),Object.keys(t[i]||{}).forEach((function(r){i in e&&r in e[i]&&!n||(i in s||(s[i]={}),s[i][r]=t[i][r])})),function(r){(e[r]||new Map).forEach((function(t,n,i){r in s||(s[r]=new Map),s[r].set(n,e[r].get(n))})),(t[r]||new Map).forEach((function(i,a,o){r in e&&e[r].has(a)&&!n||(r in s||(s[r]=new Map),s[r].set(a,t[r].get(a)))}))}("_sourceMap"),"imports"in t&&("imports"in e&&!n||(s.imports=t.imports)),"startActs"in e&&(s.startActs=e.startActs),"startActs"in t&&("startActs"in e&&!n||(s.startActs=t.startActs)),"start"in e&&(s.start=e.start),"start"in t&&("start"in e&&!n||(s.start=t.start));let a=e._index||this.index(e);return r||(e.shapes||[]).forEach((function(e){"shapes"in s||(s.shapes=[]),s.shapes.push(e)})),(t.shapes||[]).forEach((function(t){"shapes"in e&&t.id in a.shapeExprs&&!n||("shapes"in s||(s.shapes=[]),s.shapes.push(t))})),(e._index||t._index)&&(s._index=this.index(s)),s},absolutizeResults:function(e,n){function r(e,r){-1!==["shape","reference","node","subject","predicate","object"].indexOf(e)&&t.isIRI(r[e])&&(r[e]=t.resolveRelativeIRI(n,r[e]))}return function e(t){Object.keys(t).forEach((function(n){"object"==typeof t[n]&&e(t[n]),r&&r(n,t)}))}(e),e},getProofGraph:function(e,n,r){return function e(s){if("NodeConstraintTest"===s.type);else if("SolutionList"===s.type||"ShapeAndResults"===s.type||"ExtensionResults"===s.type)s.solutions.forEach((t=>{t.solution&&e(t.solution)}));else if("ShapeOrResults"===s.type)e(s.solution);else if("ShapeTest"===s.type)"solution"in s&&e(s.solution);else if("OneOfSolutions"===s.type||"EachOfSolutions"===s.type)s.solutions.forEach((t=>{e(t)}));else if("OneOfSolution"===s.type||"EachOfSolution"===s.type)s.expressions.forEach((t=>{e(t)}));else if("TripleConstraintSolutions"===s.type)s.solutions.map((s=>{if("TestedTriple"!==s.type)throw Error("unexpected result type: "+s.type);const i=s;"object"==typeof i.object&&(i.object='"'+i.object.value.replace(/"/g,'\\"')+'"'+(i.object.language?"@"+i.object.language:i.object.type?"^^"+i.object.type:"")),n.addQuad(t.externalTriple(i,r)),"referenced"in s&&e(s.referenced)}));else if("ExtendedResults"===s.type)e(s.extensions),"local"in s&&e(s.local);else if("Recursion"!==s.type)throw Error("unexpected expr type "+s.type+" in "+JSON.stringify(s))}(e),n},validateSchema:function(e){const t=this.Visitor();let n=currentExtra=null,r=!1,i=!1;const a=t.visitShape,o=s.create(),u=s.create();let c=e.index||this.index(e);t.visitShape=function(e,n){const r=currentExtra;currentExtra=e.extra;const s=a.call(t,e,n);return currentExtra=r,s};const l=t.visitShapeNot;t.visitShapeNot=function(e,n){const s=r;r^=!0;const i=l.call(t,e,n);return r=s,i};const p=t.visitTripleConstraint;t.visitTripleConstraint=function(e){const n=r;currentExtra&&-1!==currentExtra.indexOf(e.predicate)&&(r^=!0),i=!0;const s=p.call(t,e);return i=!1,r=n,s};const f=t.visitShapeRef;t.visitShapeRef=function(e){if(!(e in c.shapeExprs))throw y(Error("Structural error: reference to "+JSON.stringify(e)+" not found in schema shape expressions:\n"+m(c.shapeExprs)+"."),e);if(!i&&e===n)throw y(Error("Structural error: circular reference to "+n+"."),e);return(r?o:u).add(n,e),f.call(t,e)};const h=t.visitInclusion;t.visitInclusion=function(e){let n;if(!(n=c.tripleExprs[e]))throw y(Error("Structural error: included shape "+e+" not found in schema triple expressions:\n"+m(c.tripleExprs)+"."),e);return h.call(t,e)},(e.shapes||[]).forEach((function(e){n=e.id,t.visitShapeDecl(e,e.id)}));let d=Object.keys(o.children).filter((e=>o.children[e].filter((t=>t in o.children&&-1!==o.children[t].indexOf(e)||t in u.children&&-1!==u.children[t].indexOf(e))).length>0));if(d.length)throw y(Error("Structural error: circular negative dependencies on "+d.join(",")+"."),d[0]);function m(e){return e?Object.keys(e).map((e=>"_:"===e.substr(0,2)?e:"<"+e+">")).join("\n        "):"- none defined -"}function y(t,n){return"_sourceMap"in e&&(t.location=(e._sourceMap.get(n)||[void 0])[0]),t}},isWellDefined:function(e){return this.validateSchema(e),e},walkVal:function(e,t){const n=this;if("string"==typeof e)return null;if("SolutionList"===e.type)return e.solutions.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("NodeConstraintTest"===e.type)return n.walkVal(e.shapeExpr,t);if("NodeConstraint"===e.type)return null;if("ShapeTest"===e.type){const s=[];r(e,s);const i=s.length?{"http://shex.io/reflex":s}:{};return"solution"in e&&Object.assign(i,n.walkVal(e.solution,t)),Object.keys(i).length?i:null}if("Shape"===e.type)return null;if("ShapeNotTest"===e.type)return n.walkVal(e.shapeExpr,t);if("ShapeNotResults"===e.type)return n.walkVal(e.solution,t);if("Failure"===e.type)return null;if("ShapeNot"===e.type)return n.walkVal(e.shapeExpr,t);if("ShapeOrResults"===e.type)return n.walkVal(e.solution,t);if("ShapeOr"===e.type)return e.shapeExprs.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("ShapeAndResults"===e.type||"ExtensionResults"===e.type)return e.solutions.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("ShapeAnd"===e.type)return e.shapeExprs.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("ExtendedResults"===e.type)return["extensions","local"].reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("EachOfSolutions"===e.type||"OneOfSolutions"===e.type)return e.solutions.reduce(((e,r)=>(r.expressions.forEach((r=>{const s=n.walkVal(r,t);s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]}))})),e)),{});if("TripleConstraintSolutions"===e.type){if("solutions"in e){const t={},n=[];return t[e.predicate]=n,e.solutions.forEach((e=>r(e,n))),n.length?t:null}return null}if("Recursion"===e.type)return null;throw Error("unknown shapeExpression type in "+JSON.stringify(e));function r(e,r){const s=[];if(function e(s){if(!s)return!1;if(s.node===a.nil)return!0;if("solution"in s&&"solutions"in s.solution&&1===s.solution.solutions.length&&"expressions"in s.solution.solutions[0]&&2===s.solution.solutions[0].expressions.length&&"predicate"in s.solution.solutions[0].expressions[0]&&s.solution.solutions[0].expressions[0].predicate===a.first&&s.solution.solutions[0].expressions[1].predicate===a.rest){const i=s.solution.solutions[0].expressions,o=i[0],u=i[1].solutions[0],c=o.solutions[0];let l=t(c);if("referenced"in c){const e=n.walkVal(c.referenced,t);e&&(l?l.nested=e:l=e)}return l&&r.push(l),u.object===a.nil||e("ShapeOrResults"===u.referenced.type?u.referenced.solution:u.referenced)}}(e.referenced))[].push.apply(r,s);else{const s=t(e)||{};if("referenced"in e){const r=n.walkVal(e.referenced,t);r&&(s.nested=r)}Object.keys(s).length>0&&r.push(s)}}},valToValues:function(e){return this.walkVal(e,(function(e){return"object"in e?{ldterm:e.object}:null}))},valToExtension:function(e,t){return function e(n){const r=[];let s={};function i(e){if(null===s)return e;if(Array.isArray(e))return s=null,e;for(k in e){if(k in s)return s=null,e;s[k]=p(e[k])}return e}for(let s in n)if("extensions"===s)n[s]&&r.push(i(p(n[s][t])));else if("nested"===s){const t=e(n[s]);Array.isArray(t)?t.forEach(i):i(t),r.push(t)}else r.push(i(e(n[s])));return 1===r.length?r[0]:s||r}(this.walkVal(e,(function(e){return"extensions"in e?{extensions:e.extensions}:null})))},valuesToSchema:function(e){const t=e;if(e[a.type][0].ldterm===i.Schema){const n={"@context":"http://www.w3.org/ns/shex.jsonld",type:"Schema"};i.startActs in t&&(n.startActs=t[i.startActs].map((e=>{const t={type:"SemAct",name:e.nested[i.name][0].ldterm};return i.code in e.nested&&(t.code=e.nested[i.code][0].ldterm.value),t}))),i.imports in t&&(n.imports=t[i.imports].map((e=>e.ldterm))),e[i.start]&&(n.start=l({id:e[i.start][0].ldterm},r(e[i.start][0].nested)));const s=e[i.shapes];return s&&(n.shapes=s.map((e=>{var t=e.nested[a.type][0].ldterm===i.ShapeDecl?{type:i.ShapeDecl,abstract:!!e.nested[i.abstract][0].ldterm.value,shapeExpr:r(e.nested[i.shapeExpr][0].nested)}:r(e.nested);return l({id:e.ldterm},t)}))),n}throw Error("unknown schema type in "+JSON.stringify(e));function n(e,t,n){const r=e[a.type][0].ldterm.substr(i._namespace.length),s=t[r];if(!s)return c;if(s.nary){const t={type:r};return t[s.prop]=e[i[s.prop]].map((e=>o(e))),t}{const t={type:r};return s.prop&&(t[s.prop]=o(e[i[s.prop]][0])),t}function o(e){return s.expr&&"nested"in e?l({id:e.ldterm},n(e.nested)):e.ldterm}}function r(e){let t=n(e,{ShapeAnd:{nary:!0,expr:!0,prop:"shapeExprs"},ShapeOr:{nary:!0,expr:!0,prop:"shapeExprs"},ShapeNot:{nary:!1,expr:!0,prop:"shapeExpr"},ShapeRef:{nary:!1,expr:!1,prop:"reference"},ShapeExternal:{nary:!1,expr:!1,prop:null}},r);if(t!==c)return t;const u=e[a.type][0].ldterm;if(u===i.ShapeDecl){const t={type:"ShapeDecl"};return["abstract"].forEach((n=>{i[n]in e&&(t[n]=!!e[i[n]][0].ldterm.value)})),i.shapeExpr in e&&(t.shapeExpr="nested"in e[i.shapeExpr][0]?l({id:e[i.shapeExpr][0].ldterm},r(e[i.shapeExpr][0].nested)):e[i.shapeExpr][0].ldterm),t}if(u===i.Shape)return t={type:"Shape"},["closed"].forEach((n=>{i[n]in e&&(t[n]=!!e[i[n]][0].ldterm.value)})),["extra","extends","restricts"].forEach((n=>{i[n]in e&&(t[n]=e[i[n]].map((e=>e.ldterm)))})),i.expression in e&&(t.expression="nested"in e[i.expression][0]?l({id:e[i.expression][0].ldterm},o(e[i.expression][0].nested)):e[i.expression][0].ldterm),i.annotation in e&&(t.annotations=e[i.annotation].map((e=>({type:"Annotation",predicate:e.nested[i.predicate][0].ldterm,object:e.nested[i.object][0].ldterm})))),i.semActs in e&&(t.semActs=e[i.semActs].map((e=>{const t={type:"SemAct",name:e.nested[i.name][0].ldterm};return i.code in e.nested&&(t.code=e.nested[i.code][0].ldterm.value),t}))),t;if(u===i.NodeConstraint){const t={type:"NodeConstraint"};return i.values in e&&(t.values=e[i.values].map((e=>s(e)))),i.nodeKind in e&&(t.nodeKind=e[i.nodeKind][0].ldterm.substr(i._namespace.length)),["length","minlength","maxlength","mininclusive","maxinclusive","minexclusive","maxexclusive","totaldigits","fractiondigits"].forEach((n=>{i[n]in e&&(t[n]=parseFloat(e[i[n]][0].ldterm.value))})),i.pattern in e&&(t.pattern=e[i.pattern][0].ldterm.value),i.flags in e&&(t.flags=e[i.flags][0].ldterm.value),i.datatype in e&&(t.datatype=e[i.datatype][0].ldterm),t}throw Error("unknown shapeExpr type in "+JSON.stringify(e))}function s(e,t){if("nested"in e){const t=e.nested[a.type][0].ldterm;if(-1!==[i.IriStem,i.LiteralStem,i.LanguageStem].indexOf(t)){const n=e.nested[i.stem][0].ldterm.value;return{type:t.substr(i._namespace.length),stem:n}}if(-1!==[i.Language].indexOf(t))return{type:"Language",languageTag:e.nested[i.languageTag][0].ldterm.value};if(-1!==[i.IriStemRange,i.LiteralStemRange,i.LanguageStemRange].indexOf(t)){const n=e.nested[i.stem][0];let r=n;"object"==typeof n&&("object"==typeof n.ldterm?r=n.ldterm:n.ldterm.startsWith("_:")&&(r={type:"Wildcard"}));const a={type:t.substr(i._namespace.length),stem:"Wildcard"!==r.type?r.value:r};return i.exclusion in e.nested&&(a.exclusions=e.nested[i.exclusion].map((e=>s(e,t!==i.IriStemRange)))),a}throw Error("unknown objectValue type in "+JSON.stringify(e))}return t?e.ldterm.value:e.ldterm}function o(e){const t=n(e,{EachOf:{nary:!0,expr:!0,prop:"expressions"},OneOf:{nary:!0,expr:!0,prop:"expressions"},Inclusion:{nary:!1,expr:!1,prop:"include"}},o);if(t!==c)return u(e,t),t;if(e[a.type][0].ldterm===i.TripleConstraint){const t={type:"TripleConstraint",predicate:e[i.predicate][0].ldterm};return["inverse"].forEach((n=>{i[n]in e&&(t[n]=!!e[i[n]][0].ldterm.value)})),i.valueExpr in e&&(t.valueExpr=l({id:e[i.valueExpr][0].ldterm},"nested"in e[i.valueExpr][0]?r(e[i.valueExpr][0].nested):{})),u(e,t),t}throw Error("unknown tripleExpr type in "+JSON.stringify(e))}function u(e,t){return i.min in e&&(t.min=parseInt(e[i.min][0].ldterm.value)),i.max in e&&(t.max=parseInt(e[i.max][0].ldterm.value),isNaN(t.max)&&(t.max=-1)),i.annotation in e&&(t.annotations=e[i.annotation].map((e=>({type:"Annotation",predicate:e.nested[i.predicate][0].ldterm,object:e.nested[i.object][0].ldterm})))),i.semActs in e&&(t.semActs=e[i.semActs].map((e=>{const t={type:"SemAct",name:e.nested[i.name][0].ldterm};return i.code in e.nested&&(t.code=e.nested[i.code][0].ldterm.value),t}))),t}},simpleToShapeMap:function(e){return Object.keys(e).reduce(((t,n)=>(e[n].forEach((e=>{t.push({node:n,shape:e})})),t)),[])},absolutizeShapeMap:function(e,n){return e.map((e=>Object.assign(e,{node:t.resolveRelativeIRI(n,e.node),shape:t.resolveRelativeIRI(n,e.shape)})))},errsToSimple:function(t){const n=this;if("FailureList"===t.type)return t.errors.reduce(((e,t)=>e.concat(n.errsToSimple(t))),[]);if("Failure"===t.type)return["validating "+t.node+" as "+t.shape+":"].concat(function e(t){return t.reduce((function(t,n){const r=Object.keys(n);return t.concat(1===r.length&&"errors"===r[0]?e(n.errors):n)}),[])}(t.errors).reduce(((e,t)=>{const r=n.errsToSimple(t).map((e=>"  "+e));return e.length>0?e.concat(["  OR"]).concat(r):r.map((e=>"  "+e))}),[]));if("TypeMismatch"===t.type){const r=Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));return["validating "+h(t.triple.object)+":"].concat(r)}if("RestrictionError"===t.type){var s=t.errors.constructor===Array?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));return["validating restrictions on "+h(t.focus)+":"].concat(s)}if("ShapeAndFailure"===t.type)return Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));if("ShapeOrFailure"===t.type)return Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(" OR "+("string"==typeof t?[t]:n.errsToSimple(t)))),[]):" OR "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));if("ShapeNotFailure"===t.type)return["Node "+t.errors.node+" expected to NOT pass "+t.errors.shape];if("ExcessTripleViolation"===t.type)return["validating "+h(t.triple.object)+": exceeds cardinality"];if("ClosedShapeViolation"===t.type)return["Unexpected triple(s): {"].concat(t.unexpectedTriples.map((e=>"  "+e.subject+" "+e.predicate+" "+h(e.object)+" ."))).concat(["}"]);if("NodeConstraintViolation"===t.type){const e=r(95)();let n;return e._write(e._writeNodeConstraint(t.shapeExpr).join("")),e.end(((e,t)=>{n=t})),["NodeConstraintError: expected to match "+n]}if("MissingProperty"===t.type)return["Missing property: "+t.property];if("NegatedProperty"===t.type)return["Unexpected property: "+t.property];if("AbstractShapeFailure"===t.type)return["Abstract Shape: "+t.shape];if(Array.isArray(t))return t.reduce(((e,t)=>{const r=n.errsToSimple(t).map((e=>"  "+e));return e.length?e.concat(["AND"]).concat(r):r}),[]);if("SemActFailure"===t.type){const r=Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));return["rejected by semantic action:"].concat(r)}if("SemActViolation"===t.type)return[t.message];if("BooleanSemActFailure"===t.type)return["Failed evaluating "+t.code+" on context "+JSON.stringify(t.ctx)];throw Error('unknown shapeExpression type "'+t.type+'" in '+JSON.stringify(t))},resolveRelativeIRI:t.resolveRelativeIRI,resolvePrefixedIRI:function(e,t){const n=e.indexOf(":");if(-1===n)return null;const r=t[e.substr(0,n)];return void 0===r?null:r+e.substr(n+1)},parsePassedNode:function(e,n,r,s,i){if(void 0===e||0===e.length)return s&&s(n.base)?n.base:r?r():this.NotSupplied;if("_"===e[0]&&":"===e[1])return e;if('"'===e[0]){const r=e.match(/^"((?:[^"\\]|\\")*)"(?:@(.+)|\^\^(?:<(.*)>|([^:]*):(.*)))?$/);if(!r)throw Error("malformed literal: "+e);const s=r[1],i=r[2],a=r[3],o=r[4],u=r[5],c='"'+s+'"';if(void 0!==i)return c+"@"+i;if(void 0!==o){if(!(o in n.prefixes))throw Error("error parsing node "+e+' no prefix for "'+o+'"');return c+"^^"+n.prefixes[o]+u}return void 0!==a?c+"^^"+t.resolveRelativeIRI(n.base,a):c}if(!n)return s(e)?e:this.UnknownIRI;const a="<"===e[0]&&">"===e[e.length-1];a&&(e=e.substr(1,e.length-2));const o=t.resolveRelativeIRI(n.base||"",e);if(s(o))return o;if(!a){const t=this.resolvePrefixedIRI(e,n.prefixes);if(null!==t&&s(t))return t}return i?i(o):this.UnknownIRI},executeQueryPromise:function(e,t){const n=t+"?query="+encodeURIComponent(e);return fetch(n,{headers:{Accept:"application/sparql-results+json"}}).then((e=>e.json())).then((e=>this.parseSparqlJsonResults(e)))},executeQuery:function(e,t){const n=t+"?query="+encodeURIComponent(e),r=new XMLHttpRequest;r.open("GET",n,!1),r.setRequestHeader("Accept","application/sparql-results+json"),r.send();const s=JSON.parse(r.responseText);return this.parseSparqlJsonResults(s)},parseSparqlJsonResults:function(e){const t=e.head.vars;return e.results.bindings.map((e=>t.map((t=>{const n=e[t];switch(n.type){case"uri":return n.value;case"bnode":return"_:"+n.value;case"literal":return'"'+n.value.replace(/"/g,'\\""')+'"'+("xml:lang"in n?"@"+n["xml:lang"]:"")+("datatype"in n?"^^"+n.datatype:"");case"typed-literal":return'"'+n.value.replace(/"/g,'\\""')+'"^^'+n.datatype;default:throw"unknown XML results type: "+n.type}}))))},rdfjsDB:function(e,n){return{getNeighborhood:function(r,s){let i;n&&(i=new Date,n.start(!1,r,s));const a=e.getQuads(r,null,null,null).map(t.internalTriple);if(n){const e=new Date;n.end(a,e.valueOf()-i.valueOf()),i=e}n&&n.start(!0,r,s);const o=e.getQuads(null,null,r,null).map(t.internalTriple);return n&&n.end(o,(new Date).valueOf()-i.valueOf()),{outgoing:a,incoming:o}},getSubjects:function(){return e.getSubjects().map(t.internalTerm)},getPredicates:function(){return e.getPredicates().map(t.internalTerm)},getObjects:function(){return e.getObjects().map(t.internalTerm)},getQuads:function(){return e.getQuads.apply(e,arguments).map(t.internalTriple)},get size(){return e.size}}},makeTriplesDB:function(e){var t=[],n=[];return{getNeighborhood:function(e,r,s){return{outgoing:n,incoming:t}},getTriplesByIRI:function(e,r,s,i){return t.concat(n).filter((t=>!(e&&e!==t.subject||r&&r!==t.predicate||e&&e!==t.object)))},getSubjects:function(){return["!Triples DB can't index subjects"]},getPredicates:function(){return["!Triples DB can't index predicates"]},getObjects:function(){return["!Triples DB can't index objects"]},get size(){},addIncomingTriples:function(e){Array.prototype.push.apply(t,e)},addOutgoingTriples:function(e){Array.prototype.push.apply(n,e)}}},NotSupplied:"-- not supplied --",UnknownIRI:"-- not found --",unescapeText:function(e,t){const n=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g;try{return e=e.replace(n,(function(e,n,r,s){let i;if(n){if(i=parseInt(n,16),isNaN(i))throw new Error;return String.fromCharCode(i)}if(r){if(i=parseInt(r,16),isNaN(i))throw new Error;return i<65535?String.fromCharCode(i):String.fromCharCode(55296+((i-=65536)>>10),56320+(1023&i))}{const e=t[s];if(!e)throw new Error("no replacement found for '"+s+"'");return e}}))}catch(e){return console.warn(e),""}}};function h(e){if("object"!=typeof e)return e;const t='"'+e.value+'"';return"language"in e?t+"@"+e.language:"type"in e?t+"^^"+e.type:t}function d(e,t){for(let n in f)t?e.prototype[n]=m(f[n]):e[n]=f[n];return e}function m(e){return function(t){return e(this,t)}}return d(d)}();t.exports=s},457:(e,t,n)=>{const r=function(){const e={term:"START"},t=n(118);let r=n(806),s=n(443);const i=n(515);function a(e){return t.isIRI(e)?e:t.isLiteral(e)?t.getLiteralValue(e):e.substr(2)}const o="http://www.w3.org/2001/XMLSchema#",u=[o+"integer",o+"nonPositiveInteger",o+"negativeInteger",o+"long",o+"int",o+"short",o+"byte",o+"nonNegativeInteger",o+"unsignedLong",o+"unsignedInt",o+"unsignedShort",o+"unsignedByte",o+"positiveInteger"],c=[o+"decimal"].concat(u),l=[o+"float",o+"double"].concat(c),p={"http://www.w3.org/2001/XMLSchema#integer":function(e,t){return e.match(/^[+-]?[0-9]+$/)||t("illegal integer value '"+e+"'"),parseInt(e)},"http://www.w3.org/2001/XMLSchema#decimal":function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal decimal value '"+e+"'"),parseFloat(e)}},f=/^[+\-]?(?:[0-9]+(?:\.[0-9]*)?|\.[0-9]+)(?:[eE][+\-]?[0-9]+)?$/;p[o+"float"]=function(e,t){return"NaN"===e?NaN:"INF"===e?1/0:"-INF"===e?-1/0:(e.match(f)||t("illegal float value '"+e+"'"),parseFloat(e))},p[o+"double"]=function(e,t){return"NaN"===e?NaN:"INF"===e?1/0:"-INF"===e?-1/0:(e.match(f)||t("illegal double value '"+e+"'"),Number(e))};const h={length:function(e,t){return e.length===t},minlength:function(e,t){return e.length>=t},maxlength:function(e,t){return e.length<=t}},d={mininclusive:function(e,t){return e>=t},minexclusive:function(e,t){return e>t},maxinclusive:function(e,t){return e<=t},maxexclusive:function(e,t){return e<t}},m={totaldigits:function(e,t){const n=e.match(/[0-9]/g);return n&&n.length<=t},fractiondigits:function(e,t){const n=e.match(/^[+-]?[0-9]*\.?([0-9]*)$/);return n&&n[1].length<=t}};function y(e){if('"'!==e[0])return e;const n={value:t.getLiteralValue(e)},r=t.getLiteralType(e);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=t.getLiteralLanguage(e);return s&&(n.language=s),n}function x(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}function g(e){return{byPredicate:e.reduce((function(e,t){const n=t.predicate;return n in e||(e[n]=[]),e[n].push(t),e}),{}),candidates:E(e.length).map((function(){return[]})),misses:[]}}function _(e,n){const[r,s]=[e,n].map((e=>t.isBlank(e)?1:t.isLiteral(e)?2:3));return r===s?e.localeCompare(n):r-s}function E(e){return Array.from(Array(e))}function b(e,t,n){t in e||v("expected "+JSON.stringify(e)+" to have a '"+t+"' attribute."),arguments.length>2&&e[t]!==n&&v("expected "+t+" attribute '"+e[t]+"' to equal '"+n+"'.")}function S(){}function v(){const e=Array.prototype.join.call(arguments,""),t=new Error(e);throw Error.captureStackTrace(t,v),t}function A(e){return E(e).map((()=>[]))}return{construct:function c(f,O,w){if(!(this instanceof c))return new c(f,O,w);let T=f._index||r.index(f);this.type="ShExValidator",w=w||{},this.options=w,this.options.coverage=this.options.coverage||"exhaustive","noCache"in w&&w.noCache||(this.known={});const I=this;this.schema=f,this._expect=this.options.lax?S:b,this._optimize={},this.reset=function(){};const N=this.options.regexModule||n(863);function F(e,t,n,r,s){const i=g(t.slice(0,n)),a=g(t.slice(n));return e.reduce((function(e,n,r){n.inverse,n.inverse;const o=(n.inverse?a:i).byPredicate[n.predicate]||[],u=I._triplesMatchingShapeExpr(o,n,s);return u.hits.forEach((function(n){const s=t.indexOf(n.triple);e.constraintList[s].push(r),e.results[r][s]=n.sub})),u.misses.forEach((function(n){const s=t.indexOf(n.triple);e.misses[s]={constraintNo:r,errors:n.errors}})),e}),{misses:{},results:A(e.length),constraintList:A(t.length)})}function k(e,t,n){return e.slice().reduce((function(e,t,r){return"NO_TRIPLE_CONSTRAINT"!==t&&e[t].push({tNo:r,res:n.results[t][r]}),e}),E(t.length).map((()=>[])))}function L(e,t,n,r){if(!("extends"in e))return null;const i=[],a=[];for(let o=0;o<e.extends.length;++o){const u=e.extends[o],c=s.makeTriplesDB(null);n[o].forEach((e=>c.addOutgoingTriples([e])));const l=I.validate(t,u,r.tracker,r.seen,c);"errors"in l?a.push(l):i.push(l)}return a.length>0?{type:"ExtensionFailure",errors:a}:{type:"ExtensionResults",solutions:i}}this.indexTripleConstraints=function(e){const t=[];return e&&function e(n){return"string"==typeof n?e(T.tripleExprs[n]):"TripleConstraint"===n.type?(t.push(n),[t.length-1]):"OneOf"===n.type||"EachOf"===n.type?n.expressions.reduce((function(t,n){return t.concat(e(n))}),[]):v("unexpected expr type: "+n.type)}(e),t},this.emptyTracker=function(){const e=e=>e;return{recurse:e,known:e,enter:function(e,t){++this.depth},exit:function(e,t,n){--this.depth},depth:0}},this.validate=function(n,r,s,i,a){if("object"==typeof n&&"termType"in n&&(n=t.internalTerm(n)),"object"==typeof n){const e=n;if("api"===this.options.results)return e.map((e=>{let t=new Date;const n=this.validate(e.node,e.shape,r,s);return t=new Date-t,{node:e.node,shape:e.shape,status:"errors"in n?"nonconformant":"conformant",appinfo:n,elapsed:t}}));const t=e.reduce(((e,t)=>{const n=this.validate(t.node,t.shape,r,s,a);return"errors"in n?{passes:e.passes,failures:e.failures.concat(n)}:{passes:e.passes.concat(n),failures:e.failures}}),{passes:[],failures:[]});return t.failures.length>0?1!==t.failures.length?{type:"FailureList",errors:t.failures}:t.failures[0]:1!==t.passes.length?{type:"SolutionList",solutions:t.passes}:t.passes[0]}const o=void 0===s;s||(s=this.emptyTracker()),r&&r!==e||f.start||v("start production not defined");let u=null;if(r==e?u=f.start:"shapes"in this.schema&&0!==this.schema.shapes.length?r in T.shapeExprs?u=T.shapeExprs[r]:v("shape "+r+" not found in:\n"+Object.keys(T.shapeExprs||[]).map((e=>"  "+e)).join("\n")):v("shape "+r+" not found; no shapes in schema"),"string"!=typeof r)return this._validateShapeDecl(n,u,e,0,s,i);void 0===i&&(i={});const c=n+"@"+(r===e?"_: -start-":r);if(!a){if(c in i)return s.recurse({type:"Recursion",node:y(n),shape:r});if("known"in this&&c in this.known)return s.known(this.known[c]);i[c]={point:n,shape:r},s.enter(n,r)}const l=this._validateDescendants(n,r,0,s,i,a);return a||(s.exit(n,r,l),delete i[c],"known"in this&&(this.known[c]=l)),"startActs"in f&&o&&(l.startActs=f.startActs),l},this._validateDescendants=function(e,t,n,r,a,o,u){if(o)return this._validateShapeDecl(e,T.shapeExprs[t],t,0,r,a,o);let c=[t];c=c.concat(function(e){const t={},n=i.create();return function(e){const r=s.Visitor();let i,a;const o=r.visitShapeDecl;r.visitShapeDecl=function(e){return i=e.id,a=e.abstract,t[e.id]=e.abstract,o.call(r,e,e.id)};r.visitShape;return r.visitShape=function(e){return"extends"in e&&e.extends.forEach((e=>{const t=s.Visitor();t.visitShapeRef=function(e){return n.add(e,i),"null"},t.visitShapeExpr(e)})),"null"},r}().visitSchema(e),n.children}(this.schema)[t]||[]);for(let e=c.length-1;e>=0;--e)c.indexOf(c[e])<e&&c.splice(e,1);u||(c=c.filter((e=>!T.shapeExprs[e].abstract)));const l=c.reduce(((t,n)=>{const s=T.shapeExprs[n],i=this._validateShapeDecl(e,s,n,0,r,a,o);return"errors"in i?{passes:t.passes,failures:t.failures.concat(i)}:{passes:t.passes.concat(i),failures:t.failures}}),{passes:[],failures:[]});let p;return p=l.passes.length>0?1!==l.passes.length?{type:"SolutionList",solutions:l.passes}:l.passes[0]:l.failures.length>0?1!==l.failures.length?{type:"FailureList",errors:l.failures}:l.failures[0]:{type:"AbstractShapeFailure",shape:t,errors:t+" has no non-abstract children"},p},this._validateShapeDecl=function(e,t,n,r,s,i,a){const o="ShapeDecl"===t.type?t.shapeExpr:t;return this._validateShapeExpr(e,o,n,r,s,i,a)},this._validateShapeExpr=function(e,t,n,r,s,i,a){if(""===e)throw Error("validation needs a valid focus node");let o=null;if("string"==typeof t)o=this._validateDescendants(e,t,r,s,i,a,!0);else if("NodeConstraint"===t.type){const r=this._errorsMatchingNodeConstraint(e,t,null);o=r.errors&&r.errors.length?{type:"Failure",node:y(e),shape:n,errors:r.errors.map((function(e){return{type:"NodeConstraintViolation",shapeExpr:t,error:e}}))}:{type:"NodeConstraintTest",node:y(e),shape:n,shapeExpr:t}}else if("Shape"===t.type)o=this._validateShape(e,t,n,r,s,i,a);else if("ShapeExternal"===t.type)o=this.options.validateExtern(e,n,s,i);else if("ShapeOr"===t.type){const u=[];for(let o=0;o<t.shapeExprs.length;++o){const c=t.shapeExprs[o],l=this._validateShapeExpr(e,c,n,r,s,i,a);if(!("errors"in l))return{type:"ShapeOrResults",solution:l};u.push(l)}o={type:"ShapeOrFailure",errors:u}}else if("ShapeNot"===t.type){const u=this._validateShapeExpr(e,t.shapeExpr,n,r,s,i,a);o="errors"in u?{type:"ShapeNotResults",solution:u}:{type:"ShapeNotFailure",errors:u}}else{if("ShapeAnd"!==t.type)throw Error("expected one of Shape{Ref,And,Or} or NodeConstraint, got "+JSON.stringify(t));{const u=[],c=[];for(let o=0;o<t.shapeExprs.length;++o){const l=t.shapeExprs[o],p=this._validateShapeExpr(e,l,n,r,s,i,a);"errors"in p?c.push(p):u.push(p)}o=c.length>0?{type:"ShapeAndFailure",errors:c}:{type:"ShapeAndResults",solutions:u}}}if("string"!=typeof t&&"Shape"!==t.type&&!("errors"in o)&&"semActs"in t){const r=this.semActHandler.dispatchAll(t.semActs,Object.assign({node:e},o),o);if(r.length)return{type:"Failure",node:y(e),shape:n,errors:r}}return o},this._validateShape=function(e,t,n,r,i,a,o){const u={db:O,shapeLabel:n,depth:r,tracker:i,seen:a};let c=null;const l={};if("startActs"in f){const t=this.semActHandler.dispatchAll(f.startActs,null,l);if(t.length)return{type:"Failure",node:y(e),shape:n,errors:t}}const p=(o||O).getNeighborhood(e,n,t),h=p.outgoing.length,d=p.outgoing.sort(((e,t)=>e.predicate.localeCompare(t.predicate)||_(e.object,t.object))).concat(p.incoming.sort(((e,t)=>e.predicate.localeCompare(t.predicate)||_(e.object,t.object)))),m=this.indexTripleConstraints(t.expression),x=function(e){const t=[];"extends"in e&&e.extends.forEach(((e,r)=>{const s={},i={};n(e,s,i),[s,i].forEach((e=>{Object.keys(e).forEach((n=>{let s=e[n];t.push({tripleConstraint:s,extendsNo:r})}))}))}));return t;function n(e,t,r){const i=s.Visitor();let a=1,o=1;const u=i.visitOneOf;i.visitShapeRef=function(e){return i.visitShapeDecl(T.shapeExprs[e])},i.visitShape=function(e,s){return"extends"in e&&e.extends.forEach((e=>n(e,t,r))),"expression"in e&&i.visitExpression(e.expression),{type:"Shape"}},i.visitOneOf=function(e){const t=a,n=o;a=0,u.call(i,e),a=t,o=n},i.visitTripleConstraint=function(e){const n=e.inverse?t:r;let s="min"in e?e.min:1;s*=a;let i="max"in e?e.max:1;return i*=o,n[e.predicate]={type:"TripleConstraint",predicate:e.predicate,min:e.predicate in n?Math.max(n[e.predicate].min,s):s,max:e.predicate in n?Math.min(n[e.predicate].max,i):i,seen:e.predicate in n?n[e.predicate].seen+1:1,tcs:e.predicate in n?n[e.predicate].tcs.concat([e]):[e]},e},i.visitShapeExpr(e)}}(t),g=x.map((e=>e.tripleConstraint)).concat(m),b=F(g,d,h,e,u),{misses:S,extras:v}=function(e,t,n,r){const s=[],i=e.constraintList.reduce((function(i,a,o){return 0===a.length&&o<n&&o in e.misses&&(-1!==r.indexOf(t[o].predicate)?s.push(o):i.push({tripleNo:o,constraintNo:e.misses[o].constraintNo,errors:e.misses[o].errors})),i}),[]);return{misses:i,extras:s}}(b,d,h,t.extra||[]),A=function(e,t){const n=e.length,r=[];let s=null;function i(){s=[];for(let i=0;i<n;i++)r[i]=0,s[i]=e[i].length>0?e[i][0]:t}function a(){if(null!==s&&0===s.length)return!1;if(null===s)return i(),!0;let a=n-1;if(r[a]++,r[a]<e[a].length)return s[a]=e[a][r[a]],!0;for(;r[a]>=e[a].length;){if(0==a)return!1;r[a]=0,s[a]=e[a].length>0?e[a][0]:t,r[--a]++}return s[a]=e[a][r[a]],!0}return{next:a,do:function(e,t){return e.apply(t,s)},get:function(){return s}}}(b.constraintList,"NO_TRIPLE_CONSTRAINT"),w=[],I=N.compile(f,t,T);for(;A.next()&&null===c;){const r=[],s=[],i=E(d.length).map((function(){return 0})),a=A.get(),o=[],l=[],p=E((t.extends||[]).length).map((()=>[]));if(a.forEach(((e,t)=>{if("NO_TRIPLE_CONSTRAINT"!==e&&e<x.length){const n=x[e].extendsNo;p[n].push(d[t]),l[t]=e,o[t]="NO_TRIPLE_CONSTRAINT"}else l[t]="NO_EXTENDS",o[t]=e})),t.closed){const e=d.slice(0,h).filter(((e,t)=>"NO_TRIPLE_CONSTRAINT"===o[t]&&"NO_EXTENDS"===l[t]&&-1===v.indexOf(t)));e.length>0&&r.push({type:"ClosedShapeViolation",unexpectedTriples:e})}o.forEach((function(e,t){"NO_TRIPLE_CONSTRAINT"!==e&&(s.push(d[t]),++i[e])}));const f=k(o,g,b);let m=L(t,e,p,u);if(null===m||!("errors"in m)){const t=I.match(O,e,g,f,o,d,this.semActHandler,null);!("errors"in t)&&m?(m={type:"ExtendedResults",extensions:m},Object.keys(t).length>0&&(m.local=t)):m=t}"errors"in m&&[].push.apply(r,m.errors);const _={type:"ShapeTest",node:y(e),shape:n};if(0===r.length&&Object.keys(m).length>0&&(_.solution=m),"semActs"in t){const n=this.semActHandler.dispatchAll(t.semActs,Object.assign({node:e},m),_);n.length&&[].push.apply(r,n)}w.push(r),0===r.length&&(c=_)}const R=S.map((function(e){const t=d[e.tripleNo];return{type:"TypeMismatch",triple:{type:"TestedTriple",subject:t.subject,predicate:t.predicate,object:y(t.object)},constraint:g[e.constraintNo],errors:e.errors}})),j=w[w.length-1];let C=R.concat(1===j.length?j[0]:j);return C.length>0&&(c={type:"Failure",node:y(e),shape:n,errors:C}),function(e,t){"annotations"in e&&(t.annotations=e.annotations);return t}(t,c)},this._triplesMatchingShapeExpr=function(e,t,n){const r=this,s=[],i=[];return e.forEach((function(e){const a=t.inverse?e.subject:e.object;let o;const u=JSON.parse(JSON.stringify(r.semActHandler.results));(void 0===t.valueExpr?void 0:(o=r._errorsMatchingShapeExpr(a,t.valueExpr,n)).errors)?-1===i.indexOf(e)&&(r.semActHandler.results=JSON.parse(JSON.stringify(u)),s.push({triple:e,errors:o})):i.push({triple:e,sub:o})})),{hits:i,misses:s}},this._errorsMatchingShapeExpr=function(e,t,n,r){const s=this;if("string"==typeof t)return s.validate(e,t,n.tracker,n.seen,r);if("NodeConstraint"===t.type)return this._errorsMatchingNodeConstraint(e,t,null);if("Shape"===t.type)return s._validateShapeExpr(e,t,n.shapeLabel,n.depth,n.tracker,n.seen,r);if("ShapeOr"===t.type){const i=[];for(let a=0;a<t.shapeExprs.length;++a){const o=t.shapeExprs[a],u=s._errorsMatchingShapeExpr(e,o,n,r);if(!("errors"in u))return{type:"ShapeOrResults",solution:u};i.push(u)}return{type:"ShapeOrFailure",errors:i}}if("ShapeAnd"===t.type){const i=[];for(let a=0;a<t.shapeExprs.length;++a){const o=t.shapeExprs[a],u=s._errorsMatchingShapeExpr(e,o,n,r);if("errors"in u)return{type:"ShapeAndFailure",errors:[u]};i.push(u)}return{type:"ShapeAndResults",solutions:i}}if("ShapeNot"===t.type){const i=s._errorsMatchingShapeExpr(e,t.shapeExpr,n,r),a=Object.assign({type:null,focus:e},t);return i.errors&&i.errors.length?a.type="ShapeNotTest":(a.type="ShapeNotFailure",a.errors=["Error validating "+e+" as "+JSON.stringify(t)+": expected NOT to pass"]),a}throw Error("unknown value expression type '"+t.type+"'")},this._errorsMatchingNodeConstraint=function(e,n,r){const s=[],i=t.isLiteral(e)?t.getLiteralValue(e):t.isBlank(e)?e.substring(2):e,c=t.isLiteral(e)?t.getLiteralType(e):null,f=-1!==u.indexOf(c)?o+"integer":-1!==l.indexOf(c)?c:void 0;function g(){const t=Array.prototype.join.call(arguments,"");return s.push("Error validating "+e+" as "+JSON.stringify(n)+": "+t),!1}if("nodeKind"in n&&(-1===["iri","bnode","literal","nonliteral"].indexOf(n.nodeKind)&&g("unknown node kind '"+n.nodeKind+"'"),t.isBlank(e)?"iri"!==n.nodeKind&&"literal"!==n.nodeKind||g("blank node found when "+n.nodeKind+" expected"):t.isLiteral(e)?"literal"!==n.nodeKind&&g("literal found when "+n.nodeKind+" expected"):"bnode"!==n.nodeKind&&"literal"!==n.nodeKind||g("iri found when "+n.nodeKind+" expected")),n.datatype&&n.values&&g("found both datatype and values in "+tripleConstraint),n.datatype&&(t.isLiteral(e)?t.getLiteralType(e)!==n.datatype?g("mismatched datatype: "+t.getLiteralType(e)+" !== "+n.datatype):f?function(e,t,n){const r={integer:{min:-1/0,max:1/0},decimal:{min:-1/0,max:1/0},float:{min:-1/0,max:1/0},double:{min:-1/0,max:1/0},nonPositiveInteger:{min:-1/0,max:0},negativeInteger:{min:-1/0,max:-1},long:{min:-0x8000000000000000,max:0x8000000000000000},int:{min:-2147483648,max:2147483647},short:{min:-32768,max:32767},byte:{min:-128,max:127},nonNegativeInteger:{min:0,max:1/0},unsignedLong:{min:0,max:0x10000000000000000},unsignedInt:{min:0,max:4294967295},unsignedShort:{min:0,max:65535},unsignedByte:{min:0,max:255},positiveInteger:{min:1,max:1/0}}[t.substr(o.length)];if(!r)throw Error("unexpected datatype: "+t);e<r.min?n('"'+e+'"^^<'+t+"> is less than the min:",r.min):e>r.max&&n('"'+e+'"^^<'+t+"> is greater than the max:",r.min)}(p[f](i,g),n.datatype,g):n.datatype===o+"boolean"?"true"!==i&&"false"!==i&&"1"!==i&&"0"!==i&&g("illegal boolean value: "+i):n.datatype===o+"dateTime"&&(i.match(/^[+-]?\d{4}-[01]\d-[0-3]\dT[0-5]\d:[0-5]\d:[0-5]\d(\.\d+)?([+-][0-2]\d:[0-5]\d|Z)?$/)||g("illegal dateTime value: "+i)):g("mismatched datatype: "+e+" is not a literal with datatype "+n.datatype)),n.values&&(t.isLiteral(e)&&n.values.reduce(((t,n)=>{if(t)return!0;const r=y(e);return"Language"===n.type?n.languageTag===r.language:"object"==typeof n&&"value"in n&&(n.value===r.value&&n.type===r.type&&n.language===r.language)}),!1)||-1!==n.values.indexOf(e)||n.values.some((function(n){if("object"==typeof n&&!("value"in n)){"type"in n||v("expected "+JSON.stringify(n)+" to have a 'type' attribute.");const i=["Language","IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];function r(e,r,s){return t.isLiteral(e)?-1!==["LiteralStem","LiteralStemRange"].indexOf(n.type)?s(t.getLiteralValue(e),r):-1!==["LanguageStem","LanguageStemRange"].indexOf(n.type)?s(t.getLiteralLanguage(e)||null,r):g("literal "+e+" not comparable with non-literal "+r):-1===["IriStem","IriStemRange"].indexOf(n.type)?g("nonliteral "+e+" not comparable with literal "+JSON.stringify(r)):s(e,r)}function s(e,t){return r(e,t,((e,t)=>"LanguageStem"===n.type||"LanguageStemRange"===n.type?null!==e&&(e===t||""===t||"-"===e[t.length]):e.startsWith(t)))}if(-1===i.indexOf(n.type)&&v("expected type attribute '"+n.type+"' to be in '"+i+"'."),x(n.stem)){if(!s(e,n.stem))return!1}else b(n.stem,"type","Wildcard");return!n.exclusions||!n.exclusions.some((function(t){if(x(t))return r(e,t,((e,t)=>e===t));{"type"in t||v("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const n=["IriStem","LiteralStem","LanguageStem"];return-1===n.indexOf(t.type)&&v("expected type attribute '"+t.type+"' to be in '"+n+"'."),s(e,t.stem)}}))}}))||g("value "+e+" not found in set "+JSON.stringify(n.values))),"pattern"in n){const t="flags"in n?new RegExp(n.pattern,n.flags):new RegExp(n.pattern);a(e).match(t)||g("value "+a(e)+" did not match pattern "+n.pattern)}Object.keys(h).forEach((function(t){t in n&&!h[t](i,n[t])&&g("facet violation: expected "+t+" of "+n[t]+" but got "+e)})),Object.keys(d).forEach((function(t){t in n&&(f?d[t](p[f](i,g),n[t])||g("facet violation: expected "+t+" of "+n[t]+" but got "+e):g("facet violation: numeric facet "+t+" can't apply to "+e))})),Object.keys(m).forEach((function(t){t in n&&(f===o+"integer"||f===o+"decimal"?m[t](""+p[f](i,g),n[t])||g("facet violation: expected "+t+" of "+n[t]+" but got "+e):g("facet violation: numeric facet "+t+" can't apply to "+e))}));const _={type:null,focus:e,shapeExpr:n};return s.length?(_.type="NodeConstraintViolation",_.errors=s):_.type="NodeConstraintTest",_},this.semActHandler={handlers:{},results:{},register:function(e,t){this.handlers[e]=t},dispatchAll:function(e,t,n){const r=this;return e.reduce((function(e,s){if(0===e.length&&s.name in r.handlers){const i="code"in s?s.code:I.options.semActs[s.name],a="extensions"in n&&s.name in n.extensions,o=a?n.extensions[s.name]:{},u=r.handlers[s.name].dispatch(i,t,o);if("boolean"==typeof u)u||e.push({type:"SemActFailure",errors:[{type:"BooleanSemActFailure",code:i,ctx:t}]});else{if("object"!=typeof u||!Array.isArray(u))throw Error("unsupported response from semantic action handler: "+JSON.stringify(u));u.length>0&&e.push({type:"SemActFailure",errors:u})}return!a&&Object.keys(o).length>0&&("extensions"in n||(n.extensions={}),n.extensions[s.name]=o),e}return e}),[])}}},start:e,options:{coverage:{firstError:"fail on first error (usually used with eval-simple-1err)",exhaustive:"find as many errors as possible (usually used with eval-threaded-nerr)"}}}}();e.exports=r},806:e=>{function t(){function e(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}function t(e){return"string"==typeof e}const n={runtimeError:function(e){throw e},visitSchema:function(e){const t={type:"Schema"};return this._expect(e,"type","Schema"),this._maybeSet(e,t,"Schema",["@context","prefixes","base","imports","startActs","start","shapes"],["_base","_prefixes","_index","_sourceMap"]),t},visitPrefixes:function(e){return void 0===e?void 0:function(e,t){const n={};return Object.keys(e).forEach((function(r){n[r]=t(e[r])})),n}(e,(function(e){return e}))},visitIRI:function(e){return e},visitImports:function(e){const t=this;return e.map((function(e){return t.visitIRI(e)}))},visitStartActs:function(e){const t=this;return void 0===e?void 0:e.map((function(e){return t.visitSemAct(e)}))},visitSemActs:function(e){const t=this;if(void 0===e)return;const n=[];return Object.keys(e).forEach((function(r){n.push(t.visitSemAct(e[r],r))})),n},visitSemAct:function(e,t){const n={type:"SemAct"};return this._expect(e,"type","SemAct"),this._maybeSet(e,n,"SemAct",["name","code"]),n},visitShapes:function(e){const t=this;if(void 0!==e)return e.map((e=>t.visitShapeDecl(e)))},visitProductions999:function(e){const t=this;if(void 0===e)return;const n={};return Object.keys(e).forEach((function(r){n[r]=t.visitExpression(e[r],r)})),n},visitShapeDecl:function(e,t){return"ShapeDecl"===e.type?this._maybeSet(e,{type:"ShapeDecl"},"ShapeDecl",["id","abstract","restricts","shapeExpr"]):this.visitShapeExpr(e,t)},visitShapeExpr:function(e,n){if(t(e))return this.visitShapeRef(e);const r="Shape"===e.type?this.visitShape(e,n):"NodeConstraint"===e.type?this.visitNodeConstraint(e,n):"ShapeAnd"===e.type?this.visitShapeAnd(e,n):"ShapeOr"===e.type?this.visitShapeOr(e,n):"ShapeNot"===e.type?this.visitShapeNot(e,n):"ShapeExternal"===e.type?this.visitShapeExternal(e):null;if(null===r)throw Error("unexpected shapeExpr type: "+e.type);return r},_visitShapeGroup:function(e,t){this._testUnknownAttributes(e,["id","shapeExprs"],e.type,this.visitShapeNot);const n=this,r={type:e.type};return"id"in e&&(r.id=e.id),r.shapeExprs=e.shapeExprs.map((function(e){return n.visitShapeExpr(e,t)})),r},visitShapeNot:function(e,t){this._testUnknownAttributes(e,["id","shapeExpr"],"ShapeNot",this.visitShapeNot);const n={type:e.type};return"id"in e&&(n.id=e.id),n.shapeExpr=this.visitShapeExpr(e.shapeExpr,t),n},visitShape:function(e,t){const n={type:"Shape"};return this._expect(e,"type","Shape"),this._maybeSet(e,n,"Shape",["id","abstract","extends","closed","expression","extra","semActs","annotations"]),n},_visitShapeExprList:function(e){const t=this;return e.map((function(e){return t.visitShapeExpr(e,void 0)}))},visitNodeConstraint:function(e,t){const n={type:"NodeConstraint"};return this._expect(e,"type","NodeConstraint"),this._maybeSet(e,n,"NodeConstraint",["id","nodeKind","datatype","pattern","flags","length","reference","minlength","maxlength","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits","values","annotations","semActs"]),n},visitShapeRef:function(e){if("string"!=typeof e){let t=Exception("visitShapeRef expected a string, not "+JSON.stringify(e));throw console.warn(t),t}return e},visitShapeExternal:function(e){return this._testUnknownAttributes(e,["id"],"ShapeExternal",this.visitShapeNot),Object.assign("id"in e?{id:e.id}:{},{type:"ShapeExternal"})},_visitGroup:function(e,t){const n=this,r=Object.assign("id"in e?{id:null}:{},{type:e.type});return r.expressions=e.expressions.map((function(e){return n.visitExpression(e)})),this._maybeSet(e,r,"expr",["id","min","max","annotations","semActs"],["expressions"])},visitTripleConstraint:function(e){return this._maybeSet(e,Object.assign("id"in e?{id:null}:{},{type:"TripleConstraint"}),"TripleConstraint",["id","inverse","predicate","valueExpr","min","max","annotations","semActs"])},visitExpression:function(e){if("string"==typeof e)return this.visitInclusion(e);const t="TripleConstraint"===e.type?this.visitTripleConstraint(e):"OneOf"===e.type?this.visitOneOf(e):"EachOf"===e.type?this.visitEachOf(e):null;if(null===t)throw Error("unexpected expression type: "+e.type);return t},visitValues:function(t){const n=this;return t.map((function(t){return e(t)||"Language"===t.type?t:n.visitStemRange(t)}))},visitStemRange:function(t){const n=this;"type"in t||n.runtimeError(Error("expected "+JSON.stringify(t)+" to have a 'type' attribute."));const r=["IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];let s;return-1===r.indexOf(t.type)&&n.runtimeError(Error("expected type attribute '"+t.type+"' to be in '"+r+"'.")),e(t)?(this._expect(t.stem,"type","Wildcard"),s={type:t.type,stem:{type:"Wildcard"}}):s={type:t.type,stem:t.stem},t.exclusions&&(s.exclusions=t.exclusions.map((function(e){return n.visitExclusion(e)}))),s},visitExclusion:function(t){if(e(t))return t;{"type"in t||_Visitor.runtimeError(Error("expected "+JSON.stringify(t)+" to have a 'type' attribute."));const e=["IriStem","LiteralStem","LanguageStem"];return-1===e.indexOf(t.type)&&_Visitor.runtimeError(Error("expected type attribute '"+t.type+"' to be in '"+e+"'.")),{type:t.type,stem:t.stem}}},visitInclusion:function(e){if("string"!=typeof e){let t=Exception("visitInclusion expected a string, not "+JSON.stringify(e));throw console.warn(t),t}return e},_maybeSet:function(e,t,n,r,s){const i=this;return this._testUnknownAttributes(e,s?r.concat(s):r,n,this._maybeSet),r.forEach((function(n){const r="visit"+n.charAt(0).toUpperCase()+n.slice(1);if(n in e){const s=i[r];if("function"!=typeof s)throw Error(r+" not found in Visitor");const a=s.call(i,e[n]);void 0!==a&&(t[n]=a)}})),t},_visitValue:function(e){return e},_visitList:function(e){return e.slice()},_testUnknownAttributes:function(e,t,n,r){const s=Object.keys(e).reduce((function(e,n){return"type"!==n&&-1===t.indexOf(n)?e.concat(n):e}),[]);if(s.length>0){const t=Error("unknown propert"+(s.length>1?"ies":"y")+": "+s.map((function(e){return'"'+e+'"'})).join(",")+" in "+n+": "+JSON.stringify(e));throw Error.captureStackTrace(t,r),t}},_expect:function(e,t,n){t in e||this.runtimeError(Error("expected "+JSON.stringify(e)+" to have a ."+t)),arguments.length>2&&e[t]!==n&&this.runtimeError(Error("expected "+e[t]+" to equal "+n))}};return n.visitBase=n.visitStart=n.visitClosed=n["visit@context"]=n._visitValue,n.visitRestricts=n.visitExtends=n._visitShapeExprList,n.visitExtra=n.visitAnnotations=n._visitList,n.visitAbstract=n.visitInverse=n.visitPredicate=n._visitValue,n.visitName=n.visitId=n.visitCode=n.visitMin=n.visitMax=n._visitValue,n.visitType=n.visitNodeKind=n.visitDatatype=n.visitPattern=n.visitFlags=n.visitLength=n.visitMinlength=n.visitMaxlength=n.visitMininclusive=n.visitMinexclusive=n.visitMaxinclusive=n.visitMaxexclusive=n.visitTotaldigits=n.visitFractiondigits=n._visitValue,n.visitOneOf=n.visitEachOf=n._visitGroup,n.visitShapeAnd=n.visitShapeOr=n._visitShapeGroup,n.visitInclude=n._visitValue,n.visitValueExpr=n.visitShapeExpr,n}t.index=function(e){let n={shapeExprs:{},tripleExprs:{}},r=t(),s=r.visitExpression;r.visitExpression=function(e){return"object"==typeof e&&"id"in e&&(n.tripleExprs[e.id]=e),s.call(r,e)};let i=r.visitShapeExpr;r.visitShapeExpr=r.visitValueExpr=function(e,t){return"object"==typeof e&&"id"in e&&(n.shapeExprs[e.id]=e),i.call(r,e,t)};let a=r.visitShapeDecl;return r.visitShapeDecl=r.visitValueExpr=function(e,t){return"object"==typeof e&&"id"in e&&(n.shapeExprs[e.id]=e),a.call(r,e,t)},r.visitSchema(e),n},e.exports=t},95:(e,t,n)=>{const r=function(){const e=n(755),t=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,r=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,s={"\\":"\\\\",'"':'\\"',"/":"\\/","\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"},i={iri:"IRI",bnode:"BNODE",literal:"LITERAL",nonliteral:"NONLITERAL"};function a(e,t){if(!(this instanceof a))return new a(e,t);if(e&&"function"!=typeof e.write&&(t=e,e=null),t=t||{},e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{let e="";this._outputStream={write:function(t,n,r){e+=t,r&&r()},end:function(t){t&&t(null,e)}},this._endStream=!0}this._prefixIRIs=Object.create(null),this._baseIRI=t.base||null,t.prefixes&&this.addPrefixes(t.prefixes),this._error=t.error||c,this.forceParens=!t.simplifyParentheses,this._expect=t.lax?p:l}function o(e){let t=s[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function u(e){return e.replace(/\\/g,"\\\\").replace(/%/g,"\\%")}function c(e,t){"function"!=typeof e&&(t=e,e=c);const n=new Error(t);throw Error.captureStackTrace(n,e),n}function l(e,t,n){t in e||this._error(l,"expected "+e+" to have a ."+t),arguments.length>2&&e[t]!==n&&this._error(l,"expected "+e[e]+" to equal ."+n)}function p(){}return a.prototype={_write:function(e,t){this._outputStream.write(e,"utf8",t)},_writeSchema:function(e,t){const n=this;this._expect(e,"type","Schema"),n.addPrefixes(e._prefixes),e._base&&(n._baseIRI=e._base),n._baseIRI&&n._write("BASE <"+n._baseIRI+">\n"),e.imports&&e.imports.forEach((function(e){n._write("IMPORT "+n._encodeIriOrBlankNode(e)+"\n")})),e.startActs&&e.startActs.forEach((function(e){n._expect(e,"type","SemAct"),n._write(" %"+n._encodePredicate(e.name)+("code"in e?"{"+u(e.code)+"%}":"%"))})),e.start&&n._write("start = "+n._writeShapeExpr(e.start,t,!0,0).join("")+"\n"),"shapes"in e&&e.shapes.forEach((function(e){let r=e.id,s="";"ShapeDecl"===e.type&&(e.abstract&&(s="abstract "),e=e.shapeExpr),n._write(s+n._encodeShapeName(r,!1)+" "+n._writeShapeExpr(e,t,!0,0).join("")+"\n",t)}))},_writeShapeExpr:function(e,t,n,r){const s=this,i=[];if("string"==typeof e)i.push("@",s._encodeShapeName(e));else if("ShapeDecl"===e.type)i.push(s._writeShapeExpr(e.shapeExpr,t,!1,3));else if("ShapeExternal"===e.type)i.push("EXTERNAL");else if("ShapeAnd"===e.type){r>=3&&i.push("(");let n=!1;e.shapeExprs.forEach((function(r,a){if(a>0){function o(t){let n=e.shapeExprs[t];return!("NodeConstraint"!==n.type||"nodeKind"in n&&"literal"===n.nodeKind||"datatype"in n||"values"in n)}let t=!n&&(o(a-1)&&function(t){let n=e.shapeExprs[t];return"Shape"===n.type||"ShapeRef"===n.type}(a)||(u=a-1,"Shape"===e.shapeExprs[u].type&&o(a)));i.push(" AND "),n=t}var u;[].push.apply(i,s._writeShapeExpr(r,t,!1,3))})),r>=3&&i.push(")")}else if("ShapeOr"===e.type)r>=2&&i.push("("),e.shapeExprs.forEach((function(e,r){r>0&&i.push(" OR "),[].push.apply(i,s._writeShapeExpr(e,t,n,2))})),r>=2&&i.push(")");else if("ShapeNot"===e.type)r>=4&&i.push("("),i.push("NOT "),[].push.apply(i,s._writeShapeExpr(e.shapeExpr,t,n,4)),r>=4&&i.push(")");else if("Shape"===e.type)[].push.apply(i,s._writeShape(e,t,n));else{if("NodeConstraint"!==e.type)throw Error("expected Shape{,And,Or,Ref} or NodeConstraint in "+JSON.stringify(e));[].push.apply(i,s._writeNodeConstraint(e,t,n))}return i},_writeShape:function(e,t,n){const r=this;try{const n=[];this._expect(e,"type","Shape"),e.closed&&n.push("CLOSED "),[{keyword:"extends",marker:"EXTENDS "}].forEach((s=>{e[s.keyword]&&e[s.keyword].length>0&&(e[s.keyword].forEach((function(e,i){i&&n.push(" "),n.push(s.marker),[].push.apply(n,r._writeShapeExpr(e,t,!0,0))})),n.push(" "))})),e.extra&&e.extra.length>0&&(n.push("EXTRA "),e.extra.forEach((function(e,t){n.push(r._encodeShapeName(e,!1)+" ")})),n.push(" "));function s(e,t){0===e&&1===t?n.push("?"):0===e&&-1===t?n.push("*"):void 0===e&&void 0===t||(1===e&&-1===t?n.push("+"):n.push("{",e,",",-1===t?"*":t,"}"))}return n.push("{\n"),e.expression&&function e(i,a,o){function c(e){e&&e.forEach((function(e){r._expect(e,"type","SemAct"),n.push("\n"+a+"   %"),n.push(r._encodeValue(e.name)),"code"in e?n.push("{"+u(e.code)+"%}"):n.push("%")}))}function l(t,r,s,i){const u=s<o||i;u&&n.push("("),t.forEach((function(i,o){e(i,a+"  ",s),o<t.length-1&&n.push(r)})),u&&n.push(")")}if("string"==typeof i)n.push("&"),n.push(r._encodeShapeName(i,!1));else if("id"in i&&(n.push("$"),n.push(r._encodeIriOrBlankNode(i.id,!0))),"TripleConstraint"===i.type)i.inverse&&n.push("^"),i.negated&&n.push("!"),n.push(a,r._encodePredicate(i.predicate)," "),"valueExpr"in i?[].push.apply(n,r._writeShapeExpr(i.valueExpr,t,!0,0)):n.push(". "),s(i.min,i.max),r._annotations(n,i.annotations,a),c(i.semActs);else if("OneOf"===i.type){const e="id"in i||"min"in i||"max"in i||"annotations"in i||"semActs"in i;l(i.expressions,"\n"+a+"| ",1,e||r.forceParens),s(i.min,i.max),r._annotations(n,i.annotations,a),c(i.semActs)}else{if("EachOf"!==i.type)throw Error("unexpected expr type: "+i.type);{const e="id"in i||"min"in i||"max"in i||"annotations"in i||"semActs"in i;l(i.expressions,";\n"+a,2,e||r.forceParens),s(i.min,i.max),r._annotations(n,i.annotations,a),c(i.semActs)}}}(e.expression,"  ",0),n.push("\n}"),(i=e.semActs)&&i.forEach((function(e){r._expect(e,"type","SemAct"),n.push(" %",r._encodePredicate(e.name),"code"in e?"{"+u(e.code)+"%}":"%")})),r._annotations(n,e.annotations,"  "),n}catch(e){t&&t(e)}var i},_writeNodeConstraint:function(e,t){const n=this;try{n._expect(e,"type","NodeConstraint");const r=[];return e.nodeKind in i?r.push(i[e.nodeKind]," "):void 0!==e.nodeKind&&n._error("unexpected nodeKind: "+e.nodeKind),this._fillNodeConstraint(r,e,t),this._annotations(r,e.annotations,"  "),r}catch(e){t&&t(e)}},_annotations:function(e,t,n){const r=this;t&&t.forEach((function(t){r._expect(t,"type","Annotation"),e.push("//\n"+n+"   "),e.push(r._encodeValue(t.predicate)),e.push(" "),e.push(r._encodeValue(t.object))}))},_fillNodeConstraint:function(e,t,n){const s=this;if(t.datatype&&t.values&&s._error("found both datatype and values in "+expr),t.datatype&&e.push(s._encodeShapeName(t.datatype)),t.values&&(e.push("["),t.values.forEach((function(t,n){if(n>0&&e.push(" "),i(t))e.push(s._encodeValue(t));else{"type"in t||runtimeError("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const n=["Language","IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];function a(e,t){return-1!==["LanguageStem","LanguageStemRange"].indexOf(e.type)?"@"+t:-1!==["LiteralStem","LiteralStemRange"].indexOf(e.type)?'"'+t.replace(r,t)+'"':s._encodeValue(t)}-1===n.indexOf(t.type)&&runtimeError("expected type attribute '"+t.type+"' to be in '"+n+"'."),"Language"===t.type?e.push("@"+t.languageTag):i(t.stem)?e.push(a(t,t.stem)+"~"):(l(t.stem,"type","Wildcard"),e.push(".")),t.exclusions&&t.exclusions.forEach((function(n){if(e.push(" - "),i(n))e.push(a(t,n));else{"type"in n||runtimeError("expected "+JSON.stringify(n)+" to have a 'type' attribute.");const r=["IriStem","LiteralStem","LanguageStem"];-1===r.indexOf(n.type)&&runtimeError("expected type attribute '"+n.type+"' to be in '"+r+"'."),e.push(a(t,n.stem)+"~")}}))}})),e.push("]")),"pattern"in t){const n=t.pattern.replace(/\//g,"\\/"),r="flags"in t?t.flags:"";e.push("/"+n+"/"+r+" ")}return["length","minlength","maxlength","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits"].forEach((function(n){t[n]&&e.push(" ",n," ",t[n])})),e;function i(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}},_encodeIriOrBlankNode:function(e,n){if(n=n?" ":"","_"===e[0]&&":"===e[1])return e;t.test(e)&&(e=e.replace(r,o));const s=this._prefixRegex.exec(e);return s?(s[1]?this._prefixIRIs[s[1]]+s[2]:e)+n:this._relateUrl(e)},_relateUrl:function(t){const n=this._baseIRI;try{n&&new URL(n).host===new URL(t).host&&(t=e.relate(n,t,{output:e.ROOT_PATH_RELATIVE}))}catch(e){}return"<"+t+">"},_encodeLiteral:function(e,n,s){return t.test(e)&&(e=e.replace(r,o)),s?'"'+e+'"@'+s:n?"http://www.w3.org/2001/XMLSchema#integer"===n&&e.match(/^[+-]?[0-9]+$/)||"http://www.w3.org/2001/XMLSchema#decimal"===n&&e.match(/^[+-]?[0-9]*\.[0-9]+$/)||"http://www.w3.org/2001/XMLSchema#double"===n&&e.match(/^[+-]?([0-9]+\.[0-9]*[eE][+-]?[0-9]+|\.?[0-9]+[eE][+-]?[0-9]+)$/)?e:'"'+e+'"^^'+this._encodeIriOrBlankNode(n):'"'+e+'"'},_encodeShapeName:function(e,t){if('"'===e[0])throw new Error("A literal as subject is not allowed: "+e);return this._encodeIriOrBlankNode(e,t)},_encodePredicate:function(e){if('"'===e[0])throw new Error("A literal as predicate is not allowed: "+e);return"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"===e?"a":this._encodeIriOrBlankNode(e)},_encodeValue:function(e){return"object"!=typeof e?this._encodeIriOrBlankNode(e):this._encodeLiteral(e.value,e.type,e.language)},_blockedWrite:function(){throw new Error("Cannot write because the writer has been closed.")},writeSchema:function(e,t){this._writeSchema(e,t),this.end(t)},addShape:function(e,t,n){this._write(_ShExWriter._encodeShapeName(t,!1)+" "+_ShExWriter._writeShapeExpr(e,n,!0,0).join(""),n)},addShapes:function(e){for(let t=0;t<e.length;t++)this.addShape(e[t])},addPrefix:function(e,t,n){const r={};r[e]=t,this.addPrefixes(r,n)},addPrefixes:function(e,t){const n=this._prefixIRIs;let r=!1;for(let t in e){const s=e[t];n[s]!==(t+=":")&&(r=!0,n[s]=t,this._write("PREFIX "+t+" <"+s+">\n"))}if(r){let e="",t="";for(let r in n)e+=e?"|"+r:r,t+=(t?"|":"")+n[r];e=e.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&"),this._prefixRegex=new RegExp("^(?:"+t+")[^/]*$|^("+e+")([a-zA-Z][\\-_a-zA-Z0-9]*)$")}this._write(r?"\n":"",t)},_prefixRegex:/$0^/,end:function(e){this._write=this._blockedWrite;let t=e&&function(n,r){t=null,e(n,r)};if(this._endStream)try{return this._outputStream.end(t)}catch(e){}t&&t()}},a}();e.exports=r}},n={};function r(e){var s=n[e];if(void 0!==s)return s.exports;var i=n[e]={id:e,loaded:!1,exports:{}};return t[e].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);r(709)})();