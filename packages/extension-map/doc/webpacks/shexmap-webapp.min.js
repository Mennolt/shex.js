/*! For license information please see shexmap-webapp.min.js.LICENSE.txt */
(()=>{var t={752:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JisonLexer=void 0;var n=function(){function e(e){void 0===e&&(e={}),this.yy=e,this.EOF=1,this.options={},this.yyleng=0,this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0}}return e.prototype.parseError=function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},e.prototype.setInput=function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},e.prototype.input=function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},e.prototype.unput=function(e){var t=e.length,n=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var s=this.yylloc.range,i={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-t};return this.yylloc=i,this.options.ranges&&(this.yylloc.range=[s[0],s[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},e.prototype.more=function(){return this._more=!0,this},e.prototype.reject=function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},e.prototype.less=function(e){this.unput(this.match.slice(e))},e.prototype.pastInput=function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},e.prototype.upcomingInput=function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},e.prototype.showPosition=function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},e.prototype.test_match=function(e,t){var n,r,s;if(this.options.backtrack_lexer&&(s={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.yylloc.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(s.yylloc.range=this.yylloc.range.slice(0))),(r=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],n=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),n)return n;if(this._backtrack){for(var i in s)this[i]=s[i];return!1}return!1},e.prototype.next=function(){if(this.done)return this.EOF;this._input||(this.done=!0);var e,t,n,r=null;this._more||(this.yytext="",this.match="");for(var s=this._currentRules(),i=0;i<s.length;i++)if((t=this._input.match(this.rules[s[i]]))&&(!r||t[0].length>r[0].length)){if(r=t,n=i,this.options.backtrack_lexer){if(!1!==(e=this.test_match(t,s[i])))return e;if(this._backtrack){r=null;continue}return!1}if(!this.options.flex)break}return r?!1!==(e=this.test_match(r,s[n]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},e.prototype.lex=function(){var e=this.next();return e||this.lex()},e.prototype.begin=function(e){this.conditionStack.push(e)},e.prototype.popState=function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},e.prototype._currentRules=function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},e.prototype.topState=function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},e.prototype.pushState=function(e){this.begin(e)},e.prototype.stateStackSize=function(){return this.conditionStack.length},e}();t.JisonLexer=n},41:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.o=t.JisonParser=void 0;var n=function(){function e(e,t){void 0===e&&(e={}),this.yy=e,this.lexer=t}return e.prototype.trace=function(e){},e.prototype.parseError=function(e,t){if(!t.recoverable){var n=new Error(e);throw n.hash=t,n}this.trace(e)},e.prototype.parse=function(e){var t=this,n=[0],r=[null],s=[],i=this.table,a="",o=0,u=0,c=0,l=2,f=1,p=s.slice.call(arguments,1),h=Object.create(this.lexer),d={},m={yy:d};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(m.yy[y]=this.yy[y]);h.setInput(e,m.yy),m.yy.lexer=h,m.yy.parser=this,void 0===h.yylloc&&(h.yylloc={});var x=h.yylloc;s.push(x);var _=h.options&&h.options.ranges;function g(e){n.length=n.length-2*e,r.length=r.length-e,s.length=s.length-e}"function"==typeof m.yy.parseError&&(this.parseError=m.yy.parseError);for(var E,b,v,A,S,O,w,T,I,F=function(){var e;return"number"!=typeof(e=h.lex()||f)&&(e=t.symbols_[e]||e),e},N={};;){if(v=n[n.length-1],this.defaultActions[v]?A=this.defaultActions[v]:(null==E&&(E=F()),A=i[v]&&i[v][E]),void 0===A||!A.length||!A[0]){var k=null,L="";if(c)b!==f&&(k=j(v));else{for(var R in k=j(v),I=[],i[v])O=Number(R),this.terminals_[O]&&O>l&&I.push("'"+this.terminals_[O]+"'");L=h.showPosition?"Parse error on line "+(o+1)+":\n"+h.showPosition()+"\nExpecting "+I.join(", ")+", got '"+(this.terminals_[E]||E)+"'":"Parse error on line "+(o+1)+": Unexpected "+(E==f?"end of input":"'"+(this.terminals_[E]||E)+"'"),this.parseError(L,{text:h.match,token:this.terminals_[E]||E,line:h.yylineno,loc:h.yylloc,expected:I,recoverable:null!==k})}if(3==c){if(E===f||b===f)throw new Error(L||"Parsing halted while starting to recover from another error.");u=h.yyleng,a=h.yytext,o=h.yylineno,x=h.yylloc,E=F()}if(null===k)throw new Error(L||"Parsing halted. No suitable error recovery rule available.");g(k||0),b=E==l?null:E,E=l,v=n[n.length-1],A=i[v]&&i[v][l],c=3}if(A[0]instanceof Array&&A.length>1)throw new Error("Parse Error: multiple actions possible at state: "+v+", token: "+E);switch(A[0]){case 1:n.push(E),r.push(h.yytext),s.push(h.yylloc),n.push(A[1]),E=null,b?(E=b,b=null):(u=h.yyleng,a=h.yytext,o=h.yylineno,x=h.yylloc,c>0&&c--);break;case 2:if(w=this.productions_[A[1]][1],N.$=r[r.length-w],N._$={first_line:s[s.length-(w||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(w||1)].first_column,last_column:s[s.length-1].last_column},_&&(N._$.range=[s[s.length-(w||1)].range[0],s[s.length-1].range[1]]),void 0!==(S=this.performAction.apply(N,[a,u,o,m.yy,A[1],r,s].concat(p))))return S;w&&(n=n.slice(0,-1*w*2),r=r.slice(0,-1*w),s=s.slice(0,-1*w)),n.push(this.productions_[A[1]][0]),r.push(N.$),s.push(N._$),T=i[n[n.length-2]][n[n.length-1]],n.push(T);break;case 3:return!0}}return!0;function j(e){for(var t=n.length-1,r=0;;){if(l.toString()in i[e])return r;if(0===e||t<2)return null;e=n[t-=2],++r}}},e}();t.JisonParser=n,t.o=function(e,t,n){var r=e.length;for(n=n||{};r--;n[e[r]]=t);return n}},515:e=>{var t={create:function(){let e={},t={},n={},r={};return{add:function(s,i){if(s in n&&-1!==n[s].indexOf(i))return;let a=s in r?c(s):e[s]=c(s),o=c(i);function u(e,t,n,r){e[r]=e[r].filter((t=>-1===e[n].indexOf(t))).concat(-1===e[n].indexOf(n)?[n]:[],e[n]),e[n].forEach((e=>t[e]=t[e].filter((e=>e!==r&&-1===t[r].indexOf(e))).concat(-1===t[r].indexOf(r)?[r]:[],t[r])))}function c(e){return e in r||(t[e]=[],n[e]=[],r[e]={}),r[e]}a[i]=o,delete e[i],u(n,t,i,s),u(t,n,s,i)},roots:e,parents:t,children:n}},depthFirst:function e(t,n,r){return Object.keys(t).reduce(((s,i)=>s.concat(e(t[i],n,i),r?n(i,r):[])),[])}};e.exports=t},325:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;const n="http://www.w3.org/1999/02/22-rdf-syntax-ns#",r="http://www.w3.org/2001/XMLSchema#",s="http://www.w3.org/2000/10/swap/";var i={xsd:{decimal:`${r}decimal`,boolean:`${r}boolean`,double:`${r}double`,integer:`${r}integer`,string:`${r}string`},rdf:{type:`${n}type`,nil:`${n}nil`,first:`${n}first`,rest:`${n}rest`,langString:`${n}langString`},owl:{sameAs:"http://www.w3.org/2002/07/owl#sameAs"},r:{forSome:`${s}reify#forSome`,forAll:`${s}reify#forAll`},log:{implies:`${s}log#implies`}};t.default=i},713:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.Variable=t.Triple=t.Term=t.Quad=t.NamedNode=t.Literal=t.DefaultGraph=t.BlankNode=void 0,t.escapeQuotes=b,t.termFromId=function e(t,n){if(n=n||p,!t)return n.defaultGraph();switch(t[0]){case"?":return n.variable(t.substr(1));case"_":return n.blankNode(t.substr(2));case'"':if(n===p)return new y(t);if('"'===t[t.length-1])return n.literal(t.substr(1,t.length-2));const r=t.lastIndexOf('"',t.length-1);return n.literal(t.substr(1,r-1),"@"===t[r+1]?t.substr(r+2):n.namedNode(t.substr(r+3)));case"<":const s=f.exec(t);return n.quad(e(v(s[1]),n),e(v(s[2]),n),e(v(s[3]),n),s[4]&&e(v(s[4]),n));default:return n.namedNode(t)}},t.termToId=function e(t){if("string"==typeof t)return t;if(t instanceof d&&"Quad"!==t.termType)return t.id;if(!t)return u.id;switch(t.termType){case"NamedNode":return t.value;case"BlankNode":return`_:${t.value}`;case"Variable":return`?${t.value}`;case"DefaultGraph":return"";case"Literal":return`"${t.value}"${t.language?`@${t.language}`:t.datatype&&t.datatype.value!==o.string?`^^${t.datatype.value}`:""}`;case"Quad":return`<<${b(e(t.subject))} ${b(e(t.predicate))} ${b(e(t.object))}${(0,i.isDefaultGraph)(t.graph)?"":` ${e(t.graph)}`}>>`;default:throw new Error(`Unexpected termType: ${t.termType}`)}},t.unescapeQuotes=v;var r,s=(r=n(325))&&r.__esModule?r:{default:r},i=n(670);const{rdf:a,xsd:o}=s.default;let u,c=0;const l=/^"(.*".*)(?="[^"]*$)/,f=/^<<("(?:""|[^"])*"[^ ]*|[^ ]+) ("(?:""|[^"])*"[^ ]*|[^ ]+) ("(?:""|[^"])*"[^ ]*|[^ ]+) ?("(?:""|[^"])*"[^ ]*|[^ ]+)?>>$/,p={namedNode:function(e){return new m(e)},blankNode:function(e){return new x(e||"n3-"+c++)},variable:function(e){return new _(e)},literal:function(e,t){if("string"==typeof t)return new y(`"${e}"@${t.toLowerCase()}`);let n=t?t.value:"";""===n&&("boolean"==typeof e?n=o.boolean:"number"==typeof e&&(Number.isFinite(e)?n=Number.isInteger(e)?o.integer:o.double:(n=o.double,Number.isNaN(e)||(e=e>0?"INF":"-INF"))));return""===n||n===o.string?new y(`"${e}"`):new y(`"${e}"^^${n}`)},defaultGraph:function(){return u},quad:A,triple:A};var h=p;t.default=h;class d{constructor(e){this.id=e}get value(){return this.id}get hashCode(){return 0}equals(e){return e instanceof d?this.id===e.id:!!e&&this.termType===e.termType&&this.value===e.value}toJSON(){return{termType:this.termType,value:this.value}}}t.Term=d;class m extends d{get termType(){return"NamedNode"}}t.NamedNode=m;class y extends d{get termType(){return"Literal"}get value(){return this.id.substring(1,this.id.lastIndexOf('"'))}get language(){const e=this.id;let t=e.lastIndexOf('"')+1;return t<e.length&&"@"===e[t++]?e.substr(t).toLowerCase():""}get datatype(){return new m(this.datatypeString)}get datatypeString(){const e=this.id,t=e.lastIndexOf('"')+1,n=t<e.length?e[t]:"";return"^"===n?e.substr(t+2):"@"!==n?o.string:a.langString}equals(e){return e instanceof y?this.id===e.id:!!e&&!!e.datatype&&this.termType===e.termType&&this.value===e.value&&this.language===e.language&&this.datatype.value===e.datatype.value}toJSON(){return{termType:this.termType,value:this.value,language:this.language,datatype:{termType:"NamedNode",value:this.datatypeString}}}}t.Literal=y;class x extends d{constructor(e){super(`_:${e}`)}get termType(){return"BlankNode"}get value(){return this.id.substr(2)}}t.BlankNode=x;class _ extends d{constructor(e){super(`?${e}`)}get termType(){return"Variable"}get value(){return this.id.substr(1)}}t.Variable=_;class g extends d{constructor(){return super(""),u||this}get termType(){return"DefaultGraph"}equals(e){return this===e||!!e&&this.termType===e.termType}}t.DefaultGraph=g,u=new g;class E extends d{constructor(e,t,n,r){super(""),this._subject=e,this._predicate=t,this._object=n,this._graph=r||u}get termType(){return"Quad"}get subject(){return this._subject}get predicate(){return this._predicate}get object(){return this._object}get graph(){return this._graph}toJSON(){return{termType:this.termType,subject:this._subject.toJSON(),predicate:this._predicate.toJSON(),object:this._object.toJSON(),graph:this._graph.toJSON()}}equals(e){return!!e&&this._subject.equals(e.subject)&&this._predicate.equals(e.predicate)&&this._object.equals(e.object)&&this._graph.equals(e.graph)}}function b(e){return e.replace(l,((e,t)=>`"${t.replace(/"/g,'""')}`))}function v(e){return e.replace(l,((e,t)=>`"${t.replace(/""/g,'"')}`))}function A(e,t,n,r){return new E(e,t,n,r)}t.Triple=t.Quad=E},670:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.inDefaultGraph=function(e){return i(e.graph)},t.isBlankNode=function(e){return!!e&&"BlankNode"===e.termType},t.isDefaultGraph=i,t.isLiteral=function(e){return!!e&&"Literal"===e.termType},t.isNamedNode=function(e){return!!e&&"NamedNode"===e.termType},t.isVariable=function(e){return!!e&&"Variable"===e.termType},t.prefix=function(e,t){return a({"":e},t)("")},t.prefixes=a;var r,s=(r=n(713))&&r.__esModule?r:{default:r};function i(e){return!!e&&"DefaultGraph"===e.termType}function a(e,t){const n=Object.create(null);for(const t in e)r(t,e[t]);function r(e,r){if("string"==typeof r){const s=Object.create(null);n[e]=e=>s[e]||(s[e]=t.namedNode(r+e))}else if(!(e in n))throw new Error(`Unknown prefix: ${e}`);return n[e]}return t=t||s.default,r}},808:e=>{"use strict";function t(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,n,r,s){n=n||"&",r=r||"=";var i={};if("string"!=typeof e||0===e.length)return i;var a=/\+/g;e=e.split(n);var o=1e3;s&&"number"==typeof s.maxKeys&&(o=s.maxKeys);var u=e.length;o>0&&u>o&&(u=o);for(var c=0;c<u;++c){var l,f,p,h,d=e[c].replace(a,"%20"),m=d.indexOf(r);m>=0?(l=d.substr(0,m),f=d.substr(m+1)):(l=d,f=""),p=decodeURIComponent(l),h=decodeURIComponent(f),t(i,p)?Array.isArray(i[p])?i[p].push(h):i[p]=[i[p],h]:i[p]=h}return i}},368:e=>{"use strict";var t=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,n,r,s){return n=n||"&",r=r||"=",null===e&&(e=void 0),"object"==typeof e?Object.keys(e).map((function(s){var i=encodeURIComponent(t(s))+r;return Array.isArray(e[s])?e[s].map((function(e){return i+encodeURIComponent(t(e))})).join(n):i+encodeURIComponent(t(e[s]))})).join(n):s?encodeURIComponent(t(s))+r+encodeURIComponent(t(e)):""}},642:(e,t,n)=>{"use strict";t.decode=t.parse=n(808),t.encode=t.stringify=n(368)},362:e=>{"use strict";e.exports={ABSOLUTE:"absolute",PATH_RELATIVE:"pathRelative",ROOT_RELATIVE:"rootRelative",SHORTEST:"shortest"}},779:(e,t,n)=>{"use strict";var r=n(362);function s(e,t){var n=t.removeEmptyQueries&&e.extra.relation.minimumPort;return e.query.string[n?"stripped":"full"]}function i(e,t){return!e.extra.relation.minimumQuery||t.output===r.ABSOLUTE||t.output===r.ROOT_RELATIVE}function a(e,t){var n=t.removeDirectoryIndexes&&e.extra.resourceIsIndex,s=e.extra.relation.minimumResource&&t.output!==r.ABSOLUTE&&t.output!==r.ROOT_RELATIVE;return!!e.resource&&!s&&!n}e.exports=function(e,t){var n="";return n+=function(e,t){var n="";return(e.extra.relation.maximumHost||t.output===r.ABSOLUTE)&&(e.extra.relation.minimumScheme&&t.schemeRelative&&t.output!==r.ABSOLUTE?n+="//":n+=e.scheme+"://"),n}(e,t),n+=function(e,t){return!e.auth||t.removeAuth||!e.extra.relation.maximumHost&&t.output!==r.ABSOLUTE?"":e.auth+"@"}(e,t),n+=function(e,t){return e.host.full&&(e.extra.relation.maximumAuth||t.output===r.ABSOLUTE)?e.host.full:""}(e,t),n+=function(e,t){return e.port&&!e.extra.portIsDefault&&e.extra.relation.maximumHost?":"+e.port:""}(e),n+=function(e,t){var n="",o=e.path.absolute.string,u=e.path.relative.string,c=a(e,t);if(e.extra.relation.maximumHost||t.output===r.ABSOLUTE||t.output===r.ROOT_RELATIVE)n=o;else if(u.length<=o.length&&t.output===r.SHORTEST||t.output===r.PATH_RELATIVE){if(""===(n=u)){var l=i(e,t)&&!!s(e,t);e.extra.relation.maximumPath&&!c?n="./":!e.extra.relation.overridesQuery||c||l||(n="./")}}else n=o;return"/"!==n||c||!t.removeRootTrailingSlash||e.extra.relation.minimumPort&&t.output!==r.ABSOLUTE||(n=""),n}(e,t),n+=function(e,t){return a(e,t)?e.resource:""}(e,t),n+=function(e,t){return i(e,t)?s(e,t):""}(e,t),n+=function(e,t){return e.hash?e.hash:""}(e),n}},755:(e,t,n)=>{"use strict";var r=n(362),s=n(779),i=n(141),a=n(609),o=n(398),u=n(258);function c(e,t){this.options=i(t,{defaultPorts:{ftp:21,http:80,https:443},directoryIndexes:["index.html"],ignore_www:!1,output:c.SHORTEST,rejectedSchemes:["data","javascript","mailto"],removeAuth:!1,removeDirectoryIndexes:!0,removeEmptyQueries:!1,removeRootTrailingSlash:!0,schemeRelative:!0,site:void 0,slashesDenoteHost:!0}),this.from=o.from(e,this.options,null)}c.prototype.relate=function(e,t,n){if(a.isPlainObject(t)?(n=t,t=e,e=null):t||(t=e,e=null),n=i(n,this.options),e=e||n.site,!(e=o.from(e,n,this.from))||!e.href)throw new Error("from value not defined.");if(e.extra.hrefInfo.minimumPathOnly)throw new Error("from value supplied is not absolute: "+e.href);return!1===(t=o.to(t,n)).valid?t.href:(t=u(e,t,n),t=s(t,n))},c.relate=function(e,t,n){return(new c).relate(e,t,n)},a.shallowMerge(c,r),e.exports=c},141:(e,t,n)=>{"use strict";var r=n(609);function s(e,t){return t instanceof Object&&e instanceof Object?t instanceof Array&&e instanceof Array?t.concat(e):r.shallowMerge(e,t):e}e.exports=function(e,t){if(r.isPlainObject(e)){var n={};for(var i in t)t.hasOwnProperty(i)&&(void 0!==e[i]?n[i]=s(e[i],t[i]):n[i]=t[i]);return n}return t}},420:e=>{"use strict";e.exports=function(e,t){if(t.ignore_www){var n=e.host.full;if(n){var r=n;0===n.indexOf("www.")&&(r=n.substr(4)),e.host.stripped=r}}}},849:e=>{"use strict";e.exports=function(e){var t=!(e.scheme||e.auth||e.host.full||e.port),n=t&&!e.path.absolute.string,r=n&&!e.resource,s=r&&!e.query.string.full.length,i=s&&!e.hash;e.extra.hrefInfo.minimumPathOnly=t,e.extra.hrefInfo.minimumResourceOnly=n,e.extra.hrefInfo.minimumQueryOnly=r,e.extra.hrefInfo.minimumHashOnly=s,e.extra.hrefInfo.empty=i}},398:(e,t,n)=>{"use strict";var r=n(849),s=n(420),i=n(965),a=n(22),o=n(150),u=n(936),c=n(831);function l(e,t){var n=u(e,t);return!1===n.valid||(s(n,t),a(n,t),i(n,t),o(n,t),r(n)),n}e.exports={from:function(e,t,n){if(e){var r=l(e,t),s=c.resolveDotSegments(r.path.absolute.array);return r.path.absolute.array=s,r.path.absolute.string="/"+c.join(s),r}return n},to:l}},965:e=>{"use strict";function t(e){if("/"!==e){var t=[];return e.split("/").forEach((function(e){""!==e&&t.push(e)})),t}return[]}e.exports=function(e,n){var r=e.path.absolute.string;if(r){var s=r.lastIndexOf("/");if(s>-1){if(++s<r.length){var i=r.substr(s);"."!==i&&".."!==i?(e.resource=i,r=r.substr(0,s)):r+="/"}e.path.absolute.string=r,e.path.absolute.array=t(r)}else"."===r||".."===r?(r+="/",e.path.absolute.string=r,e.path.absolute.array=t(r)):(e.resource=r,e.path.absolute.string=null);e.extra.resourceIsIndex=function(e,t){var n=!1;return t.directoryIndexes.every((function(t){return t!==e||(n=!0,!1)})),n}(e.resource,n)}}},22:e=>{"use strict";e.exports=function(e,t){var n=-1;for(var r in t.defaultPorts)if(r===e.scheme&&t.defaultPorts.hasOwnProperty(r)){n=t.defaultPorts[r];break}n>-1&&(n=n.toString(),null===e.port&&(e.port=n),e.extra.portIsDefault=e.port===n)}},150:e=>{"use strict";var t=Object.prototype.hasOwnProperty;function n(e,n){var r=0,s="";for(var i in e)if(""!==i&&!0===t.call(e,i)){var a=e[i];""===a&&n||(s+=1==++r?"?":"&",i=encodeURIComponent(i),s+=""!==a?i+"="+encodeURIComponent(a).replace(/%20/g,"+"):i)}return s}e.exports=function(e,t){e.query.string.full=n(e.query.object,!1),t.removeEmptyQueries&&(e.query.string.stripped=n(e.query.object,!0))}},936:(e,t,n)=>{"use strict";var r=n(883).Qc;e.exports=function(e,t){return function(e,t){var n=!0;return t.rejectedSchemes.every((function(t){return n=!(0===e.indexOf(t+":"))})),n}(e,t)?(n=r(e,!0,t.slashesDenoteHost),(s=n.protocol)&&s.indexOf(":")===s.length-1&&(s=s.substr(0,s.length-1)),n.host={full:n.hostname,stripped:null},n.path={absolute:{array:null,string:n.pathname},relative:{array:null,string:null}},n.query={object:n.query,string:{full:null,stripped:null}},n.extra={hrefInfo:{minimumPathOnly:null,minimumResourceOnly:null,minimumQueryOnly:null,minimumHashOnly:null,empty:null,separatorOnlyQuery:"?"===n.search},portIsDefault:null,relation:{maximumScheme:null,maximumAuth:null,maximumHost:null,maximumPort:null,maximumPath:null,maximumResource:null,maximumQuery:null,maximumHash:null,minimumScheme:null,minimumAuth:null,minimumHost:null,minimumPort:null,minimumPath:null,minimumResource:null,minimumQuery:null,minimumHash:null,overridesQuery:null},resourceIsIndex:null,slashes:n.slashes},n.resource=null,n.scheme=s,delete n.hostname,delete n.pathname,delete n.protocol,delete n.search,delete n.slashes,n):{href:e,valid:!1};var n,s}},799:(e,t,n)=>{"use strict";var r=n(19),s=n(609),i=n(831);e.exports=function(e,t,n){r.upToPath(e,t,n),e.extra.relation.minimumScheme&&(e.scheme=t.scheme),e.extra.relation.minimumAuth&&(e.auth=t.auth),e.extra.relation.minimumHost&&(e.host=s.clone(t.host)),e.extra.relation.minimumPort&&function(e,t){e.port=t.port,e.extra.portIsDefault=t.extra.portIsDefault}(e,t),e.extra.relation.minimumScheme&&function(e,t){if(e.extra.relation.maximumHost||!e.extra.hrefInfo.minimumResourceOnly){var n=e.path.absolute.array,r="/";n?(e.extra.hrefInfo.minimumPathOnly&&0!==e.path.absolute.string.indexOf("/")&&(n=t.path.absolute.array.concat(n)),n=i.resolveDotSegments(n),r+=i.join(n)):n=[],e.path.absolute.array=n,e.path.absolute.string=r}else e.path=s.clone(t.path)}(e,t),r.pathOn(e,t,n),e.extra.relation.minimumResource&&function(e,t){e.resource=t.resource,e.extra.resourceIsIndex=t.extra.resourceIsIndex}(e,t),e.extra.relation.minimumQuery&&(e.query=s.clone(t.query)),e.extra.relation.minimumHash&&(e.hash=t.hash)}},19:e=>{"use strict";e.exports={pathOn:function(e,t,n){var r=e.extra.hrefInfo.minimumQueryOnly,s=e.extra.hrefInfo.minimumHashOnly,i=e.extra.hrefInfo.empty,a=e.extra.relation.minimumPort,o=e.extra.relation.minimumScheme,u=a&&e.path.absolute.string===t.path.absolute.string,c=e.resource===t.resource||!e.resource&&t.extra.resourceIsIndex||n.removeDirectoryIndexes&&e.extra.resourceIsIndex&&!t.resource,l=u&&(c||r||s||i),f=n.removeEmptyQueries?"stripped":"full",p=e.query.string[f],h=t.query.string[f],d=l&&!!p&&p===h||(s||i)&&!e.extra.hrefInfo.separatorOnlyQuery,m=d&&e.hash===t.hash;e.extra.relation.minimumPath=u,e.extra.relation.minimumResource=l,e.extra.relation.minimumQuery=d,e.extra.relation.minimumHash=m,e.extra.relation.maximumPort=!o||o&&!u,e.extra.relation.maximumPath=!o||o&&!l,e.extra.relation.maximumResource=!o||o&&!d,e.extra.relation.maximumQuery=!o||o&&!m,e.extra.relation.maximumHash=!o||o&&!m,e.extra.relation.overridesQuery=u&&e.extra.relation.maximumResource&&!d&&!!h},upToPath:function(e,t,n){var r=e.extra.hrefInfo.minimumPathOnly,s=e.scheme===t.scheme||!e.scheme,i=s&&(e.auth===t.auth||n.removeAuth||r),a=n.ignore_www?"stripped":"full",o=i&&(e.host[a]===t.host[a]||r),u=o&&(e.port===t.port||r);e.extra.relation.minimumScheme=s,e.extra.relation.minimumAuth=i,e.extra.relation.minimumHost=o,e.extra.relation.minimumPort=u,e.extra.relation.maximumScheme=!s||s&&!i,e.extra.relation.maximumAuth=!s||s&&!o,e.extra.relation.maximumHost=!s||s&&!u}}},258:(e,t,n)=>{"use strict";var r=n(799),s=n(255);e.exports=function(e,t,n){return r(t,e,n),s(t,e,n),t}},255:(e,t,n)=>{"use strict";var r=n(831);e.exports=function(e,t,n){if(e.extra.relation.minimumScheme){var s=(i=e.path.absolute.array,a=t.path.absolute.array,o=[],u=!0,c=-1,a.forEach((function(e,t){u&&(i[t]!==e?u=!1:c=t),u||o.push("..")})),i.forEach((function(e,t){t>c&&o.push(e)})),o);e.path.relative.array=s,e.path.relative.string=r.join(s)}var i,a,o,u,c}},609:e=>{"use strict";e.exports={clone:function e(t){if(t instanceof Object){var n=t instanceof Array?[]:{};for(var r in t)t.hasOwnProperty(r)&&(n[r]=e(t[r]));return n}return t},isPlainObject:function(e){return!!e&&"object"==typeof e&&e.constructor===Object},shallowMerge:function(e,t){if(e instanceof Object&&t instanceof Object)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}}},831:e=>{"use strict";e.exports={join:function(e){return e.length>0?e.join("/")+"/":""},resolveDotSegments:function(e){var t=[];return e.forEach((function(e){".."!==e?"."!==e&&t.push(e):t.length>0&&t.splice(t.length-1,1)})),t}}},639:function(e,t,n){var r;e=n.nmd(e),function(s){t&&t.nodeType,e&&e.nodeType;var i="object"==typeof n.g&&n.g;i.global!==i&&i.window!==i&&i.self;var a,o=2147483647,u=36,c=/^xn--/,l=/[^\x20-\x7E]/,f=/[\x2E\u3002\uFF0E\uFF61]/g,p={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},h=Math.floor,d=String.fromCharCode;function m(e){throw RangeError(p[e])}function y(e,t){for(var n=e.length,r=[];n--;)r[n]=t(e[n]);return r}function x(e,t){var n=e.split("@"),r="";return n.length>1&&(r=n[0]+"@",e=n[1]),r+y((e=e.replace(f,".")).split("."),t).join(".")}function _(e){for(var t,n,r=[],s=0,i=e.length;s<i;)(t=e.charCodeAt(s++))>=55296&&t<=56319&&s<i?56320==(64512&(n=e.charCodeAt(s++)))?r.push(((1023&t)<<10)+(1023&n)+65536):(r.push(t),s--):r.push(t);return r}function g(e){return y(e,(function(e){var t="";return e>65535&&(t+=d((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=d(e)})).join("")}function E(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function b(e,t,n){var r=0;for(e=n?h(e/700):e>>1,e+=h(e/t);e>455;r+=u)e=h(e/35);return h(r+36*e/(e+38))}function v(e){var t,n,r,s,i,a,c,l,f,p,d,y=[],x=e.length,_=0,E=128,v=72;for((n=e.lastIndexOf("-"))<0&&(n=0),r=0;r<n;++r)e.charCodeAt(r)>=128&&m("not-basic"),y.push(e.charCodeAt(r));for(s=n>0?n+1:0;s<x;){for(i=_,a=1,c=u;s>=x&&m("invalid-input"),((l=(d=e.charCodeAt(s++))-48<10?d-22:d-65<26?d-65:d-97<26?d-97:u)>=u||l>h((o-_)/a))&&m("overflow"),_+=l*a,!(l<(f=c<=v?1:c>=v+26?26:c-v));c+=u)a>h(o/(p=u-f))&&m("overflow"),a*=p;v=b(_-i,t=y.length+1,0==i),h(_/t)>o-E&&m("overflow"),E+=h(_/t),_%=t,y.splice(_++,0,E)}return g(y)}function A(e){var t,n,r,s,i,a,c,l,f,p,y,x,g,v,A,S=[];for(x=(e=_(e)).length,t=128,n=0,i=72,a=0;a<x;++a)(y=e[a])<128&&S.push(d(y));for(r=s=S.length,s&&S.push("-");r<x;){for(c=o,a=0;a<x;++a)(y=e[a])>=t&&y<c&&(c=y);for(c-t>h((o-n)/(g=r+1))&&m("overflow"),n+=(c-t)*g,t=c,a=0;a<x;++a)if((y=e[a])<t&&++n>o&&m("overflow"),y==t){for(l=n,f=u;!(l<(p=f<=i?1:f>=i+26?26:f-i));f+=u)A=l-p,v=u-p,S.push(d(E(p+A%v,0))),l=h(A/v);S.push(d(E(l,0))),i=b(n,g,r==s),n=0,++r}++n,++t}return S.join("")}a={version:"1.3.2",ucs2:{decode:_,encode:g},decode:v,encode:A,toASCII:function(e){return x(e,(function(e){return l.test(e)?"xn--"+A(e):e}))},toUnicode:function(e){return x(e,(function(e){return c.test(e)?v(e.slice(4).toLowerCase()):e}))}},void 0===(r=function(){return a}.call(t,n,t,e))||(e.exports=r)}()},883:(e,t,n)=>{"use strict";var r=n(639),s=n(225);function i(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}t.Qc=g;var a=/^([a-z0-9.+-]+:)/i,o=/:[0-9]*$/,u=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,c=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),l=["'"].concat(c),f=["%","/","?",";","#"].concat(l),p=["/","?","#"],h=/^[+a-z0-9A-Z_-]{0,63}$/,d=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},y={javascript:!0,"javascript:":!0},x={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},_=n(642);function g(e,t,n){if(e&&s.isObject(e)&&e instanceof i)return e;var r=new i;return r.parse(e,t,n),r}i.prototype.parse=function(e,t,n){if(!s.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var i=e.indexOf("?"),o=-1!==i&&i<e.indexOf("#")?"?":"#",c=e.split(o);c[0]=c[0].replace(/\\/g,"/");var g=e=c.join(o);if(g=g.trim(),!n&&1===e.split("#").length){var E=u.exec(g);if(E)return this.path=g,this.href=g,this.pathname=E[1],E[2]?(this.search=E[2],this.query=t?_.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var b=a.exec(g);if(b){var v=(b=b[0]).toLowerCase();this.protocol=v,g=g.substr(b.length)}if(n||b||g.match(/^\/\/[^@\/]+@[^@\/]+/)){var A="//"===g.substr(0,2);!A||b&&y[b]||(g=g.substr(2),this.slashes=!0)}if(!y[b]&&(A||b&&!x[b])){for(var S,O,w=-1,T=0;T<p.length;T++){-1!==(I=g.indexOf(p[T]))&&(-1===w||I<w)&&(w=I)}-1!==(O=-1===w?g.lastIndexOf("@"):g.lastIndexOf("@",w))&&(S=g.slice(0,O),g=g.slice(O+1),this.auth=decodeURIComponent(S)),w=-1;for(T=0;T<f.length;T++){var I;-1!==(I=g.indexOf(f[T]))&&(-1===w||I<w)&&(w=I)}-1===w&&(w=g.length),this.host=g.slice(0,w),g=g.slice(w),this.parseHost(),this.hostname=this.hostname||"";var F="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!F)for(var N=this.hostname.split(/\./),k=(T=0,N.length);T<k;T++){var L=N[T];if(L&&!L.match(h)){for(var R="",j=0,C=L.length;j<C;j++)L.charCodeAt(j)>127?R+="x":R+=L[j];if(!R.match(h)){var $=N.slice(0,T),D=N.slice(T+1),P=L.match(d);P&&($.push(P[1]),D.unshift(P[2])),D.length&&(g="/"+D.join(".")+g),this.hostname=$.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),F||(this.hostname=r.toASCII(this.hostname));var M=this.port?":"+this.port:"",Q=this.hostname||"";this.host=Q+M,this.href+=this.host,F&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==g[0]&&(g="/"+g))}if(!m[v])for(T=0,k=l.length;T<k;T++){var B=l[T];if(-1!==g.indexOf(B)){var G=encodeURIComponent(B);G===B&&(G=escape(B)),g=g.split(B).join(G)}}var V=g.indexOf("#");-1!==V&&(this.hash=g.substr(V),g=g.slice(0,V));var U=g.indexOf("?");if(-1!==U?(this.search=g.substr(U),this.query=g.substr(U+1),t&&(this.query=_.parse(this.query)),g=g.slice(0,U)):t&&(this.search="",this.query={}),g&&(this.pathname=g),x[v]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){M=this.pathname||"";var J=this.search||"";this.path=M+J}return this.href=this.format(),this},i.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",n=this.pathname||"",r=this.hash||"",i=!1,a="";this.host?i=e+this.host:this.hostname&&(i=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&s.isObject(this.query)&&Object.keys(this.query).length&&(a=_.stringify(this.query));var o=this.search||a&&"?"+a||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||x[t])&&!1!==i?(i="//"+(i||""),n&&"/"!==n.charAt(0)&&(n="/"+n)):i||(i=""),r&&"#"!==r.charAt(0)&&(r="#"+r),o&&"?"!==o.charAt(0)&&(o="?"+o),t+i+(n=n.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(o=o.replace("#","%23"))+r},i.prototype.resolve=function(e){return this.resolveObject(g(e,!1,!0)).format()},i.prototype.resolveObject=function(e){if(s.isString(e)){var t=new i;t.parse(e,!1,!0),e=t}for(var n=new i,r=Object.keys(this),a=0;a<r.length;a++){var o=r[a];n[o]=this[o]}if(n.hash=e.hash,""===e.href)return n.href=n.format(),n;if(e.slashes&&!e.protocol){for(var u=Object.keys(e),c=0;c<u.length;c++){var l=u[c];"protocol"!==l&&(n[l]=e[l])}return x[n.protocol]&&n.hostname&&!n.pathname&&(n.path=n.pathname="/"),n.href=n.format(),n}if(e.protocol&&e.protocol!==n.protocol){if(!x[e.protocol]){for(var f=Object.keys(e),p=0;p<f.length;p++){var h=f[p];n[h]=e[h]}return n.href=n.format(),n}if(n.protocol=e.protocol,e.host||y[e.protocol])n.pathname=e.pathname;else{for(var d=(e.pathname||"").split("/");d.length&&!(e.host=d.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==d[0]&&d.unshift(""),d.length<2&&d.unshift(""),n.pathname=d.join("/")}if(n.search=e.search,n.query=e.query,n.host=e.host||"",n.auth=e.auth,n.hostname=e.hostname||e.host,n.port=e.port,n.pathname||n.search){var m=n.pathname||"",_=n.search||"";n.path=m+_}return n.slashes=n.slashes||e.slashes,n.href=n.format(),n}var g=n.pathname&&"/"===n.pathname.charAt(0),E=e.host||e.pathname&&"/"===e.pathname.charAt(0),b=E||g||n.host&&e.pathname,v=b,A=n.pathname&&n.pathname.split("/")||[],S=(d=e.pathname&&e.pathname.split("/")||[],n.protocol&&!x[n.protocol]);if(S&&(n.hostname="",n.port=null,n.host&&(""===A[0]?A[0]=n.host:A.unshift(n.host)),n.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===d[0]?d[0]=e.host:d.unshift(e.host)),e.host=null),b=b&&(""===d[0]||""===A[0])),E)n.host=e.host||""===e.host?e.host:n.host,n.hostname=e.hostname||""===e.hostname?e.hostname:n.hostname,n.search=e.search,n.query=e.query,A=d;else if(d.length)A||(A=[]),A.pop(),A=A.concat(d),n.search=e.search,n.query=e.query;else if(!s.isNullOrUndefined(e.search)){if(S)n.hostname=n.host=A.shift(),(F=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=F.shift(),n.host=n.hostname=F.shift());return n.search=e.search,n.query=e.query,s.isNull(n.pathname)&&s.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.href=n.format(),n}if(!A.length)return n.pathname=null,n.search?n.path="/"+n.search:n.path=null,n.href=n.format(),n;for(var O=A.slice(-1)[0],w=(n.host||e.host||A.length>1)&&("."===O||".."===O)||""===O,T=0,I=A.length;I>=0;I--)"."===(O=A[I])?A.splice(I,1):".."===O?(A.splice(I,1),T++):T&&(A.splice(I,1),T--);if(!b&&!v)for(;T--;T)A.unshift("..");!b||""===A[0]||A[0]&&"/"===A[0].charAt(0)||A.unshift(""),w&&"/"!==A.join("/").substr(-1)&&A.push("");var F,N=""===A[0]||A[0]&&"/"===A[0].charAt(0);S&&(n.hostname=n.host=N?"":A.length?A.shift():"",(F=!!(n.host&&n.host.indexOf("@")>0)&&n.host.split("@"))&&(n.auth=F.shift(),n.host=n.hostname=F.shift()));return(b=b||n.host&&A.length)&&!N&&A.unshift(""),A.length?n.pathname=A.join("/"):(n.pathname=null,n.path=null),s.isNull(n.pathname)&&s.isNull(n.search)||(n.path=(n.pathname?n.pathname:"")+(n.search?n.search:"")),n.auth=e.auth||n.auth,n.slashes=n.slashes||e.slashes,n.href=n.format(),n},i.prototype.parseHost=function(){var e=this.host,t=o.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},225:e=>{"use strict";e.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},863:(e,t,n)=>{const r=function(){const e=n(118);function t(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}return{name:"eval-threaded-nerr",description:"emulation of regular expression engine with error permutations",compile:function(n,r,s){const i=r.expression;return{match:function(n,o,u,c,l,f,p,h){if(!i)return{};const d=function n(r,i){if("string"==typeof r)return n(s.tripleExprs[r],i);const o=u.indexOf(r);let l="min"in r?r.min:1,h="max"in r?-1===r.max?1/0:r.max:1;function d(e,n){let s=0,a=[i];const o={};("min"in r&&1!==r.min||"max"in r&&1!==r.max)&&(o.min=r.min,o.max=r.max),"semActs"in r&&(o.semActs=r.semActs),"annotations"in r&&(o.annotations=r.annotations);for(;s<h;++s){let r=[];for(let i=0;i<a.length;++i){const u=a[i],c=n(u);if(c.length>0&&0===c[0].errors.length&&c.forEach((n=>{const r="expression"in u?u.expression.solutions.slice():[];"solution"in n&&r.push(n.solution),delete n.solution,n.expression=t({type:e,solutions:r},o)})),0===c.length||c[0].errors.length>0)return s<l?c:a;r=r.concat(c)}a=r}if(a.length>0&&0===a[0].errors.length&&"semActs"in r){const e=[],t=[];a.forEach((n=>{const s=p.dispatchAll(r.semActs,"???",n);0===s.length?e.push(n):([].push.apply(n.errors,s),t.push(n))})),a=e.length>0?e:t}return a}if("TripleConstraint"===r.type){const n="negated"in r&&r.negated||0===h;n&&(l=h=1/0),void 0===i.avail[o]&&(i.avail[o]=c[o].map((e=>e.tNo)));const u={};("min"in r&&1!==r.min||"max"in r&&1!==r.max)&&(u.min=r.min,u.max=r.max),"semActs"in r&&(u.semActs=r.semActs),"annotations"in r&&(u.annotations=r.annotations);const d=i.avail[o].splice(0,l),y=n?0===d.length:d.length>=l,x=[],_=i.matched;if(y)do{const e=d.reduce(((e,t)=>{const n=f[t],s={type:"TestedTriple",subject:n.subject,predicate:n.predicate,object:a(n.object)},u=c[o].find((e=>e.tNo===t));u.res&&Object.keys(u.res).length>0&&(s.referenced=u.res);const l=i.errors.concat("semActs"in r?p.dispatchAll(r.semActs,s,s):[]);return l.length>0?e.fail.push({tripleNo:t,tested:s,semActErrors:l}):e.pass.push({tripleNo:t,tested:s,semActErrors:l}),e}),{pass:[],fail:[]});if(0===e.fail.length){const t=0===d.length?i.errors.slice():[],n=m(e.pass,t);x.push(n)}else e.fail.forEach((e=>x.push(m([e],e.semActErrors))));function m(e,n){return{avail:i.avail.map((e=>e.slice())),errors:n,matched:_.concat({tNos:e.map((e=>e.tripleNo))}),expression:t({type:"TripleConstraintSolutions",predicate:r.predicate},"valueExpr"in r?{valueExpr:r.valueExpr}:{},"id"in r?{productionLabel:r.id}:{},u,{solutions:e.map((e=>e.tested))})}}}while(i.avail[o].length>0&&d.length<h&&(d.push(i.avail[o].shift()),1));else{let a=null;"string"==typeof r.valueExpr?(a=r.valueExpr,e.isBlank(a)&&(a=s.shapeExprs[a])):r.valueExpr&&(a=t({},r.valueExpr)),x.push({avail:i.avail,errors:i.errors.concat([t({type:n?"NegatedProperty":"MissingProperty",property:r.predicate},a?{valueExpr:a}:{})]),matched:_})}return x}if("OneOf"===r.type)return d("OneOfSolutions",(e=>{const t=[],s=[];return r.expressions.forEach((r=>{const i={avail:e.avail.map((e=>e.slice())),errors:e.errors,matched:e.matched},a=n(r,i);0===a[0].errors.length?([].push.apply(t,a),a.forEach((e=>{const t="solution"in i?i.solution.expressions:[];"expression"in e&&t.push(e.expression),delete e.expression,e.solution={type:"OneOfSolution",expressions:t}}))):[].push.apply(s,a)})),t.length>0?t:s}));if("EachOf"===r.type)return y(d("EachOfSolutions",(e=>r.expressions.reduce(((e,t)=>y(e.reduce(((e,r)=>{const s=n(t,r);return s.forEach((e=>{if(0===e.errors.length){const t="solution"in r?r.solution.expressions.slice():[];"expression"in e&&t.push(e.expression),delete e.expression,e.solution={type:"EachOfSolution",expressions:t}}})),e.concat(s)}),[]))),[e]))));function y(e){return e.reduce(((e,t)=>0===t.errors.length?e.errors?{errors:!1,l:[t]}:{errors:!1,l:e.l.concat(t)}:e.errors?{errors:!0,l:e.l.concat(t)}:e),{errors:!0,l:[]}).l}runtimeError("unexpected expr type: "+r.type)}(i,{avail:[],matched:[],errors:[]}),m=d.reduce(((e,t)=>{if(t.errors.length>0)return e;const n={};return Object.keys(l).forEach((e=>{"NO_TRIPLE_CONSTRAINT"!==l[e]&&(n[e]=l[e])})),t.matched.forEach((e=>{e.tNos.forEach((e=>{delete n[e]}))})),Object.keys(n).forEach((e=>{t.errors.push({type:"ExcessTripleViolation",triple:f[e],constraint:u[n[e]]})})),null!==e?e:Object.keys(n).length>0?null:t}),null);return null!==m?function(t,n,s,i){function o(u){if("OneOfSolutions"===u.type||"EachOfSolutions"===u.type)u.solutions.forEach((e=>{e.expressions.forEach((e=>{o(e)}))}));else{if("TripleConstraintSolutions"!==u.type)throw Error("unexpected expr type in "+JSON.stringify(u));u.solutions=u.solutions.map((o=>{if("TestedTriple"===o.type)return o;const u=s[o.tripleNo],c=n[o.constraintNo],l={type:"TestedTriple",subject:u.subject,predicate:u.predicate,object:a(u.object)};function f(t,n,s){const i=s(t,n);if("errors"in i){const s={type:"ReferenceError",focus:t,shape:n};return"string"==typeof n&&e.isBlank(n)&&(s.referencedShape=r),s.errors=i,[s]}return(("solution"in i||"solutions"in i)&&0!==Object.keys(i.solution||i.solutions).length||"Recursion"===i.type)&&(l.referenced=i),[]}function p(e,t){return f(e,t,recurse)}function h(e,t){return f(e,t,direct)}const d="valueExpr"in c?checkValueExpr(c.inverse?u.subject:u.object,c.valueExpr,p,h):[];return 0===d.length&&"semActs"in c&&[].push.apply(d,i.dispatchAll(c.semActs,l,l)),d.length>0&&(t.errors=t.errors||[],t.errors=t.errors.concat(d)),l}))}}Object.keys(t).length>0&&o(t);"semActs"in r&&(t.semActs=r.semActs);return t}(m.expression,u,f,p):d.length>1?{type:"PossibleErrors",errors:d.reduce(((e,t)=>e.concat([t.errors])),[])}:d[0]}};function a(t){if('"'!==t[0])return t;const n={value:e.getLiteralValue(t)},r=e.getLiteralType(t);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=e.getLiteralLanguage(t);return s&&(n.language=s),n}}}}();e.exports=r},865:(e,t,n)=>{e.exports=function(e){const t=n(118);n(279);const r="http://www.w3.org/2001/XMLSchema#",s=[r+"integer",r+"nonPositiveInteger",r+"negativeInteger",r+"long",r+"int",r+"short",r+"byte",r+"nonNegativeInteger",r+"unsignedLong",r+"unsignedInt",r+"unsignedShort",r+"unsignedByte",r+"positiveInteger"],i=[r+"decimal"].concat(s),a=[r+"float",r+"double"].concat(i),o={"http://www.w3.org/2001/XMLSchema#integer":function(e,t){return e.match(/^[+-]?[0-9]+$/)||t("illegal integer value '"+e+"'"),parseInt(e)},"http://www.w3.org/2001/XMLSchema#decimal":function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal integer value '"+e+"'"),parseFloat(e)},"http://www.w3.org/2001/XMLSchema#float":function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal integer value '"+e+"'"),parseFloat(e)},"http://www.w3.org/2001/XMLSchema#double":function(e,t){return e.match(/[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/)||t("illegal integer value '"+e+"'"),Number(e)}},u={length:function(e,t){return e.length===t},minlength:function(e,t){return e.length>=t},maxlength:function(e,t){return e.length<=t}},c={mininclusive:function(e,t){return e>=t},minexclusive:function(e,t){return e>t},maxinclusive:function(e,t){return e<=t},maxexclusive:function(e,t){return e<t}},l={totaldigits:function(e,t){const n=e.match(/[0-9]/g);return n&&n.length<=t},fractiondigits:function(e,t){const n=e.match(/^[+-]?[0-9]*\.?([0-9]*)$/);return n&&n[1].length<=t}};function f(e){if('"'!==e[0])return e;const n={value:t.getLiteralValue(e)},r=t.getLiteralType(e);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=t.getLiteralLanguage(e);return s&&(n.language=s),n}function p(e,t,n){function r(){this.type="Epsilon"}function s(e,t,n,r,s){this.type="TripleConstraint",this.inverse=!!n,this.negated=!!r,this.predicate=t,void 0!==s&&(this.valueExpr=s)}function i(e){this.type="Choice",this.disjuncts=e}function a(e){this.type="EachOf",this.conjuncts=e}function o(e,t){this.type="SemActs",this.expression=e,this.semActs=t}function u(e){this.type="KleeneStar",this.expression=e}return e?function e(n,c){let l,f;function p(e,t,n){if(void 0===t&&(t=1),void 0===n&&(n=1),1===t&&1===n)return e;const s=-1===n?new u(e):h(n-t).reduce((function(t,n,s){return new i(0===s?[e,new r]:[new a([e,t]),new r])}),void 0);return 0!==t?new a(h(t).map((function(t){return e})).concat(s)):s}if("TripleConstraint"===n.type){const e="valueExprRef"in n?c.valueExprDefns[n.valueExprRef]:n.valueExpr;return l=p(new s(t.push(n)-1,n.predicate,n.inverse,n.negated,e),n.min,n.max),n.semActs?new o(l,n.semActs):l}if("OneOf"===n.type)return f=new i(n.expressions.map((function(t){return e(t,c)}))),l=p(f,n.min,n.max),n.semActs?new o(l,n.semActs):l;if("EachOf"===n.type)return f=new a(n.expressions.map((function(t){return e(t,c)}))),l=p(f,n.min,n.max),n.semActs?new o(l,n.semActs):l;if("Inclusion"===n.type){return e(c._index.shapeExprs[n.include].expression,c)}throw Error("unexpected expr type: "+n.type)}(e,n):new r}function h(e){return 0===e?[]:Array(e).join(" ").split(/ /)}function d(e,t,n){t in e||y("expected "+JSON.stringify(e)+" to have a '"+t+"' attribute."),arguments.length>2&&e[t]!==n&&y("expected "+t+" attribute '"+e[t]+"' to equal '"+n+"'.")}function m(){}function y(){const e=Array.prototype.join.call(arguments,""),t=new Error("Runtime error: "+e);throw Error.captureStackTrace(t,y),t}return{construct:function i(h,x,_){if(!(this instanceof i))return new i(h,x,_);this.type="ShExValidator",_=_||{},this.options=_,this.options.or=this.options.or||"someOf",this.options.partition=this.options.partition||"exhaustive","noCache"in _&&_.noCache||(this.known=function(){const e={},t={};return{cached:function(n,r){let s=e[n];if(!s)return e[n]=s=[],void(t[n]=[]);const i=s.indexOf(r);return-1===i?void 0:t[n][i]},remember:function(n,r,s){const i=e[n];if(i){if(-1!==i.indexOf(r))throw Error("not expecting duplicate key "+key)}else e[n]=[],t[n]=[];e[n].push(r),t[n].push(s)}}}());const g=this;this.schema=h,this._expect=this.options.lax?m:d,this._optimize={},this.reset=function(){};const E=this.options.regexModule||n(991);let b=0;const v=_.nextBNode||function(){return"_:b"+b++};this.getAST=function(){return{type:"AST",shapes:Object.keys(this.schema._index.shapeExprs).reduce((function(e,t){return e[t]={type:"ASTshape",expression:p(g.schema._index.shapeExprs[t].expression,[],g.schema)},e}),{})}},this.indexTripleConstraints=function(e){const t=[];return e&&function e(n){"TripleConstraint"===n.type?t.push(n):"OneOf"===n.type||"EachOf"===n.type?n.expressions.forEach((function(t){e(t)})):"Inclusion"===n.type?e(h.productions[n.include]):y("unexpected expr type: "+n.type)}(e),t},this.validate=function(t,n,r,s,i){if(r&&r!==e.Validator.start||(h.start||y("start production not defined"),r=h.start),"string"!=typeof r)return this._validateShapeExpr(t,n,r,"_: -start-",s,i);r in this.schema._index.shapeExprs||y("shape "+r+" not defined");const a=r;void 0===i&&(i={});const o=n+"|"+a;if(o in i)return{type:"Recursion",node:f(n),shape:a};i[o]={point:n,shapeLabel:a};const u=this._validateShapeExpr(t,n,h._index.shapeExprs[a],a,s,i);return delete i[o],u},this._validateShapeExpr=function(e,t,n,r,s,i){if("known"in this&&this.known.cached(t,n))return this.known.cached(t,n);let a=null;if(""===t)throw Error("validation needs a valid focus node");if("string"==typeof n)a=this._validateShapeExpr(e,t,h._index.shapeExprs[n],n,s,i);else if("NodeConstraint"===n.type){const e=this._errorsMatchingNodeConstraint(t,n,null);a=e.length?{type:"Failure",node:f(t),shape:r,errors:e.map((function(e){return{type:"NodeConstraintViolation",shapeExpr:n}}))}:{type:"NodeConstraintTest",node:f(t),shape:r,shapeExpr:n}}else if("Shape"===n.type)a=this._validateShape(e,t,E.compile(h,n),n,r,s,i);else if("ShapeExternal"===n.type)a=this.options.validateExtern(e,t,r,s,i);else if("ShapeOr"===n.type){const o=[];a={type:"ShapeOrFailure",errors:o};for(let u=0;u<n.shapeExprs.length;++u){const c=n.shapeExprs[u],l=this._validateShapeExpr(e,t,c,r,s,i);if(!("errors"in l)){a={type:"ShapeOrResults",solution:l};break}o.push(l)}}else if("ShapeNot"===n.type){const o=this._validateShapeExpr(e,t,n.shapeExpr,r,s,i);a="errors"in o?{type:"ShapeNotResults",solution:o}:{type:"ShapeNotFailure",errors:o}}else{if("ShapeAnd"!==n.type)throw Error("expected one of Shape{Ref,And,Or} or NodeConstraint, got "+JSON.stringify(n));{const o=[];a={type:"ShapeAndResults",solutions:o};for(let u=0;u<n.shapeExprs.length;++u){const c=n.shapeExprs[u],l=this._validateShapeExpr(e,t,c,r,s,i);if("errors"in l){a={type:"ShapeAndFailure",errors:l};break}o.push(l)}}}return"known"in this&&this.known.remember(t,n,a),a},this._validateShape=function(n,r,s,i,a,o,u){const c=this;void 0===o&&(o=0);new Array(o+1).join("  ");let l=null;if("startActs"in h&&!this.semActHandler.dispatchAll(h.startActs,null,{}))return null;const p=[],d=this.indexTripleConstraints(i.expression),m=[];for(let h=0;h<1;++h){function y(e,t){return c.validate(n,e,t,o+1,u)}function _(e,t){return c._validateShapeExpr(n,e,t,a,o,u)}function g(e,t,n,r){return c._errorsMatchingShapeExpr(e,t,n,r)}const h=s.match(n,r,d,E,p,y,_,this.semActHandler,g,null);function E(s,i,a,o){const u=d[s],l={cs:r},f=new e.rdfjs.Store;x.visitTripleConstraint(u,l,v,f,{_maybeSet:()=>{}},c.schema,n,y,_,g);const p=o.length,h=f.getQuads().map(t.internalTriple);return o.push.apply(o,h),Array.apply(null,{length:h.length}).map(((e,t)=>t+p))}if("errors"in h){if(m.push({errors:h.errors}),"exhaustive"!==c.options.partition)break;continue}const b={type:"ShapeTest",node:f(r),shape:a};if(Object.keys(h).length>0&&(b.solution=h),!("semActs"in i)||this.semActHandler.dispatchAll(i.semActs,h,b))l=b;else if(m.push({errors:[{type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}]}),"exhaustive"!==c.options.partition)break}if(null===l){const e=[];l={type:"Failure",node:f(r),shape:a,errors:e.concat(1===m.length?m[0].errors:m)}}return"startActs"in h&&0===o&&(l.startActs=h.startActs),l},this._triplesMatchingShapeExpr=function(e,t,n,r,s){const i=this,a=[],o=[];return e.forEach((function(e){const u=n?e.subject:e.object,c=void 0===t?[]:i._errorsMatchingShapeExpr(u,t,r,s);0===c.length?o.push(e):-1===o.indexOf(e)&&a.push({triple:e,errors:c})})),{hits:o,misses:a}},this._errorsMatchingShapeExpr=function(e,t,n,r){const s=this;if("string"==typeof t)return n?n(e,t):[];if("NodeConstraint"===t.type)return this._errorsMatchingNodeConstraint(e,t,null);if("Shape"===t.type)return void 0===r?[]:r(e,t);if("ShapeOr"===t.type){const i=[];for(let a=0;a<t.shapeExprs.length;++a){const o=s._errorsMatchingShapeExpr(e,t.shapeExprs[a],n,r);if(0===o.length)return o;i=i.concat(o)}return i}if("ShapeAnd"===t.type)return t.shapeExprs.reduce((function(t,i,a){return t.concat(s._errorsMatchingShapeExpr(e,i,n,r,!0))}),[]);throw Error("unknown value expression type '"+t.type+"'")},this._errorsMatchingNodeConstraint=function(e,n,i){const p=[];function h(){const t=Array.prototype.join.call(arguments,"");p.push("Error validating "+e+" as "+JSON.stringify(n)+": "+t)}if("nodeKind"in n&&(-1===["iri","bnode","literal","nonliteral"].indexOf(n.nodeKind)&&h("unknown node kind '"+n.nodeKind+"'"),t.isBlank(e)?"iri"!==n.nodeKind&&"literal"!==n.nodeKind||h("blank node found when "+n.nodeKind+" expected"):t.isLiteral(e)?"literal"!==n.nodeKind&&h("literal found when "+n.nodeKind+" expected"):"bnode"!==n.nodeKind&&"literal"!==n.nodeKind||h("iri found when "+n.nodeKind+" expected")),n.datatype&&n.values&&h("found both datatype and values in "+tripleConstraint),n.datatype&&(t.isLiteral(e)?t.getLiteralType(e)!==n.datatype&&h("mismatched datatype: "+t.getLiteralType(e)+" !== "+n.datatype):h("mismatched datatype: "+e+" is not a literal with datatype "+n.datatype)),n.values&&(t.isLiteral(e)&&n.values.reduce(((t,n)=>{if(t)return!0;if("object"!=typeof n||!("value"in n))return!1;const r=f(e);return n.value===r.value&&n.type===r.type&&n.language===r.language}),!1)||-1!==n.values.indexOf(e)||n.values.some((function(t){if("object"==typeof t&&!("value"in t)){if(d(t,"type","StemRange"),"object"==typeof t.stem)d(t.stem,"type","Wildcard");else if(!e.startsWith(t.stem))return!1;return!t.exclusions||!t.exclusions.some((function(t){return"object"==typeof t?(d(t,"type","Stem"),e.startsWith(t.stem)):e===t}))}}))||h("value "+e+" not found in set "+n.values)),"pattern"in n){const r=new RegExp(n.pattern);(m=e,t.isIRI(m)?m:t.isLiteral(m)?t.getLiteralValue(m):m.substr(2)).match(r)||h("value "+e+" did not match pattern "+n.pattern)}var m;const y=t.isLiteral(e)?t.getLiteralValue(e):t.isBlank(e)?e.substring(2):e,x=t.isLiteral(e)?t.getLiteralType(e):null,_=-1!==s.indexOf(x)?r+"integer":-1!==a.indexOf(x)?x:void 0;return Object.keys(u).forEach((function(t){t in n&&!u[t](y,n[t])&&h("facet violation: expected "+t+" of "+n[t]+" but got "+e)})),Object.keys(c).forEach((function(t){t in n&&(_?c[t](o[_](y,h),n[t])||h("facet violation: expected "+t+" of "+n[t]+" but got "+e):h("facet violation: numeric facet "+t+" can't apply to "+e))})),Object.keys(l).forEach((function(t){t in n&&(_===r+"integer"||_===r+"decimal"?l[t](""+o[_](y,h),n[t])||h("facet violation: expected "+t+" of "+n[t]+" but got "+e):h("facet violation: numeric facet "+t+" can't apply to "+e))})),p},this.semActHandler={handlers:{},results:{},register:function(e,t){this.handlers[e]=t},dispatchAll:function(e,t,n){const r=this;return e.reduce((function(e,s){if(e&&s.name in r.handlers){const i="code"in s?s.code:g.options.semActs[s.name],a="extensions"in n&&s.name in n.extensions,o=a?n.extensions[s.name]:{};return e=e&&r.handlers[s.name].dispatch(i,t,o),!a&&Object.keys(o).length>0&&("extensions"in n||(n.extensions={}),n.extensions[s.name]=o),e}return e}),!0)}}},options:{or:{oneOf:"exactly one disjunct must pass",someOf:"one or more disjuncts must pass",firstOf:"disjunct evaluation stops after one passes"},partition:{greedy:"each triple constraint consumes all triples matching predicate and object",exhaustive:"search all mappings of triples to triple constriant"}}}}},991:(e,t,n)=>{const r=function(){const e=n(118),t="<span class='keyword' title='Split'>|</span>",r="<span class='keyword' title='Repeat'>×</span>",s="<span class='keyword' title='Match'>␃</span>";function i(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}return{name:"eval-simple-1err",description:"simple regular expression engine with n out states",compile:function(n,a){const o=a.expression;return function(){const e=[],i=f(s,[]);let a=i;let c;if(o){const e=l(o,[]);p(e.tail,i),a=e.start}return{algorithm:"rbenx",end:i,states:e,start:a,match:u};function l(s,i){let a,o,u;function h(t,n){return null!=s.min&&1!==s.min||null!=s.max&&1!==s.max?(a=f(r,[t]),e[a].expr=s,e[a].min="min"in s?s.min:1,e[a].max="max"in s?-1===s.max?1/0:s.max:1,p(n,a),{start:a,tail:[a]}):{start:t,tail:n}}if("TripleConstraint"===s.type)return a=f(s,[]),e[a].stack=i,{start:a,tail:[a]};if("OneOf"===s.type)return u=[],o=[],s.expressions.forEach((function(e,t){c=l(e,i.concat({c:s,e:t})),o.push(c.start),u=u.concat(c.tail)})),a=f(t,o),e[a].expr=s,h(a,u);if("EachOf"===s.type)return s.expressions.forEach((function(e,t){c=l(e,i.concat({c:s,e:t})),0===t?a=c.start:p(u,c.start),u=c.tail})),h(a,u);if("Inclusion"===s.type){return l(n.productions[s.include],i)}runtimeError("unexpected expr type: "+s.type)}function f(t,n,r){const s=e.length;return e.push({c:t,outs:n}),r&&(e[s].negated=!0),s}function p(t,n){t.forEach((t=>{e[t].outs.push(n)}))}}();function u(s,a,o,u,l,f,p,h,d,m){const y=this;let x=[],_=[];function g(e,t){const n=Object.keys(t).map((e=>e+":"+t[e])).join(",");return n.length?e+"-"+n:""+e}function E(e,n,s,i){i=i||[];const a=g(n,s.repeats);if(-1!==i.indexOf(a))return;i.push(a);const o=y.states[n];if(o.c===t)return o.outs.reduce(((t,n,r)=>t.concat(E(e,n,s,i))),[]);if(o.c===r){const t=[];n in s.repeats||(s.repeats[n]=0);const r=s.repeats[n];return r<o.max&&(t=t.concat(E(e,o.outs[0],function(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(n[r]=parseInt(r)==t?e.repeats[r]+1:e.repeats[r],n)),{});return{state:e.state,repeats:n,matched:e.matched,avail:e.avail.slice(),stack:e.stack}}(s,n),i))),r>=o.min&&r<=o.max&&(t=t.concat(E(e,o.outs[1],function(e,t){const n=Object.keys(e.repeats).reduce(((n,r)=>(parseInt(r)!==t&&(n[r]=e.repeats[r]),n)),{});return{state:e.state,repeats:n,matched:e.matched,avail:e.avail.slice(),stack:e.stack}}(s,n),i))),t}return[e.push({state:n,repeats:s.repeats,avail:s.avail.map((e=>e.slice())),stack:s.stack,matched:s.matched,errors:s.errors})-1]}if(1===y.states.length)return c([],o,l,f,p,h,d);let b=null;for(E(x,this.start,{repeats:{},avail:[],matched:[],stack:[],errors:[]});x.length;){_.length=0,m&&m.push({threads:[]});for(let e=0;e<x.length;++e){const t=x[e];if(t.state===y.end)continue;const n=y.states[t.state],s=_.length,i=o.indexOf(n.c),a="min"in n.c?n.c.min:1,c="max"in n.c?-1===n.c.max?1/0:n.c.max:1;"negated"in n.c&&n.c.negated&&(a=c=0),void 0===t.avail[i]&&(t.avail[i]=u(i,a,c,l));const f=t.avail[i].splice(0,c);if(f.length>=a)do{const e=y.states.map((e=>e.c===r?e.expr:null)),s=n.stack.map((n=>{let r=t.repeats[e.indexOf(n.c)];return void 0===r?r=0:r-=1,{c:n.c,e:n.e,i:r}})),i={c:n.c,triples:f,stack:s};t.matched=t.matched.concat(i),n.outs.forEach((e=>{E(_,e,t)}))}while(t.avail[i].length>0&&f.length<c&&(f.push(t.avail[i].shift()),1));m&&m[m.length-1].threads.push({state:x[e].state,to:_.slice(s).map((e=>g(e.state,e.repeats)))})}if(0===_.length&&null===b)return v(A(x,y.states));const e=x;x=_,_=e;const t=x.reduce(((e,t)=>null!==e?e:t.state===y.end?t:null),null);t&&(b=t)}if(null===b)return v(A(x,y.states));function v(e){return{type:"Failure",node:a,errors:e}}function A(t,r){const s=r[r.length-1];return t.map((t=>{const r=i({},y.states[t.state].c.valueExpr);if("reference"in r){const t=r.reference;e.isBlank(t)&&(r.reference=n.shapes[t])}return i({type:s.c.negated?"NegatedProperty":t.state===y.end?"ExcessTripleViolation":"MissingProperty",property:s.c.predicate},Object.keys(r).length>0?{valueExpr:r}:{})}))}return"errors"in b.matched?b.matched:c(b.matched,o,l,f,p,h,d)}function c(t,n,r,s,i,o,u){let c=[];const l=[],f=[],p=t.reduce(((t,n)=>{let a,p=0,h=t;for(;p<c.length&&n.stack[p].c===c[p].c&&n.stack[p].i===c[p].i&&n.stack[p].e===c[p].e;)h=h.solutions[c[p].i].expressions[c[p].e],++p;for(;p<n.stack.length;){if(p>=c.length&&c.push({}),n.stack[p].c!==c[p].c){if(a=[],h.type="EachOf"===n.stack[p].c.type?"EachOfSolutions":"OneOfSolutions",h.solutions=a,"min"in n.stack[p].c&&(h.min=n.stack[p].c.min),"max"in n.stack[p].c&&(h.max=n.stack[p].c.max),"annotations"in n.stack[p].c&&(h.annotations=n.stack[p].c.annotations),"semActs"in n.stack[p].c&&(h.semActs=n.stack[p].c.semActs),h=a,c[p].i=null,"semActs"in n.stack[p].c&&!o.dispatchAll(n.stack[p].c.semActs,"???",h))throw{type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}}else h=h.solutions;if(n.stack[p].i!==c[p].i?(a=[],h[n.stack[p].i]={type:"EachOf"===n.stack[p].c.type?"EachOfSolution":"OneOfSolution",expressions:a},h=a,c[p].e=null):h=h[c[p].i].expressions,n.stack[p].e===c[p].e)throw"how'd we get here?";a={},h[n.stack[p].e]=a,n.stack[p].e>0&&void 0===h[n.stack[p].e-1]&&-1===f.indexOf(h)&&f.push(h),h=a,c.length=p+1,++p}return h.type="TripleConstraintSolutions","min"in n.c&&(h.min=n.c.min),"max"in n.c&&(h.max=n.c.max),h.predicate=n.c.predicate,"valueExpr"in n.c&&(h.valueExpr=n.c.valueExpr),"productionLabel"in n.c&&(h.productionLabel=n.c.productionLabel),h.solutions=n.triples.map((t=>{const a=r[t],c={type:"TestedTriple",subject:a.subject,predicate:a.predicate,object:function(t){if('"'!==t[0])return t;const n={value:e.getLiteralValue(t)},r=e.getLiteralType(t);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=e.getLiteralLanguage(t);s&&(n.language=s);return n}(a.object)};function f(t,n,r){const s=r(t,n);if("errors"in s){const r={type:"ReferenceError",focus:t,shape:n,errors:s};return"string"==typeof shapeLabel&&e.isBlank(shapeLabel)&&(r.referencedShape=n),[r]}return("solution"in s&&0!==Object.keys(s.solution).length||"Recursion"===s.type)&&(c.referenced=s),[]}return"valueExpr"in h&&[].push.apply(l,u(h.inverse?a.subject:a.object,h.valueExpr,(function(e,t){return f(e,t,s)}),(function(e,t){return f(e,t,i)}))),0===l.length&&"semActs"in n.c&&!o.dispatchAll(n.c.semActs,a,c)&&l.push({type:"SemActFailure",errors:[{type:"UntrackedSemActFailure"}]}),c})),"annotations"in n.c&&(h.annotations=n.c.annotations),"semActs"in n.c&&(h.semActs=n.c.semActs),c=n.stack.slice(),t}),{});return l.length?{type:"SemActFailure",errors:l}:(f.forEach((e=>{for(let t=0;t<e.length;++t)null!==e[t]&&void 0!==e[t]||e.splice(t--,1)})),"semActs"in a&&(p.semActs=a.semActs),p)}}}}();e.exports=r},961:e=>{const t={collapseSpaces:function(e){return e.replace(/  +/g," ")},trimQuotes:function(e){return void 0===e||e.length<2||'"'!==e[0]&&"'"!==e[0]||e[0]!==e[e.length-1]?e:e.substring(1,e.length-1)},unescapeMetaChars:function(e){return e.replace(/\\([\/^$])/g,"$1")}};e.exports=t},386:(e,t,n)=>{const r=function(){const e=n(445),t=n(521);n(961);function r(e){if(void 0===e)throw Error("Invalid extension function: "+e+"!");const t=(e=e.trim()).indexOf("(",0),n=e.lastIndexOf(")");if(t<2||n<4||n<=t+1||n!=e.length-1)throw Error("Invalid extension function: "+e+"!");return{name:e.substring(0,t),args:e.substring(t+1,n)}}return{lift:function(n,s,i){const a=r(n);switch(a.name){case"hashmap":return e.lift(n,s,i,a.args);case"regex":return t.lift(n,s,i,a.args);case"test":return n;default:throw Error("Unknown extension: "+n+"!")}},lower:function(n,s,i){const a=r(n);switch(a.name){case"hashmap":return e.lower(n,s,i,a.args);case"regex":return t.lower(n,s,i,a.args);case"test":return n;default:throw Error("Unknown extension: "+n+"!")}}}}();e.exports=r},445:(e,t,n)=>{const r=function(){const e=n(961);function t(e,t){if(void 0===t||0===t.length)throw Error("Hashmap extension requires a variable name and map as arguments, but found none!");const n=/^[ ]*([\w:<>]+)[ ]*,[ ]*({.*)$/.exec(t);if(null===n||n.length<3)throw Error("Hashmap extension requires a variable name and map as arguments, but found: "+e+"!");const r=n[1],s=n[2];let i;try{if(i=JSON.parse(s),0===Object.keys(i).length)throw Error("Empty hashmap!")}catch(t){throw Error("Hashmap extension unable to parse map in "+e+"!"+t.message)}const a=Object.values(i);if(a.length!=[...new Set(a)].length)throw Error("Hashmap extension requires unique key/value pairs!");return{varName:r,hash:i}}function r(e,t){const n=e.match(/^([\w]+):(.*)$/);if(null!==n&&3==n.length){const r=n[1],s=n[2];if(0===r.length||0===s.length)throw Error("Hashmap extension given invalid target variable name "+e);if(!(r in t))throw Error("Hashmap extension given undefined variable prefix "+r);expandedName=t[r]+s}else expandedName=e;return expandedName}return{lift:function(n,s,i,a){const o=t(n,a),u=r(o.varName,i),c=e.trimQuotes(s);if(0===c.length)throw Error("Hashmap extension has no input");return{[u]:o.hash[c]}},lower:function(n,s,i,a){const o=t(n,a),u=r(o.varName,i),c=e.trimQuotes(s.get(u));if(void 0===c)throw Error("Unable to find mapped value for "+o.varName);const l=function(e,t){const n=Object.keys(e).find((n=>t===e[n]));if(!n)throw Error("Hashmap extension was unable to invert the value "+t+" with map "+JSON.stringify(e,{depth:null})+"!");return n}(o.hash,c);return 0!==l.length?e.unescapeMetaChars(e.collapseSpaces(l)):l}}}();e.exports=r},521:(e,t,n)=>{const r=function(){const e=n(961),t="(\\?<(?:[a-zA-Z:]+|<[^>]+>)>)";function r(t,n,r){const s=function(e,t){const n=e.match(/^ *(?:<([^>]*)>|([^:]*):([^ ]*)) *$/);if(null===n)throw Error('variable "'+e+'" did not match expected pattern!');let r;if(n[1])r=n[1];else{if(!(n[2]in t))throw Error("Unknown prefix "+n[2]+' in "'+e+'"!');r=t[n[2]]+n[3]}return r}(e.unescapeMetaChars(t.substr(2,t.length-3)),r);if(s in n)throw Error("unable to process prefixes in "+s);return n.push(s),s}function s(e){if(/^\s*\/.*\/\s*$/.test(e)&&(e=/^\s*\/(.*)\/\s*$/.exec(e)[1]).length<1)throw Error(mapDirective+" is missing the required regex pattern");return e}return{lift:function(e,n,i,a){a=s(a);const o=[],u=a.replace(RegExp(t,"g"),(function(e,t,n,s){return r(t,o,i),""}));if(0===o.length)throw Error("Found no capture variable in "+e+"!");let c;try{c=n.match(RegExp(u))}catch(t){throw Error("Error pattern matching "+e+" with "+n+": "+t.message)}if(!c)throw Error(e+' found no match for input "'+n+'"!');const l={};for(let e=1;e<c.length;++e)l[o[e-1]]=c[e];return l},lower:function(n,i,a,o){o=s(o);const u=[];let c=!1,l=o.replace(RegExp("\\("+t+"[^)]+\\)","g"),(function(t,s,o,l){c=!0;const f=r(s,u,a),p=i.get(f);if(void 0===p)throw Error("Unable to process "+n+' because variable "'+f+'" was not found!');return e.trimQuotes(p)}));if(!c)throw Error("Found no capture variable in "+n+"!");return l=e.collapseSpaces(l),e.unescapeMetaChars(l)}}}();e.exports=r},279:(e,t,n)=>{e.exports=function(e){const t=n(386),r=(n(670),n(713).default),s=n(865)(e),i="http://shex.io/extensions/Map/#",a=/^ *(?:<([^>]*)>|([^:]*):([^ ]*)) *$/;function o(e){if("object"!=typeof e)return e;const t='"'+e.value+'"';return"language"in e?t+"@"+e.language:"type"in e?t+"^^"+e.type:t}function u(e,t){const n=/(?:^|"\^\^)([^:\/#"'\^_]*):[^\/]*$/.exec(e);let r,s,i;return n&&(r=n[1],s=t[r],i=n.index),void 0===s?e:0===i?s+e.substr(r.length+1):e.substr(0,i+3)+s+e.substr(i+r.length+4)}return{register:function(n,s){if(void 0===s||!("ShExTerm"in s))throw Error("SemAct extensions must be called with register(validator, {ShExTerm, ...)");const c="_prefixes"in n.schema?n.schema._prefixes:{};return n.semActHandler.results[i]={},n.semActHandler.register(i,{dispatch:function(e,r,s){function o(e){const t=Error(e);throw Error.captureStackTrace(t,o),t}const u=function(t,r){if(!t)throw Error("Invocation error: "+i+' code "'+e+"\" didn't match "+a);const u=function(t){return"string"==typeof t?t:t[1]?t[1]:t[2]in c?c[t[2]]+t[3]:o("unknown prefix "+t[2]+' in "'+e+'".')}(t),l=r;n.semActHandler.results[i][u]=l,s[u]=l};if(/.*[(].*[)].*$/.test(e)){const n=t.lift(e,r.object,c);for(key in n)u(key,n[key])}else{u(e.match(a),r.node||r.object)}return!0}}),{results:n.semActHandler.results[i],binder:function(e){let t=[];const n={};function r(e,t){for(let n in e)Array.isArray(e[n])?r(e[n],t):Object.keys(t).forEach((r=>{if(r in e[n])throw Error("unexpected duplicate key: "+r+" in "+JSON.stringify(e[n]));e[n][r]=t[r]}))}return function e(t){const n=[],s=[],i=Object.keys(t).reduce(((r,i)=>{let a=null;return"object"!=typeof t[i]||"value"in t[i]?a=function(e,t){const n={};return n[e]=t,n}(i,1):(a=e(t[i]),Array.isArray(t[i])?n.push(i):s.push(i)),function(e,t){const n=Object.assign({},e);return Object.keys(t).reduce(((e,n)=>{const r=n in t?t[n]:1;return e[n]=n in e?e[n]+r:r,e}),n)}(r,a)}),{});n.length>0&&(s.forEach((e=>{const s=Object.keys(t[e]).filter((e=>1===i[e]));if(s.length){const i=s.reduce(((n,r)=>(n[r]=t[e][r],n)),{});n.forEach((e=>{r(t[e],i)}))}})),s.reverse(),s.forEach((e=>{t.splice(e,1)})));return i}(e),e=Array.isArray(e)?function e(t){const n=t.reduce(((t,n)=>t.concat(Array.isArray(n)?e(n):n)),[]);return 1===n.length?n[0]:n}(e):[e],{get:function(r){if(null===t)return;if(r in n)return n[r];const s=t.slice();let i=u(s);for(;!(r in i);){let e;for(;!Array.isArray(i);)e=s.pop(),i=o(s);if(i.length===e+1)return void(t=null);s.push(e+1),i=u(s)}t=s.slice();const a=i[r];return delete i[r],a;function o(t){return t.reduce((function(e,t){return e[t]}),e)}function u(e){for(;Array.isArray(o(e));)e.push(0);return o(e)}}}},trivialMaterializer:function(t,r){let i=0;const a=t._index||s.ShExUtil.index(t);return r=r||function(){return"_:b"+i++},{materialize:function(i,o,u,c){u=u&&u!==n.start?u:t.start,c=c||new e.rdfjs.Store;const f={cs:o||r()},p=s.ShExUtil.Visitor(),h=p.visitShapeRef;return p.visitShapeRef=function(e){return this.visitShapeExpr(a.shapeExprs[e],e),h.call(p,e)},p.visitValueRef=function(e){return this.visitExpression(t.shapes[e],e),this._visitValue(e)},p.visitTripleConstraint=function(e){l(e,f,r,c,this,t,i)},p.visitShapeExpr(u,"_: -start-"),c}}},visitTripleConstraint:l};function l(e,n,c,l,f,p,h,d,m,y){function x(e,t,n){return l.addQuad(s.ShExTerm.externalTriple({subject:e,predicate:t,object:n},r)),e}const _=(e.semActs||[]).filter((function(e){return e.name===i}));if(_.length)_.forEach((function(r){const s=r.code,i=s.match(a);let c;if(i){const e=i[1]?i[1]:u(i[2]+":"+i[3],p._prefixes),t=o(h.get(e));void 0!==t&&(c=t)}void 0===c&&/[ a-zA-Z0-9]+\(/.test(s)&&(c=t.lower(s,h,p.prefixes)),void 0===c||(e.inverse?x(c,e.predicate,n.cs):x(n.cs,e.predicate,c))}));else if("string"!=typeof e.valueExpr&&"values"in e.valueExpr&&1===e.valueExpr.values.length)e.inverse?x(e.valueExpr.values[0],e.predicate,n.cs):x(n.cs,e.predicate,o(e.valueExpr.values[0]));else{const t=n.cs;let r="max"in e?-1===e.max?1/0:e.max:1;r>50&&(r=50),d||(r=1);for(let s=0;s<r;++s){if(n.cs=c(),d){if("errors"in y(n.cs,e.valueExpr,d,m))break}e.inverse?x(n.cs,e.predicate,t):x(t,e.predicate,n.cs)}f._maybeSet(e,{type:"TripleConstraint"},"TripleConstraint",["inverse","negated","predicate","valueExpr","min","max","annotations","semActs"]),n.cs=t}}},done:function(e){0===Object.keys(e.semActHandler.results[i]).length&&delete e.semActHandler.results[i]},materializer:s,url:i,extension:{hashmap:n(445),regex:n(521)},extensions:n(386),utils:n(961)}}},709:(e,t,n)=>{ShExWebApp=function(){const e=n(261);return Object.assign({},{ShExTerm:n(118),Util:n(443),Validator:n(457),Writer:n(95),Api:n(237),Parser:n(931),ShapeMap:e,ShapeMapParser:e.Parser,Map:n(279)})}(),e.exports=ShExWebApp},839:(e,t,n)=>{const r=n(14),s="http://www.w3.org/2001/XMLSchema#",i=s+"boolean",a=/^[a-z][a-z0-9+.-]*:/i,o=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,u=/(?:^|\/)\.\.?(?:$|[\/#?])/;function c(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function l(e){if(!u.test(e))return e;const t="",n=e.length,r=-1,s=-1,i=0,a="/";for(;r<n;){switch(a){case":":if(s<0&&"/"===e[++r]&&"/"===e[++r])for(;(s=r+1)<n&&"/"!==e[s];)r=s;break;case"?":case"#":r=n;break;case"/":if("."===e[r+1])switch(a=e[1+ ++r],a){case"/":t+=e.substring(i,r-1),i=r+1;break;case void 0:case"?":case"#":return t+e.substring(i,r)+e.substr(r+1);case".":if(a=e[1+ ++r],void 0===a||"/"===a||"?"===a||"#"===a){if(t+=e.substring(i,r-2),(i=t.lastIndexOf("/"))>=s&&(t=t.substr(0,i)),"/"!==a)return t+"/"+e.substr(r+1);i=r+1}}}a=e[++r]}return t+e.substring(i)}function f(){const e={};for(let t=0;t<arguments.length;t+=2)e[arguments[t]]=arguments[t+1];return e}function p(e,t){return f("@value",e,"@type",t)}O._setSchemaBase=function(e){e||(e=null),(O._schemaBase=e)&&(O._schemaBasePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(o),O._schemaBaseRoot=e[0],O._schemaBaseScheme=e[1])},O._setDataBase=function(e){e||(e=null),(O._dataBase=e)&&(O._dataBasePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(o),O._dataBaseRoot=e[0],O._dataBaseScheme=e[1])};const h=0;let d;O._resetBlanks=function(){h=0},O.reset=function(){O._prefixes=O._imports=O.valueExprDefns=O.shapes=O.productions=O.start=O.startActs=null,O._schemaBase=O._schemaBasePath=O._schemaBaseRoot=O._schemaBaseIRIScheme=null},O._setFileName=function(e){d=e};const m={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},y={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"};function x(e,t){return f("@value",b(e=e.substring(t,e.length-t),m))}function _(e){throw O.reset(),new Error(e)}function g(e,t){const n=e.indexOf(":");return E(t,e.substr(0,n))+b(e.substr(n+1),y)}function E(e,t){return t in e||_("Parse error; unknown prefix: "+t),e[t]}function b(e,t){const n=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g;try{return e=e.replace(n,(function(e,n,r,s){let i;if(n){if(i=parseInt(n,16),isNaN(i))throw new Error;return String.fromCharCode(i)}if(r){if(i=parseInt(r,16),isNaN(i))throw new Error;return i<65535?String.fromCharCode(i):String.fromCharCode(55296+((i-=65536)>>10),56320+(1023&i))}{const e=t[s];if(!e)throw new Error("no replacement found for '"+s+"'");return e}}))}catch(e){return console.warn(e),""}}const{JisonParser:v,o:A}=n(41),{JisonLexer:S}=n(752);function O(e={},t=new w(e)){const n=[1,7],s=[1,16],o=[1,11],u=[1,14],h=[1,25],d=[1,24],m=[1,21],y=[1,22],_=[1,23],S=[1,28],T=[1,26],I=[1,27],F=[1,29],N=[1,12],k=[1,13],L=[1,15],R=[4,9],j=[16,19,20,21],C=[2,25],$=[16,19,20,21,37],D=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],P=[4,9,16,19,20,21,37,43,74,75],M=[4,9,43],Q=[29,46,80,81,82],B=[4,9,42,43],G=[1,59],V=[46,79,80,81,82],U=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],J=[1,94],z=[1,85],X=[1,86],H=[1,87],q=[1,90],Z=[1,91],K=[1,92],W=[1,93],Y=[1,95],ee=[33,48,49,50,53,54,55,56,63],te=[4,9,37,65],ne=[1,99],re=[9,37],se=[9,65];v.call(this,e,t),this.symbols_={error:2,shapeMap:3,EOF:4,pair:5,Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star:6,QGT_COMMA_E_Opt:7,O_QGT_COMMA_E_S_Qpair_E_C:8,GT_COMMA:9,nodeSelector:10,statusAndShape:11,Qreason_E_Opt:12,QjsonAttributes_E_Opt:13,reason:14,jsonAttributes:15,GT_AT:16,Qstatus_E_Opt:17,shapeSelector:18,ATSTART:19,ATPNAME_NS:20,ATPNAME_LN:21,status:22,objectTerm:23,triplePattern:24,IT_SPARQL:25,string:26,nodeIri:27,shapeIri:28,START:29,subjectTerm:30,BLANK_NODE_LABEL:31,literal:32,GT_LCURLEY:33,IT_FOCUS:34,nodePredicate:35,O_QobjectTerm_E_Or_QIT___E_C:36,GT_RCURLEY:37,O_QsubjectTerm_E_Or_QIT___E_C:38,IT__:39,GT_NOT:40,GT_OPT:41,GT_DIVIDE:42,GT_DOLLAR:43,O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C:44,jsonValue:45,APPINFO_COLON:46,APPINFO_SPACE_COLON:47,IT_false:48,IT_null:49,IT_true:50,jsonObject:51,jsonArray:52,INTEGER:53,DECIMAL:54,DOUBLE:55,STRING_LITERAL2:56,Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt:57,O_QGT_COMMA_E_S_QjsonMember_E_C:58,jsonMember:59,Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star:60,O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C:61,STRING_LITERAL2_COLON:62,GT_LBRACKET:63,Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt:64,GT_RBRACKET:65,O_QGT_COMMA_E_S_QjsonValue_E_C:66,Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star:67,O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C:68,rdfLiteral:69,numericLiteral:70,booleanLiteral:71,Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt:72,O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C:73,LANGTAG:74,GT_DTYPE:75,STRING_LITERAL1:76,STRING_LITERAL_LONG1:77,STRING_LITERAL_LONG2:78,IT_a:79,IRIREF:80,PNAME_LN:81,PNAME_NS:82,$accept:0,$end:1},this.terminals_={2:"error",4:"EOF",9:"GT_COMMA",16:"GT_AT",19:"ATSTART",20:"ATPNAME_NS",21:"ATPNAME_LN",25:"IT_SPARQL",29:"START",31:"BLANK_NODE_LABEL",33:"GT_LCURLEY",34:"IT_FOCUS",37:"GT_RCURLEY",39:"IT__",40:"GT_NOT",41:"GT_OPT",42:"GT_DIVIDE",43:"GT_DOLLAR",46:"APPINFO_COLON",47:"APPINFO_SPACE_COLON",48:"IT_false",49:"IT_null",50:"IT_true",53:"INTEGER",54:"DECIMAL",55:"DOUBLE",56:"STRING_LITERAL2",62:"STRING_LITERAL2_COLON",63:"GT_LBRACKET",65:"GT_RBRACKET",74:"LANGTAG",75:"GT_DTYPE",76:"STRING_LITERAL1",77:"STRING_LITERAL_LONG1",78:"STRING_LITERAL_LONG2",79:"IT_a",80:"IRIREF",81:"PNAME_LN",82:"PNAME_NS"},this.productions_=[0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],this.table=[{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:n,26:20,27:8,30:9,31:s,32:10,33:o,46:u,48:h,50:d,53:m,54:y,55:_,56:S,69:17,70:18,71:19,76:T,77:I,78:F,80:N,81:k,82:L},{1:[3]},{1:[2,1]},A(R,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},A(j,[2,19]),A(j,[2,20]),{26:36,56:S,76:T,77:I,78:F},A(j,C,{26:37,56:S,76:T,77:I,78:F}),A($,[2,27]),A($,[2,28]),{27:42,30:40,31:s,34:[1,38],38:39,39:[1,41],46:u,80:N,81:k,82:L},A(D,[2,84]),A(D,[2,85]),A(D,[2,86]),A(D,[2,87]),A([16,19,20,21,37,46,79,80,81,82],[2,26]),A($,[2,65]),A($,[2,66]),A($,[2,67]),A($,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),A($,[2,68]),A($,[2,69]),A($,[2,70]),A($,[2,76]),A($,[2,77]),A(P,[2,78]),A(P,[2,79]),A(P,[2,80]),A(P,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},A(M,[2,9],{12:50,14:51,42:[1,52]}),A(Q,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),A(B,[2,14]),A(B,[2,15]),A(B,[2,16]),A(j,[2,21]),A(j,[2,22]),{27:58,35:57,46:u,79:G,80:N,81:k,82:L},{27:58,35:60,46:u,79:G,80:N,81:k,82:L},A(V,[2,33]),A(V,[2,34]),A([37,46,79,80,81,82],C),A($,[2,71]),A($,[2,75]),A($,[2,72]),{27:61,46:u,80:N,81:k,82:L},{4:[1,62]},A(R,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:n,26:20,27:8,30:9,31:s,32:10,33:o,46:u,48:h,50:d,53:m,54:y,55:_,56:S,69:17,70:18,71:19,76:T,77:I,78:F,80:N,81:k,82:L},A(R,[2,11],{13:64,15:65,43:[1,66]}),A(M,[2,10]),{26:67,56:S,76:T,77:I,78:F},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},A(Q,[2,18]),A(Q,[2,35]),A(Q,[2,36]),{23:76,26:20,27:42,30:9,31:s,32:10,36:75,39:[1,77],46:u,48:h,50:d,53:m,54:y,55:_,56:S,69:17,70:18,71:19,76:T,77:I,78:F,80:N,81:k,82:L},A(U,[2,82]),A(U,[2,83]),{34:[1,78]},A($,[2,73]),{1:[2,2]},A(R,[2,3]),A(R,[2,8]),A(R,[2,12]),{44:79,46:[1,80],47:[1,81]},A(M,[2,37]),A(B,[2,13]),A(B,[2,23]),A(B,[2,24]),A(B,[2,88]),A(B,[2,89]),A(B,[2,90]),A(B,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:J,45:84,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y},A(ee,[2,39]),A(ee,[2,40]),A(j,[2,29]),A(j,[2,30]),A(R,[2,38]),A(te,[2,41]),A(te,[2,42]),A(te,[2,43]),A(te,[2,44]),A(te,[2,45]),A(te,[2,46]),A(te,[2,47]),A(te,[2,48]),A(te,[2,49]),{37:[2,55],57:96,59:98,61:97,62:ne},{33:J,45:102,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},A(re,[2,52],{60:104}),{33:J,45:105,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y},{65:[1,106]},{65:[2,64]},A(se,[2,60],{67:107}),A(te,[2,50]),{9:[1,109],37:[2,54],58:108},A(re,[2,57]),A(te,[2,58]),{9:[1,111],65:[2,62],66:110},A(re,[2,53]),{59:112,62:ne},A(se,[2,61]),{33:J,45:113,48:z,49:X,50:H,51:88,52:89,53:q,54:Z,55:K,56:W,63:Y},A(re,[2,51]),A(se,[2,59])],this.defaultActions={2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},this.performAction=function(e,t,n,s,o,u,h){const d=u.length-1;switch(o){case 1:return[];case 2:return[u[d-3]].concat(u[d-2]);case 3:case 51:case 59:this.$=u[d];break;case 4:case 60:case 63:this.$=[];break;case 5:case 61:this.$=u[d-1].concat(u[d]);break;case 8:this.$=c({node:u[d-3]},u[d-2],u[d-1],u[d]);break;case 9:case 11:case 52:case 55:case 74:this.$={};break;case 13:this.$=c({shape:u[d]},u[d-1]);break;case 14:this.$={shape:r.start};break;case 15:u[d]=u[d].substr(1,u[d].length-1),this.$={shape:E(O._schemaPrefixes,u[d].substr(0,u[d].length-1))};break;case 16:u[d]=u[d].substr(1,u[d].length-1);const e=u[d].indexOf(":");this.$={shape:E(O._schemaPrefixes,u[d].substr(0,e))+u[d].substr(e+1)};break;case 17:this.$={status:"conformant"};break;case 18:this.$={status:u[d]};break;case 21:this.$={type:"Extension",language:"http://www.w3.org/ns/shex#Extensions-sparql",lexical:u[d]["@value"]};break;case 22:this.$={type:"Extension",language:u[d-1],lexical:u[d]["@value"]};break;case 24:this.$=r.start;break;case 29:this.$={type:"TriplePattern",subject:r.focus,predicate:u[d-2],object:u[d-1]};break;case 30:this.$={type:"TriplePattern",subject:u[d-3],predicate:u[d-2],object:r.focus};break;case 32:case 34:case 42:this.$=null;break;case 35:this.$="nonconformant";break;case 36:this.$="unknown";break;case 37:this.$={reason:u[d]};break;case 38:this.$={appinfo:u[d]};break;case 41:this.$=!1;break;case 43:this.$=!0;break;case 46:case 47:case 48:this.$=parseFloat(u[d]);break;case 49:this.$=x(u[d],1)["@value"];break;case 50:case 58:this.$=u[d-1];break;case 53:case 54:case 71:this.$=c(u[d-1],u[d]);break;case 57:this.$={};const t=u[d-1].substr(0,u[d-1].length-1).trim();this.$[x(t,1)["@value"]]=u[d];break;case 62:this.$=[u[d-1]].concat(u[d]);break;case 68:this.$=p(u[d],"http://www.w3.org/2001/XMLSchema#integer");break;case 69:this.$=p(u[d],"http://www.w3.org/2001/XMLSchema#decimal");break;case 70:this.$=p(u[d],"http://www.w3.org/2001/XMLSchema#double");break;case 72:this.$=f("@language",u[d].substr(1).toLowerCase());break;case 73:this.$=f("@type",u[d]);break;case 76:this.$=p("true",i);break;case 77:this.$=p("false",i);break;case 78:case 80:this.$=x(u[d],1);break;case 79:case 81:this.$=x(u[d],3);break;case 83:this.$="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";break;case 84:const n=b(u[d].slice(1,-1),{});this.$=null===O._dataBase||a.test(n)?n:function(e){switch(e[0]){case void 0:return O._dataBase;case"#":return O._dataBase+e;case"?":return O._dataBase.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?O._dataBaseScheme:O._dataBaseRoot)+l(e);default:return l(O._dataBasePath+e)}}(n);break;case 85:case 86:this.$=g(u[d],O._dataPrefixes);break;case 87:this.$=E(O._dataPrefixes,u[d].substr(0,u[d].length-1));break;case 88:const s=b(u[d].slice(1,-1),{});this.$=null===O._schemaBase||a.test(s)?s:function(e){switch(e[0]){case void 0:return O._schemaBase;case"#":return O._schemaBase+e;case"?":return O._schemaBase.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?O._schemaBaseScheme:O._schemaBaseRoot)+l(e);default:return l(O._schemaBasePath+e)}}(s);break;case 89:case 90:this.$=g(u[d],O._schemaPrefixes);break;case 91:this.$=E(O._schemaPrefixes,u[d].substr(0,u[d].length-1))}}}function w(e={}){this.options={moduleName:"ShapeMapJison"},S.call(this,e),this.rules=[/^(?:\s+|(#[^\u000a\u000d]*|\/\*([^*]|\*([^/]|\\\/))*\*\/))/,/^(?:(appinfo[\u0020\u000A\u0009]+:))/,/^(?:("([^\u0022\u005C\u000A\u000D]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"[\u0020\u000A\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\u0000-\u0020<>\"{}|^`\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|[0-9])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"))/,/^(?:a\b)/,/^(?:,)/,/^(?:\{)/,/^(?:\})/,/^(?:@)/,/^(?:!)/,/^(?:\?)/,/^(?:\/)/,/^(?:\$)/,/^(?:\[)/,/^(?:\])/,/^(?:\^\^)/,/^(?:_\b)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:null\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],this.conditions={INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],inclusive:!0}},this.performAction=function(e,t,n,r){switch(n){case 0:break;case 1:return 47;case 2:return 62;case 3:return 34;case 4:return 29;case 5:return 19;case 6:return 25;case 7:return 21;case 8:return 20;case 9:return 74;case 10:return 81;case 11:return 46;case 12:return 82;case 13:return 55;case 14:return 54;case 15:return 53;case 16:return 80;case 17:return 31;case 18:return 77;case 19:return 78;case 20:return 76;case 21:return 56;case 22:return 79;case 23:return 9;case 24:return 33;case 25:return 37;case 26:return 16;case 27:return 40;case 28:return 41;case 29:return 42;case 30:return 43;case 31:return 63;case 32:return 65;case 33:return 75;case 34:return 39;case 35:return 50;case 36:return 48;case 37:return 49;case 38:return 4;case 39:return'unexpected word "'+t.yytext+'"';case 40:return"invalid character "+t.yytext}}}O.prototype=Object.create(v.prototype),Object.defineProperty(O.prototype,"constructor",{value:O,enumerable:!1,writable:!0}),t._b=O,w.prototype=Object.create(S.prototype),Object.defineProperty(w.prototype,"constructor",{value:w,enumerable:!1,writable:!0})},18:(e,t,n)=>{const r=function(){ShapeMapJison=n(839)._b;return{construct:function(e,t,n){const r=t.base,s={};for(const e in t.prefixes||{})s[e]=t.prefixes[e];const i=n.base,a={};for(const e in n.prefixes||{})a[e]=n.prefixes[e];const o=new ShapeMapJison;return o.parse=function t(){ShapeMapJison._schemaPrefixes=Object.create(s),ShapeMapJison._setSchemaBase(r),ShapeMapJison._dataPrefixes=Object.create(a),ShapeMapJison._setDataBase(i),ShapeMapJison._setFileName(e);try{return ShapeMapJison.prototype.parse.apply(o,arguments)}catch(n){const r="lexer"in o.yy?o.yy.lexer.yylineno+1:1,s="lexer"in o.yy?o.yy.lexer.showPosition():"",i=Error(`${e}(${r}): ${n.message}\n${s}`);throw Error.captureStackTrace(i,t),o.reset(),i}},o._setSchemaBase=function(e){ShapeMapJison._setSchemaBase,r=e},o._setDataBase=function(e){ShapeMapJison._setDataBase,i=e},o._setFileName=ShapeMapJison._setFileName,o.reset=ShapeMapJison.reset,o}}}();e.exports=r},14:e=>{const t={focus:{term:"FOCUS"},start:{term:"START"},wildcard:{term:"WILDCARD"}};e.exports=t},261:(e,t,n)=>{const r=function(){const e=n(14);return e.Parser=n(18),e}();e.exports=r},237:(e,t,n)=>{e.exports=function(e={}){const t=n(443),r=n(931),s={load:async function(n,l,f,p,h={},d={}){const m={schema:t.emptySchema(),data:e.rdfjs?new e.rdfjs.Store:null,schemaMeta:[],dataMeta:[]},y=[],x=n.concat(l).map((e=>"object"==typeof e?e.url:e));let _=null;h&&"iriTransform"in h&&(_=h.iriTransform,delete h.iriTransform);const g=function(){const e=[],t=[];let n,r,s=0;const i=new Promise((function(e,t){n=e,r=t}));return i.all=function(t){return 0===t.length?n([]):t.forEach((function(t,n){e.push(t),a(t,n)})),i},i.add=function(t){return e.push(t),a(t,e.length-1),i},i;function a(i,a){i.then((function(r){t[a]=r,++s,s===e.length&&n(t)})).catch((function(e){r(e)}))}}();function E(e){if(!("imports"in e))return e;if(h.keepImports)return e;const t=Object.assign({},e);t.imports;return delete t.imports,e.imports.map((function(e){return _?_(e):e})).filter((function(e){return-1===x.indexOf(e)})).map((e=>{x.push(e),g.add(s.GET(e).then((function(e){const t={url:e.url,base:e.url,prefixes:{}};return a(e.text,"text/shex",e.url,m.schema,t,h,E)})))})),t}h&&"termResolver"in h?(m.resolver=new e.rdfjs.Store,m.resolverMeta=[],y.push(Promise.all(i(h.termResolver,m.resolverMeta,"text/turtle",u,m.resolver,d)).then((function(e){return Promise.all(i(n,m.schemaMeta,"text/shex",a,m.schema,h,E))}))),h.termResolver=r.dbTermResolver(m.resolver)):[].push.apply(y,i(n,m.schemaMeta,"text/shex",a,m.schema,h,E));return[].push.apply(y,[i(l,m.schemaMeta,"text/json",o,m.schema,h,E),i(f,m.dataMeta,"text/turtle",u,m.data,d),i(p,m.dataMeta,"application/ld+json",c,m.data,d)].reduce(((e,t)=>e.concat(t)),[])),g.all(y).then((function(e){return m.schemaMeta.length>0&&t.isWellDefined(m.schema),m}))},loadExtensions:function(e){return[]},GET:async function(t,n){let r;return(r=t.match("^data:([^,]+),(.*)$"))?Promise.resolve({text:r[2],url:r[0]}):t.match("^(blob:)?[a-z]+://.")?async function(t,n){if("function"!=typeof e.fetch)throw Error(`Unable to fetch ${t} with fetch=${e.fetch}`);let r;try{r=await e.fetch(t,{headers:{Accept:"text/shex,text/turtle,*/*"}})}catch(e){throw Error(`GET <${t}> network failure: ${e.message}`)}if(!r.ok)throw Error(`GET <${t}> failed: ${r.status} ${r.statusText}`);return{text:await r.text(),url:t}}(t):(()=>{throw Error(`Don't know how to fetch ${t}`)})()},loadShExImports_NotUsed:function(e,n,r){const i=[e],a={type:"Schema"};return s.GET(e).then((function e(o){const u=n.parse(o.text),c=u.imports;if(delete u.imports,t.merge(a,u,!1,!0),c){const t=c.map((function(e){return r?r(e):e})).filter((function(e){return-1===i.indexOf(e)}));return Promise.all(t.map((t=>(i.push(t),s.GET(t).then(e))))).then((e=>null))}return null})).then((function(){return t.isWellDefined(a),a}))}};return s;function i(e,n,r,i,a,o,u){return e.map((async e=>"object"==typeof e?async function(e){const n=c(e.url,r);try{return t.merge(a,e.schema,!0,!0),n._prefixes=a._prefixes||{},n.base=a._base,u(e.schema),[r,e.url]}catch(t){const n=Error("error merging schema object "+e.schema+": "+t);throw n.stack=t.stack,n}}(e):await async function(e){return s.GET(e,r).then((function(e){return i(e.text,r,e.url,a,c(e.url,r),o,u)}))}(e)));function c(e,t){const r={mediaType:t,url:e,base:e,prefixes:{}};return n.push(r),r}}function a(e,n,s,i,a,o,u){const c=o&&"parser"in o?o.parser:r.construct(s,{},o);try{const r=c.parse(e);return r.base===s&&delete r.base,a.prefixes=r._prefixes||{},a.base=r._base||a.base,t.merge(i,u(r),!1,!0),Promise.resolve([n,s])}catch(e){return e.message="error parsing ShEx "+s+": "+e.message,Promise.reject(e)}}function o(e,n,r,s,i,a,o){try{const a=t.ShExJtoAS(JSON.parse(e));return t.merge(s,a,!0,!0),i.prefixes=s._prefixes,i.base=s.base,o(a),Promise.resolve([n,r])}catch(e){const t=Error("error parsing JSON "+r+": "+e);return Promise.reject(t)}}function u(t,n,r,s,i,a){return new Promise((function(a,o){new e.rdfjs.Parser({baseIRI:r,blankNodePrefix:"",format:"text/turtle"}).parse(t,(function(e,t,u){u&&(i.prefixes=u),e?o("error parsing "+r+": "+e):t?s.addQuad(t):(i.base=this._base,a([n,r]))}))}))}async function c(t,n,r,s,i,a){const o=JSON.parse(t);try{const t=await e.jsonld.toRDF(o,{format:"application/nquads",base:r});return i.prefixes={},i.base=r,u(t,n,r,s,i)}catch(e){throw Error("error parsing JSON-ld "+r+": "+e)}}}},509:(e,t,n)=>{const r=n(443),s="http://www.w3.org/2001/XMLSchema#",i=s+"decimal",a=s+"double",o=s+"boolean",u=[s+"integer",s+"decimal",s+"float",s+"double",s+"string",s+"boolean",s+"dateTime",s+"nonPositiveInteger",s+"negativeInteger",s+"long",s+"int",s+"short",s+"byte",s+"nonNegativeInteger",s+"unsignedLong",s+"unsignedInt",s+"unsignedShort",s+"unsignedByte",s+"positiveInteger"],c=/^[a-z][a-z0-9+.-]*:/i,l=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,f=/(?:^|\/)\.\.?(?:$|[\/#?])/,p=["mininclusive","minexclusive","maxinclusive","maxexclusive"];function h(e){return e.toLowerCase()}function d(e,t){return e.push(t),e}function m(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function y(){let e=[];for(let t=0,n=arguments.length;t<n;t++)e=e.concat.apply(e,arguments[t]);return e}function x(e){switch(e[0]){case void 0:return P._base;case"#":return P._base+e;case"?":return P._base.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?P._baseScheme:P._baseRoot)+_(e);default:return _(P._basePath+e)}}function _(e){if(!f.test(e))return e;const t=e.length;let n="",r=-1,s=-1,i="/",a=0;for(;r<t;){switch(i){case":":if(s<0&&"/"===e[++r]&&"/"===e[++r])for(;(s=r+1)<t&&"/"!==e[s];)r=s;break;case"?":case"#":r=t;break;case"/":if("."===e[r+1])switch(i=e[1+ ++r],i){case"/":n+=e.substring(a,r-1),a=r+1;break;case void 0:case"?":case"#":return n+e.substring(a,r)+e.substr(r+1);case".":if(i=e[1+ ++r],void 0===i||"/"===i||"?"===i||"#"===i){if(n+=e.substring(a,r-2),(a=n.lastIndexOf("/"))>=s&&(n=n.substr(0,a)),"/"!==i)return n+"/"+e.substr(r+1);a=r+1}}}i=e[++r]}return n+e.substring(a)}function g(e,t){return{value:e,type:t}}P._setBase=function(e){e||(e=null),(P._base=e)&&(P._basePath=e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(l),P._baseRoot=e[0],P._baseScheme=e[1])},P._setTermResolver=function(e){P._termResolver=e};let E,b=0;P._resetBlanks=function(){b=0},P.reset=function(){P._prefixes=P._imports=P._sourceMap=P._termResolver=P.shapes=P.productions=P.start=P.startActs=null,P._base=P._baseIRI=P._baseIRIPath=P._baseIRIRoot=null},P._setFileName=function(e){E=e};const v={"\\":"\\","'":"'",'"':'"',t:"\t",b:"\b",n:"\n",r:"\r",f:"\f"},A={"\\":"\\","%":"%"},S={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"};function O(e,t){return e=e.substring(t,e.length-t),{value:r.unescapeText(e,v)}}function w(e,t){const n=e.lastIndexOf("@"),r=e.substr(n);return m(O(e=e.substr(0,n),t),{language:h(r.substr(1))})}function T(e,t){const n={};return n[e]=t,n}function I(e,t){const n={text:t.lexer.match,line:t.lexer.yylineno,loc:t.lexer.yylloc,pos:t.lexer.showPosition()};if(e.hash=n,!P.recoverable)throw e;P.recoverable(e)}function F(e,t){return e in P._prefixes||I(new Error('Parse error; unknown prefix "'+e+':"'),t),P._prefixes[e]}function N(e,t){P._sourceMap||(P._sourceMap=new Map);let n=P._sourceMap.get(e);return n||P._sourceMap.set(e,n=[]),n.push(t.lexer.yylloc),e}function k(e,t,n){return 0===n.length?L(t):t.type!==e||t.nested?{type:e,shapeExprs:[L(t)].concat(n.map(L))}:(L(t).shapeExprs=L(t).shapeExprs.concat(n),t)}function L(e){return delete e.nested,e}const R={},j={type:"Shape"};const{JisonParser:C,o:$}=n(41),{JisonLexer:D}=n(752);function P(e={},t=new M(e)){const n=[7,19,20,21,22,24,25,32,194,216,217],s=[1,27],l=[1,31],f=[1,26],h=[1,30],_=[1,29],E=[2,12],b=[2,13],v=[2,14],D=[2,15],Q=[7,19,20,21,22,24,25,32,216,217],B=[1,37],G=[1,40],V=[1,39],U=[2,24],J=[2,25],z=[20,22,28,71,73,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,126,128,165,216],X=[2,63],H=[1,52],q=[1,53],Z=[1,54],K=[20,22,28,41,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,126,128,165,216],W=[2,240],Y=[2,241],ee=[1,56],te=[1,59],ne=[1,58],re=[2,262],se=[2,263],ie=[2,270],ae=[2,264],oe=[2,265],ue=[2,16],ce=[2,18],le=[2,19],fe=[2,22],pe=[20,22,29,216],he=[2,20],de=[20,22,28,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,126,128,165,216],me=[1,80],ye=[2,32],xe=[2,33],_e=[2,34],ge=[121,126,128],Ee=[2,140],be=[1,106],ve=[1,108],Ae=[1,102],Se=[1,92],Oe=[1,97],we=[1,98],Te=[1,99],Ie=[1,105],Fe=[1,112],Ne=[1,113],ke=[1,114],Le=[1,115],Re=[1,116],je=[1,117],Ce=[1,118],$e=[1,119],De=[1,120],Pe=[1,109],Me=[1,107],Qe=[2,64],Be=[1,122],Ge=[1,123],Ve=[1,124],Ue=[1,130],Je=[1,131],ze=[53,55],Xe=[2,93],He=[2,94],qe=[194,196],Ze=[1,146],Ke=[1,149],We=[1,148],Ye=[2,17],et=[1,162],tt=[1,165],nt=[1,164],rt=[7,19,20,21,22,24,25,32,53,216,217],st=[2,49],it=[7,19,20,21,22,24,25,32,53,55,216,217],at=[2,56],ot=[2,38],ut=[2,71],ct=[2,76],lt=[2,73],ft=[1,192],pt=[1,193],ht=[1,194],dt=[1,197],mt=[1,200],yt=[2,79],xt=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,126,128,190,194,216,217],_t=[2,97],gt=[7,19,20,21,22,24,25,32,53,55,190,194,216,217],Et=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,190,194,216,217],bt=[7,19,20,21,22,24,25,32,53,55,81,82,83,103,104,105,106,121,126,128,190,194,216,217],vt=[2,110],At=[2,109],St=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,114,115,116,117,118,119,190,194,216,217],Ot=[2,104],wt=[2,103],Tt=[1,214],It=[1,215],Ft=[2,114],Nt=[2,115],kt=[2,116],Lt=[2,112],Rt=[2,239],jt=[20,22,29,73,83,102,110,111,165,185,205,206,207,208,209,210,211,212,213,214,216],Ct=[2,184],$t=[7,19,20,21,22,24,25,32,53,55,114,115,116,117,118,119,190,194,216,217],Dt=[2,106],Pt=[2,120],Mt=[2,266],Qt=[2,267],Bt=[2,268],Gt=[2,269],Vt=[1,223],Ut=[1,224],Jt=[1,225],zt=[1,226],Xt=[102,110,111,207,208,209,210],Ht=[2,37],qt=[2,41],Zt=[2,44],Kt=[2,47],Wt=[2,95],Yt=[2,231],en=[2,232],tn=[2,233],nn=[1,275],rn=[1,277],sn=[1,271],an=[1,261],on=[1,266],un=[1,267],cn=[1,268],ln=[1,274],fn=[1,278],pn=[1,276],hn=[1,282],dn=[1,283],mn=[1,284],yn=[1,290],xn=[1,291],_n=[2,23],gn=[2,26],En=[2,55],bn=[2,62],vn=[2,67],An=[2,70],Sn=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,216,217],On=[2,89],wn=[2,90],Tn=[2,35],In=[2,39],Fn=[2,75],Nn=[2,72],kn=[2,77],Ln=[2,74],Rn=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,190,194,216,217],jn=[1,336],Cn=[1,344],$n=[1,345],Dn=[1,346],Pn=[1,352],Mn=[1,353],Qn=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,126,128,194,216,217],Bn=[2,229],Gn=[7,19,20,21,22,24,25,32,53,55,194,216,217],Vn=[1,361],Un=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,194,216,217],Jn=[2,108],zn=[2,113],Xn=[2,100],Hn=[1,371],qn=[2,101],Zn=[2,102],Kn=[2,107],Wn=[20,22,71,161,165,200,216],Yn=[2,168],er=[2,142],tr=[1,386],nr=[1,385],rr=[1,391],sr=[1,393],ir=[1,394],ar=[1,390],or=[1,392],ur=[1,406],cr=[1,412],lr=[1,401],fr=[1,405],pr=[1,415],hr=[1,416],dr=[1,417],mr=[1,398],yr=[1,404],xr=[1,418],_r=[1,419],gr=[1,424],Er=[1,425],br=[1,426],vr=[1,427],Ar=[1,420],Sr=[1,421],Or=[1,422],wr=[1,423],Tr=[1,411],Ir=[2,119],Fr=[2,124],Nr=[2,126],kr=[2,127],Lr=[2,128],Rr=[2,254],jr=[2,255],Cr=[2,256],$r=[2,257],Dr=[2,125],Pr=[2,36],Mr=[2,45],Qr=[2,42],Br=[2,48],Gr=[2,43],Vr=[1,459],Ur=[2,46],Jr=[1,495],zr=[1,529],Xr=[1,530],Hr=[1,531],qr=[1,534],Zr=[2,50],Kr=[2,57],Wr=[2,66],Yr=[2,68],es=[2,78],ts=[53,55,72],ns=[1,594],rs=[53,55,72,81,82,83,121,126,128,190,194],ss=[53,55,72,190,194],is=[53,55,72,98,99,100,103,104,105,106,190,194],as=[53,55,72,81,82,83,103,104,105,106,121,126,128,190,194],os=[53,55,72,103,104,105,106,114,115,116,117,118,119,190,194],us=[53,55,72,114,115,116,117,118,119,190,194],cs=[53,72],ls=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,126,128,216,217],fs=[2,99],ps=[2,98],hs=[2,228],ds=[1,636],ms=[1,638],ys=[1,639],xs=[1,635],_s=[1,637],gs=[2,96],Es=[2,136],bs=[2,111],vs=[2,105],As=[2,117],Ss=[2,118],Os=[2,147],ws=[2,148],Ts=[1,656],Is=[2,149],Fs=[123,136],Ns=[2,154],ks=[2,155],Ls=[2,157],Rs=[1,659],js=[1,660],Cs=[20,22,165,200,216],$s=[2,176],Ds=[1,668],Ps=[123,136,141,142],Ms=[2,166],Qs=[20,22,121,126,128,165,200,216],Bs=[2,237],Gs=[2,238],Vs=[2,183],Us=[1,702],Js=[20,22,29,73,83,102,110,111,165,178,185,205,206,207,208,209,210,211,212,213,214,216],zs=[2,234],Xs=[2,235],Hs=[2,236],qs=[2,247],Zs=[2,250],Ks=[2,244],Ws=[2,245],Ys=[2,246],ei=[2,252],ti=[2,253],ni=[2,258],ri=[2,259],si=[2,260],ii=[2,261],ai=[20,22,29,73,83,102,110,111,113,165,178,185,205,206,207,208,209,210,211,212,213,214,216],oi=[1,734],ui=[1,781],ci=[1,836],li=[1,846],fi=[1,882],pi=[1,918],hi=[2,69],di=[53,55,72,103,104,105,106,190,194],mi=[53,55,72,81,82,83,121,126,128,194],yi=[53,55,72,194],xi=[1,940],_i=[53,55,72,98,99,100,103,104,105,106,194],gi=[1,950],Ei=[1,987],bi=[1,1023],vi=[2,230],Ai=[1,1034],Si=[1,1036],Oi=[1,1037],wi=[1,1035],Ti=[20,22,102,110,111,165,205,206,207,208,209,210,211,212,213,214,216],Ii=[1,1060],Fi=[1,1062],Ni=[1,1063],ki=[1,1061],Li=[1,1086],Ri=[1,1088],ji=[1,1089],Ci=[1,1087],$i=[2,137],Di=[2,150],Pi=[2,152],Mi=[2,156],Qi=[2,158],Bi=[2,159],Gi=[2,163],Vi=[2,165],Ui=[2,170],Ji=[2,171],zi=[1,1118],Xi=[1,1120],Hi=[1,1121],qi=[1,1117],Zi=[1,1119],Ki=[1,1131],Wi=[2,224],Yi=[2,242],ea=[2,243],ta=[1,1133],na=[1,1135],ra=[1,1137],sa=[20,22,29,73,83,102,110,111,165,179,185,205,206,207,208,209,210,211,212,213,214,216],ia=[1,1141],aa=[1,1147],oa=[1,1150],ua=[1,1151],ca=[1,1152],la=[1,1140],fa=[1,1153],pa=[1,1154],ha=[1,1159],da=[1,1160],ma=[1,1161],ya=[1,1162],xa=[1,1155],_a=[1,1156],ga=[1,1157],Ea=[1,1158],ba=[1,1146],va=[2,248],Aa=[2,251],Sa=[2,129],Oa=[1,1196],wa=[1,1202],Ta=[1,1234],Ia=[1,1240],Fa=[1,1299],Na=[1,1346],ka=[53,55,72,81,82,83,121,126,128],La=[53,55,72,98,99,100,103,104,105,106],Ra=[1,1422],ja=[1,1469],Ca=[2,225],$a=[2,226],Da=[2,227],Pa=[7,19,20,21,22,24,25,32,53,55,81,82,83,113,121,126,128,190,194,216,217],Ma=[7,19,20,21,22,24,25,32,53,55,113,190,194,216,217],Qa=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,113,190,194,216,217],Ba=[2,153],Ga=[2,151],Va=[2,160],Ua=[2,164],Ja=[2,161],za=[2,162],Xa=[20,22,28,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,126,128,165,216],Ha=[1,1529],qa=[72,136],Za=[1,1532],Ka=[1,1533],Wa=[72,136,141,142],Ya=[2,207],eo=[1,1549],to=[20,22,29,73,83,102,110,111,165,178,179,185,205,206,207,208,209,210,211,212,213,214,216],no=[20,22,29,73,83,102,110,111,113,165,178,179,185,205,206,207,208,209,210,211,212,213,214,216],ro=[2,249],so=[1,1587],io=[1,1653],ao=[1,1655],oo=[1,1656],uo=[1,1654],co=[1,1679],lo=[1,1681],fo=[1,1682],po=[1,1680],ho=[1,1705],mo=[1,1707],yo=[1,1708],xo=[1,1706],_o=[1,1752],go=[1,1758],Eo=[1,1790],bo=[1,1796],vo=[1,1811],Ao=[1,1813],So=[1,1814],Oo=[1,1812],wo=[1,1837],To=[1,1839],Io=[1,1840],Fo=[1,1838],No=[1,1863],ko=[1,1865],Lo=[1,1866],Ro=[1,1864],jo=[1,1910],Co=[1,1916],$o=[1,1948],Do=[1,1954],Po=[123,136,141,142,190,194],Mo=[2,173],Qo=[1,1972],Bo=[1,1973],Go=[1,1974],Vo=[1,1975],Uo=[123,136,141,142,157,158,159,160,190,194],Jo=[2,40],zo=[53,123,136,141,142,157,158,159,160,190,194],Xo=[2,53],Ho=[53,55,123,136,141,142,157,158,159,160,190,194],qo=[2,60],Zo=[1,2004],Ko=[1,2045],Wo=[1,2078],Yo=[1,2080],eu=[1,2081],tu=[1,2079],nu=[1,2104],ru=[1,2106],su=[1,2107],iu=[1,2105],au=[1,2131],ou=[1,2133],uu=[1,2134],cu=[1,2132],lu=[1,2158],fu=[1,2160],pu=[1,2161],hu=[1,2159],du=[1,2184],mu=[1,2186],yu=[1,2187],xu=[1,2185],_u=[1,2211],gu=[1,2213],Eu=[1,2214],bu=[1,2212],vu=[1,2286],Au=[53,55,72,81,82,83,113,121,126,128,190,194],Su=[53,55,72,113,190,194],Ou=[53,55,72,98,99,100,103,104,105,106,113,190,194],wu=[1,2400],Tu=[2,174],Iu=[2,178],Fu=[2,179],Nu=[2,180],ku=[2,181],Lu=[2,51],Ru=[2,58],ju=[2,65],Cu=[2,85],$u=[2,81],Du=[2,87],Pu=[1,2483],Mu=[2,84],Qu=[53,55,81,82,83,103,104,105,106,121,123,126,128,136,141,142,157,158,159,160,190,194],Bu=[53,55,81,82,83,121,123,126,128,136,141,142,157,158,159,160,190,194],Gu=[53,55,103,104,105,106,114,115,116,117,118,119,123,136,141,142,157,158,159,160,190,194],Vu=[53,55,98,99,100,103,104,105,106,123,136,141,142,157,158,159,160,190,194],Uu=[2,91],Ju=[2,92],zu=[53,55,114,115,116,117,118,119,123,136,141,142,157,158,159,160,190,194],Xu=[1,2537],Hu=[1,2543],qu=[1,2626],Zu=[1,2659],Ku=[1,2661],Wu=[1,2662],Yu=[1,2660],ec=[1,2685],tc=[1,2687],nc=[1,2688],rc=[1,2686],sc=[1,2712],ic=[1,2714],ac=[1,2715],oc=[1,2713],uc=[1,2739],cc=[1,2741],lc=[1,2742],fc=[1,2740],pc=[1,2765],hc=[1,2767],dc=[1,2768],mc=[1,2766],yc=[1,2792],xc=[1,2794],_c=[1,2795],gc=[1,2793],Ec=[1,2839],bc=[1,2872],vc=[1,2874],Ac=[1,2875],Sc=[1,2873],Oc=[1,2898],wc=[1,2900],Tc=[1,2901],Ic=[1,2899],Fc=[1,2925],Nc=[1,2927],kc=[1,2928],Lc=[1,2926],Rc=[1,2952],jc=[1,2954],Cc=[1,2955],$c=[1,2953],Dc=[1,2978],Pc=[1,2980],Mc=[1,2981],Qc=[1,2979],Bc=[1,3005],Gc=[1,3007],Vc=[1,3008],Uc=[1,3006],Jc=[123,136,141,142,194],zc=[1,3030],Xc=[2,54],Hc=[2,61],qc=[2,80],Zc=[2,86],Kc=[2,82],Wc=[2,88],Yc=[53,55,103,104,105,106,123,136,141,142,157,158,159,160,190,194],el=[1,3054],tl=[72,136,141,142,190,194],nl=[1,3063],rl=[1,3064],sl=[1,3065],il=[1,3066],al=[72,136,141,142,157,158,159,160,190,194],ol=[53,72,136,141,142,157,158,159,160,190,194],ul=[53,55,72,136,141,142,157,158,159,160,190,194],cl=[1,3095],ll=[1,3164],fl=[1,3170],pl=[1,3250],hl=[1,3256],dl=[2,175],ml=[2,52],yl=[1,3344],xl=[2,59],_l=[1,3377],gl=[2,83],El=[2,172],bl=[1,3422],vl=[53,55,72,81,82,83,103,104,105,106,121,126,128,136,141,142,157,158,159,160,190,194],Al=[53,55,72,81,82,83,121,126,128,136,141,142,157,158,159,160,190,194],Sl=[53,55,72,103,104,105,106,114,115,116,117,118,119,136,141,142,157,158,159,160,190,194],Ol=[53,55,72,98,99,100,103,104,105,106,136,141,142,157,158,159,160,190,194],wl=[53,55,72,114,115,116,117,118,119,136,141,142,157,158,159,160,190,194],Tl=[1,3453],Il=[1,3455],Fl=[1,3456],Nl=[1,3454],kl=[1,3479],Ll=[1,3481],Rl=[1,3482],jl=[1,3480],Cl=[1,3506],$l=[1,3508],Dl=[1,3509],Pl=[1,3507],Ml=[1,3610],Ql=[1,3612],Bl=[1,3613],Gl=[1,3611],Vl=[1,3651],Ul=[1,3693],Jl=[72,136,141,142,194],zl=[1,3723],Xl=[53,55,72,103,104,105,106,136,141,142,157,158,159,160,190,194],Hl=[1,3747],ql=[1,3783],Zl=[1,3785],Kl=[1,3786],Wl=[1,3784],Yl=[1,3809],ef=[1,3811],tf=[1,3812],nf=[1,3810],rf=[1,3836],sf=[1,3838],af=[1,3839],of=[1,3837],uf=[1,3863],cf=[1,3865],lf=[1,3866],ff=[1,3864],pf=[1,3889],hf=[1,3891],df=[1,3892],mf=[1,3890],yf=[1,3916],xf=[1,3918],_f=[1,3919],gf=[1,3917],Ef=[113,123,136,141,142,190,194],bf=[1,3964],vf=[1,3988],Af=[1,4030],Sf=[1,4063],Of=[1,4168],wf=[1,4211],Tf=[1,4213],If=[1,4214],Ff=[1,4212],Nf=[1,4252],kf=[1,4294],Lf=[1,4350],Rf=[72,113,136,141,142,190,194],jf=[1,4405],Cf=[1,4429],$f=[1,4459],Df=[1,4505],Pf=[1,4577],Mf=[1,4626];C.call(this,e,t),this.symbols_={error:2,shexDoc:3,initParser:4,Qdirective_E_Star:5,Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt:6,EOF:7,directive:8,O_QnotStartAction_E_Or_QstartActions_E_C:9,notStartAction:10,startActions:11,Qstatement_E_Star:12,statement:13,O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C:14,baseDecl:15,prefixDecl:16,importDecl:17,labelDecl:18,IT_BASE:19,IRIREF:20,IT_PREFIX:21,PNAME_NS:22,iri:23,IT_IMPORT:24,IT_LABEL:25,O_Qiri_E_Or_QGT_LBRACKET_E_S_Qiri_E_Star_S_QGT_RBRACKET_E_C:26,Qiri_E_Star:27,"[":28,"]":29,start:30,shapeExprDecl:31,IT_start:32,"=":33,shapeAnd:34,Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star:35,QcodeDecl_E_Plus:36,codeDecl:37,shapeExprLabel:38,O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C:39,shapeExpression:40,IT_EXTERNAL:41,QIT_NOT_E_Opt:42,shapeAtomNoRef:43,QshapeOr_E_Opt:44,IT_NOT:45,shapeRef:46,shapeOr:47,inlineShapeExpression:48,inlineShapeOr:49,Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus:50,Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus:51,O_QIT_OR_E_S_QshapeAnd_E_C:52,IT_OR:53,O_QIT_AND_E_S_QshapeNot_E_C:54,IT_AND:55,shapeNot:56,inlineShapeAnd:57,Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star:58,O_QIT_OR_E_S_QinlineShapeAnd_E_C:59,Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star:60,inlineShapeNot:61,Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star:62,O_QIT_AND_E_S_QinlineShapeNot_E_C:63,shapeAtom:64,inlineShapeAtom:65,nonLitNodeConstraint:66,QshapeOrRef_E_Opt:67,litNodeConstraint:68,shapeOrRef:69,QnonLitNodeConstraint_E_Opt:70,"(":71,")":72,".":73,shapeDefinition:74,nonLitInlineNodeConstraint:75,QinlineShapeOrRef_E_Opt:76,litInlineNodeConstraint:77,inlineShapeOrRef:78,QnonLitInlineNodeConstraint_E_Opt:79,inlineShapeDefinition:80,ATPNAME_LN:81,ATPNAME_NS:82,"@":83,Qannotation_E_Star:84,semanticActions:85,annotation:86,IT_LITERAL:87,QxsFacet_E_Star:88,datatype:89,valueSet:90,QnumericFacet_E_Plus:91,xsFacet:92,numericFacet:93,nonLiteralKind:94,QstringFacet_E_Star:95,QstringFacet_E_Plus:96,stringFacet:97,IT_IRI:98,IT_BNODE:99,IT_NONLITERAL:100,stringLength:101,INTEGER:102,REGEXP:103,IT_LENGTH:104,IT_MINLENGTH:105,IT_MAXLENGTH:106,numericRange:107,rawNumeric:108,numericLength:109,DECIMAL:110,DOUBLE:111,string:112,"^^":113,IT_MININCLUSIVE:114,IT_MINEXCLUSIVE:115,IT_MAXINCLUSIVE:116,IT_MAXEXCLUSIVE:117,IT_TOTALDIGITS:118,IT_FRACTIONDIGITS:119,Q_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star:120,"{":121,QtripleExpression_E_Opt:122,"}":123,QextraPropertySet_E_Or_QIT_CLOSED_E_C:124,extraPropertySet:125,IT_CLOSED:126,tripleExpression:127,IT_EXTRA:128,Qpredicate_E_Plus:129,predicate:130,oneOfTripleExpr:131,groupTripleExpr:132,multiElementOneOf:133,Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus:134,O_QGT_PIPE_E_S_QgroupTripleExpr_E_C:135,"|":136,singleElementGroup:137,multiElementGroup:138,unaryTripleExpr:139,QGT_SEMI_E_Opt:140,",":141,";":142,Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus:143,O_QGT_SEMI_E_S_QunaryTripleExpr_E_C:144,Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt:145,O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C:146,include:147,O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C:148,$:149,tripleExprLabel:150,tripleConstraint:151,bracketedTripleExpr:152,Qcardinality_E_Opt:153,cardinality:154,QsenseFlags_E_Opt:155,senseFlags:156,"*":157,"+":158,"?":159,REPEAT_RANGE:160,"^":161,QvalueSetValue_E_Star:162,valueSetValue:163,iriRange:164,STRING_GRAVE:165,literalRange:166,languageRange:167,O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C:168,QiriExclusion_E_Plus:169,iriExclusion:170,QliteralExclusion_E_Plus:171,literalExclusion:172,QlanguageExclusion_E_Plus:173,languageExclusion:174,Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt:175,QiriExclusion_E_Star:176,O_QGT_TILDE_E_S_QiriExclusion_E_Star_C:177,"~":178,"-":179,QGT_TILDE_E_Opt:180,literal:181,Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt:182,QliteralExclusion_E_Star:183,O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C:184,LANGTAG:185,Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt:186,O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C:187,QlanguageExclusion_E_Star:188,"&":189,"//":190,O_QiriOrLabel_E_Or_Qliteral_E_C:191,iriOrLabel:192,QcodeDecl_E_Star:193,"%":194,O_QCODE_E_Or_QGT_MODULO_E_C:195,CODE:196,rdfLiteral:197,numericLiteral:198,booleanLiteral:199,a:200,blankNode:201,langString:202,Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt:203,O_QGT_DTYPE_E_S_Qdatatype_E_C:204,IT_true:205,IT_false:206,STRING_LITERAL1:207,STRING_LITERAL_LONG1:208,STRING_LITERAL2:209,STRING_LITERAL_LONG2:210,LANG_STRING_LITERAL1:211,LANG_STRING_LITERAL_LONG1:212,LANG_STRING_LITERAL2:213,LANG_STRING_LITERAL_LONG2:214,prefixedName:215,PNAME_LN:216,BLANK_NODE_LABEL:217,O_QIT_EXTENDS_E_Or_QGT_AMP_E_C:218,IT_EXTENDS:219,$accept:0,$end:1},this.terminals_={2:"error",7:"EOF",19:"IT_BASE",20:"IRIREF",21:"IT_PREFIX",22:"PNAME_NS",24:"IT_IMPORT",25:"IT_LABEL",28:"[",29:"]",32:"IT_start",33:"=",41:"IT_EXTERNAL",45:"IT_NOT",53:"IT_OR",55:"IT_AND",71:"(",72:")",73:".",81:"ATPNAME_LN",82:"ATPNAME_NS",83:"@",87:"IT_LITERAL",98:"IT_IRI",99:"IT_BNODE",100:"IT_NONLITERAL",102:"INTEGER",103:"REGEXP",104:"IT_LENGTH",105:"IT_MINLENGTH",106:"IT_MAXLENGTH",110:"DECIMAL",111:"DOUBLE",113:"^^",114:"IT_MININCLUSIVE",115:"IT_MINEXCLUSIVE",116:"IT_MAXINCLUSIVE",117:"IT_MAXEXCLUSIVE",118:"IT_TOTALDIGITS",119:"IT_FRACTIONDIGITS",121:"{",123:"}",126:"IT_CLOSED",128:"IT_EXTRA",136:"|",141:",",142:";",149:"$",157:"*",158:"+",159:"?",160:"REPEAT_RANGE",161:"^",165:"STRING_GRAVE",178:"~",179:"-",185:"LANGTAG",189:"&",190:"//",194:"%",196:"CODE",200:"a",205:"IT_true",206:"IT_false",207:"STRING_LITERAL1",208:"STRING_LITERAL_LONG1",209:"STRING_LITERAL2",210:"STRING_LITERAL_LONG2",211:"LANG_STRING_LITERAL1",212:"LANG_STRING_LITERAL_LONG1",213:"LANG_STRING_LITERAL2",214:"LANG_STRING_LITERAL_LONG2",216:"PNAME_LN",217:"BLANK_NODE_LABEL",219:"IT_EXTENDS"},this.productions_=[0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[18,2],[27,0],[27,2],[26,1],[26,3],[10,1],[10,1],[30,4],[11,1],[36,1],[36,2],[13,1],[13,1],[31,2],[39,1],[39,1],[40,3],[40,3],[40,2],[44,0],[44,1],[48,1],[47,1],[47,2],[52,2],[50,1],[50,2],[54,2],[51,1],[51,2],[35,0],[35,2],[49,2],[59,2],[58,0],[58,2],[34,2],[60,0],[60,2],[57,2],[63,2],[62,0],[62,2],[56,2],[42,0],[42,1],[61,2],[64,2],[64,1],[64,2],[64,3],[64,1],[67,0],[67,1],[70,0],[70,1],[43,2],[43,1],[43,2],[43,3],[43,1],[65,2],[65,1],[65,2],[65,3],[65,1],[76,0],[76,1],[79,0],[79,1],[69,1],[69,1],[78,1],[78,1],[46,1],[46,1],[46,2],[68,3],[84,0],[84,2],[66,3],[77,2],[77,2],[77,2],[77,1],[88,0],[88,2],[91,1],[91,2],[75,2],[75,1],[95,0],[95,2],[96,1],[96,2],[94,1],[94,1],[94,1],[92,1],[92,1],[97,2],[97,1],[101,1],[101,1],[101,1],[93,2],[93,2],[108,1],[108,1],[108,1],[108,3],[107,1],[107,1],[107,1],[107,1],[109,1],[109,1],[74,3],[80,4],[124,1],[124,1],[120,0],[120,2],[122,0],[122,1],[125,2],[129,1],[129,2],[127,1],[131,1],[131,1],[133,2],[135,2],[134,1],[134,2],[132,1],[132,1],[137,2],[140,0],[140,1],[140,1],[138,3],[144,2],[144,2],[143,1],[143,2],[139,2],[139,1],[148,2],[145,0],[145,1],[146,1],[146,1],[152,6],[153,0],[153,1],[151,6],[155,0],[155,1],[154,1],[154,1],[154,1],[154,1],[156,1],[90,3],[162,0],[162,2],[163,1],[163,1],[163,1],[163,1],[163,2],[169,1],[169,2],[171,1],[171,2],[173,1],[173,2],[168,1],[168,1],[168,1],[164,2],[176,0],[176,2],[177,2],[175,0],[175,1],[170,3],[180,0],[180,1],[166,2],[183,0],[183,2],[184,2],[182,0],[182,1],[172,3],[167,2],[167,2],[188,0],[188,2],[187,2],[186,0],[186,1],[174,3],[147,2],[86,3],[191,1],[191,1],[85,1],[193,0],[193,2],[37,3],[195,1],[195,1],[181,1],[181,1],[181,1],[130,1],[130,1],[89,1],[38,1],[38,1],[150,1],[150,1],[198,1],[198,1],[198,1],[197,1],[197,2],[204,2],[203,0],[203,1],[199,1],[199,1],[112,1],[112,1],[112,1],[112,1],[202,1],[202,1],[202,1],[202,1],[23,1],[23,1],[215,1],[215,1],[192,1],[192,1],[192,1],[192,1],[201,1],[218,1],[218,1]],this.table=[$(n,[2,2],{3:1,4:2}),{1:[3]},$(n,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:11,10:16,11:17,14:6,15:7,16:8,17:9,18:10,19:[1,12],20:s,21:[1,13],22:l,23:24,24:[1,14],25:[1,15],30:18,31:19,32:[1,21],36:20,37:23,38:22,194:f,201:25,215:28,216:h,217:_},{7:[1,32]},$(n,[2,4]),{7:[2,11]},$(n,E),$(n,b),$(n,v),$(n,D),$(Q,[2,7],{12:33}),{20:[1,34]},{22:[1,35]},{20:B,22:G,23:36,215:38,216:V},{20:B,22:G,23:42,26:41,28:[1,43],215:38,216:V},$(Q,[2,5]),$(Q,[2,6]),$(Q,U),$(Q,J),$(Q,[2,27],{37:44,194:f}),{33:[1,45]},$(z,X,{39:46,40:47,42:49,46:51,41:[1,48],45:[1,50],81:H,82:q,83:Z}),$(n,[2,28]),$(K,W),$(K,Y),{20:ee,22:te,23:55,215:57,216:ne},$(K,re),$(K,se),$(K,ie),$(K,ae),$(K,oe),{1:[2,1]},{7:[2,9],8:61,10:62,13:60,15:63,16:64,17:65,18:66,19:[1,69],20:s,21:[1,70],22:l,23:24,24:[1,71],25:[1,72],30:67,31:68,32:[1,73],38:74,201:25,215:28,216:h,217:_},$(n,ue),{20:B,22:G,23:75,215:38,216:V},$(n,ce),$(n,re),$(n,se),$(n,ae),$(n,oe),$(n,le),$(n,fe),$(pe,he,{27:76}),$(n,[2,29]),$(de,X,{34:77,56:78,42:79,45:me}),$(Q,ye),$(Q,xe),$(Q,_e),$(ge,Ee,{43:81,66:82,68:83,74:84,75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,192:101,93:103,101:104,107:110,109:111,20:be,22:ve,28:Ae,71:[1,85],73:[1,86],87:Se,98:Oe,99:we,100:Te,103:Ie,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:Pe,216:Me}),$(z,Qe,{46:121,81:Be,82:Ge,83:Ve}),{47:125,50:126,51:127,52:128,53:Ue,54:129,55:Je},$(ze,Xe),$(ze,He),{20:[1,135],22:[1,139],23:133,38:132,201:134,215:136,216:[1,138],217:[1,137]},{194:[1,142],195:140,196:[1,141]},$(qe,re),$(qe,se),$(qe,ae),$(qe,oe),$(Q,[2,8]),$(Q,[2,30]),$(Q,[2,31]),$(Q,E),$(Q,b),$(Q,v),$(Q,D),$(Q,U),$(Q,J),{20:[1,143]},{22:[1,144]},{20:Ze,22:Ke,23:145,215:147,216:We},{20:Ze,22:Ke,23:151,26:150,28:[1,152],215:147,216:We},{33:[1,153]},$(z,X,{39:154,40:155,42:157,46:159,41:[1,156],45:[1,158],81:H,82:q,83:Z}),$(n,Ye),{20:et,22:tt,23:161,29:[1,160],215:163,216:nt},$(rt,st,{35:166}),$(it,at,{60:167}),$(ge,Ee,{75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,192:101,93:103,101:104,107:110,109:111,64:168,66:169,68:170,69:171,74:174,46:175,20:be,22:ve,28:Ae,71:[1,172],73:[1,173],81:[1,176],82:[1,177],83:[1,178],87:Se,98:Oe,99:we,100:Te,103:Ie,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:Pe,216:Me}),$(de,Qe),$(Q,ot,{50:126,51:127,52:128,54:129,44:179,47:180,53:Ue,55:Je}),$(it,ut,{67:181,69:182,74:183,46:184,80:185,120:186,81:Be,82:Ge,83:Ve,121:Ee,126:Ee,128:Ee}),$(it,ct),$(it,lt,{70:187,66:188,75:189,94:190,96:191,97:195,101:196,98:ft,99:pt,100:ht,103:dt,104:Fe,105:Ne,106:ke}),$(z,X,{40:198,42:199,46:201,45:mt,81:H,82:q,83:Z}),$(it,yt),$(xt,_t,{84:202}),$(gt,_t,{84:203}),$(Et,_t,{84:204}),$(bt,vt,{95:205}),$(xt,At,{101:104,97:206,103:Ie,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:207}),$(St,Ot,{88:208}),$(St,Ot,{88:209}),$(gt,wt,{107:110,109:111,93:210,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),{121:[1,211],124:212,125:213,126:Tt,128:It},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:216}),$($t,Dt),{102:[1,217]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,219],108:218,110:[1,220],111:[1,221],112:222,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,227]},{102:[2,121]},{102:[2,122]},{102:[2,123]},$(Xt,[2,130]),$(Xt,[2,131]),$(Xt,[2,132]),$(Xt,[2,133]),{102:[2,134]},{102:[2,135]},$(Q,ot,{50:126,51:127,52:128,54:129,47:180,44:228,53:Ue,55:Je}),$(it,Xe),$(it,He),{20:[1,232],22:[1,236],23:230,38:229,201:231,215:233,216:[1,235],217:[1,234]},$(Q,Ht),$(Q,qt,{52:237,53:Ue}),$(rt,st,{35:238,54:239,55:Je}),$(rt,Zt),$(it,Kt),$(de,X,{34:240,56:241,42:242,45:me}),$(de,X,{56:243,42:244,45:me}),$(ze,Wt),$(ze,W),$(ze,Y),$(ze,re),$(ze,se),$(ze,ie),$(ze,ae),$(ze,oe),$(n,Yt),$(n,en),$(n,tn),$(Q,ue),{20:Ze,22:Ke,23:245,215:147,216:We},$(Q,ce),$(Q,re),$(Q,se),$(Q,ae),$(Q,oe),$(Q,le),$(Q,fe),$(pe,he,{27:246}),$(de,X,{34:247,56:248,42:249,45:me}),$(Q,ye),$(Q,xe),$(Q,_e),$(ge,Ee,{43:250,66:251,68:252,74:253,75:256,77:257,80:258,94:259,96:260,89:262,90:263,91:264,120:265,97:269,192:270,93:272,101:273,107:279,109:280,20:nn,22:rn,28:sn,71:[1,254],73:[1,255],87:an,98:on,99:un,100:cn,103:ln,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:fn,216:pn}),$(z,Qe,{46:281,81:hn,82:dn,83:mn}),{47:285,50:286,51:287,52:288,53:yn,54:289,55:xn},$(n,_n),$(pe,[2,21]),$(pe,re),$(pe,se),$(pe,ae),$(pe,oe),$(Q,gn,{52:292,53:Ue}),$(rt,En,{54:293,55:Je}),$(it,bn),$(it,ut,{69:182,74:183,46:184,80:185,120:186,67:294,81:Be,82:Ge,83:Ve,121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{66:188,75:189,94:190,96:191,97:195,101:196,70:295,98:ft,99:pt,100:ht,103:dt,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:296,45:mt,81:H,82:q,83:Z}),$(it,An),$(Sn,On),$(Sn,wn),$(Sn,Xe),$(Sn,He),{20:[1,300],22:[1,304],23:298,38:297,201:299,215:301,216:[1,303],217:[1,302]},$(Q,Tn),$(Q,In),$(it,Fn),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:305}),{121:[1,306],124:212,125:213,126:Tt,128:It},$(it,kn),$(it,Ln),$(gt,_t,{84:307}),$(Rn,vt,{95:308}),$(gt,At,{101:196,97:309,103:dt,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,310]},$(Rn,Pt),{72:[1,311]},$(ge,Ee,{43:312,66:313,68:314,74:315,75:318,77:319,80:320,94:321,96:322,89:324,90:325,91:326,120:327,97:331,192:332,93:334,101:335,107:341,109:342,20:[1,337],22:[1,339],28:[1,333],71:[1,316],73:[1,317],87:[1,323],98:[1,328],99:[1,329],100:[1,330],103:jn,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,340],216:[1,338]}),$(z,Qe,{46:343,81:Cn,82:$n,83:Dn}),{47:347,50:348,51:349,52:350,53:Pn,54:351,55:Mn},$(Qn,Bn,{85:354,86:355,193:356,190:[1,357]}),$(Gn,Bn,{85:358,86:359,193:360,190:Vn}),$(Un,Bn,{85:362,86:363,193:364,190:[1,365]}),$(xt,Jn,{101:104,97:366,103:Ie,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:367,97:368,93:369,101:370,107:372,109:373,103:Hn,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:367,97:368,93:369,101:370,107:372,109:373,103:Hn,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:367,97:368,93:369,101:370,107:372,109:373,103:Hn,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Wn,Yn,{122:374,127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,123:er,149:tr,189:nr}),$(ge,[2,141]),$(ge,[2,138]),$(ge,[2,139]),{20:rr,22:sr,129:387,130:388,165:ir,192:389,200:ar,216:or},{20:ur,22:cr,23:402,29:[1,395],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,428]},{113:Rr},{113:jr},{113:Cr},{113:$r},$($t,Dr),$(Q,Pr),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(rt,Mr),$(Q,Qr,{52:292,53:Ue}),$(it,Br),$(rt,Gr),$(it,at,{60:429}),$(ge,Ee,{64:430,66:431,68:432,69:433,75:436,77:437,74:438,46:439,94:440,96:441,89:443,90:444,91:445,80:446,97:453,192:454,93:456,120:457,101:458,107:464,109:465,20:[1,460],22:[1,462],28:[1,455],71:[1,434],73:[1,435],81:[1,447],82:[1,448],83:[1,449],87:[1,442],98:[1,450],99:[1,451],100:[1,452],103:Vr,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,463],216:[1,461]}),$(it,Ur),$(ge,Ee,{64:466,66:467,68:468,69:469,75:472,77:473,74:474,46:475,94:476,96:477,89:479,90:480,91:481,80:482,97:489,192:490,93:492,120:493,101:494,107:500,109:501,20:[1,496],22:[1,498],28:[1,491],71:[1,470],73:[1,471],81:[1,483],82:[1,484],83:[1,485],87:[1,478],98:[1,486],99:[1,487],100:[1,488],103:Jr,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,499],216:[1,497]}),$(Q,Ye),{20:et,22:tt,23:161,29:[1,502],215:163,216:nt},$(rt,st,{35:503}),$(it,at,{60:504}),$(ge,Ee,{75:256,77:257,80:258,94:259,96:260,89:262,90:263,91:264,120:265,97:269,192:270,93:272,101:273,107:279,109:280,64:505,66:506,68:507,69:508,74:511,46:512,20:nn,22:rn,28:sn,71:[1,509],73:[1,510],81:[1,513],82:[1,514],83:[1,515],87:an,98:on,99:un,100:cn,103:ln,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:fn,216:pn}),$(Q,ot,{50:286,51:287,52:288,54:289,44:516,47:517,53:yn,55:xn}),$(it,ut,{67:518,69:519,74:520,46:521,80:522,120:523,81:hn,82:dn,83:mn,121:Ee,126:Ee,128:Ee}),$(it,ct),$(it,lt,{70:524,66:525,75:526,94:527,96:528,97:532,101:533,98:zr,99:Xr,100:Hr,103:qr,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:535,45:mt,81:H,82:q,83:Z}),$(it,yt),$(xt,_t,{84:536}),$(gt,_t,{84:537}),$(Et,_t,{84:538}),$(bt,vt,{95:539}),$(xt,At,{101:273,97:540,103:ln,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:541}),$(St,Ot,{88:542}),$(St,Ot,{88:543}),$(gt,wt,{107:279,109:280,93:544,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),{121:[1,545],124:212,125:213,126:Tt,128:It},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:546}),$($t,Dt),{102:[1,547]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,549],108:548,110:[1,550],111:[1,551],112:552,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,553]},$(Q,ot,{50:286,51:287,52:288,54:289,47:517,44:554,53:yn,55:xn}),$(it,Xe),$(it,He),{20:[1,558],22:[1,562],23:556,38:555,201:557,215:559,216:[1,561],217:[1,560]},$(Q,Ht),$(Q,qt,{52:563,53:yn}),$(rt,st,{35:564,54:565,55:xn}),$(rt,Zt),$(it,Kt),$(de,X,{34:566,56:567,42:568,45:me}),$(de,X,{56:569,42:570,45:me}),$(rt,Zr),$(it,Kr),$(it,Wr),$(it,Yr),{72:[1,571]},$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),$(Gn,Bn,{86:359,193:360,85:572,190:Vn}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:573,123:er,149:tr,189:nr}),$(Gn,Bn,{86:359,193:360,85:574,190:Vn}),$(gt,Jn,{101:196,97:575,103:dt,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,es),{44:576,47:577,50:348,51:349,52:350,53:Pn,54:351,55:Mn,72:ot},$(ts,ut,{67:578,69:579,74:580,46:581,80:582,120:583,81:Cn,82:$n,83:Dn,121:Ee,126:Ee,128:Ee}),$(ts,ct),$(ts,lt,{70:584,66:585,75:586,94:587,96:588,97:592,101:593,98:[1,589],99:[1,590],100:[1,591],103:ns,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:595,45:mt,81:H,82:q,83:Z}),$(ts,yt),$(rs,_t,{84:596}),$(ss,_t,{84:597}),$(is,_t,{84:598}),$(as,vt,{95:599}),$(rs,At,{101:335,97:600,103:jn,104:Fe,105:Ne,106:ke}),$(os,Ot,{88:601}),$(os,Ot,{88:602}),$(os,Ot,{88:603}),$(ss,wt,{107:341,109:342,93:604,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),{121:[1,605],124:212,125:213,126:Tt,128:It},$(as,Ft),$(as,Nt),$(as,kt),$(as,Lt),$(os,Rt),$(jt,Ct,{162:606}),$(us,Dt),{102:[1,607]},$(as,Pt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),{102:[1,609],108:608,110:[1,610],111:[1,611],112:612,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,613]},{44:614,47:577,50:348,51:349,52:350,53:Pn,54:351,55:Mn,72:ot},$(ts,Xe),$(ts,He),{20:[1,618],22:[1,622],23:616,38:615,201:617,215:619,216:[1,621],217:[1,620]},{72:Ht},{52:623,53:Pn,72:qt},$(cs,st,{35:624,54:625,55:Mn}),$(cs,Zt),$(ts,Kt),$(de,X,{34:626,56:627,42:628,45:me}),$(de,X,{56:629,42:630,45:me}),$(ls,fs),$(xt,ps),$(ls,hs,{37:631,194:[1,632]}),{20:ds,22:ms,130:633,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:640,194:[1,641]}),{20:ds,22:ms,130:642,165:ys,192:634,200:xs,216:_s},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:643,194:[1,644]}),{20:ds,22:ms,130:645,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,646]},$(St,Pt),{102:[1,648],108:647,110:[1,649],111:[1,650],112:651,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,652]},{123:[1,653]},{123:[2,143]},{123:Os},{123:ws,134:654,135:655,136:Ts},{123:Is},$(Fs,Ns),$(Fs,ks),$(Fs,Ls,{140:657,143:658,144:661,141:Rs,142:js}),$(Cs,$s,{146:662,151:663,152:664,155:665,156:667,71:[1,666],161:Ds}),$(Ps,Ms),$(Wn,[2,169]),{20:[1,672],22:[1,676],23:670,150:669,201:671,215:673,216:[1,675],217:[1,674]},{20:[1,680],22:[1,684],23:678,150:677,201:679,215:681,216:[1,683],217:[1,682]},$(ge,[2,144],{192:389,130:685,20:rr,22:sr,165:ir,200:ar,216:or}),$(Qs,[2,145]),$(Qs,Bs),$(Qs,Gs),$(Qs,Mt),$(Qs,Qt),$(Qs,Bt),$(Qs,Gt),$(St,Vs),$(jt,[2,185]),$(jt,[2,186]),$(jt,[2,187]),$(jt,[2,188]),$(jt,[2,189]),{168:686,169:687,170:690,171:688,172:691,173:689,174:692,179:[1,693]},$(jt,[2,204],{175:694,177:695,178:[1,696]}),$(jt,[2,213],{182:697,184:698,178:[1,699]}),$(jt,[2,221],{186:700,187:701,178:Us}),{178:Us,187:703},$(Js,re),$(Js,se),$(Js,zs),$(Js,Xs),$(Js,Hs),$(Js,ae),$(Js,oe),$(Js,qs),$(Js,Zs,{203:704,204:705,113:[1,706]}),$(Js,Ks),$(Js,Ws),$(Js,Ys),$(Js,ei),$(Js,ti),$(Js,ni),$(Js,ri),$(Js,si),$(Js,ii),$(ai,Rr),$(ai,jr),$(ai,Cr),$(ai,$r),{20:[1,709],22:[1,711],89:707,165:[1,712],192:708,216:[1,710]},$(rt,En,{54:713,55:[1,714]}),$(it,bn),$(it,ut,{67:715,69:716,74:717,46:718,80:719,120:723,81:[1,720],82:[1,721],83:[1,722],121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{70:724,66:725,75:726,94:727,96:728,97:732,101:733,98:[1,729],99:[1,730],100:[1,731],103:oi,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:735,45:mt,81:H,82:q,83:Z}),$(it,An),$(xt,_t,{84:736}),$(gt,_t,{84:737}),$(Sn,On),$(Sn,wn),$(bt,vt,{95:738}),$(xt,At,{101:458,97:739,103:Vr,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:740}),$(St,Ot,{88:741}),$(St,Ot,{88:742}),$(gt,wt,{107:464,109:465,93:743,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Et,_t,{84:744}),$(Sn,Xe),$(Sn,He),{20:[1,748],22:[1,752],23:746,38:745,201:747,215:749,216:[1,751],217:[1,750]},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:753}),$($t,Dt),{121:[1,754],124:212,125:213,126:Tt,128:It},{102:[1,755]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,757],108:756,110:[1,758],111:[1,759],112:760,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,761]},$(it,bn),$(it,ut,{67:762,69:763,74:764,46:765,80:766,120:770,81:[1,767],82:[1,768],83:[1,769],121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{70:771,66:772,75:773,94:774,96:775,97:779,101:780,98:[1,776],99:[1,777],100:[1,778],103:ui,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:782,45:mt,81:H,82:q,83:Z}),$(it,An),$(xt,_t,{84:783}),$(gt,_t,{84:784}),$(Sn,On),$(Sn,wn),$(bt,vt,{95:785}),$(xt,At,{101:494,97:786,103:Jr,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:787}),$(St,Ot,{88:788}),$(St,Ot,{88:789}),$(gt,wt,{107:500,109:501,93:790,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Et,_t,{84:791}),$(Sn,Xe),$(Sn,He),{20:[1,795],22:[1,799],23:793,38:792,201:794,215:796,216:[1,798],217:[1,797]},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:800}),$($t,Dt),{121:[1,801],124:212,125:213,126:Tt,128:It},{102:[1,802]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,804],108:803,110:[1,805],111:[1,806],112:807,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,808]},$(Q,_n),$(Q,gn,{52:809,53:yn}),$(rt,En,{54:810,55:xn}),$(it,bn),$(it,ut,{69:519,74:520,46:521,80:522,120:523,67:811,81:hn,82:dn,83:mn,121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{66:525,75:526,94:527,96:528,97:532,101:533,70:812,98:zr,99:Xr,100:Hr,103:qr,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:813,45:mt,81:H,82:q,83:Z}),$(it,An),$(Sn,On),$(Sn,wn),$(Sn,Xe),$(Sn,He),{20:[1,817],22:[1,821],23:815,38:814,201:816,215:818,216:[1,820],217:[1,819]},$(Q,Tn),$(Q,In),$(it,Fn),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:822}),{121:[1,823],124:212,125:213,126:Tt,128:It},$(it,kn),$(it,Ln),$(gt,_t,{84:824}),$(Rn,vt,{95:825}),$(gt,At,{101:533,97:826,103:qr,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,827]},$(Rn,Pt),{72:[1,828]},$(Qn,Bn,{85:829,86:830,193:831,190:[1,832]}),$(Gn,Bn,{85:833,86:834,193:835,190:ci}),$(Un,Bn,{85:837,86:838,193:839,190:[1,840]}),$(xt,Jn,{101:273,97:841,103:ln,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:842,97:843,93:844,101:845,107:847,109:848,103:li,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:842,97:843,93:844,101:845,107:847,109:848,103:li,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:842,97:843,93:844,101:845,107:847,109:848,103:li,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:849,123:er,149:tr,189:nr}),{20:ur,22:cr,23:402,29:[1,850],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,851]},$($t,Dr),$(Q,Pr),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(rt,Mr),$(Q,Qr,{52:809,53:yn}),$(it,Br),$(rt,Gr),$(it,at,{60:852}),$(ge,Ee,{64:853,66:854,68:855,69:856,75:859,77:860,74:861,46:862,94:863,96:864,89:866,90:867,91:868,80:869,97:876,192:877,93:879,120:880,101:881,107:887,109:888,20:[1,883],22:[1,885],28:[1,878],71:[1,857],73:[1,858],81:[1,870],82:[1,871],83:[1,872],87:[1,865],98:[1,873],99:[1,874],100:[1,875],103:fi,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,886],216:[1,884]}),$(it,Ur),$(ge,Ee,{64:889,66:890,68:891,69:892,75:895,77:896,74:897,46:898,94:899,96:900,89:902,90:903,91:904,80:905,97:912,192:913,93:915,120:916,101:917,107:923,109:924,20:[1,919],22:[1,921],28:[1,914],71:[1,893],73:[1,894],81:[1,906],82:[1,907],83:[1,908],87:[1,901],98:[1,909],99:[1,910],100:[1,911],103:pi,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,922],216:[1,920]}),$(it,hi),$(it,Es),{123:[1,925]},$(it,fs),$(Rn,bs),{72:Tn},{72:In},$(ts,Fn),$(ts,Nn),$(ts,On),$(ts,wn),$(ss,_t,{84:926}),{121:[1,927],124:212,125:213,126:Tt,128:It},$(ts,kn),$(ts,Ln),$(ss,_t,{84:928}),$(di,vt,{95:929}),$(ss,At,{101:593,97:930,103:ns,104:Fe,105:Ne,106:ke}),$(di,Ft),$(di,Nt),$(di,kt),$(di,Lt),{102:[1,931]},$(di,Pt),{72:[1,932]},$(mi,Bn,{85:933,86:934,193:935,190:[1,936]}),$(yi,Bn,{85:937,86:938,193:939,190:xi}),$(_i,Bn,{85:941,86:942,193:943,190:[1,944]}),$(rs,Jn,{101:335,97:945,103:jn,104:Fe,105:Ne,106:ke}),$(as,zn),$(ss,Xn,{92:946,97:947,93:948,101:949,107:951,109:952,103:gi,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,qn,{92:946,97:947,93:948,101:949,107:951,109:952,103:gi,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,Zn,{92:946,97:947,93:948,101:949,107:951,109:952,103:gi,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(us,Kn),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:953,123:er,149:tr,189:nr}),{20:ur,22:cr,23:402,29:[1,954],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(as,Ir),$(us,Fr),$(us,Nr),$(us,kr),$(us,Lr),{113:[1,955]},$(us,Dr),{72:Pr},$(ts,Wt),$(ts,W),$(ts,Y),$(ts,re),$(ts,se),$(ts,ie),$(ts,ae),$(ts,oe),$(cs,Mr),{52:956,53:Pn,72:Qr},$(ts,Br),$(cs,Gr),$(ts,at,{60:957}),$(ge,Ee,{64:958,66:959,68:960,69:961,75:964,77:965,74:966,46:967,94:968,96:969,89:971,90:972,91:973,80:974,97:981,192:982,93:984,120:985,101:986,107:992,109:993,20:[1,988],22:[1,990],28:[1,983],71:[1,962],73:[1,963],81:[1,975],82:[1,976],83:[1,977],87:[1,970],98:[1,978],99:[1,979],100:[1,980],103:Ei,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,991],216:[1,989]}),$(ts,Ur),$(ge,Ee,{64:994,66:995,68:996,69:997,75:1e3,77:1001,74:1002,46:1003,94:1004,96:1005,89:1007,90:1008,91:1009,80:1010,97:1017,192:1018,93:1020,120:1021,101:1022,107:1028,109:1029,20:[1,1024],22:[1,1026],28:[1,1019],71:[1,998],73:[1,999],81:[1,1011],82:[1,1012],83:[1,1013],87:[1,1006],98:[1,1014],99:[1,1015],100:[1,1016],103:bi,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,1027],216:[1,1025]}),$(Qn,vi),{20:ee,22:te,23:1030,215:57,216:ne},{20:Ai,22:Si,102:[1,1043],110:[1,1044],111:[1,1045],112:1042,165:Oi,181:1033,191:1031,192:1032,197:1038,198:1039,199:1040,202:1041,205:[1,1046],206:[1,1047],207:[1,1052],208:[1,1053],209:[1,1054],210:[1,1055],211:[1,1048],212:[1,1049],213:[1,1050],214:[1,1051],216:wi},$(Ti,Bs),$(Ti,Gs),$(Ti,Mt),$(Ti,Qt),$(Ti,Bt),$(Ti,Gt),$(Gn,vi),{20:ee,22:te,23:1056,215:57,216:ne},{20:Ii,22:Fi,102:[1,1069],110:[1,1070],111:[1,1071],112:1068,165:Ni,181:1059,191:1057,192:1058,197:1064,198:1065,199:1066,202:1067,205:[1,1072],206:[1,1073],207:[1,1078],208:[1,1079],209:[1,1080],210:[1,1081],211:[1,1074],212:[1,1075],213:[1,1076],214:[1,1077],216:ki},$(Un,vi),{20:ee,22:te,23:1082,215:57,216:ne},{20:Li,22:Ri,102:[1,1095],110:[1,1096],111:[1,1097],112:1094,165:ji,181:1085,191:1083,192:1084,197:1090,198:1091,199:1092,202:1093,205:[1,1098],206:[1,1099],207:[1,1104],208:[1,1105],209:[1,1106],210:[1,1107],211:[1,1100],212:[1,1101],213:[1,1102],214:[1,1103],216:Ci},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,1108]},$(St,Dr),$(Et,$i),{123:Di,135:1109,136:Ts},$(Fs,Pi),$(Wn,Yn,{137:379,138:380,139:381,145:382,147:383,148:384,132:1110,149:tr,189:nr}),$(Fs,Mi),$(Fs,Ls,{140:1111,144:1112,141:Rs,142:js}),$(Wn,Yn,{145:382,147:383,148:384,139:1113,123:Qi,136:Qi,149:tr,189:nr}),$(Wn,Yn,{145:382,147:383,148:384,139:1114,123:Bi,136:Bi,149:tr,189:nr}),$(Ps,Gi),$(Ps,Vi),$(Ps,Ui),$(Ps,Ji),{20:zi,22:Xi,130:1115,165:Hi,192:1116,200:qi,216:Zi},$(Wn,Yn,{148:384,127:1122,131:1123,132:1124,133:1125,137:1126,138:1127,139:1128,145:1129,147:1130,149:tr,189:Ki}),$(Cs,[2,177]),$(Cs,[2,182]),$(Ps,Wi),$(Ps,Yi),$(Ps,ea),$(Ps,re),$(Ps,se),$(Ps,ie),$(Ps,ae),$(Ps,oe),$(Wn,[2,167]),$(Wn,Yi),$(Wn,ea),$(Wn,re),$(Wn,se),$(Wn,ie),$(Wn,ae),$(Wn,oe),$(Qs,[2,146]),$(jt,[2,190]),$(jt,[2,197],{170:1132,179:ta}),$(jt,[2,198],{172:1134,179:na}),$(jt,[2,199],{174:1136,179:ra}),$(sa,[2,191]),$(sa,[2,193]),$(sa,[2,195]),{20:ia,22:aa,23:1138,102:oa,110:ua,111:ca,112:1149,181:1139,185:la,197:1143,198:1144,199:1145,202:1148,205:fa,206:pa,207:ha,208:da,209:ma,210:ya,211:xa,212:_a,213:ga,214:Ea,215:1142,216:ba},$(jt,[2,200]),$(jt,[2,205]),$(sa,[2,201],{176:1163}),$(jt,[2,209]),$(jt,[2,214]),$(sa,[2,210],{183:1164}),$(jt,[2,216]),$(jt,[2,222]),$(sa,[2,218],{188:1165}),$(jt,[2,217]),$(Js,va),$(Js,Aa),{20:[1,1168],22:[1,1170],89:1166,165:[1,1171],192:1167,216:[1,1169]},$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(it,Kr),$(de,X,{56:1172,42:1173,45:me}),$(it,Wr),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:1174}),$(it,Xe),$(it,He),{20:[1,1178],22:[1,1182],23:1176,38:1175,201:1177,215:1179,216:[1,1181],217:[1,1180]},{121:[1,1183],124:212,125:213,126:Tt,128:It},$(it,Yr),$(it,Ln),$(gt,_t,{84:1184}),$(Rn,vt,{95:1185}),$(gt,At,{101:733,97:1186,103:oi,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,1187]},$(Rn,Pt),{72:[1,1188]},$(Qn,Bn,{85:1189,86:1190,193:1191,190:[1,1192]}),$(Gn,Bn,{85:1193,86:1194,193:1195,190:Oa}),$(xt,Jn,{101:458,97:1197,103:Vr,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:1198,97:1199,93:1200,101:1201,107:1203,109:1204,103:wa,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:1198,97:1199,93:1200,101:1201,107:1203,109:1204,103:wa,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:1198,97:1199,93:1200,101:1201,107:1203,109:1204,103:wa,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Un,Bn,{85:1205,86:1206,193:1207,190:[1,1208]}),$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),{20:ur,22:cr,23:402,29:[1,1209],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1210,123:er,149:tr,189:nr}),$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,1211]},$($t,Dr),$(it,Wr),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:1212}),$(it,Xe),$(it,He),{20:[1,1216],22:[1,1220],23:1214,38:1213,201:1215,215:1217,216:[1,1219],217:[1,1218]},{121:[1,1221],124:212,125:213,126:Tt,128:It},$(it,Yr),$(it,Ln),$(gt,_t,{84:1222}),$(Rn,vt,{95:1223}),$(gt,At,{101:780,97:1224,103:ui,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,1225]},$(Rn,Pt),{72:[1,1226]},$(Qn,Bn,{85:1227,86:1228,193:1229,190:[1,1230]}),$(Gn,Bn,{85:1231,86:1232,193:1233,190:Ta}),$(xt,Jn,{101:494,97:1235,103:Jr,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:1236,97:1237,93:1238,101:1239,107:1241,109:1242,103:Ia,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:1236,97:1237,93:1238,101:1239,107:1241,109:1242,103:Ia,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:1236,97:1237,93:1238,101:1239,107:1241,109:1242,103:Ia,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Un,Bn,{85:1243,86:1244,193:1245,190:[1,1246]}),$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),{20:ur,22:cr,23:402,29:[1,1247],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1248,123:er,149:tr,189:nr}),$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,1249]},$($t,Dr),$(rt,Zr),$(it,Kr),$(it,Wr),$(it,Yr),{72:[1,1250]},$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),$(Gn,Bn,{86:834,193:835,85:1251,190:ci}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1252,123:er,149:tr,189:nr}),$(Gn,Bn,{86:834,193:835,85:1253,190:ci}),$(gt,Jn,{101:533,97:1254,103:qr,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,es),$(ls,fs),$(xt,ps),$(ls,hs,{37:1255,194:[1,1256]}),{20:ds,22:ms,130:1257,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:1258,194:[1,1259]}),{20:ds,22:ms,130:1260,165:ys,192:634,200:xs,216:_s},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:1261,194:[1,1262]}),{20:ds,22:ms,130:1263,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,1264]},$(St,Pt),{102:[1,1266],108:1265,110:[1,1267],111:[1,1268],112:1269,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1270]},{123:[1,1271]},$(St,Vs),{20:[1,1274],22:[1,1276],89:1272,165:[1,1277],192:1273,216:[1,1275]},$(rt,En,{54:1278,55:[1,1279]}),$(it,bn),$(it,ut,{67:1280,69:1281,74:1282,46:1283,80:1284,120:1288,81:[1,1285],82:[1,1286],83:[1,1287],121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{70:1289,66:1290,75:1291,94:1292,96:1293,97:1297,101:1298,98:[1,1294],99:[1,1295],100:[1,1296],103:Fa,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:1300,45:mt,81:H,82:q,83:Z}),$(it,An),$(xt,_t,{84:1301}),$(gt,_t,{84:1302}),$(Sn,On),$(Sn,wn),$(bt,vt,{95:1303}),$(xt,At,{101:881,97:1304,103:fi,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:1305}),$(St,Ot,{88:1306}),$(St,Ot,{88:1307}),$(gt,wt,{107:887,109:888,93:1308,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Et,_t,{84:1309}),$(Sn,Xe),$(Sn,He),{20:[1,1313],22:[1,1317],23:1311,38:1310,201:1312,215:1314,216:[1,1316],217:[1,1315]},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:1318}),$($t,Dt),{121:[1,1319],124:212,125:213,126:Tt,128:It},{102:[1,1320]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,1322],108:1321,110:[1,1323],111:[1,1324],112:1325,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1326]},$(it,bn),$(it,ut,{67:1327,69:1328,74:1329,46:1330,80:1331,120:1335,81:[1,1332],82:[1,1333],83:[1,1334],121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{70:1336,66:1337,75:1338,94:1339,96:1340,97:1344,101:1345,98:[1,1341],99:[1,1342],100:[1,1343],103:Na,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:1347,45:mt,81:H,82:q,83:Z}),$(it,An),$(xt,_t,{84:1348}),$(gt,_t,{84:1349}),$(Sn,On),$(Sn,wn),$(bt,vt,{95:1350}),$(xt,At,{101:917,97:1351,103:pi,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:1352}),$(St,Ot,{88:1353}),$(St,Ot,{88:1354}),$(gt,wt,{107:923,109:924,93:1355,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Et,_t,{84:1356}),$(Sn,Xe),$(Sn,He),{20:[1,1360],22:[1,1364],23:1358,38:1357,201:1359,215:1361,216:[1,1363],217:[1,1362]},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:1365}),$($t,Dt),{121:[1,1366],124:212,125:213,126:Tt,128:It},{102:[1,1367]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,1369],108:1368,110:[1,1370],111:[1,1371],112:1372,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1373]},$(gt,$i),$(yi,Bn,{86:938,193:939,85:1374,190:xi}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1375,123:er,149:tr,189:nr}),$(yi,Bn,{86:938,193:939,85:1376,190:xi}),$(ss,Jn,{101:593,97:1377,103:ns,104:Fe,105:Ne,106:ke}),$(di,zn),$(di,Ir),$(ts,es),$(ka,fs),$(rs,ps),$(ka,hs,{37:1378,194:[1,1379]}),{20:ds,22:ms,130:1380,165:ys,192:634,200:xs,216:_s},$(ts,gs),$(ss,ps),$(ts,hs,{37:1381,194:[1,1382]}),{20:ds,22:ms,130:1383,165:ys,192:634,200:xs,216:_s},$(La,Es),$(is,ps),$(La,hs,{37:1384,194:[1,1385]}),{20:ds,22:ms,130:1386,165:ys,192:634,200:xs,216:_s},$(as,bs),$(os,vs),$(os,As),$(os,Ss),{102:[1,1387]},$(os,Pt),{102:[1,1389],108:1388,110:[1,1390],111:[1,1391],112:1392,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1393]},{123:[1,1394]},$(os,Vs),{20:[1,1397],22:[1,1399],89:1395,165:[1,1400],192:1396,216:[1,1398]},$(cs,Zr),$(cs,En,{54:1401,55:[1,1402]}),$(ts,bn),$(ts,ut,{67:1403,69:1404,74:1405,46:1406,80:1407,120:1411,81:[1,1408],82:[1,1409],83:[1,1410],121:Ee,126:Ee,128:Ee}),$(ts,vn),$(ts,lt,{70:1412,66:1413,75:1414,94:1415,96:1416,97:1420,101:1421,98:[1,1417],99:[1,1418],100:[1,1419],103:Ra,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:1423,45:mt,81:H,82:q,83:Z}),$(ts,An),$(rs,_t,{84:1424}),$(ss,_t,{84:1425}),$(La,On),$(La,wn),$(as,vt,{95:1426}),$(rs,At,{101:986,97:1427,103:Ei,104:Fe,105:Ne,106:ke}),$(os,Ot,{88:1428}),$(os,Ot,{88:1429}),$(os,Ot,{88:1430}),$(ss,wt,{107:992,109:993,93:1431,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(is,_t,{84:1432}),$(La,Xe),$(La,He),{20:[1,1436],22:[1,1440],23:1434,38:1433,201:1435,215:1437,216:[1,1439],217:[1,1438]},$(as,Ft),$(as,Nt),$(as,kt),$(as,Lt),$(os,Rt),$(jt,Ct,{162:1441}),$(us,Dt),{121:[1,1442],124:212,125:213,126:Tt,128:It},{102:[1,1443]},$(as,Pt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),{102:[1,1445],108:1444,110:[1,1446],111:[1,1447],112:1448,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1449]},$(ts,bn),$(ts,ut,{67:1450,69:1451,74:1452,46:1453,80:1454,120:1458,81:[1,1455],82:[1,1456],83:[1,1457],121:Ee,126:Ee,128:Ee}),$(ts,vn),$(ts,lt,{70:1459,66:1460,75:1461,94:1462,96:1463,97:1467,101:1468,98:[1,1464],99:[1,1465],100:[1,1466],103:ja,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:1470,45:mt,81:H,82:q,83:Z}),$(ts,An),$(rs,_t,{84:1471}),$(ss,_t,{84:1472}),$(La,On),$(La,wn),$(as,vt,{95:1473}),$(rs,At,{101:1022,97:1474,103:bi,104:Fe,105:Ne,106:ke}),$(os,Ot,{88:1475}),$(os,Ot,{88:1476}),$(os,Ot,{88:1477}),$(ss,wt,{107:1028,109:1029,93:1478,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(is,_t,{84:1479}),$(La,Xe),$(La,He),{20:[1,1483],22:[1,1487],23:1481,38:1480,201:1482,215:1484,216:[1,1486],217:[1,1485]},$(as,Ft),$(as,Nt),$(as,kt),$(as,Lt),$(os,Rt),$(jt,Ct,{162:1488}),$(us,Dt),{121:[1,1489],124:212,125:213,126:Tt,128:It},{102:[1,1490]},$(as,Pt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),{102:[1,1492],108:1491,110:[1,1493],111:[1,1494],112:1495,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1496]},{194:[1,1499],195:1497,196:[1,1498]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:1500,204:1501,113:[1,1502]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,1505],195:1503,196:[1,1504]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:1506,204:1507,113:[1,1508]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{194:[1,1511],195:1509,196:[1,1510]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:1512,204:1513,113:[1,1514]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),{20:[1,1517],22:[1,1519],89:1515,165:[1,1520],192:1516,216:[1,1518]},$(Fs,Ba),$(Fs,Ga),$(Fs,Va),$(Ps,Ua),$(Ps,Ja),$(Ps,za),$(de,X,{48:1521,49:1522,57:1523,61:1524,42:1525,45:me}),$(Xa,Bs),$(Xa,Gs),$(Xa,Mt),$(Xa,Qt),$(Xa,Bt),$(Xa,Gt),{72:[1,1526]},{72:Os},{72:ws,134:1527,135:1528,136:Ha},{72:Is},$(qa,Ns),$(qa,ks),$(qa,Ls,{140:1530,143:1531,144:1534,141:Za,142:Ka}),$(Cs,$s,{156:667,146:1535,151:1536,152:1537,155:1538,71:[1,1539],161:Ds}),$(Wa,Ms),{20:[1,1543],22:[1,1547],23:1541,150:1540,201:1542,215:1544,216:[1,1546],217:[1,1545]},$(sa,[2,192]),{20:ia,22:aa,23:1138,215:1142,216:ba},$(sa,[2,194]),{102:oa,110:ua,111:ca,112:1149,181:1139,197:1143,198:1144,199:1145,202:1148,205:fa,206:pa,207:ha,208:da,209:ma,210:ya,211:xa,212:_a,213:ga,214:Ea},$(sa,[2,196]),{185:la},$(sa,Ya,{180:1548,178:eo}),$(sa,Ya,{180:1550,178:eo}),$(sa,Ya,{180:1551,178:eo}),$(to,re),$(to,se),$(to,zs),$(to,Xs),$(to,Hs),$(to,ae),$(to,oe),$(to,qs),$(to,Zs,{203:1552,204:1553,113:[1,1554]}),$(to,Ks),$(to,Ws),$(to,Ys),$(to,ei),$(to,ti),$(to,ni),$(to,ri),$(to,si),$(to,ii),$(no,Rr),$(no,jr),$(no,Cr),$(no,$r),$(jt,[2,203],{170:1555,179:ta}),$(jt,[2,212],{172:1556,179:na}),$(jt,[2,220],{174:1557,179:ra}),$(Js,ro),$(Js,Rt),$(Js,Mt),$(Js,Qt),$(Js,Bt),$(Js,Gt),$(it,Ur),$(ge,Ee,{64:1558,66:1559,68:1560,69:1561,75:1564,77:1565,74:1566,46:1567,94:1568,96:1569,89:1571,90:1572,91:1573,80:1574,97:1581,192:1582,93:1584,120:1585,101:1586,107:1592,109:1593,20:[1,1588],22:[1,1590],28:[1,1583],71:[1,1562],73:[1,1563],81:[1,1575],82:[1,1576],83:[1,1577],87:[1,1570],98:[1,1578],99:[1,1579],100:[1,1580],103:so,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,1591],216:[1,1589]}),$(Gn,Bn,{86:1194,193:1195,85:1594,190:Oa}),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1595,123:er,149:tr,189:nr}),$(Gn,Bn,{86:1194,193:1195,85:1596,190:Oa}),$(gt,Jn,{101:733,97:1597,103:oi,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,hi),$(ls,fs),$(xt,ps),$(ls,hs,{37:1598,194:[1,1599]}),{20:ds,22:ms,130:1600,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:1601,194:[1,1602]}),{20:ds,22:ms,130:1603,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,1604]},$(St,Pt),{102:[1,1606],108:1605,110:[1,1607],111:[1,1608],112:1609,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1610]},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:1611,194:[1,1612]}),{20:ds,22:ms,130:1613,165:ys,192:634,200:xs,216:_s},$(St,Vs),{123:[1,1614]},{20:[1,1617],22:[1,1619],89:1615,165:[1,1620],192:1616,216:[1,1618]},$(Gn,Bn,{86:1232,193:1233,85:1621,190:Ta}),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1622,123:er,149:tr,189:nr}),$(Gn,Bn,{86:1232,193:1233,85:1623,190:Ta}),$(gt,Jn,{101:780,97:1624,103:ui,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,hi),$(ls,fs),$(xt,ps),$(ls,hs,{37:1625,194:[1,1626]}),{20:ds,22:ms,130:1627,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:1628,194:[1,1629]}),{20:ds,22:ms,130:1630,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,1631]},$(St,Pt),{102:[1,1633],108:1632,110:[1,1634],111:[1,1635],112:1636,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,1637]},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:1638,194:[1,1639]}),{20:ds,22:ms,130:1640,165:ys,192:634,200:xs,216:_s},$(St,Vs),{123:[1,1641]},{20:[1,1644],22:[1,1646],89:1642,165:[1,1647],192:1643,216:[1,1645]},$(it,hi),$(it,Es),{123:[1,1648]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:1649,215:57,216:ne},{20:io,22:ao,102:[1,1662],110:[1,1663],111:[1,1664],112:1661,165:oo,181:1652,191:1650,192:1651,197:1657,198:1658,199:1659,202:1660,205:[1,1665],206:[1,1666],207:[1,1671],208:[1,1672],209:[1,1673],210:[1,1674],211:[1,1667],212:[1,1668],213:[1,1669],214:[1,1670],216:uo},$(Gn,vi),{20:ee,22:te,23:1675,215:57,216:ne},{20:co,22:lo,102:[1,1688],110:[1,1689],111:[1,1690],112:1687,165:fo,181:1678,191:1676,192:1677,197:1683,198:1684,199:1685,202:1686,205:[1,1691],206:[1,1692],207:[1,1697],208:[1,1698],209:[1,1699],210:[1,1700],211:[1,1693],212:[1,1694],213:[1,1695],214:[1,1696],216:po},$(Un,vi),{20:ee,22:te,23:1701,215:57,216:ne},{20:ho,22:mo,102:[1,1714],110:[1,1715],111:[1,1716],112:1713,165:yo,181:1704,191:1702,192:1703,197:1709,198:1710,199:1711,202:1712,205:[1,1717],206:[1,1718],207:[1,1723],208:[1,1724],209:[1,1725],210:[1,1726],211:[1,1719],212:[1,1720],213:[1,1721],214:[1,1722],216:xo},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,1727]},$(St,Dr),$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(it,Kr),$(de,X,{56:1728,42:1729,45:me}),$(it,Wr),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:1730}),$(it,Xe),$(it,He),{20:[1,1734],22:[1,1738],23:1732,38:1731,201:1733,215:1735,216:[1,1737],217:[1,1736]},{121:[1,1739],124:212,125:213,126:Tt,128:It},$(it,Yr),$(it,Ln),$(gt,_t,{84:1740}),$(Rn,vt,{95:1741}),$(gt,At,{101:1298,97:1742,103:Fa,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,1743]},$(Rn,Pt),{72:[1,1744]},$(Qn,Bn,{85:1745,86:1746,193:1747,190:[1,1748]}),$(Gn,Bn,{85:1749,86:1750,193:1751,190:_o}),$(xt,Jn,{101:881,97:1753,103:fi,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:1754,97:1755,93:1756,101:1757,107:1759,109:1760,103:go,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:1754,97:1755,93:1756,101:1757,107:1759,109:1760,103:go,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:1754,97:1755,93:1756,101:1757,107:1759,109:1760,103:go,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Un,Bn,{85:1761,86:1762,193:1763,190:[1,1764]}),$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),{20:ur,22:cr,23:402,29:[1,1765],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1766,123:er,149:tr,189:nr}),$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,1767]},$($t,Dr),$(it,Wr),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:1768}),$(it,Xe),$(it,He),{20:[1,1772],22:[1,1776],23:1770,38:1769,201:1771,215:1773,216:[1,1775],217:[1,1774]},{121:[1,1777],124:212,125:213,126:Tt,128:It},$(it,Yr),$(it,Ln),$(gt,_t,{84:1778}),$(Rn,vt,{95:1779}),$(gt,At,{101:1345,97:1780,103:Na,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,1781]},$(Rn,Pt),{72:[1,1782]},$(Qn,Bn,{85:1783,86:1784,193:1785,190:[1,1786]}),$(Gn,Bn,{85:1787,86:1788,193:1789,190:Eo}),$(xt,Jn,{101:917,97:1791,103:pi,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:1792,97:1793,93:1794,101:1795,107:1797,109:1798,103:bo,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:1792,97:1793,93:1794,101:1795,107:1797,109:1798,103:bo,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:1792,97:1793,93:1794,101:1795,107:1797,109:1798,103:bo,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Un,Bn,{85:1799,86:1800,193:1801,190:[1,1802]}),$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),{20:ur,22:cr,23:402,29:[1,1803],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1804,123:er,149:tr,189:nr}),$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,1805]},$($t,Dr),$(ts,Es),{123:[1,1806]},$(ts,fs),$(di,bs),$(mi,vi),{20:ee,22:te,23:1807,215:57,216:ne},{20:vo,22:Ao,102:[1,1820],110:[1,1821],111:[1,1822],112:1819,165:So,181:1810,191:1808,192:1809,197:1815,198:1816,199:1817,202:1818,205:[1,1823],206:[1,1824],207:[1,1829],208:[1,1830],209:[1,1831],210:[1,1832],211:[1,1825],212:[1,1826],213:[1,1827],214:[1,1828],216:Oo},$(yi,vi),{20:ee,22:te,23:1833,215:57,216:ne},{20:wo,22:To,102:[1,1846],110:[1,1847],111:[1,1848],112:1845,165:Io,181:1836,191:1834,192:1835,197:1841,198:1842,199:1843,202:1844,205:[1,1849],206:[1,1850],207:[1,1855],208:[1,1856],209:[1,1857],210:[1,1858],211:[1,1851],212:[1,1852],213:[1,1853],214:[1,1854],216:Fo},$(_i,vi),{20:ee,22:te,23:1859,215:57,216:ne},{20:No,22:ko,102:[1,1872],110:[1,1873],111:[1,1874],112:1871,165:Lo,181:1862,191:1860,192:1861,197:1867,198:1868,199:1869,202:1870,205:[1,1875],206:[1,1876],207:[1,1881],208:[1,1882],209:[1,1883],210:[1,1884],211:[1,1877],212:[1,1878],213:[1,1879],214:[1,1880],216:Ro},$(os,Ir),$(os,Fr),$(os,Nr),$(os,kr),$(os,Lr),{113:[1,1885]},$(os,Dr),$(is,$i),$(us,Sa),$(us,Rt),$(us,Mt),$(us,Qt),$(us,Bt),$(us,Gt),$(ts,Kr),$(de,X,{56:1886,42:1887,45:me}),$(ts,Wr),$(ts,Nn),$(ts,On),$(ts,wn),$(ss,_t,{84:1888}),$(ts,Xe),$(ts,He),{20:[1,1892],22:[1,1896],23:1890,38:1889,201:1891,215:1893,216:[1,1895],217:[1,1894]},{121:[1,1897],124:212,125:213,126:Tt,128:It},$(ts,Yr),$(ts,Ln),$(ss,_t,{84:1898}),$(di,vt,{95:1899}),$(ss,At,{101:1421,97:1900,103:Ra,104:Fe,105:Ne,106:ke}),$(di,Ft),$(di,Nt),$(di,kt),$(di,Lt),{102:[1,1901]},$(di,Pt),{72:[1,1902]},$(mi,Bn,{85:1903,86:1904,193:1905,190:[1,1906]}),$(yi,Bn,{85:1907,86:1908,193:1909,190:jo}),$(rs,Jn,{101:986,97:1911,103:Ei,104:Fe,105:Ne,106:ke}),$(as,zn),$(ss,Xn,{92:1912,97:1913,93:1914,101:1915,107:1917,109:1918,103:Co,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,qn,{92:1912,97:1913,93:1914,101:1915,107:1917,109:1918,103:Co,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,Zn,{92:1912,97:1913,93:1914,101:1915,107:1917,109:1918,103:Co,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(us,Kn),$(_i,Bn,{85:1919,86:1920,193:1921,190:[1,1922]}),$(La,Wt),$(La,W),$(La,Y),$(La,re),$(La,se),$(La,ie),$(La,ae),$(La,oe),{20:ur,22:cr,23:402,29:[1,1923],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1924,123:er,149:tr,189:nr}),$(as,Ir),$(us,Fr),$(us,Nr),$(us,kr),$(us,Lr),{113:[1,1925]},$(us,Dr),$(ts,Wr),$(ts,Nn),$(ts,On),$(ts,wn),$(ss,_t,{84:1926}),$(ts,Xe),$(ts,He),{20:[1,1930],22:[1,1934],23:1928,38:1927,201:1929,215:1931,216:[1,1933],217:[1,1932]},{121:[1,1935],124:212,125:213,126:Tt,128:It},$(ts,Yr),$(ts,Ln),$(ss,_t,{84:1936}),$(di,vt,{95:1937}),$(ss,At,{101:1468,97:1938,103:ja,104:Fe,105:Ne,106:ke}),$(di,Ft),$(di,Nt),$(di,kt),$(di,Lt),{102:[1,1939]},$(di,Pt),{72:[1,1940]},$(mi,Bn,{85:1941,86:1942,193:1943,190:[1,1944]}),$(yi,Bn,{85:1945,86:1946,193:1947,190:$o}),$(rs,Jn,{101:1022,97:1949,103:bi,104:Fe,105:Ne,106:ke}),$(as,zn),$(ss,Xn,{92:1950,97:1951,93:1952,101:1953,107:1955,109:1956,103:Do,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,qn,{92:1950,97:1951,93:1952,101:1953,107:1955,109:1956,103:Do,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,Zn,{92:1950,97:1951,93:1952,101:1953,107:1955,109:1956,103:Do,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(us,Kn),$(_i,Bn,{85:1957,86:1958,193:1959,190:[1,1960]}),$(La,Wt),$(La,W),$(La,Y),$(La,re),$(La,se),$(La,ie),$(La,ae),$(La,oe),{20:ur,22:cr,23:402,29:[1,1961],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:1962,123:er,149:tr,189:nr}),$(as,Ir),$(us,Fr),$(us,Nr),$(us,kr),$(us,Lr),{113:[1,1963]},$(us,Dr),$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:Ai,22:Si,89:1964,165:Oi,192:1965,216:wi},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:Ii,22:Fi,89:1966,165:Ni,192:1967,216:ki},$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:Li,22:Ri,89:1968,165:ji,192:1969,216:Ci},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Po,Mo,{153:1970,154:1971,157:Qo,158:Bo,159:Go,160:Vo}),$(Uo,Jo),$(zo,Xo,{58:1976}),$(Ho,qo,{62:1977}),$(ge,Ee,{65:1978,75:1979,77:1980,78:1981,94:1984,96:1985,89:1987,90:1988,91:1989,80:1990,46:1991,97:1995,192:1996,93:1998,120:1999,101:2003,107:2009,109:2010,20:[1,2005],22:[1,2007],28:[1,1997],71:[1,1982],73:[1,1983],81:[1,2e3],82:[1,2001],83:[1,2002],87:[1,1986],98:[1,1992],99:[1,1993],100:[1,1994],103:Zo,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,2008],216:[1,2006]}),$(Po,Mo,{154:1971,153:2011,157:Qo,158:Bo,159:Go,160:Vo}),{72:Di,135:2012,136:Ha},$(qa,Pi),$(Wn,Yn,{148:384,137:1126,138:1127,139:1128,145:1129,147:1130,132:2013,149:tr,189:Ki}),$(qa,Mi),$(qa,Ls,{140:2014,144:2015,141:Za,142:Ka}),$(Wn,Yn,{148:384,145:1129,147:1130,139:2016,72:Qi,136:Qi,149:tr,189:Ki}),$(Wn,Yn,{148:384,145:1129,147:1130,139:2017,72:Bi,136:Bi,149:tr,189:Ki}),$(Wa,Gi),$(Wa,Vi),$(Wa,Ui),$(Wa,Ji),{20:zi,22:Xi,130:2018,165:Hi,192:1116,200:qi,216:Zi},$(Wn,Yn,{148:384,131:1123,132:1124,133:1125,137:1126,138:1127,139:1128,145:1129,147:1130,127:2019,149:tr,189:Ki}),$(Wa,Wi),$(Wa,Yi),$(Wa,ea),$(Wa,re),$(Wa,se),$(Wa,ie),$(Wa,ae),$(Wa,oe),$(sa,[2,206]),$(sa,[2,208]),$(sa,[2,215]),$(sa,[2,223]),$(to,va),$(to,Aa),{20:[1,2022],22:[1,2024],89:2020,165:[1,2025],192:2021,216:[1,2023]},$(sa,[2,202]),$(sa,[2,211]),$(sa,[2,219]),$(it,bn),$(it,ut,{67:2026,69:2027,74:2028,46:2029,80:2030,120:2034,81:[1,2031],82:[1,2032],83:[1,2033],121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{70:2035,66:2036,75:2037,94:2038,96:2039,97:2043,101:2044,98:[1,2040],99:[1,2041],100:[1,2042],103:Ko,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:2046,45:mt,81:H,82:q,83:Z}),$(it,An),$(xt,_t,{84:2047}),$(gt,_t,{84:2048}),$(Sn,On),$(Sn,wn),$(bt,vt,{95:2049}),$(xt,At,{101:1586,97:2050,103:so,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:2051}),$(St,Ot,{88:2052}),$(St,Ot,{88:2053}),$(gt,wt,{107:1592,109:1593,93:2054,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Et,_t,{84:2055}),$(Sn,Xe),$(Sn,He),{20:[1,2059],22:[1,2063],23:2057,38:2056,201:2058,215:2060,216:[1,2062],217:[1,2061]},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:2064}),$($t,Dt),{121:[1,2065],124:212,125:213,126:Tt,128:It},{102:[1,2066]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,2068],108:2067,110:[1,2069],111:[1,2070],112:2071,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2072]},$(it,Es),{123:[1,2073]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:2074,215:57,216:ne},{20:Wo,22:Yo,102:[1,2087],110:[1,2088],111:[1,2089],112:2086,165:eu,181:2077,191:2075,192:2076,197:2082,198:2083,199:2084,202:2085,205:[1,2090],206:[1,2091],207:[1,2096],208:[1,2097],209:[1,2098],210:[1,2099],211:[1,2092],212:[1,2093],213:[1,2094],214:[1,2095],216:tu},$(Gn,vi),{20:ee,22:te,23:2100,215:57,216:ne},{20:nu,22:ru,102:[1,2113],110:[1,2114],111:[1,2115],112:2112,165:su,181:2103,191:2101,192:2102,197:2108,198:2109,199:2110,202:2111,205:[1,2116],206:[1,2117],207:[1,2122],208:[1,2123],209:[1,2124],210:[1,2125],211:[1,2118],212:[1,2119],213:[1,2120],214:[1,2121],216:iu},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,2126]},$(St,Dr),$(Un,vi),{20:ee,22:te,23:2127,215:57,216:ne},{20:au,22:ou,102:[1,2140],110:[1,2141],111:[1,2142],112:2139,165:uu,181:2130,191:2128,192:2129,197:2135,198:2136,199:2137,202:2138,205:[1,2143],206:[1,2144],207:[1,2149],208:[1,2150],209:[1,2151],210:[1,2152],211:[1,2145],212:[1,2146],213:[1,2147],214:[1,2148],216:cu},$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(it,Es),{123:[1,2153]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:2154,215:57,216:ne},{20:lu,22:fu,102:[1,2167],110:[1,2168],111:[1,2169],112:2166,165:pu,181:2157,191:2155,192:2156,197:2162,198:2163,199:2164,202:2165,205:[1,2170],206:[1,2171],207:[1,2176],208:[1,2177],209:[1,2178],210:[1,2179],211:[1,2172],212:[1,2173],213:[1,2174],214:[1,2175],216:hu},$(Gn,vi),{20:ee,22:te,23:2180,215:57,216:ne},{20:du,22:mu,102:[1,2193],110:[1,2194],111:[1,2195],112:2192,165:yu,181:2183,191:2181,192:2182,197:2188,198:2189,199:2190,202:2191,205:[1,2196],206:[1,2197],207:[1,2202],208:[1,2203],209:[1,2204],210:[1,2205],211:[1,2198],212:[1,2199],213:[1,2200],214:[1,2201],216:xu},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,2206]},$(St,Dr),$(Un,vi),{20:ee,22:te,23:2207,215:57,216:ne},{20:_u,22:gu,102:[1,2220],110:[1,2221],111:[1,2222],112:2219,165:Eu,181:2210,191:2208,192:2209,197:2215,198:2216,199:2217,202:2218,205:[1,2223],206:[1,2224],207:[1,2229],208:[1,2230],209:[1,2231],210:[1,2232],211:[1,2225],212:[1,2226],213:[1,2227],214:[1,2228],216:bu},$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(gt,$i),{194:[1,2235],195:2233,196:[1,2234]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:2236,204:2237,113:[1,2238]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,2241],195:2239,196:[1,2240]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:2242,204:2243,113:[1,2244]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{194:[1,2247],195:2245,196:[1,2246]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:2248,204:2249,113:[1,2250]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),{20:[1,2253],22:[1,2255],89:2251,165:[1,2256],192:2252,216:[1,2254]},$(it,Ur),$(ge,Ee,{64:2257,66:2258,68:2259,69:2260,75:2263,77:2264,74:2265,46:2266,94:2267,96:2268,89:2270,90:2271,91:2272,80:2273,97:2280,192:2281,93:2283,120:2284,101:2285,107:2291,109:2292,20:[1,2287],22:[1,2289],28:[1,2282],71:[1,2261],73:[1,2262],81:[1,2274],82:[1,2275],83:[1,2276],87:[1,2269],98:[1,2277],99:[1,2278],100:[1,2279],103:vu,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,2290],216:[1,2288]}),$(Gn,Bn,{86:1750,193:1751,85:2293,190:_o}),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:2294,123:er,149:tr,189:nr}),$(Gn,Bn,{86:1750,193:1751,85:2295,190:_o}),$(gt,Jn,{101:1298,97:2296,103:Fa,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,hi),$(ls,fs),$(xt,ps),$(ls,hs,{37:2297,194:[1,2298]}),{20:ds,22:ms,130:2299,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:2300,194:[1,2301]}),{20:ds,22:ms,130:2302,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,2303]},$(St,Pt),{102:[1,2305],108:2304,110:[1,2306],111:[1,2307],112:2308,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2309]},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:2310,194:[1,2311]}),{20:ds,22:ms,130:2312,165:ys,192:634,200:xs,216:_s},$(St,Vs),{123:[1,2313]},{20:[1,2316],22:[1,2318],89:2314,165:[1,2319],192:2315,216:[1,2317]},$(Gn,Bn,{86:1788,193:1789,85:2320,190:Eo}),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:2321,123:er,149:tr,189:nr}),$(Gn,Bn,{86:1788,193:1789,85:2322,190:Eo}),$(gt,Jn,{101:1345,97:2323,103:Na,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,hi),$(ls,fs),$(xt,ps),$(ls,hs,{37:2324,194:[1,2325]}),{20:ds,22:ms,130:2326,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:2327,194:[1,2328]}),{20:ds,22:ms,130:2329,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,2330]},$(St,Pt),{102:[1,2332],108:2331,110:[1,2333],111:[1,2334],112:2335,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2336]},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:2337,194:[1,2338]}),{20:ds,22:ms,130:2339,165:ys,192:634,200:xs,216:_s},$(St,Vs),{123:[1,2340]},{20:[1,2343],22:[1,2345],89:2341,165:[1,2346],192:2342,216:[1,2344]},$(ss,$i),{194:[1,2349],195:2347,196:[1,2348]},$(rs,Ca),$(rs,$a),$(rs,Da),$(rs,Mt),$(rs,Qt),$(rs,Bt),$(rs,Gt),$(rs,zs),$(rs,Xs),$(rs,Hs),$(rs,qs),$(rs,Zs,{203:2350,204:2351,113:[1,2352]}),$(rs,Ks),$(rs,Ws),$(rs,Ys),$(rs,ei),$(rs,ti),$(rs,ni),$(rs,ri),$(rs,si),$(rs,ii),$(Au,Rr),$(Au,jr),$(Au,Cr),$(Au,$r),{194:[1,2355],195:2353,196:[1,2354]},$(ss,Ca),$(ss,$a),$(ss,Da),$(ss,Mt),$(ss,Qt),$(ss,Bt),$(ss,Gt),$(ss,zs),$(ss,Xs),$(ss,Hs),$(ss,qs),$(ss,Zs,{203:2356,204:2357,113:[1,2358]}),$(ss,Ks),$(ss,Ws),$(ss,Ys),$(ss,ei),$(ss,ti),$(ss,ni),$(ss,ri),$(ss,si),$(ss,ii),$(Su,Rr),$(Su,jr),$(Su,Cr),$(Su,$r),{194:[1,2361],195:2359,196:[1,2360]},$(is,Ca),$(is,$a),$(is,Da),$(is,Mt),$(is,Qt),$(is,Bt),$(is,Gt),$(is,zs),$(is,Xs),$(is,Hs),$(is,qs),$(is,Zs,{203:2362,204:2363,113:[1,2364]}),$(is,Ks),$(is,Ws),$(is,Ys),$(is,ei),$(is,ti),$(is,ni),$(is,ri),$(is,si),$(is,ii),$(Ou,Rr),$(Ou,jr),$(Ou,Cr),$(Ou,$r),{20:[1,2367],22:[1,2369],89:2365,165:[1,2370],192:2366,216:[1,2368]},$(ts,Ur),$(ge,Ee,{64:2371,66:2372,68:2373,69:2374,75:2377,77:2378,74:2379,46:2380,94:2381,96:2382,89:2384,90:2385,91:2386,80:2387,97:2394,192:2395,93:2397,120:2398,101:2399,107:2405,109:2406,20:[1,2401],22:[1,2403],28:[1,2396],71:[1,2375],73:[1,2376],81:[1,2388],82:[1,2389],83:[1,2390],87:[1,2383],98:[1,2391],99:[1,2392],100:[1,2393],103:wu,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,2404],216:[1,2402]}),$(yi,Bn,{86:1908,193:1909,85:2407,190:jo}),$(ts,Wt),$(ts,W),$(ts,Y),$(ts,re),$(ts,se),$(ts,ie),$(ts,ae),$(ts,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:2408,123:er,149:tr,189:nr}),$(yi,Bn,{86:1908,193:1909,85:2409,190:jo}),$(ss,Jn,{101:1421,97:2410,103:Ra,104:Fe,105:Ne,106:ke}),$(di,zn),$(di,Ir),$(ts,hi),$(ka,fs),$(rs,ps),$(ka,hs,{37:2411,194:[1,2412]}),{20:ds,22:ms,130:2413,165:ys,192:634,200:xs,216:_s},$(ts,gs),$(ss,ps),$(ts,hs,{37:2414,194:[1,2415]}),{20:ds,22:ms,130:2416,165:ys,192:634,200:xs,216:_s},$(as,bs),$(os,vs),$(os,As),$(os,Ss),{102:[1,2417]},$(os,Pt),{102:[1,2419],108:2418,110:[1,2420],111:[1,2421],112:2422,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2423]},$(La,Es),$(is,ps),$(La,hs,{37:2424,194:[1,2425]}),{20:ds,22:ms,130:2426,165:ys,192:634,200:xs,216:_s},$(os,Vs),{123:[1,2427]},{20:[1,2430],22:[1,2432],89:2428,165:[1,2433],192:2429,216:[1,2431]},$(yi,Bn,{86:1946,193:1947,85:2434,190:$o}),$(ts,Wt),$(ts,W),$(ts,Y),$(ts,re),$(ts,se),$(ts,ie),$(ts,ae),$(ts,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:2435,123:er,149:tr,189:nr}),$(yi,Bn,{86:1946,193:1947,85:2436,190:$o}),$(ss,Jn,{101:1468,97:2437,103:ja,104:Fe,105:Ne,106:ke}),$(di,zn),$(di,Ir),$(ts,hi),$(ka,fs),$(rs,ps),$(ka,hs,{37:2438,194:[1,2439]}),{20:ds,22:ms,130:2440,165:ys,192:634,200:xs,216:_s},$(ts,gs),$(ss,ps),$(ts,hs,{37:2441,194:[1,2442]}),{20:ds,22:ms,130:2443,165:ys,192:634,200:xs,216:_s},$(as,bs),$(os,vs),$(os,As),$(os,Ss),{102:[1,2444]},$(os,Pt),{102:[1,2446],108:2445,110:[1,2447],111:[1,2448],112:2449,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2450]},$(La,Es),$(is,ps),$(La,hs,{37:2451,194:[1,2452]}),{20:ds,22:ms,130:2453,165:ys,192:634,200:xs,216:_s},$(os,Vs),{123:[1,2454]},{20:[1,2457],22:[1,2459],89:2455,165:[1,2460],192:2456,216:[1,2458]},$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(Po,_t,{84:2461}),$(Po,Tu),$(Po,Iu),$(Po,Fu),$(Po,Nu),$(Po,ku),$(Uo,Lu,{59:2462,53:[1,2463]}),$(zo,Ru,{63:2464,55:[1,2465]}),$(Ho,ju),$(Ho,Cu,{76:2466,78:2467,80:2468,46:2469,120:2470,81:[1,2471],82:[1,2472],83:[1,2473],121:Ee,126:Ee,128:Ee}),$(Ho,$u),$(Ho,Du,{79:2474,75:2475,94:2476,96:2477,97:2481,101:2482,98:[1,2478],99:[1,2479],100:[1,2480],103:Pu,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:2484,45:mt,81:H,82:q,83:Z}),$(Ho,Mu),$(Qu,vt,{95:2485}),$(Bu,At,{101:2003,97:2486,103:Zo,104:Fe,105:Ne,106:ke}),$(Gu,Ot,{88:2487}),$(Gu,Ot,{88:2488}),$(Gu,Ot,{88:2489}),$(Ho,wt,{107:2009,109:2010,93:2490,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Vu,Uu),$(Vu,Ju),$(Qu,Ft),$(Qu,Nt),$(Qu,kt),$(Qu,Lt),$(Gu,Rt),$(jt,Ct,{162:2491}),$(zu,Dt),{121:[1,2492],124:212,125:213,126:Tt,128:It},$(Vu,Xe),$(Vu,He),{20:[1,2496],22:[1,2500],23:2494,38:2493,201:2495,215:2497,216:[1,2499],217:[1,2498]},{102:[1,2501]},$(Qu,Pt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),{102:[1,2503],108:2502,110:[1,2504],111:[1,2505],112:2506,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2507]},$(Po,_t,{84:2508}),$(qa,Ba),$(qa,Ga),$(qa,Va),$(Wa,Ua),$(Wa,Ja),$(Wa,za),$(de,X,{48:2509,49:2510,57:2511,61:2512,42:2513,45:me}),{72:[1,2514]},$(to,ro),$(to,Rt),$(to,Mt),$(to,Qt),$(to,Bt),$(to,Gt),$(it,Wr),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:2515}),$(it,Xe),$(it,He),{20:[1,2519],22:[1,2523],23:2517,38:2516,201:2518,215:2520,216:[1,2522],217:[1,2521]},{121:[1,2524],124:212,125:213,126:Tt,128:It},$(it,Yr),$(it,Ln),$(gt,_t,{84:2525}),$(Rn,vt,{95:2526}),$(gt,At,{101:2044,97:2527,103:Ko,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,2528]},$(Rn,Pt),{72:[1,2529]},$(Qn,Bn,{85:2530,86:2531,193:2532,190:[1,2533]}),$(Gn,Bn,{85:2534,86:2535,193:2536,190:Xu}),$(xt,Jn,{101:1586,97:2538,103:so,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:2539,97:2540,93:2541,101:2542,107:2544,109:2545,103:Hu,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:2539,97:2540,93:2541,101:2542,107:2544,109:2545,103:Hu,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:2539,97:2540,93:2541,101:2542,107:2544,109:2545,103:Hu,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Un,Bn,{85:2546,86:2547,193:2548,190:[1,2549]}),$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),{20:ur,22:cr,23:402,29:[1,2550],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:2551,123:er,149:tr,189:nr}),$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,2552]},$($t,Dr),$(gt,$i),{194:[1,2555],195:2553,196:[1,2554]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:2556,204:2557,113:[1,2558]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,2561],195:2559,196:[1,2560]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:2562,204:2563,113:[1,2564]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{20:[1,2567],22:[1,2569],89:2565,165:[1,2570],192:2566,216:[1,2568]},{194:[1,2573],195:2571,196:[1,2572]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:2574,204:2575,113:[1,2576]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),$(gt,$i),{194:[1,2579],195:2577,196:[1,2578]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:2580,204:2581,113:[1,2582]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,2585],195:2583,196:[1,2584]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:2586,204:2587,113:[1,2588]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{20:[1,2591],22:[1,2593],89:2589,165:[1,2594],192:2590,216:[1,2592]},{194:[1,2597],195:2595,196:[1,2596]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:2598,204:2599,113:[1,2600]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:io,22:ao,89:2601,165:oo,192:2602,216:uo},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:co,22:lo,89:2603,165:fo,192:2604,216:po},$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:ho,22:mo,89:2605,165:yo,192:2606,216:xo},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(it,bn),$(it,ut,{67:2607,69:2608,74:2609,46:2610,80:2611,120:2615,81:[1,2612],82:[1,2613],83:[1,2614],121:Ee,126:Ee,128:Ee}),$(it,vn),$(it,lt,{70:2616,66:2617,75:2618,94:2619,96:2620,97:2624,101:2625,98:[1,2621],99:[1,2622],100:[1,2623],103:qu,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:2627,45:mt,81:H,82:q,83:Z}),$(it,An),$(xt,_t,{84:2628}),$(gt,_t,{84:2629}),$(Sn,On),$(Sn,wn),$(bt,vt,{95:2630}),$(xt,At,{101:2285,97:2631,103:vu,104:Fe,105:Ne,106:ke}),$(St,Ot,{88:2632}),$(St,Ot,{88:2633}),$(St,Ot,{88:2634}),$(gt,wt,{107:2291,109:2292,93:2635,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Et,_t,{84:2636}),$(Sn,Xe),$(Sn,He),{20:[1,2640],22:[1,2644],23:2638,38:2637,201:2639,215:2641,216:[1,2643],217:[1,2642]},$(bt,Ft),$(bt,Nt),$(bt,kt),$(bt,Lt),$(St,Rt),$(jt,Ct,{162:2645}),$($t,Dt),{121:[1,2646],124:212,125:213,126:Tt,128:It},{102:[1,2647]},$(bt,Pt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),{102:[1,2649],108:2648,110:[1,2650],111:[1,2651],112:2652,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2653]},$(it,Es),{123:[1,2654]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:2655,215:57,216:ne},{20:Zu,22:Ku,102:[1,2668],110:[1,2669],111:[1,2670],112:2667,165:Wu,181:2658,191:2656,192:2657,197:2663,198:2664,199:2665,202:2666,205:[1,2671],206:[1,2672],207:[1,2677],208:[1,2678],209:[1,2679],210:[1,2680],211:[1,2673],212:[1,2674],213:[1,2675],214:[1,2676],216:Yu},$(Gn,vi),{20:ee,22:te,23:2681,215:57,216:ne},{20:ec,22:tc,102:[1,2694],110:[1,2695],111:[1,2696],112:2693,165:nc,181:2684,191:2682,192:2683,197:2689,198:2690,199:2691,202:2692,205:[1,2697],206:[1,2698],207:[1,2703],208:[1,2704],209:[1,2705],210:[1,2706],211:[1,2699],212:[1,2700],213:[1,2701],214:[1,2702],216:rc},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,2707]},$(St,Dr),$(Un,vi),{20:ee,22:te,23:2708,215:57,216:ne},{20:sc,22:ic,102:[1,2721],110:[1,2722],111:[1,2723],112:2720,165:ac,181:2711,191:2709,192:2710,197:2716,198:2717,199:2718,202:2719,205:[1,2724],206:[1,2725],207:[1,2730],208:[1,2731],209:[1,2732],210:[1,2733],211:[1,2726],212:[1,2727],213:[1,2728],214:[1,2729],216:oc},$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(it,Es),{123:[1,2734]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:2735,215:57,216:ne},{20:uc,22:cc,102:[1,2748],110:[1,2749],111:[1,2750],112:2747,165:lc,181:2738,191:2736,192:2737,197:2743,198:2744,199:2745,202:2746,205:[1,2751],206:[1,2752],207:[1,2757],208:[1,2758],209:[1,2759],210:[1,2760],211:[1,2753],212:[1,2754],213:[1,2755],214:[1,2756],216:fc},$(Gn,vi),{20:ee,22:te,23:2761,215:57,216:ne},{20:pc,22:hc,102:[1,2774],110:[1,2775],111:[1,2776],112:2773,165:dc,181:2764,191:2762,192:2763,197:2769,198:2770,199:2771,202:2772,205:[1,2777],206:[1,2778],207:[1,2783],208:[1,2784],209:[1,2785],210:[1,2786],211:[1,2779],212:[1,2780],213:[1,2781],214:[1,2782],216:mc},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,2787]},$(St,Dr),$(Un,vi),{20:ee,22:te,23:2788,215:57,216:ne},{20:yc,22:xc,102:[1,2801],110:[1,2802],111:[1,2803],112:2800,165:_c,181:2791,191:2789,192:2790,197:2796,198:2797,199:2798,202:2799,205:[1,2804],206:[1,2805],207:[1,2810],208:[1,2811],209:[1,2812],210:[1,2813],211:[1,2806],212:[1,2807],213:[1,2808],214:[1,2809],216:gc},$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(mi,Yt),$(mi,en),$(mi,tn),$(rs,va),$(rs,Aa),{20:vo,22:Ao,89:2814,165:So,192:2815,216:Oo},$(yi,Yt),$(yi,en),$(yi,tn),$(ss,va),$(ss,Aa),{20:wo,22:To,89:2816,165:Io,192:2817,216:Fo},$(_i,Yt),$(_i,en),$(_i,tn),$(is,va),$(is,Aa),{20:No,22:ko,89:2818,165:Lo,192:2819,216:Ro},$(os,Sa),$(os,Rt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),$(ts,bn),$(ts,ut,{67:2820,69:2821,74:2822,46:2823,80:2824,120:2828,81:[1,2825],82:[1,2826],83:[1,2827],121:Ee,126:Ee,128:Ee}),$(ts,vn),$(ts,lt,{70:2829,66:2830,75:2831,94:2832,96:2833,97:2837,101:2838,98:[1,2834],99:[1,2835],100:[1,2836],103:Ec,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:2840,45:mt,81:H,82:q,83:Z}),$(ts,An),$(rs,_t,{84:2841}),$(ss,_t,{84:2842}),$(La,On),$(La,wn),$(as,vt,{95:2843}),$(rs,At,{101:2399,97:2844,103:wu,104:Fe,105:Ne,106:ke}),$(os,Ot,{88:2845}),$(os,Ot,{88:2846}),$(os,Ot,{88:2847}),$(ss,wt,{107:2405,109:2406,93:2848,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(is,_t,{84:2849}),$(La,Xe),$(La,He),{20:[1,2853],22:[1,2857],23:2851,38:2850,201:2852,215:2854,216:[1,2856],217:[1,2855]},$(as,Ft),$(as,Nt),$(as,kt),$(as,Lt),$(os,Rt),$(jt,Ct,{162:2858}),$(us,Dt),{121:[1,2859],124:212,125:213,126:Tt,128:It},{102:[1,2860]},$(as,Pt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),{102:[1,2862],108:2861,110:[1,2863],111:[1,2864],112:2865,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,2866]},$(ts,Es),{123:[1,2867]},$(ts,fs),$(di,bs),$(mi,vi),{20:ee,22:te,23:2868,215:57,216:ne},{20:bc,22:vc,102:[1,2881],110:[1,2882],111:[1,2883],112:2880,165:Ac,181:2871,191:2869,192:2870,197:2876,198:2877,199:2878,202:2879,205:[1,2884],206:[1,2885],207:[1,2890],208:[1,2891],209:[1,2892],210:[1,2893],211:[1,2886],212:[1,2887],213:[1,2888],214:[1,2889],216:Sc},$(yi,vi),{20:ee,22:te,23:2894,215:57,216:ne},{20:Oc,22:wc,102:[1,2907],110:[1,2908],111:[1,2909],112:2906,165:Tc,181:2897,191:2895,192:2896,197:2902,198:2903,199:2904,202:2905,205:[1,2910],206:[1,2911],207:[1,2916],208:[1,2917],209:[1,2918],210:[1,2919],211:[1,2912],212:[1,2913],213:[1,2914],214:[1,2915],216:Ic},$(os,Ir),$(os,Fr),$(os,Nr),$(os,kr),$(os,Lr),{113:[1,2920]},$(os,Dr),$(_i,vi),{20:ee,22:te,23:2921,215:57,216:ne},{20:Fc,22:Nc,102:[1,2934],110:[1,2935],111:[1,2936],112:2933,165:kc,181:2924,191:2922,192:2923,197:2929,198:2930,199:2931,202:2932,205:[1,2937],206:[1,2938],207:[1,2943],208:[1,2944],209:[1,2945],210:[1,2946],211:[1,2939],212:[1,2940],213:[1,2941],214:[1,2942],216:Lc},$(is,$i),$(us,Sa),$(us,Rt),$(us,Mt),$(us,Qt),$(us,Bt),$(us,Gt),$(ts,Es),{123:[1,2947]},$(ts,fs),$(di,bs),$(mi,vi),{20:ee,22:te,23:2948,215:57,216:ne},{20:Rc,22:jc,102:[1,2961],110:[1,2962],111:[1,2963],112:2960,165:Cc,181:2951,191:2949,192:2950,197:2956,198:2957,199:2958,202:2959,205:[1,2964],206:[1,2965],207:[1,2970],208:[1,2971],209:[1,2972],210:[1,2973],211:[1,2966],212:[1,2967],213:[1,2968],214:[1,2969],216:$c},$(yi,vi),{20:ee,22:te,23:2974,215:57,216:ne},{20:Dc,22:Pc,102:[1,2987],110:[1,2988],111:[1,2989],112:2986,165:Mc,181:2977,191:2975,192:2976,197:2982,198:2983,199:2984,202:2985,205:[1,2990],206:[1,2991],207:[1,2996],208:[1,2997],209:[1,2998],210:[1,2999],211:[1,2992],212:[1,2993],213:[1,2994],214:[1,2995],216:Qc},$(os,Ir),$(os,Fr),$(os,Nr),$(os,kr),$(os,Lr),{113:[1,3e3]},$(os,Dr),$(_i,vi),{20:ee,22:te,23:3001,215:57,216:ne},{20:Bc,22:Gc,102:[1,3014],110:[1,3015],111:[1,3016],112:3013,165:Vc,181:3004,191:3002,192:3003,197:3009,198:3010,199:3011,202:3012,205:[1,3017],206:[1,3018],207:[1,3023],208:[1,3024],209:[1,3025],210:[1,3026],211:[1,3019],212:[1,3020],213:[1,3021],214:[1,3022],216:Uc},$(is,$i),$(us,Sa),$(us,Rt),$(us,Mt),$(us,Qt),$(us,Bt),$(us,Gt),$(Jc,Bn,{85:3027,86:3028,193:3029,190:zc}),$(zo,Xc),$(de,X,{57:3031,61:3032,42:3033,45:me}),$(Ho,Hc),$(de,X,{61:3034,42:3035,45:me}),$(Ho,qc),$(Ho,Zc),$(Ho,Uu),$(Ho,Ju),{121:[1,3036],124:212,125:213,126:Tt,128:It},$(Ho,Xe),$(Ho,He),{20:[1,3040],22:[1,3044],23:3038,38:3037,201:3039,215:3041,216:[1,3043],217:[1,3042]},$(Ho,Kc),$(Ho,Wc),$(Yc,vt,{95:3045}),$(Ho,At,{101:2482,97:3046,103:Pu,104:Fe,105:Ne,106:ke}),$(Yc,Ft),$(Yc,Nt),$(Yc,kt),$(Yc,Lt),{102:[1,3047]},$(Yc,Pt),{72:[1,3048]},$(Bu,Jn,{101:2003,97:3049,103:Zo,104:Fe,105:Ne,106:ke}),$(Qu,zn),$(Ho,Xn,{92:3050,97:3051,93:3052,101:3053,107:3055,109:3056,103:el,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,qn,{92:3050,97:3051,93:3052,101:3053,107:3055,109:3056,103:el,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,Zn,{92:3050,97:3051,93:3052,101:3053,107:3055,109:3056,103:el,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(zu,Kn),{20:ur,22:cr,23:402,29:[1,3057],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3058,123:er,149:tr,189:nr}),$(Vu,Wt),$(Vu,W),$(Vu,Y),$(Vu,re),$(Vu,se),$(Vu,ie),$(Vu,ae),$(Vu,oe),$(Qu,Ir),$(zu,Fr),$(zu,Nr),$(zu,kr),$(zu,Lr),{113:[1,3059]},$(zu,Dr),$(Jc,Bn,{86:3028,193:3029,85:3060,190:zc}),$(tl,Mo,{153:3061,154:3062,157:nl,158:rl,159:sl,160:il}),$(al,Jo),$(ol,Xo,{58:3067}),$(ul,qo,{62:3068}),$(ge,Ee,{65:3069,75:3070,77:3071,78:3072,94:3075,96:3076,89:3078,90:3079,91:3080,80:3081,46:3082,97:3086,192:3087,93:3089,120:3090,101:3094,107:3100,109:3101,20:[1,3096],22:[1,3098],28:[1,3088],71:[1,3073],73:[1,3074],81:[1,3091],82:[1,3092],83:[1,3093],87:[1,3077],98:[1,3083],99:[1,3084],100:[1,3085],103:cl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,3099],216:[1,3097]}),$(tl,Mo,{154:3062,153:3102,157:nl,158:rl,159:sl,160:il}),$(Gn,Bn,{86:2535,193:2536,85:3103,190:Xu}),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3104,123:er,149:tr,189:nr}),$(Gn,Bn,{86:2535,193:2536,85:3105,190:Xu}),$(gt,Jn,{101:2044,97:3106,103:Ko,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,hi),$(ls,fs),$(xt,ps),$(ls,hs,{37:3107,194:[1,3108]}),{20:ds,22:ms,130:3109,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:3110,194:[1,3111]}),{20:ds,22:ms,130:3112,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,3113]},$(St,Pt),{102:[1,3115],108:3114,110:[1,3116],111:[1,3117],112:3118,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3119]},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:3120,194:[1,3121]}),{20:ds,22:ms,130:3122,165:ys,192:634,200:xs,216:_s},$(St,Vs),{123:[1,3123]},{20:[1,3126],22:[1,3128],89:3124,165:[1,3129],192:3125,216:[1,3127]},$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:Wo,22:Yo,89:3130,165:eu,192:3131,216:tu},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:nu,22:ru,89:3132,165:su,192:3133,216:iu},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:au,22:ou,89:3134,165:uu,192:3135,216:cu},$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:lu,22:fu,89:3136,165:pu,192:3137,216:hu},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:du,22:mu,89:3138,165:yu,192:3139,216:xu},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:_u,22:gu,89:3140,165:Eu,192:3141,216:bu},$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(it,Wr),$(it,Nn),$(it,On),$(it,wn),$(gt,_t,{84:3142}),$(it,Xe),$(it,He),{20:[1,3146],22:[1,3150],23:3144,38:3143,201:3145,215:3147,216:[1,3149],217:[1,3148]},{121:[1,3151],124:212,125:213,126:Tt,128:It},$(it,Yr),$(it,Ln),$(gt,_t,{84:3152}),$(Rn,vt,{95:3153}),$(gt,At,{101:2625,97:3154,103:qu,104:Fe,105:Ne,106:ke}),$(Rn,Ft),$(Rn,Nt),$(Rn,kt),$(Rn,Lt),{102:[1,3155]},$(Rn,Pt),{72:[1,3156]},$(Qn,Bn,{85:3157,86:3158,193:3159,190:[1,3160]}),$(Gn,Bn,{85:3161,86:3162,193:3163,190:ll}),$(xt,Jn,{101:2285,97:3165,103:vu,104:Fe,105:Ne,106:ke}),$(bt,zn),$(gt,Xn,{92:3166,97:3167,93:3168,101:3169,107:3171,109:3172,103:fl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,qn,{92:3166,97:3167,93:3168,101:3169,107:3171,109:3172,103:fl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(gt,Zn,{92:3166,97:3167,93:3168,101:3169,107:3171,109:3172,103:fl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$($t,Kn),$(Un,Bn,{85:3173,86:3174,193:3175,190:[1,3176]}),$(Sn,Wt),$(Sn,W),$(Sn,Y),$(Sn,re),$(Sn,se),$(Sn,ie),$(Sn,ae),$(Sn,oe),{20:ur,22:cr,23:402,29:[1,3177],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3178,123:er,149:tr,189:nr}),$(bt,Ir),$($t,Fr),$($t,Nr),$($t,kr),$($t,Lr),{113:[1,3179]},$($t,Dr),$(gt,$i),{194:[1,3182],195:3180,196:[1,3181]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:3183,204:3184,113:[1,3185]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,3188],195:3186,196:[1,3187]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:3189,204:3190,113:[1,3191]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{20:[1,3194],22:[1,3196],89:3192,165:[1,3197],192:3193,216:[1,3195]},{194:[1,3200],195:3198,196:[1,3199]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:3201,204:3202,113:[1,3203]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),$(gt,$i),{194:[1,3206],195:3204,196:[1,3205]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:3207,204:3208,113:[1,3209]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,3212],195:3210,196:[1,3211]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:3213,204:3214,113:[1,3215]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{20:[1,3218],22:[1,3220],89:3216,165:[1,3221],192:3217,216:[1,3219]},{194:[1,3224],195:3222,196:[1,3223]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:3225,204:3226,113:[1,3227]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),$(rs,ro),$(rs,Rt),$(ss,ro),$(ss,Rt),$(is,ro),$(is,Rt),$(ts,Wr),$(ts,Nn),$(ts,On),$(ts,wn),$(ss,_t,{84:3228}),$(ts,Xe),$(ts,He),{20:[1,3232],22:[1,3236],23:3230,38:3229,201:3231,215:3233,216:[1,3235],217:[1,3234]},{121:[1,3237],124:212,125:213,126:Tt,128:It},$(ts,Yr),$(ts,Ln),$(ss,_t,{84:3238}),$(di,vt,{95:3239}),$(ss,At,{101:2838,97:3240,103:Ec,104:Fe,105:Ne,106:ke}),$(di,Ft),$(di,Nt),$(di,kt),$(di,Lt),{102:[1,3241]},$(di,Pt),{72:[1,3242]},$(mi,Bn,{85:3243,86:3244,193:3245,190:[1,3246]}),$(yi,Bn,{85:3247,86:3248,193:3249,190:pl}),$(rs,Jn,{101:2399,97:3251,103:wu,104:Fe,105:Ne,106:ke}),$(as,zn),$(ss,Xn,{92:3252,97:3253,93:3254,101:3255,107:3257,109:3258,103:hl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,qn,{92:3252,97:3253,93:3254,101:3255,107:3257,109:3258,103:hl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ss,Zn,{92:3252,97:3253,93:3254,101:3255,107:3257,109:3258,103:hl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(us,Kn),$(_i,Bn,{85:3259,86:3260,193:3261,190:[1,3262]}),$(La,Wt),$(La,W),$(La,Y),$(La,re),$(La,se),$(La,ie),$(La,ae),$(La,oe),{20:ur,22:cr,23:402,29:[1,3263],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3264,123:er,149:tr,189:nr}),$(as,Ir),$(us,Fr),$(us,Nr),$(us,kr),$(us,Lr),{113:[1,3265]},$(us,Dr),$(ss,$i),{194:[1,3268],195:3266,196:[1,3267]},$(rs,Ca),$(rs,$a),$(rs,Da),$(rs,Mt),$(rs,Qt),$(rs,Bt),$(rs,Gt),$(rs,zs),$(rs,Xs),$(rs,Hs),$(rs,qs),$(rs,Zs,{203:3269,204:3270,113:[1,3271]}),$(rs,Ks),$(rs,Ws),$(rs,Ys),$(rs,ei),$(rs,ti),$(rs,ni),$(rs,ri),$(rs,si),$(rs,ii),$(Au,Rr),$(Au,jr),$(Au,Cr),$(Au,$r),{194:[1,3274],195:3272,196:[1,3273]},$(ss,Ca),$(ss,$a),$(ss,Da),$(ss,Mt),$(ss,Qt),$(ss,Bt),$(ss,Gt),$(ss,zs),$(ss,Xs),$(ss,Hs),$(ss,qs),$(ss,Zs,{203:3275,204:3276,113:[1,3277]}),$(ss,Ks),$(ss,Ws),$(ss,Ys),$(ss,ei),$(ss,ti),$(ss,ni),$(ss,ri),$(ss,si),$(ss,ii),$(Su,Rr),$(Su,jr),$(Su,Cr),$(Su,$r),{20:[1,3280],22:[1,3282],89:3278,165:[1,3283],192:3279,216:[1,3281]},{194:[1,3286],195:3284,196:[1,3285]},$(is,Ca),$(is,$a),$(is,Da),$(is,Mt),$(is,Qt),$(is,Bt),$(is,Gt),$(is,zs),$(is,Xs),$(is,Hs),$(is,qs),$(is,Zs,{203:3287,204:3288,113:[1,3289]}),$(is,Ks),$(is,Ws),$(is,Ys),$(is,ei),$(is,ti),$(is,ni),$(is,ri),$(is,si),$(is,ii),$(Ou,Rr),$(Ou,jr),$(Ou,Cr),$(Ou,$r),$(ss,$i),{194:[1,3292],195:3290,196:[1,3291]},$(rs,Ca),$(rs,$a),$(rs,Da),$(rs,Mt),$(rs,Qt),$(rs,Bt),$(rs,Gt),$(rs,zs),$(rs,Xs),$(rs,Hs),$(rs,qs),$(rs,Zs,{203:3293,204:3294,113:[1,3295]}),$(rs,Ks),$(rs,Ws),$(rs,Ys),$(rs,ei),$(rs,ti),$(rs,ni),$(rs,ri),$(rs,si),$(rs,ii),$(Au,Rr),$(Au,jr),$(Au,Cr),$(Au,$r),{194:[1,3298],195:3296,196:[1,3297]},$(ss,Ca),$(ss,$a),$(ss,Da),$(ss,Mt),$(ss,Qt),$(ss,Bt),$(ss,Gt),$(ss,zs),$(ss,Xs),$(ss,Hs),$(ss,qs),$(ss,Zs,{203:3299,204:3300,113:[1,3301]}),$(ss,Ks),$(ss,Ws),$(ss,Ys),$(ss,ei),$(ss,ti),$(ss,ni),$(ss,ri),$(ss,si),$(ss,ii),$(Su,Rr),$(Su,jr),$(Su,Cr),$(Su,$r),{20:[1,3304],22:[1,3306],89:3302,165:[1,3307],192:3303,216:[1,3305]},{194:[1,3310],195:3308,196:[1,3309]},$(is,Ca),$(is,$a),$(is,Da),$(is,Mt),$(is,Qt),$(is,Bt),$(is,Gt),$(is,zs),$(is,Xs),$(is,Hs),$(is,qs),$(is,Zs,{203:3311,204:3312,113:[1,3313]}),$(is,Ks),$(is,Ws),$(is,Ys),$(is,ei),$(is,ti),$(is,ni),$(is,ri),$(is,si),$(is,ii),$(Ou,Rr),$(Ou,jr),$(Ou,Cr),$(Ou,$r),$(Ps,dl),$(Po,ps),$(Ps,hs,{37:3314,194:[1,3315]}),{20:ds,22:ms,130:3316,165:ys,192:634,200:xs,216:_s},$(zo,ml),$(Ho,qo,{62:3317}),$(ge,Ee,{65:3318,75:3319,77:3320,78:3321,94:3324,96:3325,89:3327,90:3328,91:3329,80:3330,46:3331,97:3335,192:3336,93:3338,120:3339,101:3343,107:3349,109:3350,20:[1,3345],22:[1,3347],28:[1,3337],71:[1,3322],73:[1,3323],81:[1,3340],82:[1,3341],83:[1,3342],87:[1,3326],98:[1,3332],99:[1,3333],100:[1,3334],103:yl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,3348],216:[1,3346]}),$(Ho,xl),$(ge,Ee,{65:3351,75:3352,77:3353,78:3354,94:3357,96:3358,89:3360,90:3361,91:3362,80:3363,46:3364,97:3368,192:3369,93:3371,120:3372,101:3376,107:3382,109:3383,20:[1,3378],22:[1,3380],28:[1,3370],71:[1,3355],73:[1,3356],81:[1,3373],82:[1,3374],83:[1,3375],87:[1,3359],98:[1,3365],99:[1,3366],100:[1,3367],103:_l,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,3381],216:[1,3379]}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3384,123:er,149:tr,189:nr}),$(Ho,Wt),$(Ho,W),$(Ho,Y),$(Ho,re),$(Ho,se),$(Ho,ie),$(Ho,ae),$(Ho,oe),$(Ho,Jn,{101:2482,97:3385,103:Pu,104:Fe,105:Ne,106:ke}),$(Yc,zn),$(Yc,Ir),$(Ho,gl),$(Qu,bs),$(Gu,vs),$(Gu,As),$(Gu,Ss),{102:[1,3386]},$(Gu,Pt),{102:[1,3388],108:3387,110:[1,3389],111:[1,3390],112:3391,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3392]},$(Gu,Vs),{123:[1,3393]},{20:[1,3396],22:[1,3398],89:3394,165:[1,3399],192:3395,216:[1,3397]},$(Ps,El),$(tl,_t,{84:3400}),$(tl,Tu),$(tl,Iu),$(tl,Fu),$(tl,Nu),$(tl,ku),$(al,Lu,{59:3401,53:[1,3402]}),$(ol,Ru,{63:3403,55:[1,3404]}),$(ul,ju),$(ul,Cu,{76:3405,78:3406,80:3407,46:3408,120:3409,81:[1,3410],82:[1,3411],83:[1,3412],121:Ee,126:Ee,128:Ee}),$(ul,$u),$(ul,Du,{79:3413,75:3414,94:3415,96:3416,97:3420,101:3421,98:[1,3417],99:[1,3418],100:[1,3419],103:bl,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:3423,45:mt,81:H,82:q,83:Z}),$(ul,Mu),$(vl,vt,{95:3424}),$(Al,At,{101:3094,97:3425,103:cl,104:Fe,105:Ne,106:ke}),$(Sl,Ot,{88:3426}),$(Sl,Ot,{88:3427}),$(Sl,Ot,{88:3428}),$(ul,wt,{107:3100,109:3101,93:3429,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ol,Uu),$(Ol,Ju),$(vl,Ft),$(vl,Nt),$(vl,kt),$(vl,Lt),$(Sl,Rt),$(jt,Ct,{162:3430}),$(wl,Dt),{121:[1,3431],124:212,125:213,126:Tt,128:It},$(Ol,Xe),$(Ol,He),{20:[1,3435],22:[1,3439],23:3433,38:3432,201:3434,215:3436,216:[1,3438],217:[1,3437]},{102:[1,3440]},$(vl,Pt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),{102:[1,3442],108:3441,110:[1,3443],111:[1,3444],112:3445,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3446]},$(tl,_t,{84:3447}),$(it,Es),{123:[1,3448]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:3449,215:57,216:ne},{20:Tl,22:Il,102:[1,3462],110:[1,3463],111:[1,3464],112:3461,165:Fl,181:3452,191:3450,192:3451,197:3457,198:3458,199:3459,202:3460,205:[1,3465],206:[1,3466],207:[1,3471],208:[1,3472],209:[1,3473],210:[1,3474],211:[1,3467],212:[1,3468],213:[1,3469],214:[1,3470],216:Nl},$(Gn,vi),{20:ee,22:te,23:3475,215:57,216:ne},{20:kl,22:Ll,102:[1,3488],110:[1,3489],111:[1,3490],112:3487,165:Rl,181:3478,191:3476,192:3477,197:3483,198:3484,199:3485,202:3486,205:[1,3491],206:[1,3492],207:[1,3497],208:[1,3498],209:[1,3499],210:[1,3500],211:[1,3493],212:[1,3494],213:[1,3495],214:[1,3496],216:jl},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,3501]},$(St,Dr),$(Un,vi),{20:ee,22:te,23:3502,215:57,216:ne},{20:Cl,22:$l,102:[1,3515],110:[1,3516],111:[1,3517],112:3514,165:Dl,181:3505,191:3503,192:3504,197:3510,198:3511,199:3512,202:3513,205:[1,3518],206:[1,3519],207:[1,3524],208:[1,3525],209:[1,3526],210:[1,3527],211:[1,3520],212:[1,3521],213:[1,3522],214:[1,3523],216:Pl},$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(Gn,Bn,{86:3162,193:3163,85:3528,190:ll}),$(it,Wt),$(it,W),$(it,Y),$(it,re),$(it,se),$(it,ie),$(it,ae),$(it,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3529,123:er,149:tr,189:nr}),$(Gn,Bn,{86:3162,193:3163,85:3530,190:ll}),$(gt,Jn,{101:2625,97:3531,103:qu,104:Fe,105:Ne,106:ke}),$(Rn,zn),$(Rn,Ir),$(it,hi),$(ls,fs),$(xt,ps),$(ls,hs,{37:3532,194:[1,3533]}),{20:ds,22:ms,130:3534,165:ys,192:634,200:xs,216:_s},$(it,gs),$(gt,ps),$(it,hs,{37:3535,194:[1,3536]}),{20:ds,22:ms,130:3537,165:ys,192:634,200:xs,216:_s},$(bt,bs),$(St,vs),$(St,As),$(St,Ss),{102:[1,3538]},$(St,Pt),{102:[1,3540],108:3539,110:[1,3541],111:[1,3542],112:3543,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3544]},$(Sn,Es),$(Et,ps),$(Sn,hs,{37:3545,194:[1,3546]}),{20:ds,22:ms,130:3547,165:ys,192:634,200:xs,216:_s},$(St,Vs),{123:[1,3548]},{20:[1,3551],22:[1,3553],89:3549,165:[1,3554],192:3550,216:[1,3552]},$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:Zu,22:Ku,89:3555,165:Wu,192:3556,216:Yu},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:ec,22:tc,89:3557,165:nc,192:3558,216:rc},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:sc,22:ic,89:3559,165:ac,192:3560,216:oc},$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:uc,22:cc,89:3561,165:lc,192:3562,216:fc},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:pc,22:hc,89:3563,165:dc,192:3564,216:mc},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:yc,22:xc,89:3565,165:_c,192:3566,216:gc},$(yi,Bn,{86:3248,193:3249,85:3567,190:pl}),$(ts,Wt),$(ts,W),$(ts,Y),$(ts,re),$(ts,se),$(ts,ie),$(ts,ae),$(ts,oe),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3568,123:er,149:tr,189:nr}),$(yi,Bn,{86:3248,193:3249,85:3569,190:pl}),$(ss,Jn,{101:2838,97:3570,103:Ec,104:Fe,105:Ne,106:ke}),$(di,zn),$(di,Ir),$(ts,hi),$(ka,fs),$(rs,ps),$(ka,hs,{37:3571,194:[1,3572]}),{20:ds,22:ms,130:3573,165:ys,192:634,200:xs,216:_s},$(ts,gs),$(ss,ps),$(ts,hs,{37:3574,194:[1,3575]}),{20:ds,22:ms,130:3576,165:ys,192:634,200:xs,216:_s},$(as,bs),$(os,vs),$(os,As),$(os,Ss),{102:[1,3577]},$(os,Pt),{102:[1,3579],108:3578,110:[1,3580],111:[1,3581],112:3582,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3583]},$(La,Es),$(is,ps),$(La,hs,{37:3584,194:[1,3585]}),{20:ds,22:ms,130:3586,165:ys,192:634,200:xs,216:_s},$(os,Vs),{123:[1,3587]},{20:[1,3590],22:[1,3592],89:3588,165:[1,3593],192:3589,216:[1,3591]},$(mi,Yt),$(mi,en),$(mi,tn),$(rs,va),$(rs,Aa),{20:bc,22:vc,89:3594,165:Ac,192:3595,216:Sc},$(yi,Yt),$(yi,en),$(yi,tn),$(ss,va),$(ss,Aa),{20:Oc,22:wc,89:3596,165:Tc,192:3597,216:Ic},$(os,Sa),$(os,Rt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),$(_i,Yt),$(_i,en),$(_i,tn),$(is,va),$(is,Aa),{20:Fc,22:Nc,89:3598,165:kc,192:3599,216:Lc},$(mi,Yt),$(mi,en),$(mi,tn),$(rs,va),$(rs,Aa),{20:Rc,22:jc,89:3600,165:Cc,192:3601,216:$c},$(yi,Yt),$(yi,en),$(yi,tn),$(ss,va),$(ss,Aa),{20:Dc,22:Pc,89:3602,165:Mc,192:3603,216:Qc},$(os,Sa),$(os,Rt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),$(_i,Yt),$(_i,en),$(_i,tn),$(is,va),$(is,Aa),{20:Bc,22:Gc,89:3604,165:Vc,192:3605,216:Uc},$(Jc,vi),{20:ee,22:te,23:3606,215:57,216:ne},{20:Ml,22:Ql,102:[1,3619],110:[1,3620],111:[1,3621],112:3618,165:Bl,181:3609,191:3607,192:3608,197:3614,198:3615,199:3616,202:3617,205:[1,3622],206:[1,3623],207:[1,3628],208:[1,3629],209:[1,3630],210:[1,3631],211:[1,3624],212:[1,3625],213:[1,3626],214:[1,3627],216:Gl},$(zo,Ru,{63:3632,55:[1,3633]}),$(Ho,ju),$(Ho,Cu,{76:3634,78:3635,80:3636,46:3637,120:3638,81:[1,3639],82:[1,3640],83:[1,3641],121:Ee,126:Ee,128:Ee}),$(Ho,$u),$(Ho,Du,{79:3642,75:3643,94:3644,96:3645,97:3649,101:3650,98:[1,3646],99:[1,3647],100:[1,3648],103:Vl,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:3652,45:mt,81:H,82:q,83:Z}),$(Ho,Mu),$(Qu,vt,{95:3653}),$(Bu,At,{101:3343,97:3654,103:yl,104:Fe,105:Ne,106:ke}),$(Gu,Ot,{88:3655}),$(Gu,Ot,{88:3656}),$(Gu,Ot,{88:3657}),$(Ho,wt,{107:3349,109:3350,93:3658,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Vu,Uu),$(Vu,Ju),$(Qu,Ft),$(Qu,Nt),$(Qu,kt),$(Qu,Lt),$(Gu,Rt),$(jt,Ct,{162:3659}),$(zu,Dt),{121:[1,3660],124:212,125:213,126:Tt,128:It},$(Vu,Xe),$(Vu,He),{20:[1,3664],22:[1,3668],23:3662,38:3661,201:3663,215:3665,216:[1,3667],217:[1,3666]},{102:[1,3669]},$(Qu,Pt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),{102:[1,3671],108:3670,110:[1,3672],111:[1,3673],112:3674,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3675]},$(Ho,ju),$(Ho,Cu,{76:3676,78:3677,80:3678,46:3679,120:3680,81:[1,3681],82:[1,3682],83:[1,3683],121:Ee,126:Ee,128:Ee}),$(Ho,$u),$(Ho,Du,{79:3684,75:3685,94:3686,96:3687,97:3691,101:3692,98:[1,3688],99:[1,3689],100:[1,3690],103:Ul,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:3694,45:mt,81:H,82:q,83:Z}),$(Ho,Mu),$(Qu,vt,{95:3695}),$(Bu,At,{101:3376,97:3696,103:_l,104:Fe,105:Ne,106:ke}),$(Gu,Ot,{88:3697}),$(Gu,Ot,{88:3698}),$(Gu,Ot,{88:3699}),$(Ho,wt,{107:3382,109:3383,93:3700,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Vu,Uu),$(Vu,Ju),$(Qu,Ft),$(Qu,Nt),$(Qu,kt),$(Qu,Lt),$(Gu,Rt),$(jt,Ct,{162:3701}),$(zu,Dt),{121:[1,3702],124:212,125:213,126:Tt,128:It},$(Vu,Xe),$(Vu,He),{20:[1,3706],22:[1,3710],23:3704,38:3703,201:3705,215:3707,216:[1,3709],217:[1,3708]},{102:[1,3711]},$(Qu,Pt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),{102:[1,3713],108:3712,110:[1,3714],111:[1,3715],112:3716,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,3717]},{123:[1,3718]},$(Yc,bs),$(Gu,Ir),$(Gu,Fr),$(Gu,Nr),$(Gu,kr),$(Gu,Lr),{113:[1,3719]},$(Gu,Dr),$(Vu,$i),$(zu,Sa),$(zu,Rt),$(zu,Mt),$(zu,Qt),$(zu,Bt),$(zu,Gt),$(Jl,Bn,{85:3720,86:3721,193:3722,190:zl}),$(ol,Xc),$(de,X,{57:3724,61:3725,42:3726,45:me}),$(ul,Hc),$(de,X,{61:3727,42:3728,45:me}),$(ul,qc),$(ul,Zc),$(ul,Uu),$(ul,Ju),{121:[1,3729],124:212,125:213,126:Tt,128:It},$(ul,Xe),$(ul,He),{20:[1,3733],22:[1,3737],23:3731,38:3730,201:3732,215:3734,216:[1,3736],217:[1,3735]},$(ul,Kc),$(ul,Wc),$(Xl,vt,{95:3738}),$(ul,At,{101:3421,97:3739,103:bl,104:Fe,105:Ne,106:ke}),$(Xl,Ft),$(Xl,Nt),$(Xl,kt),$(Xl,Lt),{102:[1,3740]},$(Xl,Pt),{72:[1,3741]},$(Al,Jn,{101:3094,97:3742,103:cl,104:Fe,105:Ne,106:ke}),$(vl,zn),$(ul,Xn,{92:3743,97:3744,93:3745,101:3746,107:3748,109:3749,103:Hl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,qn,{92:3743,97:3744,93:3745,101:3746,107:3748,109:3749,103:Hl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,Zn,{92:3743,97:3744,93:3745,101:3746,107:3748,109:3749,103:Hl,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(wl,Kn),{20:ur,22:cr,23:402,29:[1,3750],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3751,123:er,149:tr,189:nr}),$(Ol,Wt),$(Ol,W),$(Ol,Y),$(Ol,re),$(Ol,se),$(Ol,ie),$(Ol,ae),$(Ol,oe),$(vl,Ir),$(wl,Fr),$(wl,Nr),$(wl,kr),$(wl,Lr),{113:[1,3752]},$(wl,Dr),$(Jl,Bn,{86:3721,193:3722,85:3753,190:zl}),$(gt,$i),{194:[1,3756],195:3754,196:[1,3755]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:3757,204:3758,113:[1,3759]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,3762],195:3760,196:[1,3761]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:3763,204:3764,113:[1,3765]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{20:[1,3768],22:[1,3770],89:3766,165:[1,3771],192:3767,216:[1,3769]},{194:[1,3774],195:3772,196:[1,3773]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:3775,204:3776,113:[1,3777]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),$(it,Es),{123:[1,3778]},$(it,fs),$(Rn,bs),$(Qn,vi),{20:ee,22:te,23:3779,215:57,216:ne},{20:ql,22:Zl,102:[1,3792],110:[1,3793],111:[1,3794],112:3791,165:Kl,181:3782,191:3780,192:3781,197:3787,198:3788,199:3789,202:3790,205:[1,3795],206:[1,3796],207:[1,3801],208:[1,3802],209:[1,3803],210:[1,3804],211:[1,3797],212:[1,3798],213:[1,3799],214:[1,3800],216:Wl},$(Gn,vi),{20:ee,22:te,23:3805,215:57,216:ne},{20:Yl,22:ef,102:[1,3818],110:[1,3819],111:[1,3820],112:3817,165:tf,181:3808,191:3806,192:3807,197:3813,198:3814,199:3815,202:3816,205:[1,3821],206:[1,3822],207:[1,3827],208:[1,3828],209:[1,3829],210:[1,3830],211:[1,3823],212:[1,3824],213:[1,3825],214:[1,3826],216:nf},$(St,Ir),$(St,Fr),$(St,Nr),$(St,kr),$(St,Lr),{113:[1,3831]},$(St,Dr),$(Un,vi),{20:ee,22:te,23:3832,215:57,216:ne},{20:rf,22:sf,102:[1,3845],110:[1,3846],111:[1,3847],112:3844,165:af,181:3835,191:3833,192:3834,197:3840,198:3841,199:3842,202:3843,205:[1,3848],206:[1,3849],207:[1,3854],208:[1,3855],209:[1,3856],210:[1,3857],211:[1,3850],212:[1,3851],213:[1,3852],214:[1,3853],216:of},$(Et,$i),$($t,Sa),$($t,Rt),$($t,Mt),$($t,Qt),$($t,Bt),$($t,Gt),$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(ts,Es),{123:[1,3858]},$(ts,fs),$(di,bs),$(mi,vi),{20:ee,22:te,23:3859,215:57,216:ne},{20:uf,22:cf,102:[1,3872],110:[1,3873],111:[1,3874],112:3871,165:lf,181:3862,191:3860,192:3861,197:3867,198:3868,199:3869,202:3870,205:[1,3875],206:[1,3876],207:[1,3881],208:[1,3882],209:[1,3883],210:[1,3884],211:[1,3877],212:[1,3878],213:[1,3879],214:[1,3880],216:ff},$(yi,vi),{20:ee,22:te,23:3885,215:57,216:ne},{20:pf,22:hf,102:[1,3898],110:[1,3899],111:[1,3900],112:3897,165:df,181:3888,191:3886,192:3887,197:3893,198:3894,199:3895,202:3896,205:[1,3901],206:[1,3902],207:[1,3907],208:[1,3908],209:[1,3909],210:[1,3910],211:[1,3903],212:[1,3904],213:[1,3905],214:[1,3906],216:mf},$(os,Ir),$(os,Fr),$(os,Nr),$(os,kr),$(os,Lr),{113:[1,3911]},$(os,Dr),$(_i,vi),{20:ee,22:te,23:3912,215:57,216:ne},{20:yf,22:xf,102:[1,3925],110:[1,3926],111:[1,3927],112:3924,165:_f,181:3915,191:3913,192:3914,197:3920,198:3921,199:3922,202:3923,205:[1,3928],206:[1,3929],207:[1,3934],208:[1,3935],209:[1,3936],210:[1,3937],211:[1,3930],212:[1,3931],213:[1,3932],214:[1,3933],216:gf},$(is,$i),$(us,Sa),$(us,Rt),$(us,Mt),$(us,Qt),$(us,Bt),$(us,Gt),$(rs,ro),$(rs,Rt),$(ss,ro),$(ss,Rt),$(is,ro),$(is,Rt),$(rs,ro),$(rs,Rt),$(ss,ro),$(ss,Rt),$(is,ro),$(is,Rt),{194:[1,3940],195:3938,196:[1,3939]},$(Po,Ca),$(Po,$a),$(Po,Da),$(Po,Mt),$(Po,Qt),$(Po,Bt),$(Po,Gt),$(Po,zs),$(Po,Xs),$(Po,Hs),$(Po,qs),$(Po,Zs,{203:3941,204:3942,113:[1,3943]}),$(Po,Ks),$(Po,Ws),$(Po,Ys),$(Po,ei),$(Po,ti),$(Po,ni),$(Po,ri),$(Po,si),$(Po,ii),$(Ef,Rr),$(Ef,jr),$(Ef,Cr),$(Ef,$r),$(Ho,Hc),$(de,X,{61:3944,42:3945,45:me}),$(Ho,qc),$(Ho,Zc),$(Ho,Uu),$(Ho,Ju),{121:[1,3946],124:212,125:213,126:Tt,128:It},$(Ho,Xe),$(Ho,He),{20:[1,3950],22:[1,3954],23:3948,38:3947,201:3949,215:3951,216:[1,3953],217:[1,3952]},$(Ho,Kc),$(Ho,Wc),$(Yc,vt,{95:3955}),$(Ho,At,{101:3650,97:3956,103:Vl,104:Fe,105:Ne,106:ke}),$(Yc,Ft),$(Yc,Nt),$(Yc,kt),$(Yc,Lt),{102:[1,3957]},$(Yc,Pt),{72:[1,3958]},$(Bu,Jn,{101:3343,97:3959,103:yl,104:Fe,105:Ne,106:ke}),$(Qu,zn),$(Ho,Xn,{92:3960,97:3961,93:3962,101:3963,107:3965,109:3966,103:bf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,qn,{92:3960,97:3961,93:3962,101:3963,107:3965,109:3966,103:bf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,Zn,{92:3960,97:3961,93:3962,101:3963,107:3965,109:3966,103:bf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(zu,Kn),{20:ur,22:cr,23:402,29:[1,3967],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3968,123:er,149:tr,189:nr}),$(Vu,Wt),$(Vu,W),$(Vu,Y),$(Vu,re),$(Vu,se),$(Vu,ie),$(Vu,ae),$(Vu,oe),$(Qu,Ir),$(zu,Fr),$(zu,Nr),$(zu,kr),$(zu,Lr),{113:[1,3969]},$(zu,Dr),$(Ho,qc),$(Ho,Zc),$(Ho,Uu),$(Ho,Ju),{121:[1,3970],124:212,125:213,126:Tt,128:It},$(Ho,Xe),$(Ho,He),{20:[1,3974],22:[1,3978],23:3972,38:3971,201:3973,215:3975,216:[1,3977],217:[1,3976]},$(Ho,Kc),$(Ho,Wc),$(Yc,vt,{95:3979}),$(Ho,At,{101:3692,97:3980,103:Ul,104:Fe,105:Ne,106:ke}),$(Yc,Ft),$(Yc,Nt),$(Yc,kt),$(Yc,Lt),{102:[1,3981]},$(Yc,Pt),{72:[1,3982]},$(Bu,Jn,{101:3376,97:3983,103:_l,104:Fe,105:Ne,106:ke}),$(Qu,zn),$(Ho,Xn,{92:3984,97:3985,93:3986,101:3987,107:3989,109:3990,103:vf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,qn,{92:3984,97:3985,93:3986,101:3987,107:3989,109:3990,103:vf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,Zn,{92:3984,97:3985,93:3986,101:3987,107:3989,109:3990,103:vf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(zu,Kn),{20:ur,22:cr,23:402,29:[1,3991],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:3992,123:er,149:tr,189:nr}),$(Vu,Wt),$(Vu,W),$(Vu,Y),$(Vu,re),$(Vu,se),$(Vu,ie),$(Vu,ae),$(Vu,oe),$(Qu,Ir),$(zu,Fr),$(zu,Nr),$(zu,kr),$(zu,Lr),{113:[1,3993]},$(zu,Dr),$(Ho,$i),{20:[1,3996],22:[1,3998],89:3994,165:[1,3999],192:3995,216:[1,3997]},$(Wa,dl),$(tl,ps),$(Wa,hs,{37:4e3,194:[1,4001]}),{20:ds,22:ms,130:4002,165:ys,192:634,200:xs,216:_s},$(ol,ml),$(ul,qo,{62:4003}),$(ge,Ee,{65:4004,75:4005,77:4006,78:4007,94:4010,96:4011,89:4013,90:4014,91:4015,80:4016,46:4017,97:4021,192:4022,93:4024,120:4025,101:4029,107:4035,109:4036,20:[1,4031],22:[1,4033],28:[1,4023],71:[1,4008],73:[1,4009],81:[1,4026],82:[1,4027],83:[1,4028],87:[1,4012],98:[1,4018],99:[1,4019],100:[1,4020],103:Af,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,4034],216:[1,4032]}),$(ul,xl),$(ge,Ee,{65:4037,75:4038,77:4039,78:4040,94:4043,96:4044,89:4046,90:4047,91:4048,80:4049,46:4050,97:4054,192:4055,93:4057,120:4058,101:4062,107:4068,109:4069,20:[1,4064],22:[1,4066],28:[1,4056],71:[1,4041],73:[1,4042],81:[1,4059],82:[1,4060],83:[1,4061],87:[1,4045],98:[1,4051],99:[1,4052],100:[1,4053],103:Sf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,4067],216:[1,4065]}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4070,123:er,149:tr,189:nr}),$(ul,Wt),$(ul,W),$(ul,Y),$(ul,re),$(ul,se),$(ul,ie),$(ul,ae),$(ul,oe),$(ul,Jn,{101:3421,97:4071,103:bl,104:Fe,105:Ne,106:ke}),$(Xl,zn),$(Xl,Ir),$(ul,gl),$(vl,bs),$(Sl,vs),$(Sl,As),$(Sl,Ss),{102:[1,4072]},$(Sl,Pt),{102:[1,4074],108:4073,110:[1,4075],111:[1,4076],112:4077,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4078]},$(Sl,Vs),{123:[1,4079]},{20:[1,4082],22:[1,4084],89:4080,165:[1,4085],192:4081,216:[1,4083]},$(Wa,El),$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:Tl,22:Il,89:4086,165:Fl,192:4087,216:Nl},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:kl,22:Ll,89:4088,165:Rl,192:4089,216:jl},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:Cl,22:$l,89:4090,165:Dl,192:4091,216:Pl},$(gt,$i),{194:[1,4094],195:4092,196:[1,4093]},$(xt,Ca),$(xt,$a),$(xt,Da),$(xt,Mt),$(xt,Qt),$(xt,Bt),$(xt,Gt),$(xt,zs),$(xt,Xs),$(xt,Hs),$(xt,qs),$(xt,Zs,{203:4095,204:4096,113:[1,4097]}),$(xt,Ks),$(xt,Ws),$(xt,Ys),$(xt,ei),$(xt,ti),$(xt,ni),$(xt,ri),$(xt,si),$(xt,ii),$(Pa,Rr),$(Pa,jr),$(Pa,Cr),$(Pa,$r),{194:[1,4100],195:4098,196:[1,4099]},$(gt,Ca),$(gt,$a),$(gt,Da),$(gt,Mt),$(gt,Qt),$(gt,Bt),$(gt,Gt),$(gt,zs),$(gt,Xs),$(gt,Hs),$(gt,qs),$(gt,Zs,{203:4101,204:4102,113:[1,4103]}),$(gt,Ks),$(gt,Ws),$(gt,Ys),$(gt,ei),$(gt,ti),$(gt,ni),$(gt,ri),$(gt,si),$(gt,ii),$(Ma,Rr),$(Ma,jr),$(Ma,Cr),$(Ma,$r),{20:[1,4106],22:[1,4108],89:4104,165:[1,4109],192:4105,216:[1,4107]},{194:[1,4112],195:4110,196:[1,4111]},$(Et,Ca),$(Et,$a),$(Et,Da),$(Et,Mt),$(Et,Qt),$(Et,Bt),$(Et,Gt),$(Et,zs),$(Et,Xs),$(Et,Hs),$(Et,qs),$(Et,Zs,{203:4113,204:4114,113:[1,4115]}),$(Et,Ks),$(Et,Ws),$(Et,Ys),$(Et,ei),$(Et,ti),$(Et,ni),$(Et,ri),$(Et,si),$(Et,ii),$(Qa,Rr),$(Qa,jr),$(Qa,Cr),$(Qa,$r),$(ss,$i),{194:[1,4118],195:4116,196:[1,4117]},$(rs,Ca),$(rs,$a),$(rs,Da),$(rs,Mt),$(rs,Qt),$(rs,Bt),$(rs,Gt),$(rs,zs),$(rs,Xs),$(rs,Hs),$(rs,qs),$(rs,Zs,{203:4119,204:4120,113:[1,4121]}),$(rs,Ks),$(rs,Ws),$(rs,Ys),$(rs,ei),$(rs,ti),$(rs,ni),$(rs,ri),$(rs,si),$(rs,ii),$(Au,Rr),$(Au,jr),$(Au,Cr),$(Au,$r),{194:[1,4124],195:4122,196:[1,4123]},$(ss,Ca),$(ss,$a),$(ss,Da),$(ss,Mt),$(ss,Qt),$(ss,Bt),$(ss,Gt),$(ss,zs),$(ss,Xs),$(ss,Hs),$(ss,qs),$(ss,Zs,{203:4125,204:4126,113:[1,4127]}),$(ss,Ks),$(ss,Ws),$(ss,Ys),$(ss,ei),$(ss,ti),$(ss,ni),$(ss,ri),$(ss,si),$(ss,ii),$(Su,Rr),$(Su,jr),$(Su,Cr),$(Su,$r),{20:[1,4130],22:[1,4132],89:4128,165:[1,4133],192:4129,216:[1,4131]},{194:[1,4136],195:4134,196:[1,4135]},$(is,Ca),$(is,$a),$(is,Da),$(is,Mt),$(is,Qt),$(is,Bt),$(is,Gt),$(is,zs),$(is,Xs),$(is,Hs),$(is,qs),$(is,Zs,{203:4137,204:4138,113:[1,4139]}),$(is,Ks),$(is,Ws),$(is,Ys),$(is,ei),$(is,ti),$(is,ni),$(is,ri),$(is,si),$(is,ii),$(Ou,Rr),$(Ou,jr),$(Ou,Cr),$(Ou,$r),$(Jc,Yt),$(Jc,en),$(Jc,tn),$(Po,va),$(Po,Aa),{20:Ml,22:Ql,89:4140,165:Bl,192:4141,216:Gl},$(Ho,xl),$(ge,Ee,{65:4142,75:4143,77:4144,78:4145,94:4148,96:4149,89:4151,90:4152,91:4153,80:4154,46:4155,97:4159,192:4160,93:4162,120:4163,101:4167,107:4173,109:4174,20:[1,4169],22:[1,4171],28:[1,4161],71:[1,4146],73:[1,4147],81:[1,4164],82:[1,4165],83:[1,4166],87:[1,4150],98:[1,4156],99:[1,4157],100:[1,4158],103:Of,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,4172],216:[1,4170]}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4175,123:er,149:tr,189:nr}),$(Ho,Wt),$(Ho,W),$(Ho,Y),$(Ho,re),$(Ho,se),$(Ho,ie),$(Ho,ae),$(Ho,oe),$(Ho,Jn,{101:3650,97:4176,103:Vl,104:Fe,105:Ne,106:ke}),$(Yc,zn),$(Yc,Ir),$(Ho,gl),$(Qu,bs),$(Gu,vs),$(Gu,As),$(Gu,Ss),{102:[1,4177]},$(Gu,Pt),{102:[1,4179],108:4178,110:[1,4180],111:[1,4181],112:4182,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4183]},$(Gu,Vs),{123:[1,4184]},{20:[1,4187],22:[1,4189],89:4185,165:[1,4190],192:4186,216:[1,4188]},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4191,123:er,149:tr,189:nr}),$(Ho,Wt),$(Ho,W),$(Ho,Y),$(Ho,re),$(Ho,se),$(Ho,ie),$(Ho,ae),$(Ho,oe),$(Ho,Jn,{101:3692,97:4192,103:Ul,104:Fe,105:Ne,106:ke}),$(Yc,zn),$(Yc,Ir),$(Ho,gl),$(Qu,bs),$(Gu,vs),$(Gu,As),$(Gu,Ss),{102:[1,4193]},$(Gu,Pt),{102:[1,4195],108:4194,110:[1,4196],111:[1,4197],112:4198,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4199]},$(Gu,Vs),{123:[1,4200]},{20:[1,4203],22:[1,4205],89:4201,165:[1,4206],192:4202,216:[1,4204]},$(Gu,Sa),$(Gu,Rt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),$(Jl,vi),{20:ee,22:te,23:4207,215:57,216:ne},{20:wf,22:Tf,102:[1,4220],110:[1,4221],111:[1,4222],112:4219,165:If,181:4210,191:4208,192:4209,197:4215,198:4216,199:4217,202:4218,205:[1,4223],206:[1,4224],207:[1,4229],208:[1,4230],209:[1,4231],210:[1,4232],211:[1,4225],212:[1,4226],213:[1,4227],214:[1,4228],216:Ff},$(ol,Ru,{63:4233,55:[1,4234]}),$(ul,ju),$(ul,Cu,{76:4235,78:4236,80:4237,46:4238,120:4239,81:[1,4240],82:[1,4241],83:[1,4242],121:Ee,126:Ee,128:Ee}),$(ul,$u),$(ul,Du,{79:4243,75:4244,94:4245,96:4246,97:4250,101:4251,98:[1,4247],99:[1,4248],100:[1,4249],103:Nf,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:4253,45:mt,81:H,82:q,83:Z}),$(ul,Mu),$(vl,vt,{95:4254}),$(Al,At,{101:4029,97:4255,103:Af,104:Fe,105:Ne,106:ke}),$(Sl,Ot,{88:4256}),$(Sl,Ot,{88:4257}),$(Sl,Ot,{88:4258}),$(ul,wt,{107:4035,109:4036,93:4259,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ol,Uu),$(Ol,Ju),$(vl,Ft),$(vl,Nt),$(vl,kt),$(vl,Lt),$(Sl,Rt),$(jt,Ct,{162:4260}),$(wl,Dt),{121:[1,4261],124:212,125:213,126:Tt,128:It},$(Ol,Xe),$(Ol,He),{20:[1,4265],22:[1,4269],23:4263,38:4262,201:4264,215:4266,216:[1,4268],217:[1,4267]},{102:[1,4270]},$(vl,Pt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),{102:[1,4272],108:4271,110:[1,4273],111:[1,4274],112:4275,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4276]},$(ul,ju),$(ul,Cu,{76:4277,78:4278,80:4279,46:4280,120:4281,81:[1,4282],82:[1,4283],83:[1,4284],121:Ee,126:Ee,128:Ee}),$(ul,$u),$(ul,Du,{79:4285,75:4286,94:4287,96:4288,97:4292,101:4293,98:[1,4289],99:[1,4290],100:[1,4291],103:kf,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:4295,45:mt,81:H,82:q,83:Z}),$(ul,Mu),$(vl,vt,{95:4296}),$(Al,At,{101:4062,97:4297,103:Sf,104:Fe,105:Ne,106:ke}),$(Sl,Ot,{88:4298}),$(Sl,Ot,{88:4299}),$(Sl,Ot,{88:4300}),$(ul,wt,{107:4068,109:4069,93:4301,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ol,Uu),$(Ol,Ju),$(vl,Ft),$(vl,Nt),$(vl,kt),$(vl,Lt),$(Sl,Rt),$(jt,Ct,{162:4302}),$(wl,Dt),{121:[1,4303],124:212,125:213,126:Tt,128:It},$(Ol,Xe),$(Ol,He),{20:[1,4307],22:[1,4311],23:4305,38:4304,201:4306,215:4308,216:[1,4310],217:[1,4309]},{102:[1,4312]},$(vl,Pt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),{102:[1,4314],108:4313,110:[1,4315],111:[1,4316],112:4317,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4318]},{123:[1,4319]},$(Xl,bs),$(Sl,Ir),$(Sl,Fr),$(Sl,Nr),$(Sl,kr),$(Sl,Lr),{113:[1,4320]},$(Sl,Dr),$(Ol,$i),$(wl,Sa),$(wl,Rt),$(wl,Mt),$(wl,Qt),$(wl,Bt),$(wl,Gt),$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(Qn,Yt),$(Qn,en),$(Qn,tn),$(xt,va),$(xt,Aa),{20:ql,22:Zl,89:4321,165:Kl,192:4322,216:Wl},$(Gn,Yt),$(Gn,en),$(Gn,tn),$(gt,va),$(gt,Aa),{20:Yl,22:ef,89:4323,165:tf,192:4324,216:nf},$(St,Sa),$(St,Rt),$(St,Mt),$(St,Qt),$(St,Bt),$(St,Gt),$(Un,Yt),$(Un,en),$(Un,tn),$(Et,va),$(Et,Aa),{20:rf,22:sf,89:4325,165:af,192:4326,216:of},$(mi,Yt),$(mi,en),$(mi,tn),$(rs,va),$(rs,Aa),{20:uf,22:cf,89:4327,165:lf,192:4328,216:ff},$(yi,Yt),$(yi,en),$(yi,tn),$(ss,va),$(ss,Aa),{20:pf,22:hf,89:4329,165:df,192:4330,216:mf},$(os,Sa),$(os,Rt),$(os,Mt),$(os,Qt),$(os,Bt),$(os,Gt),$(_i,Yt),$(_i,en),$(_i,tn),$(is,va),$(is,Aa),{20:yf,22:xf,89:4331,165:_f,192:4332,216:gf},$(Po,ro),$(Po,Rt),$(Ho,ju),$(Ho,Cu,{76:4333,78:4334,80:4335,46:4336,120:4337,81:[1,4338],82:[1,4339],83:[1,4340],121:Ee,126:Ee,128:Ee}),$(Ho,$u),$(Ho,Du,{79:4341,75:4342,94:4343,96:4344,97:4348,101:4349,98:[1,4345],99:[1,4346],100:[1,4347],103:Lf,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:4351,45:mt,81:H,82:q,83:Z}),$(Ho,Mu),$(Qu,vt,{95:4352}),$(Bu,At,{101:4167,97:4353,103:Of,104:Fe,105:Ne,106:ke}),$(Gu,Ot,{88:4354}),$(Gu,Ot,{88:4355}),$(Gu,Ot,{88:4356}),$(Ho,wt,{107:4173,109:4174,93:4357,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Vu,Uu),$(Vu,Ju),$(Qu,Ft),$(Qu,Nt),$(Qu,kt),$(Qu,Lt),$(Gu,Rt),$(jt,Ct,{162:4358}),$(zu,Dt),{121:[1,4359],124:212,125:213,126:Tt,128:It},$(Vu,Xe),$(Vu,He),{20:[1,4363],22:[1,4367],23:4361,38:4360,201:4362,215:4364,216:[1,4366],217:[1,4365]},{102:[1,4368]},$(Qu,Pt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),{102:[1,4370],108:4369,110:[1,4371],111:[1,4372],112:4373,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4374]},{123:[1,4375]},$(Yc,bs),$(Gu,Ir),$(Gu,Fr),$(Gu,Nr),$(Gu,kr),$(Gu,Lr),{113:[1,4376]},$(Gu,Dr),$(Vu,$i),$(zu,Sa),$(zu,Rt),$(zu,Mt),$(zu,Qt),$(zu,Bt),$(zu,Gt),{123:[1,4377]},$(Yc,bs),$(Gu,Ir),$(Gu,Fr),$(Gu,Nr),$(Gu,kr),$(Gu,Lr),{113:[1,4378]},$(Gu,Dr),$(Vu,$i),$(zu,Sa),$(zu,Rt),$(zu,Mt),$(zu,Qt),$(zu,Bt),$(zu,Gt),{194:[1,4381],195:4379,196:[1,4380]},$(tl,Ca),$(tl,$a),$(tl,Da),$(tl,Mt),$(tl,Qt),$(tl,Bt),$(tl,Gt),$(tl,zs),$(tl,Xs),$(tl,Hs),$(tl,qs),$(tl,Zs,{203:4382,204:4383,113:[1,4384]}),$(tl,Ks),$(tl,Ws),$(tl,Ys),$(tl,ei),$(tl,ti),$(tl,ni),$(tl,ri),$(tl,si),$(tl,ii),$(Rf,Rr),$(Rf,jr),$(Rf,Cr),$(Rf,$r),$(ul,Hc),$(de,X,{61:4385,42:4386,45:me}),$(ul,qc),$(ul,Zc),$(ul,Uu),$(ul,Ju),{121:[1,4387],124:212,125:213,126:Tt,128:It},$(ul,Xe),$(ul,He),{20:[1,4391],22:[1,4395],23:4389,38:4388,201:4390,215:4392,216:[1,4394],217:[1,4393]},$(ul,Kc),$(ul,Wc),$(Xl,vt,{95:4396}),$(ul,At,{101:4251,97:4397,103:Nf,104:Fe,105:Ne,106:ke}),$(Xl,Ft),$(Xl,Nt),$(Xl,kt),$(Xl,Lt),{102:[1,4398]},$(Xl,Pt),{72:[1,4399]},$(Al,Jn,{101:4029,97:4400,103:Af,104:Fe,105:Ne,106:ke}),$(vl,zn),$(ul,Xn,{92:4401,97:4402,93:4403,101:4404,107:4406,109:4407,103:jf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,qn,{92:4401,97:4402,93:4403,101:4404,107:4406,109:4407,103:jf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,Zn,{92:4401,97:4402,93:4403,101:4404,107:4406,109:4407,103:jf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(wl,Kn),{20:ur,22:cr,23:402,29:[1,4408],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4409,123:er,149:tr,189:nr}),$(Ol,Wt),$(Ol,W),$(Ol,Y),$(Ol,re),$(Ol,se),$(Ol,ie),$(Ol,ae),$(Ol,oe),$(vl,Ir),$(wl,Fr),$(wl,Nr),$(wl,kr),$(wl,Lr),{113:[1,4410]},$(wl,Dr),$(ul,qc),$(ul,Zc),$(ul,Uu),$(ul,Ju),{121:[1,4411],124:212,125:213,126:Tt,128:It},$(ul,Xe),$(ul,He),{20:[1,4415],22:[1,4419],23:4413,38:4412,201:4414,215:4416,216:[1,4418],217:[1,4417]},$(ul,Kc),$(ul,Wc),$(Xl,vt,{95:4420}),$(ul,At,{101:4293,97:4421,103:kf,104:Fe,105:Ne,106:ke}),$(Xl,Ft),$(Xl,Nt),$(Xl,kt),$(Xl,Lt),{102:[1,4422]},$(Xl,Pt),{72:[1,4423]},$(Al,Jn,{101:4062,97:4424,103:Sf,104:Fe,105:Ne,106:ke}),$(vl,zn),$(ul,Xn,{92:4425,97:4426,93:4427,101:4428,107:4430,109:4431,103:Cf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,qn,{92:4425,97:4426,93:4427,101:4428,107:4430,109:4431,103:Cf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,Zn,{92:4425,97:4426,93:4427,101:4428,107:4430,109:4431,103:Cf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(wl,Kn),{20:ur,22:cr,23:402,29:[1,4432],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4433,123:er,149:tr,189:nr}),$(Ol,Wt),$(Ol,W),$(Ol,Y),$(Ol,re),$(Ol,se),$(Ol,ie),$(Ol,ae),$(Ol,oe),$(vl,Ir),$(wl,Fr),$(wl,Nr),$(wl,kr),$(wl,Lr),{113:[1,4434]},$(wl,Dr),$(ul,$i),{20:[1,4437],22:[1,4439],89:4435,165:[1,4440],192:4436,216:[1,4438]},$(xt,ro),$(xt,Rt),$(gt,ro),$(gt,Rt),$(Et,ro),$(Et,Rt),$(rs,ro),$(rs,Rt),$(ss,ro),$(ss,Rt),$(is,ro),$(is,Rt),$(Ho,qc),$(Ho,Zc),$(Ho,Uu),$(Ho,Ju),{121:[1,4441],124:212,125:213,126:Tt,128:It},$(Ho,Xe),$(Ho,He),{20:[1,4445],22:[1,4449],23:4443,38:4442,201:4444,215:4446,216:[1,4448],217:[1,4447]},$(Ho,Kc),$(Ho,Wc),$(Yc,vt,{95:4450}),$(Ho,At,{101:4349,97:4451,103:Lf,104:Fe,105:Ne,106:ke}),$(Yc,Ft),$(Yc,Nt),$(Yc,kt),$(Yc,Lt),{102:[1,4452]},$(Yc,Pt),{72:[1,4453]},$(Bu,Jn,{101:4167,97:4454,103:Of,104:Fe,105:Ne,106:ke}),$(Qu,zn),$(Ho,Xn,{92:4455,97:4456,93:4457,101:4458,107:4460,109:4461,103:$f,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,qn,{92:4455,97:4456,93:4457,101:4458,107:4460,109:4461,103:$f,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ho,Zn,{92:4455,97:4456,93:4457,101:4458,107:4460,109:4461,103:$f,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(zu,Kn),{20:ur,22:cr,23:402,29:[1,4462],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4463,123:er,149:tr,189:nr}),$(Vu,Wt),$(Vu,W),$(Vu,Y),$(Vu,re),$(Vu,se),$(Vu,ie),$(Vu,ae),$(Vu,oe),$(Qu,Ir),$(zu,Fr),$(zu,Nr),$(zu,kr),$(zu,Lr),{113:[1,4464]},$(zu,Dr),$(Ho,$i),{20:[1,4467],22:[1,4469],89:4465,165:[1,4470],192:4466,216:[1,4468]},$(Ho,$i),{20:[1,4473],22:[1,4475],89:4471,165:[1,4476],192:4472,216:[1,4474]},$(Jl,Yt),$(Jl,en),$(Jl,tn),$(tl,va),$(tl,Aa),{20:wf,22:Tf,89:4477,165:If,192:4478,216:Ff},$(ul,xl),$(ge,Ee,{65:4479,75:4480,77:4481,78:4482,94:4485,96:4486,89:4488,90:4489,91:4490,80:4491,46:4492,97:4496,192:4497,93:4499,120:4500,101:4504,107:4510,109:4511,20:[1,4506],22:[1,4508],28:[1,4498],71:[1,4483],73:[1,4484],81:[1,4501],82:[1,4502],83:[1,4503],87:[1,4487],98:[1,4493],99:[1,4494],100:[1,4495],103:Df,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De,165:[1,4509],216:[1,4507]}),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4512,123:er,149:tr,189:nr}),$(ul,Wt),$(ul,W),$(ul,Y),$(ul,re),$(ul,se),$(ul,ie),$(ul,ae),$(ul,oe),$(ul,Jn,{101:4251,97:4513,103:Nf,104:Fe,105:Ne,106:ke}),$(Xl,zn),$(Xl,Ir),$(ul,gl),$(vl,bs),$(Sl,vs),$(Sl,As),$(Sl,Ss),{102:[1,4514]},$(Sl,Pt),{102:[1,4516],108:4515,110:[1,4517],111:[1,4518],112:4519,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4520]},$(Sl,Vs),{123:[1,4521]},{20:[1,4524],22:[1,4526],89:4522,165:[1,4527],192:4523,216:[1,4525]},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4528,123:er,149:tr,189:nr}),$(ul,Wt),$(ul,W),$(ul,Y),$(ul,re),$(ul,se),$(ul,ie),$(ul,ae),$(ul,oe),$(ul,Jn,{101:4293,97:4529,103:kf,104:Fe,105:Ne,106:ke}),$(Xl,zn),$(Xl,Ir),$(ul,gl),$(vl,bs),$(Sl,vs),$(Sl,As),$(Sl,Ss),{102:[1,4530]},$(Sl,Pt),{102:[1,4532],108:4531,110:[1,4533],111:[1,4534],112:4535,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4536]},$(Sl,Vs),{123:[1,4537]},{20:[1,4540],22:[1,4542],89:4538,165:[1,4543],192:4539,216:[1,4541]},$(Sl,Sa),$(Sl,Rt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4544,123:er,149:tr,189:nr}),$(Ho,Wt),$(Ho,W),$(Ho,Y),$(Ho,re),$(Ho,se),$(Ho,ie),$(Ho,ae),$(Ho,oe),$(Ho,Jn,{101:4349,97:4545,103:Lf,104:Fe,105:Ne,106:ke}),$(Yc,zn),$(Yc,Ir),$(Ho,gl),$(Qu,bs),$(Gu,vs),$(Gu,As),$(Gu,Ss),{102:[1,4546]},$(Gu,Pt),{102:[1,4548],108:4547,110:[1,4549],111:[1,4550],112:4551,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4552]},$(Gu,Vs),{123:[1,4553]},{20:[1,4556],22:[1,4558],89:4554,165:[1,4559],192:4555,216:[1,4557]},$(Gu,Sa),$(Gu,Rt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),$(Gu,Sa),$(Gu,Rt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),$(tl,ro),$(tl,Rt),$(ul,ju),$(ul,Cu,{76:4560,78:4561,80:4562,46:4563,120:4564,81:[1,4565],82:[1,4566],83:[1,4567],121:Ee,126:Ee,128:Ee}),$(ul,$u),$(ul,Du,{79:4568,75:4569,94:4570,96:4571,97:4575,101:4576,98:[1,4572],99:[1,4573],100:[1,4574],103:Pf,104:Fe,105:Ne,106:ke}),$(z,X,{42:199,46:201,40:4578,45:mt,81:H,82:q,83:Z}),$(ul,Mu),$(vl,vt,{95:4579}),$(Al,At,{101:4504,97:4580,103:Df,104:Fe,105:Ne,106:ke}),$(Sl,Ot,{88:4581}),$(Sl,Ot,{88:4582}),$(Sl,Ot,{88:4583}),$(ul,wt,{107:4510,109:4511,93:4584,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(Ol,Uu),$(Ol,Ju),$(vl,Ft),$(vl,Nt),$(vl,kt),$(vl,Lt),$(Sl,Rt),$(jt,Ct,{162:4585}),$(wl,Dt),{121:[1,4586],124:212,125:213,126:Tt,128:It},$(Ol,Xe),$(Ol,He),{20:[1,4590],22:[1,4594],23:4588,38:4587,201:4589,215:4591,216:[1,4593],217:[1,4592]},{102:[1,4595]},$(vl,Pt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),{102:[1,4597],108:4596,110:[1,4598],111:[1,4599],112:4600,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4601]},{123:[1,4602]},$(Xl,bs),$(Sl,Ir),$(Sl,Fr),$(Sl,Nr),$(Sl,kr),$(Sl,Lr),{113:[1,4603]},$(Sl,Dr),$(Ol,$i),$(wl,Sa),$(wl,Rt),$(wl,Mt),$(wl,Qt),$(wl,Bt),$(wl,Gt),{123:[1,4604]},$(Xl,bs),$(Sl,Ir),$(Sl,Fr),$(Sl,Nr),$(Sl,kr),$(Sl,Lr),{113:[1,4605]},$(Sl,Dr),$(Ol,$i),$(wl,Sa),$(wl,Rt),$(wl,Mt),$(wl,Qt),$(wl,Bt),$(wl,Gt),{123:[1,4606]},$(Yc,bs),$(Gu,Ir),$(Gu,Fr),$(Gu,Nr),$(Gu,kr),$(Gu,Lr),{113:[1,4607]},$(Gu,Dr),$(Vu,$i),$(zu,Sa),$(zu,Rt),$(zu,Mt),$(zu,Qt),$(zu,Bt),$(zu,Gt),$(ul,qc),$(ul,Zc),$(ul,Uu),$(ul,Ju),{121:[1,4608],124:212,125:213,126:Tt,128:It},$(ul,Xe),$(ul,He),{20:[1,4612],22:[1,4616],23:4610,38:4609,201:4611,215:4613,216:[1,4615],217:[1,4614]},$(ul,Kc),$(ul,Wc),$(Xl,vt,{95:4617}),$(ul,At,{101:4576,97:4618,103:Pf,104:Fe,105:Ne,106:ke}),$(Xl,Ft),$(Xl,Nt),$(Xl,kt),$(Xl,Lt),{102:[1,4619]},$(Xl,Pt),{72:[1,4620]},$(Al,Jn,{101:4504,97:4621,103:Df,104:Fe,105:Ne,106:ke}),$(vl,zn),$(ul,Xn,{92:4622,97:4623,93:4624,101:4625,107:4627,109:4628,103:Mf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,qn,{92:4622,97:4623,93:4624,101:4625,107:4627,109:4628,103:Mf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(ul,Zn,{92:4622,97:4623,93:4624,101:4625,107:4627,109:4628,103:Mf,104:Fe,105:Ne,106:ke,114:Le,115:Re,116:je,117:Ce,118:$e,119:De}),$(wl,Kn),{20:ur,22:cr,23:402,29:[1,4629],73:lr,83:fr,102:pr,110:hr,111:dr,112:414,163:396,164:397,165:mr,166:399,167:400,181:403,185:yr,197:408,198:409,199:410,202:413,205:xr,206:_r,207:gr,208:Er,209:br,210:vr,211:Ar,212:Sr,213:Or,214:wr,215:407,216:Tr},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4630,123:er,149:tr,189:nr}),$(Ol,Wt),$(Ol,W),$(Ol,Y),$(Ol,re),$(Ol,se),$(Ol,ie),$(Ol,ae),$(Ol,oe),$(vl,Ir),$(wl,Fr),$(wl,Nr),$(wl,kr),$(wl,Lr),{113:[1,4631]},$(wl,Dr),$(ul,$i),{20:[1,4634],22:[1,4636],89:4632,165:[1,4637],192:4633,216:[1,4635]},$(ul,$i),{20:[1,4640],22:[1,4642],89:4638,165:[1,4643],192:4639,216:[1,4641]},$(Ho,$i),{20:[1,4646],22:[1,4648],89:4644,165:[1,4649],192:4645,216:[1,4647]},$(Wn,Yn,{127:375,131:376,132:377,133:378,137:379,138:380,139:381,145:382,147:383,148:384,122:4650,123:er,149:tr,189:nr}),$(ul,Wt),$(ul,W),$(ul,Y),$(ul,re),$(ul,se),$(ul,ie),$(ul,ae),$(ul,oe),$(ul,Jn,{101:4576,97:4651,103:Pf,104:Fe,105:Ne,106:ke}),$(Xl,zn),$(Xl,Ir),$(ul,gl),$(vl,bs),$(Sl,vs),$(Sl,As),$(Sl,Ss),{102:[1,4652]},$(Sl,Pt),{102:[1,4654],108:4653,110:[1,4655],111:[1,4656],112:4657,207:Vt,208:Ut,209:Jt,210:zt},{102:[1,4658]},$(Sl,Vs),{123:[1,4659]},{20:[1,4662],22:[1,4664],89:4660,165:[1,4665],192:4661,216:[1,4663]},$(Sl,Sa),$(Sl,Rt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),$(Sl,Sa),$(Sl,Rt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt),$(Gu,Sa),$(Gu,Rt),$(Gu,Mt),$(Gu,Qt),$(Gu,Bt),$(Gu,Gt),{123:[1,4666]},$(Xl,bs),$(Sl,Ir),$(Sl,Fr),$(Sl,Nr),$(Sl,kr),$(Sl,Lr),{113:[1,4667]},$(Sl,Dr),$(Ol,$i),$(wl,Sa),$(wl,Rt),$(wl,Mt),$(wl,Qt),$(wl,Bt),$(wl,Gt),$(ul,$i),{20:[1,4670],22:[1,4672],89:4668,165:[1,4673],192:4669,216:[1,4671]},$(Sl,Sa),$(Sl,Rt),$(Sl,Mt),$(Sl,Qt),$(Sl,Bt),$(Sl,Gt)],this.defaultActions={6:[2,11],32:[2,1],112:[2,121],113:[2,122],114:[2,123],119:[2,134],120:[2,135],223:[2,254],224:[2,255],225:[2,256],226:[2,257],347:[2,37],375:[2,143],376:[2,147],378:[2,149],576:[2,35],577:[2,39],614:[2,36],1123:[2,147],1125:[2,149]},this.performAction=function(e,t,n,s,l,f,h){const _=f.length-1;switch(l){case 1:let e=Object.keys(P._imports).length?{imports:P._imports}:{};const t=P.start?{start:P.start}:{},n=P.startActs?{startActs:P.startActs}:{};let l=P.shapes?{shapes:Object.values(P.shapes)}:{};const h=Object.assign({type:"Schema"},e,n,t,l);return P.options.index&&(null!==P._base&&(h._base=P._base),h._prefixes=P._prefixes,h._index={shapeExprs:P.shapes||{},tripleExprs:P.productions||{}},h._sourceMap=P._sourceMap),h;case 2:s.parser.yy={lexer:s.lexer};break;case 16:P._setBase(null===P._base||c.test(f[_].slice(1,-1))?f[_].slice(1,-1):x(f[_].slice(1,-1)));break;case 17:P._prefixes[f[_-1].slice(0,-1)]=f[_];break;case 18:P._imports.push(f[_]);break;case 19:f[_].forEach((function(e){P._termResolver.add(e)}));break;case 20:case 49:case 53:case 56:case 60:case 97:case 184:case 201:case 210:case 218:case 229:this.$=[];break;case 21:case 45:case 48:case 50:case 54:case 57:case 61:this.$=f[_-1].concat(f[_]);break;case 22:case 44:case 47:case 28:case 145:case 152:case 163:case 191:case 193:case 195:this.$=[f[_]];break;case 23:case 156:case 183:this.$=f[_-1];break;case 26:P.start&&I(new Error("Parse error: start already defined"),s),P.start=k("ShapeOr",f[_-1],f[_]);break;case 27:P.startActs=f[_];break;case 29:case 98:case 146:case 153:case 164:case 185:case 192:case 194:case 196:case 202:case 211:case 219:case 230:this.$=d(f[_-1],f[_]);break;case 32:!function(e,t,n){t===j&&(t={type:"Shape"}),P.productions&&e in P.productions&&I(new Error("Structural error: "+e+" is a triple expression"),n),P.shapes||(P.shapes={}),e in P.shapes?"replace"===P.options.duplicateShape?P.shapes[e]=t:"ignore"!==P.options.duplicateShape&&I(new Error("Parse error: "+e+" already defined"),n):P.shapes[e]=Object.assign({id:e},t)}(f[_-1],f[_],s);break;case 33:this.$=L(f[_]);break;case 34:this.$={type:"ShapeExternal"};break;case 35:f[_-2]&&(f[_-1]={type:"ShapeNot",shapeExpr:L(f[_-1])}),f[_]?(f[_].needsAtom.unshift(L(f[_-1])),delete f[_].needsAtom,this.$=f[_]):this.$=f[_-1];break;case 36:f[_-1]={type:"ShapeNot",shapeExpr:L(f[_-1])},f[_]?(f[_].needsAtom.unshift(L(f[_-1])),delete f[_].needsAtom,this.$=f[_]):this.$=f[_-1];break;case 37:f[_].needsAtom.unshift(L(f[_-1])),delete f[_].needsAtom,this.$=f[_];break;case 38:case 233:case 250:this.$=null;break;case 39:case 43:case 46:case 52:case 59:case 190:case 249:case 144:case 151:case 161:case 162:case 203:case 212:case 220:this.$=f[_];break;case 41:const E=f[_].map(L);this.$={type:"ShapeOr",shapeExprs:E,needsAtom:E};break;case 42:f[_-1].filter((e=>"ShapeAnd"===e.type)).length,f[_-1].length;const b={type:"ShapeAnd",shapeExprs:f[_-1].reduce(((e,t)=>e.concat("ShapeAnd"!==t.type||t.nested?L(t):t.shapeExprs)),[])};this.$=f[_].length>0?{type:"ShapeOr",shapeExprs:[b].concat(f[_].map(L))}:b,this.$.needsAtom=b.shapeExprs;break;case 51:this.$=k("ShapeOr",f[_-1],f[_]);break;case 55:case 58:this.$=k("ShapeAnd",f[_-1],f[_]);break;case 62:case 65:this.$=f[_-1]?{type:"ShapeNot",shapeExpr:L(f[_])}:f[_];break;case 63:this.$=!1;break;case 64:this.$=!0;break;case 66:case 75:case 80:case 82:this.$=f[_]?{type:"ShapeAnd",shapeExprs:[m({type:"NodeConstraint"},f[_-1]),f[_]]}:f[_-1];break;case 68:case 77:this.$=f[_]?k("ShapeAnd",f[_-1],[f[_]]):f[_-1];break;case 69:case 78:case 83:this.$=Object.assign(f[_-1],{nested:!0});break;case 70:case 79:case 84:this.$=j;break;case 93:f[_]=f[_].substr(1,f[_].length-1);const v=f[_].indexOf(":");this.$=N(F(f[_].substr(0,v),s)+f[_].substr(v+1),s);break;case 94:f[_]=f[_].substr(1,f[_].length-1),this.$=N(F(f[_].substr(0,f[_].length-1),s),s);break;case 95:case 167:case 224:this.$=N(f[_],s);break;case 96:case 99:this.$=f[_-2],f[_-1].length&&(this.$.annotations=f[_-1]),f[_]&&(this.$.semActs=f[_].semActs);break;case 100:this.$=m({type:"NodeConstraint",nodeKind:"literal"},f[_]);break;case 101:-1===u.indexOf(f[_-1])&&p.forEach((function(e){e in f[_]&&I(new Error("Parse error: facet "+e+" not allowed for unknown datatype "+f[_-1]),s)})),this.$=m({type:"NodeConstraint",datatype:f[_-1]},f[_]);break;case 102:this.$={type:"NodeConstraint",values:f[_-1]};break;case 103:case 109:this.$=m({type:"NodeConstraint"},f[_]);break;case 104:case 110:case 173:this.$={};break;case 105:case 107:case 113:case 111:-1!==Object.keys(f[_-1]).indexOf(Object.keys(f[_])[0])&&I(new Error("Parse error: facet "+Object.keys(f[_])[0]+" defined multiple times"),s),this.$=m(f[_-1],f[_]);break;case 108:this.$=m({type:"NodeConstraint"},f[_-1],f[_]?f[_]:{});break;case 114:this.$={nodeKind:"iri"};break;case 115:this.$={nodeKind:"bnode"};break;case 116:this.$={nodeKind:"nonliteral"};break;case 119:case 125:this.$=T(f[_-1],parseInt(f[_],10));break;case 120:this.$=function(e){const t=e.lastIndexOf("/");let n=e.substr(1,t-1);n=r.unescapeText(n,{".":"\\.","\\":"\\\\","?":"\\?","*":"\\*","+":"\\+","{":"\\{","}":"\\}","(":"\\(",")":"\\)","|":"\\|","^":"\\^",$:"\\$","[":"\\[","]":"\\]","/":"\\/",t:"\\t",n:"\\n",r:"\\r","-":"\\-","/":"/"});const s={pattern:n};return e.length>t+1&&(s.flags=e.substr(t+1)),s}(f[_]);break;case 121:this.$="length";break;case 122:this.$="minlength";break;case 123:this.$="maxlength";break;case 124:this.$=T(f[_-1],f[_]);break;case 126:this.$=parseInt(f[_],10);break;case 127:case 128:this.$=parseFloat(f[_]);break;case 129:f[_]===i||"http://www.w3.org/2001/XMLSchema#float"===f[_]||f[_]===a?this.$=parseFloat(f[_-2].value):-1!==u.indexOf(f[_])?this.$=parseInt(f[_-2].value):I(new Error("Parse error: numeric range facet expected numeric datatype instead of "+f[_]),s);break;case 130:this.$="mininclusive";break;case 131:this.$="minexclusive";break;case 132:this.$="maxinclusive";break;case 133:this.$="maxexclusive";break;case 134:this.$="totaldigits";break;case 135:this.$="fractiondigits";break;case 136:this.$=f[_-2]===j?{type:"Shape"}:f[_-2],f[_-1].length&&(this.$.annotations=f[_-1]),f[_]&&(this.$.semActs=f[_].semActs);break;case 137:const C=f[_-1]?{expression:f[_-1]}:R;this.$=C===R&&f[_-3]===R?j:m({type:"Shape"},C,f[_-3]);break;case 138:this.$=["extra",f[_]];break;case 139:this.$=["closed",!0];break;case 140:this.$=R;break;case 141:f[_-1]===R&&(f[_-1]={}),"closed"===f[_][0]?f[_-1].closed=!0:f[_][0]in f[_-1]?f[_-1][f[_][0]]=y(f[_-1][f[_][0]],f[_][1]):f[_-1][f[_][0]]=f[_][1],this.$=f[_-1];break;case 150:this.$={type:"OneOf",expressions:y([f[_-1]],f[_])};break;case 160:this.$={type:"EachOf",expressions:y([f[_-2]],f[_-1])};break;case 165:f[_-1]?(this.$=m({id:f[_-1]},f[_]),function(e,t,n){P.shapes&&e in P.shapes&&I(new Error("Structural error: "+e+" is a shape expression"),n),P.productions||(P.productions={}),e in P.productions?"replace"===P.options.duplicateShape?P.productions[e]=t:"ignore"!==P.options.duplicateShape&&I(new Error("Parse error: "+e+" already defined"),n):P.productions[e]=t}(f[_-1],this.$,s)):this.$=f[_];break;case 172:this.$=f[_-4],"min"in f[_-2]&&(this.$.min=f[_-2].min),"max"in f[_-2]&&(this.$.max=f[_-2].max),f[_-1].length&&(this.$.annotations=f[_-1]),f[_]&&(this.$.semActs="semActs"in f[_-4]?f[_-4].semActs.concat(f[_].semActs):f[_].semActs);break;case 175:f[_-3],0,this.$=m({type:"TripleConstraint"},f[_-5]?f[_-5]:{},{predicate:f[_-4]},f[_-3]===j?{}:{valueExpr:f[_-3]},f[_-2],f[_]),f[_-1].length&&(this.$.annotations=f[_-1]);break;case 178:this.$={min:0,max:-1};break;case 179:this.$={min:1,max:-1};break;case 180:this.$={min:0,max:1};break;case 181:f[_]=f[_].substr(1,f[_].length-2);const $=f[_].match(/(\d+)/g);this.$={min:parseInt($[0],10)},2===$.length?this.$.max=parseInt($[1],10):-1===f[_].indexOf(",")?this.$.max=parseInt($[0],10):this.$.max=-1;break;case 182:this.$={inverse:!0};break;case 187:case 269:this.$=P._termResolver.resolve(f[_],P._prefixes);break;case 197:this.$={type:"IriStemRange",stem:{type:"Wildcard"},exclusions:f[_]};break;case 198:this.$={type:"LiteralStemRange",stem:{type:"Wildcard"},exclusions:f[_]};break;case 199:this.$={type:"LanguageStemRange",stem:{type:"Wildcard"},exclusions:f[_]};break;case 200:f[_]?(this.$={type:f[_].length?"IriStemRange":"IriStem",stem:f[_-1]},f[_].length&&(this.$.exclusions=f[_])):this.$=f[_-1];break;case 206:this.$=f[_]?{type:"IriStem",stem:f[_-1]}:f[_-1];break;case 209:f[_]?(this.$={type:f[_].length?"LiteralStemRange":"LiteralStem",stem:f[_-1].value},f[_].length&&(this.$.exclusions=f[_])):this.$=f[_-1];break;case 215:this.$=f[_]?{type:"LiteralStem",stem:f[_-1].value}:f[_-1].value;break;case 216:f[_]?(this.$={type:f[_].length?"LanguageStemRange":"LanguageStem",stem:f[_-1]},f[_].length&&(this.$.exclusions=f[_])):this.$={type:"Language",languageTag:f[_-1]};break;case 217:this.$={type:f[_].length?"LanguageStemRange":"LanguageStem",stem:""},f[_].length&&(this.$.exclusions=f[_]);break;case 223:this.$=f[_]?{type:"LanguageStem",stem:f[_-1]}:f[_-1];break;case 225:this.$={type:"Annotation",predicate:f[_-1],object:f[_]};break;case 228:this.$=f[_].length?{semActs:f[_]}:null;break;case 231:this.$=f[_]?function(e,t){return t=t.substring(1,t.length-2),{type:"SemAct",name:e,code:r.unescapeText(t,A)}}(f[_-1],f[_]):{type:"SemAct",name:f[_-1]};break;case 238:this.$="http://www.w3.org/1999/02/22-rdf-syntax-ns#type";break;case 244:this.$=g(f[_],"http://www.w3.org/2001/XMLSchema#integer");break;case 245:this.$=g(f[_],i);break;case 246:this.$=g(f[_],a);break;case 248:this.$=f[_]?m(f[_-1],{type:f[_]}):f[_-1];break;case 252:this.$={value:"true",type:o};break;case 253:this.$={value:"false",type:o};break;case 254:case 256:this.$=O(f[_],1);break;case 255:case 257:this.$=O(f[_],3);break;case 258:case 260:this.$=w(f[_],1);break;case 259:case 261:this.$=w(f[_],3);break;case 262:const D=r.unescapeText(f[_].slice(1,-1),{});this.$=null===P._base||c.test(D)?D:x(D);break;case 264:const M=f[_].indexOf(":");this.$=F(f[_].substr(0,M),s)+r.unescapeText(f[_].substr(M+1),S);break;case 265:case 268:this.$=F(f[_].substr(0,f[_].length-1),s);break;case 266:this.$=null===this._base||c.test(f[_].slice(1,-1))?r.unescapeText(f[_].slice(1,-1),{}):x(r.unescapeText(f[_].slice(1,-1),{}));break;case 267:const Q=f[_].indexOf(":");this.$=F(f[_].substr(0,Q),s)+f[_].substr(Q+1)}}}function M(e={}){this.options={moduleName:"ShExJison"},D.call(this,e),this.rules=[/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)?`([^\u0060\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*`))/,/^(?:\s+|(#[^\u000a\u000d]*|\/\*([^*]|\*([^/]|\\\/))*\*\/))/,/^(?:(@(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:)(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*)))/,/^(?:(\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\*)?))?\}))/,/^(?:(([+-])?((([0-9])+\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\u0000-\u0020<>\"{}|^`\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?)?:))/,/^(?:a\b)/,/^(?:(\/([^\u002f\u005C\u000A\u000D]|\\[nrt\\|.?*+(){}$\u002D\u005B\u005D\u005E/]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|[0-9])((((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040])|\.)*((([A-Z]|[a-z]|[\u00c0-\u00d6]|[\u00d8-\u00f6]|[\u00f8-\u02ff]|[\u0370-\u037d]|[\u037f-\u1fff]|[\u200c-\u200d]|[\u2070-\u218f]|[\u2c00-\u2fef]|[\u3001-\ud7ff]|[\uf900-\ufdcf]|[\ufdf0-\ufffd]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_|_\b)|-|[0-9]|[\u00b7]|[\u0300-\u036f]|[\u203f-\u2040]))?))/,/^(?:(\{([^%\\]|\\[%\\]|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\}))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\'\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:("""(("|"")?([^\"\\]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*"""))/,/^(?:('([^\u0027\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:("([^\u0022\u005c\u000a\u000d]|(\\[\"\'\\bfnrt])|(\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([Ll][Aa][Bb][Ee][Ll]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\/\/)/,/^(?:\{)/,/^(?:\})/,/^(?:&)/,/^(?:\|\|)/,/^(?:\|)/,/^(?:,)/,/^(?:\()/,/^(?:\))/,/^(?:\[)/,/^(?:\])/,/^(?:\$)/,/^(?:!)/,/^(?:\^\^)/,/^(?:\^)/,/^(?:\.)/,/^(?:~)/,/^(?:;)/,/^(?:\*)/,/^(?:\+)/,/^(?:\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\b)/,/^(?:false\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],this.conditions={INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],inclusive:!0}},this.performAction=function(e,t,n,r){switch(n){case 0:const e=t.yytext.indexOf("`");let n=null;return e>0&&(n=t.yytext.substr(0,e-1),t.yytext=t.yytext.substr(e)),t.yytext={prefix:n,label:O(t.yytext,1)},165;case 1:break;case 2:return 81;case 3:return 82;case 4:return t.yytext=t.yytext.substr(1),185;case 5:return 83;case 6:return 216;case 7:return 160;case 8:return 111;case 9:return 110;case 10:return 102;case 11:return"ANON";case 12:return 20;case 13:return 22;case 14:return 200;case 15:return 103;case 16:return 217;case 17:return 196;case 18:return 212;case 19:return 214;case 20:return 211;case 21:return 213;case 22:return 208;case 23:return 210;case 24:return 207;case 25:return 209;case 26:return 19;case 27:return 21;case 28:return 24;case 29:return 25;case 30:return 32;case 31:return 41;case 32:return 126;case 33:return 128;case 34:return 87;case 35:return 99;case 36:return 98;case 37:return 100;case 38:return 55;case 39:return 53;case 40:return 45;case 41:return 114;case 42:return 115;case 43:return 116;case 44:return 117;case 45:return 104;case 46:return 105;case 47:return 106;case 48:return 118;case 49:return 119;case 50:return 33;case 51:return 190;case 52:return 121;case 53:return 123;case 54:return 189;case 55:return"||";case 56:return 136;case 57:return 141;case 58:return 71;case 59:return 72;case 60:return 28;case 61:return 29;case 62:return 149;case 63:return"!";case 64:return 113;case 65:return 161;case 66:return 73;case 67:return 178;case 68:return 142;case 69:return 157;case 70:return 158;case 71:return 159;case 72:return 179;case 73:return 194;case 74:return 205;case 75:return 206;case 76:return 7;case 77:return'unexpected word "'+t.yytext+'"';case 78:return"invalid character "+t.yytext}}}P.prototype=Object.create(C.prototype),Object.defineProperty(P.prototype,"constructor",{value:P,enumerable:!1,writable:!0}),t._b=P,M.prototype=Object.create(D.prototype),Object.defineProperty(M.prototype,"constructor",{value:M,enumerable:!1,writable:!0})},931:(e,t,n)=>{const r=function(){const e=n(118),t=n(509)._b;var r=function(){return{add:function(e){throw Error("no term resolver to accept <"+e+">")},resolve:function(e,t){throw Error("no term resolver to resolve `"+e+"`")}}};return{construct:function(e,n,s){s=s||{};const i={};for(const e in n||{})i[e]=n[e];var a="termResolver"in s?s.termResolver:r();const o=new t;return o.parse=function(){t._prefixes=Object.create(i),t._imports=[],t._setBase(e),t._setFileName(e),t.options=s,t._termResolver||(t._termResolver=a);let n=[];t.recoverable=e=>n.push(e);let r=null;try{r=t.prototype.parse.apply(o,arguments)}catch(e){n.push(e)}if(t.reset(),n.forEach((e=>{if("hash"in e){const t=e.hash,n=t.loc;delete t.loc,Object.assign(e,t,{location:n})}return e})),1==n.length)throw n[0].parsed=r,n[0];if(n.length){const e=new Error(n.length+" parser errors:\n"+n.map((e=>u(e,o.yy.lexer))).join("\n"));throw e.errors=n,e.parsed=r,e}return r},o._setBase=function(n){t._setBase,e=n},o._setFileName=t._setFileName,o._setTermResolver=t._setTermResolver,o._setOptions=function(e){t.options=e},o._resetBlanks=t._resetBlanks,o.reset=t.reset,t.options=s,o;function u(t,n){const r=t.location.first_line,s=t.location.first_column+1,i="pos"in t.hash?"\n"+t.hash.pos:"";return`${e}\n line: ${r}, column: ${s}: ${t.message}${i}`}},dbTermResolver:function(t){var n=t,r=[];return{add:function(e){r.push(e)},resolve:function(t,s){var i=r.reduce(((r,i)=>{var a=n.getQuads(null,i,'"'+t.label.value+'"');return a.length?null===t.prefix?{prefix:null,length:null,term:e.internalTerm(a[0].subject)}:a.reduce(((n,r)=>{var i=e.internalTerm(r.subject);return Object.keys(s).reduce(((e,n)=>{var r=s[n];return i.startsWith(r)&&r.length>e.length&&t.prefix===n?{prefix:n,length:e.length,term:i}:e}),n)}),r):r}),{prefix:null,length:0,term:null});if(i.term)return i.term;throw Error("no term found for `"+JSON.stringify(t)+"`")}}},disabledTermResolver:r}}();e.exports=r},118:e=>{const t=function(){const e=/^[a-z][a-z0-9+.-]*:/i,t=/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i,n=/(?:^|\/)\.\.?(?:$|[\/#?])/,r="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",s="http://www.w3.org/2001/XMLSchema#string";function i(e){if(!n.test(e))return e;const t=e.length;let r="",s=-1,i=-1,a=0,o="/";for(;s<t;){switch(o){case":":if(i<0&&"/"===e[++s]&&"/"===e[++s])for(;(i=s+1)<t&&"/"!==e[i];)s=i;break;case"?":case"#":s=t;break;case"/":if("."===e[s+1])switch(o=e[1+ ++s],o){case"/":r+=e.substring(a,s-1),a=s+1;break;case void 0:case"?":case"#":return r+e.substring(a,s)+e.substr(s+1);case".":if(o=e[1+ ++s],void 0===o||"/"===o||"?"===o||"#"===o){if(r+=e.substring(a,s-2),(a=r.lastIndexOf("/"))>=i&&(r=r.substr(0,a)),"/"!==o)return r+"/"+e.substr(s+1);a=s+1}}}o=e[++s]}return r+e.substring(a)}function a(e){switch(e.termType){case"NamedNode":return e.value;case"BlankNode":return"_:"+e.value;case"Literal":return'"'+e.value.replace(/"/g,'\\"')+'"'+(e.datatypeString===r?"@"+e.language:e.datatypeString===s?"":"^^"+e.datatypeString);default:throw Error("unknown RDFJS node type: "+JSON.stringify(e))}}function o(e,t){if(u(e))return t.namedNode(e);if(l(e))return t.blankNode(e.substr(2));if(c(e)){let n=h(e)||(p(e)===s?null:t.namedNode(p(e)));return t.literal(f(e),n)}throw Error("Unknown internal term type: "+JSON.stringify(e))}function u(e){if("string"!=typeof e)return!1;if(0===e.length)return!0;{const t=e[0];return'"'!==t&&"_"!==t}}function c(e){return"string"==typeof e&&'"'===e[0]}function l(e){return"string"==typeof e&&"_:"===e.substr(0,2)}function f(e){const t=/^"([^]*)"/.exec(e);if(!t)throw new Error(e+" is not a literal");return t[1].replace(/\\"/g,'"')}function p(e){const t=/^"[^]*"(?:\^\^([^"]+)|(@)[^@"]+)?$/.exec(e);if(!t)throw new Error(e+" is not a literal");return t[1]||(t[2]?r:s)}function h(e){const t=/^"[^]*"(?:@([^@"]+)|\^\^[^"]+)?$/.exec(e);if(!t)throw new Error(e+" is not a literal");return t[1]?t[1].toLowerCase():""}const d=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,m=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,y={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};function x(e){let t=y[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}return{RdfLangString:r,XsdString:s,resolveRelativeIRI:function(n,r){if(e.test(r))return r;switch(r[0]){case void 0:return n;case"#":return n+r;case"?":return n.replace(/(?:\?.*)?$/,r);case"/":let e=n.match(t);return("/"===r[1]?e[1]:e[0])+i(r);default:return i(n.replace(/[^\/?]*(?:\?.*)?$/,"")+r)}},isIRI:u,isLiteral:c,isBlank:l,isDefaultGraph:function(e){return!e},inDefaultGraph:function(e){return!e.graph},getLiteralValue:f,getLiteralType:p,getLiteralLanguage:h,internalTerm:a,internalTriple:function(e){return{subject:a(e.subject),predicate:a(e.predicate),object:a(e.object)}},externalTerm:o,externalTriple:function(e,t){return t.quad(o(e.subject,t),o(e.predicate,t),o(e.object,t))},internalTermToTurtle:function(e,t,n){if(u(e)){d.test(e)&&(e=e.replace(m,x));const r=Object.keys(n).find((t=>e.startsWith(n[t])));if(r){const t=e.substr(n[r].length);if(-1===t.indexOf("\\"))return r+":"+t.replace(/([~!$&'()*+,;=/?#@%])/g,"\\$1")}return e.startsWith(t)?"<"+e.substr(t.length)+">":"<"+e+">"}if(l(e))return e;if(c(e)){let r=f(e);const s=p(e),i=h(e);return d.test(r)&&(r=r.replace(m,x)),i?'"'+r+'"@'+i:s&&"http://www.w3.org/2001/XMLSchema#string"!==s?'"'+r+'"^^'+this.internalTermToTurtle(s,t,n):'"'+r+'"'}throw Error("Unknown internal term type: "+JSON.stringify(e))}}}();e.exports=t},443:(t,n,r)=>{const s=function(){const t=r(118),n=r(806),s=r(515),i={_namespace:"http://www.w3.org/ns/shex#"};["Schema","@context","imports","startActs","start","shapes","ShapeOr","ShapeAnd","shapeExprs","nodeKind","NodeConstraint","iri","bnode","nonliteral","literal","datatype","length","minlength","maxlength","pattern","flags","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits","values","ShapeNot","shapeExpr","Shape","closed","extra","expression","semActs","ShapeRef","reference","ShapeExternal","EachOf","OneOf","expressions","min","max","annotation","TripleConstraint","inverse","negated","predicate","valueExpr","Inclusion","include","Language","languageTag","IriStem","LiteralStem","LanguageStem","stem","IriStemRange","LiteralStemRange","LanguageStemRange","exclusion","Wildcard","SemAct","name","code","Annotation","object"].forEach((e=>{i[e]=i._namespace+e}));const a={_namespace:"http://www.w3.org/1999/02/22-rdf-syntax-ns#"};["type","first","rest","nil"].forEach((e=>{a[e]=a._namespace+e}));const o={_namespace:"http://www.w3.org/2001/XMLSchema#"};["anyURI"].forEach((e=>{o[e]=o._namespace+e}));const u={_namespace:"http://www.w3.org/2002/07/owl#"};["Thing"].forEach((e=>{u[e]=u._namespace+e}));const c={};function l(e){e||(e={});for(let t,n=1,r=arguments.length;n<r&&(t=arguments[n]||{});n++)for(let n in t)e[n]=t[n];return e}function f(e){if('"'!==e[0])return e;const n={value:t.getLiteralValue(e)},r=t.getLiteralType(e);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=t.getLiteralLanguage(e);return s&&(n.language=s),n}const p={SX:i,RDF:a,version:function(){return"0.5.0"},Visitor:n,index:n.index,getAST:function(e){return{type:"AST",shapes:e.shapes.reduce((function(n,r){return n[r.id]={type:"ASTshape",expression:t(r.expression,[],e)},n}),{})};function t(e,t,n){function r(){this.type="Epsilon"}function s(e,t,n,r,s){this.type="TripleConstraint",this.inverse=!!n,this.negated=!!r,this.predicate=t,void 0!==s&&(this.valueExpr=s)}function i(e){this.type="Choice",this.disjuncts=e}function a(e){this.type="EachOf",this.conjuncts=e}function o(e,t){this.type="SemActs",this.expression=e,this.semActs=t}function u(e){this.type="KleeneStar",this.expression=e}return e?function e(n,c){let l,f;function p(e,t,n){if(void 0===t&&(t=1),void 0===n&&(n=1),1===t&&1===n)return e;const s=-1===n?new u(e):Array.from(Array(n-t)).reduce((function(t,n,s){return new i(0===s?[e,new r]:[new a([e,t]),new r])}),void 0);return 0!==t?new a(Array.from(Array(t)).map((function(t){return e})).concat(s)):s}if("string"==typeof n){return e(c._index.tripleExprs[n].expression,c)}if("TripleConstraint"===n.type){const e="valueExprRef"in n?c.valueExprDefns[n.valueExprRef]:n.valueExpr;return l=p(new s(t.push(n)-1,n.predicate,n.inverse,n.negated,e),n.min,n.max),n.semActs?new o(l,n.semActs):l}if("OneOf"===n.type)return f=new i(n.expressions.map((function(t){return e(t,c)}))),l=p(f,n.min,n.max),n.semActs?new o(l,n.semActs):l;if("EachOf"===n.type)return f=new a(n.expressions.map((function(t){return e(t,c)}))),l=p(f,n.min,n.max),n.semActs?new o(l,n.semActs):l;throw Error("unexpected expr type: "+n.type)}(e,n):new r}},ShExJtoAS:function(e){return e._prefixes=e._prefixes||{},e._index=this.index(e),e},AStoShExJ:function(e,t){return e["@context"]=e["@context"]||"http://www.w3.org/ns/shex.jsonld",delete e._index,delete e._prefixes,e},ShExRVisitor:function(e){const n=p.Visitor(),r={},s=n.visitShapeExpr,i=(n.visitValueExpr,n.visitExpression);return n.keepShapeExpr=s,n.visitShapeExpr=n.visitValueExpr=function(t,n){if("string"==typeof t)return t;if("id"in t){if(-1!==e.indexOf(t.id)||1===Object.keys(t).length)return t.id;delete t.id}return s.call(this,t,n)},n.visitExpression=function(e){if("string"==typeof e)return e;if("id"in e&&e.id in r)return r[e.id].refCount++,e.id;const t=i.call(this,e);return r[e.id]={refCount:1,expr:t},t},n.cleanIds=function(){for(let e in r){const n=r[e];1===n.refCount&&t.isBlank(n.expr.id)&&delete n.expr.id}},n},ShExRtoShExJ:function(e){const t=[];"shapes"in e&&[].push.apply(t,e.shapes.map((e=>e.id)));const n=this.ShExRVisitor(t);return"start"in e&&(e.start=n.visitShapeExpr(e.start)),"shapes"in e&&(e.shapes=e.shapes.map((e=>n.keepShapeExpr(e)))),n.cleanIds(),e},valGrep:function(e,t,n){const r=this,s=[];for(let i in e){const a=e[i];"object"==typeof a&&("type"in a&&a.type===t&&s.push(n(a)),s.push.apply(s,r.valGrep(a,t,n)))}return s},n3jsToTurtle:function(e){return this.valGrep(e,"TestedTriple",(function(e){return["subject","predicate","object"].map((n=>{return"object"==typeof(r=e[n])?'"'+r.value+'"'+("type"in r?"^^<"+r.type+">":"language"in r?"@"+r.language:""):t.isIRI(r)?"<"+r+">":t.isBlank(r)?r:"???";var r})).join(" ")+" ."}))},valToN3js:function(e,n){return this.valGrep(e,"TestedTriple",(function(e){const r=JSON.parse(JSON.stringify(e));return"object"==typeof e.object&&(r.object='"'+e.object.value+'"'+("type"in e.object?"^^"+e.object.type:"language"in e.object?"@"+e.object.language:"")),t.externalTriple(r,n)}))},n3jsToTurtle:function(e){return e.map((function(e){return["subject","predicate","object"].map((n=>function(e){if(t.isIRI(e))return"<"+e+">";if(t.isBlank(e))return e;const n=t.getLiteralType(e);return n&&"http://www.w3.org/2001/XMLSchema#string"!==n?'"'+t.getLiteralValue(e)+'"^^<'+n+">":e}(e[n]))).join(" ")+" ."}))},canonicalize:function(e,t){const n=JSON.parse(JSON.stringify(e));n["@context"]=n["@context"]||"http://www.w3.org/ns/shex.jsonld",delete n._prefixes,delete n._base;let r=n._index||this.index(e);delete n._index;n._sourceMap;delete n._sourceMap;const s=p.Visitor(),i=[],a=s.visitInclusion,o=s.visitExpression;return s.visitInclusion=function(e){return-1===i.indexOf(e)&&e in r.tripleExprs?(i.push(e),o.call(s,r.tripleExprs[e])):a.call(s,e)},s.visitExpression=function(e){return"object"==typeof e&&"id"in e?-1===i.indexOf(e.id)?(i.push(e.id),o.call(s,r.tripleExprs[e.id])):e.id:o.call(s,e)},t&&(s.visitIRI=function(e){return e.replace(t,"")},"imports"in n&&(n.imports=s.visitImports(n.imports))),"shapes"in n&&(n.shapes=Object.keys(r.shapeExprs).sort().map((e=>("extra"in r.shapeExprs[e]&&r.shapeExprs[e].extra.sort(),s.visitShapeExpr(r.shapeExprs[e]))))),n},BiDiClosure:function(){return{needs:{},neededBy:{},inCycle:[],test:function(){function e(e,t){const n=JSON.stringify(e),r=JSON.stringify(t);if(n!==r)throw Error(n+" !== "+r)}this.add(2,3),e(this.needs,{2:[3]}),e(this.neededBy,{3:[2]}),this.add(1,2),e(this.needs,{1:[2,3],2:[3]}),e(this.neededBy,{3:[2,1],2:[1]}),this.add(1,3),e(this.needs,{1:[2,3],2:[3]}),e(this.neededBy,{3:[2,1],2:[1]}),this.add(3,4),e(this.needs,{1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{3:[2,1],2:[1],4:[3,2,1]}),this.add(6,7),e(this.needs,{6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6],3:[2,1],2:[1],4:[3,2,1]}),this.add(5,6),e(this.needs,{5:[6,7],6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],3:[2,1],2:[1],4:[3,2,1]}),this.add(5,7),e(this.needs,{5:[6,7],6:[7],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],3:[2,1],2:[1],4:[3,2,1]}),this.add(7,8),e(this.needs,{5:[6,7,8],6:[7,8],7:[8],1:[2,3,4],2:[3,4],3:[4]}),e(this.neededBy,{7:[6,5],6:[5],8:[7,6,5],3:[2,1],2:[1],4:[3,2,1]}),this.add(4,5),e(this.needs,{1:[2,3,4,5,6,7,8],2:[3,4,5,6,7,8],3:[4,5,6,7,8],4:[5,6,7,8],5:[6,7,8],6:[7,8],7:[8]}),e(this.neededBy,{2:[1],3:[2,1],4:[3,2,1],5:[4,3,2,1],6:[5,4,3,2,1],7:[6,5,4,3,2,1],8:[7,6,5,4,3,2,1]})},add:function(e,t,n){const r=this;e in r.needs||(r.needs[e]=[]),t in r.neededBy||(r.neededBy[t]=[]),r.needs[e]=r.needs[e].concat([t],r.needs[t]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t})),r.neededBy[t]=r.neededBy[t].concat([e],r.neededBy[e]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t})),e in this.neededBy&&this.neededBy[e].forEach((function(e){r.needs[e]=r.needs[e].concat([t],r.needs[t]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t}))})),t in this.needs&&this.needs[t].forEach((function(t){r.neededBy[t]=r.neededBy[t].concat([e],r.neededBy[e]).filter((function(e,t,n){return void 0!==e&&n.indexOf(e)===t}))})),-1!==r.needs[e].indexOf(e)&&(r.inCycle=r.inCycle.concat(r.needs[e]))},trim:function(){function e(e){for(let t=e.length-1;t>-1;--t)e.indexOf(e[t])<t&&e.splice(t,t+1)}for(k in this.needs)e(this.needs[k]);for(k in this.neededBy)e(this.neededBy[k])},foundIn:{},addIn:function(e,t){this.foundIn[e]=t}}},nestShapes:function(e,t={}){const n=this,r=e._index||this.index(e);"no"in t||(t.no=!1);let s=Object.keys(r.shapeExprs||[]),i={};s.forEach((e=>{let t=r.shapeExprs[e];if(o(e,null),"Shape"===t.type)"expression"in t&&(n.simpleTripleConstraints(t)||[]).forEach((t=>{o(n.getValueType(t.valueExpr,!0),{type:"tc",shapeLabel:e,tc:t})}));else if("NodeConstraint"!==t.type)throw Error("nestShapes currently only supports Shapes and NodeConstraints")}));let a=Object.keys(i).filter((e=>1===i[e].length&&"tc"===i[e][0].type&&e in r.shapeExprs&&"Shape"===r.shapeExprs[e].type)).filter((e=>!("noNestPattern"in t)||!e.match(RegExp(t.noNestPattern)))).reduce(((e,t)=>(e[t]={referrer:i[t][0].shapeLabel,predicate:i[t][0].tc.predicate},e)),{});if(!t.no){let n={};if(t.rename){"transform"in t||(t.transform=function(){let e=s.reduce(((e,t,n)=>(e[t]="_:renamed"+n,e)),{});return function(t,n){return e[t]}}()),Object.keys(a).forEach((e=>{let o=r.shapeExprs[e],u=t.transform(e,o);if(n[e]=o.id=u,s[s.indexOf(e)]=u,a[u]=a[e],a[u].was=e,delete a[e],r.shapeExprs[u]=r.shapeExprs[e],delete r.shapeExprs[e],1!==i[e].length)throw Error("assertion: "+e+" doesn't have one reference: ["+i[e]+"]");let c=i[e][0];if("tc"!==c.type)throw"Shape"===c.type?Error("assertion: rename not implemented for Shape: "+c):Error("assertion: "+c.type+" not TripleConstraint or Shape");if("string"!=typeof c.tc.valueExpr)throw Error("assertion: rename not implemented for TripleConstraint expr: "+c.tc.valueExpr);c.tc.valueExpr=u})),Object.keys(a).forEach((e=>{let t=a[e];t.referrer in n&&(t.newReferrer=n[t.referrer])}));let e={};s.forEach((t=>e[t]=r.shapeExprs[t])),r.shapeExprs=e}else{const t=[],n=e.shapes.map((e=>e.id));Object.keys(a).forEach((s=>{const a=r.shapeExprs[s];i[s][0].tc.valueExpr=a;const o=n.indexOf(s);if(e.shapes[o].id!==s)throw Error("assertion: found "+e.shapes[o].id+" instead of "+s);t.push(o),delete r.shapeExprs[s]})),t.sort(((e,t)=>t-e)).forEach((t=>{const n=e.shapes[t].id;if(!a[n])throw Error("deleting unexpected shape "+n);delete e.shapes[t].id,e.shapes.splice(t,1)}))}}return a;function o(e,t){e in i||(i[e]=[]),t&&i[e].push(t)}},getPredicateUsage:function(e,t={}){const n=this;let r=s.create();Object.keys(e.shapes).forEach((t=>{let n=e.shapes[t];"Shape"===n.type&&(n.extends||[]).forEach((e=>r.add(e.reference,t)))})),Object.keys(e.shapes).forEach((e=>{e in r.parents||(r.parents[e]=[])}));let i={};return Object.keys(e.shapes).forEach((s=>{let a=e.shapes[s];if("Shape"===a.type){(n.simpleTripleConstraints(a)||[]).forEach((e=>{let a=n.getValueType(e.valueExpr);if(e.predicate in i){i[e.predicate].uses.push(s);let n=i[e.predicate].commonType;if("object"==typeof n||null===n)t[e.predicate].references.push({shapeLabel:s,newType:a});else if("object"==typeof a)i[e.predicate].commonType=null,t[e.predicate]={shapeLabel:s,predicate:e.predicate,curType:n,newType:a,references:[]};else if(n===a);else if(r.parents[n]&&-1!==r.parents[n].indexOf(a))i[e.predicate].polymorphic=!0;else{let o=r.parents[a]?r.parents[a].indexOf(n):-1;if(-1===o){let o=r.parents[n]?r.parents[n].filter((e=>-1!==r.parents[a].indexOf(e))):[];0===o.length?(t[e.predicate]={shapeLabel:s,predicate:e.predicate,curType:n,newType:a,references:[]},i[e.predicate].commonType=null):(i[e.predicate].commonType=o[0],i[e.predicate].polymorphic=!0)}else i[e.predicate].commonType=r.parents[a][o],i[e.predicate].polymorphic=!0}}else i[e.predicate]={uses:[s],commonType:a,polymorphic:!1},"object"==typeof a&&(t[e.predicate]={shapeLabel:s,predicate:e.predicate,newType:a,references:[]})}))}})),i},simpleTripleConstraints:function(e){if(!("expression"in e))return[];if("TripleConstraint"===e.expression.type)return[e.expression];if("EachOf"===e.expression.type&&!e.expression.expressions.find((e=>"TripleConstraint"!==e.type)))return e.expression.expressions;throw Error("can't (yet) express "+JSON.stringify(e))},getValueType:function(e){return"string"==typeof e?e:e.reference?e.reference:"iri"===e.nodeKind?u.Thing:e.datatype?e.datatype:e},getDependencies:function(e,t){return t=t||this.BiDiClosure(),(e.shapes||[]).forEach((function(e){function n(r,s){if("string"==typeof r)t.add(e.id,r);else if("ShapeOr"===r.type||"ShapeAnd"===r.type)r.shapeExprs.forEach((function(e){n(e,s)}));else if("ShapeNot"===r.type)n(r.shapeExpr,1^s);else if("Shape"===r.type)!function(e,r){function s(r,i){function a(e,t){e.forEach((function(e){s(e,t)}))}function o(r,s){if(r.valueExpr&&n(r.valueExpr,s),s&&-1!==t.inCycle.indexOf(e.id))throw Error("Structural error: "+e.id+" appears in negated cycle")}if("string"==typeof r)t.add(e.id,r);else if("id"in r&&t.addIn(r.id,e.id),"TripleConstraint"===r.type)o(r,i);else{if("OneOf"!==r.type&&"EachOf"!==r.type)throw Error("expected {TripleConstraint,OneOf,EachOf,Inclusion} in "+r);a(r.expressions)}}e.expression&&s(e.expression,r)}(r,s);else if("NodeConstraint"===r.type);else if("ShapeExternal"!==r.type)throw Error("expected Shape{And,Or,Ref,External} or NodeConstraint in "+JSON.stringify(r))}n(e,0)})),t},partition:function(e,t,n,r){const s=e._index||this.index(e),i={shapeExprs:new Map,tripleExprs:new Map};t=t instanceof Array?t:[t],n=n||this.getDependencies(e),r=r||function(e,t){throw new Error("Error: can't find shape "+(t?t+" dependency "+e:e))};const a={};for(let t in e)a[t]="shapes"===t?[]:e[t];return t.forEach((function(e){if(e in i.shapeExprs);else if(e in s.shapeExprs){const t=s.shapeExprs[e];a.shapes.push(t),i.shapeExprs[t.id]=t,e in n.needs&&n.needs[e].forEach((function(t){if(t in n.foundIn&&(t=n.foundIn[t]),t in i.shapeExprs);else if(t in s.shapeExprs){const e=s.shapeExprs[t];a.shapes.push(e),i.shapeExprs[e.id]=e}else r(t,e)}))}else r(e,"supplied")})),a},flatten:function(e,t,n){return this.Visitor().visitSchema(e)},emptySchema:function(){return{type:"Schema"}},merge:function(e,t,n,r){const s=r?e:this.emptySchema();var i;"_base"in e&&(s._base=e._base),"_base"in t&&("_base"in e&&!n||(s._base=t._base)),i="_prefixes",Object.keys(e[i]||{}).forEach((function(t){i in s||(s[i]={}),s[i][t]=e[i][t]})),Object.keys(t[i]||{}).forEach((function(r){i in e&&r in e[i]&&!n||(i in s||(s[i]={}),s[i][r]=t[i][r])})),function(r){(e[r]||new Map).forEach((function(t,n,i){r in s||(s[r]=new Map),s[r].set(n,e[r].get(n))})),(t[r]||new Map).forEach((function(i,a,o){r in e&&e[r].has(a)&&!n||(r in s||(s[r]=new Map),s[r].set(a,t[r].get(a)))}))}("_sourceMap"),"imports"in t&&("imports"in e&&!n||(s.imports=t.imports)),"startActs"in e&&(s.startActs=e.startActs),"startActs"in t&&("startActs"in e&&!n||(s.startActs=t.startActs)),"start"in e&&(s.start=e.start),"start"in t&&("start"in e&&!n||(s.start=t.start));let a=e._index||this.index(e);return r||(e.shapes||[]).forEach((function(e){"shapes"in s||(s.shapes=[]),s.shapes.push(e)})),(t.shapes||[]).forEach((function(t){"shapes"in e&&t.id in a.shapeExprs&&!n||("shapes"in s||(s.shapes=[]),s.shapes.push(t))})),(e._index||t._index)&&(s._index=this.index(s)),s},absolutizeResults:function(e,n){function r(e,r){-1!==["shape","reference","node","subject","predicate","object"].indexOf(e)&&t.isIRI(r[e])&&(r[e]=t.resolveRelativeIRI(n,r[e]))}return function e(t){Object.keys(t).forEach((function(n){"object"==typeof t[n]&&e(t[n]),r&&r(n,t)}))}(e),e},getProofGraph:function(e,n,r){return function e(s){if("NodeConstraintTest"===s.type);else if("SolutionList"===s.type||"ShapeAndResults"===s.type)s.solutions.forEach((t=>{t.solution&&e(t.solution)}));else if("ShapeOrResults"===s.type)e(s.solution);else if("ShapeTest"===s.type)"solution"in s&&e(s.solution);else if("OneOfSolutions"===s.type||"EachOfSolutions"===s.type)s.solutions.forEach((t=>{e(t)}));else if("OneOfSolution"===s.type||"EachOfSolution"===s.type)s.expressions.forEach((t=>{e(t)}));else if("TripleConstraintSolutions"===s.type)s.solutions.map((s=>{if("TestedTriple"!==s.type)throw Error("unexpected result type: "+s.type);const i=s;"object"==typeof i.object&&(i.object='"'+i.object.value.replace(/"/g,'\\"')+'"'+(i.object.language?"@"+i.object.language:i.object.type?"^^"+i.object.type:"")),n.addQuad(t.externalTriple(i,r)),"referenced"in s&&e(s.referenced)}));else if("Recursion"!==s.type)throw Error("unexpected expr type "+s.type+" in "+JSON.stringify(s))}(e),n},validateSchema:function(e){const t=this.Visitor();let n=currentExtra=null,r=!1,i=!1;const a=t.visitShape,o=s.create(),u=s.create();let c=e.index||this.index(e);t.visitShape=function(e,n){const r=currentExtra;currentExtra=e.extra;const s=a.call(t,e,n);return currentExtra=r,s};const l=t.visitShapeNot;t.visitShapeNot=function(e,n){const s=r;r^=!0;const i=l.call(t,e,n);return r=s,i};const f=t.visitTripleConstraint;t.visitTripleConstraint=function(e){const n=r;currentExtra&&-1!==currentExtra.indexOf(e.predicate)&&(r^=!0),i=!0;const s=f.call(t,e);return i=!1,r=n,s};const p=t.visitShapeRef;t.visitShapeRef=function(e){if(!(e in c.shapeExprs))throw y(Error("Structural error: reference to "+JSON.stringify(e)+" not found in schema shape expressions:\n"+m(c.shapeExprs)+"."),e);if(!i&&e===n)throw y(Error("Structural error: circular reference to "+n+"."),e);return(r?o:u).add(n,e),p.call(t,e)};const h=t.visitInclusion;t.visitInclusion=function(e){let n;if(!(n=c.tripleExprs[e]))throw y(Error("Structural error: included shape "+e+" not found in schema triple expressions:\n"+m(c.tripleExprs)+"."),e);return h.call(t,e)},(e.shapes||[]).forEach((function(e){n=e.id,t.visitShapeExpr(e,e.id)}));let d=Object.keys(o.children).filter((e=>o.children[e].filter((t=>t in o.children&&-1!==o.children[t].indexOf(e)||t in u.children&&-1!==u.children[t].indexOf(e))).length>0));if(d.length)throw y(Error("Structural error: circular negative dependencies on "+d.join(",")+"."),d[0]);function m(e){return e?Object.keys(e).map((e=>"_:"===e.substr(0,2)?e:"<"+e+">")).join("\n        "):"- none defined -"}function y(t,n){return"_sourceMap"in e&&(t.location=(e._sourceMap.get(n)||[void 0])[0]),t}},isWellDefined:function(e){return this.validateSchema(e),e},walkVal:function(e,t){const n=this;if("string"==typeof e)return null;if("SolutionList"===e.type)return e.solutions.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("NodeConstraintTest"===e.type)return n.walkVal(e.shapeExpr,t);if("NodeConstraint"===e.type)return null;if("ShapeTest"===e.type){const s=[];r(e,s);const i=s.length?{"http://shex.io/reflex":s}:{};return"solution"in e&&Object.assign(i,n.walkVal(e.solution,t)),Object.keys(i).length?i:null}if("Shape"===e.type)return null;if("ShapeNotTest"===e.type)return n.walkVal(e.shapeExpr,t);if("ShapeNotResults"===e.type)return n.walkVal(e.solution,t);if("Failure"===e.type)return null;if("ShapeNot"===e.type)return n.walkVal(e.shapeExpr,t);if("ShapeOrResults"===e.type)return n.walkVal(e.solution,t);if("ShapeOr"===e.type)return e.shapeExprs.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("ShapeAndResults"===e.type)return e.solutions.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("ShapeAnd"===e.type)return e.shapeExprs.reduce(((e,r)=>{const s=n.walkVal(r,t);return s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]})),e}),{});if("EachOfSolutions"===e.type||"OneOfSolutions"===e.type)return e.solutions.reduce(((e,r)=>(r.expressions.forEach((r=>{const s=n.walkVal(r,t);s&&Object.keys(s).forEach((t=>{e[t]=t in e?e[t].concat(s[t]):s[t]}))})),e)),{});if("TripleConstraintSolutions"===e.type){if("solutions"in e){const t={},n=[];return t[e.predicate]=n,e.solutions.forEach((e=>r(e,n))),n.length?t:null}return null}if("Recursion"===e.type)return null;throw Error("unknown shapeExpression type in "+JSON.stringify(e));function r(e,r){const s=[];if(function e(s){if(!s)return!1;if(s.node===a.nil)return!0;if("solution"in s&&"solutions"in s.solution&&1===s.solution.solutions.length&&"expressions"in s.solution.solutions[0]&&2===s.solution.solutions[0].expressions.length&&"predicate"in s.solution.solutions[0].expressions[0]&&s.solution.solutions[0].expressions[0].predicate===a.first&&s.solution.solutions[0].expressions[1].predicate===a.rest){const i=s.solution.solutions[0].expressions,o=i[0],u=i[1].solutions[0],c=o.solutions[0];let l=t(c);if("referenced"in c){const e=n.walkVal(c.referenced,t);e&&(l?l.nested=e:l=e)}return l&&r.push(l),u.object===a.nil||e("ShapeOrResults"===u.referenced.type?u.referenced.solution:u.referenced)}}(e.referenced))[].push.apply(r,s);else{const s=t(e)||{};if("referenced"in e){const r=n.walkVal(e.referenced,t);r&&(s.nested=r)}Object.keys(s).length>0&&r.push(s)}}},valToValues:function(e){return this.walkVal(e,(function(e){return"object"in e?{ldterm:e.object}:null}))},valToExtension:function(e,t){return function e(n){const r=[];let s={};function i(e){if(null===s)return e;if(Array.isArray(e))return s=null,e;for(k in e){if(k in s)return s=null,e;s[k]=f(e[k])}return e}for(let s in n)if("extensions"===s)n[s]&&r.push(i(f(n[s][t])));else if("nested"===s){const t=e(n[s]);Array.isArray(t)?t.forEach(i):i(t),r.push(t)}else r.push(i(e(n[s])));return 1===r.length?r[0]:s||r}(this.walkVal(e,(function(e){return"extensions"in e?{extensions:e.extensions}:null})))},valuesToSchema:function(e){const t=e;if(e[a.type][0].ldterm===i.Schema){const n={"@context":"http://www.w3.org/ns/shex.jsonld",type:"Schema"};i.startActs in t&&(n.startActs=t[i.startActs].map((e=>{const t={type:"SemAct",name:e.nested[i.name][0].ldterm};return i.code in e.nested&&(t.code=e.nested[i.code][0].ldterm.value),t}))),i.imports in t&&(n.imports=t[i.imports].map((e=>e.ldterm))),e[i.start]&&(n.start=l({id:e[i.start][0].ldterm},r(e[i.start][0].nested)));const s=e[i.shapes];return s&&(n.shapes=s.map((e=>l({id:e.ldterm},r(e.nested))))),n}throw Error("unknown schema type in "+JSON.stringify(e));function n(e,t,n){const r=e[a.type][0].ldterm.substr(i._namespace.length),s=t[r];if(!s)return c;if(s.nary){const t={type:r};return t[s.prop]=e[i[s.prop]].map((e=>o(e))),t}{const t={type:r};return s.prop&&(t[s.prop]=o(e[i[s.prop]][0])),t}function o(e){return s.expr&&"nested"in e?l({id:e.ldterm},n(e.nested)):e.ldterm}}function r(e){let t=n(e,{ShapeAnd:{nary:!0,expr:!0,prop:"shapeExprs"},ShapeOr:{nary:!0,expr:!0,prop:"shapeExprs"},ShapeNot:{nary:!1,expr:!0,prop:"shapeExpr"},ShapeRef:{nary:!1,expr:!1,prop:"reference"},ShapeExternal:{nary:!1,expr:!1,prop:null}},r);if(t!==c)return t;const u=e[a.type][0].ldterm;if(u===i.Shape)return t={type:"Shape"},["closed"].forEach((n=>{i[n]in e&&(t[n]=!!e[i[n]][0].ldterm.value)})),i.extra in e&&(t.extra=e[i.extra].map((e=>e.ldterm))),i.expression in e&&(t.expression="nested"in e[i.expression][0]?l({id:e[i.expression][0].ldterm},o(e[i.expression][0].nested)):e[i.expression][0].ldterm),i.annotation in e&&(t.annotations=e[i.annotation].map((e=>({type:"Annotation",predicate:e.nested[i.predicate][0].ldterm,object:e.nested[i.object][0].ldterm})))),i.semActs in e&&(t.semActs=e[i.semActs].map((e=>{const t={type:"SemAct",name:e.nested[i.name][0].ldterm};return i.code in e.nested&&(t.code=e.nested[i.code][0].ldterm.value),t}))),t;if(u===i.NodeConstraint){const t={type:"NodeConstraint"};return i.values in e&&(t.values=e[i.values].map((e=>s(e)))),i.nodeKind in e&&(t.nodeKind=e[i.nodeKind][0].ldterm.substr(i._namespace.length)),["length","minlength","maxlength","mininclusive","maxinclusive","minexclusive","maxexclusive","totaldigits","fractiondigits"].forEach((n=>{i[n]in e&&(t[n]=parseFloat(e[i[n]][0].ldterm.value))})),i.pattern in e&&(t.pattern=e[i.pattern][0].ldterm.value),i.flags in e&&(t.flags=e[i.flags][0].ldterm.value),i.datatype in e&&(t.datatype=e[i.datatype][0].ldterm),t}throw Error("unknown shapeExpr type in "+JSON.stringify(e))}function s(e,t){if("nested"in e){const t=e.nested[a.type][0].ldterm;if(-1!==[i.IriStem,i.LiteralStem,i.LanguageStem].indexOf(t)){const n=e.nested[i.stem][0].ldterm.value;return{type:t.substr(i._namespace.length),stem:n}}if(-1!==[i.Language].indexOf(t))return{type:"Language",languageTag:e.nested[i.languageTag][0].ldterm.value};if(-1!==[i.IriStemRange,i.LiteralStemRange,i.LanguageStemRange].indexOf(t)){const n=e.nested[i.stem][0];let r=n;"object"==typeof n&&("object"==typeof n.ldterm?r=n.ldterm:n.ldterm.startsWith("_:")&&(r={type:"Wildcard"}));const a={type:t.substr(i._namespace.length),stem:"Wildcard"!==r.type?r.value:r};return i.exclusion in e.nested&&(a.exclusions=e.nested[i.exclusion].map((e=>s(e,t!==i.IriStemRange)))),a}throw Error("unknown objectValue type in "+JSON.stringify(e))}return t?e.ldterm.value:e.ldterm}function o(e){const t=n(e,{EachOf:{nary:!0,expr:!0,prop:"expressions"},OneOf:{nary:!0,expr:!0,prop:"expressions"},Inclusion:{nary:!1,expr:!1,prop:"include"}},o);if(t!==c)return u(e,t),t;if(e[a.type][0].ldterm===i.TripleConstraint){const t={type:"TripleConstraint",predicate:e[i.predicate][0].ldterm};return["inverse"].forEach((n=>{i[n]in e&&(t[n]=!!e[i[n]][0].ldterm.value)})),i.valueExpr in e&&(t.valueExpr=l({id:e[i.valueExpr][0].ldterm},"nested"in e[i.valueExpr][0]?r(e[i.valueExpr][0].nested):{})),u(e,t),t}throw Error("unknown tripleExpr type in "+JSON.stringify(e))}function u(e,t){return i.min in e&&(t.min=parseInt(e[i.min][0].ldterm.value)),i.max in e&&(t.max=parseInt(e[i.max][0].ldterm.value),isNaN(t.max)&&(t.max=-1)),i.annotation in e&&(t.annotations=e[i.annotation].map((e=>({type:"Annotation",predicate:e.nested[i.predicate][0].ldterm,object:e.nested[i.object][0].ldterm})))),i.semActs in e&&(t.semActs=e[i.semActs].map((e=>{const t={type:"SemAct",name:e.nested[i.name][0].ldterm};return i.code in e.nested&&(t.code=e.nested[i.code][0].ldterm.value),t}))),t}},simpleToShapeMap:function(e){return Object.keys(e).reduce(((t,n)=>(e[n].forEach((e=>{t.push({node:n,shape:e})})),t)),[])},absolutizeShapeMap:function(e,n){return e.map((e=>Object.assign(e,{node:t.resolveRelativeIRI(n,e.node),shape:t.resolveRelativeIRI(n,e.shape)})))},errsToSimple:function(t){const n=this;if("FailureList"===t.type)return t.errors.reduce(((e,t)=>e.concat(n.errsToSimple(t))),[]);if("Failure"===t.type)return["validating "+t.node+" as "+t.shape+":"].concat(function e(t){return t.reduce((function(t,n){const r=Object.keys(n);return t.concat(1===r.length&&"errors"===r[0]?e(n.errors):n)}),[])}(t.errors).reduce(((e,t)=>{const r=n.errsToSimple(t).map((e=>"  "+e));return e.length>0?e.concat(["  OR"]).concat(r):r.map((e=>"  "+e))}),[]));if("TypeMismatch"===t.type){const r=Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));return["validating "+h(t.triple.object)+":"].concat(r)}if("ShapeAndFailure"===t.type)return Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));if("ShapeOrFailure"===t.type)return Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(" OR "+("string"==typeof t?[t]:n.errsToSimple(t)))),[]):" OR "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));if("ShapeNotFailure"===t.type)return["Node "+t.errors.node+" expected to NOT pass "+t.errors.shape];if("ExcessTripleViolation"===t.type)return["validating "+h(t.triple.object)+": exceeds cardinality"];if("ClosedShapeViolation"===t.type)return["Unexpected triple(s): {"].concat(t.unexpectedTriples.map((e=>"  "+e.subject+" "+e.predicate+" "+h(e.object)+" ."))).concat(["}"]);if("NodeConstraintViolation"===t.type){const e=r(95)();let n;return e._write(e._writeNodeConstraint(t.shapeExpr).join("")),e.end(((e,t)=>{n=t})),["NodeConstraintError: expected to match "+n]}if("MissingProperty"===t.type)return["Missing property: "+t.property];if("NegatedProperty"===t.type)return["Unexpected property: "+t.property];if(Array.isArray(t))return t.reduce(((e,t)=>{const r=n.errsToSimple(t).map((e=>"  "+e));return e.length?e.concat(["AND"]).concat(r):r}),[]);if("SemActFailure"===t.type){const r=Array.isArray(t.errors)?t.errors.reduce(((e,t)=>e.concat(("string"==typeof t?[t]:n.errsToSimple(t)).map((e=>"  "+e)))),[]):"  "+("string"==typeof e?[t.errors]:n.errsToSimple(t.errors));return["rejected by semantic action:"].concat(r)}if("SemActViolation"===t.type)return[t.message];if("BooleanSemActFailure"===t.type)return["Failed evaluating "+t.code+" on context "+JSON.stringify(t.ctx)];throw Error("unknown shapeExpression type in "+JSON.stringify(t))},resolveRelativeIRI:t.resolveRelativeIRI,resolvePrefixedIRI:function(e,t){const n=e.indexOf(":");if(-1===n)return null;const r=t[e.substr(0,n)];return void 0===r?null:r+e.substr(n+1)},parsePassedNode:function(e,n,r,s,i){if(void 0===e||0===e.length)return s&&s(n.base)?n.base:r?r():this.NotSupplied;if("_"===e[0]&&":"===e[1])return e;if('"'===e[0]){const r=e.match(/^"((?:[^"\\]|\\")*)"(?:@(.+)|\^\^(?:<(.*)>|([^:]*):(.*)))?$/);if(!r)throw Error("malformed literal: "+e);const s=r[1],i=r[2],a=r[3],o=r[4],u=r[5],c='"'+s+'"';if(void 0!==i)return c+"@"+i;if(void 0!==o){if(!(o in n.prefixes))throw Error("error parsing node "+e+' no prefix for "'+o+'"');return c+"^^"+n.prefixes[o]+u}return void 0!==a?c+"^^"+t.resolveRelativeIRI(n.base,a):c}if(!n)return s(e)?e:this.UnknownIRI;const a="<"===e[0]&&">"===e[e.length-1];a&&(e=e.substr(1,e.length-2));const o=t.resolveRelativeIRI(n.base||"",e);if(s(o))return o;if(!a){const t=this.resolvePrefixedIRI(e,n.prefixes);if(null!==t&&s(t))return t}return i?i(o):this.UnknownIRI},executeQueryPromise:function(e,t){const n=t+"?query="+encodeURIComponent(e);return fetch(n,{headers:{Accept:"application/sparql-results+json"}}).then((e=>e.json())).then((e=>this.parseSparqlJsonResults(e)))},executeQuery:function(e,t){const n=t+"?query="+encodeURIComponent(e),r=new XMLHttpRequest;r.open("GET",n,!1),r.setRequestHeader("Accept","application/sparql-results+json"),r.send();const s=JSON.parse(r.responseText);return this.parseSparqlJsonResults(s)},parseSparqlJsonResults:function(e){const t=e.head.vars;return e.results.bindings.map((e=>t.map((t=>{const n=e[t];switch(n.type){case"uri":return n.value;case"bnode":return"_:"+n.value;case"literal":return'"'+n.value.replace(/"/g,'\\""')+'"'+("xml:lang"in n?"@"+n["xml:lang"]:"")+("datatype"in n?"^^"+n.datatype:"");case"typed-literal":return'"'+n.value.replace(/"/g,'\\""')+'"^^'+n.datatype;default:throw"unknown XML results type: "+n.type}}))))},rdfjsDB:function(e,n){return{getNeighborhood:function(r,s){let i;n&&(i=new Date,n.start(!1,r,s));const a=e.getQuads(r,null,null,null).map(t.internalTriple);if(n){const e=new Date;n.end(a,e.valueOf()-i.valueOf()),i=e}n&&n.start(!0,r,s);const o=e.getQuads(null,null,r,null).map(t.internalTriple);return n&&n.end(o,(new Date).valueOf()-i.valueOf()),{outgoing:a,incoming:o}},getSubjects:function(){return e.getSubjects().map(t.internalTerm)},getPredicates:function(){return e.getPredicates().map(t.internalTerm)},getObjects:function(){return e.getObjects().map(t.internalTerm)},getQuads:function(){return e.getQuads.apply(e,arguments).map(t.internalTriple)},get size(){return e.size}}},NotSupplied:"-- not supplied --",UnknownIRI:"-- not found --",unescapeText:function(e,t){const n=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g;try{return e=e.replace(n,(function(e,n,r,s){let i;if(n){if(i=parseInt(n,16),isNaN(i))throw new Error;return String.fromCharCode(i)}if(r){if(i=parseInt(r,16),isNaN(i))throw new Error;return i<65535?String.fromCharCode(i):String.fromCharCode(55296+((i-=65536)>>10),56320+(1023&i))}{const e=t[s];if(!e)throw new Error("no replacement found for '"+s+"'");return e}}))}catch(e){return console.warn(e),""}}};function h(e){if("object"!=typeof e)return e;const t='"'+e.value+'"';return"language"in e?t+"@"+e.language:"type"in e?t+"^^"+e.type:t}function d(e,t){for(let n in p)t?e.prototype[n]=m(p[n]):e[n]=p[n];return e}function m(e){return function(t){return e(this,t)}}return d(d)}();t.exports=s},457:(e,t,n)=>{const r=function(){const e={term:"START"},t=n(118);let r=n(806);function s(e){return t.isIRI(e)?e:t.isLiteral(e)?t.getLiteralValue(e):e.substr(2)}const i="http://www.w3.org/2001/XMLSchema#",a=[i+"integer",i+"nonPositiveInteger",i+"negativeInteger",i+"long",i+"int",i+"short",i+"byte",i+"nonNegativeInteger",i+"unsignedLong",i+"unsignedInt",i+"unsignedShort",i+"unsignedByte",i+"positiveInteger"],o=[i+"decimal"].concat(a),u=[i+"float",i+"double"].concat(o),c={"http://www.w3.org/2001/XMLSchema#integer":function(e,t){return e.match(/^[+-]?[0-9]+$/)||t("illegal integer value '"+e+"'"),parseInt(e)},"http://www.w3.org/2001/XMLSchema#decimal":function(e,t){return e.match(/^[+-]?(?:[0-9]*\.[0-9]+|[0-9]+)$/)||t("illegal decimal value '"+e+"'"),parseFloat(e)}},l=/^[+\-]?(?:[0-9]+(?:\.[0-9]*)?|\.[0-9]+)(?:[eE][+\-]?[0-9]+)?$/;c[i+"float"]=function(e,t){return"NaN"===e?NaN:"INF"===e?1/0:"-INF"===e?-1/0:(e.match(l)||t("illegal float value '"+e+"'"),parseFloat(e))},c[i+"double"]=function(e,t){return"NaN"===e?NaN:"INF"===e?1/0:"-INF"===e?-1/0:(e.match(l)||t("illegal double value '"+e+"'"),Number(e))};const f={length:function(e,t){return e.length===t},minlength:function(e,t){return e.length>=t},maxlength:function(e,t){return e.length<=t}},p={mininclusive:function(e,t){return e>=t},minexclusive:function(e,t){return e>t},maxinclusive:function(e,t){return e<=t},maxexclusive:function(e,t){return e<t}},h={totaldigits:function(e,t){const n=e.match(/[0-9]/g);return n&&n.length<=t},fractiondigits:function(e,t){const n=e.match(/^[+-]?[0-9]*\.?([0-9]*)$/);return n&&n[1].length<=t}};function d(e){if('"'!==e[0])return e;const n={value:t.getLiteralValue(e)},r=t.getLiteralType(e);r&&"http://www.w3.org/2001/XMLSchema#string"!==r&&"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"!==r&&(n.type=r);const s=t.getLiteralLanguage(e);return s&&(n.language=s),n}function m(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}function y(e){return{byPredicate:e.reduce((function(e,t){const n=t.predicate;return n in e||(e[n]=[]),e[n].push(t),e}),{}),candidates:_(e.length).map((function(){return[]})),misses:[]}}function x(e,n){const[r,s]=[e,n].map((e=>t.isBlank(e)?1:t.isLiteral(e)?2:3));return r===s?e.localeCompare(n):r-s}function _(e){return Array.from(Array(e))}function g(e,t,n){t in e||b("expected "+JSON.stringify(e)+" to have a '"+t+"' attribute."),arguments.length>2&&e[t]!==n&&b("expected "+t+" attribute '"+e[t]+"' to equal '"+n+"'.")}function E(){}function b(){const e=Array.prototype.join.call(arguments,""),t=new Error(e);throw Error.captureStackTrace(t,b),t}function v(e){return _(e).map((()=>[]))}return{construct:function o(l,A,S){if(!(this instanceof o))return new o(l,A,S);let O=l._index||r.index(l);this.type="ShExValidator",S=S||{},this.options=S,this.options.coverage=this.options.coverage||"exhaustive","noCache"in S&&S.noCache||(this.known={});const w=this;this.schema=l,this._expect=this.options.lax?E:g,this._optimize={},this.reset=function(){};const T=this.options.regexModule||n(863);function I(e,t,n,r,s){const i=y(t.slice(0,n)),a=y(t.slice(n));return e.reduce((function(e,n,r){n.inverse,n.inverse;const o=(n.inverse?a:i).byPredicate[n.predicate]||[],u=w._triplesMatchingShapeExpr(o,n,s);return u.hits.forEach((function(n){const s=t.indexOf(n.triple);e.constraintList[s].push(r),e.results[r][s]=n.sub})),u.misses.forEach((function(n){const s=t.indexOf(n.triple);e.misses[s]={constraintNo:r,errors:n.errors}})),e}),{misses:{},results:v(e.length),constraintList:v(t.length)})}function F(e,t,n){return e.slice().reduce((function(e,t,r){return"NO_TRIPLE_CONSTRAINT"!==t&&e[t].push({tNo:r,res:n.results[t][r]}),e}),_(t.length).map((()=>[])))}this.indexTripleConstraints=function(e){const t=[];return e&&function e(n){return"string"==typeof n?e(O.tripleExprs[n]):"TripleConstraint"===n.type?(t.push(n),[t.length-1]):"OneOf"===n.type||"EachOf"===n.type?n.expressions.reduce((function(t,n){return t.concat(e(n))}),[]):b("unexpected expr type: "+n.type)}(e),t},this.emptyTracker=function(){const e=e=>e;return{recurse:e,known:e,enter:function(e,t){++this.depth},exit:function(e,t,n){--this.depth},depth:0}},this.validate=function(n,r,s,i){if("object"==typeof n&&"termType"in n&&(n=t.internalTerm(n)),"object"==typeof n){const e=n;if("api"===this.options.results)return e.map((e=>{let t=new Date;const n=this.validate(e.node,e.shape,r,s);return t=new Date-t,{node:e.node,shape:e.shape,status:"errors"in n?"nonconformant":"conformant",appinfo:n,elapsed:t}}));const t=e.reduce(((e,t)=>{const n=this.validate(t.node,t.shape,r,s);return"errors"in n?{passes:e.passes,failures:e.failures.concat(n)}:{passes:e.passes.concat(n),failures:e.failures}}),{passes:[],failures:[]});return t.failures.length>0?1!==t.failures.length?{type:"FailureList",errors:t.failures}:t.failures[0]:1!==t.passes.length?{type:"SolutionList",solutions:t.passes}:t.passes[0]}const a=void 0===s;s||(s=this.emptyTracker()),r&&r!==e||l.start||b("start production not defined");let o=null;if(r==e?o=l.start:"shapes"in this.schema&&0!==this.schema.shapes.length?r in O.shapeExprs?o=O.shapeExprs[r]:b("shape "+r+" not found in:\n"+Object.keys(O.shapeExprs||[]).map((e=>"  "+e)).join("\n")):b("shape "+r+" not found; no shapes in schema"),"string"!=typeof r)return this._validateShapeExpr(n,o,e,s,i);void 0===i&&(i={});const u=n+"@"+(r===e?"_: -start-":r);if(u in i)return s.recurse({type:"Recursion",node:d(n),shape:r});if("known"in this&&u in this.known)return s.known(this.known[u]);i[u]={point:n,shape:r},s.enter(n,r);const c=this._validateShapeExpr(n,o,r,s,i);return s.exit(n,r,c),delete i[u],"known"in this&&(this.known[u]=c),"startActs"in l&&a&&(c.startActs=l.startActs),this.options.noResults?{}:c},this._validateShapeExpr=function(e,t,n,r,s){if(""===e)throw Error("validation needs a valid focus node");let i=null;if("string"==typeof t)i=this._validateShapeExpr(e,O.shapeExprs[t],t,r,s);else if("NodeConstraint"===t.type){const r=this._errorsMatchingNodeConstraint(e,t,null);i=r.errors&&r.errors.length?{type:"Failure",node:d(e),shape:n,errors:r.errors.map((function(e){return{type:"NodeConstraintViolation",shapeExpr:t,error:e}}))}:{type:"NodeConstraintTest",node:d(e),shape:n,shapeExpr:t}}else if("Shape"===t.type)i=this._validateShape(e,t,n,r,s);else if("ShapeExternal"===t.type)i=this.options.validateExtern(e,n,r,s);else if("ShapeOr"===t.type){const a=[];for(let i=0;i<t.shapeExprs.length;++i){const o=t.shapeExprs[i],u=this._validateShapeExpr(e,o,n,r,s);if(!("errors"in u))return{type:"ShapeOrResults",solution:u};a.push(u)}i={type:"ShapeOrFailure",errors:a}}else if("ShapeNot"===t.type){const a=this._validateShapeExpr(e,t.shapeExpr,n,r,s);i="errors"in a?{type:"ShapeNotResults",solution:a}:{type:"ShapeNotFailure",errors:a}}else{if("ShapeAnd"!==t.type)throw Error("expected one of Shape{Ref,And,Or} or NodeConstraint, got "+JSON.stringify(t));{const a=[],o=[];for(let i=0;i<t.shapeExprs.length;++i){const u=t.shapeExprs[i],c=this._validateShapeExpr(e,u,n,r,s);"errors"in c?o.push(c):a.push(c)}i=o.length>0?{type:"ShapeAndFailure",errors:o}:{type:"ShapeAndResults",solutions:a}}}if("string"!=typeof t&&"Shape"!==t.type&&!("errors"in i)&&"semActs"in t){const r=this.semActHandler.dispatchAll(t.semActs,Object.assign({node:e},i),i);if(r.length)return{type:"Failure",node:d(e),shape:n,errors:r}}return i},this._validateShape=function(e,t,n,r,s){const i={db:A,shapeLabel:n,tracker:r,seen:s};let a=null;const o={};if("startActs"in l){const t=this.semActHandler.dispatchAll(l.startActs,null,o);if(t.length)return{type:"Failure",node:d(e),shape:n,errors:t}}const u=A.getNeighborhood(e,n,t),c=u.outgoing.length,f=u.outgoing.sort(((e,t)=>e.predicate.localeCompare(t.predicate)||x(e.object,t.object))).concat(u.incoming.sort(((e,t)=>e.predicate.localeCompare(t.predicate)||x(e.object,t.object)))),p=this.indexTripleConstraints(t.expression),h=I(p,f,c,e,i),{misses:m,extras:y}=function(e,t,n,r){const s=[],i=e.constraintList.reduce((function(i,a,o){return 0===a.length&&o<n&&o in e.misses&&(-1!==r.indexOf(t[o].predicate)?s.push(o):i.push({tripleNo:o,constraintNo:e.misses[o].constraintNo,errors:e.misses[o].errors})),i}),[]);return{misses:i,extras:s}}(h,f,c,t.extra||[]),g=function(e,t){const n=e.length,r=[];let s=null;function i(){s=[];for(let i=0;i<n;i++)r[i]=0,s[i]=e[i].length>0?e[i][0]:t}function a(){if(null!==s&&0===s.length)return!1;if(null===s)return i(),!0;let a=n-1;if(r[a]++,r[a]<e[a].length)return s[a]=e[a][r[a]],!0;for(;r[a]>=e[a].length;){if(0==a)return!1;r[a]=0,s[a]=e[a].length>0?e[a][0]:t,r[--a]++}return s[a]=e[a][r[a]],!0}return{next:a,do:function(e,t){return e.apply(t,s)},get:function(){return s}}}(h.constraintList,"NO_TRIPLE_CONSTRAINT"),E=[],b=T.compile(l,t,O);for(;g.next()&&null===a;){const r=[],s=[],i=_(f.length).map((function(){return 0})),o=g.get();if(t.closed){const e=f.slice(0,c).filter(((e,t)=>"NO_TRIPLE_CONSTRAINT"===o[t]&&-1===y.indexOf(t)));e.length>0&&r.push({type:"ClosedShapeViolation",unexpectedTriples:e})}o.forEach((function(e,t){"NO_TRIPLE_CONSTRAINT"!==e&&(s.push(f[t]),++i[e])}));const u=F(o,p,h),l=b.match(A,e,p,u,o,f,this.semActHandler,null);"errors"in l&&[].push.apply(r,l.errors);const m={type:"ShapeTest",node:d(e),shape:n};if(0===r.length&&Object.keys(l).length>0&&(m.solution=l),"semActs"in t){const n=this.semActHandler.dispatchAll(t.semActs,Object.assign({node:e},l),m);n.length&&[].push.apply(r,n)}E.push(r),0===r.length&&(a=m)}const v=m.map((function(e){const t=f[e.tripleNo];return{type:"TypeMismatch",triple:{type:"TestedTriple",subject:t.subject,predicate:t.predicate,object:d(t.object)},constraint:p[e.constraintNo],errors:e.errors}})),S=E[E.length-1];let w=v.concat(1===S.length?S[0]:S);return w.length>0&&(a={type:"Failure",node:d(e),shape:n,errors:w}),function(e,t){"annotations"in e&&(t.annotations=e.annotations);return t}(t,a)},this._triplesMatchingShapeExpr=function(e,t,n){const r=this,s=[],i=[];return e.forEach((function(e){const a=t.inverse?e.subject:e.object;let o;const u=JSON.parse(JSON.stringify(r.semActHandler.results));(void 0===t.valueExpr?void 0:(o=r._errorsMatchingShapeExpr(a,t.valueExpr,n)).errors)?-1===i.indexOf(e)&&(r.semActHandler.results=JSON.parse(JSON.stringify(u)),s.push({triple:e,errors:o})):i.push({triple:e,sub:o})})),{hits:i,misses:s}},this._errorsMatchingShapeExpr=function(e,t,n){const r=this;if("string"==typeof t)return r.validate(e,t,n.tracker,n.seen);if("NodeConstraint"===t.type)return this._errorsMatchingNodeConstraint(e,t,null);if("Shape"===t.type)return r._validateShapeExpr(e,t,n.shapeLabel,n.tracker,n.seen);if("ShapeOr"===t.type){const s=[];for(let i=0;i<t.shapeExprs.length;++i){const a=t.shapeExprs[i],o=r._errorsMatchingShapeExpr(e,a,n);if(!("errors"in o))return{type:"ShapeOrResults",solution:o};s.push(o)}return{type:"ShapeOrFailure",errors:s}}if("ShapeAnd"===t.type){const s=[];for(let i=0;i<t.shapeExprs.length;++i){const a=t.shapeExprs[i],o=r._errorsMatchingShapeExpr(e,a,n);if("errors"in o)return{type:"ShapeAndFailure",errors:[o]};s.push(o)}return{type:"ShapeAndResults",solutions:s}}if("ShapeNot"===t.type){const s=r._errorsMatchingShapeExpr(e,t.shapeExpr,n),i=Object.assign({type:null,focus:e},t);return s.errors&&s.errors.length?i.type="ShapeNotTest":(i.type="ShapeNotFailure",i.errors=["Error validating "+e+" as "+JSON.stringify(t)+": expected NOT to pass"]),i}throw Error("unknown value expression type '"+t.type+"'")},this._errorsMatchingNodeConstraint=function(e,n,r){const o=[],l=t.isLiteral(e)?t.getLiteralValue(e):t.isBlank(e)?e.substring(2):e,y=t.isLiteral(e)?t.getLiteralType(e):null,x=-1!==a.indexOf(y)?i+"integer":-1!==u.indexOf(y)?y:void 0;function _(){const t=Array.prototype.join.call(arguments,"");return o.push("Error validating "+e+" as "+JSON.stringify(n)+": "+t),!1}if("nodeKind"in n&&(-1===["iri","bnode","literal","nonliteral"].indexOf(n.nodeKind)&&_("unknown node kind '"+n.nodeKind+"'"),t.isBlank(e)?"iri"!==n.nodeKind&&"literal"!==n.nodeKind||_("blank node found when "+n.nodeKind+" expected"):t.isLiteral(e)?"literal"!==n.nodeKind&&_("literal found when "+n.nodeKind+" expected"):"bnode"!==n.nodeKind&&"literal"!==n.nodeKind||_("iri found when "+n.nodeKind+" expected")),n.datatype&&n.values&&_("found both datatype and values in "+tripleConstraint),n.datatype&&(t.isLiteral(e)?t.getLiteralType(e)!==n.datatype?_("mismatched datatype: "+t.getLiteralType(e)+" !== "+n.datatype):x?function(e,t,n){const r={integer:{min:-1/0,max:1/0},decimal:{min:-1/0,max:1/0},float:{min:-1/0,max:1/0},double:{min:-1/0,max:1/0},nonPositiveInteger:{min:-1/0,max:0},negativeInteger:{min:-1/0,max:-1},long:{min:-0x8000000000000000,max:0x8000000000000000},int:{min:-2147483648,max:2147483647},short:{min:-32768,max:32767},byte:{min:-128,max:127},nonNegativeInteger:{min:0,max:1/0},unsignedLong:{min:0,max:0x10000000000000000},unsignedInt:{min:0,max:4294967295},unsignedShort:{min:0,max:65535},unsignedByte:{min:0,max:255},positiveInteger:{min:1,max:1/0}}[t.substr(i.length)];if(!r)throw Error("unexpected datatype: "+t);e<r.min?n('"'+e+'"^^<'+t+"> is less than the min:",r.min):e>r.max&&n('"'+e+'"^^<'+t+"> is greater than the max:",r.min)}(c[x](l,_),n.datatype,_):n.datatype===i+"boolean"?"true"!==l&&"false"!==l&&"1"!==l&&"0"!==l&&_("illegal boolean value: "+l):n.datatype===i+"dateTime"&&(l.match(/^[+-]?\d{4}-[01]\d-[0-3]\dT[0-5]\d:[0-5]\d:[0-5]\d(\.\d+)?([+-][0-2]\d:[0-5]\d|Z)?$/)||_("illegal dateTime value: "+l)):_("mismatched datatype: "+e+" is not a literal with datatype "+n.datatype)),n.values&&(t.isLiteral(e)&&n.values.reduce(((t,n)=>{if(t)return!0;const r=d(e);return"Language"===n.type?n.languageTag===r.language:"object"==typeof n&&"value"in n&&(n.value===r.value&&n.type===r.type&&n.language===r.language)}),!1)||-1!==n.values.indexOf(e)||n.values.some((function(n){if("object"==typeof n&&!("value"in n)){"type"in n||b("expected "+JSON.stringify(n)+" to have a 'type' attribute.");const i=["Language","IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];function r(e,r,s){return t.isLiteral(e)?-1!==["LiteralStem","LiteralStemRange"].indexOf(n.type)?s(t.getLiteralValue(e),r):-1!==["LanguageStem","LanguageStemRange"].indexOf(n.type)?s(t.getLiteralLanguage(e)||null,r):_("literal "+e+" not comparable with non-literal "+r):-1===["IriStem","IriStemRange"].indexOf(n.type)?_("nonliteral "+e+" not comparable with literal "+JSON.stringify(r)):s(e,r)}function s(e,t){return r(e,t,((e,t)=>"LanguageStem"===n.type||"LanguageStemRange"===n.type?null!==e&&(e===t||""===t||"-"===e[t.length]):e.startsWith(t)))}if(-1===i.indexOf(n.type)&&b("expected type attribute '"+n.type+"' to be in '"+i+"'."),m(n.stem)){if(!s(e,n.stem))return!1}else g(n.stem,"type","Wildcard");return!n.exclusions||!n.exclusions.some((function(t){if(m(t))return r(e,t,((e,t)=>e===t));{"type"in t||b("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const n=["IriStem","LiteralStem","LanguageStem"];return-1===n.indexOf(t.type)&&b("expected type attribute '"+t.type+"' to be in '"+n+"'."),s(e,t.stem)}}))}}))||_("value "+e+" not found in set "+JSON.stringify(n.values))),"pattern"in n){const t="flags"in n?new RegExp(n.pattern,n.flags):new RegExp(n.pattern);s(e).match(t)||_("value "+s(e)+" did not match pattern "+n.pattern)}Object.keys(f).forEach((function(t){t in n&&!f[t](l,n[t])&&_("facet violation: expected "+t+" of "+n[t]+" but got "+e)})),Object.keys(p).forEach((function(t){t in n&&(x?p[t](c[x](l,_),n[t])||_("facet violation: expected "+t+" of "+n[t]+" but got "+e):_("facet violation: numeric facet "+t+" can't apply to "+e))})),Object.keys(h).forEach((function(t){t in n&&(x===i+"integer"||x===i+"decimal"?h[t](""+c[x](l,_),n[t])||_("facet violation: expected "+t+" of "+n[t]+" but got "+e):_("facet violation: numeric facet "+t+" can't apply to "+e))}));const E={type:null,focus:e,shapeExpr:n};return o.length?(E.type="NodeConstraintViolation",E.errors=o):E.type="NodeConstraintTest",E},this.semActHandler={handlers:{},results:{},register:function(e,t){this.handlers[e]=t},dispatchAll:function(e,t,n){const r=this;return e.reduce((function(e,s){if(0===e.length&&s.name in r.handlers){const i="code"in s?s.code:w.options.semActs[s.name],a="extensions"in n&&s.name in n.extensions,o=a?n.extensions[s.name]:{},u=r.handlers[s.name].dispatch(i,t,o);if("boolean"==typeof u)u||e.push({type:"SemActFailure",errors:[{type:"BooleanSemActFailure",code:i,ctx:t}]});else{if("object"!=typeof u||!Array.isArray(u))throw Error("unsupported response from semantic action handler: "+JSON.stringify(u));u.length>0&&e.push({type:"SemActFailure",errors:u})}return!a&&Object.keys(o).length>0&&("extensions"in n||(n.extensions={}),n.extensions[s.name]=o),e}return e}),[])}}},start:e,options:{coverage:{firstError:"fail on first error (usually used with eval-simple-1err)",exhaustive:"find as many errors as possible (usually used with eval-threaded-nerr)"}}}}();e.exports=r},806:e=>{function t(){function e(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}function t(e){return"string"==typeof e}const n={runtimeError:function(e){throw e},visitSchema:function(e){const t={type:"Schema"};return this._expect(e,"type","Schema"),this._maybeSet(e,t,"Schema",["@context","prefixes","base","imports","startActs","start","shapes"],["_base","_prefixes","_index","_sourceMap"]),t},visitPrefixes:function(e){return void 0===e?void 0:function(e,t){const n={};return Object.keys(e).forEach((function(r){n[r]=t(e[r])})),n}(e,(function(e){return e}))},visitIRI:function(e){return e},visitImports:function(e){const t=this;return e.map((function(e){return t.visitIRI(e)}))},visitStartActs:function(e){const t=this;return void 0===e?void 0:e.map((function(e){return t.visitSemAct(e)}))},visitSemActs:function(e){const t=this;if(void 0===e)return;const n=[];return Object.keys(e).forEach((function(r){n.push(t.visitSemAct(e[r],r))})),n},visitSemAct:function(e,t){const n={type:"SemAct"};return this._expect(e,"type","SemAct"),this._maybeSet(e,n,"SemAct",["name","code"]),n},visitShapes:function(e){const t=this;if(void 0!==e)return e.map((e=>t.visitShapeExpr(e)))},visitProductions999:function(e){const t=this;if(void 0===e)return;const n={};return Object.keys(e).forEach((function(r){n[r]=t.visitExpression(e[r],r)})),n},visitShapeExpr:function(e,n){if(t(e))return this.visitShapeRef(e);const r="Shape"===e.type?this.visitShape(e,n):"NodeConstraint"===e.type?this.visitNodeConstraint(e,n):"ShapeAnd"===e.type?this.visitShapeAnd(e,n):"ShapeOr"===e.type?this.visitShapeOr(e,n):"ShapeNot"===e.type?this.visitShapeNot(e,n):"ShapeExternal"===e.type?this.visitShapeExternal(e):null;if(null===r)throw Error("unexpected shapeExpr type: "+e.type);return r},_visitShapeGroup:function(e,t){this._testUnknownAttributes(e,["id","shapeExprs"],e.type,this.visitShapeNot);const n=this,r={type:e.type};return"id"in e&&(r.id=e.id),r.shapeExprs=e.shapeExprs.map((function(e){return n.visitShapeExpr(e,t)})),r},visitShapeNot:function(e,t){this._testUnknownAttributes(e,["id","shapeExpr"],"ShapeNot",this.visitShapeNot);const n={type:e.type};return"id"in e&&(n.id=e.id),n.shapeExpr=this.visitShapeExpr(e.shapeExpr,t),n},visitShape:function(e,t){const n={type:"Shape"};return this._expect(e,"type","Shape"),this._maybeSet(e,n,"Shape",["id","closed","expression","extra","semActs","annotations"]),n},visitNodeConstraint:function(e,t){const n={type:"NodeConstraint"};return this._expect(e,"type","NodeConstraint"),this._maybeSet(e,n,"NodeConstraint",["id","nodeKind","datatype","pattern","flags","length","reference","minlength","maxlength","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits","values","annotations","semActs"]),n},visitShapeRef:function(e){if("string"!=typeof e){let t=Exception("visitShapeRef expected a string, not "+JSON.stringify(e));throw console.warn(t),t}return e},visitShapeExternal:function(e){return this._testUnknownAttributes(e,["id"],"ShapeExternal",this.visitShapeNot),Object.assign("id"in e?{id:e.id}:{},{type:"ShapeExternal"})},_visitGroup:function(e,t){const n=this,r=Object.assign("id"in e?{id:null}:{},{type:e.type});return r.expressions=e.expressions.map((function(e){return n.visitExpression(e)})),this._maybeSet(e,r,"expr",["id","min","max","annotations","semActs"],["expressions"])},visitTripleConstraint:function(e){return this._maybeSet(e,Object.assign("id"in e?{id:null}:{},{type:"TripleConstraint"}),"TripleConstraint",["id","inverse","predicate","valueExpr","min","max","annotations","semActs"])},visitExpression:function(e){if("string"==typeof e)return this.visitInclusion(e);const t="TripleConstraint"===e.type?this.visitTripleConstraint(e):"OneOf"===e.type?this.visitOneOf(e):"EachOf"===e.type?this.visitEachOf(e):null;if(null===t)throw Error("unexpected expression type: "+e.type);return t},visitValues:function(t){const n=this;return t.map((function(t){return e(t)||"Language"===t.type?t:n.visitStemRange(t)}))},visitStemRange:function(t){const n=this;"type"in t||n.runtimeError(Error("expected "+JSON.stringify(t)+" to have a 'type' attribute."));const r=["IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];let s;return-1===r.indexOf(t.type)&&n.runtimeError(Error("expected type attribute '"+t.type+"' to be in '"+r+"'.")),e(t)?(this._expect(t.stem,"type","Wildcard"),s={type:t.type,stem:{type:"Wildcard"}}):s={type:t.type,stem:t.stem},t.exclusions&&(s.exclusions=t.exclusions.map((function(e){return n.visitExclusion(e)}))),s},visitExclusion:function(t){if(e(t))return t;{"type"in t||_Visitor.runtimeError(Error("expected "+JSON.stringify(t)+" to have a 'type' attribute."));const e=["IriStem","LiteralStem","LanguageStem"];return-1===e.indexOf(t.type)&&_Visitor.runtimeError(Error("expected type attribute '"+t.type+"' to be in '"+e+"'.")),{type:t.type,stem:t.stem}}},visitInclusion:function(e){if("string"!=typeof e){let t=Exception("visitInclusion expected a string, not "+JSON.stringify(e));throw console.warn(t),t}return e},_maybeSet:function(e,t,n,r,s){const i=this;return this._testUnknownAttributes(e,s?r.concat(s):r,n,this._maybeSet),r.forEach((function(n){const r="visit"+n.charAt(0).toUpperCase()+n.slice(1);if(n in e){const s=i[r];if("function"!=typeof s)throw Error(r+" not found in Visitor");const a=s.call(i,e[n]);void 0!==a&&(t[n]=a)}})),t},_visitValue:function(e){return e},_visitList:function(e){return e.slice()},_testUnknownAttributes:function(e,t,n,r){const s=Object.keys(e).reduce((function(e,n){return"type"!==n&&-1===t.indexOf(n)?e.concat(n):e}),[]);if(s.length>0){const t=Error("unknown propert"+(s.length>1?"ies":"y")+": "+s.map((function(e){return'"'+e+'"'})).join(",")+" in "+n+": "+JSON.stringify(e));throw Error.captureStackTrace(t,r),t}},_expect:function(e,t,n){t in e||this.runtimeError(Error("expected "+JSON.stringify(e)+" to have a ."+t)),arguments.length>2&&e[t]!==n&&this.runtimeError(Error("expected "+e[t]+" to equal "+n))}};return n.visitBase=n.visitStart=n.visitClosed=n["visit@context"]=n._visitValue,n.visitExtra=n.visitAnnotations=n._visitList,n.visitInverse=n.visitPredicate=n._visitValue,n.visitName=n.visitId=n.visitCode=n.visitMin=n.visitMax=n._visitValue,n.visitType=n.visitNodeKind=n.visitDatatype=n.visitPattern=n.visitFlags=n.visitLength=n.visitMinlength=n.visitMaxlength=n.visitMininclusive=n.visitMinexclusive=n.visitMaxinclusive=n.visitMaxexclusive=n.visitTotaldigits=n.visitFractiondigits=n._visitValue,n.visitOneOf=n.visitEachOf=n._visitGroup,n.visitShapeAnd=n.visitShapeOr=n._visitShapeGroup,n.visitInclude=n._visitValue,n.visitValueExpr=n.visitShapeExpr,n}t.index=function(e){let n={shapeExprs:{},tripleExprs:{}},r=t(),s=r.visitExpression;r.visitExpression=function(e){return"object"==typeof e&&"id"in e&&(n.tripleExprs[e.id]=e),s.call(r,e)};let i=r.visitShapeExpr;return r.visitShapeExpr=r.visitValueExpr=function(e,t){return"object"==typeof e&&"id"in e&&(n.shapeExprs[e.id]=e),i.call(r,e,t)},r.visitSchema(e),n},e.exports=t},95:(e,t,n)=>{const r=function(){const e=n(755),t=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,r=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,s={"\\":"\\\\",'"':'\\"',"/":"\\/","\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"},i={iri:"IRI",bnode:"BNODE",literal:"LITERAL",nonliteral:"NONLITERAL"};function a(e,t){if(!(this instanceof a))return new a(e,t);if(e&&"function"!=typeof e.write&&(t=e,e=null),t=t||{},e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{let e="";this._outputStream={write:function(t,n,r){e+=t,r&&r()},end:function(t){t&&t(null,e)}},this._endStream=!0}this._prefixIRIs=Object.create(null),this._baseIRI=t.base||null,t.prefixes&&this.addPrefixes(t.prefixes),this._error=t.error||c,this.forceParens=!t.simplifyParentheses,this._expect=t.lax?f:l}function o(e){let t=s[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function u(e){return e.replace(/\\/g,"\\\\").replace(/%/g,"\\%")}function c(e,t){"function"!=typeof e&&(t=e,e=c);const n=new Error(t);throw Error.captureStackTrace(n,e),n}function l(e,t,n){t in e||this._error(l,"expected "+e+" to have a ."+t),arguments.length>2&&e[t]!==n&&this._error(l,"expected "+e[e]+" to equal ."+n)}function f(){}return a.prototype={_write:function(e,t){this._outputStream.write(e,"utf8",t)},_writeSchema:function(e,t){const n=this;this._expect(e,"type","Schema"),n.addPrefixes(e._prefixes),e._base&&(n._baseIRI=e._base),n._baseIRI&&n._write("BASE <"+n._baseIRI+">\n"),e.imports&&e.imports.forEach((function(e){n._write("IMPORT "+n._encodeIriOrBlankNode(e)+"\n")})),e.startActs&&e.startActs.forEach((function(e){n._expect(e,"type","SemAct"),n._write(" %"+n._encodePredicate(e.name)+("code"in e?"{"+u(e.code)+"%}":"%"))})),e.start&&n._write("start = "+n._writeShapeExpr(e.start,t,!0,0).join("")+"\n"),"shapes"in e&&e.shapes.forEach((function(e){n._write(n._encodeShapeName(e.id,!1)+" "+n._writeShapeExpr(e,t,!0,0).join("")+"\n",t)}))},_writeShapeExpr:function(e,t,n,r){const s=this,i=[];if("string"==typeof e)i.push("@",s._encodeShapeName(e));else if("ShapeExternal"===e.type)i.push("EXTERNAL");else if("ShapeAnd"===e.type){r>=3&&i.push("(");let n=!1;e.shapeExprs.forEach((function(r,a){if(a>0){function o(t){let n=e.shapeExprs[t];return!("NodeConstraint"!==n.type||"nodeKind"in n&&"literal"===n.nodeKind||"datatype"in n||"values"in n)}let t=!n&&(o(a-1)&&function(t){let n=e.shapeExprs[t];return"Shape"===n.type||"ShapeRef"===n.type}(a)||(u=a-1,"Shape"===e.shapeExprs[u].type&&o(a)));i.push(" AND "),n=t}var u;[].push.apply(i,s._writeShapeExpr(r,t,!1,3))})),r>=3&&i.push(")")}else if("ShapeOr"===e.type)r>=2&&i.push("("),e.shapeExprs.forEach((function(e,r){r>0&&i.push(" OR "),[].push.apply(i,s._writeShapeExpr(e,t,n,2))})),r>=2&&i.push(")");else if("ShapeNot"===e.type)r>=4&&i.push("("),i.push("NOT "),[].push.apply(i,s._writeShapeExpr(e.shapeExpr,t,n,4)),r>=4&&i.push(")");else if("Shape"===e.type)[].push.apply(i,s._writeShape(e,t,n));else{if("NodeConstraint"!==e.type)throw Error("expected Shape{,And,Or,Ref} or NodeConstraint in "+JSON.stringify(e));[].push.apply(i,s._writeNodeConstraint(e,t,n))}return i},_writeShape:function(e,t,n){const r=this;try{const n=[];this._expect(e,"type","Shape"),e.closed&&n.push("CLOSED "),e.extra&&e.extra.length>0&&(n.push("EXTRA "),e.extra.forEach((function(e,t){n.push(r._encodeShapeName(e,!1)+" ")})),n.push(" "));function s(e,t){0===e&&1===t?n.push("?"):0===e&&-1===t?n.push("*"):void 0===e&&void 0===t||(1===e&&-1===t?n.push("+"):n.push("{",e,",",-1===t?"*":t,"}"))}return n.push("{\n"),e.expression&&function e(i,a,o){function c(e){e&&e.forEach((function(e){r._expect(e,"type","SemAct"),n.push("\n"+a+"   %"),n.push(r._encodeValue(e.name)),"code"in e?n.push("{"+u(e.code)+"%}"):n.push("%")}))}function l(t,r,s,i){const u=s<o||i;u&&n.push("("),t.forEach((function(i,o){e(i,a+"  ",s),o<t.length-1&&n.push(r)})),u&&n.push(")")}if("string"==typeof i)n.push("&"),n.push(r._encodeShapeName(i,!1));else if("id"in i&&(n.push("$"),n.push(r._encodeIriOrBlankNode(i.id,!0))),"TripleConstraint"===i.type)i.inverse&&n.push("^"),i.negated&&n.push("!"),n.push(a,r._encodePredicate(i.predicate)," "),"valueExpr"in i?[].push.apply(n,r._writeShapeExpr(i.valueExpr,t,!0,0)):n.push(". "),s(i.min,i.max),r._annotations(n,i.annotations,a),c(i.semActs);else if("OneOf"===i.type){const e="id"in i||"min"in i||"max"in i||"annotations"in i||"semActs"in i;l(i.expressions,"\n"+a+"| ",1,e||r.forceParens),s(i.min,i.max),r._annotations(n,i.annotations,a),c(i.semActs)}else{if("EachOf"!==i.type)throw Error("unexpected expr type: "+i.type);{const e="id"in i||"min"in i||"max"in i||"annotations"in i||"semActs"in i;l(i.expressions,";\n"+a,2,e||r.forceParens),s(i.min,i.max),r._annotations(n,i.annotations,a),c(i.semActs)}}}(e.expression,"  ",0),n.push("\n}"),(i=e.semActs)&&i.forEach((function(e){r._expect(e,"type","SemAct"),n.push(" %",r._encodePredicate(e.name),"code"in e?"{"+u(e.code)+"%}":"%")})),r._annotations(n,e.annotations,"  "),n}catch(e){t&&t(e)}var i},_writeNodeConstraint:function(e,t){const n=this;try{n._expect(e,"type","NodeConstraint");const r=[];return e.nodeKind in i?r.push(i[e.nodeKind]," "):void 0!==e.nodeKind&&n._error("unexpected nodeKind: "+e.nodeKind),this._fillNodeConstraint(r,e,t),this._annotations(r,e.annotations,"  "),r}catch(e){t&&t(e)}},_annotations:function(e,t,n){const r=this;t&&t.forEach((function(t){r._expect(t,"type","Annotation"),e.push("//\n"+n+"   "),e.push(r._encodeValue(t.predicate)),e.push(" "),e.push(r._encodeValue(t.object))}))},_fillNodeConstraint:function(e,t,n){const s=this;if(t.datatype&&t.values&&s._error("found both datatype and values in "+expr),t.datatype&&e.push(s._encodeShapeName(t.datatype)),t.values&&(e.push("["),t.values.forEach((function(t,n){if(n>0&&e.push(" "),i(t))e.push(s._encodeValue(t));else{"type"in t||runtimeError("expected "+JSON.stringify(t)+" to have a 'type' attribute.");const n=["Language","IriStem","LiteralStem","LanguageStem","IriStemRange","LiteralStemRange","LanguageStemRange"];function a(e,t){return-1!==["LanguageStem","LanguageStemRange"].indexOf(e.type)?"@"+t:-1!==["LiteralStem","LiteralStemRange"].indexOf(e.type)?'"'+t.replace(r,t)+'"':s._encodeValue(t)}-1===n.indexOf(t.type)&&runtimeError("expected type attribute '"+t.type+"' to be in '"+n+"'."),"Language"===t.type?e.push("@"+t.languageTag):i(t.stem)?e.push(a(t,t.stem)+"~"):(l(t.stem,"type","Wildcard"),e.push(".")),t.exclusions&&t.exclusions.forEach((function(n){if(e.push(" - "),i(n))e.push(a(t,n));else{"type"in n||runtimeError("expected "+JSON.stringify(n)+" to have a 'type' attribute.");const r=["IriStem","LiteralStem","LanguageStem"];-1===r.indexOf(n.type)&&runtimeError("expected type attribute '"+n.type+"' to be in '"+r+"'."),e.push(a(t,n.stem)+"~")}}))}})),e.push("]")),"pattern"in t){const n=t.pattern.replace(/\//g,"\\/"),r="flags"in t?t.flags:"";e.push("/"+n+"/"+r+" ")}return["length","minlength","maxlength","mininclusive","minexclusive","maxinclusive","maxexclusive","totaldigits","fractiondigits"].forEach((function(n){t[n]&&e.push(" ",n," ",t[n])})),e;function i(e){return"object"!=typeof e||"value"in e&&Object.keys(e).reduce(((e,t)=>!1===e?e:-1!==["value","type","language"].indexOf(t)),!0)}},_encodeIriOrBlankNode:function(e,n){if(n=n?" ":"","_"===e[0]&&":"===e[1])return e;t.test(e)&&(e=e.replace(r,o));const s=this._prefixRegex.exec(e);return s?(s[1]?this._prefixIRIs[s[1]]+s[2]:e)+n:this._relateUrl(e)},_relateUrl:function(t){const n=this._baseIRI;try{n&&new URL(n).host===new URL(t).host&&(t=e.relate(n,t,{output:e.ROOT_PATH_RELATIVE}))}catch(e){}return"<"+t+">"},_encodeLiteral:function(e,n,s){return t.test(e)&&(e=e.replace(r,o)),s?'"'+e+'"@'+s:n?"http://www.w3.org/2001/XMLSchema#integer"===n&&e.match(/^[+-]?[0-9]+$/)||"http://www.w3.org/2001/XMLSchema#decimal"===n&&e.match(/^[+-]?[0-9]*\.[0-9]+$/)||"http://www.w3.org/2001/XMLSchema#double"===n&&e.match(/^[+-]?([0-9]+\.[0-9]*[eE][+-]?[0-9]+|\.?[0-9]+[eE][+-]?[0-9]+)$/)?e:'"'+e+'"^^'+this._encodeIriOrBlankNode(n):'"'+e+'"'},_encodeShapeName:function(e,t){if('"'===e[0])throw new Error("A literal as subject is not allowed: "+e);return this._encodeIriOrBlankNode(e,t)},_encodePredicate:function(e){if('"'===e[0])throw new Error("A literal as predicate is not allowed: "+e);return"http://www.w3.org/1999/02/22-rdf-syntax-ns#type"===e?"a":this._encodeIriOrBlankNode(e)},_encodeValue:function(e){return"object"!=typeof e?this._encodeIriOrBlankNode(e):this._encodeLiteral(e.value,e.type,e.language)},_blockedWrite:function(){throw new Error("Cannot write because the writer has been closed.")},writeSchema:function(e,t){this._writeSchema(e,t),this.end(t)},addShape:function(e,t,n){this._write(_ShExWriter._encodeShapeName(t,!1)+" "+_ShExWriter._writeShapeExpr(e,n,!0,0).join(""),n)},addShapes:function(e){for(let t=0;t<e.length;t++)this.addShape(e[t])},addPrefix:function(e,t,n){const r={};r[e]=t,this.addPrefixes(r,n)},addPrefixes:function(e,t){const n=this._prefixIRIs;let r=!1;for(let t in e){const s=e[t];n[s]!==(t+=":")&&(r=!0,n[s]=t,this._write("PREFIX "+t+" <"+s+">\n"))}if(r){let e="",t="";for(let r in n)e+=e?"|"+r:r,t+=(t?"|":"")+n[r];e=e.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&"),this._prefixRegex=new RegExp("^(?:"+t+")[^/]*$|^("+e+")([a-zA-Z][\\-_a-zA-Z0-9]*)$")}this._write(r?"\n":"",t)},_prefixRegex:/$0^/,end:function(e){this._write=this._blockedWrite;let t=e&&function(n,r){t=null,e(n,r)};if(this._endStream)try{return this._outputStream.end(t)}catch(e){}t&&t()}},a}();e.exports=r}},n={};function r(e){var s=n[e];if(void 0!==s)return s.exports;var i=n[e]={id:e,loaded:!1,exports:{}};return t[e].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);r(709)})();