{
  "type": "ShapeTest",
  "node": "http://a.example/s1",
  "shape": "http://a.example/S1",
  "solution": {
    "type": "TripleConstraintSolutions",
    "predicate": "http://a.example/p1",
    "valueExpr": {
      "type": "ShapeNot",
      "shapeExpr": {
        "type": "ShapeOr",
        "shapeExprs": [
          {
            "type": "NodeConstraint",
            "nodeKind": "literal"
          },
          {
            "type": "NodeConstraint",
            "values": [
              "http://a.example/v1",
              "http://a.example/v2"
            ]
          }
        ]
      }
    },
    "solutions": [
      {
        "type": "TestedTriple",
        "subject": "http://a.example/s1",
        "predicate": "http://a.example/p1",
        "object": "http://a.example/o1",
        "referenced": {
          "type": "ShapeNotResults",
          "solution": {
            "type": "ShapeOrFailure",
            "errors": [
              {
                "type": "NodeConstraintViolation",
                "node": "http://a.example/o1",
                "shape": "http://a.example/S1",
                "shapeExpr": {
                  "type": "NodeConstraint",
                  "nodeKind": "literal"
                },
                "errors": [
                  "Error validating <http://a.example/o1> as {\"type\":\"NodeConstraint\",\"nodeKind\":\"literal\"}: iri found when literal expected"
                ]
              },
              {
                "type": "NodeConstraintViolation",
                "node": "http://a.example/o1",
                "shape": "http://a.example/S1",
                "shapeExpr": {
                  "type": "NodeConstraint",
                  "values": [
                    "http://a.example/v1",
                    "http://a.example/v2"
                  ]
                },
                "errors": [
                  "Error validating <http://a.example/o1> as {\"type\":\"NodeConstraint\",\"values\":[\"http://a.example/v1\",\"http://a.example/v2\"]}: value http://a.example/o1 not found in set [\"http://a.example/v1\",\"http://a.example/v2\"]"
                ]
              }
            ]
          }
        }
      }
    ]
  }
}
