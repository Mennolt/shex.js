{
  "errors": [],
  "warnings": [
    "../shex-api/shex-api.js 326:11-24\nCritical dependency: the request of a dependency is an expression\n    at CommonJsRequireContextDependency.getWarnings (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/dependencies/ContextDependency.js:40:18)\n    at Compilation.reportDependencyErrorsAndWarnings (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1454:24)\n    at /home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1258:10\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:24:1)\n    at AsyncSeriesHook.lazyCompileHook (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/Hook.js:154:20)\n    at Compilation.finish (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1253:28)\n    at /home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compiler.js:672:17\n    at _done (eval at create (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:9:1)\n    at eval (eval at create (/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:20:22)\n    at /home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1185:12\n    at /home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1097:9\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)\n @ ./shex-webapp.js",
    "asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).\nThis can impact web performance.\nAssets: \n  shex-webapp.js (661 KiB)\n  shex-webapp.min.js (345 KiB)",
    "entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.\nEntrypoints:\n  shex-webapp (661 KiB)\n      shex-webapp.js\n  shex-webapp.min (345 KiB)\n      shex-webapp.min.js\n",
    "webpack performance recommendations: \nYou can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.\nFor more info visit https://webpack.js.org/guides/code-splitting/"
  ],
  "version": "4.44.1",
  "hash": "ab2b2a8044b919ef7962",
  "time": 4406,
  "builtAt": 1600269199789,
  "publicPath": "webpacks/",
  "outputPath": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/doc/webpacks",
  "assetsByChunkName": {
    "shex-webapp": "shex-webapp.js",
    "shex-webapp.min": "shex-webapp.min.js"
  },
  "assets": [
    {
      "name": "shex-webapp.js",
      "size": 676669,
      "chunks": [
        0,
        1
      ],
      "chunkNames": [
        "shex-webapp"
      ],
      "info": {},
      "emitted": true,
      "isOverSizeLimit": true
    },
    {
      "name": "shex-webapp.min.js",
      "size": 353672,
      "chunks": [
        1,
        0
      ],
      "chunkNames": [
        "shex-webapp.min"
      ],
      "info": {
        "minimized": true,
        "related": {
          "license": "shex-webapp.min.js.LICENSE.txt"
        }
      },
      "emitted": true,
      "isOverSizeLimit": true
    },
    {
      "name": "shex-webapp.min.js.LICENSE.txt",
      "size": 205,
      "chunks": [],
      "chunkNames": [],
      "info": {},
      "emitted": true
    }
  ],
  "filteredAssets": 0,
  "entrypoints": {
    "shex-webapp": {
      "chunks": [
        0
      ],
      "assets": [
        "shex-webapp.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    },
    "shex-webapp.min": {
      "chunks": [
        1
      ],
      "assets": [
        "shex-webapp.min.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    }
  },
  "namedChunkGroups": {
    "shex-webapp": {
      "chunks": [
        0
      ],
      "assets": [
        "shex-webapp.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    },
    "shex-webapp.min": {
      "chunks": [
        1
      ],
      "assets": [
        "shex-webapp.min.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 669152,
      "names": [
        "shex-webapp"
      ],
      "files": [
        "shex-webapp.js"
      ],
      "hash": "390fb8d9ec0094b3dbbe",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/process/browser.js",
          "name": "./node_modules/process/browser.js",
          "index": 5,
          "index2": 1,
          "size": 5418,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "issuerId": 32,
          "issuerName": "../shex-validator/shex-validator.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 32,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "name": "../shex-validator/shex-validator.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 366,
            "building": 21,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
              "module": "./node_modules/path-browserify/index.js",
              "moduleName": "./node_modules/path-browserify/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 7,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-59"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
        },
        {
          "id": 1,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
          "name": "./node_modules/path-browserify/index.js",
          "index": 8,
          "index2": 4,
          "size": 8742,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 35,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 35,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 10,
                "building": 166,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 36,
            "building": 59,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "6:9-24"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "49:11-26"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "15:11-26"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1179:44-59"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1870:44-59"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "22:17-32"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "10:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"
        },
        {
          "id": 2,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/node-libs-browser/mock/empty.js",
          "name": "./node_modules/node-libs-browser/mock/empty.js",
          "index": 7,
          "index2": 3,
          "size": 0,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 35,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 35,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 10,
                "building": 166,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 36,
            "building": 59,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "43:9-22"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "8:9-22"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1179:17-30"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1870:17-30"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "24:9-22"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "4:9-22"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": ""
        },
        {
          "id": 3,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-term/shex-term.js",
          "name": "../shex-term/shex-term.js",
          "index": 9,
          "index2": 8,
          "size": 10614,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "4:15-38"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "module": "../shex-parser/shex-parser.js",
              "moduleName": "../shex-parser/shex-parser.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "3:17-40"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "4:20-43"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "26:15-38"
            },
            {
              "moduleId": 33,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/eval-threaded-nerr/eval-threaded-nerr.js",
              "module": "../eval-threaded-nerr/eval-threaded-nerr.js",
              "moduleName": "../eval-threaded-nerr/eval-threaded-nerr.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "2:17-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/**\n *\n * isIRI, isBlank, getLiteralType, getLiteralValue\n */\n\nconst ShExTermCjsModule = (function () {\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  const RdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\n  const XsdString = \"http://www.w3.org/2001/XMLSchema#string\";\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function resolveRelativeIRI (base, iri) {\n\n    if (absoluteIRI.test(iri))\n      return iri\n\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      let m = base.match(schemeAuthority);\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? m[1] : m[0]) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(base.replace(/[^\\/?]*(?:\\?.*)?$/, '') + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function internalTerm (node) { // !!rdfjsTermToInternal\n    switch (node.termType) {\n    case (\"NamedNode\"):\n      return node.value;\n    case (\"BlankNode\"):\n      return \"_:\" + node.value;\n    case (\"Literal\"):\n      return \"\\\"\" + node.value + \"\\\"\" + (\n        node.datatypeString === RdfLangString\n          ? \"@\" + node.language\n          : node.datatypeString === XsdString\n          ? \"\"\n          : \"^^\" + node.datatypeString\n      );\n    default: throw Error(\"unknown RDFJS node type: \" + JSON.stringify(node))\n    }\n  }\n\n  function internalTriple (triple) { // !!rdfjsTripleToInternal\n    return {\n      subject: internalTerm(triple.subject),\n      predicate: internalTerm(triple.predicate),\n      object: internalTerm(triple.object)\n    };\n  }\n\n  function externalTerm (node, factory) { // !!intermalTermToRdfjs\n    if (isIRI(node)) {\n      return factory.namedNode(node);\n    } else if (isBlank(node)) {\n      return factory.blankNode(node.substr(2));\n    } else if (isLiteral(node)) {\n      let dtOrLang = getLiteralLanguage(node) ||\n          (getLiteralType(node) === XsdString\n           ? null // seems to screw up N3.js\n           : factory.namedNode(getLiteralType(node)))\n      return factory.literal(getLiteralValue(node), dtOrLang)\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  function externalTriple (triple, factory) { // !!rename internalTripleToRdjs\n    return factory.quad(\n      externalTerm(triple.subject, factory),\n      externalTerm(triple.predicate, factory),\n      externalTerm(triple.object, factory)\n    );\n  }\n\n  function intermalTermToTurtle (node, base, prefixes) {\n    if (isIRI(node)) {\n      // if (node === RDF_TYPE) // only valid in Turtle predicates\n      //   return \"a\";\n\n      // Escape special characters\n      if (escape.test(node))\n        node = node.replace(escapeAll, characterReplacer);\n      var pref = Object.keys(prefixes).find(pref => node.startsWith(prefixes[pref]));\n      if (pref) {\n        var rest = node.substr(prefixes[pref].length);\n        if (rest.indexOf(\"\\\\\") === -1) // could also say no more than n of these: [...]\n          return pref + \":\" + rest.replace(/([~!$&'()*+,;=/?#@%])/g, '\\\\' + \"$1\");\n      }\n      if (node.startsWith(base)) {\n        return \"<\" + node.substr(base.length) + \">\";\n      } else {\n        return \"<\" + node + \">\";\n      }\n    } else if (isBlank(node)) {\n      return node;\n    } else if (isLiteral(node)) {\n      var value = getLiteralValue(node);\n      var type = getLiteralType(node);\n      var language = getLiteralLanguage(node);\n      // Escape special characters\n      if (escape.test(value))\n        value = value.replace(escapeAll, characterReplacer);\n      // Write the literal, possibly with type or language\n      if (language)\n        return '\"' + value + '\"@' + language;\n      else if (type && type !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return '\"' + value + '\"^^' + this.intermalTermToTurtle(type, base, prefixes);\n      else\n        return '\"' + value + '\"';\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  function isIRI (entity) {\n    if (typeof entity !== 'string')\n      return false;\n    else if (entity.length === 0)\n      return true;\n    else {\n      var firstChar = entity[0];\n      return firstChar !== '\"' && firstChar !== '_';\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  function isLiteral (entity) {\n    return typeof entity === 'string' && entity[0] === '\"';\n  }\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  function isBlank (entity) {\n    return typeof entity === 'string' && entity.substr(0, 2) === '_:';\n  }\n\n  // Tests whether the given entity represents the default graph\n  function isDefaultGraph (entity) {\n    return !entity;\n  }\n\n  // Tests whether the given triple is in the default graph\n  function inDefaultGraph (triple) {\n    return !triple.graph;\n  }\n\n  // Gets the string value of a literal in the N3 library\n  function getLiteralValue (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  }\n\n  // Gets the type of a literal in the N3 library\n  function getLiteralType (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  }\n\n  // Gets the language of a literal in the N3 library\n  function getLiteralLanguage (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  }\n\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n  // Replaces a character by its escaped version\n  function characterReplacer (character) {\n    // Replace a single character by its escaped version\n    var result = escapeReplacements[character];\n    if (result === undefined) {\n      // Replace a single character with its 4-bit unicode escape sequence\n      if (character.length === 1) {\n        result = character.charCodeAt(0).toString(16);\n        result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n      }\n      // Replace a surrogate pair with its 8-bit unicode escape sequence\n      else {\n        result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                  character.charCodeAt(1) + 0x2400).toString(16);\n        result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n      }\n    }\n    return result;\n  }\n\n  return {\n    RdfLangString: RdfLangString,\n    XsdString: XsdString,\n    resolveRelativeIRI: resolveRelativeIRI,\n    isIRI: isIRI,\n    isLiteral: isLiteral,\n    isBlank: isBlank,\n    isDefaultGraph: isDefaultGraph,\n    inDefaultGraph: inDefaultGraph,\n    getLiteralValue: getLiteralValue,\n    getLiteralType: getLiteralType,\n    getLiteralLanguage: getLiteralLanguage,\n    internalTerm: internalTerm,\n    internalTriple: internalTriple,\n    externalTerm: externalTerm,\n    externalTriple: externalTriple,\n    intermalTermToTurtle: intermalTermToTurtle,\n  }\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExTermCjsModule; // node environment\n"
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "index": 10,
          "index2": 20,
          "size": 73522,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/util",
              "loc": "5:20-43"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/util",
              "loc": "5:19-42"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "@shexjs/util",
              "loc": "960:17-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExUtil** provides ShEx utility functions\n\nconst ShExUtilCjsModule = (function () {\nvar ShExTerm = require(\"@shexjs/term\");\nconst Visitor = require('@shexjs/visitor')\nconst Hierarchy = require('hierarchy-closure')\n\nconst SX = {};\nSX._namespace = \"http://www.w3.org/ns/shex#\";\n[\"Schema\", \"@context\", \"imports\", \"startActs\", \"start\", \"shapes\",\n \"ShapeOr\", \"ShapeAnd\", \"shapeExprs\", \"nodeKind\",\n \"NodeConstraint\", \"iri\", \"bnode\", \"nonliteral\", \"literal\", \"datatype\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\", \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\", \"values\",\n \"ShapeNot\", \"shapeExpr\",\n \"Shape\", \"virtual\", \"closed\", \"extra\", \"expression\", \"inherit\", \"semActs\",\n \"ShapeRef\", \"reference\", \"ShapeExternal\",\n \"EachOf\", \"OneOf\", \"expressions\", \"min\", \"max\", \"annotation\",\n \"TripleConstraint\", \"inverse\", \"negated\", \"predicate\", \"valueExpr\",\n \"Inclusion\", \"include\", \"Language\", \"languageTag\",\n \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"stem\",\n \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\", \"exclusion\",\n \"Wildcard\", \"SemAct\", \"name\", \"code\",\n \"Annotation\", \"object\"].forEach(p => {\n  SX[p] = SX._namespace+p;\n});\nconst RDF = {};\nRDF._namespace = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n[\"type\", \"first\", \"rest\", \"nil\"].forEach(p => {\n  RDF[p] = RDF._namespace+p;\n});\nconst XSD = {}\nXSD._namespace = \"http://www.w3.org/2001/XMLSchema#\";\n[\"anyURI\"].forEach(p => {\n  XSD[p] = XSD._namespace+p;\n});\nconst OWL = {}\nOWL._namespace = \"http://www.w3.org/2002/07/owl#\";\n[\"Thing\"].forEach(p => {\n  OWL[p] = OWL._namespace+p;\n});\n\nconst Missed = {}; // singleton\nvar UNBOUNDED = -1;\n\nfunction extend (base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\nvar ShExUtil = {\n\n  SX: SX,\n  RDF: RDF,\n  version: function () {\n    return \"0.5.0\";\n  },\n\n  Visitor: Visitor,\n  index: Visitor.index,\n\n  // tests\n  // console.warn(\"HERE:\", ShExJtoAS({\"type\":\"Schema\",\"shapes\":[{\"id\":\"http://all.example/S1\",\"type\":\"Shape\",\"expression\":\n  //  { \"id\":\"http://all.example/S1e\", \"type\":\"EachOf\",\"expressions\":[ ] },\n  // // { \"id\":\"http://all.example/S1e\",\"type\":\"TripleConstraint\",\"predicate\":\"http://all.example/p1\"},\n  // \"extra\":[\"http://all.example/p3\",\"http://all.example/p1\",\"http://all.example/p2\"]\n  // }]}).shapes['http://all.example/S1']);\n\n  ShExJtoAS: function (schema) {\n    var _ShExUtil = this;\n    schema._prefixes = schema.prefixes || {  };\n    schema._index = this.index(schema);\n    return schema;\n  },\n\n  AStoShExJ: function (schema, abbreviate) {\n    schema[\"@context\"] = schema[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete schema[\"_index\"];\n    delete schema[\"_prefixes\"];\n    return schema;\n  },\n\n  ShExRVisitor: function (knownShapeExprs) {\n    var v = ShExUtil.Visitor();\n    var knownExpressions = {};\n    var oldVisitShapeExpr = v.visitShapeExpr,\n        oldVisitValueExpr = v.visitValueExpr,\n        oldVisitExpression = v.visitExpression;\n    v.keepShapeExpr = oldVisitShapeExpr;\n\n    v.visitShapeExpr = v.visitValueExpr = function (expr, label) {\n      if (typeof expr === \"string\")\n        return expr;\n      if (\"id\" in expr) {\n        if (knownShapeExprs.indexOf(expr.id) !== -1 || Object.keys(expr).length === 1)\n          return expr.id;\n        delete expr.id;\n      }\n      return oldVisitShapeExpr.call(this, expr, label);\n    };\n\n    v.visitExpression = function (expr) {\n      if (typeof expr === \"string\") // shortcut for recursive references e.g. 1Include1 and ../doc/TODO.md\n        return expr;\n      if (\"id\" in expr) {\n        if (expr.id in knownExpressions) {\n          knownExpressions[expr.id].refCount++;\n          return expr.id;\n        }\n      }\n      var ret = oldVisitExpression.call(this, expr);\n      // Everything from RDF has an ID, usually a BNode.\n      knownExpressions[expr.id] = { refCount: 1, expr: ret };\n      return ret;\n    }\n\n    v.cleanIds = function () {\n      for (var k in knownExpressions) {\n        var known = knownExpressions[k];\n        if (known.refCount === 1 && ShExTerm.isBlank(known.expr.id))\n          delete known.expr.id;\n      };\n    }\n\n    return v;\n  },\n\n\n  // tests\n  // var shexr = ShExUtil.ShExRtoShExJ({ \"type\": \"Schema\", \"shapes\": [\n  //   { \"id\": \"http://a.example/S1\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p1\",\n  //       \"valueExpr\": {\n  //         \"type\": \"ShapeAnd\", \"shapeExprs\": [\n  //           { \"type\": \"NodeConstraint\", \"nodeKind\": \"bnode\" },\n  //           { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //             \"expression\": {\n  //               \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  //           //            \"http://a.example/S2\"\n  //         ] } } },\n  //   { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  // ] });\n  // console.warn(\"HERE:\", shexr.shapes[0].expression.valueExpr);\n  // ShExUtil.ShExJtoAS(shexr);\n  // console.warn(\"THERE:\", shexr.shapes[\"http://a.example/S1\"].expression.valueExpr);\n\n\n  ShExRtoShExJ: function (schema) {\n    // compile a list of known shapeExprs\n    var knownShapeExprs = [];\n    if (\"shapes\" in schema)\n      knownShapeExprs = knownShapeExprs.concat(schema.shapes.map(sh => { return sh.id; }));\n\n    // normalize references to those shapeExprs\n    var v = this.ShExRVisitor(knownShapeExprs);\n    if (\"start\" in schema)\n      schema.start = v.visitShapeExpr(schema.start);\n    if (\"shapes\" in schema)\n      schema.shapes = schema.shapes.map(sh => {\n        return v.keepShapeExpr(sh);\n      });\n\n    // remove extraneous BNode IDs\n    v.cleanIds();\n    return schema;\n  },\n\n  valGrep: function (obj, type, f) {\n    var _ShExUtil = this;\n    var ret = [];\n    for (var i in obj) {\n      var o = obj[i];\n      if (typeof o === \"object\") {\n        if (\"type\" in o && o.type === type)\n          ret.push(f(o));\n        ret.push.apply(ret, _ShExUtil.valGrep(o, type, f));\n      }\n    }\n    return ret;\n  },\n\n  n3jsToTurtle: function (res) {\n    function termToLex (node) {\n      return typeof node === \"object\" ? (\"\\\"\" + node.value + \"\\\"\" + (\n        \"type\" in node ? \"^^<\" + node.type + \">\" :\n          \"language\" in node ? \"@\" + node.language :\n          \"\"\n      )) :\n      ShExTerm.isIRI(node) ? \"<\" + node + \">\" :\n      ShExTerm.isBlank(node) ? node :\n      \"???\";\n    }\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  valToN3js: function (res, factory) {\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      var ret = JSON.parse(JSON.stringify(t));\n      if (typeof t.object === \"object\")\n        ret.object = (\"\\\"\" + t.object.value + \"\\\"\" + (\n          \"type\" in t.object ? \"^^\" + t.object.type :\n            \"language\" in t.object ? \"@\" + t.object.language :\n            \"\"\n        ));\n      return ShExTerm.externalTriple(ret, factory);\n    });\n  },\n\n  n3jsToTurtle: function (n3js) {\n    function termToLex (node) {\n      if (ShExTerm.isIRI(node))\n        return \"<\" + node + \">\";\n      if (ShExTerm.isBlank(node))\n        return node;\n      var t = ShExTerm.getLiteralType(node);\n      if (t && t !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return \"\\\"\" + ShExTerm.getLiteralValue(node) + \"\\\"\" +\n        \"^^<\" + t + \">\";\n      return node;\n    }\n    return n3js.map(function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  /* canonicalize: move all tripleExpression references to their first expression.\n   *\n   */\n  canonicalize: function (schema, trimIRI) {\n    var ret = JSON.parse(JSON.stringify(schema));\n    ret[\"@context\"] = ret[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete ret._prefixes;\n    delete ret._base;\n    let index = ret._index || this.index(schema);\n    delete ret._index;\n    let sourceMap = ret._sourceMap;\n    delete ret._sourceMap;\n    // Don't delete ret.productions as it's part of the AS.\n    var v = ShExUtil.Visitor();\n    var knownExpressions = [];\n    var oldVisitInclusion = v.visitInclusion, oldVisitExpression = v.visitExpression;\n    v.visitInclusion = function (inclusion) {\n      if (knownExpressions.indexOf(inclusion) === -1 &&\n          inclusion in index.tripleExprs) {\n        knownExpressions.push(inclusion)\n        return oldVisitExpression.call(v, index.tripleExprs[inclusion]);\n      }\n      return oldVisitInclusion.call(v, inclusion);\n    };\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression) {\n        if (knownExpressions.indexOf(expression.id) === -1) {\n          knownExpressions.push(expression.id)\n          return oldVisitExpression.call(v, index.tripleExprs[expression.id]);\n        }\n        return expression.id; // Inclusion\n      }\n      return oldVisitExpression.call(v, expression);\n    };\n    if (trimIRI) {\n      v.visitIRI = function (i) {\n        return i.replace(trimIRI, \"\");\n      }\n      if (\"imports\" in ret)\n        ret.imports = v.visitImports(ret.imports);\n    }\n    if (\"shapes\" in ret) {\n      ret.shapes = Object.keys(index.shapeExprs).sort().map(k => {\n        if (\"extra\" in index.shapeExprs[k])\n          index.shapeExprs[k].extra.sort();\n        return v.visitShapeExpr(index.shapeExprs[k]);\n      });\n    }\n    return ret;\n  },\n\n  BiDiClosure: function () {\n    return {\n      needs: {},\n      neededBy: {},\n      inCycle: [],\n      test: function () {\n        function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n        // this.add(1, 2); expect(this.needs, { 1:[2]                     }); expect(this.neededBy, { 2:[1]                     });\n        // this.add(3, 4); expect(this.needs, { 1:[2], 3:[4]              }); expect(this.neededBy, { 2:[1], 4:[3]              });\n        // this.add(2, 3); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1] });\n\n        this.add(2, 3); expect(this.needs, { 2:[3]                     }); expect(this.neededBy, { 3:[2]                     });\n        this.add(1, 2); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(1, 3); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(3, 4); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(6, 7); expect(this.needs, { 6:[7]                    , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6]                    , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 6); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 7); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(7, 8); expect(this.needs, { 5:[6,7,8], 6:[7,8], 7:[8], 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5], 8:[7,6,5], 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(4, 5);\n        expect(this.needs,    { 1:[2,3,4,5,6,7,8], 2:[3,4,5,6,7,8], 3:[4,5,6,7,8], 4:[5,6,7,8], 5:[6,7,8], 6:[7,8], 7:[8] });\n        expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1], 5:[4,3,2,1], 6:[5,4,3,2,1], 7:[6,5,4,3,2,1], 8:[7,6,5,4,3,2,1] });\n      },\n      add: function (needer, needie, negated) {\n        var r = this;\n        if (!(needer in r.needs))\n          r.needs[needer] = [];\n        if (!(needie in r.neededBy))\n          r.neededBy[needie] = [];\n\n        // // [].concat.apply(r.needs[needer], [needie], r.needs[needie]). emitted only last element\n        r.needs[needer] = r.needs[needer].concat([needie], r.needs[needie]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        // // [].concat.apply(r.neededBy[needie], [needer], r.neededBy[needer]). emitted only last element\n        r.neededBy[needie] = r.neededBy[needie].concat([needer], r.neededBy[needer]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n\n        if (needer in this.neededBy) this.neededBy[needer].forEach(function (e) {\n          r.needs[e] = r.needs[e].concat([needie], r.needs[needie]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        });\n\n        if (needie in this.needs) this.needs[needie].forEach(function (e) {\n          r.neededBy[e] = r.neededBy[e].concat([needer], r.neededBy[needer]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; })\n        });\n        // this.neededBy[needie].push(needer);\n\n        if (r.needs[needer].indexOf(needer) !== -1)\n          r.inCycle = r.inCycle.concat(r.needs[needer]);\n      },\n      trim: function () {\n        function _trim (a) {\n          // filter(function (el, ord, l) { return l.indexOf(el) === ord; })\n          for (var i = a.length-1; i > -1; --i)\n            if (a.indexOf(a[i]) < i)\n              a.splice(i, i+1);\n        }\n        for (k in this.needs)\n          _trim(this.needs[k]);\n        for (k in this.neededBy)\n          _trim(this.neededBy[k]);\n      },\n      foundIn: {},\n      addIn: function (tripleExpr, shapeExpr) {\n        this.foundIn[tripleExpr] = shapeExpr;\n      }\n    }\n  },\n  /** @@TODO tests\n   * options:\n   *   no: don't do anything; just report nestable shapes\n   *   transform: function to change shape labels\n   */\n  nestShapes: function (schema, options = {}) {\n    var _ShExUtil = this;\n    const index = schema._index || this.index(schema);\n    if (!('no' in options)) { options.no = false }\n\n    let shapeLabels = Object.keys(index.shapeExprs || [])\n    let shapeReferences = {}\n    shapeLabels.forEach(label => {\n      let shape = index.shapeExprs[label]\n      noteReference(label, null) // just note the shape so we have a complete list at the end\n      shape = _ShExUtil.skipDecl(shape)\n      if (shape.type === 'Shape') {\n        if ('extends' in shape) {\n          shape.extends.forEach(\n            parent => noteReference(parent, shape)\n          )\n        }\n        if ('expression' in shape) {\n          (_ShExUtil.simpleTripleConstraints(shape) || []).forEach(tc => {\n            let target = _ShExUtil.getValueType(tc.valueExpr, true)\n            noteReference(target, {type: 'tc', shapeLabel: label, tc: tc})\n          })\n        }\n      } else if (shape.type === 'NodeConstraint') {\n        // can't have any refs to other shapes\n      } else {\n        throw Error('nestShapes currently only supports Shapes and NodeConstraints')\n      }\n    })\n    let nestables = Object.keys(shapeReferences).filter(\n      label => shapeReferences[label].length === 1\n        && shapeReferences[label][0].type === 'tc' // no inheritance support yet\n        && _ShExUtil.skipDecl(index.shapeExprs[label]).type === 'Shape' // Don't nest e.g. valuesets for now\n    ).filter(\n      nestable => !('noNestPattern' in options)\n        || !nestable.match(RegExp(options.noNestPattern))\n    ).reduce((acc, label) => {\n      acc[label] = {\n        referrer: shapeReferences[label][0].shapeLabel,\n        predicate: shapeReferences[label][0].tc.predicate\n      }\n      return acc\n    }, {})\n    if (!options.no) {\n      let oldToNew = {}\n\n      if (options.rename) {\n      if (!('transform' in options)) {\n        options.transform = (function () {\n          let map = shapeLabels.reduce((acc, k, idx) => {\n            acc[k] = '_:transformed' + idx\n            return acc\n          }, {})\n          return function (id, shapeExpr) {\n            return map[id]\n          }\n        })()\n      }\n      Object.keys(nestables).forEach(oldName => {\n        let shapeExpr = index.shapeExprs[oldName]\n        let newName = options.transform(oldName, shapeExpr)\n        oldToNew[oldName] = newName\n        shapeLabels[shapeLabels.indexOf(oldName)] = newName\n        nestables[newName] = nestables[oldName]\n        nestables[newName].was = oldName\n        delete nestables[oldName]\n        index.shapeExprs[newName] = index.shapeExprs[oldName]\n        delete index.shapeExprs[oldName]\n        if (shapeReferences[oldName].length !== 1) { throw Error('assertion: ' + oldName + ' doesn\\'t have one reference: [' + shapeReferences[oldName] + ']') }\n        let ref = shapeReferences[oldName][0]\n        if (ref.type === 'tc') {\n          if (ref.tc.valueExpr.type === 'ShapeRef') {\n            ref.tc.valueExpr.reference = newName\n          } else {\n            throw Error('assertion: rename not implemented for TripleConstraint expr: ' + ref.tc.valueExpr)\n            // _ShExUtil.setValueType(ref, newName)\n          }\n        } else if (ref.type === 'Shape') {\n          throw Error('assertion: rename not implemented for Shape: ' + ref)\n        } else {\n          throw Error('assertion: ' + ref.type + ' not TripleConstraint or Shape')\n        }\n      })\n\n      Object.keys(nestables).forEach(k => {\n        let n = nestables[k]\n        if (n.referrer in oldToNew) {\n          n.newReferrer = oldToNew[n.referrer]\n        }\n      })\n\n      // Restore old order for more concise diffs.\n      let shapesCopy = {}\n      shapeLabels.forEach(label => shapesCopy[label] = index.shapeExprs[label])\n      index.shapeExprs = shapesCopy\n      } else {\n        const doomed = []\n        const ids = schema.shapes.map(s => s.id)\n        Object.keys(nestables).forEach(oldName => {\n          shapeReferences[oldName][0].tc.valueExpr = index.shapeExprs[oldName].shapeExpr\n          const delme = ids.indexOf(oldName)\n          if (schema.shapes[delme].id !== oldName)\n            throw Error('assertion: found ' + schema.shapes[delme].id + ' instead of ' + oldName)\n          doomed.push(delme)\n          delete index.shapeExprs[oldName]\n        })\n        doomed.sort((l, r) => r - l).forEach(delme => {\n          const id = schema.shapes[delme].id\n          if (!nestables[id])\n            throw Error('deleting unexpected shape ' + id)\n          schema.shapes.splice(delme, 1)\n        })\n      }\n    }\n    // console.dir(nestables)\n    // console.dir(shapeReferences)\n    return nestables\n\n    function noteReference (id, reference) {\n      if (!(id in shapeReferences)) {\n        shapeReferences[id] = []\n      }\n      if (reference) {\n        shapeReferences[id].push(reference)\n      }\n    }\n  },\n\n  /** @@TODO tests\n   *\n   */\n  getPredicateUsage: function (schema, untyped = {}) {\n    var _ShExUtil = this;\n\n    // populate shapeHierarchy\n    let shapeHierarchy = Hierarchy.create()\n    Object.keys(schema.shapes).forEach(label => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[label])\n      if (shapeExpr.type === 'Shape') {\n        (shapeExpr.extends || []).forEach(\n          superShape => shapeHierarchy.add(superShape, label)\n        )\n      }\n    })\n    Object.keys(schema.shapes).forEach(label => {\n      if (!(label in shapeHierarchy.parents))\n        shapeHierarchy.parents[label] = []\n    })\n\n    let predicates = { } // IRI->{ uses: [shapeLabel], commonType: shapeExpr }\n    Object.keys(schema.shapes).forEach(shapeLabel => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[shapeLabel])\n      if (shapeExpr.type === 'Shape') {\n        let tcs = _ShExUtil.simpleTripleConstraints(shapeExpr) || []\n        tcs.forEach(tc => {\n          let newType = _ShExUtil.getValueType(tc.valueExpr)\n          if (!(tc.predicate in predicates)) {\n            predicates[tc.predicate] = {\n              uses: [shapeLabel],\n              commonType: newType,\n              polymorphic: false\n            }\n            if (typeof newType === 'object') {\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                newType,\n                references: []\n              }\n            }\n          } else {\n            predicates[tc.predicate].uses.push(shapeLabel)\n            let curType = predicates[tc.predicate].commonType\n            if (typeof curType === 'object' || curType === null) {\n              // another use of a predicate with no commonType\n              // console.warn(`${shapeLabel} ${tc.predicate}:${newType} uses untypable predicate`)\n              untyped[tc.predicate].references.push({ shapeLabel, newType })\n            } else if (typeof newType === 'object') {\n              // first use of a predicate with no detectable commonType\n              predicates[tc.predicate].commonType = null\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                curType,\n                newType,\n                references: []\n              }\n            } else if (curType === newType) {\n              ; // same type again\n            } else if (shapeHierarchy.parents[curType].indexOf(newType) !== -1) {\n              predicates[tc.predicate].polymorphic = true; // already covered by current commonType\n            } else {\n              let idx = shapeHierarchy.parents[newType].indexOf(curType)\n              if (idx === -1) {\n                let intersection = shapeHierarchy.parents[curType].filter(\n                  lab => -1 !== shapeHierarchy.parents[newType].indexOf(lab)\n                )\n                if (intersection.length === 0) {\n                  untyped[tc.predicate] = {\n                    shapeLabel,\n                    predicate: tc.predicate,\n                    curType,\n                    newType,\n                    references: []\n                  }\n                  // console.warn(`${shapeLabel} ${tc.predicate} : ${newType} isn\\'t related to ${curType}`)\n                  predicates[tc.predicate].commonType = null\n                } else {\n                  predicates[tc.predicate].commonType = intersection[0]\n                  predicates[tc.predicate].polymorphic = true\n                }\n              } else {\n                predicates[tc.predicate].commonType = shapeHierarchy.parents[newType][idx]\n                predicates[tc.predicate].polymorphic = true\n              }\n            }\n          }\n        })\n      }\n    })\n    return predicates\n  },\n\n  /** @@TODO tests\n   *\n   */\n  simpleTripleConstraints: function (shape) {\n    if (!('expression' in shape)) {\n      return []\n    }\n    if (shape.expression.type === 'TripleConstraint') {\n      return [ shape.expression ]\n    }\n    if (shape.expression.type === 'EachOf' &&\n        !(shape.expression.expressions.find(\n          expr => expr.type !== 'TripleConstraint'\n        ))) {\n          return shape.expression.expressions\n        }\n    throw Error('can\\'t (yet) express ' + JSON.stringify(shape))\n  },\n\n  skipDecl: function (shapeExpr) {\n    return shapeExpr.type === 'ShapeDecl' ? shapeExpr.shapeExpr : shapeExpr\n  },\n\n  getValueType: function (valueExpr) {\n    if (typeof valueExpr === 'string') { return valueExpr }\n    if (valueExpr.reference) { return valueExpr.reference }\n    if (valueExpr.nodeKind === 'iri') { return OWL.Thing } // !! push this test to callers\n    if (valueExpr.datatype) { return valueExpr.datatype }\n    // if (valueExpr.extends && valueExpr.extends.length === 1) { return valueExpr.extends[0] }\n    return valueExpr // throw Error('no value type for ' + JSON.stringify(valueExpr))\n  },\n\n  /** getDependencies: find which shappes depend on other shapes by inheritance\n   * or inclusion.\n   * TODO: rewrite in terms of Visitor.\n   */\n  getDependencies: function (schema, ret) {\n    ret = ret || this.BiDiClosure();\n    (schema.shapes || []).forEach(function (shape) {\n      function _walkShapeExpression (shapeExpr, negated) {\n        if (typeof shapeExpr === \"string\") { // ShapeRef\n          ret.add(shape.id, shapeExpr);\n        } else if (shapeExpr.type === \"ShapeOr\" || shapeExpr.type === \"ShapeAnd\") {\n          shapeExpr.shapeExprs.forEach(function (expr) {\n            _walkShapeExpression(expr, negated);\n          });\n        } else if (shapeExpr.type === \"ShapeNot\") {\n          _walkShapeExpression(shapeExpr.shapeExpr, negated ^ 1); // !!! test negation\n        } else if (shapeExpr.type === \"Shape\") {\n          _walkShape(shapeExpr, negated);\n        } else if (shapeExpr.type === \"NodeConstraint\") {\n          // no impact on dependencies\n        } else if (shapeExpr.type === \"ShapeExternal\") {\n        } else\n          throw Error(\"expected Shape{And,Or,Ref,External} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n      }\n      \n      function _walkShape (shape, negated) {\n        function _walkTripleExpression (tripleExpr, negated) {\n          function _exprGroup (exprs, negated) {\n            exprs.forEach(function (nested) {\n              _walkTripleExpression(nested, negated) // ?? negation allowed?\n            });\n          }\n\n          function _walkTripleConstraint (tc, negated) {\n            if (tc.valueExpr)\n              _walkShapeExpression(tc.valueExpr, negated);\n            if (negated && ret.inCycle.indexOf(shape.id) !== -1) // illDefined/negatedRefCycle.err\n              throw Error(\"Structural error: \" + shape.id + \" appears in negated cycle\");\n          }\n\n          if (typeof tripleExpr === \"string\") { // Inclusion\n            ret.add(shape.id, tripleExpr);\n          } else {\n            if (\"id\" in tripleExpr)\n              ret.addIn(tripleExpr.id, shape.id)\n            if (tripleExpr.type === \"TripleConstraint\") {\n              _walkTripleConstraint(tripleExpr, negated);\n            } else if (tripleExpr.type === \"OneOf\" || tripleExpr.type === \"EachOf\") {\n              _exprGroup(tripleExpr.expressions);\n            } else {\n              throw Error(\"expected {TripleConstraint,OneOf,EachOf,Inclusion} in \" + tripleExpr);\n            }\n          }\n        }\n\n        if (shape.inherit && shape.inherit.length > 0)\n          shape.inherit.forEach(function (i) {\n            ret.add(shape.id, i);\n          });\n        if (shape.expression)\n          _walkTripleExpression(shape.expression, negated);\n      }\n      _walkShapeExpression(shape, 0); // 0 means false for bitwise XOR\n    });\n    return ret;\n  },\n\n  /** partition: create subset of a schema with only desired shapes and\n   * their dependencies.\n   *\n   * @schema: input schema\n   * @partition: shape name or array of desired shape names\n   * @deps: (optional) dependency tree from getDependencies.\n   *        map(shapeLabel -> [shapeLabel])\n   */\n  partition: function (schema, includes, deps, cantFind) {\n    const inputIndex = schema._index || this.index(schema)\n    const outputIndex = { shapeExprs: new Map(), tripleExprs: new Map() };\n    includes = includes instanceof Array ? includes : [includes];\n\n    // build dependency tree if not passed one\n    deps = deps || this.getDependencies(schema);\n    cantFind = cantFind || function (what, why) {\n      throw new Error(\"Error: can't find shape \" +\n                      (why ?\n                       why + \" dependency \" + what :\n                       what));\n    };\n    var partition = {};\n    for (var k in schema)\n      partition[k] = k === \"shapes\" ? [] : schema[k];\n    includes.forEach(function (i) {\n      if (i in outputIndex.shapeExprs) {\n        // already got it.\n      } else if (i in inputIndex.shapeExprs) {\n        const adding = inputIndex.shapeExprs[i];\n        partition.shapes.push(adding);\n        outputIndex.shapeExprs[adding.id] = adding;\n        if (i in deps.needs)\n          deps.needs[i].forEach(function (n) {\n            // Turn any needed TE into an SE.\n            if (n in deps.foundIn)\n              n = deps.foundIn[n];\n\n            if (n in outputIndex.shapeExprs) {\n            } else if (n in inputIndex.shapeExprs) {\n              const needed = inputIndex.shapeExprs[n];\n              partition.shapes.push(needed);\n              outputIndex.shapeExprs[needed.id] = needed;\n            } else\n              cantFind(n, i);\n          });\n      } else {\n        cantFind(i, \"supplied\");\n      }\n    });\n    return partition;\n  },\n\n\n  /** @@TODO flatten: return copy of input schema with all shape and value class\n   * references substituted by a copy of their referent.\n   *\n   * @schema: input schema\n   */\n  flatten: function (schema, deps, cantFind) {\n    var v = this.Visitor();\n    return v.visitSchema(schema);\n  },\n\n  // @@ put predicateUsage here\n\n  emptySchema: function () {\n    return {\n      type: \"Schema\"\n    };\n  },\n  merge: function (left, right, overwrite, inPlace) {\n    var ret = inPlace ? left : this.emptySchema();\n\n    function mergeArray (attr) {\n      Object.keys(left[attr] || {}).forEach(function (key) {\n        if (!(attr in ret))\n          ret[attr] = {};\n        ret[attr][key] = left[attr][key];\n      });\n      Object.keys(right[attr] || {}).forEach(function (key) {\n        if (!(attr  in left) || !(key in left[attr]) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = {};\n          ret[attr][key] = right[attr][key];\n        }\n      });\n    }\n\n    function mergeMap (attr) {\n      (left[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr in ret))\n          ret[attr] = new Map();\n        ret[attr].set(key, left[attr].get(key));\n      });\n      (right[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr  in left) || !(left[attr].has(key)) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = new Map();\n          ret[attr].set(key, right[attr].get(key));\n        }\n      });\n    }\n\n    // base\n    if (\"_base\" in left)\n      ret._base = left._base;\n    if (\"_base\" in right)\n      if (!(\"_base\" in left) || overwrite)\n        ret._base = right._base;\n\n    mergeArray(\"_prefixes\");\n\n    mergeMap(\"_sourceMap\");\n\n    if (\"imports\" in right)\n      if (!(\"imports\" in left) || overwrite)\n        ret.imports = right.imports;\n\n    // startActs\n    if (\"startActs\" in left)\n      ret.startActs = left.startActs;\n    if (\"startActs\" in right)\n      if (!(\"startActs\" in left) || overwrite)\n        ret.startActs = right.startActs;\n\n    // start\n    if (\"start\" in left)\n      ret.start = left.start;\n    if (\"start\" in right)\n      if (!(\"start\" in left) || overwrite)\n        ret.start = right.start;\n\n    let lindex = left._index || this.index(left);\n\n    // shapes\n    if (!inPlace)\n      (left.shapes || []).forEach(function (lshape) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(lshape);\n      });\n    (right.shapes || []).forEach(function (rshape) {\n      if (!(\"shapes\"  in left) || !(rshape.id in lindex.shapeExprs) || overwrite) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(rshape)\n      }\n    });\n\n    if (left._index || right._index)\n      ret._index = this.index(ret); // inefficient; could build above\n\n    return ret;\n  },\n\n  absolutizeResults: function (parsed, base) {\n    // !! duplicate of Validation-test.js:84: var referenceResult = parseJSONFile(resultsFile...)\n    function mapFunction (k, obj) {\n      // resolve relative URLs in results file\n      if ([\"shape\", \"reference\", \"node\", \"subject\", \"predicate\", \"object\"].indexOf(k) !== -1 &&\n          ShExTerm.isIRI(obj[k])) {\n        obj[k] = ShExTerm.resolveRelativeIRI(base, obj[k]);\n      }}\n\n    function resolveRelativeURLs (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (typeof obj[k] === \"object\") {\n          resolveRelativeURLs(obj[k]);\n        }\n        if (mapFunction) {\n          mapFunction(k, obj);\n        }\n      });\n    }\n    resolveRelativeURLs(parsed);\n    return parsed;\n  },\n\n  getProofGraph: function (res, db, dataFactory) {\n    function _dive1 (solns) {\n      if (solns.type === \"NodeConstraintTest\") {\n      } else if (solns.type === \"SolutionList\" ||\n          solns.type === \"ShapeAndResults\") {\n        solns.solutions.forEach(s => {\n          if (s.solution) // no .solution for <S> {}\n            _dive1(s.solution);\n        });\n      } else if (solns.type === \"ShapeOrResults\") {\n        _dive1(solns.solution);\n      } else if (solns.type === \"ShapeTest\") {\n        if (\"solution\" in solns)\n          _dive1(solns.solution);\n      } else if (solns.type === \"OneOfSolutions\" ||\n                 solns.type === \"EachOfSolutions\") {\n        solns.solutions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"OneOfSolution\" ||\n                 solns.type === \"EachOfSolution\") {\n        solns.expressions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"TripleConstraintSolutions\") {\n        solns.solutions.map(s => {\n          if (s.type !== \"TestedTriple\")\n            throw Error(\"unexpected result type: \" + s.type);\n          var s2 = s;\n          if (typeof s2.object === \"object\")\n            s2.object = \"\\\"\" + s2.object.value.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\"\n            + (s2.object.language ? (\"@\" + s2.object.language) : \n               s2.object.type ? (\"^^\" + s2.object.type) :\n               \"\");\n          db.addQuad(ShExTerm.externalTriple(s2, dataFactory))\n          if (\"referenced\" in s) {\n            _dive1(s.referenced);\n          }\n        });\n      } else {\n        throw Error(\"unexpected expr type \"+solns.type+\" in \" + JSON.stringify(solns));\n      }\n    }\n    _dive1(res);\n    return db;\n  },\n\n  validateSchema: function (schema) { // obselete, but may need other validations in the future.\n    var _ShExUtil = this;\n    var visitor = this.Visitor();\n    var currentLabel = currentExtra = null;\n    var currentNegated = false;\n    var dependsOn = { };\n    var inTE = false;\n    var oldVisitShape = visitor.visitShape;\n    var negativeDeps = Hierarchy.create();\n    var positiveDeps = Hierarchy.create();\n    let index = schema.index || this.index(schema);\n\n    visitor.visitShape = function (shape, label) {\n      var lastExtra = currentExtra;\n      currentExtra = shape.extra;\n      var ret = oldVisitShape.call(visitor, shape, label);\n      currentExtra = lastExtra;\n      return ret;\n    }\n\n    var oldVisitShapeNot = visitor.visitShapeNot;\n    visitor.visitShapeNot = function (shapeNot, label) {\n      var lastNegated = currentNegated;\n      currentNegated ^= true;\n      var ret = oldVisitShapeNot.call(visitor, shapeNot, label);\n      currentNegated = lastNegated;\n      return ret;\n    }\n\n    var oldVisitTripleConstraint = visitor.visitTripleConstraint;\n    visitor.visitTripleConstraint = function (expr) {\n      var lastNegated = currentNegated;\n      if (currentExtra && currentExtra.indexOf(expr.predicate) !== -1)\n        currentNegated ^= true;\n      inTE = true;\n      var ret = oldVisitTripleConstraint.call(visitor, expr);\n      inTE = false;\n      currentNegated = lastNegated;\n      return ret;\n    };\n\n    var oldVisitShapeRef = visitor.visitShapeRef;\n    visitor.visitShapeRef = function (shapeRef) {\n      if (!(shapeRef in index.shapeExprs))\n        throw firstError(Error(\"Structural error: reference to \" + JSON.stringify(shapeRef) + \" not found in schema shape expressions:\\n\" + dumpKeys(index.shapeExprs) + \".\"), shapeRef);\n      if (!inTE && shapeRef === currentLabel)\n        throw firstError(Error(\"Structural error: circular reference to \" + currentLabel + \".\"), shapeRef);\n      (currentNegated ? negativeDeps : positiveDeps).add(currentLabel, shapeRef)\n      return oldVisitShapeRef.call(visitor, shapeRef);\n    }\n\n    var oldVisitInclusion = visitor.visitInclusion;\n    visitor.visitInclusion = function (inclusion) {\n      var refd;\n      if (!(refd = index.tripleExprs[inclusion]))\n        throw firstError(Error(\"Structural error: included shape \" + inclusion + \" not found in schema triple expressions:\\n\" + dumpKeys(index.tripleExprs) + \".\"), inclusion);\n      // if (refd.type !== \"Shape\")\n      //   throw Error(\"Structural error: \" + inclusion + \" is not a simple shape.\");\n      return oldVisitInclusion.call(visitor, inclusion);\n    };\n\n    (schema.shapes || []).forEach(function (shape) {\n      currentLabel = shape.id;\n      visitor.visitShapeExpr(shape, shape.id);\n    });\n    let circs = Object.keys(negativeDeps.children).filter(\n      k => negativeDeps.children[k].filter(\n        k2 => k2 in negativeDeps.children && negativeDeps.children[k2].indexOf(k) !== -1\n          || k2 in positiveDeps.children && positiveDeps.children[k2].indexOf(k) !== -1\n      ).length > 0\n    );\n    if (circs.length)\n      throw firstError(Error(\"Structural error: circular negative dependencies on \" + circs.join(',') + \".\"), circs[0]);\n\n    function dumpKeys (obj) {\n      return obj ? Object.keys(obj).map(\n        u => u.substr(0, 2) === '_:' ? u : '<' + u + '>'\n      ).join(\"\\n        \") : '- none defined -'\n    }\n\n    function firstError (e, obj) {\n      if (\"_sourceMap\" in schema)\n        e.location = (schema._sourceMap.get(obj) || [undefined])[0];\n      return e;\n    }\n  },\n\n  /** isWellDefined: assert that schema is well-defined.\n   *\n   * @schema: input schema\n   * @@TODO\n   */\n  isWellDefined: function (schema) {\n    this.validateSchema(schema);\n    // var deps = this.getDependencies(schema);\n    return schema;\n  },\n\n  walkVal: function (val, cb) {\n    var _ShExUtil = this;\n    if (val.type === \"NodeConstraintTest\") {\n      return null;\n    } else if (val.type === \"ShapeTest\") {\n      return \"solution\" in val ? _ShExUtil.walkVal(val.solution, cb) : null;\n    } else if (val.type === \"ShapeOrResults\") {\n      return _ShExUtil.walkVal(val.solution || val.solutions, cb);\n    } else if (val.type === \"ShapeAndResults\") {\n      return val.solutions.reduce((ret, exp) => {\n        var n = _ShExUtil.walkVal(exp, cb);\n        if (n)\n          Object.keys(n).forEach(k => {\n            if (k in ret)\n              ret[k] = ret[k].concat(n[k]);\n            else\n              ret[k] = n[k];\n          })\n        return ret;\n      }, {});\n    } else if (val.type === \"EachOfSolutions\" || val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        sln.expressions.forEach(exp => {\n          var n = _ShExUtil.walkVal(exp, cb);\n          if (n)\n            Object.keys(n).forEach(k => {\n              if (k in ret)\n                ret[k] = ret[k].concat(n[k]);\n              else\n                ret[k] = n[k];\n            })\n        });\n        return ret;\n      }, {});\n    } else if (val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        Object.assign(ret, _ShExUtil.walkVal(sln, cb));\n        return ret;\n      }, {});\n    } else if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        var ret = {};\n        var vals = [];\n        ret[val.predicate] = vals;\n        val.solutions.forEach(sln => {\n          var toAdd = [];\n          if (chaseList(sln.referenced, toAdd)) {\n            vals = vals.concat(toAdd);\n          } else {\n            var newElt = cb(sln);\n            if (\"referenced\" in sln) {\n              var t = _ShExUtil.walkVal(sln.referenced, cb);\n              if (t)\n                newElt.nested = t;\n            }\n            vals.push(newElt);\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = cb(member);\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.walkVal(member.referenced, cb);\n                if (t)\n                  newElt.nested = t;\n              }\n              vals.push(newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced.type === \"ShapeOrResults\" // heuristic for `nil  OR @<list>` idiom\n                          ? rest.referenced.solution\n                          : rest.referenced);\n            }\n          }\n        });\n        return vals.length ? ret : null;\n      } else {\n        return null;\n      }\n    } else if (val.type === \"Recursion\") {\n      return null;\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  /**\n   * Convert val results to a property tree.\n   * @exports\n   * @returns {@code {p1:[{p2: v2},{p3: v3}]}}\n   */\n  valToValues: function (val) {\n    return this.walkVal (val, function (sln) {\n      return { ldterm: sln.object };\n    });\n  },\n\n  valToExtension: function (val, lookfor) {\n    var map = this.walkVal (val, function (sln) {\n      return { extensions: sln.extensions };\n    });\n    function extensions (obj) {\n      var list = [];\n      var crushed = {};\n      function crush (elt) {\n        if (crushed === null)\n          return elt;\n        if (elt.constructor === Array) {\n          crushed = null;\n          return elt;\n        }\n        for (k in elt) {\n          if (k in crushed) {\n            crushed = null\n            return elt;\n          }\n          crushed[k] = ldify(elt[k]);\n        }\n        return elt;\n      }\n      for (var k in obj) {\n        if (k === \"extensions\") {\n          if (obj[k])\n            list.push(crush(ldify(obj[k][lookfor])));\n        } else if (k === \"nested\") {\n          var nested = extensions(obj[k]);\n          if (nested.constructor === Array)\n            nested.forEach(crush);\n          else\n            crush(nested);\n          list = list.concat(nested);\n        } else {\n          list.push(crush(extensions(obj[k])));\n        }\n      }\n      return list.length === 1 ? list[0] :\n        crushed ? crushed :\n        list;\n    }\n    return extensions(map);\n  },\n\n  valuesToSchema: function (values) {\n    // console.log(JSON.stringify(values, null, \"  \"));\n    var v = values;\n    var t = values[RDF.type][0].ldterm;\n    if (t === SX.Schema) {\n      /* Schema { \"@context\":\"http://www.w3.org/ns/shex.jsonld\"\n       *           startActs:[SemAct+]? start:(shapeExpr|labeledShapeExpr)?\n       *           shapes:[labeledShapeExpr+]? }\n       */\n      var ret = {\n        \"@context\": \"http://www.w3.org/ns/shex.jsonld\",\n        type: \"Schema\"\n      }\n      if (SX.startActs in v)\n        ret.startActs = v[SX.startActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      if (SX.imports in v)\n        ret.imports = v[SX.imports].map(e => {\n          return e.ldterm;\n        });\n      if (values[SX.start])\n        ret.start = extend({id: values[SX.start][0].ldterm}, shapeExpr(values[SX.start][0].nested));\n      var shapes = values[SX.shapes];\n      if (shapes) {\n        ret.shapes = shapes.map(v => {\n          return extend({id: v.ldterm}, shapeExpr(v.nested));\n        });\n      }\n      // console.log(ret);\n      return ret;\n    } else {\n      throw Error(\"unknown schema type in \" + JSON.stringify(values));\n    }\n    function findType (v, elts, f) {\n      var t = v[RDF.type][0].ldterm.substr(SX._namespace.length);\n      var elt = elts[t];\n      if (!elt)\n        return Missed;\n      if (elt.nary) {\n        var ret = {\n          type: t,\n        };\n        ret[elt.prop] = v[SX[elt.prop]].map(e => {\n          return valueOf(e);\n        });\n        return ret;\n      } else {\n        var ret = {\n          type: t\n        };\n        if (elt.prop) {\n          ret[elt.prop] = valueOf(v[SX[elt.prop]][0]);\n        }\n        return ret;\n      }\n\n      function valueOf (x) {\n        return elt.expr && \"nested\" in x ? extend({ id: x.ldterm, }, f(x.nested)) : x.ldterm;\n      }\n    }\n    function shapeExpr (v) {\n      // shapeExpr = ShapeOr | ShapeAnd | ShapeNot | NodeConstraint | Shape | ShapeRef | ShapeExternal;\n      var elts = { \"ShapeAnd\"     : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeOr\"      : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeNot\"     : { nary: false, expr: true , prop: \"shapeExpr\"  },\n                   \"ShapeRef\"     : { nary: false, expr: false, prop: \"reference\"  },\n                   \"ShapeExternal\": { nary: false, expr: false, prop: null         } };\n      var ret = findType(v, elts, shapeExpr);\n      if (ret !== Missed)\n        return ret;\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.Shape) {\n        var ret = { type: \"Shape\" };\n        [\"closed\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.extra in v)\n          ret.extra = v[SX.extra].map(e => { return e.ldterm; });\n        if (SX.expression in v) {\n          ret.expression =\n            \"nested\" in v[SX.expression][0] ?\n            extend({id: v[SX.expression][0].ldterm}, tripleExpr(v[SX.expression][0].nested)) :\n            v[SX.expression][0].ldterm;\n        }\n        if (SX.annotation in v)\n          ret.annotations = v[SX.annotation].map(e => {\n            return {\n              type: \"Annotation\",\n              predicate: e.nested[SX.predicate][0].ldterm,\n              object: e.nested[SX.object][0].ldterm\n            };\n          });\n        if (SX.semActs in v)\n          ret.semActs = v[SX.semActs].map(e => {\n            var ret = {\n              type: \"SemAct\",\n              name: e.nested[SX.name][0].ldterm\n            };\n            if (SX.code in e.nested)\n              ret.code = e.nested[SX.code][0].ldterm.value;\n            return ret;\n          });\n        return ret;\n      } else if (t === SX.NodeConstraint) {\n        var ret = { type: \"NodeConstraint\" };\n        if (SX.values in v)\n          ret.values = v[SX.values].map(v1 => { return objectValue(v1); });\n        if (SX.nodeKind in v)\n          ret.nodeKind = v[SX.nodeKind][0].ldterm.substr(SX._namespace.length);\n        [\"length\", \"minlength\", \"maxlength\", \"mininclusive\", \"maxinclusive\", \"minexclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = parseFloat(v[SX[a]][0].ldterm.value);\n        });\n        if (SX.pattern in v)\n          ret.pattern = v[SX.pattern][0].ldterm.value;\n        if (SX.flags in v)\n          ret.flags = v[SX.flags][0].ldterm.value;\n        if (SX.datatype in v)\n          ret.datatype = v[SX.datatype][0].ldterm;\n        return ret;\n      } else {\n        throw Error(\"unknown shapeExpr type in \" + JSON.stringify(v));\n      }\n\n    }\n\n    function objectValue (v, expectString) {\n      if (\"nested\" in v) {\n        var t = v.nested[RDF.type][0].ldterm;\n        if ([SX.IriStem, SX.LiteralStem, SX.LanguageStem].indexOf(t) !== -1) {\n          var ldterm = v.nested[SX.stem][0].ldterm.value;\n          return {\n            type: t.substr(SX._namespace.length),\n            stem: ldterm\n          };\n        } else if ([SX.Language].indexOf(t) !== -1) {\n          return {\n            type: \"Language\",\n            languageTag: v.nested[SX.languageTag][0].ldterm.value\n          };\n        } else if ([SX.IriStemRange, SX.LiteralStemRange, SX.LanguageStemRange].indexOf(t) !== -1) {\n          var st = v.nested[SX.stem][0];\n          var stem = st;\n          if (typeof st === \"object\") {\n            if (typeof st.ldterm === \"object\") {\n              stem = st.ldterm;\n            } else if (st.ldterm.startsWith(\"_:\")) {\n              stem = { type: \"Wildcard\" };\n            }\n          }\n          var ret = {\n            type: t.substr(SX._namespace.length),\n            stem: stem.type !== \"Wildcard\" ? stem.value : stem\n          };\n          if (SX.exclusion in v.nested) {\n            // IriStemRange:\n            // * [{\"ldterm\":\"http://a.example/v1\"},{\"ldterm\":\"http://a.example/v3\"}] <-- no value\n            // * [{\"ldterm\":\"_:b836\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v1\"}}]}},\n            //    {\"ldterm\":\"_:b838\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v3\"}}]}}]\n\n            // LiteralStemRange:\n            // * [{\"ldterm\":{\"value\":\"v1\"}},{\"ldterm\":{\"value\":\"v3\"}}]\n            // * [{\"ldterm\":\"_:b866\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v1\"}}]}},\n            //    {\"ldterm\":\"_:b868\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v3\"}}]}}]\n\n            // LanguageStemRange:\n            // * [{\"ldterm\":{\"value\":\"fr-be\"}},{\"ldterm\":{\"value\":\"fr-ch\"}}]\n            // * [{\"ldterm\":\"_:b851\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-be\"}}]}},\n            //    {\"ldterm\":\"_:b853\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-ch\"}}]}}]\n            ret.exclusions = v.nested[SX.exclusion].map(v1 => {\n              return objectValue(v1, t !== SX.IriStemRange);\n            });\n          }\n          return ret;\n        } else {\n          throw Error(\"unknown objectValue type in \" + JSON.stringify(v));\n        }\n      } else {\n        return expectString ? v.ldterm.value : v.ldterm;\n      }\n    }\n\n    function tripleExpr (v) {\n      // tripleExpr = EachOf | OneOf | TripleConstraint | Inclusion ;\n      var elts = { \"EachOf\"   : { nary: true , expr: true , prop: \"expressions\" },\n                   \"OneOf\"    : { nary: true , expr: true , prop: \"expressions\" },\n                   \"Inclusion\": { nary: false, expr: false, prop: \"include\"     } };\n      var ret = findType(v, elts, tripleExpr);\n      if (ret !== Missed) {\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      }\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.TripleConstraint) {\n        var ret = {\n          type: \"TripleConstraint\",\n          predicate: v[SX.predicate][0].ldterm\n        };\n        [\"inverse\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.valueExpr in v)\n          ret.valueExpr = extend({id: v[SX.valueExpr][0].ldterm}, \"nested\" in v[SX.valueExpr][0] ? shapeExpr(v[SX.valueExpr][0].nested) : {});\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      } else {\n        throw Error(\"unknown tripleExpr type in \" + JSON.stringify(v));\n      }\n    }\n    function minMaxAnnotSemActs (v, ret) {\n      if (SX.min in v)\n        ret.min = parseInt(v[SX.min][0].ldterm.value);\n      if (SX.max in v) {\n        ret.max = parseInt(v[SX.max][0].ldterm.value);\n        if (isNaN(ret.max))\n          ret.max = UNBOUNDED;\n      }\n      if (SX.annotation in v)\n        ret.annotations = v[SX.annotation].map(e => {\n          return {\n            type: \"Annotation\",\n            predicate: e.nested[SX.predicate][0].ldterm,\n            object: e.nested[SX.object][0].ldterm\n          };\n        });\n      if (SX.semActs in v)\n        ret.semActs = v[SX.semActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      return ret;\n    }\n  },\n\n  valToSimple: function (val) {\n    var _ShExUtil = this;\n    function _join (list) {\n      return list.reduce((ret, elt) => {\n        Object.keys(elt).forEach(k => {\n          if (k in ret) {\n            ret[k] = Array.from(new Set(ret[k].concat(elt[k])));\n          } else {\n            ret[k] = elt[k];\n          }\n        });\n        return ret;\n      }, {});\n    }\n    if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        return val.solutions.reduce((ret, sln) => {\n          if (!(\"referenced\" in sln))\n            return {};\n          var toAdd = {};\n          if (chaseList(sln.referenced, toAdd)) {\n            return _join(ret, toAdd);\n          } else {\n            return _join(ret, _ShExUtil.valToSimple(sln.referenced));\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = { ldterm: member.object };\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.valToSimple(member.referenced);\n                if (t)\n                  newElt.nested = t;\n              }\n              toAdd = _join(toAdd, newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced.type === \"ShapeOrResults\" // heuristic for `nil  OR @<list>` idiom\n                          ? rest.referenced.solution\n                          : rest.referenced);\n            }\n          }\n        }, []);\n      } else {\n        return [];\n      }\n    } else if ([\"TripleConstraintSolutions\"].indexOf(val.type) !== -1) {\n      return {  };\n    } else if (val.type === \"NodeConstraintTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return thisNode;\n    } else if (val.type === \"ShapeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return \"solution\" in val ? _join([thisNode].concat(_ShExUtil.valToSimple(val.solution))) : thisNode;\n    } else if (val.type === \"Recursion\") {\n      return {  };\n    } else if (\"solutions\" in val) {\n      // [\"SolutionList\", \"EachOfSolutions\", \"OneOfSolutions\", \"ShapeAndResults\", \"ShapeOrResults\"].indexOf(val.type) !== -1\n      return _join(val.solutions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else if (\"expressions\" in val) {\n      return _join(val.expressions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  simpleToShapeMap: function (x) {\n    return Object.keys(x).reduce((ret, k) => {\n      x[k].forEach(s => {\n        ret.push({node: k, shape: s });\n      });\n      return ret;\n    }, []);\n  },\n\n  absolutizeShapeMap: function (parsed, base) {\n    return parsed.map(elt => {\n      return Object.assign(elt, {\n        node: ShExTerm.resolveRelativeIRI(base, elt.node),\n        shape: ShExTerm.resolveRelativeIRI(base, elt.shape)\n      });\n    });\n  },\n\n  errsToSimple: function (val, node, shape) {\n    var _ShExUtil = this;\n    if (val.type === \"FailureList\") {\n      return val.errors.reduce((ret, e) => {\n        return ret.concat(_ShExUtil.errsToSimple(e));\n      }, []);\n    } else if (val.type === \"Failure\") {\n      return [\"validating \" + val.node + \" as \" + val.shape + \":\"].concat(errorList(val.errors).reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length > 0 ? ret.concat([\"  OR\"]).concat(nested) : nested.map(s => \"  \" + s);\n      }, []));\n    } else if (val.type === \"TypeMismatch\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"validating \" + n3ify(val.triple.object) + \":\"].concat(nested);\n    } else if (val.type === \"ShapeAndFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeOrFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat(\" OR \" + (typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)));\n          }, []) :\n          \" OR \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeNotFailure\") {\n      return [\"Node \" + val.errors.node + \" expected to NOT pass \" + val.errors.shape];\n    } else if (val.type === \"ExcessTripleViolation\") {\n      return [\"validating \" + n3ify(val.triple.object) + \": exceeds cardinality\"];\n    } else if (val.type === \"ClosedShapeViolation\") {\n      return [\"ClosedShapeError: unexpected: {\"].concat(\n        val.unexpectedTriples.map(t => {\n          return \"  \" + t.subject + \" \" + t.predicate + \" \" + n3ify(t.object) + \" .\"\n        })\n      ).concat([\"}\"]);\n    } else if (val.type === \"NodeConstraintViolation\") {\n      var w = require(\"@shexjs/writer\")();\n      w._write(w._writeNodeConstraint(val.shapeExpr).join(\"\"));\n      var txt;\n      w.end((err, res) => {\n        txt = res;\n      });\n      return [\"NodeConstraintError: expected to match \" + txt];\n    } else if (val.type === \"MissingProperty\") {\n      return [\"Missing property: \" + val.property];\n    } else if (val.type === \"NegatedProperty\") {\n      return [\"Unexpected property: \" + val.property];\n    } else if (val.constructor === Array) {debugger;\n      return val.reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length ? ret.concat([\"AND\"]).concat(nested) : nested;\n      }, []);\n    } else if (val.type === \"SemActFailure\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"rejected by semantic action:\"].concat(nested);\n    } else if (val.type === \"SemActViolation\") {\n      return [val.message];\n    } else if (val.type === \"BooleanSemActFailure\") {\n      return [\"Failed evaluating \" + val.code + \" on context \" + JSON.stringify(val.ctx)];\n    } else {\n      debugger; // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    function errorList (errors) {\n      return errors.reduce(function (acc, e) {\n        var attrs = Object.keys(e);\n        return acc.concat(\n          (attrs.length === 1 && attrs[0] === \"errors\")\n            ? errorList(e.errors)\n            : e);\n      }, []);\n    }\n  },\n\n  resolveRelativeIRI: ShExTerm.resolveRelativeIRI,\n\n  resolvePrefixedIRI: function (prefixedIri, prefixes) {\n    var colon = prefixedIri.indexOf(\":\");\n    if (colon === -1)\n      return null;\n    var prefix = prefixes[prefixedIri.substr(0, colon)];\n    return prefix === undefined ? null : prefix + prefixedIri.substr(colon+1);\n  },\n\n  parsePassedNode: function (passedValue, meta, deflt, known, reportUnknown) {\n    if (passedValue === undefined || passedValue.length === 0)\n      return known && known(meta.base) ? meta.base : deflt ? deflt() : this.NotSupplied;\n    if (passedValue[0] === \"_\" && passedValue[1] === \":\")\n      return passedValue;\n    if (passedValue[0] === \"\\\"\") {\n      var m = passedValue.match(/^\"((?:[^\"\\\\]|\\\\\")*)\"(?:@(.+)|\\^\\^(?:<(.*)>|([^:]*):(.*)))?$/);\n      if (!m)\n        throw Error(\"malformed literal: \" + passedValue);\n      var lex = m[1], lang = m[2], rel = m[3], pre = m[4], local = m[5];\n      // Turn the literal into an N3.js atom.\n      var quoted = \"\\\"\"+lex+\"\\\"\";\n      if (lang !== undefined)\n        return quoted + \"@\" + lang;\n      if (pre !== undefined) {\n        if (!(pre in meta.prefixes))\n          throw Error(\"error parsing node \"+passedValue+\" no prefix for \\\"\" + pre + \"\\\"\");\n        return quoted + \"^^\" + meta.prefixes[pre] + local;\n      }\n      if (rel !== undefined)\n        return quoted + \"^^\" + ShExTerm.resolveRelativeIRI(meta.base, rel);\n      return quoted;\n    }\n    if (!meta)\n      return known(passedValue) ? passedValue : this.UnknownIRI;\n    var relIRI = passedValue[0] === \"<\" && passedValue[passedValue.length-1] === \">\";\n    if (relIRI)\n      passedValue = passedValue.substr(1, passedValue.length-2);\n    var t = ShExTerm.resolveRelativeIRI(meta.base || \"\", passedValue); // fall back to base-less mode\n    if (known(t))\n      return t;\n    if (!relIRI) {\n      var t2 = this.resolvePrefixedIRI(passedValue, meta.prefixes);\n      if (t2 !== null && known(t2))\n        return t2;\n    }\n    return reportUnknown ? reportUnknown(t) : this.UnknownIRI;\n  },\n\n  executeQueryPromise: function (query, endpoint) {\n    var rows;\n\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    return fetch(queryURL, {\n      headers: {\n        'Accept': 'application/sparql-results+json'\n      }}).then(resp => resp.json()).then(t => {\n        var selects = t.head.vars;\n        return t.results.bindings.map(row => {\n          return selects.map(sel => {\n            var elt = row[sel];\n            switch (elt.type) {\n            case \"uri\": return elt.value;\n            case \"bnode\": return \"_:\" + elt.value;\n            case \"literal\":\n              var datatype = elt.datatype;\n              var lang = elt[\"xml:lang\"];\n              return \"\\\"\" + elt.value + \"\\\"\" + (\n                datatype ? \"^^\" + datatype :\n                  lang ? \"@\" + lang :\n                  \"\");\n            default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n            }\n            return row[sel];\n          })\n        });\n      })// .then(x => new Promise(resolve => setTimeout(() => resolve(x), 1000)));\n  },\n\n  executeQuery: function (query, endpoint) {\n    var rows, t, j;\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    if (require('sync-request')) {\n      var request = require('sync-request');\n      var res = request('GET', queryURL, {\n        headers: {\n          'Accept': 'application/sparql-results+json'\n        },\n      });\n      t = res.getBody().toString('utf-8');\n    } else {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", queryURL, false);\n    xhr.setRequestHeader('Accept', 'application/sparql-results+json');\n    xhr.send();\n    // var selectsBlock = query.match(/SELECT\\s*(.*?)\\s*{/)[1];\n    // var selects = selectsBlock.match(/\\?[^\\s?]+/g);\n    t = xhr.responseText;\n    }\n    var j = JSON.parse(t);\n    var selects = j.head.vars;\n    return j.results.bindings.map(row => {\n      return selects.map(sel => {\n        var elt = row[sel];\n        switch (elt.type) {\n        case \"uri\": return elt.value;\n        case \"bnode\": return \"_:\" + elt.value;\n        case \"literal\":\n          var datatype = elt.datatype;\n          var lang = elt[\"xml:lang\"];\n          return \"\\\"\" + elt.value + \"\\\"\" + (\n            lang ? \"@\" + lang :\n              datatype ? \"^^\" + datatype :\n              \"\");\n        default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n        }\n        return row[sel];\n      })\n    });\n\n/* TO ADD? XML results format parsed with jquery:\n        $(data).find(\"sparql > results > result\").\n          each((_, row) => {\n            rows.push($(row).find(\"binding > *:nth-child(1)\").\n              map((idx, elt) => {\n                elt = $(elt);\n                var text = elt.text();\n                switch (elt.prop(\"tagName\")) {\n                case \"uri\": return text;\n                case \"bnode\": return \"_:\" + text;\n                case \"literal\":\n                  var datatype = elt.attr(\"datatype\");\n                  var lang = elt.attr(\"xml:lang\");\n                  return \"\\\"\" + text + \"\\\"\" + (\n                    datatype ? \"^^\" + datatype :\n                    lang ? \"@\" + lang :\n                      \"\");\n                default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n                }\n              }).get());\n          });\n*/\n  },\n\n  makeN3DB: function (db, queryTracker) {\n\n    function getSubjects () { return db.getSubjects().map(ShExTerm.internalTerm); }\n    function getPredicates () { return db.getPredicates().map(ShExTerm.internalTerm); }\n    function getObjects () { return db.getObjects().map(ShExTerm.internalTerm); }\n    function getQuads () { return db.getQuads.apply(db, arguments).map(ShExTerm.internalTriple); }\n\n    function getNeighborhood (point, shapeLabel/*, shape */) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = db.getQuads(point, null, null, null).map(ShExTerm.internalTriple);\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = db.getQuads(null, null, point, null).map(ShExTerm.internalTriple);\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      // size: db.size,\n      getNeighborhood: getNeighborhood,\n      getSubjects: getSubjects,\n      getPredicates: getPredicates,\n      getObjects: getObjects,\n      getQuads: getQuads,\n      get size() { return db.size; },\n      // getQuads: function (s, p, o, graph, shapeLabel) {\n      //   // console.log(Error(s + p + o).stack)\n      //   if (queryTracker)\n      //     queryTracker.start(!!s, s ? s : o, shapeLabel);\n      //   var quads = db.getQuads(s, p, o, graph)\n      //   if (queryTracker)\n      //     queryTracker.end(quads, new Date() - startTime);\n      //   return quads;\n      // }\n    }\n  },\n  /** emulate N3Store().getQuads() with additional parm.\n   */\n  makeQueryDB: function (endpoint, queryTracker) {\n    var _ShExUtil = this;\n    // Need to inspect the schema to calculate the relevant neighborhood.\n    var schemaIndex = null\n\n    function getQuads(s, p, o, g) {\n      return mapQueryToTriples(\"SELECT \" + [\n        (s?\"\":\"?s\"), (p?\"\":\"?p\"), (o?\"\":\"?o\"),\n        \"{\",\n        (s?s:\"?s\"), (p?p:\"?s\"), (o?o:\"?s\"),\n        \"}\"].join(\" \"), s, o)\n    }\n\n    function mapQueryToTriples (query, s, o) {\n      var rows = _ShExUtil.executeQuery(query, endpoint);\n      var triples = rows.map(row =>  {\n        return s ? {\n          subject: s,\n          predicate: row[0],\n          object: row[1]\n        } : {\n          subject: row[0],\n          predicate: row[1],\n          object: o\n        };\n      });\n      return triples;\n    }\n\n    function getTripleConstraints (tripleExpr) {\n      var visitor = _ShExUtil.Visitor();\n      var ret = {\n        out: [],\n        inc: []\n      };\n      visitor.visitTripleConstraint = function (expr) {\n        ret[expr.inverse ? \"inc\" : \"out\"].push(expr);\n        return expr;\n      };\n\n      visitor.visitInclusion = function (inclusion) {\n        return visitor.visitExpression(schemaIndex.tripleExprs[inclusion]);\n      }\n\n      if (tripleExpr)\n        visitor.visitExpression(tripleExpr);\n      return ret;\n    }\n\n    function getNeighborhood (point, shapeLabel, shape) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      var tcs = getTripleConstraints(shape.expression);\n      var pz = tcs.out.map(t => t.predicate);\n      pz = pz.filter((p, idx) => pz.lastIndexOf(p) === idx);\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = (tcs.out.length > 0 || shape.closed)\n          ? mapQueryToTriples(\n            shape.closed\n              ? `SELECT ?p ?o { <${point}> ?p ?o }`\n              : \"SELECT ?p ?o {\\n\" +\n              pz.map(\n                p => `  {<${point}> <${p}> ?o BIND(<${p}> AS ?p)}`\n              ).join(\" UNION\\n\") +\n              \"\\n}\",\n            point, null\n          )\n          : [];\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = tcs.inc.length > 0\n          ? mapQueryToTriples(`SELECT ?s ?p { ?s ?p <${point}> }`, null, point)\n          : []\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return  {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      getNeighborhood: getNeighborhood,\n      getQuads: getQuads,\n      getSubjects: function () { return [\"!Query DB can't index subjects\"] },\n      getPredicates: function () { return [\"!Query DB can't index predicates\"] },\n      getObjects: function () { return [\"!Query DB can't index objects\"] },\n      get size() { return undefined; },\n      setSchema: function (schema) { schemaIndex = schema._index || _ShExUtil.index(schema) },\n    };\n  },\n\n  NotSupplied: \"-- not supplied --\", UnknownIRI: \"-- not found --\",\n\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  unescapeText: function (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  },\n\n};\n\nfunction n3ify (ldterm) {\n  if (typeof ldterm !== \"object\")\n    return ldterm;\n  var ret = \"\\\"\" + ldterm.value + \"\\\"\";\n  if (\"language\" in ldterm)\n    return ret + \"@\" + ldterm.language;\n  if (\"type\" in ldterm)\n    return ret + \"^^\" + ldterm.type;\n  return ret;\n}\n\n// Add the ShExUtil functions to the given object or its prototype\nfunction AddShExUtil(parent, toPrototype) {\n  for (var name in ShExUtil)\n    if (!toPrototype)\n      parent[name] = ShExUtil[name];\n    else\n      parent.prototype[name] = ApplyToThis(ShExUtil[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\nreturn AddShExUtil(AddShExUtil);\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExUtilCjsModule; // node environment\n"
        },
        {
          "id": 5,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/utils.js",
          "name": "../shex-util/node_modules/qs/lib/utils.js",
          "index": 18,
          "index2": 12,
          "size": 6636,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "issuerId": 29,
          "issuerName": "../shex-util/node_modules/qs/lib/stringify.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            },
            {
              "id": 29,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
              "name": "../shex-util/node_modules/qs/lib/stringify.js",
              "profile": {
                "factory": 7,
                "building": 7,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/formats.js",
              "module": "../shex-util/node_modules/qs/lib/formats.js",
              "moduleName": "../shex-util/node_modules/qs/lib/formats.js",
              "type": "cjs require",
              "userRequest": "./utils",
              "loc": "6:11-29"
            },
            {
              "moduleId": 29,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
              "module": "../shex-util/node_modules/qs/lib/stringify.js",
              "moduleName": "../shex-util/node_modules/qs/lib/stringify.js",
              "type": "cjs require",
              "userRequest": "./utils",
              "loc": "3:12-30"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/parse.js",
              "module": "../shex-util/node_modules/qs/lib/parse.js",
              "moduleName": "../shex-util/node_modules/qs/lib/parse.js",
              "type": "cjs require",
              "userRequest": "./utils",
              "loc": "3:12-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n"
        },
        {
          "id": 6,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "index": 30,
          "index2": 30,
          "size": 25347,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "45:16-36"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "16:16-36"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "6:16-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"
        },
        {
          "id": 7,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "index": 39,
          "index2": 37,
          "size": 19383,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "59:11-26"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "util/",
              "loc": "73:11-27"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "9:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"
        },
        {
          "id": 8,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "index": 42,
          "index2": 39,
          "size": 611,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "51:17-44"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "17:17-44"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "12:17-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"
        },
        {
          "id": 9,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapSymbols.js",
          "name": "../shape-map/lib/ShapeMapSymbols.js",
          "index": 2,
          "index2": 0,
          "size": 451,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 23,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 23,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 163,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapSymbols",
              "loc": "7:18-50"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapSymbols",
              "loc": "417:17-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * Status: Early implementation\n *\n * TODO:\n *   testing.\n */\n\nvar ShapeMapSymbols = (function () {\n  return {\n    focus: { term: \"FOCUS\" },\n    start: { term: \"START\" },\n    wildcard: { term: \"WILDCARD\" },\n  }\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapSymbols;\n"
        },
        {
          "id": 10,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/module.js",
          "name": "(webpack)/buildin/module.js",
          "index": 6,
          "index2": 2,
          "size": 497,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 35,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 35,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 10,
                "building": 166,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 36,
            "building": 59,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
        },
        {
          "id": 11,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-visitor/shex-visitor.js",
          "name": "../shex-visitor/shex-visitor.js",
          "index": 11,
          "index2": 9,
          "size": 13166,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "issuerId": 32,
          "issuerName": "../shex-validator/shex-validator.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 32,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "name": "../shex-validator/shex-validator.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 366,
            "building": 21,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "@shexjs/visitor",
              "loc": "5:16-42"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "@shexjs/visitor",
              "loc": "27:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\nfunction ShExVisitor () {\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\n  // function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n  var _ShExUtil = this;\n  function visitMap (map, val) {\n    var ret = {};\n    Object.keys(map).forEach(function (item) {\n      ret[item] = val(map[item]);\n    });\n    return ret;\n  }\n  var r = {\n    runtimeError: function (e) {\n      throw e;\n    },\n\n    visitSchema: function (schema) {\n      var ret = { type: \"Schema\" };\n      _expect(schema, \"type\", \"Schema\");\n      this._maybeSet(schema, ret, \"Schema\",\n                     [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                     [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\"]\n                    );\n      return ret;\n    },\n\n    visitPrefixes: function (prefixes) {\n      return prefixes === undefined ?\n        undefined :\n        visitMap(prefixes, function (val) {\n          return val;\n        });\n    },\n\n    visitIRI: function (i) {\n      return i;\n    },\n\n    visitImports: function (imports) {\n      var _Visitor = this;\n      return imports.map(function (imp) {\n        return _Visitor.visitIRI(imp);\n      });\n    },\n\n    visitStartActs: function (startActs) {\n      var _Visitor = this;\n      return startActs === undefined ?\n        undefined :\n        startActs.map(function (act) {\n          return _Visitor.visitSemAct(act);\n        });\n    },\n    visitSemActs: function (semActs) {\n      var _Visitor = this;\n      if (semActs === undefined)\n        return undefined;\n      var ret = []\n      Object.keys(semActs).forEach(function (label) {\n        ret.push(_Visitor.visitSemAct(semActs[label], label));\n      });\n      return ret;\n    },\n    visitSemAct: function (semAct, label) {\n      var ret = { type: \"SemAct\" };\n      _expect(semAct, \"type\", \"SemAct\");\n\n      this._maybeSet(semAct, ret, \"SemAct\",\n                     [\"name\", \"code\"]);\n      return ret;\n    },\n\n    visitShapes: function (shapes) {\n      var _Visitor = this;\n      if (shapes === undefined)\n        return undefined;\n      return shapes.map(\n        shapeExpr =>\n          _Visitor.visitShapeExpr(shapeExpr)\n      );\n    },\n\n    visitProductions999: function (productions) { // !! DELETE\n      var _Visitor = this;\n      if (productions === undefined)\n        return undefined;\n      var ret = {}\n      Object.keys(productions).forEach(function (label) {\n        ret[label] = _Visitor.visitExpression(productions[label], label);\n      });\n      return ret;\n    },\n\n    visitShapeExpr: function (expr, label) {\n      if (isShapeRef(expr))\n        return this.visitShapeRef(expr)\n      var r =\n          expr.type === \"Shape\" ? this.visitShape(expr, label) :\n          expr.type === \"NodeConstraint\" ? this.visitNodeConstraint(expr, label) :\n          expr.type === \"ShapeAnd\" ? this.visitShapeAnd(expr, label) :\n          expr.type === \"ShapeOr\" ? this.visitShapeOr(expr, label) :\n          expr.type === \"ShapeNot\" ? this.visitShapeNot(expr, label) :\n          expr.type === \"ShapeExternal\" ? this.visitShapeExternal(expr) :\n          null;// if (expr.type === \"ShapeRef\") r = 0; // console.warn(\"visitShapeExpr:\", r);\n      if (r === null)\n        throw Error(\"unexpected shapeExpr type: \" + expr.type);\n      else\n        return r;\n    },\n\n    // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n    _visitShapeGroup: function (expr, label) {\n      this._testUnknownAttributes(expr, [\"id\", \"shapeExprs\"], expr.type, this.visitShapeNot)\n      var _Visitor = this;\n      var r = { type: expr.type };\n      if (\"id\" in expr)\n        r.id = expr.id;\n      r.shapeExprs = expr.shapeExprs.map(function (nested) {\n        return _Visitor.visitShapeExpr(nested, label);\n      });\n      return r;\n    },\n\n    // _visitShapeNot: visit negated shape\n    visitShapeNot: function (expr, label) {\n      this._testUnknownAttributes(expr, [\"id\", \"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n      var r = { type: expr.type };\n      if (\"id\" in expr)\n        r.id = expr.id;\n      r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, label);\n      return r;\n    },\n\n    // ### `visitNodeConstraint` deep-copies the structure of a shape\n    visitShape: function (shape, label) {\n      var ret = { type: \"Shape\" };\n      _expect(shape, \"type\", \"Shape\");\n\n      this._maybeSet(shape, ret, \"Shape\",\n                     [ \"id\",\n                       // \"virtual\", \"inherit\", -- futureWork\n                       \"closed\",\n                       \"expression\", \"extra\", \"semActs\", \"annotations\"]);\n      return ret;\n    },\n\n    // ### `visitNodeConstraint` deep-copies the structure of a shape\n    visitNodeConstraint: function (shape, label) {\n      var ret = { type: \"NodeConstraint\" };\n      _expect(shape, \"type\", \"NodeConstraint\");\n\n      this._maybeSet(shape, ret, \"NodeConstraint\",\n                     [ \"id\",\n                       // \"virtual\", \"inherit\", -- futureWork\n                       \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                       \"reference\", \"minlength\", \"maxlength\",\n                       \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                       \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"]);\n      return ret;\n    },\n\n    visitShapeRef: function (reference) {\n      if (typeof reference !== \"string\") {\n        let ex = Exception(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n        console.warn(ex);\n        throw ex;\n      }\n      return reference;\n    },\n\n    visitShapeExternal: function (expr) {\n      this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n      return Object.assign(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n    },\n\n    // _visitGroup: visit a grouping expression (someOf or eachOf)\n    _visitGroup: function (expr, type) {\n      var _Visitor = this;\n      var r = Object.assign(\n        // pre-declare an id so it sorts to the top\n        \"id\" in expr ? { id: null } : { },\n        { type: expr.type }\n      );\n      r.expressions = expr.expressions.map(function (nested) {\n        return _Visitor.visitExpression(nested);\n      });\n      return this._maybeSet(expr, r, \"expr\",\n                            [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"]);\n    },\n\n    visitTripleConstraint: function (expr) {\n      return this._maybeSet(expr,\n                            Object.assign(\n                              // pre-declare an id so it sorts to the top\n                              \"id\" in expr ? { id: null } : { },\n                              { type: \"TripleConstraint\" }\n                            ),\n                            \"TripleConstraint\",\n                            [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                             \"min\", \"max\", \"annotations\", \"semActs\"])\n    },\n\n    visitExpression: function (expr) {\n      if (typeof expr === \"string\")\n        return this.visitInclusion(expr);\n      var r = expr.type === \"TripleConstraint\" ? this.visitTripleConstraint(expr) :\n          expr.type === \"OneOf\" ? this.visitOneOf(expr) :\n          expr.type === \"EachOf\" ? this.visitEachOf(expr) :\n          null;\n      if (r === null)\n        throw Error(\"unexpected expression type: \" + expr.type);\n      else\n        return r;\n    },\n\n    visitValues: function (values) {\n      var _Visitor = this;\n      return values.map(function (t) {\n        return isTerm(t) || t.type === \"Language\" ?\n          t :\n          _Visitor.visitStemRange(t);\n      });\n    },\n\n    visitStemRange: function (t) {\n      var _Visitor = this; // console.log(Error(t.type).stack);\n      // _expect(t, \"type\", \"IriStemRange\");\n      if (!(\"type\" in t))\n        _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n      var stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n      if (stemRangeTypes.indexOf(t.type) === -1)\n        _Visitor.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n      var stem;\n      if (isTerm(t)) {\n        _expect(t.stem, \"type\", \"Wildcard\");\n        stem = { type: t.type, stem: { type: \"Wildcard\" } };\n      } else {\n        stem = { type: t.type, stem: t.stem };\n      }\n      if (t.exclusions) {\n        stem.exclusions = t.exclusions.map(function (c) {\n          return _Visitor.visitExclusion(c);\n        });\n      }\n      return stem;\n    },\n\n    visitExclusion: function (c) {\n      if (!isTerm(c)) {\n        // _expect(c, \"type\", \"IriStem\");\n        if (!(\"type\" in c))\n          _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n        var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n        if (stemTypes.indexOf(c.type) === -1)\n          _Visitor.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n        return { type: c.type, stem: c.stem };\n      } else {\n        return c;\n      }\n    },\n\n    visitInclusion: function (inclusion) {\n      if (typeof inclusion !== \"string\") {\n        let ex = Exception(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n        console.warn(ex);\n        throw ex;\n      }\n      return inclusion;\n    },\n\n    _maybeSet: function (obj, ret, context, members, ignore) {\n      var _Visitor = this;\n      this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n      members.forEach(function (member) {\n        var methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n        if (member in obj) {\n          var f = _Visitor[methodName];\n          if (typeof f !== \"function\") {\n            throw Error(methodName + \" not found in Visitor\");\n          }\n          var t = f.call(_Visitor, obj[member]);\n          if (t !== undefined) {\n            ret[member] = t;\n          }\n        }\n      });\n      return ret;\n    },\n    _visitValue: function (v) {\n      return v;\n    },\n    _visitList: function (l) {\n      return l.slice();\n    },\n    _testUnknownAttributes: function (obj, expected, context, captureFrame) {\n      var unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n        return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n      }, []);\n      if (unknownMembers.length > 0) {\n        var e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                      unknownMembers.map(function (p) {\n                        return \"\\\"\" + p + \"\\\"\";\n                      }).join(\",\") +\n                      \" in \" + context + \": \" + JSON.stringify(obj));\n        Error.captureStackTrace(e, captureFrame);\n        throw e;\n      }\n    }\n\n  };\n  r.visitBase = r.visitStart = r.visitVirtual = r.visitClosed = r[\"visit@context\"] = r._visitValue;\n  r.visitInherit = r.visitExtra = r.visitAnnotations = r._visitList;\n  r.visitInverse = r.visitPredicate = r._visitValue;\n  r.visitName = r.visitId = r.visitCode = r.visitMin = r.visitMax = r._visitValue;\n\n  r.visitType = r.visitNodeKind = r.visitDatatype = r.visitPattern = r.visitFlags = r.visitLength = r.visitMinlength = r.visitMaxlength = r.visitMininclusive = r.visitMinexclusive = r.visitMaxinclusive = r.visitMaxexclusive = r.visitTotaldigits = r.visitFractiondigits = r._visitValue;\n  r.visitOneOf = r.visitEachOf = r._visitGroup;\n  r.visitShapeAnd = r.visitShapeOr = r._visitShapeGroup;\n  r.visitInclude = r._visitValue;\n  r.visitValueExpr = r.visitShapeExpr;\n  return r;\n\n  // Expect property p with value v in object o\n  function _expect (o, p, v) {\n    if (!(p in o))\n      this._error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p);\n    if (arguments.length > 2 && o[p] !== v)\n      this._error(\"expected \"+o[o]+\" to equal .\"+v);\n  }\n\n  function _error (str) {\n    throw new Error(str);\n  }\n}\n\n// The ShEx Vistor is here to minimize deps for ShExValidator.\n/** create indexes for schema\n */\nShExVisitor.index = function (schema) {\n  let index = {\n    shapeExprs: {},\n    tripleExprs: {}\n  };\n  let v = ShExVisitor();\n\n  let oldVisitExpression = v.visitExpression;\n  v.visitExpression = function (expression) {\n    if (typeof expression === \"object\" && \"id\" in expression)\n      index.tripleExprs[expression.id] = expression;\n    return oldVisitExpression.call(v, expression);\n  };\n\n  let oldVisitShapeExpr = v.visitShapeExpr;\n  v.visitShapeExpr = v.visitValueExpr = function (shapeExpr, label) {\n    if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n      index.shapeExprs[shapeExpr.id] = shapeExpr;\n    return oldVisitShapeExpr.call(v, shapeExpr, label);\n  };\n\n  v.visitSchema(schema);\n  return index;\n}\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExVisitor;\n\n"
        },
        {
          "id": 12,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-writer/shex-writer.js",
          "name": "../shex-writer/shex-writer.js",
          "index": 13,
          "index2": 11,
          "size": 22306,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "@shexjs/writer",
              "loc": "1586:14-39"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/writer",
              "loc": "7:20-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExWriter** writes ShEx documents.\n\nconst ShExWriterCjsModule = (function () {\nvar UNBOUNDED = -1;\n\n// Matches a literal as represented in memory by the ShEx library\nvar ShExLiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar ESCAPE_1 = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    ESCAPE_g = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    ESCAPE_replacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '/': '\\\\/', '\\t': '\\\\t',\n                            '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\nvar nodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\nvar nonLitNodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\n\n// ## Constructor\nfunction ShExWriter (outputStream, options) {\n  if (!(this instanceof ShExWriter))\n    return new ShExWriter(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._prefixIRIs = Object.create(null);\n  options.prefixes && this.addPrefixes(options.prefixes);\n\n  this._error = options.error || _throwError;\n  this.forceParens = !options.simplifyParentheses; // default to false\n  this._expect = options.lax ? noop : expect;\n}\n\nShExWriter.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n  // ### `_writeSchema` writes the shape to the output stream\n  _writeSchema: function (schema, done) {\n    var _ShExWriter = this;\n    this._expect(schema, \"type\", \"Schema\");\n    _ShExWriter.addPrefixes(schema.prefixes);\n    if (schema.base)\n      _ShExWriter._write(\"BASE \" + this._encodeIriOrBlankNode(schema.base) + \"\\n\");\n\n    if (schema.imports)\n      schema.imports.forEach(function (imp) {\n        _ShExWriter._write(\"IMPORT \" + _ShExWriter._encodeIriOrBlankNode(imp) + \"\\n\");\n      });\n    if (schema.startActs)\n      schema.startActs.forEach(function (act) {\n        _ShExWriter._expect(act, \"type\", \"SemAct\");\n        _ShExWriter._write(\" %\"+\n                           _ShExWriter._encodePredicate(act.name)+\n                           (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n      });\n    if (schema.start)\n      _ShExWriter._write(\"start = \" + _ShExWriter._writeShapeExpr(schema.start, done, true, 0).join('') + \"\\n\")\n    if (\"shapes\" in schema)\n      schema.shapes.forEach(function (shapeExpr) {\n        _ShExWriter._write(\n          _ShExWriter._encodeShapeName(shapeExpr.id, false) +\n            \" \" +\n            _ShExWriter._writeShapeExpr(shapeExpr, done, true, 0).join(\"\")+\"\\n\",\n          done\n        );\n      })\n  },\n\n  _writeShapeExpr: function (shapeExpr, done, forceBraces, parentPrec) {\n    var _ShExWriter = this;\n    var pieces = [];\n    if (typeof shapeExpr === \"string\") // ShapeRef\n      pieces.push(\"@\", _ShExWriter._encodeShapeName(shapeExpr));\n    // !!! []s for precedence!\n    else if (shapeExpr.type === \"ShapeExternal\")\n      pieces.push(\"EXTERNAL\");\n    else if (shapeExpr.type === \"ShapeAnd\") {\n      if (parentPrec >= 3)\n        pieces.push(\"(\");\n      var lastAndElided = false;\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0) { // && !!! grammar rules too weird here\n          /*\n            shapeAtom:\n                  nonLitNodeConstraint shapeOrRef?\n                | shapeDecl nonLitNodeConstraint?\n\n            nonLitInlineNodeConstraint:\n                  nonLiteralKind stringFacet*\n          */\n          function nonLitNodeConstraint (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type !== \"NodeConstraint\"\n              || (\"nodeKind\" in c && c.nodeKind === \"literal\")\n              || \"datatype\" in c\n              || \"values\" in c\n              ? false\n              : true;\n          }\n\n          function shapeOrRef (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\" || c.type === \"ShapeRef\";\n          }\n\n          function shapeDecl (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\";\n          }\n\n          let elideAnd = !lastAndElided\n              && (nonLitNodeConstraint(ord-1) && shapeOrRef(ord)\n                  || shapeDecl(ord-1) && nonLitNodeConstraint(ord))\n          if (!elideAnd) {\n            pieces.push(\" AND \");\n          }\n          lastAndElided = elideAnd;\n        }\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, false, 3));\n      });\n      if (parentPrec >= 3)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      if (parentPrec >= 2)\n        pieces.push(\"(\");\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0)\n          pieces.push(\" OR \");\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, forceBraces, 2));\n      });\n      if (parentPrec >= 2)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      if (parentPrec >= 4)\n        pieces.push(\"(\");\n      pieces.push(\"NOT \");\n      pieces = pieces.concat(_ShExWriter._writeShapeExpr(shapeExpr.shapeExpr, done, forceBraces, 4));\n      if (parentPrec >= 4)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"Shape\") {\n      pieces = pieces.concat(_ShExWriter._writeShape(shapeExpr, done, forceBraces));\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      pieces = pieces.concat(_ShExWriter._writeNodeConstraint(shapeExpr, done, forceBraces));\n    } else\n      throw Error(\"expected Shape{,And,Or,Ref} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n    return pieces;\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeShape: function (shape, done, forceBraces) {\n    var _ShExWriter = this;\n    try {\n      var pieces = []; // guessing push/join is faster than concat\n      this._expect(shape, \"type\", \"Shape\");\n\n      if (shape.closed) pieces.push(\"CLOSED \");\n\n      // if (shape.inherit && shape.inherit.length > 0) { futureWork\n      //   pieces.push(\"&\");\n      //   shape.inherit.forEach(function (i, ord) {\n      //     if (ord)\n      //       pieces.push(\" \")\n      //     pieces.push(_ShExWriter._encodeShapeName(i, ord > 0));\n      //   });\n      //   pieces.push(\" \");\n      // }\n\n      if (shape.extra && shape.extra.length > 0) {\n        pieces.push(\"EXTRA \");\n        shape.extra.forEach(function (i, ord) {\n          pieces.push(_ShExWriter._encodeShapeName(i, false)+\" \");\n        });\n        pieces.push(\" \");\n      }\n      var empties = [\"values\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\"];\n      pieces.push(\"{\\n\");\n\n      function _writeShapeActions (semActs) {\n        if (!semActs)\n          return;\n\n        semActs.forEach(function (act) {\n          _ShExWriter._expect(act, \"type\", \"SemAct\");\n          pieces.push(\" %\",\n                      _ShExWriter._encodePredicate(act.name),\n                      (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n        });\n      }\n\n      function _writeCardinality (min, max) {\n        if      (min === 0 && max === 1)         pieces.push(\"?\");\n        else if (min === 0 && max === UNBOUNDED) pieces.push(\"*\");\n        else if (min === undefined && max === undefined)                         ;\n        else if (min === 1 && max === UNBOUNDED) pieces.push(\"+\");\n        else\n          pieces.push(\"{\", min, \",\", (max === UNBOUNDED ? \"*\" : max), \"}\"); // by coincidence, both use the same character.\n      }\n\n      function _writeExpression (expr, indent, parentPrecedence) {\n        function _writeExpressionActions (semActs) {\n          if (semActs) {\n\n            semActs.forEach(function (act) {\n              _ShExWriter._expect(act, \"type\", \"SemAct\");\n              pieces.push(\"\\n\"+indent+\"   %\");\n              pieces.push(_ShExWriter._encodeValue(act.name));\n              if (\"code\" in act)\n                pieces.push(\"{\"+escapeCode(act.code)+\"%\"+\"}\");\n              else\n                pieces.push(\"%\");\n            });\n          }\n        }\n\n        function _exprGroup (exprs, separator, precedence, forceParens) {\n          var needsParens = precedence < parentPrecedence || forceParens;\n          if (needsParens) {\n            pieces.push(\"(\");\n          }\n          exprs.forEach(function (nested, ord) {\n            _writeExpression(nested, indent+\"  \", precedence)\n            if (ord < exprs.length - 1)\n              pieces.push(separator);\n          });\n          if (needsParens) {\n            pieces.push(\")\");\n          }\n        }\n\n        if (typeof expr === \"string\") {\n          pieces.push(\"&\");\n          pieces.push(_ShExWriter._encodeShapeName(expr, false));\n        } else {\n\n        if (\"id\" in expr) {\n          pieces.push(\"$\");\n          pieces.push(_ShExWriter._encodeIriOrBlankNode(expr.id, true));\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          if (expr.inverse)\n            pieces.push(\"^\");\n          if (expr.negated)\n            pieces.push(\"!\");\n          pieces.push(indent,\n                      _ShExWriter._encodePredicate(expr.predicate),\n                      \" \");\n\n          if (\"valueExpr\" in expr)\n            pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr.valueExpr, done, true, 0));\n          else\n            pieces.push(\". \");\n\n          _writeCardinality(expr.min, expr.max);\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \"\\n\"+indent+\"| \", 1, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \";\\n\"+indent, 2, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else throw Error(\"unexpected expr type: \" + expr.type);\n        }\n      }\n\n      if (shape.expression) // t: 0, 0Inherit1\n        _writeExpression(shape.expression, \"  \", 0);\n      pieces.push(\"\\n}\");\n      _writeShapeActions(shape.semActs);\n      _ShExWriter._annotations(pieces, shape.annotations, \"  \");\n\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeNodeConstraint: function (v, done) {\n    var _ShExWriter = this;\n    try {\n      _ShExWriter._expect(v, \"type\", \"NodeConstraint\");\n\n      var pieces = [];\n      if (v.nodeKind in nodeKinds)       pieces.push(nodeKinds[v.nodeKind], \" \");\n      else if (v.nodeKind !== undefined) _ShExWriter._error(\"unexpected nodeKind: \" + v.nodeKind); // !!!!\n\n      this._fillNodeConstraint(pieces, v, done);\n      this._annotations(pieces, v.annotations, \"  \");\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n\n  },\n\n  _annotations: function (pieces, annotations, indent) {\n    var _ShExWriter = this;\n    if (annotations) {\n      annotations.forEach(function (a) {\n        _ShExWriter._expect(a, \"type\", \"Annotation\");\n        pieces.push(\"//\\n\"+indent+\"   \");\n        pieces.push(_ShExWriter._encodeValue(a.predicate));\n        pieces.push(\" \");\n        pieces.push(_ShExWriter._encodeValue(a.object));\n      });\n    }\n  },\n\n  _fillNodeConstraint: function (pieces, v, done) {\n    var _ShExWriter = this;\n    if (v.datatype  && v.values  ) _ShExWriter._error(\"found both datatype and values in \"   +expr);\n    if (v.datatype) {\n      pieces.push(_ShExWriter._encodeShapeName(v.datatype));\n    }\n\n    if (v.values) {\n      pieces.push(\"[\");\n\n      v.values.forEach(function (t, ord) {\n        if (ord > 0)\n          pieces.push(\" \");\n\n        if (!isTerm(t)) {\n//          expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                runtimeError(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\");\n          var stemRangeTypes = [\"Language\", \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                runtimeError(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n          if (t.type === \"Language\") {\n            pieces.push(\"@\" + t.languageTag);\n          } else if (!isTerm(t.stem)) {\n            expect(t.stem, \"type\", \"Wildcard\");\n            pieces.push(\".\");\n          } else {\n            pieces.push(langOrLiteral(t, t.stem) + \"~\");\n          }\n          if (t.exclusions) {\n            t.exclusions.forEach(function (c) {\n              pieces.push(\" - \");\n              if (!isTerm(c)) {\n//                expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                pieces.push(langOrLiteral(t, c.stem) + \"~\");\n              } else {\n                pieces.push(langOrLiteral(t, c));\n              }\n            });\n          }\n          function langOrLiteral (t, c) {\n            return [\"LanguageStem\", \"LanguageStemRange\"].indexOf(t.type) !== -1 ? \"@\" + c :\n              [\"LiteralStem\", \"LiteralStemRange\"].indexOf(t.type) !== -1 ? '\"' + c.replace(ESCAPE_g, c) + '\"' :\n              _ShExWriter._encodeValue(c)\n          }\n        } else {\n          pieces.push(_ShExWriter._encodeValue(t));\n        }\n      });\n\n      pieces.push(\"]\");\n    }\n\n    if ('pattern' in v) {\n      var pattern = v.pattern.\n          replace(/\\//g, \"\\\\/\");\n      // if (ESCAPE_1.test(pattern))\n      //   pattern = pattern.replace(ESCAPE_g, characterReplacer);\n      var flags = 'flags' in v ? v.flags : \"\";\n      pieces.push(\"/\" + pattern + \"/\" + flags + \" \");\n    }\n    ['length', 'minlength', 'maxlength',\n     'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive',\n     'totaldigits', 'fractiondigits'\n    ].forEach(function (a) {\n      if (v[a])\n        pieces.push(\" \", a, \" \", v[a]);\n    });\n    return pieces;\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri, trailingSpace) {\n    trailingSpace = trailingSpace ? ' ' : '';\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (ESCAPE_1.test(iri))\n      iri = iri.replace(ESCAPE_g, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]) + trailingSpace;\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (ESCAPE_1.test(value))\n      value = value.replace(ESCAPE_g, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeShapeName` represents a subject\n  _encodeShapeName: function (subject, trailingSpace) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject, trailingSpace);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeValue` represents an object\n  _encodeValue: function (object) {\n    // Represent an IRI or blank node\n    if (typeof object !== \"object\")\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    return this._encodeLiteral(object.value, object.type, object.language);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  writeSchema: function (shape, done) {\n    this._writeSchema(shape, done);\n    this.end(done);\n  },\n\n  // ### `addShape` adds the shape to the output stream\n  addShape: function (shape, name, done) {\n    this._write(\n      _ShExWriter._encodeShapeName(name, false) +\n        \" \" +\n        _ShExWriter._writeShapeExpr(shape, done, true, 0).join(\"\"),\n      done\n    );\n  },\n\n  // ### `addShapes` adds the shapes to the output stream\n  addShapes: function (shapes) {\n    for (var i = 0; i < shapes.length; i++)\n      this.addShape(shapes[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (// @@ /[#\\/]$/.test(iri) && !! what was that?\n          prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Write prefix\n        this._write('PREFIX ' + prefix + ' <' + iri + '>\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = ESCAPE_replacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeCode (code) {\n  return code.replace(/\\\\/g, \"\\\\\\\\\").replace(/%/g, \"\\\\%\")\n}\n\n/** _throwError: overridable function to throw Errors().\n *\n * @param func (optional): function at which to truncate stack trace\n * @param str: error message\n */\nfunction _throwError (func, str) {\n  if (typeof func !== \"function\") {\n    str = func;\n    func = _throwError;\n  }\n  var e = new Error(str);\n  Error.captureStackTrace(e, func);\n  throw e;\n}\n\n// Expect property p with value v in object o\nfunction expect (o, p, v) {\n  if (!(p in o))\n    this._error(expect, \"expected \"+o+\" to have a .\"+p);\n  if (arguments.length > 2 && o[p] !== v)\n    this._error(expect, \"expected \"+o[o]+\" to equal .\"+v);\n}\n\n// The empty function\nfunction noop () {}\n\nreturn ShExWriter;\n})();\n\n// Export the `ShExWriter` class as a whole.\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWriterCjsModule; // node environment\n"
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "index": 14,
          "index2": 19,
          "size": 2255,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "issuerId": 4,
          "issuerName": "../shex-util/shex-util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 215,
            "building": 26
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "sync-request",
              "loc": "1710:8-31"
            },
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "sync-request",
              "loc": "1711:20-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nexports.__esModule = true;\nvar handle_qs_js_1 = require(\"then-request/lib/handle-qs.js\");\nvar GenericResponse = require(\"http-response-object\");\nvar fd = FormData;\nexports.FormData = fd;\nfunction doRequest(method, url, options) {\n    var xhr = new XMLHttpRequest();\n    // check types of arguments\n    if (typeof method !== 'string') {\n        throw new TypeError('The method must be a string.');\n    }\n    if (url && typeof url === 'object') {\n        url = url.href;\n    }\n    if (typeof url !== 'string') {\n        throw new TypeError('The URL/path must be a string.');\n    }\n    if (options === null || options === undefined) {\n        options = {};\n    }\n    if (typeof options !== 'object') {\n        throw new TypeError('Options must be an object (or null).');\n    }\n    method = method.toUpperCase();\n    options.headers = options.headers || {};\n    // handle cross domain\n    var match;\n    var crossDomain = !!((match = /^([\\w-]+:)?\\/\\/([^\\/]+)/.exec(url)) && match[2] != location.host);\n    if (!crossDomain)\n        options.headers['X-Requested-With'] = 'XMLHttpRequest';\n    // handle query string\n    if (options.qs) {\n        url = handle_qs_js_1[\"default\"](url, options.qs);\n    }\n    // handle json body\n    if (options.json) {\n        options.body = JSON.stringify(options.json);\n        options.headers['content-type'] = 'application/json';\n    }\n    if (options.form) {\n        options.body = options.form;\n    }\n    // method, url, async\n    xhr.open(method, url, false);\n    for (var name in options.headers) {\n        xhr.setRequestHeader(name.toLowerCase(), '' + options.headers[name]);\n    }\n    // avoid sending empty string (#319)\n    xhr.send(options.body ? options.body : null);\n    var headers = {};\n    xhr\n        .getAllResponseHeaders()\n        .split('\\r\\n')\n        .forEach(function (header) {\n        var h = header.split(':');\n        if (h.length > 1) {\n            headers[h[0].toLowerCase()] = h\n                .slice(1)\n                .join(':')\n                .trim();\n        }\n    });\n    return new GenericResponse(xhr.status, headers, xhr.responseText, url);\n}\nexports[\"default\"] = doRequest;\nmodule.exports = doRequest;\nmodule.exports[\"default\"] = doRequest;\nmodule.exports.FormData = fd;\n"
        },
        {
          "id": 14,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/formats.js",
          "name": "../shex-util/node_modules/qs/lib/formats.js",
          "index": 19,
          "index2": 13,
          "size": 521,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "issuerId": 28,
          "issuerName": "../shex-util/node_modules/qs/lib/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "module": "../shex-util/node_modules/qs/lib/index.js",
              "moduleName": "../shex-util/node_modules/qs/lib/index.js",
              "type": "cjs require",
              "userRequest": "./formats",
              "loc": "5:14-34"
            },
            {
              "moduleId": 29,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
              "module": "../shex-util/node_modules/qs/lib/stringify.js",
              "moduleName": "../shex-util/node_modules/qs/lib/stringify.js",
              "type": "cjs require",
              "userRequest": "./formats",
              "loc": "4:14-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n"
        },
        {
          "id": 15,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "index": 25,
          "index2": 24,
          "size": 4495,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "9:20-45"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "6:21-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "const ShExParserCjsModule = (function () {\n\nconst ShExTerm = require(\"@shexjs/term\");\nconst ShExJison = require('./lib/ShExJison').Parser;\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, prefixes, schemaOptions) {\n  schemaOptions = schemaOptions || {};\n  // Create a copy of the prefixes\n  var prefixesCopy = {};\n  for (var prefix in prefixes || {})\n    prefixesCopy[prefix] = prefixes[prefix];\n\n  // Create a copy of the labelResolvers\n  var termResolver = \"termResolver\" in schemaOptions ?\n      schemaOptions.termResolver :\n      makeDisabledTermResolver();\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShExJison();\n\n  function runParser () {\n    // ShExJison.base = baseIRI || \"\";\n    // ShExJison.basePath = ShExJison.base.replace(/[^\\/]*$/, '');\n    // ShExJison.baseRoot = ShExJison.base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    ShExJison._prefixes = Object.create(prefixesCopy);\n    ShExJison._imports = [];\n    ShExJison._setBase(baseIRI);\n    ShExJison._setFileName(baseIRI);\n    ShExJison.options = schemaOptions;\n    if (!ShExJison._termResolver)\n      ShExJison._termResolver = termResolver;\n    let errors = [];\n    ShExJison.recoverable = e =>\n      errors.push(e);\n    let ret = null;\n    try {\n      ret = ShExJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      errors.push(e);\n    }\n    ShExJison.reset();\n    errors.forEach(e => {\n      if (\"hash\" in e) {\n        const hash = e.hash;\n        const location = hash.loc;\n        delete hash.loc;\n        Object.assign(e, hash, {location: location});\n      }\n      return e;\n    })\n    if (errors.length == 1) {\n      errors[0].parsed = ret;\n      throw errors[0];\n    } else if (errors.length) {\n      const all = new Error(\"\" + errors.length  + \" parser errors:\\n\" + errors.map(\n        e => contextError(e, parser.yy.lexer)\n      ).join(\"\\n\"));\n      all.errors = errors;\n      all.parsed = ret;\n      throw all;\n    } else {\n      return ret;\n    }\n  }\n  parser.parse = runParser;\n  parser._setBase = function (base) {\n    ShExJison._setBase;\n    baseIRI = base;\n  }\n  parser._setFileName = ShExJison._setFileName;\n  parser._setTermResolver = ShExJison._setTermResolver;\n  parser._setOptions = function (opts) { ShExJison.options = opts; };\n  parser._resetBlanks = ShExJison._resetBlanks;\n  parser.reset = ShExJison.reset;\n  ShExJison.options = schemaOptions;\n  return parser;\n\n  function contextError (e, lexer) {\n    // use the lexer's pretty-printing\n    var line = e.location.first_line;\n    var col  = e.location.first_column + 1;\n    var posStr = \"pos\" in e.hash ? \"\\n\" + e.hash.pos : \"\"\n    return `${baseIRI}\\n line: ${line}, column: ${col}: ${e.message}${posStr}`;\n  }\n}\n\nvar makeDBTermResolver = function (db) {\n  var _db = db;\n  var _lookFor = [];\n  return {\n    add: function (iri) {\n      _lookFor.push(iri);\n    },\n    resolve: function (pair, prefixes) {\n      var x = _lookFor.reduce((lfacc, lf) => {\n        var found1 = _db.getQuads(null, lf, '\"' + pair.label.value + '\"');\n        if (found1.length)\n          return pair.prefix === null ?\n          {prefix: null, length: null, term: ShExTerm.internalTerm(found1[0].subject)}:\n          found1.reduce((tripacc, triple) => {\n            var s = ShExTerm.internalTerm(triple.subject);\n            return Object.keys(prefixes).reduce((prefacc, prefix) => {\n              var ns = prefixes[prefix];\n              var sw = s.startsWith(ns);\n              if (sw && ns.length > prefacc.length && pair.prefix === prefix)\n                return {prefix: prefix, length: prefacc.length, term: s};\n              return prefacc;\n            }, tripacc);\n          }, lfacc);\n        else\n          return lfacc;\n      }, {prefix: null, length: 0, term: null});\n      if (x.term)\n        return x.term;\n      throw Error(\"no term found for `\" + JSON.stringify(pair) + \"`\");\n    }\n  };\n}\n\nvar makeDisabledTermResolver = function () {\n  return {\n    add: function (iri) {\n      throw Error(\"no term resolver to accept <\" + iri + \">\");\n    },\n    resolve: function (label, prefixes) {\n      throw Error(\"no term resolver to resolve `\" + label + \"`\");\n    }\n  };\n}\n\nreturn {\n  construct: prepareParser,\n  dbTermResolver: makeDBTermResolver,\n  disabledTermResolver: makeDisabledTermResolver\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExParserCjsModule;\n"
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "index": 27,
          "index2": 45,
          "size": 19433,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 34,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "glob",
              "loc": "322:20-35"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./glob.js",
              "loc": "8:11-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"
        },
        {
          "id": 17,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "index": 28,
          "index2": 26,
          "size": 1308,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "44:9-31"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "5:9-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n"
        },
        {
          "id": 18,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "index": 36,
          "index2": 38,
          "size": 15995,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "50:13-30"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "11:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"
        },
        {
          "id": 19,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "index": 44,
          "index2": 40,
          "size": 6167,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "53:13-35"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "13:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"
        },
        {
          "id": 20,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "index": 46,
          "index2": 42,
          "size": 905,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerId": 47,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 47,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 26,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"
        },
        {
          "id": 21,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "index": 47,
          "index2": 43,
          "size": 935,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "63:11-26"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "3:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n"
        },
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "index": 0,
          "index2": 48,
          "size": 552,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "profile": {
            "factory": 20,
            "building": 15
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp"
            },
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp.min"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0,
          "source": "ShExWebApp = (function () {\n  let shapeMap = require(\"shape-map\")\n  return Object.assign({}, {\n    ShExTerm:       require('@shexjs/term'),\n    Util:           require('@shexjs/util'),\n    Validator:      require('@shexjs/validator'),\n    Writer:         require('@shexjs/writer'),\n    Api:            require(\"@shexjs/api\"),\n    Parser:         require(\"@shexjs/parser\"),\n    ShapeMap:       shapeMap,\n    ShapeMapParser: shapeMap.Parser,\n  })\n})()\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWebApp;\n"
        },
        {
          "id": 23,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "index": 1,
          "index2": 7,
          "size": 580,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "shape-map",
              "loc": "2:17-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * See README for description.\n */\n\nconst ShapeMapCjsModule = (function () {\n  const symbols = require(\"./lib/ShapeMapSymbols\")\n\n  // Write the parser object directly into the symbols so the caller shares a\n  // symbol space with ShapeMapJison for e.g. start and focus.\n  symbols.Parser = require(\"./lib/ShapeMapParser\")\n  return symbols\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapCjsModule;\n"
        },
        {
          "id": 24,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "name": "../shape-map/lib/ShapeMapParser.js",
          "index": 3,
          "index2": 6,
          "size": 2190,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 23,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 23,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 163,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapParser",
              "loc": "11:19-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var ShapeMapParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShapeMapJison = require('./ShapeMapJison').Parser; // node environment\n} else {\n  ShapeMapJison = ShapeMapJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, schemaMeta, dataMeta) {\n  // Create a copy of the prefixes\n  var schemaBase = schemaMeta.base;\n  var schemaPrefixesCopy = {};\n  for (var prefix in schemaMeta.prefixes || {})\n    schemaPrefixesCopy[prefix] = schemaMeta.prefixes[prefix];\n  var dataBase = dataMeta.base;\n  var dataPrefixesCopy = {};\n  for (var prefix in dataMeta.prefixes || {})\n    dataPrefixesCopy[prefix] = dataMeta.prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShapeMapJison();\n\n  function runParser () {\n    ShapeMapJison._schemaPrefixes = Object.create(schemaPrefixesCopy);\n    ShapeMapJison._setSchemaBase(schemaBase);\n    ShapeMapJison._dataPrefixes = Object.create(dataPrefixesCopy);\n    ShapeMapJison._setDataBase(dataBase);\n    ShapeMapJison._setFileName(baseIRI);\n    try {\n      return ShapeMapJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      // use the lexer's pretty-printing\n      var lineNo = \"lexer\" in parser.yy ? parser.yy.lexer.yylineno + 1 : 1;\n      var pos = \"lexer\" in parser.yy ? parser.yy.lexer.showPosition() : \"\";\n      var t = Error(`${baseIRI}(${lineNo}): ${e.message}\\n${pos}`);\n      Error.captureStackTrace(t, runParser);\n      parser.reset();\n      throw t;\n    }\n  }\n  parser.parse = runParser;\n  parser._setSchemaBase = function (base) {\n    ShapeMapJison._setSchemaBase;\n    schemaBase = base;\n  }\n  parser._setDataBase = function (base) {\n    ShapeMapJison._setDataBase;\n    dataBase = base;\n  }\n  parser._setFileName = ShapeMapJison._setFileName;\n  parser.reset = ShapeMapJison.reset;\n  return parser;\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShapeMapParser;\n"
        },
        {
          "id": 25,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "name": "../shape-map/lib/ShapeMapJison.js",
          "index": 4,
          "index2": 5,
          "size": 52142,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "issuerId": 24,
          "issuerName": "../shape-map/lib/ShapeMapParser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 23,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 24,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "name": "../shape-map/lib/ShapeMapParser.js",
              "profile": {
                "factory": 163,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 198,
            "building": 56,
            "dependencies": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "module": "../shape-map/lib/ShapeMapParser.js",
              "moduleName": "../shape-map/lib/ShapeMapParser.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapJison",
              "loc": "5:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/* parser generated by jison 0.4.16 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShapeMapJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,16],$V2=[1,11],$V3=[1,14],$V4=[1,25],$V5=[1,24],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,28],$Va=[1,26],$Vb=[1,27],$Vc=[1,29],$Vd=[1,12],$Ve=[1,13],$Vf=[1,15],$Vg=[4,9],$Vh=[16,19,20,21],$Vi=[2,25],$Vj=[16,19,20,21,37],$Vk=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],$Vl=[4,9,16,19,20,21,37,43,74,75],$Vm=[4,9,43],$Vn=[29,46,80,81,82],$Vo=[4,9,42,43],$Vp=[1,59],$Vq=[46,79,80,81,82],$Vr=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],$Vs=[1,94],$Vt=[1,85],$Vu=[1,86],$Vv=[1,87],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,93],$VA=[1,95],$VB=[33,48,49,50,53,54,55,56,63],$VC=[4,9,37,65],$VD=[1,99],$VE=[9,37],$VF=[9,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shapeMap\":3,\"EOF\":4,\"pair\":5,\"Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star\":6,\"QGT_COMMA_E_Opt\":7,\"O_QGT_COMMA_E_S_Qpair_E_C\":8,\"GT_COMMA\":9,\"nodeSelector\":10,\"statusAndShape\":11,\"Qreason_E_Opt\":12,\"QjsonAttributes_E_Opt\":13,\"reason\":14,\"jsonAttributes\":15,\"GT_AT\":16,\"Qstatus_E_Opt\":17,\"shapeSelector\":18,\"ATSTART\":19,\"ATPNAME_NS\":20,\"ATPNAME_LN\":21,\"status\":22,\"objectTerm\":23,\"triplePattern\":24,\"IT_SPARQL\":25,\"string\":26,\"nodeIri\":27,\"shapeIri\":28,\"START\":29,\"subjectTerm\":30,\"BLANK_NODE_LABEL\":31,\"literal\":32,\"GT_LCURLEY\":33,\"IT_FOCUS\":34,\"nodePredicate\":35,\"O_QobjectTerm_E_Or_QIT___E_C\":36,\"GT_RCURLEY\":37,\"O_QsubjectTerm_E_Or_QIT___E_C\":38,\"IT__\":39,\"GT_NOT\":40,\"GT_OPT\":41,\"GT_DIVIDE\":42,\"GT_DOLLAR\":43,\"O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C\":44,\"jsonValue\":45,\"APPINFO_COLON\":46,\"APPINFO_SPACE_COLON\":47,\"IT_false\":48,\"IT_null\":49,\"IT_true\":50,\"jsonObject\":51,\"jsonArray\":52,\"INTEGER\":53,\"DECIMAL\":54,\"DOUBLE\":55,\"STRING_LITERAL2\":56,\"Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt\":57,\"O_QGT_COMMA_E_S_QjsonMember_E_C\":58,\"jsonMember\":59,\"Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star\":60,\"O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C\":61,\"STRING_LITERAL2_COLON\":62,\"GT_LBRACKET\":63,\"Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt\":64,\"GT_RBRACKET\":65,\"O_QGT_COMMA_E_S_QjsonValue_E_C\":66,\"Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star\":67,\"O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C\":68,\"rdfLiteral\":69,\"numericLiteral\":70,\"booleanLiteral\":71,\"Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt\":72,\"O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C\":73,\"LANGTAG\":74,\"GT_DTYPE\":75,\"STRING_LITERAL1\":76,\"STRING_LITERAL_LONG1\":77,\"STRING_LITERAL_LONG2\":78,\"IT_a\":79,\"IRIREF\":80,\"PNAME_LN\":81,\"PNAME_NS\":82,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",9:\"GT_COMMA\",16:\"GT_AT\",19:\"ATSTART\",20:\"ATPNAME_NS\",21:\"ATPNAME_LN\",25:\"IT_SPARQL\",29:\"START\",31:\"BLANK_NODE_LABEL\",33:\"GT_LCURLEY\",34:\"IT_FOCUS\",37:\"GT_RCURLEY\",39:\"IT__\",40:\"GT_NOT\",41:\"GT_OPT\",42:\"GT_DIVIDE\",43:\"GT_DOLLAR\",46:\"APPINFO_COLON\",47:\"APPINFO_SPACE_COLON\",48:\"IT_false\",49:\"IT_null\",50:\"IT_true\",53:\"INTEGER\",54:\"DECIMAL\",55:\"DOUBLE\",56:\"STRING_LITERAL2\",62:\"STRING_LITERAL2_COLON\",63:\"GT_LBRACKET\",65:\"GT_RBRACKET\",74:\"LANGTAG\",75:\"GT_DTYPE\",76:\"STRING_LITERAL1\",77:\"STRING_LITERAL_LONG1\",78:\"STRING_LITERAL_LONG2\",79:\"IT_a\",80:\"IRIREF\",81:\"PNAME_LN\",82:\"PNAME_NS\"},\nproductions_: [0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n          return []\n        \nbreak;\ncase 2:\n\n          return [$$[$0-3]].concat($$[$0-2])\n        \nbreak;\ncase 3: case 51: case 59:\nthis.$ = $$[$0];\nbreak;\ncase 4: case 60: case 63:\nthis.$ = [  ];\nbreak;\ncase 5: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 8:\nthis.$ = extend({ node: $$[$0-3] }, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 9: case 11: case 52: case 55: case 74:\nthis.$ = {  };\nbreak;\ncase 13:\nthis.$ = extend({ shape: $$[$0] }, $$[$0-1]);\nbreak;\ncase 14:\nthis.$ = { shape: ShapeMap.start };\nbreak;\ncase 15:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1)) };\n      \nbreak;\ncase 16:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + $$[$0].substr(namePos + 1) };\n      \nbreak;\ncase 17:\nthis.$ = { status: 'conformant' } // defaults to conformant;\nbreak;\ncase 18:\nthis.$ = { status: $$[$0] };\nbreak;\ncase 21:\nthis.$ = { type: \"Extension\", language: \"http://www.w3.org/ns/shex#Extensions-sparql\", lexical: $$[$0][\"@value\"] };\nbreak;\ncase 22:\nthis.$ = { type: \"Extension\", language: $$[$0-1], lexical: $$[$0][\"@value\"] };\nbreak;\ncase 24:\nthis.$ = ShapeMap.start;\nbreak;\ncase 29:\nthis.$ = { type: \"TriplePattern\", subject: ShapeMap.focus, predicate: $$[$0-2], object: $$[$0-1] };\nbreak;\ncase 30:\nthis.$ = { type: \"TriplePattern\", subject: $$[$0-3], predicate: $$[$0-2], object: ShapeMap.focus };\nbreak;\ncase 32: case 34: case 42:\nthis.$ = null;\nbreak;\ncase 35:\nthis.$ = 'nonconformant';\nbreak;\ncase 36:\nthis.$ = 'unknown';\nbreak;\ncase 37:\nthis.$ = { reason: $$[$0] };\nbreak;\ncase 38:\nthis.$ = { appinfo: $$[$0] };\nbreak;\ncase 41:\nthis.$ = false;\nbreak;\ncase 43:\nthis.$ = true;\nbreak;\ncase 46: case 47: case 48:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 49:\nthis.$ = unescapeString($$[$0], 1)[\"@value\"];\nbreak;\ncase 50: case 58:\nthis.$ = $$[$0-1];\nbreak;\ncase 53: case 54: case 71:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 57:\n\n        this.$ = {  };\n        var t = $$[$0-1].substr(0, $$[$0-1].length - 1).trim(); // remove trailing ':' and spaces\n        this.$[unescapeString(t, 1)[\"@value\"]] = $$[$0];\n      \nbreak;\ncase 62:\nthis.$ = [$$[$0-1]].concat($$[$0]);\nbreak;\ncase 68:\nthis.$ = createLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 69:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 70:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE);\nbreak;\ncase 72:\nthis.$ = obj(\"@language\", $$[$0].substr(1).toLowerCase());\nbreak;\ncase 73:\nthis.$ = obj(\"@type\", $$[$0]);\nbreak;\ncase 76:\nthis.$ = createLiteral(\"true\", XSD_BOOLEAN);\nbreak;\ncase 77:\nthis.$ = createLiteral(\"false\", XSD_BOOLEAN);\nbreak;\ncase 78: case 80:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 79: case 81:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 83:\nthis.$ = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nbreak;\ncase 84:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._dataBase === null || absoluteIRI.test(unesc) ? unesc : _resolveDataIRI(unesc)\n      \nbreak;\ncase 85: case 86: case 90:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 87:\n\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\ncase 88:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._schemaBase === null || absoluteIRI.test(unesc) ? unesc : _resolveSchemaIRI(unesc)\n      \nbreak;\ncase 89:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 91:\n\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},{1:[3]},{1:[2,1]},o($Vg,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},o($Vh,[2,19]),o($Vh,[2,20]),{26:36,56:$V9,76:$Va,77:$Vb,78:$Vc},o($Vh,$Vi,{26:37,56:$V9,76:$Va,77:$Vb,78:$Vc}),o($Vj,[2,27]),o($Vj,[2,28]),{27:42,30:40,31:$V1,34:[1,38],38:39,39:[1,41],46:$V3,80:$Vd,81:$Ve,82:$Vf},o($Vk,[2,84]),o($Vk,[2,85]),o($Vk,[2,86]),o($Vk,[2,87]),o([16,19,20,21,37,46,79,80,81,82],[2,26]),o($Vj,[2,65]),o($Vj,[2,66]),o($Vj,[2,67]),o($Vj,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),o($Vj,[2,68]),o($Vj,[2,69]),o($Vj,[2,70]),o($Vj,[2,76]),o($Vj,[2,77]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},o($Vm,[2,9],{12:50,14:51,42:[1,52]}),o($Vn,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),o($Vo,[2,14]),o($Vo,[2,15]),o($Vo,[2,16]),o($Vh,[2,21]),o($Vh,[2,22]),{27:58,35:57,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},{27:58,35:60,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},o($Vq,[2,33]),o($Vq,[2,34]),o([37,46,79,80,81,82],$Vi),o($Vj,[2,71]),o($Vj,[2,75]),o($Vj,[2,72]),{27:61,46:$V3,80:$Vd,81:$Ve,82:$Vf},{4:[1,62]},o($Vg,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vg,[2,11],{13:64,15:65,43:[1,66]}),o($Vm,[2,10]),{26:67,56:$V9,76:$Va,77:$Vb,78:$Vc},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},o($Vn,[2,18]),o($Vn,[2,35]),o($Vn,[2,36]),{23:76,26:20,27:42,30:9,31:$V1,32:10,36:75,39:[1,77],46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vr,[2,82]),o($Vr,[2,83]),{34:[1,78]},o($Vj,[2,73]),{1:[2,2]},o($Vg,[2,3]),o($Vg,[2,8]),o($Vg,[2,12]),{44:79,46:[1,80],47:[1,81]},o($Vm,[2,37]),o($Vo,[2,13]),o($Vo,[2,23]),o($Vo,[2,24]),o($Vo,[2,88]),o($Vo,[2,89]),o($Vo,[2,90]),o($Vo,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:$Vs,45:84,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VB,[2,39]),o($VB,[2,40]),o($Vh,[2,29]),o($Vh,[2,30]),o($Vg,[2,38]),o($VC,[2,41]),o($VC,[2,42]),o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),o($VC,[2,46]),o($VC,[2,47]),o($VC,[2,48]),o($VC,[2,49]),{37:[2,55],57:96,59:98,61:97,62:$VD},{33:$Vs,45:102,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},o($VE,[2,52],{60:104}),{33:$Vs,45:105,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},{65:[1,106]},{65:[2,64]},o($VF,[2,60],{67:107}),o($VC,[2,50]),{9:[1,109],37:[2,54],58:108},o($VE,[2,57]),o($VC,[2,58]),{9:[1,111],65:[2,62],66:110},o($VE,[2,53]),{59:112,62:$VD},o($VF,[2,61]),{33:$Vs,45:113,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VE,[2,51]),o($VF,[2,59])],\ndefaultActions: {2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = new Error();\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShapeMap parser in the Jison parser generator format.\n  */\n\n  var ShapeMap = require(\"./ShapeMapSymbols\");\n\n  // Common namespaces and entities\n  var XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setSchemaBase` sets the base IRI to resolve relative IRIs.\n  Parser._setSchemaBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._schemaBase = baseIRI) {\n      Parser._schemaBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._schemaBaseRoot   = baseIRI[0];\n      Parser._schemaBaseScheme = baseIRI[1];\n    }\n  }\n  Parser._setDataBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._dataBase = baseIRI) {\n      Parser._dataBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._dataBaseRoot   = baseIRI[0];\n      Parser._dataBaseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveSchemaIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveSchemaIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._schemaBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._schemaBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._schemaBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._schemaBaseScheme : Parser._schemaBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._schemaBasePath + iri);\n    }\n    }\n  }\n  function _resolveDataIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._dataBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._dataBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._dataBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._dataBaseScheme : Parser._dataBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._dataBasePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function obj() {\n    var ret = {  };\n    for (var i = 0; i < arguments.length; i+= 2) {\n      ret[arguments[i]] = arguments[i+1];\n    }\n    return ret;\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return obj(\"@value\", value, \"@type\", type );\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser.valueExprDefns = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._schemaBase = Parser._schemaBasePath = Parser._schemaBaseRoot = Parser._schemaBaseIRIScheme = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return obj(\"@value\", unescapeText(string, stringEscapeReplacements));\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, obj(\"@language\", lang.substr(1).toLowerCase()));\n  }\n\n  function error (msg) {\n    Parser.reset();\n    throw new Error(msg);\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefixes, prefix) {\n    if (!(prefix in prefixes))\n      error('Parse error; unknown prefix: ' + prefix);\n    return prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape) {\n    if (Parser.productions && label in Parser.productions)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.shapes)\n      Parser.shapes = {};\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.shapes[label] = shape;\n  }\n\n  // Add a production to the map\n  function addProduction (label, production) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.productions)\n      Parser.productions = {};\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function shapeJunction (type, container, elts) {\n    if (elts.length === 0) {\n      return container;\n    } else if (container.type === type) {\n      container.shapeExprs = container.shapeExprs.concat(elts);\n      return container;\n    } else {\n      return { type: type, shapeExprs: [container].concat(elts) };\n    }\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n\n  // <?INCLUDE from ShExUtil. Factor into `rdf-token` module? ?>\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  function unescapeText (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 47;\nbreak;\ncase 2:return 62;\nbreak;\ncase 3:return 34;\nbreak;\ncase 4:return 29;\nbreak;\ncase 5:return 19;\nbreak;\ncase 6:return 25;\nbreak;\ncase 7:return 21;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 74;\nbreak;\ncase 10:return 81;\nbreak;\ncase 11:return 46;\nbreak;\ncase 12:return 82;\nbreak;\ncase 13:return 55;\nbreak;\ncase 14:return 54;\nbreak;\ncase 15:return 53;\nbreak;\ncase 16:return 80;\nbreak;\ncase 17:return 31;\nbreak;\ncase 18:return 77;\nbreak;\ncase 19:return 78;\nbreak;\ncase 20:return 76;\nbreak;\ncase 21:return 56;\nbreak;\ncase 22:return 79;\nbreak;\ncase 23:return 9;\nbreak;\ncase 24:return 33;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 16;\nbreak;\ncase 27:return 40;\nbreak;\ncase 28:return 41;\nbreak;\ncase 29:return 42;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 75;\nbreak;\ncase 34:return 39;\nbreak;\ncase 35:return 50;\nbreak;\ncase 36:return 48;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 4;\nbreak;\ncase 39:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 40:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(appinfo[\\u0020\\u000A\\u0009]+:))/,/^(?:(\"([^\\u0022\\u005C\\u000A\\u000D]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"[\\u0020\\u000A\\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:a\\b)/,/^(?:,)/,/^(?:\\{)/,/^(?:\\})/,/^(?:@)/,/^(?:!)/,/^(?:\\?)/,/^(?:\\/)/,/^(?:\\$)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^\\^)/,/^(?:_\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShapeMapJison;\nexports.Parser = ShapeMapJison.Parser;\nexports.parse = function () { return ShapeMapJison.parse.apply(ShapeMapJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 26,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/hierarchy-closure/hierarchy-closure.js",
          "name": "../shex-util/node_modules/hierarchy-closure/hierarchy-closure.js",
          "index": 12,
          "index2": 10,
          "size": 2546,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "issuerId": 4,
          "issuerName": "../shex-util/shex-util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 215,
            "building": 26
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "hierarchy-closure",
              "loc": "6:18-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var HierarchyClosure = (function () {\n  /** create a hierarchy object\n   * This object keeps track of direct children and parents as well as transitive children and parents.\n   */\n  function makeHierarchy () {\n    let roots = {}\n    let parents = {}\n    let children = {}\n    let holders = {}\n    return {\n      add: function (parent, child) {\n        if (// test if this is a novel entry.\n          (parent in children && children[parent].indexOf(child) !== -1)) {\n          return\n        }\n        let target = parent in holders\n          ? getNode(parent)\n          : (roots[parent] = getNode(parent)) // add new parents to roots.\n        let value = getNode(child)\n\n        target[child] = value\n        delete roots[child]\n\n        // // maintain hierarchy (direct and confusing)\n        // children[parent] = children[parent].concat(child, children[child])\n        // children[child].forEach(c => parents[c] = parents[c].concat(parent, parents[parent]))\n        // parents[child] = parents[child].concat(parent, parents[parent])\n        // parents[parent].forEach(p => children[p] = children[p].concat(child, children[child]))\n\n        // maintain hierarchy (generic and confusing)\n        updateClosure(children, parents, child, parent)\n        updateClosure(parents, children, parent, child)\n        function updateClosure (container, members, near, far) {\n          container[far] = container[far].filter(\n            e => /* e !== near && */ container[near].indexOf(e) === -1\n          ).concat(container[near].indexOf(near) === -1 ? [near] : [], container[near])\n          container[near].forEach(\n            n => (members[n] = members[n].filter(\n              e => e !== far && members[far].indexOf(e) === -1\n            ).concat(members[far].indexOf(far) === -1 ? [far] : [], members[far]))\n          )\n        }\n\n        function getNode (node) {\n          if (!(node in holders)) {\n            parents[node] = []\n            children[node] = []\n            holders[node] = {}\n          }\n          return holders[node]\n        }\n      },\n      roots: roots,\n      parents: parents,\n      children: children\n    }\n  }\n\n  function depthFirst (n, f, p) {\n    return Object.keys(n).reduce((ret, k) => {\n      return ret.concat(\n        depthFirst(n[k], f, k),\n        p ? f(k, p) : []) // outer invocation can have null parent\n    }, [])\n  }\n\n  return { create: makeHierarchy, depthFirst }\n})()\n\n/* istanbul ignore next */\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = HierarchyClosure\n}\n"
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "index": 15,
          "index2": 17,
          "size": 526,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "issuerId": 13,
          "issuerName": "../shex-util/node_modules/sync-request/lib/browser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            }
          ],
          "profile": {
            "factory": 132,
            "building": 6
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "module": "../shex-util/node_modules/sync-request/lib/browser.js",
              "moduleName": "../shex-util/node_modules/sync-request/lib/browser.js",
              "type": "cjs require",
              "userRequest": "then-request/lib/handle-qs.js",
              "loc": "3:21-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "\"use strict\";\nexports.__esModule = true;\nvar qs_1 = require(\"qs\");\nfunction handleQs(url, query) {\n    var _a = url.split('?'), start = _a[0], part2 = _a[1];\n    var qs = (part2 || '').split('#')[0];\n    var end = part2 && part2.split('#').length > 1 ? '#' + part2.split('#')[1] : '';\n    var baseQs = qs_1.parse(qs);\n    for (var i in query) {\n        baseQs[i] = query[i];\n    }\n    qs = qs_1.stringify(baseQs);\n    if (qs !== '') {\n        qs = '?' + qs;\n    }\n    return start + qs + end;\n}\nexports[\"default\"] = handleQs;\n"
        },
        {
          "id": 28,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "name": "../shex-util/node_modules/qs/lib/index.js",
          "index": 16,
          "index2": 16,
          "size": 211,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "issuerId": 27,
          "issuerName": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            }
          ],
          "profile": {
            "factory": 50,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 27,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "module": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "moduleName": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "type": "cjs require",
              "userRequest": "qs",
              "loc": "3:11-24"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n"
        },
        {
          "id": 29,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "name": "../shex-util/node_modules/qs/lib/stringify.js",
          "index": 17,
          "index2": 14,
          "size": 8030,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "issuerId": 28,
          "issuerName": "../shex-util/node_modules/qs/lib/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "module": "../shex-util/node_modules/qs/lib/index.js",
              "moduleName": "../shex-util/node_modules/qs/lib/index.js",
              "type": "cjs require",
              "userRequest": "./stringify",
              "loc": "3:16-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n"
        },
        {
          "id": 30,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/parse.js",
          "name": "../shex-util/node_modules/qs/lib/parse.js",
          "index": 20,
          "index2": 15,
          "size": 9197,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "issuerId": 28,
          "issuerName": "../shex-util/node_modules/qs/lib/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "module": "../shex-util/node_modules/qs/lib/index.js",
              "moduleName": "../shex-util/node_modules/qs/lib/index.js",
              "type": "cjs require",
              "userRequest": "./parse",
              "loc": "4:12-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"
        },
        {
          "id": 31,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/http-response-object/lib/index.js",
          "name": "../shex-util/node_modules/http-response-object/lib/index.js",
          "index": 21,
          "index2": 18,
          "size": 2170,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "issuerId": 13,
          "issuerName": "../shex-util/node_modules/sync-request/lib/browser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            }
          ],
          "profile": {
            "factory": 132,
            "building": 6
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "module": "../shex-util/node_modules/sync-request/lib/browser.js",
              "moduleName": "../shex-util/node_modules/sync-request/lib/browser.js",
              "type": "cjs require",
              "userRequest": "http-response-object",
              "loc": "4:22-53"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "\"use strict\";\n/**\n * A response from a web request\n */\nvar Response = /** @class */ (function () {\n    function Response(statusCode, headers, body, url) {\n        if (typeof statusCode !== 'number') {\n            throw new TypeError('statusCode must be a number but was ' + typeof statusCode);\n        }\n        if (headers === null) {\n            throw new TypeError('headers cannot be null');\n        }\n        if (typeof headers !== 'object') {\n            throw new TypeError('headers must be an object but was ' + typeof headers);\n        }\n        this.statusCode = statusCode;\n        var headersToLowerCase = {};\n        for (var key in headers) {\n            headersToLowerCase[key.toLowerCase()] = headers[key];\n        }\n        this.headers = headersToLowerCase;\n        this.body = body;\n        this.url = url;\n    }\n    Response.prototype.isError = function () {\n        return this.statusCode === 0 || this.statusCode >= 400;\n    };\n    Response.prototype.getBody = function (encoding) {\n        if (this.statusCode === 0) {\n            var err = new Error('This request to ' +\n                this.url +\n                ' resulted in a status code of 0. This usually indicates some kind of network error in a browser (e.g. CORS not being set up or the DNS failing to resolve):\\n' +\n                this.body.toString());\n            err.statusCode = this.statusCode;\n            err.headers = this.headers;\n            err.body = this.body;\n            err.url = this.url;\n            throw err;\n        }\n        if (this.statusCode >= 300) {\n            var err = new Error('Server responded to ' +\n                this.url +\n                ' with status code ' +\n                this.statusCode +\n                ':\\n' +\n                this.body.toString());\n            err.statusCode = this.statusCode;\n            err.headers = this.headers;\n            err.body = this.body;\n            err.url = this.url;\n            throw err;\n        }\n        if (!encoding || typeof this.body === 'string') {\n            return this.body;\n        }\n        return this.body.toString(encoding);\n    };\n    return Response;\n}());\nmodule.exports = Response;\n"
        },
        {
          "id": 32,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "name": "../shex-validator/shex-validator.js",
          "index": 22,
          "index2": 22,
          "size": 47888,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/validator",
              "loc": "6:20-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/* ShExValidator - javascript module to validate a graph with respect to Shape Expressions\n *\n * Status: 1/2 tested, no known bugs.\n *\n * TODO:\n *   constraint violation reporting.\n */\n\nconst ShExValidatorCjsModule = (function () {\nvar UNBOUNDED = -1;\n\n// interface constants\nvar Start = { term: \"START\" }\nvar InterfaceOptions = {\n  \"coverage\": {\n    \"firstError\": \"fail on first error (usually used with eval-simple-1err)\",\n    \"exhaustive\": \"find as many errors as possible (usually used with eval-threaded-nerr)\"\n  }\n};\n\nvar VERBOSE = \"VERBOSE\" in process.env;\n// **ShExValidator** provides ShEx utility functions\n\nvar ProgramFlowError = { type: \"ProgramFlowError\", errors: { type: \"UntrackedError\" } };\n\nvar ShExTerm = require(\"@shexjs/term\");\nlet ShExVisitor = require(\"@shexjs/visitor\");\n\nfunction getLexicalValue (term) {\n  return ShExTerm.isIRI(term) ? term :\n    ShExTerm.isLiteral(term) ? ShExTerm.getLiteralValue(term) :\n    term.substr(2); // bnodes start with \"_:\"\n}\n\n\nvar XSD = \"http://www.w3.org/2001/XMLSchema#\";\nvar integerDatatypes = [\n  XSD + \"integer\",\n  XSD + \"nonPositiveInteger\",\n  XSD + \"negativeInteger\",\n  XSD + \"long\",\n  XSD + \"int\",\n  XSD + \"short\",\n  XSD + \"byte\",\n  XSD + \"nonNegativeInteger\",\n  XSD + \"unsignedLong\",\n  XSD + \"unsignedInt\",\n  XSD + \"unsignedShort\",\n  XSD + \"unsignedByte\",\n  XSD + \"positiveInteger\"\n];\n\nvar decimalDatatypes = [\n  XSD + \"decimal\",\n].concat(integerDatatypes);\n\nvar numericDatatypes = [\n  XSD + \"float\",\n  XSD + \"double\"\n].concat(decimalDatatypes);\n\nvar numericParsers = {};\nnumericParsers[XSD + \"integer\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?[0-9]+$/))) {\n    parseError(\"illegal integer value '\" + label + \"'\");\n  }\n  return parseInt(label);\n};\nnumericParsers[XSD + \"decimal\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?(?:[0-9]*\\.[0-9]+|[0-9]+)$/))) { // XSD has no pattern for decimal?\n    parseError(\"illegal decimal value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nconst DECIMAL_REGEX = /^[+\\-]?(?:[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+)(?:[eE][+\\-]?[0-9]+)?$/;\nnumericParsers[XSD + \"float\"  ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) { // XSD has no pattern for float?\n    parseError(\"illegal float value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nnumericParsers[XSD + \"double\" ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) {\n    parseError(\"illegal double value '\" + label + \"'\");\n  }\n  return Number(label);\n};\n\nfunction testRange (value, datatype, parseError) {\n  const ranges = {\n    //    integer            -1 0 1 +1 | \"\" -1.0 +1.0 1e0 NaN INF\n    //    decimal            -1 0 1 +1 -1.0 +1.0 | \"\" 1e0 NaN INF\n    //    float              -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    double             -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    nonPositiveInteger -1 0 +0 -0 | 1 +1 1a a1\n    //    negativeInteger    -1 | 0 +0 -0 1\n    //    long               -1 0 1 +1 |\n    //    int                -1 0 1 +1 |\n    //    short              -32768 0 32767 | -32769 32768\n    //    byte               -128 0 127 | \"\" -129 128\n    //    nonNegativeInteger 0 -0 +0 1 +1 | -1\n    //    unsignedLong       0 1 | -1\n    //    unsignedInt        0 1 | -1\n    //    unsignedShort      0 65535 | -1 65536\n    //    unsignedByte       0 255 | -1 256\n    //    positiveInteger    1 | -1 0\n    //    string             \"\" \"a\" \"0\"\n    //    boolean            true false 0 1 | \"\" TRUE FALSE tRuE fAlSe -1 2 10 01\n    //    dateTime           \"2012-01-02T12:34:56.78Z\" | \"\" \"2012-01-02T\" \"2012-01-02\"\n    integer:            { min: -Infinity           , max: Infinity },\n    decimal:            { min: -Infinity           , max: Infinity },\n    float:              { min: -Infinity           , max: Infinity },\n    double:             { min: -Infinity           , max: Infinity },\n    nonPositiveInteger: { min: -Infinity           , max: 0        },\n    negativeInteger:    { min: -Infinity           , max: -1       },\n    long:               { min: -9223372036854775808, max: 9223372036854775807 },\n    int:                { min: -2147483648         , max: 2147483647 },\n    short:              { min: -32768              , max: 32767    },\n    byte:               { min: -128                , max: 127      },\n    nonNegativeInteger: { min: 0                   , max: Infinity },\n    unsignedLong:       { min: 0                   , max: 18446744073709551615 },\n    unsignedInt:        { min: 0                   , max: 4294967295 },\n    unsignedShort:      { min: 0                   , max: 65535    },\n    unsignedByte:       { min: 0                   , max: 255      },\n    positiveInteger:    { min: 1                   , max: Infinity }\n  }\n  var parms = ranges[datatype.substr(XSD.length)];\n  if (!parms) throw Error(\"unexpected datatype: \" + datatype);\n  if (value < parms.min) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is less than the min:\", parms.min);\n  } else if (value > parms.max) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is greater than the max:\", parms.min);\n  }\n};\n\n/*\nfunction intSubType (spec, label, parseError) {\n  var ret = numericParsers[XSD + \"integer\"](label, parseError);\n  if (\"min\" in spec && ret < spec.min)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be < \" + spec.min);\n  if (\"max\" in spec && ret > spec.max)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be > \" + spec.max);\n  return ret;\n}\n[{type: \"nonPositiveInteger\", max: 0},\n {type: \"negativeInteger\", max: -1},\n {type: \"long\", min: -9223372036854775808, max: 9223372036854775807}, // beyond IEEE double\n {type: \"int\", min: -2147483648, max: 2147483647},\n {type: \"short\", min: -32768, max: 32767},\n {type: \"byte\", min: -128, max: 127},\n {type: \"nonNegativeInteger\", min: 0},\n {type: \"unsignedLong\", min: 0, max: 18446744073709551615},\n {type: \"unsignedInt\", min: 0, max: 4294967295},\n {type: \"unsignedShort\", min: 0, max: 65535},\n {type: \"unsignedByte\", min: 0, max: 255},\n {type: \"positiveInteger\", min: 1}].forEach(function (i) {\n   numericParsers[XSD + i.type ] = function (label, parseError) {\n     return intSubType(i, label, parseError);\n   };\n });\n*/\n\nvar stringTests = {\n  length   : function (v, l) { return v.length === l; },\n  minlength: function (v, l) { return v.length  >= l; },\n  maxlength: function (v, l) { return v.length  <= l; }\n};\n\nvar numericValueTests = {\n  mininclusive  : function (n, m) { return n >= m; },\n  minexclusive  : function (n, m) { return n >  m; },\n  maxinclusive  : function (n, m) { return n <= m; },\n  maxexclusive  : function (n, m) { return n <  m; }\n};\n\nvar decimalLexicalTests = {\n  totaldigits   : function (v, d) {\n    var m = v.match(/[0-9]/g);\n    return m && m.length <= d;\n  },\n  fractiondigits: function (v, d) {\n    var m = v.match(/^[+-]?[0-9]*\\.?([0-9]*)$/);\n    return m && m[1].length <= d;\n  }\n};\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n/* ShExValidator_constructor - construct an object for validating a schema.\n *\n * schema: a structure produced by a ShEx parser or equivalent.\n * options: object with controls for\n *   lax(true): boolean: whine about missing types in schema.\n *   diagnose(false): boolean: makde validate return a structure with errors.\n */\nfunction ShExValidator_constructor(schema, options) {\n  if (!(this instanceof ShExValidator_constructor))\n    return new ShExValidator_constructor(schema, options);\n  let index = schema._index || ShExVisitor.index(schema)\n  this.type = \"ShExValidator\";\n  options = options || {};\n  this.options = options;\n  this.options.coverage = this.options.coverage || \"exhaustive\";\n  if (!(\"noCache\" in options && options.noCache))\n    this.known = {};\n\n  var _ShExValidator = this;\n  this.schema = schema;\n  this._expect = this.options.lax ? noop : expect; // report errors on missing types.\n  this._optimize = {}; // optimizations:\n    // hasRepeatedGroups: whether there are patterns like (:p1 ., :p2 .)*\n  this.reset = function () {  }; // included in case we need it later.\n  // var regexModule = this.options.regexModule || require(\"@shexjs/eval-simple-1err\");\n  var regexModule = this.options.regexModule || require(\"@shexjs/eval-threaded-nerr\");\n\n  /* getAST - compile a traditional regular expression abstract syntax tree.\n   * Tested but not used at present.\n   */\n  this.getAST = function () {\n    return {\n      type: \"AST\",\n      shapes: schema.shapes.reduce(function (ret, shape) {\n        ret[shape.id] = {\n          type: \"ASTshape\",\n          expression: _compileShapeToAST(shape.expression, [], _ShExValidator.schema)\n        };\n        return ret;\n      }, {})\n    };\n  };\n\n  /* indexTripleConstraints - compile regular expression and index triple constraints\n   */\n  this.indexTripleConstraints = function (expression) {\n    // list of triple constraints from (:p1 ., (:p2 . | :p3 .))\n    var tripleConstraints = [];\n\n    if (expression)\n      indexTripleConstraints_dive(expression);\n    return tripleConstraints;\n\n    function indexTripleConstraints_dive (expr) {\n      if (typeof expr === \"string\") // Inclusion\n        return indexTripleConstraints_dive(index.tripleExprs[expr]);\n\n      else if (expr.type === \"TripleConstraint\") {\n        tripleConstraints.push(expr);\n        return [tripleConstraints.length - 1]; // index of expr\n      }\n\n      else if (expr.type === \"OneOf\" || expr.type === \"EachOf\")\n        return expr.expressions.reduce(function (acc, nested) {\n          return acc.concat(indexTripleConstraints_dive(nested));\n        }, []);\n\n      else if (expr.type === \"NestedShape\")\n        return [];\n\n      else\n        runtimeError(\"unexpected expr type: \" + expr.type);\n    };\n  };\n\n  /* emptyTracker - a tracker that does nothing\n   */\n  this.emptyTracker = function () {\n    var noop = x => x;\n    return {\n      recurse: noop,\n      known: noop,\n      enter: function (point, label) { ++this.depth; },\n      exit: function (point, label, ret) { --this.depth; },\n      depth: 0\n    };\n  };\n\n  /* validate - test point in db against the schema for labelOrShape\n   * depth: level of recurssion; for logging.\n   */\n  this.validate = function (db, point, label, tracker, seen) {\n    // default to schema's start shape\n    if (typeof point === \"object\" && \"termType\" in point) {\n      point = ShExTerm.internalTerm(point)\n    }\n    if (typeof point === \"object\") {\n      var shapeMap = point;\n      if (this.options.results === \"api\") {\n        return shapeMap.map(pair => {\n          var time = new Date();\n          var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n          time = new Date() - time;\n          return {\n            node: pair.node,\n            shape: pair.shape,\n            status: \"errors\" in res ? \"nonconformant\" : \"conformant\",\n            appinfo: res,\n            elapsed: time\n          };\n        });\n      }\n      var results = shapeMap.reduce((ret, pair) => {\n        var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n        return \"errors\" in res ?\n          { passes: ret.passes, failures: ret.failures.concat(res) } :\n          { passes: ret.passes.concat(res), failures: ret.failures } ;\n      }, {passes: [], failures: []});\n      if (false && this.options.results === \"api\") {\n        var ret = {};\n        function _add (n, s, r) {\n          if (!(n in ret)) {\n            ret[n] = [{shape: s, result: r}];\n            return;\n          }\n          if (ret[n].filter(p => { return p.shape === s; }))\n            return;\n          ret[n].push({shape: s, results: r});\n        }\n        results.passes.forEach(p => { _add(p.node, p.shape, true); });\n        results.failures.forEach(p => { _add(p.node, p.shape, false); });\n        return ret;\n      }\n      if (results.failures.length > 0) {\n        return results.failures.length !== 1 ?\n          { type: \"FailureList\", errors: results.failures } :\n          results.failures [0];\n      } else {\n        return results.passes.length !== 1 ?\n          { type: \"SolutionList\", solutions: results.passes } :\n          results.passes [0];\n      }\n    }\n\n    var outside = tracker === undefined;\n    // logging stuff\n    if (!tracker)\n      tracker = this.emptyTracker();\n    if (!label || label === Start) {\n      if (!schema.start)\n        runtimeError(\"start production not defined\");\n    }\n\n    var shape = null;\n    if (label == Start) {\n      shape = schema.start;\n    } else if (!(\"shapes\" in this.schema) || this.schema.shapes.length === 0) {\n      runtimeError(\"shape \" + label + \" not found; no shapes in schema\");\n    } else if (label in index.shapeExprs) {\n      shape = index.shapeExprs[label]\n    } else {\n      runtimeError(\"shape \" + label + \" not found in:\\n\" + Object.keys(index.shapeExprs || []).map(s => \"  \" + s).join(\"\\n\"));\n    }\n    if (typeof label !== \"string\")\n      return this._validateShapeExpr(db, point, shape, Start, tracker, seen);\n\n    if (seen === undefined)\n      seen = {};\n    var seenKey = point + \"@\" + (label === Start ? \"_: -start-\" : label);\n    if (seenKey in seen)\n      return tracker.recurse({\n        type: \"Recursion\",\n        node: ldify(point),\n        shape: label\n      });\n    if (\"known\" in this && seenKey in this.known)\n      return tracker.known(this.known[seenKey]);\n    seen[seenKey] = { point: point, shape: label };\n    tracker.enter(point, label);\n    var ret = this._validateShapeExpr(db, point, shape, label, tracker, seen);\n    tracker.exit(point, label, ret);\n    delete seen[seenKey];\n    if (\"known\" in this)\n      this.known[seenKey] = ret;\n    if (\"startActs\" in schema && outside) {\n      ret.startActs = schema.startActs;\n    }\n    return ret;\n  }\n\n  this._validateShapeExpr = function (db, point, shapeExpr, shapeLabel, tracker, seen) {\n    if (point === \"\")\n      throw Error(\"validation needs a valid focus node\");\n    if (typeof shapeExpr === \"string\") { // ShapeRef\n      return this._validateShapeExpr(db, point, index.shapeExprs[shapeExpr], shapeExpr, tracker, seen);\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      var sub = this._errorsMatchingNodeConstraint(point, shapeExpr, null);\n      return sub.errors && sub.errors.length ? { // @@ when are both conditionals needed?\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: sub.errors.map(function (error) { // !!! just sub.errors?\n          return {\n            type: \"NodeConstraintViolation\",\n            shapeExpr: shapeExpr,\n            error: error\n          };\n        })\n      } : {\n        type: \"NodeConstraintTest\",\n        node: ldify(point),\n        shape: shapeLabel,\n        shapeExpr: shapeExpr\n      };\n    } else if (shapeExpr.type === \"Shape\") {\n      return this._validateShape(db, point, shapeExpr, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeExternal\") {\n      return this.options.validateExtern(db, point, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      var sub = this._validateShapeExpr(db, point, shapeExpr.shapeExpr, shapeLabel, tracker, seen);\n      if (\"errors\" in sub)\n          return { type: \"ShapeNotResults\", solution: sub };\n        else\n          return { type: \"ShapeNotFailure\", errors: sub };\n    } else if (shapeExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          passes.push(sub);\n      }\n      if (errors.length > 0) {\n        return  { type: \"ShapeAndFailure\", errors: errors};\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else\n      throw Error(\"expected one of Shape{Ref,And,Or} or NodeConstraint, got \" + JSON.stringify(shapeExpr));\n  }\n\n  this._validateShape = function (db, point, shape, shapeLabel, tracker, seen) {\n    const _ShExValidator = this;\n    const valParms = { db, shapeLabel, tracker, seen };\n\n    let ret = null;\n    const startAcionStorage = {}; // !!! need test to see this write to results structure.\n    if (\"startActs\" in schema) {\n      const semActErrors = this.semActHandler.dispatchAll(schema.startActs, null, startAcionStorage)\n      if (semActErrors.length)\n        return {\n          type: \"Failure\",\n          node: ldify(point),\n          shape: shapeLabel,\n          errors: semActErrors\n        }; // some semAct aborted !! return a better error\n    }\n\n    const fromDB  = db.getNeighborhood(point, shapeLabel, shape);\n    const outgoingLength = fromDB.outgoing.length;\n    const neighborhood = fromDB.outgoing.sort(\n      (l, r) => l.predicate.localeCompare(r.predicate) || sparqlOrder(l.object, r.object)\n    ).concat(fromDB.incoming.sort(\n      (l, r) => l.predicate.localeCompare(r.predicate) || sparqlOrder(l.object, r.object)\n    ));\n\n    const constraintList = this.indexTripleConstraints(shape.expression);\n    const tripleList = matchByPredicate(constraintList, neighborhood, outgoingLength, point, valParms);\n    const {misses, extras} = whatsMissing(tripleList, neighborhood, outgoingLength, shape.extra || [])\n\n    const xp = crossProduct(tripleList.constraintList, \"NO_TRIPLE_CONSTRAINT\");\n    const partitionErrors = [];\n    const regexEngine = regexModule.compile(schema, shape, index);\n    while (xp.next() && ret === null) {\n      const errors = []\n      const usedTriples = []; // [{s1,p1,o1},{s2,p2,o2}] implicated triples -- used for messages\n      const constraintMatchCount = // [2,1,0,1] how many triples matched a constraint\n            _seq(neighborhood.length).map(function () { return 0; });\n\n      // t2tc - array mapping neighborhood index to TripleConstraint\n      const t2tcForThisShape = xp.get(); // [0,1,0,3] mapping from triple to constraint\n\n      // Triples not mapped to triple constraints are not allowed in closed shapes.\n      if (shape.closed) {\n        const unexpectedTriples = neighborhood.slice(0, outgoingLength).filter((t, i) => {\n          return t2tcForThisShape[i] === \"NO_TRIPLE_CONSTRAINT\" && // didn't match a constraint\n          extras.indexOf(i) === -1; // wasn't in EXTRAs.\n        });\n        if (unexpectedTriples.length > 0)\n          errors.push({\n            errors: [\n              {\n                type: \"ClosedShapeViolation\",\n                unexpectedTriples: unexpectedTriples\n              }\n            ]\n          });\n      }\n\n      // Set usedTriples and constraintMatchCount.\n      t2tcForThisShape.forEach(function (tpNumber, ord) {\n        if (tpNumber !== \"NO_TRIPLE_CONSTRAINT\") {\n          usedTriples.push(neighborhood[ord]);\n          ++constraintMatchCount[tpNumber];\n        }\n      });\n      const tc2t = _constraintToTriples(t2tcForThisShape, constraintList, tripleList); // e.g. [[t0, t2], [t1, t3]]\n\n      const results = regexEngine.match(db, point, constraintList, tc2t, t2tcForThisShape, neighborhood, this.semActHandler, null);\n      if (\"errors\" in results)\n        errors.push({ errors: results.errors });\n\n      const possibleRet = { type: \"ShapeTest\", node: ldify(point), shape: shapeLabel };\n      if (errors.length === 0 && Object.keys(results).length > 0) // only include .solution for non-empty pattern\n        possibleRet.solution = results;\n      if (\"semActs\" in shape) {\n        const semActErrors = this.semActHandler.dispatchAll(shape.semActs, results, possibleRet)\n        if (semActErrors.length)\n          // some semAct aborted\n          errors.push({ errors: semActErrors });\n      }\n\n      partitionErrors.push(errors)\n      if (errors.length === 0)\n        ret = possibleRet\n    }\n    // end of while(xp.next())\n\n    const missErrors = misses.map(function (miss) {\n      const t = neighborhood[miss.tripleNo];\n      return {\n        type: \"TypeMismatch\",\n        triple: {type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)},\n        constraint: constraintList[miss.constraintNo],\n        errors: miss.errors\n      };\n    });\n\n    // Report only last errors until we have a better idea.\n    const lastErrors = partitionErrors[partitionErrors.length - 1];\n    let errors = missErrors.concat(lastErrors.length === 1 ? lastErrors[0].errors : lastErrors);\n    if (errors.length > 0)\n      ret = {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors\n      };\n\n    // remove N3jsTripleToString\n    if (VERBOSE)\n      neighborhood.forEach(function (t) {\n        delete t.toString;\n      });\n\n    return addShapeAttributes(shape, ret);\n  };\n\n  function matchByPredicate (constraintList, neighborhood, outgoingLength, point, valParms) {\n    const outgoing = indexNeighborhood(neighborhood.slice(0, outgoingLength));\n    const incoming = indexNeighborhood(neighborhood.slice(outgoingLength));\n    return constraintList.reduce(function (ret, constraint, cNo) {\n\n      // subject and object depend on direction of constraint.\n      const searchSubject = constraint.inverse ? null : point;\n      const searchObject = constraint.inverse ? point : null;\n      const index = constraint.inverse ? incoming : outgoing;\n\n      // get triples matching predciate\n      const matchPredicate = index.byPredicate[constraint.predicate] ||\n            []; // empty list when no triple matches that constraint\n\n      // strip to triples matching value constraints (apart from @<someShape>)\n      const matchConstraints = _ShExValidator._triplesMatchingShapeExpr(\n        matchPredicate, constraint, valParms\n      );\n\n      matchConstraints.hits.forEach(function (evidence) {\n        const tNo = neighborhood.indexOf(evidence.triple);\n        ret.constraintList[tNo].push(cNo);\n        ret.results[cNo][tNo] = evidence.sub;\n      });\n      matchConstraints.misses.forEach(function (evidence) {\n        const tNo = neighborhood.indexOf(evidence.triple);\n        ret.misses[tNo] = {constraintNo: cNo, errors: evidence.errors};\n      });\n      return ret;\n    }, { misses: {}, results: _alist(constraintList.length), constraintList:_alist(neighborhood.length) })\n  }\n\n  function whatsMissing (tripleList, neighborhood, outgoingLength, extras) {\n    const matchedExtras = []; // triples accounted for by EXTRA\n    const misses = tripleList.constraintList.reduce(function (ret, constraints, ord) {\n      if (constraints.length === 0 &&   // matches no constraints\n          ord < outgoingLength &&       // not an incoming triple\n          ord in tripleList.misses) {   // predicate matched some constraint(s)\n        if (extras.indexOf(neighborhood[ord].predicate) !== -1) {\n          matchedExtras.push(ord);\n        } else {                        // not declared extra\n          ret.push({                    // so it's a missed triple.\n            tripleNo: ord,\n            constraintNo: tripleList.misses[ord].constraintNo,\n            errors: tripleList.misses[ord].errors\n          });\n        }\n      }\n      return ret;\n    }, []);\n    return {misses, extras: matchedExtras}\n  }\n\n  function addShapeAttributes (shape, ret) {\n    if (\"annotations\" in shape)\n      ret.annotations = shape.annotations;\n    return ret;\n  }\n\n  // Pivot to triples by constraint.\n  function _constraintToTriples (t2tc, constraintList, tripleList) {\n    return t2tc.slice().\n      reduce(function (ret, cNo, tNo) {\n        if (cNo !== \"NO_TRIPLE_CONSTRAINT\")\n          ret[cNo].push({tNo: tNo, res: tripleList.results[cNo][tNo]});\n        return ret;\n      }, _seq(constraintList.length).map(() => [])); // [length][]\n  }\n\n  this._triplesMatchingShapeExpr = function (triples, constraint, valParms) {\n    var _ShExValidator = this;\n    var misses = [];\n    var hits = [];\n    triples.forEach(function (triple) {\n      var value = constraint.inverse ? triple.subject : triple.object;\n      var sub;\n      var oldBindings = JSON.parse(JSON.stringify(_ShExValidator.semActHandler.results));\n      var errors = constraint.valueExpr === undefined ?\n          undefined :\n          (sub = _ShExValidator._errorsMatchingShapeExpr(value, constraint.valueExpr, valParms)).errors;\n      if (!errors) {\n        hits.push({triple: triple, sub: sub});\n      } else if (hits.indexOf(triple) === -1) {\n        _ShExValidator.semActHandler.results = JSON.parse(JSON.stringify(oldBindings));\n        misses.push({triple: triple, errors: errors});\n      }\n    });\n    return { hits: hits, misses: misses };\n  }\n  this._errorsMatchingShapeExpr = function (value, valueExpr, valParms) {\n    var _ShExValidator = this;\n    if (typeof valueExpr === \"string\") { // ShapeRef\n      return _ShExValidator.validate(valParms.db, value, valueExpr, valParms.tracker, valParms.seen);\n    } else if (valueExpr.type === \"NodeConstraint\") {\n      return this._errorsMatchingNodeConstraint(value, valueExpr, null);\n    } else if (valueExpr.type === \"Shape\") {\n      return _ShExValidator._validateShapeExpr(valParms.db, value, valueExpr, valParms.shapeLabel, valParms.tracker, valParms.seen)\n    } else if (valueExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = valueExpr.shapeExprs[i];\n        var sub = _ShExValidator._errorsMatchingShapeExpr(value, nested, valParms);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (valueExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = valueExpr.shapeExprs[i];\n        var sub = _ShExValidator._errorsMatchingShapeExpr(value, nested, valParms);\n        if (\"errors\" in sub)\n          return { type: \"ShapeAndFailure\", errors: [sub] };\n        else\n          passes.push(sub);\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else if (valueExpr.type === \"ShapeNot\") {\n      var sub = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExpr, valParms);\n      // return sub.errors && sub.errors.length ? {} : {\n      //   errors: [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"] };\n      var ret = Object.assign({\n        type: null,\n        focus: value\n      }, valueExpr);\n      if (sub.errors && sub.errors.length) {\n        ret.type = \"ShapeNotTest\";\n        // ret = {};\n      } else {\n        ret.type = \"ShapeNotFailure\";\n        ret.errors = [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"]\n      }\n      return ret;\n    } else {\n      throw Error(\"unknown value expression type '\" + valueExpr.type + \"'\");\n    }\n  };\n\n  /* _errorsMatchingNodeConstraint - return whether the value matches the value\n   * expression without checking shape references.\n   */\n  this._errorsMatchingNodeConstraint = function (value, valueExpr, recurse) {\n    var errors = [];\n    var label = ShExTerm.isLiteral(value) ? ShExTerm.getLiteralValue(value) :\n      ShExTerm.isBlank(value) ? value.substring(2) :\n      value;\n    var dt = ShExTerm.isLiteral(value) ? ShExTerm.getLiteralType(value) : null;\n    var numeric = integerDatatypes.indexOf(dt) !== -1 ? XSD + \"integer\" : numericDatatypes.indexOf(dt) !== -1 ? dt : undefined;\n\n    function validationError () {\n      var errorStr = Array.prototype.join.call(arguments, \"\");\n      errors.push(\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": \" + errorStr);\n      return false;\n    }\n    // if (negated) ;\n    if (false) {\n      // wildcard -- ignore\n    } else {\n      if (\"nodeKind\" in valueExpr) {\n        if ([\"iri\", \"bnode\", \"literal\", \"nonliteral\"].indexOf(valueExpr.nodeKind) === -1) {\n          validationError(\"unknown node kind '\" + valueExpr.nodeKind + \"'\");\n        }\n        if (ShExTerm.isBlank(value)) {\n          if (valueExpr.nodeKind === \"iri\" || valueExpr.nodeKind === \"literal\") {\n            validationError(\"blank node found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (ShExTerm.isLiteral(value)) {\n          if (valueExpr.nodeKind !== \"literal\") {\n            validationError(\"literal found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (valueExpr.nodeKind === \"bnode\" || valueExpr.nodeKind === \"literal\") {\n          validationError(\"iri found when \" + valueExpr.nodeKind + \" expected\");\n        }\n      }\n\n      if (valueExpr.datatype  && valueExpr.values  ) validationError(\"found both datatype and values in \"   +tripleConstraint);\n\n      if (valueExpr.datatype) {\n        if (!ShExTerm.isLiteral(value)) {\n          validationError(\"mismatched datatype: \" + value + \" is not a literal with datatype \" + valueExpr.datatype);\n        }\n        else if (ShExTerm.getLiteralType(value) !== valueExpr.datatype) {\n          validationError(\"mismatched datatype: \" + ShExTerm.getLiteralType(value) + \" !== \" + valueExpr.datatype);\n        }\n        else if (numeric) {\n          testRange(numericParsers[numeric](label, validationError), valueExpr.datatype, validationError);\n        }\n        else if (valueExpr.datatype === XSD + \"boolean\") {\n          if (label !== \"true\" && label !== \"false\" && label !== \"1\" && label !== \"0\")\n            validationError(\"illegal boolean value: \" + label);\n        }\n        else if (valueExpr.datatype === XSD + \"dateTime\") {\n          if (!label.match(/^[+-]?\\d{4}-[01]\\d-[0-3]\\dT[0-5]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?$/))\n            validationError(\"illegal dateTime value: \" + label);\n        }\n      }\n\n      if (valueExpr.values) {\n        if (ShExTerm.isLiteral(value) && valueExpr.values.reduce((ret, v) => {\n          if (ret) return true;\n          var ld = ldify(value);\n          if (v.type === \"Language\") {\n            return v.languageTag === ld.language; // @@ use equals/normalizeTest\n          }\n          if (!(typeof v === \"object\" && \"value\" in v))\n            return false;\n          return v.value === ld.value &&\n            v.type === ld.type &&\n            v.language === ld.language;\n        }, false)) {\n          // literal match\n        } else if (valueExpr.values.indexOf(value) !== -1) {\n          // trivial match\n        } else {\n          if (!(valueExpr.values.some(function (valueConstraint) {\n            if (typeof valueConstraint === \"object\" && !(\"value\" in valueConstraint)) { // isTerm me -- strike \"value\" in\n              if (!(\"type\" in valueConstraint))\n                runtimeError(\"expected \"+JSON.stringify(valueConstraint)+\" to have a 'type' attribute.\");\n              var stemRangeTypes = [\n                \"Language\",\n                \"IriStem\",      \"LiteralStem\",      \"LanguageStem\",\n                \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"\n              ];\n              if (stemRangeTypes.indexOf(valueConstraint.type) === -1)\n                runtimeError(\"expected type attribute '\"+valueConstraint.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n\n              /* expect N3.js literals with {Literal,Language}StemRange\n               *       or non-literals with IriStemRange\n               */\n              function normalizedTest (val, ref, func) {\n                if (ShExTerm.isLiteral(val)) {\n                  if ([\"LiteralStem\", \"LiteralStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(ShExTerm.getLiteralValue(val), ref);\n                  } else if ([\"LanguageStem\", \"LanguageStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(ShExTerm.getLiteralLanguage(val) || null, ref);\n                  } else {\n                    return validationError(\"literal \" + val + \" not comparable with non-literal \" + ref);\n                  }\n                } else {\n                  if ([\"IriStem\", \"IriStemRange\"].indexOf(valueConstraint.type) === -1) {\n                    return validationError(\"nonliteral \" + val + \" not comparable with literal \" + JSON.stringify(ref));\n                  } else {\n                    return func(val, ref);\n                  }\n                }\n              }\n              function startsWith (val, ref) {\n                return normalizedTest(val, ref, (l, r) => {\n                  return (valueConstraint.type === \"LanguageStem\" ||\n                          valueConstraint.type === \"LanguageStemRange\") ?\n                    // rfc4647 basic filtering\n                    l !== null && (l === r || r === \"\" || l[r.length] === \"-\") :\n                    // simple substring\n                    l.startsWith(r);\n                });\n              }\n              function equals (val, ref) {\n                return normalizedTest(val, ref, (l, r) => { return l === r; });\n              }\n\n              if (!isTerm(valueConstraint.stem)) {\n                expect(valueConstraint.stem, \"type\", \"Wildcard\");\n                // match whatever but check exclusions below\n              } else {\n                if (!(startsWith(value, valueConstraint.stem))) {\n                  return false;\n                }\n              }\n              if (valueConstraint.exclusions) {\n                return !valueConstraint.exclusions.some(function (c) {\n                  if (!isTerm(c)) {\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                    return startsWith(value, c.stem);\n                  } else {\n                    return equals(value, c);\n                  }\n                });\n              }\n              return true;\n            } else {\n              // ignore -- would have caught it above\n            }\n          }))) {\n            validationError(\"value \" + value + \" not found in set \" + JSON.stringify(valueExpr.values));\n          }\n        }\n      }\n    }\n\n    if (\"pattern\" in valueExpr) {\n      var regexp = \"flags\" in valueExpr ?\n\t  new RegExp(valueExpr.pattern, valueExpr.flags) :\n\t  new RegExp(valueExpr.pattern);\n      if (!(getLexicalValue(value).match(regexp)))\n        validationError(\"value \" + getLexicalValue(value) + \" did not match pattern \" + valueExpr.pattern);\n    }\n\n    Object.keys(stringTests).forEach(function (test) {\n      if (test in valueExpr && !stringTests[test](label, valueExpr[test])) {\n        validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n      }\n    });\n\n    Object.keys(numericValueTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric) {\n          if (!numericValueTests[test](numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n\n    Object.keys(decimalLexicalTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric === XSD + \"integer\" || numeric === XSD + \"decimal\") {\n          if (!decimalLexicalTests[test](\"\"+numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n    var ret = {\n      type: null,\n      focus: value,\n      shapeExpr: valueExpr\n    };\n    if (errors.length) {\n      ret.type = \"NodeConstraintViolation\";\n      ret.errors = errors;\n    } else {\n      ret.type = \"NodeConstraintTest\";\n    }\n    return ret;\n  };\n\n  this.semActHandler = {\n    handlers: { },\n    results: { },\n    /**\n     * Store a semantic action handler.\n     *\n     * @param {string} name - semantic action's URL.\n     * @param {object} handler - handler function.\n     *\n     * The handler object has a dispatch function is invoked with:\n     * @param {string} code - text of the semantic action.\n     * @param {object} ctx - matched triple or results subset.\n     * @param {object} extensionStorage - place where the extension writes into the result structure.\n     * @return {bool} false if the extension failed or did not accept the ctx object.\n     */\n    register: function (name, handler) {\n      this.handlers[name] = handler;\n    },\n    /**\n     * Calls all semantic actions, allowing each to write to resultsArtifact.\n     *\n     * @param {array} semActs - list of semantic actions to invoke.\n     * @return {bool} false if any result was false.\n     */\n    dispatchAll: function (semActs, ctx, resultsArtifact) {\n      var _semActHanlder = this;\n      return semActs.reduce(function (ret, semAct) {\n        if (ret.length === 0 && semAct.name in _semActHanlder.handlers) {\n          var code = \"code\" in semAct ? semAct.code : _ShExValidator.options.semActs[semAct.name];\n          var existing = \"extensions\" in resultsArtifact && semAct.name in resultsArtifact.extensions;\n          var extensionStorage = existing ? resultsArtifact.extensions[semAct.name] : {};\n          const response = _semActHanlder.handlers[semAct.name].dispatch(code, ctx, extensionStorage);\n          if (typeof response === 'boolean') {\n            if (!response)\n              ret.push({ type: \"SemActFailure\", errors: [{ type: \"BooleanSemActFailure\", code: code, ctx }] })\n          } else if (typeof response === 'object' && response.constructor === Array) {\n            if (response.length > 0)\n              ret.push({ type: \"SemActFailure\", errors: response })\n          } else {\n            throw Error(\"unsupported response from semantic action handler: \" + JSON.stringify(response))\n          }\n          if (!existing && Object.keys(extensionStorage).length > 0) {\n            if (!(\"extensions\" in resultsArtifact))\n              resultsArtifact.extensions = {};\n            resultsArtifact.extensions[semAct.name] = extensionStorage;\n          }\n          return ret;\n        }\n        return ret;\n      }, []);\n    }\n  };\n}\n\n/* _compileShapeToAST - compile a shape expression to an abstract syntax tree.\n *\n * currently tested but not used.\n */\nfunction _compileShapeToAST (expression, tripleConstraints, schema) {\n\n  function Epsilon () {\n    this.type = \"Epsilon\";\n  }\n\n  function TripleConstraint (ordinal, predicate, inverse, negated, valueExpr) {\n    this.type = \"TripleConstraint\";\n    // this.ordinal = ordinal; @@ does 1card25\n    this.inverse = !!inverse;\n    this.negated = !!negated;\n    this.predicate = predicate;\n    if (valueExpr !== undefined)\n      this.valueExpr = valueExpr;\n  }\n\n  function Choice (disjuncts) {\n    this.type = \"Choice\";\n    this.disjuncts = disjuncts;\n  }\n\n  function EachOf (conjuncts) {\n    this.type = \"EachOf\";\n    this.conjuncts = conjuncts;\n  }\n\n  function SemActs (expression, semActs) {\n    this.type = \"SemActs\";\n    this.expression = expression;\n    this.semActs = semActs;\n  }\n\n  function KleeneStar (expression) {\n    this.type = \"KleeneStar\";\n    this.expression = expression;\n  }\n\n  function _compileExpression (expr, schema) {\n    var repeated, container;\n\n    /* _repeat: map expr with a min and max cardinality to a corresponding AST with Groups and Stars.\n       expr 1 1 => expr\n       expr 0 1 => Choice(expr, Eps)\n       expr 0 3 => Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps)\n       expr 2 5 => EachOf(expr, expr, Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps))\n       expr 0 * => KleeneStar(expr)\n       expr 1 * => EachOf(expr, KleeneStar(expr))\n       expr 2 * => EachOf(expr, expr, KleeneStar(expr))\n\n       @@TODO: favor Plus over Star if Epsilon not in expr.\n    */\n    function _repeat (expr, min, max) {\n      if (min === undefined) { min = 1; }\n      if (max === undefined) { max = 1; }\n\n      if (min === 1 && max === 1) { return expr; }\n\n      var opts = max === UNBOUNDED ?\n        new KleeneStar(expr) :\n        _seq(max - min).reduce(function (ret, elt, ord) {\n          return ord === 0 ?\n            new Choice([expr, new Epsilon]) :\n            new Choice([new EachOf([expr, ret]), new Epsilon]);\n        }, undefined);\n\n      var reqd = min !== 0 ?\n        new EachOf(_seq(min).map(function (ret) {\n          return expr; // @@ something with ret\n        }).concat(opts)) : opts;\n      return reqd;\n    }\n\n    if (typeof expr === \"string\") { // Inclusion\n      var included = schema._index.tripleExprs[expr].expression;\n      return _compileExpression(included, schema);\n    }\n\n    else if (expr.type === \"TripleConstraint\") {\n      // predicate, inverse, negated, valueExpr, annotations, semActs, min, max\n      var valueExpr = \"valueExprRef\" in expr ?\n        schema.valueExprDefns[expr.valueExprRef] :\n        expr.valueExpr;\n      var ordinal = tripleConstraints.push(expr)-1;\n      var tp = new TripleConstraint(ordinal, expr.predicate, expr.inverse, expr.negated, valueExpr);\n      repeated = _repeat(tp, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"OneOf\") {\n      container = new Choice(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"EachOf\") {\n      container = new EachOf(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else throw Error(\"unexpected expr type: \" + expr.type);\n  }\n\n  return expression ? _compileExpression(expression, schema) : new Epsilon();\n}\n\n// http://stackoverflow.com/questions/9422386/lazy-cartesian-product-of-arrays-arbitrary-nested-loops\nfunction crossProduct(sets, emptyValue) {\n  var n = sets.length, carets = [], args = null;\n\n  function init() {\n    args = [];\n    for (var i = 0; i < n; i++) {\n      carets[i] = 0;\n      args[i] = sets[i].length > 0 ? sets[i][0] : emptyValue;\n    }\n  }\n\n  function next() {\n\n    // special case: crossProduct([]).next().next() returns false.\n    if (args !== null && args.length === 0)\n      return false;\n\n    if (args === null) {\n      init();\n      return true;\n    }\n    var i = n - 1;\n    carets[i]++;\n    if (carets[i] < sets[i].length) {\n      args[i] = sets[i][carets[i]];\n      return true;\n    }\n    while (carets[i] >= sets[i].length) {\n      if (i == 0) {\n        return false;\n      }\n      carets[i] = 0;\n      args[i] = sets[i].length > 0 ? sets[i][0] : emptyValue;\n      carets[--i]++;\n    }\n    args[i] = sets[i][carets[i]];\n    return true;\n  }\n\n  return {\n    next: next,\n    do: function (block, _context) { // old API\n      return block.apply(_context, args);\n    },\n    // new API because\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments#Description\n    // cautions about functions over arguments.\n    get: function () { return args; }\n  };\n}\n\n/* N3jsTripleToString - simple toString function to make N3.js's triples\n * printable.\n */\nvar N3jsTripleToString = function () {\n  function fmt (n) {\n    return ShExTerm.isLiteral(n) ?\n      [ \"http://www.w3.org/2001/XMLSchema#integer\",\n        \"http://www.w3.org/2001/XMLSchema#float\",\n        \"http://www.w3.org/2001/XMLSchema#double\"\n      ].indexOf(ShExTerm.getLiteralType(n)) !== -1 ?\n      parseInt(ShExTerm.getLiteralValue(n)) :\n      n :\n    ShExTerm.isBlank(n) ?\n      n :\n      \"<\" + n + \">\";\n  }\n  return fmt(this.subject) + \" \" + fmt(this.predicate) + \" \" + fmt(this.object) + \" .\";\n};\n\n/* indexNeighborhood - index triples by predicate\n * returns: {\n *     byPredicate: Object: mapping from predicate to triples containing that\n *                  predicate.\n *\n *     candidates: [[1,3], [0,2]]: mapping from triple to the triple constraints\n *                 it matches.  It is initialized to []. Mappings that remain an\n *                 empty set indicate a triple which didn't matching anything in\n *                 the shape.\n *\n *     misses: list to recieve value constraint failures.\n *   }\n */\nfunction indexNeighborhood (triples) {\n  return {\n    byPredicate: triples.reduce(function (ret, t) {\n      var p = t.predicate;\n      if (!(p in ret))\n        ret[p] = [];\n      ret[p].push(t);\n\n      // If in VERBOSE mode, add a nice toString to N3.js's triple objects.\n      if (VERBOSE)\n        t.toString = N3jsTripleToString;\n\n      return ret;\n    }, {}),\n    candidates: _seq(triples.length).map(function () {\n      return [];\n    }),\n    misses: []\n  };\n}\n\n/* sparqlOrder - sort triples by subject following SPARQL partial ordering.\n */\nfunction sparqlOrder (l, r) {\n  var [lprec, rprec] = [l, r].map(\n    x => ShExTerm.isBlank(x) ? 1 : ShExTerm.isLiteral(x) ? 2 : 3\n  );\n  return lprec === rprec ? l.localeCompare(r) : lprec - rprec;\n}\n\n/* Return a list of n \"\"s.\n *\n * Note that Array(n) on its own returns a \"sparse array\" so Array(n).map(f)\n * never calls f.\n */\nfunction _seq (n) {\n  return n === 0 ?\n    [] :\n    Array(n).join(\" \").split(/ /); // hahaha, javascript, you suck.\n}\n\n/* Expect property p with value v in object o\n */\nfunction expect (o, p, v) {\n  if (!(p in o))\n    runtimeError(\"expected \"+JSON.stringify(o)+\" to have a '\"+p+\"' attribute.\");\n  if (arguments.length > 2 && o[p] !== v)\n    runtimeError(\"expected \"+p+\" attribute '\"+o[p]+\"' to equal '\"+v+\"'.\");\n}\n\nfunction noop () {  }\n\nfunction runtimeError () {\n  var errorStr = Array.prototype.join.call(arguments, \"\");\n  var e = new Error(errorStr);\n  Error.captureStackTrace(e, runtimeError);\n  throw e;\n}\n\n  function _alist (len) {\n    return _seq(len).map(() => [])\n  }\n\n  return {\n    construct: ShExValidator_constructor,\n    start: Start,\n    options: InterfaceOptions\n  };\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExValidatorCjsModule;\n"
        },
        {
          "id": 33,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/eval-threaded-nerr/eval-threaded-nerr.js",
          "name": "../eval-threaded-nerr/eval-threaded-nerr.js",
          "index": 23,
          "index2": 21,
          "size": 17810,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "issuerId": 32,
          "issuerName": "../shex-validator/shex-validator.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 32,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "name": "../shex-validator/shex-validator.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 366,
            "building": 21,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "@shexjs/eval-threaded-nerr",
              "loc": "239:48-85"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "const EvalThreadedNErrCjsModule = (function () {\nconst ShExTerm = require(\"@shexjs/term\");\nconst UNBOUNDED = -1;\n\nfunction vpEngine (schema, shape, index) {\n    var outerExpression = shape.expression;\n    return {\n      match:match\n    };\n\n    function match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, semActHandler, trace) {\n\n      /*\n       * returns: list of passing or failing threads (no heterogeneous lists)\n       */\n      function validateExpr (expr, thread) {\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return validateExpr(included, thread);\n        }\n\n        var constraintNo = constraintList.indexOf(expr);\n        var min = \"min\" in expr ? expr.min : 1;\n        var max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n\n        function validateRept (type, val) {\n          var repeated = 0, errOut = false;\n          var newThreads = [thread];\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          for (; repeated < max && !errOut; ++repeated) {\n            var inner = [];\n            for (var t = 0; t < newThreads.length; ++t) {\n              var newt = newThreads[t];\n              var sub = val(newt);\n              if (sub.length > 0 && sub[0].errors.length === 0) { // all subs pass or all fail\n                sub.forEach(newThread => {\n                  var solutions =\n                      \"expression\" in newt ? newt.expression.solutions : [];\n                  if (\"solution\" in newThread)\n                    solutions = solutions.concat(newThread.solution);\n                  delete newThread.solution;\n                  newThread.expression = extend({\n                    type: type,\n                    solutions: solutions\n                  }, minmax);\n                });\n              }\n              if (sub.length === 0 /* min:0 */ || sub[0].errors.length > 0)\n                return repeated < min ? sub : newThreads;\n              else\n                inner = inner.concat(sub);\n              // newThreads.expressions.push(sub);\n            }\n            newThreads = inner;\n          }\n          if (newThreads.length > 0 && newThreads[0].errors.length === 0 && \"semActs\" in expr) {\n            var passes = [];\n            var failures = [];\n            newThreads.forEach(newThread => {\n              const semActErrors = semActHandler.dispatchAll(expr.semActs, \"???\", newThread)\n              if (semActErrors.length === 0) {\n                passes.push(newThread)\n              } else {\n                [].push.apply(newThread.errors, semActErrors);\n                failures.push(newThread);\n              }\n            });\n            newThreads = passes.length > 0 ? passes : failures;\n          }\n          return newThreads;\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          var negated = \"negated\" in expr && expr.negated || max === 0;\n          if (negated)\n            min = max = Infinity;\n          if (thread.avail[constraintNo] === undefined)\n            thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].map(pair => pair.tNo);\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          var taken = thread.avail[constraintNo].splice(0, min);\n          var passed = negated ? taken.length === 0 : taken.length >= min;\n          var ret = [];\n          var matched = thread.matched;\n          if (passed) {\n            do {\n              const passFail = taken.reduce((acc, tripleNo) => {\n                const t = neighborhood[tripleNo]\n                const tested = {\n                  type: \"TestedTriple\",\n                  subject: t.subject,\n                  predicate: t.predicate,\n                  object: ldify(t.object)\n                }\n                var hit = constraintToTripleMapping[constraintNo].find(x => x.tNo === tripleNo);\n                if (hit.res && Object.keys(hit.res).length > 0)\n                  tested.referenced = hit.res;\n                const semActErrors = thread.errors.concat(\n                  \"semActs\" in expr\n                    ? semActHandler.dispatchAll(expr.semActs, t, tested)\n                    : []\n                )\n                if (semActErrors.length > 0)\n                  acc.fail.push({tripleNo, tested, semActErrors})\n                else\n                  acc.pass.push({tripleNo, tested, semActErrors})\n                return acc\n              }, {pass: [], fail: []})\n\n\n              // return an empty solution if min card was 0\n              if (passFail.fail.length === 0) {\n                // If we didn't take anything, fall back to old errors.\n                // Could do something fancy here with a semAct registration for negative matches.\n                const totalErrors = taken.length === 0 ? thread.errors.slice() : []\n                const myThread = makeThread(passFail.pass, totalErrors)\n                ret.push(myThread);\n              } else {\n                passFail.fail.forEach(\n                  f => ret.push(makeThread([f], f.semActErrors))\n                )\n              }\n\n              function makeThread (tests, errors) {\n                return {\n                  avail: thread.avail.map(a => { // copy parent thread's avail vector\n                    return a.slice();\n                  }),\n                  errors: errors,\n                  matched: matched.concat({\n                    tNos: tests.map(p => p.tripleNo)\n                  }),\n                  expression: extend(\n                    {\n                      type: \"TripleConstraintSolutions\",\n                      predicate: expr.predicate\n                    },\n                    \"valueExpr\" in expr ? { valueExpr: expr.valueExpr } : {},\n                    \"id\" in expr ? { productionLabel: expr.id } : {},\n                    minmax,\n                    {\n                      solutions: tests.map(p => p.tested)\n                    }\n                  )\n                }\n              }\n            } while ((function () {\n              if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                // build another thread.\n                taken.push(thread.avail[constraintNo].shift());\n                return true;\n              } else {\n                // no more threads\n                return false;\n              }\n            })());\n          } else {\n            var valueExpr = null;\n            if (typeof expr.valueExpr === \"string\") { // ShapeRef\n              valueExpr = expr.valueExpr;\n              if (ShExTerm.isBlank(valueExpr))\n                valueExpr = index.shapeExprs[valueExpr];\n            } else if (expr.valueExpr) {\n              valueExpr = extend({}, expr.valueExpr)\n            }\n            ret.push({\n              avail: thread.avail,\n              errors: thread.errors.concat([\n                extend({\n                  type: negated ? \"NegatedProperty\" : \"MissingProperty\",\n                  property: expr.predicate\n                }, valueExpr ? { valueExpr: valueExpr } : {})\n              ]),\n              matched: matched\n            });\n          }\n\n          return ret;\n        }\n\n        else if (expr.type === \"OneOf\") {\n          return validateRept(\"OneOfSolutions\", (th) => {\n            var accept = null;\n            var matched = [];\n            var failed = [];\n            expr.expressions.forEach(nested => {\n              var thcopy = {\n                avail: th.avail.map(a => { return a.slice(); }),\n                errors: th.errors,\n                matched: th.matched//.slice() ever needed??\n              };\n              var sub = validateExpr(nested, thcopy);\n              if (sub[0].errors.length === 0) { // all subs pass or all fail\n                matched = matched.concat(sub);\n                sub.forEach(newThread => {\n                  var expressions =\n                      \"solution\" in thcopy ? thcopy.solution.expressions : [];\n                  if (\"expression\" in newThread) // undefined for no matches on min card:0\n                    expressions = expressions.concat([newThread.expression]);\n                  delete newThread.expression;\n                  newThread.solution = {\n                    type: \"OneOfSolution\",\n                    expressions: expressions\n                  };\n                });\n              } else\n                failed = failed.concat(sub);\n            });\n            return matched.length > 0 ? matched : failed;\n          });\n        }\n\n        else if (expr.type === \"EachOf\") {\n          return homogenize(validateRept(\"EachOfSolutions\", (th) => {\n            // Iterate through nested expressions, exprThreads starts as [th].\n            return expr.expressions.reduce((exprThreads, nested) => {\n              // Iterate through current thread list composing nextThreads.\n              // Consider e.g.\n              // <S1> { <p1> . | <p2> .; <p3> . } / { <x> <p2> 2; <p3> 3 } (should pass)\n              // <S1> { <p1> .; <p2> . }          / { <s1> <p1> 1 }        (should fail)\n              return homogenize(exprThreads.reduce((nextThreads, exprThread) => {\n                var sub = validateExpr(nested, exprThread);\n                // Move newThread.expression into a hierarchical solution structure.\n                sub.forEach(newThread => {\n                  if (newThread.errors.length === 0) {\n                    var expressions =\n                        \"solution\" in exprThread ? exprThread.solution.expressions : [];\n                    if (\"expression\" in newThread) // undefined for no matches on min card:0\n                      expressions = expressions.concat([newThread.expression]);\n                    // console.warn(threadMatched(newThread), \" vs \", exprMatched(expressions));\n                    delete newThread.expression;\n                    newThread.solution = {\n                      type: \"EachOfSolution\",\n                      expressions: expressions // exprThread.expression + newThread.expression\n                    };\n                  }\n                });\n                return nextThreads.concat(sub);\n              }, []));\n            }, [th]);\n          }));\n        }\n\n        runtimeError(\"unexpected expr type: \" + expr.type);\n\n        function homogenize (list) {\n          return list.reduce((acc, elt) => {\n            if (elt.errors.length === 0) {\n              if (acc.errors) {\n                return { errors: false, l: [elt] };\n              } else {\n                return { errors: false, l: acc.l.concat(elt) };\n              }\n            } else {\n              if (acc.errors) {\n                return { errors: true, l: acc.l.concat(elt) };\n              } else {\n                return acc; }\n            }\n          }, {errors: true, l: []}).l;\n        }\n      }\n\n      var startingThread = {\n        avail:[],   // triples remaining by constraint number\n        matched:[], // triples matched in this thread\n        errors:[]   // errors encounted\n      };\n      if (!outerExpression)\n        return { }; // vapid match if no expression\n      var ret = validateExpr(outerExpression, startingThread);\n      // console.log(JSON.stringify(ret));\n      // note: don't return if ret.length === 1 because it might fail the unmatchedTriples test.\n      var longerChosen =\n          ret.reduce((ret, elt) => {\n            if (elt.errors.length > 0)\n              return ret;              // early return\n            var unmatchedTriples = {};\n            // Collect triples assigned to some constraint.\n            Object.keys(tripleToConstraintMapping).forEach(k => {\n              if (tripleToConstraintMapping[k] !== \"NO_TRIPLE_CONSTRAINT\")\n                unmatchedTriples[k] = tripleToConstraintMapping[k];\n            });\n            // Removed triples matched in this thread.\n            elt.matched.forEach(m => {\n              m.tNos.forEach(t => {\n                delete unmatchedTriples[t];\n              });\n            });\n            // Remaining triples are unaccounted for.\n            Object.keys(unmatchedTriples).forEach(t => {\n              elt.errors.push({\n                type: \"ExcessTripleViolation\",\n                triple: neighborhood[t],\n                constraint: constraintList[unmatchedTriples[t]]\n              });\n            });\n            return ret !== null ? ret : // keep first solution\n            // Accept thread with no unmatched triples.\n            Object.keys(unmatchedTriples).length > 0 ? null : elt;\n          }, null);\n      return longerChosen !== null ?\n        finish(longerChosen.expression, constraintList,\n               neighborhood, semActHandler) :\n        ret.length > 1 ? {\n          type: \"PossibleErrors\",\n          errors: ret.reduce((all, e) => {\n            return all.concat([e.errors]);\n          }, [])\n        } : ret[0];\n    }\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function finish (fromValidatePoint, constraintList, neighborhood, semActHandler) {\n      function _dive (solns) {\n        if (solns.type === \"OneOfSolutions\" ||\n            solns.type === \"EachOfSolutions\") {\n          solns.solutions.forEach(s => {\n            s.expressions.forEach(e => {\n              _dive(e);\n            });\n          });\n        } else if (solns.type === \"TripleConstraintSolutions\") {\n          solns.solutions = solns.solutions.map(x => {\n            if (x.type === \"TestedTriple\") // already done\n              return x; // c.f. validation/3circularRef1_pass-open\n            var t = neighborhood[x.tripleNo];\n            var expr = constraintList[x.constraintNo];\n            var ret = {\n              type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)\n            };\n            function diver (focus, shapeLabel, dive) {\n              var sub = dive(focus, shapeLabel);\n              if (\"errors\" in sub) {\n                // console.dir(sub);\n                var err = {\n                  type: \"ReferenceError\", focus: focus,\n                  shape: shapeLabel\n                };\n                if (typeof shapeLabel === \"string\" && ShExTerm.isBlank(shapeLabel))\n                  err.referencedShape = shape;\n                err.errors = sub;\n                return [err];\n              }\n              if ((\"solution\" in sub || \"solutions\" in sub)&& Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                  sub.type === \"Recursion\")\n                ret.referenced = sub; // !!! needs to aggregate errors and solutions\n              return [];\n            }\n            function diveRecurse (focus, shapeLabel) {\n              return diver(focus, shapeLabel, recurse);\n            }\n            function diveDirect (focus, shapeLabel) {\n              return diver(focus, shapeLabel, direct);\n            }\n            var subErrors = \"valueExpr\" in expr ?\n                checkValueExpr(expr.inverse ? t.subject : t.object, expr.valueExpr, diveRecurse, diveDirect) :\n                [];\n            if (subErrors.length === 0 && \"semActs\" in expr)\n              [].push.apply(subErrors, semActHandler.dispatchAll(expr.semActs, t, ret))\n            if (subErrors.length > 0) {\n              fromValidatePoint.errors = fromValidatePoint.errors || [];\n              fromValidatePoint.errors = fromValidatePoint.errors.concat(subErrors);\n            }\n            return ret;\n          });\n        } else {\n          throw Error(\"unexpected expr type in \" + JSON.stringify(solns));\n        }\n      }\n      if (Object.keys(fromValidatePoint).length > 0) // guard against {}\n        _dive(fromValidatePoint);\n      if (\"semActs\" in shape)\n        fromValidatePoint.semActs = shape.semActs;\n      return fromValidatePoint;\n    }\n  }\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: N3Util.getLiteralValue(term) };\n          var dt = N3Util.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = N3Util.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\nreturn {\n  name: \"eval-threaded-nerr\",\n  description: \"emulation of regular expression engine with error permutations\",\n  compile: vpEngine\n};\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = EvalThreadedNErrCjsModule;\n"
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "index": 24,
          "index2": 47,
          "size": 11297,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/api",
              "loc": "8:20-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExLoader** return promise to load ShExC, ShExJ and N3 (Turtle) files.\n\nconst ShExApiCjsModule = function (config) {\n\n  const ShExUtil = require(\"@shexjs/util\");\n  const ShExParser = require(\"@shexjs/parser\");\n\n  const api = { load: LoadPromise, loadExtensions: LoadExtensions, GET: GET, loadShExImports_NotUsed: loadShExImports_NotUsed };\n  return api\n  \n  async function GET (url, mediaType) {\n    var m;\n    return (m = url.match(\"^data:([^,]+),(.*)$\"))\n      ? Promise.resolve({text: m[2], url: m[0]}) // Read from data: URL\n      : (url.match(\"^(blob:)?[a-z]+://.\"))\n      ? myHttpRequest(url, mediaType) // whatever fetch handles\n      : (() => { throw Error(`Don't know how to fetch ${url}`) })()\n\n    async function myHttpRequest(url, mediaType) {\n      if (typeof config.fetch !== \"function\")\n        throw Error(`Unable to fetch ${url} with fetch=${config.fetch}`)\n      let resp\n      try {\n        resp = await config.fetch(url, {\n          headers: {\n            'Accept': 'text/shex,text/turtle,*/*'\n          }\n        })\n      } catch (e) {\n        // DNS failure\n        // no route to host\n        // connection refused\n        throw Error(`GET <${url}> network failure: ${e.message}`)\n      }\n      if (!resp.ok)\n        throw Error(`GET <${url}> failed: ${resp.status} ${resp.statusText}`)\n      const text = await resp.text()\n      return {text, url}\n    }\n  }\n\n  function loadList (src, metaList, mediaType, parserWrapper, target, options, loadImports) {\n    return src.map(\n      async p =>\n        typeof p === \"object\" ? mergeSchema(p) : await loadParseMergeSchema(p)\n    )\n\n    async function mergeSchema (obj) {\n      var meta = addMeta(obj.url, mediaType)\n      try {\n        ShExUtil.merge(target, obj.schema, true, true)\n        meta._prefixes = target._prefixes || {}\n        meta.base = target._base\n        loadImports(obj.schema)\n        return [mediaType, obj.url]\n      } catch (e) {\n        var e2 = Error(\"error merging schema object \" + obj.schema + \": \" + e)\n        e2.stack = e.stack\n        throw e2\n      }\n    }\n\n    async function loadParseMergeSchema (p) {\n      return api.GET(p, mediaType).then(function (loaded) {\n        return parserWrapper(loaded.text, mediaType, loaded.url, target,\n                             addMeta(loaded.url, mediaType), options, loadImports)\n      })\n    }\n\n    function addMeta (url, mediaType) {\n      var meta = {\n        mediaType: mediaType,\n        url: url,\n        base: url,\n        prefixes: {}\n      }\n      metaList.push(meta)\n      return meta\n    }\n  }\n\n  /* LoadPromise - load shex and json files into a single Schema and turtle into\n   * a graph (Data).\n   */\n  async function LoadPromise (shex, json, turtle, jsonld, schemaOptions = {}, dataOptions = {}) {\n    var returns = {\n      schema: ShExUtil.emptySchema(),\n      data: new config.rdfjs.Store(),\n      schemaMeta: [],\n      dataMeta: []\n    }\n    var promises = []\n    var schemasSeen = shex.concat(json).map(p => {\n      // might be already loaded objects with a url property.\n      return typeof p === \"object\" ? p.url : p\n    })\n    var transform = null\n    if (schemaOptions && \"iriTransform\" in schemaOptions) {\n      transform = schemaOptions.iriTransform\n      delete schemaOptions.iriTransform\n    }\n\n    var allLoaded = DynamicPromise()\n    function loadImports (schema) {\n      if (!(\"imports\" in schema))\n        return schema\n      if (schemaOptions.keepImports) {\n        return schema\n      }\n      var ret = Object.assign({}, schema)\n      var imports = ret.imports\n      delete ret.imports\n      schema.imports.map(function (i) {\n        return transform ? transform(i) : i\n      }).filter(function (i) {\n        return schemasSeen.indexOf(i) === -1\n      }).map(i => {\n        schemasSeen.push(i)\n        allLoaded.add(api.GET(i).then(function (loaded) {\n          var meta = {\n            // mediaType: mediaType,\n            url: loaded.url,\n            base: loaded.url,\n            prefixes: {}\n          }\n          // metaList.push(meta)\n          return parseShExC(loaded.text, \"text/shex\", loaded.url,\n                            returns.schema, meta, schemaOptions, loadImports)\n        })); // addAfter would be after invoking schema.\n      })\n      return ret\n    }\n\n    // gather all the potentially remote inputs\n    // If there's a termResolver,\n    if (schemaOptions && \"termResolver\" in schemaOptions) {\n      returns.resolver = new config.rdfjs.Store()\n      returns.resolverMeta = []\n      // load the resolver then the schema sources,\n      promises = [Promise.all(loadList(schemaOptions.termResolver, returns.resolverMeta, \"text/turtle\",\n                                       parseTurtle, returns.resolver, dataOptions)).\n                  then(function (x) {\n                    return Promise.all(loadList(shex, returns.schemaMeta, \"text/shex\",\n                                                parseShExC, returns.schema, schemaOptions, loadImports))\n                  })]\n      schemaOptions.termResolver = ShExParser.dbTermResolver(returns.resolver)\n    } else {\n      // else just load the schema sources.\n      promises = loadList(shex, returns.schemaMeta, \"text/shex\",\n                          parseShExC, returns.schema, schemaOptions, loadImports)\n    }\n    promises = promises.\n      concat(loadList(json, returns.schemaMeta, \"text/json\",\n                      parseShExJ, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(turtle, returns.dataMeta, \"text/turtle\",\n                      parseTurtle, returns.data, dataOptions)).\n      concat(loadList(jsonld, returns.dataMeta, \"application/ld+json\",\n                      parseJSONLD, returns.data, dataOptions))\n    return allLoaded.all(promises).then(function (resources) {\n      if (returns.schemaMeta.length > 0)\n        ShExUtil.isWellDefined(returns.schema)\n      return returns\n    })\n  }\n\n  function DynamicPromise () {\n    var promises = []\n    var results = []\n    var completedPromises = 0\n    var resolveSelf, rejectSelf\n    var self = new Promise(function (resolve, reject) {\n      resolveSelf = resolve; rejectSelf = reject\n    })\n    self.all = function (pz) {\n      pz.forEach(function (promise, index) {\n        promises.push(promise)\n        addThen(promise, index)\n      })\n      return self\n    }\n    self.add = function (promise) {\n      promises.push(promise)\n      addThen(promise, promises.length - 1)\n      return self\n    }\n    return self\n\n    function addThen (promise, index) {\n      promise.then(function (value) {\n        results[index] = value\n        ++completedPromises\n        if(completedPromises === promises.length) {\n          resolveSelf(results)\n        }\n      }).catch(function (error) {\n        rejectSelf(error)\n      })\n    }\n  }\n\n  function parseShExC (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    var parser = schemaOptions && \"parser\" in schemaOptions ?\n        schemaOptions.parser :\n        ShExParser.construct(url, {}, schemaOptions)\n    try {\n      var s = parser.parse(text)\n      // !! horrible hack until I set a variable to know if there's a BASE.\n      if (s.base === url) delete s.base\n      meta.prefixes = s._prefixes || {}\n      meta.base = s._base || meta.base\n      ShExUtil.merge(schema, loadImports(s), false, true)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      e.message = \"error parsing ShEx \" + url + \": \" + e.message\n      return Promise.reject(e)\n    }\n  }\n\n  function loadShExImports_NotUsed (from, parser, transform) {\n    var schemasSeen = [from]\n    var ret = { type: \"Schema\" }\n    return api.GET(from).then(load999Imports).then(function () {\n      ShExUtil.isWellDefined(ret)\n      return ret\n    })\n    function load999Imports (loaded) {\n      var schema = parser.parse(loaded.text)\n      var imports = schema.imports\n      delete schema.imports\n      ShExUtil.merge(ret, schema, false, true)\n      if (imports) {\n        var rest = imports\n            .map(function (i) {\n              return transform ? transform(i) : i\n            }).\n            filter(function (i) {\n              return schemasSeen.indexOf(i) === -1\n            })\n        return Promise.all(rest.map(i => {\n          schemasSeen.push(i)\n          return api.GET(i).then(load999Imports)\n        })).then(a => {\n          return null\n        })\n      } else {\n        return null\n      }\n    }\n  }\n\n  function parseShExJ (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    try {\n      var s = ShExUtil.ShExJtoAS(JSON.parse(text))\n      ShExUtil.merge(schema, s, true, true)\n      meta.prefixes = schema._prefixes\n      meta.base = schema.base\n      loadImports(s)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      var e2 = Error(\"error parsing JSON \" + url + \": \" + e)\n      // e2.stack = e.stack\n      return Promise.reject(e2)\n    }\n  }\n\n  function parseTurtle (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"}).\n        parse(text,\n              function (error, triple, prefixes) {\n                if (prefixes) {\n                  meta.prefixes = prefixes\n                  // data.addPrefixes(prefixes)\n                }\n                if (error) {\n                  reject(\"error parsing \" + url + \": \" + error)\n                } else if (triple) {\n                  data.addQuad(triple)\n                } else {\n                  meta.base = this._base\n                  resolve([mediaType, url])\n                }\n              })\n    })\n  }\n\n  /* parseTurtle999 - a variant of parseTurtle with no callback.\n   * so, which is \"better\"?\n   */\n  function parseTurtle999 (text, mediaType, url, data, meta, dataOptions) {\n    try {\n      var p = new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"})\n      var triples = p.parse(text)\n      meta.prefixes = p._prefixes\n      meta.base = p._base\n      data.addPrefixes(p._prefixes)\n      data.addTriples(triples)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      return Promise.reject(Error(\"error parsing \" + url + \": \" + e))\n    }\n  }\n\n  function parseJSONLD (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      var struct = JSON.parse(text)\n      config.jsonld.toRDF(struct, {format: \"application/nquads\", base: url}, function (lderr, nquads) {\n        if (lderr) {\n          reject(\"error parsing JSON-ld \" + url + \": \" + lderr)\n        } else {\n          meta.prefixes = {}; // @@ take from @context?\n          meta.base = url;    // @@ take from @context.base? (or vocab?)\n          resolve(parseTurtle(nquads, mediaType, url, data, meta))\n        }\n      })\n    })\n  }\n\n  function LoadExtensions (globs) {\n    return globs.reduce(\n      (list, glob) =>\n        list.concat(require(\"glob\").glob.sync(glob))\n      , []).\n      reduce(function (ret, path) {\n        try {\n\t  var t = require(path)\n\t  ret[t.url] = t\n\t  return ret\n        } catch (e) {\n\t  console.warn(\"ShEx extension \\\"\" + moduleDir + \"\\\" not loadable: \" + e)\n\t  return ret\n        }\n      }, {})\n  }\n\n}\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExApiCjsModule\n"
        },
        {
          "id": 35,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "index": 26,
          "index2": 23,
          "size": 228557,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "issuerId": 15,
          "issuerName": "../shex-parser/shex-parser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 10,
            "building": 166,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 15,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "module": "../shex-parser/shex-parser.js",
              "moduleName": "../shex-parser/shex-parser.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExJison",
              "loc": "4:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShExJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[7,19,20,21,22,24,25,32,195,217,218],$V1=[1,27],$V2=[1,31],$V3=[1,26],$V4=[1,30],$V5=[1,29],$V6=[2,12],$V7=[2,13],$V8=[2,14],$V9=[2,15],$Va=[7,19,20,21,22,24,25,32,217,218],$Vb=[1,37],$Vc=[1,40],$Vd=[1,39],$Ve=[2,24],$Vf=[2,25],$Vg=[20,22,28,71,73,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vh=[2,63],$Vi=[1,52],$Vj=[1,53],$Vk=[1,54],$Vl=[20,22,28,41,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vm=[2,241],$Vn=[2,242],$Vo=[1,56],$Vp=[1,59],$Vq=[1,58],$Vr=[2,263],$Vs=[2,264],$Vt=[2,271],$Vu=[2,265],$Vv=[2,266],$Vw=[2,16],$Vx=[2,18],$Vy=[2,19],$Vz=[2,22],$VA=[20,22,29,217],$VB=[2,20],$VC=[20,22,28,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$VD=[1,80],$VE=[2,32],$VF=[2,33],$VG=[2,34],$VH=[121,127,129,190,221],$VI=[2,141],$VJ=[1,106],$VK=[1,108],$VL=[1,102],$VM=[1,92],$VN=[1,97],$VO=[1,98],$VP=[1,99],$VQ=[1,105],$VR=[1,112],$VS=[1,113],$VT=[1,114],$VU=[1,115],$VV=[1,116],$VW=[1,117],$VX=[1,118],$VY=[1,119],$VZ=[1,120],$V_=[1,109],$V$=[1,107],$V01=[2,64],$V11=[1,122],$V21=[1,123],$V31=[1,124],$V41=[1,130],$V51=[1,131],$V61=[53,55],$V71=[2,93],$V81=[2,94],$V91=[195,197],$Va1=[1,146],$Vb1=[1,149],$Vc1=[1,148],$Vd1=[2,17],$Ve1=[1,162],$Vf1=[1,165],$Vg1=[1,164],$Vh1=[7,19,20,21,22,24,25,32,53,217,218],$Vi1=[2,49],$Vj1=[7,19,20,21,22,24,25,32,53,55,217,218],$Vk1=[2,56],$Vl1=[2,38],$Vm1=[2,71],$Vn1=[2,76],$Vo1=[2,73],$Vp1=[1,192],$Vq1=[1,193],$Vr1=[1,194],$Vs1=[1,197],$Vt1=[1,200],$Vu1=[2,79],$Vv1=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,191,195,217,218,221],$Vw1=[2,97],$Vx1=[7,19,20,21,22,24,25,32,53,55,191,195,217,218],$Vy1=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,191,195,217,218],$Vz1=[7,19,20,21,22,24,25,32,53,55,81,82,83,103,104,105,106,121,127,129,190,191,195,217,218,221],$VA1=[2,110],$VB1=[2,109],$VC1=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,114,115,116,117,118,119,191,195,217,218],$VD1=[2,104],$VE1=[2,103],$VF1=[1,215],$VG1=[1,217],$VH1=[1,219],$VI1=[1,218],$VJ1=[2,114],$VK1=[2,115],$VL1=[2,116],$VM1=[2,112],$VN1=[2,240],$VO1=[20,22,29,73,83,102,110,111,166,186,206,207,208,209,210,211,212,213,214,215,217],$VP1=[2,185],$VQ1=[7,19,20,21,22,24,25,32,53,55,114,115,116,117,118,119,191,195,217,218],$VR1=[2,106],$VS1=[2,120],$VT1=[2,267],$VU1=[2,268],$VV1=[2,269],$VW1=[2,270],$VX1=[1,227],$VY1=[1,228],$VZ1=[1,229],$V_1=[1,230],$V$1=[102,110,111,208,209,210,211],$V02=[2,37],$V12=[2,41],$V22=[2,44],$V32=[2,47],$V42=[2,95],$V52=[2,232],$V62=[2,233],$V72=[2,234],$V82=[1,279],$V92=[1,281],$Va2=[1,275],$Vb2=[1,265],$Vc2=[1,270],$Vd2=[1,271],$Ve2=[1,272],$Vf2=[1,278],$Vg2=[1,282],$Vh2=[1,280],$Vi2=[1,286],$Vj2=[1,287],$Vk2=[1,288],$Vl2=[1,294],$Vm2=[1,295],$Vn2=[2,23],$Vo2=[2,26],$Vp2=[2,55],$Vq2=[2,62],$Vr2=[2,67],$Vs2=[2,70],$Vt2=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,217,218],$Vu2=[2,89],$Vv2=[2,90],$Vw2=[2,35],$Vx2=[2,39],$Vy2=[2,75],$Vz2=[2,72],$VA2=[2,77],$VB2=[2,74],$VC2=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,191,195,217,218],$VD2=[1,340],$VE2=[1,348],$VF2=[1,349],$VG2=[1,350],$VH2=[1,356],$VI2=[1,357],$VJ2=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,195,217,218,221],$VK2=[2,230],$VL2=[7,19,20,21,22,24,25,32,53,55,195,217,218],$VM2=[1,365],$VN2=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,195,217,218],$VO2=[2,108],$VP2=[2,113],$VQ2=[2,100],$VR2=[1,375],$VS2=[2,101],$VT2=[2,102],$VU2=[2,107],$VV2=[20,22,71,162,166,201,217],$VW2=[2,169],$VX2=[2,143],$VY2=[1,390],$VZ2=[1,389],$V_2=[1,395],$V$2=[1,399],$V03=[1,398],$V13=[1,397],$V23=[1,404],$V33=[1,406],$V43=[1,407],$V53=[1,403],$V63=[1,405],$V73=[20,22,217,218],$V83=[1,419],$V93=[1,425],$Va3=[1,414],$Vb3=[1,418],$Vc3=[1,428],$Vd3=[1,429],$Ve3=[1,430],$Vf3=[1,411],$Vg3=[1,417],$Vh3=[1,431],$Vi3=[1,432],$Vj3=[1,437],$Vk3=[1,438],$Vl3=[1,439],$Vm3=[1,440],$Vn3=[1,433],$Vo3=[1,434],$Vp3=[1,435],$Vq3=[1,436],$Vr3=[1,424],$Vs3=[2,119],$Vt3=[2,124],$Vu3=[2,126],$Vv3=[2,127],$Vw3=[2,128],$Vx3=[2,255],$Vy3=[2,256],$Vz3=[2,257],$VA3=[2,258],$VB3=[2,125],$VC3=[2,36],$VD3=[2,45],$VE3=[2,42],$VF3=[2,48],$VG3=[2,43],$VH3=[1,472],$VI3=[2,46],$VJ3=[1,508],$VK3=[1,542],$VL3=[1,543],$VM3=[1,544],$VN3=[1,547],$VO3=[2,50],$VP3=[2,57],$VQ3=[2,66],$VR3=[2,68],$VS3=[2,78],$VT3=[53,55,72],$VU3=[1,607],$VV3=[53,55,72,81,82,83,121,127,129,190,191,195,221],$VW3=[53,55,72,191,195],$VX3=[53,55,72,98,99,100,103,104,105,106,191,195],$VY3=[53,55,72,81,82,83,103,104,105,106,121,127,129,190,191,195,221],$VZ3=[53,55,72,103,104,105,106,114,115,116,117,118,119,191,195],$V_3=[53,55,72,114,115,116,117,118,119,191,195],$V$3=[53,72],$V04=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,217,218,221],$V14=[2,99],$V24=[2,98],$V34=[2,229],$V44=[1,649],$V54=[1,651],$V64=[1,652],$V74=[1,648],$V84=[1,650],$V94=[2,96],$Va4=[2,136],$Vb4=[2,111],$Vc4=[2,105],$Vd4=[2,117],$Ve4=[2,118],$Vf4=[2,148],$Vg4=[2,149],$Vh4=[1,669],$Vi4=[2,150],$Vj4=[123,137],$Vk4=[2,155],$Vl4=[2,156],$Vm4=[2,158],$Vn4=[1,672],$Vo4=[1,673],$Vp4=[20,22,166,201,217],$Vq4=[2,177],$Vr4=[1,681],$Vs4=[123,137,142,143],$Vt4=[2,167],$Vu4=[20,22,121,127,129,190,217,218,221],$Vv4=[20,22,121,127,129,166,190,201,217,221],$Vw4=[2,238],$Vx4=[2,239],$Vy4=[2,184],$Vz4=[1,716],$VA4=[20,22,29,73,83,102,110,111,166,179,186,206,207,208,209,210,211,212,213,214,215,217],$VB4=[2,235],$VC4=[2,236],$VD4=[2,237],$VE4=[2,248],$VF4=[2,251],$VG4=[2,245],$VH4=[2,246],$VI4=[2,247],$VJ4=[2,253],$VK4=[2,254],$VL4=[2,259],$VM4=[2,260],$VN4=[2,261],$VO4=[2,262],$VP4=[20,22,29,73,83,102,110,111,113,166,179,186,206,207,208,209,210,211,212,213,214,215,217],$VQ4=[1,748],$VR4=[1,795],$VS4=[1,850],$VT4=[1,860],$VU4=[1,896],$VV4=[1,932],$VW4=[2,69],$VX4=[53,55,72,103,104,105,106,191,195],$VY4=[53,55,72,81,82,83,121,127,129,190,195,221],$VZ4=[53,55,72,195],$V_4=[1,954],$V$4=[53,55,72,98,99,100,103,104,105,106,195],$V05=[1,964],$V15=[1,1001],$V25=[1,1037],$V35=[2,231],$V45=[1,1048],$V55=[1,1050],$V65=[1,1051],$V75=[1,1049],$V85=[20,22,102,110,111,166,206,207,208,209,210,211,212,213,214,215,217],$V95=[1,1074],$Va5=[1,1076],$Vb5=[1,1077],$Vc5=[1,1075],$Vd5=[1,1100],$Ve5=[1,1102],$Vf5=[1,1103],$Vg5=[1,1101],$Vh5=[2,137],$Vi5=[2,151],$Vj5=[2,153],$Vk5=[2,157],$Vl5=[2,159],$Vm5=[2,160],$Vn5=[2,164],$Vo5=[2,166],$Vp5=[2,171],$Vq5=[2,172],$Vr5=[1,1132],$Vs5=[1,1134],$Vt5=[1,1135],$Vu5=[1,1131],$Vv5=[1,1133],$Vw5=[1,1145],$Vx5=[2,225],$Vy5=[2,243],$Vz5=[2,244],$VA5=[1,1147],$VB5=[1,1149],$VC5=[1,1151],$VD5=[20,22,29,73,83,102,110,111,166,180,186,206,207,208,209,210,211,212,213,214,215,217],$VE5=[1,1155],$VF5=[1,1161],$VG5=[1,1164],$VH5=[1,1165],$VI5=[1,1166],$VJ5=[1,1154],$VK5=[1,1167],$VL5=[1,1168],$VM5=[1,1173],$VN5=[1,1174],$VO5=[1,1175],$VP5=[1,1176],$VQ5=[1,1169],$VR5=[1,1170],$VS5=[1,1171],$VT5=[1,1172],$VU5=[1,1160],$VV5=[2,249],$VW5=[2,252],$VX5=[2,129],$VY5=[1,1210],$VZ5=[1,1216],$V_5=[1,1248],$V$5=[1,1254],$V06=[1,1313],$V16=[1,1360],$V26=[53,55,72,81,82,83,121,127,129,190,221],$V36=[53,55,72,98,99,100,103,104,105,106],$V46=[1,1436],$V56=[1,1483],$V66=[2,226],$V76=[2,227],$V86=[2,228],$V96=[7,19,20,21,22,24,25,32,53,55,81,82,83,113,121,127,129,190,191,195,217,218,221],$Va6=[7,19,20,21,22,24,25,32,53,55,113,191,195,217,218],$Vb6=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,113,191,195,217,218],$Vc6=[2,154],$Vd6=[2,152],$Ve6=[2,161],$Vf6=[2,165],$Vg6=[2,162],$Vh6=[2,163],$Vi6=[20,22,28,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vj6=[1,1543],$Vk6=[72,137],$Vl6=[1,1546],$Vm6=[1,1547],$Vn6=[72,137,142,143],$Vo6=[2,208],$Vp6=[1,1563],$Vq6=[20,22,29,73,83,102,110,111,166,179,180,186,206,207,208,209,210,211,212,213,214,215,217],$Vr6=[20,22,29,73,83,102,110,111,113,166,179,180,186,206,207,208,209,210,211,212,213,214,215,217],$Vs6=[2,250],$Vt6=[1,1601],$Vu6=[1,1667],$Vv6=[1,1669],$Vw6=[1,1670],$Vx6=[1,1668],$Vy6=[1,1693],$Vz6=[1,1695],$VA6=[1,1696],$VB6=[1,1694],$VC6=[1,1719],$VD6=[1,1721],$VE6=[1,1722],$VF6=[1,1720],$VG6=[1,1766],$VH6=[1,1772],$VI6=[1,1804],$VJ6=[1,1810],$VK6=[1,1825],$VL6=[1,1827],$VM6=[1,1828],$VN6=[1,1826],$VO6=[1,1851],$VP6=[1,1853],$VQ6=[1,1854],$VR6=[1,1852],$VS6=[1,1877],$VT6=[1,1879],$VU6=[1,1880],$VV6=[1,1878],$VW6=[1,1924],$VX6=[1,1930],$VY6=[1,1962],$VZ6=[1,1968],$V_6=[123,137,142,143,191,195],$V$6=[2,174],$V07=[1,1986],$V17=[1,1987],$V27=[1,1988],$V37=[1,1989],$V47=[123,137,142,143,158,159,160,161,191,195],$V57=[2,40],$V67=[53,123,137,142,143,158,159,160,161,191,195],$V77=[2,53],$V87=[53,55,123,137,142,143,158,159,160,161,191,195],$V97=[2,60],$Va7=[1,2018],$Vb7=[1,2059],$Vc7=[1,2092],$Vd7=[1,2094],$Ve7=[1,2095],$Vf7=[1,2093],$Vg7=[1,2118],$Vh7=[1,2120],$Vi7=[1,2121],$Vj7=[1,2119],$Vk7=[1,2145],$Vl7=[1,2147],$Vm7=[1,2148],$Vn7=[1,2146],$Vo7=[1,2172],$Vp7=[1,2174],$Vq7=[1,2175],$Vr7=[1,2173],$Vs7=[1,2198],$Vt7=[1,2200],$Vu7=[1,2201],$Vv7=[1,2199],$Vw7=[1,2225],$Vx7=[1,2227],$Vy7=[1,2228],$Vz7=[1,2226],$VA7=[1,2300],$VB7=[53,55,72,81,82,83,113,121,127,129,190,191,195,221],$VC7=[53,55,72,113,191,195],$VD7=[53,55,72,98,99,100,103,104,105,106,113,191,195],$VE7=[1,2414],$VF7=[2,175],$VG7=[2,179],$VH7=[2,180],$VI7=[2,181],$VJ7=[2,182],$VK7=[2,51],$VL7=[2,58],$VM7=[2,65],$VN7=[2,85],$VO7=[2,81],$VP7=[2,87],$VQ7=[1,2497],$VR7=[2,84],$VS7=[53,55,81,82,83,103,104,105,106,121,123,127,129,137,142,143,158,159,160,161,190,191,195,221],$VT7=[53,55,81,82,83,121,123,127,129,137,142,143,158,159,160,161,190,191,195,221],$VU7=[53,55,103,104,105,106,114,115,116,117,118,119,123,137,142,143,158,159,160,161,191,195],$VV7=[53,55,98,99,100,103,104,105,106,123,137,142,143,158,159,160,161,191,195],$VW7=[2,91],$VX7=[2,92],$VY7=[53,55,114,115,116,117,118,119,123,137,142,143,158,159,160,161,191,195],$VZ7=[1,2551],$V_7=[1,2557],$V$7=[1,2640],$V08=[1,2673],$V18=[1,2675],$V28=[1,2676],$V38=[1,2674],$V48=[1,2699],$V58=[1,2701],$V68=[1,2702],$V78=[1,2700],$V88=[1,2726],$V98=[1,2728],$Va8=[1,2729],$Vb8=[1,2727],$Vc8=[1,2753],$Vd8=[1,2755],$Ve8=[1,2756],$Vf8=[1,2754],$Vg8=[1,2779],$Vh8=[1,2781],$Vi8=[1,2782],$Vj8=[1,2780],$Vk8=[1,2806],$Vl8=[1,2808],$Vm8=[1,2809],$Vn8=[1,2807],$Vo8=[1,2853],$Vp8=[1,2886],$Vq8=[1,2888],$Vr8=[1,2889],$Vs8=[1,2887],$Vt8=[1,2912],$Vu8=[1,2914],$Vv8=[1,2915],$Vw8=[1,2913],$Vx8=[1,2939],$Vy8=[1,2941],$Vz8=[1,2942],$VA8=[1,2940],$VB8=[1,2966],$VC8=[1,2968],$VD8=[1,2969],$VE8=[1,2967],$VF8=[1,2992],$VG8=[1,2994],$VH8=[1,2995],$VI8=[1,2993],$VJ8=[1,3019],$VK8=[1,3021],$VL8=[1,3022],$VM8=[1,3020],$VN8=[123,137,142,143,195],$VO8=[1,3044],$VP8=[2,54],$VQ8=[2,61],$VR8=[2,80],$VS8=[2,86],$VT8=[2,82],$VU8=[2,88],$VV8=[53,55,103,104,105,106,123,137,142,143,158,159,160,161,191,195],$VW8=[1,3068],$VX8=[72,137,142,143,191,195],$VY8=[1,3077],$VZ8=[1,3078],$V_8=[1,3079],$V$8=[1,3080],$V09=[72,137,142,143,158,159,160,161,191,195],$V19=[53,72,137,142,143,158,159,160,161,191,195],$V29=[53,55,72,137,142,143,158,159,160,161,191,195],$V39=[1,3109],$V49=[1,3178],$V59=[1,3184],$V69=[1,3264],$V79=[1,3270],$V89=[2,176],$V99=[2,52],$Va9=[1,3358],$Vb9=[2,59],$Vc9=[1,3391],$Vd9=[2,83],$Ve9=[2,173],$Vf9=[1,3436],$Vg9=[53,55,72,81,82,83,103,104,105,106,121,127,129,137,142,143,158,159,160,161,190,191,195,221],$Vh9=[53,55,72,81,82,83,121,127,129,137,142,143,158,159,160,161,190,191,195,221],$Vi9=[53,55,72,103,104,105,106,114,115,116,117,118,119,137,142,143,158,159,160,161,191,195],$Vj9=[53,55,72,98,99,100,103,104,105,106,137,142,143,158,159,160,161,191,195],$Vk9=[53,55,72,114,115,116,117,118,119,137,142,143,158,159,160,161,191,195],$Vl9=[1,3467],$Vm9=[1,3469],$Vn9=[1,3470],$Vo9=[1,3468],$Vp9=[1,3493],$Vq9=[1,3495],$Vr9=[1,3496],$Vs9=[1,3494],$Vt9=[1,3520],$Vu9=[1,3522],$Vv9=[1,3523],$Vw9=[1,3521],$Vx9=[1,3624],$Vy9=[1,3626],$Vz9=[1,3627],$VA9=[1,3625],$VB9=[1,3665],$VC9=[1,3707],$VD9=[72,137,142,143,195],$VE9=[1,3737],$VF9=[53,55,72,103,104,105,106,137,142,143,158,159,160,161,191,195],$VG9=[1,3761],$VH9=[1,3797],$VI9=[1,3799],$VJ9=[1,3800],$VK9=[1,3798],$VL9=[1,3823],$VM9=[1,3825],$VN9=[1,3826],$VO9=[1,3824],$VP9=[1,3850],$VQ9=[1,3852],$VR9=[1,3853],$VS9=[1,3851],$VT9=[1,3877],$VU9=[1,3879],$VV9=[1,3880],$VW9=[1,3878],$VX9=[1,3903],$VY9=[1,3905],$VZ9=[1,3906],$V_9=[1,3904],$V$9=[1,3930],$V0a=[1,3932],$V1a=[1,3933],$V2a=[1,3931],$V3a=[113,123,137,142,143,191,195],$V4a=[1,3978],$V5a=[1,4002],$V6a=[1,4044],$V7a=[1,4077],$V8a=[1,4182],$V9a=[1,4225],$Vaa=[1,4227],$Vba=[1,4228],$Vca=[1,4226],$Vda=[1,4266],$Vea=[1,4308],$Vfa=[1,4364],$Vga=[72,113,137,142,143,191,195],$Vha=[1,4419],$Via=[1,4443],$Vja=[1,4473],$Vka=[1,4519],$Vla=[1,4591],$Vma=[1,4640];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shexDoc\":3,\"initParser\":4,\"Qdirective_E_Star\":5,\"Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt\":6,\"EOF\":7,\"directive\":8,\"O_QnotStartAction_E_Or_QstartActions_E_C\":9,\"notStartAction\":10,\"startActions\":11,\"Qstatement_E_Star\":12,\"statement\":13,\"O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C\":14,\"baseDecl\":15,\"prefixDecl\":16,\"importDecl\":17,\"labelDecl\":18,\"IT_BASE\":19,\"IRIREF\":20,\"IT_PREFIX\":21,\"PNAME_NS\":22,\"iri\":23,\"IT_IMPORT\":24,\"IT_LABEL\":25,\"O_Qiri_E_Or_QGT_LBRACKET_E_S_Qiri_E_Star_S_QGT_RBRACKET_E_C\":26,\"Qiri_E_Star\":27,\"[\":28,\"]\":29,\"start\":30,\"shapeExprDecl\":31,\"IT_start\":32,\"=\":33,\"shapeAnd\":34,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star\":35,\"QcodeDecl_E_Plus\":36,\"codeDecl\":37,\"shapeExprLabel\":38,\"O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C\":39,\"shapeExpression\":40,\"IT_EXTERNAL\":41,\"QIT_NOT_E_Opt\":42,\"shapeAtomNoRef\":43,\"QshapeOr_E_Opt\":44,\"IT_NOT\":45,\"shapeRef\":46,\"shapeOr\":47,\"inlineShapeExpression\":48,\"inlineShapeOr\":49,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus\":50,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus\":51,\"O_QIT_OR_E_S_QshapeAnd_E_C\":52,\"IT_OR\":53,\"O_QIT_AND_E_S_QshapeNot_E_C\":54,\"IT_AND\":55,\"shapeNot\":56,\"inlineShapeAnd\":57,\"Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star\":58,\"O_QIT_OR_E_S_QinlineShapeAnd_E_C\":59,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star\":60,\"inlineShapeNot\":61,\"Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star\":62,\"O_QIT_AND_E_S_QinlineShapeNot_E_C\":63,\"shapeAtom\":64,\"inlineShapeAtom\":65,\"nonLitNodeConstraint\":66,\"QshapeOrRef_E_Opt\":67,\"litNodeConstraint\":68,\"shapeOrRef\":69,\"QnonLitNodeConstraint_E_Opt\":70,\"(\":71,\")\":72,\".\":73,\"shapeDefinition\":74,\"nonLitInlineNodeConstraint\":75,\"QinlineShapeOrRef_E_Opt\":76,\"litInlineNodeConstraint\":77,\"inlineShapeOrRef\":78,\"QnonLitInlineNodeConstraint_E_Opt\":79,\"inlineShapeDefinition\":80,\"ATPNAME_LN\":81,\"ATPNAME_NS\":82,\"@\":83,\"Qannotation_E_Star\":84,\"semanticActions\":85,\"annotation\":86,\"IT_LITERAL\":87,\"QxsFacet_E_Star\":88,\"datatype\":89,\"valueSet\":90,\"QnumericFacet_E_Plus\":91,\"xsFacet\":92,\"numericFacet\":93,\"nonLiteralKind\":94,\"QstringFacet_E_Star\":95,\"QstringFacet_E_Plus\":96,\"stringFacet\":97,\"IT_IRI\":98,\"IT_BNODE\":99,\"IT_NONLITERAL\":100,\"stringLength\":101,\"INTEGER\":102,\"REGEXP\":103,\"IT_LENGTH\":104,\"IT_MINLENGTH\":105,\"IT_MAXLENGTH\":106,\"numericRange\":107,\"rawNumeric\":108,\"numericLength\":109,\"DECIMAL\":110,\"DOUBLE\":111,\"string\":112,\"^^\":113,\"IT_MININCLUSIVE\":114,\"IT_MINEXCLUSIVE\":115,\"IT_MAXINCLUSIVE\":116,\"IT_MAXEXCLUSIVE\":117,\"IT_TOTALDIGITS\":118,\"IT_FRACTIONDIGITS\":119,\"Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star\":120,\"{\":121,\"QtripleExpression_E_Opt\":122,\"}\":123,\"O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C\":124,\"extension\":125,\"extraPropertySet\":126,\"IT_CLOSED\":127,\"tripleExpression\":128,\"IT_EXTRA\":129,\"Qpredicate_E_Plus\":130,\"predicate\":131,\"oneOfTripleExpr\":132,\"groupTripleExpr\":133,\"multiElementOneOf\":134,\"Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus\":135,\"O_QGT_PIPE_E_S_QgroupTripleExpr_E_C\":136,\"|\":137,\"singleElementGroup\":138,\"multiElementGroup\":139,\"unaryTripleExpr\":140,\"QGT_SEMI_E_Opt\":141,\",\":142,\";\":143,\"Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus\":144,\"O_QGT_SEMI_E_S_QunaryTripleExpr_E_C\":145,\"Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt\":146,\"O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C\":147,\"include\":148,\"O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C\":149,\"$\":150,\"tripleExprLabel\":151,\"tripleConstraint\":152,\"bracketedTripleExpr\":153,\"Qcardinality_E_Opt\":154,\"cardinality\":155,\"QsenseFlags_E_Opt\":156,\"senseFlags\":157,\"*\":158,\"+\":159,\"?\":160,\"REPEAT_RANGE\":161,\"^\":162,\"QvalueSetValue_E_Star\":163,\"valueSetValue\":164,\"iriRange\":165,\"STRING_GRAVE\":166,\"literalRange\":167,\"languageRange\":168,\"O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C\":169,\"QiriExclusion_E_Plus\":170,\"iriExclusion\":171,\"QliteralExclusion_E_Plus\":172,\"literalExclusion\":173,\"QlanguageExclusion_E_Plus\":174,\"languageExclusion\":175,\"Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt\":176,\"QiriExclusion_E_Star\":177,\"O_QGT_TILDE_E_S_QiriExclusion_E_Star_C\":178,\"~\":179,\"-\":180,\"QGT_TILDE_E_Opt\":181,\"literal\":182,\"Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt\":183,\"QliteralExclusion_E_Star\":184,\"O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C\":185,\"LANGTAG\":186,\"Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt\":187,\"O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C\":188,\"QlanguageExclusion_E_Star\":189,\"&\":190,\"//\":191,\"O_QiriOrLabel_E_Or_Qliteral_E_C\":192,\"iriOrLabel\":193,\"QcodeDecl_E_Star\":194,\"%\":195,\"O_QCODE_E_Or_QGT_MODULO_E_C\":196,\"CODE\":197,\"rdfLiteral\":198,\"numericLiteral\":199,\"booleanLiteral\":200,\"a\":201,\"blankNode\":202,\"langString\":203,\"Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt\":204,\"O_QGT_DTYPE_E_S_Qdatatype_E_C\":205,\"IT_true\":206,\"IT_false\":207,\"STRING_LITERAL1\":208,\"STRING_LITERAL_LONG1\":209,\"STRING_LITERAL2\":210,\"STRING_LITERAL_LONG2\":211,\"LANG_STRING_LITERAL1\":212,\"LANG_STRING_LITERAL_LONG1\":213,\"LANG_STRING_LITERAL2\":214,\"LANG_STRING_LITERAL_LONG2\":215,\"prefixedName\":216,\"PNAME_LN\":217,\"BLANK_NODE_LABEL\":218,\"O_QIT_EXTENDS_E_Or_QGT_AMP_E_C\":219,\"QshapeExprLabel_E_Plus\":220,\"IT_EXTENDS\":221,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",7:\"EOF\",19:\"IT_BASE\",20:\"IRIREF\",21:\"IT_PREFIX\",22:\"PNAME_NS\",24:\"IT_IMPORT\",25:\"IT_LABEL\",28:\"[\",29:\"]\",32:\"IT_start\",33:\"=\",41:\"IT_EXTERNAL\",45:\"IT_NOT\",53:\"IT_OR\",55:\"IT_AND\",71:\"(\",72:\")\",73:\".\",81:\"ATPNAME_LN\",82:\"ATPNAME_NS\",83:\"@\",87:\"IT_LITERAL\",98:\"IT_IRI\",99:\"IT_BNODE\",100:\"IT_NONLITERAL\",102:\"INTEGER\",103:\"REGEXP\",104:\"IT_LENGTH\",105:\"IT_MINLENGTH\",106:\"IT_MAXLENGTH\",110:\"DECIMAL\",111:\"DOUBLE\",113:\"^^\",114:\"IT_MININCLUSIVE\",115:\"IT_MINEXCLUSIVE\",116:\"IT_MAXINCLUSIVE\",117:\"IT_MAXEXCLUSIVE\",118:\"IT_TOTALDIGITS\",119:\"IT_FRACTIONDIGITS\",121:\"{\",123:\"}\",127:\"IT_CLOSED\",129:\"IT_EXTRA\",137:\"|\",142:\",\",143:\";\",150:\"$\",158:\"*\",159:\"+\",160:\"?\",161:\"REPEAT_RANGE\",162:\"^\",166:\"STRING_GRAVE\",179:\"~\",180:\"-\",186:\"LANGTAG\",190:\"&\",191:\"//\",195:\"%\",197:\"CODE\",201:\"a\",206:\"IT_true\",207:\"IT_false\",208:\"STRING_LITERAL1\",209:\"STRING_LITERAL_LONG1\",210:\"STRING_LITERAL2\",211:\"STRING_LITERAL_LONG2\",212:\"LANG_STRING_LITERAL1\",213:\"LANG_STRING_LITERAL_LONG1\",214:\"LANG_STRING_LITERAL2\",215:\"LANG_STRING_LITERAL_LONG2\",217:\"PNAME_LN\",218:\"BLANK_NODE_LABEL\",221:\"IT_EXTENDS\"},\nproductions_: [0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[18,2],[27,0],[27,2],[26,1],[26,3],[10,1],[10,1],[30,4],[11,1],[36,1],[36,2],[13,1],[13,1],[31,2],[39,1],[39,1],[40,3],[40,3],[40,2],[44,0],[44,1],[48,1],[47,1],[47,2],[52,2],[50,1],[50,2],[54,2],[51,1],[51,2],[35,0],[35,2],[49,2],[59,2],[58,0],[58,2],[34,2],[60,0],[60,2],[57,2],[63,2],[62,0],[62,2],[56,2],[42,0],[42,1],[61,2],[64,2],[64,1],[64,2],[64,3],[64,1],[67,0],[67,1],[70,0],[70,1],[43,2],[43,1],[43,2],[43,3],[43,1],[65,2],[65,1],[65,2],[65,3],[65,1],[76,0],[76,1],[79,0],[79,1],[69,1],[69,1],[78,1],[78,1],[46,1],[46,1],[46,2],[68,3],[84,0],[84,2],[66,3],[77,2],[77,2],[77,2],[77,1],[88,0],[88,2],[91,1],[91,2],[75,2],[75,1],[95,0],[95,2],[96,1],[96,2],[94,1],[94,1],[94,1],[92,1],[92,1],[97,2],[97,1],[101,1],[101,1],[101,1],[93,2],[93,2],[108,1],[108,1],[108,1],[108,3],[107,1],[107,1],[107,1],[107,1],[109,1],[109,1],[74,3],[80,4],[124,1],[124,1],[124,1],[120,0],[120,2],[122,0],[122,1],[126,2],[130,1],[130,2],[128,1],[132,1],[132,1],[134,2],[136,2],[135,1],[135,2],[133,1],[133,1],[138,2],[141,0],[141,1],[141,1],[139,3],[145,2],[145,2],[144,1],[144,2],[140,2],[140,1],[149,2],[146,0],[146,1],[147,1],[147,1],[153,6],[154,0],[154,1],[152,6],[156,0],[156,1],[155,1],[155,1],[155,1],[155,1],[157,1],[90,3],[163,0],[163,2],[164,1],[164,1],[164,1],[164,1],[164,2],[170,1],[170,2],[172,1],[172,2],[174,1],[174,2],[169,1],[169,1],[169,1],[165,2],[177,0],[177,2],[178,2],[176,0],[176,1],[171,3],[181,0],[181,1],[167,2],[184,0],[184,2],[185,2],[183,0],[183,1],[173,3],[168,2],[168,2],[189,0],[189,2],[188,2],[187,0],[187,1],[175,3],[148,2],[86,3],[192,1],[192,1],[85,1],[194,0],[194,2],[37,3],[196,1],[196,1],[182,1],[182,1],[182,1],[131,1],[131,1],[89,1],[38,1],[38,1],[151,1],[151,1],[199,1],[199,1],[199,1],[198,1],[198,2],[205,2],[204,0],[204,1],[200,1],[200,1],[112,1],[112,1],[112,1],[112,1],[203,1],[203,1],[203,1],[203,1],[23,1],[23,1],[216,1],[216,1],[193,1],[193,1],[193,1],[193,1],[202,1],[125,2],[219,1],[219,1],[220,1],[220,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n        let imports = Object.keys(Parser._imports).length ? { imports: Parser._imports } : {}\n        var startObj = Parser.start ? { start: Parser.start } : {};\n        var startActs = Parser.startActs ? { startActs: Parser.startActs } : {};\n        let shapes = Parser.shapes ? { shapes: Object.values(Parser.shapes) } : {};\n        var shexj = Object.assign(\n          { type: \"Schema\" }, imports, startActs, startObj, shapes\n        )\n        if (Parser.options.index) {\n          if (Parser._base !== null)\n            shexj._base = Parser._base;\n          shexj._prefixes = Parser._prefixes;\n          shexj._index = {\n            shapeExprs: Parser.shapes || new Map(),\n            tripleExprs: Parser.productions || new Map()\n          };\n          shexj._sourceMap = Parser._sourceMap;\n        }\n        return shexj;\n      \nbreak;\ncase 2:\n yy.parser.yy = { lexer: yy.lexer} ; \nbreak;\ncase 16:\n // t: @@\n        Parser._setBase(Parser._base === null ||\n                    absoluteIRI.test($$[$0].slice(1, -1)) ? $$[$0].slice(1, -1) : _resolveIRI($$[$0].slice(1, -1)));\n      \nbreak;\ncase 17:\n // t: ShExParser-test.js/with pre-defined prefixes\n        Parser._prefixes[$$[$0-1].slice(0, -1)] = $$[$0];\n      \nbreak;\ncase 18:\n // t: @@\n        Parser._imports.push($$[$0]);\n      \nbreak;\ncase 19:\n\n        $$[$0].forEach(function (elt) {\n\t  Parser._termResolver.add(elt);\n        });\n      \nbreak;\ncase 20: case 49: case 53: case 56: case 60:\nthis.$ = [];\nbreak;\ncase 21: case 45: case 48: case 50: case 54: case 57: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 22: case 44: case 47:\nthis.$ = [$$[$0]];\nbreak;\ncase 23: case 157:\nthis.$ = $$[$0-1];\nbreak;\ncase 26:\n\n        if (Parser.start)\n          error(new Error(\"Parse error: start already defined\"), yy);\n        Parser.start = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]); // t: startInline\n      \nbreak;\ncase 27:\n\n        Parser.startActs = $$[$0]; // t: startCode1\n      \nbreak;\ncase 28:\nthis.$ = [$$[$0]] // t: startCode1;\nbreak;\ncase 29:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: startCode3;\nbreak;\ncase 32:\n // t: 1dot 1val1vsMinusiri3??\n        addShape($$[$0-1],  $$[$0], yy);\n      \nbreak;\ncase 33:\n\n        this.$ = nonest($$[$0]);\n      \nbreak;\ncase 34:\nthis.$ = { type: \"ShapeExternal\" };\nbreak;\ncase 35:\n\n        if ($$[$0-2])\n          $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) }; // t:@@\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 36:\n\n        $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) } // !!! opt\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 37:\n\n        $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n        delete $$[$0].needsAtom;\n        this.$ = $$[$0]; // { type: \"ShapeOr\", \"shapeExprs\": [$$[$0-1]].concat($$[$0]) };\n      \nbreak;\ncase 38: case 234: case 251:\nthis.$ = null;\nbreak;\ncase 39: case 43: case 46: case 52: case 59: case 191: case 250:\nthis.$ = $$[$0];\nbreak;\ncase 41:\n // returns a ShapeOr\n        var disjuncts = $$[$0].map(nonest);\n        this.$ = { type: \"ShapeOr\", shapeExprs: disjuncts, needsAtom: disjuncts }; // t: @@\n      \nbreak;\ncase 42:\n // returns a ShapeAnd\n        // $$[$0-1] could have implicit conjuncts and explicit nested ANDs (will have .nested: true)\n        $$[$0-1].filter(c => c.type === \"ShapeAnd\").length === $$[$0-1].length\n        var and = {\n          type: \"ShapeAnd\",\n          shapeExprs: $$[$0-1].reduce(\n            (acc, elt) =>\n              acc.concat(elt.type === 'ShapeAnd' && !elt.nested ? elt.shapeExprs : nonest(elt)), []\n          )\n        };\n        this.$ = $$[$0].length > 0 ? { type: \"ShapeOr\", shapeExprs: [and].concat($$[$0].map(nonest)) } : and; // t: @@\n        this.$.needsAtom = and.shapeExprs;\n      \nbreak;\ncase 51:\nthis.$ = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]);\nbreak;\ncase 55: case 58:\nthis.$ = shapeJunction(\"ShapeAnd\", $$[$0-1], $$[$0]) // t: @@;\nbreak;\ncase 62:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t:@@ */ : $$[$0];\nbreak;\ncase 63:\nthis.$ = false;\nbreak;\ncase 64:\nthis.$ = true;\nbreak;\ncase 65:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t: 1NOTNOTdot, 1NOTNOTIRI, 1NOTNOTvs */ : $$[$0];\nbreak;\ncase 66: case 75: case 80:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1];\nbreak;\ncase 68:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t: 1dotRef1 */ : $$[$0-1] // t:@@;\nbreak;\ncase 69: case 78: case 83:\nthis.$ = Object.assign($$[$0-1], {nested: true}) // t: 1val1vsMinusiri3;\nbreak;\ncase 70: case 79: case 84:\nthis.$ = EmptyShape // t: 1dot;\nbreak;\ncase 77:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t:@@ */ : $$[$0-1]\t // t: 1dotRef1 -- use _QnonLitNodeConstraint_E_Opt like below?;\nbreak;\ncase 82:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1] // t: !! look to 1dotRef1;\nbreak;\ncase 93:\n // t: 1dotRefLNex@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1), yy); // ShapeRef\n      \nbreak;\ncase 94:\n // t: 1dotRefNS1@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy), yy); // ShapeRef\n      \nbreak;\ncase 95:\nthis.$ = addSourceMap($$[$0], yy) // ShapeRef // t: 1dotRef1, 1dotRefSpaceLNex, 1dotRefSpaceNS1;\nbreak;\ncase 96: case 99:\n // t: !!\n        this.$ = $$[$0-2]\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !!\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !!\n      \nbreak;\ncase 97:\nthis.$ = [] // t: 1dot, 1dotAnnot3;\nbreak;\ncase 98:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotAnnot3;\nbreak;\ncase 100:\nthis.$ = extend({ type: \"NodeConstraint\", nodeKind: \"literal\" }, $$[$0]) // t: 1literalPattern;\nbreak;\ncase 101:\n\n        if (numericDatatypes.indexOf($$[$0-1]) === -1)\n          numericFacets.forEach(function (facet) {\n            if (facet in $$[$0])\n              error(new Error(\"Parse error: facet \" + facet + \" not allowed for unknown datatype \" + $$[$0-1]), yy);\n          });\n        this.$ = extend({ type: \"NodeConstraint\", datatype: $$[$0-1] }, $$[$0]) // t: 1datatype\n      \nbreak;\ncase 102:\nthis.$ = { type: \"NodeConstraint\", values: $$[$0-1] } // t: 1val1IRIREF;\nbreak;\ncase 103:\nthis.$ = extend({ type: \"NodeConstraint\"}, $$[$0]);\nbreak;\ncase 104:\nthis.$ = {} // t: 1literalPattern;\nbreak;\ncase 105:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: 1literalLength\n      \nbreak;\ncase 107: case 113:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: !! look to 1literalLength\n      \nbreak;\ncase 108:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0-1], $$[$0] ? $$[$0] : {}) // t: 1iriPattern;\nbreak;\ncase 109:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0]) // t: @@;\nbreak;\ncase 110:\nthis.$ = {};\nbreak;\ncase 111:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0])\n      \nbreak;\ncase 114:\nthis.$ = { nodeKind: \"iri\" } // t: 1iriPattern;\nbreak;\ncase 115:\nthis.$ = { nodeKind: \"bnode\" } // t: 1bnodeLength;\nbreak;\ncase 116:\nthis.$ = { nodeKind: \"nonliteral\" } // t: 1nonliteralLength;\nbreak;\ncase 119:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalLength;\nbreak;\ncase 120:\nthis.$ = unescapeRegexp($$[$0]) // t: 1literalPattern;\nbreak;\ncase 121:\nthis.$ = \"length\" // t: 1literalLength;\nbreak;\ncase 122:\nthis.$ = \"minlength\" // t: 1literalMinlength;\nbreak;\ncase 123:\nthis.$ = \"maxlength\" // t: 1literalMaxlength;\nbreak;\ncase 124:\nthis.$ = keyValObject($$[$0-1], $$[$0]) // t: 1literalMininclusive;\nbreak;\ncase 125:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalTotaldigits;\nbreak;\ncase 126:\nthis.$ = parseInt($$[$0], 10);\nbreak;\ncase 127: case 128:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 129:\n // ## deprecated\n        if ($$[$0] === XSD_DECIMAL || $$[$0] === XSD_FLOAT || $$[$0] === XSD_DOUBLE)\n          this.$ = parseFloat($$[$0-2].value);\n        else if (numericDatatypes.indexOf($$[$0]) !== -1)\n          this.$ = parseInt($$[$0-2].value)\n        else\n          error(new Error(\"Parse error: numeric range facet expected numeric datatype instead of \" + $$[$0]), yy);\n      \nbreak;\ncase 130:\nthis.$ = \"mininclusive\" // t: 1literalMininclusive;\nbreak;\ncase 131:\nthis.$ = \"minexclusive\" // t: 1literalMinexclusive;\nbreak;\ncase 132:\nthis.$ = \"maxinclusive\" // t: 1literalMaxinclusive;\nbreak;\ncase 133:\nthis.$ = \"maxexclusive\" // t: 1literalMaxexclusive;\nbreak;\ncase 134:\nthis.$ = \"totaldigits\" // t: 1literalTotaldigits;\nbreak;\ncase 135:\nthis.$ = \"fractiondigits\" // t: 1literalFractiondigits;\nbreak;\ncase 136:\n // t: 1dotInherit3\n        this.$ = $$[$0-2] === EmptyShape ? { type: \"Shape\" } : $$[$0-2]; // t: 0\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !! look to open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !! look to open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 137:\n // t: 1dotInherit3\n        var exprObj = $$[$0-1] ? { expression: $$[$0-1] } : EmptyObject; // t: 0, 0Inherit1\n        this.$ = (exprObj === EmptyObject && $$[$0-3] === EmptyObject) ?\n\t  EmptyShape :\n\t  extend({ type: \"Shape\" }, exprObj, $$[$0-3]);\n      \nbreak;\ncase 138:\nthis.$ = [ \"inherit\", $$[$0] ] // t: 1dotInherit1;\nbreak;\ncase 139:\nthis.$ = [ \"extra\", $$[$0] ] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 140:\nthis.$ = [ \"closed\", true ] // t: 1dotClosed;\nbreak;\ncase 141:\nthis.$ = EmptyObject;\nbreak;\ncase 142:\n\n        if ($$[$0-1] === EmptyObject)\n          $$[$0-1] = {};\n        if ($$[$0][0] === \"closed\")\n          $$[$0-1][\"closed\"] = true; // t: 1dotClosed\n        else if ($$[$0][0] in $$[$0-1])\n          $$[$0-1][$$[$0][0]] = unionAll($$[$0-1][$$[$0][0]], $$[$0][1]); // t: 1dotInherit3, 3groupdot3Extra, 3groupdotExtra3\n        else\n          $$[$0-1][$$[$0][0]] = $$[$0][1]; // t: 1dotInherit1\n        this.$ = $$[$0-1];\n      \nbreak;\ncase 145:\nthis.$ = $$[$0] // t: 1dotExtra1, 3groupdot3Extra;\nbreak;\ncase 146:\nthis.$ = [$$[$0]] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 147:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 3groupdotExtra3;\nbreak;\ncase 151:\nthis.$ = { type: \"OneOf\", expressions: unionAll([$$[$0-1]], $$[$0]) } // t: 2oneOfdot;\nbreak;\ncase 152:\nthis.$ = $$[$0] // t: 2oneOfdot;\nbreak;\ncase 153:\nthis.$ = [$$[$0]] // t: 2oneOfdot;\nbreak;\ncase 154:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2oneOfdot;\nbreak;\ncase 161:\nthis.$ = { type: \"EachOf\", expressions: unionAll([$$[$0-2]], $$[$0-1]) } // t: 2groupOfdot;\nbreak;\ncase 162:\nthis.$ = $$[$0] // ## deprecated // t: 2groupOfdot;\nbreak;\ncase 163:\nthis.$ = $$[$0] // t: 2groupOfdot;\nbreak;\ncase 164:\nthis.$ = [$$[$0]] // t: 2groupOfdot;\nbreak;\ncase 165:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2groupOfdot;\nbreak;\ncase 166:\n\n        if ($$[$0-1]) {\n          this.$ = extend({ id: $$[$0-1] }, $$[$0]);\n          addProduction($$[$0-1],  this.$, yy);\n        } else {\n          this.$ = $$[$0]\n        }\n      \nbreak;\ncase 168:\nthis.$ = addSourceMap($$[$0], yy);\nbreak;\ncase 173:\n\n        // t: open1dotOr1dot, !openopen1dotcloseCode1closeCode2\n        this.$ = $$[$0-4];\n        // Copy all of the new attributes into the encapsulated shape.\n        if (\"min\" in $$[$0-2]) { this.$.min = $$[$0-2].min; } // t: open3groupdotclosecard23Annot3Code2\n        if (\"max\" in $$[$0-2]) { this.$.max = $$[$0-2].max; } // t: open3groupdotclosecard23Annot3Code2\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = \"semActs\" in $$[$0-4] ? $$[$0-4].semActs.concat($$[$0].semActs) : $$[$0].semActs; } // t: open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 174:\nthis.$ = {} // t: 1dot;\nbreak;\ncase 176:\n\n        // $$[$0]: t: 1dotCode1\n\tif ($$[$0-3] !== EmptyShape && false) {\n\t  var t = blank();\n\t  addShape(t, $$[$0-3], yy);\n\t  $$[$0-3] = t; // ShapeRef\n\t}\n        // %6: t: 1inversedotCode1\n        this.$ = extend({ type: \"TripleConstraint\" }, $$[$0-5] ? $$[$0-5] : {}, { predicate: $$[$0-4] }, ($$[$0-3] === EmptyShape ? {} : { valueExpr: $$[$0-3] }), $$[$0-2], $$[$0]); // t: 1dot // t: 1inversedot\n        if ($$[$0-1].length)\n          this.$[\"annotations\"] = $$[$0-1]; // t: 1dotAnnot3 // t: 1inversedotAnnot3\n      \nbreak;\ncase 179:\nthis.$ = { min:0, max:UNBOUNDED } // t: 1cardStar;\nbreak;\ncase 180:\nthis.$ = { min:1, max:UNBOUNDED } // t: 1cardPlus;\nbreak;\ncase 181:\nthis.$ = { min:0, max:1 } // t: 1cardOpt;\nbreak;\ncase 182:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-2);\n        var nums = $$[$0].match(/(\\d+)/g);\n        this.$ = { min: parseInt(nums[0], 10) }; // t: 1card2blank, 1card2Star\n        if (nums.length === 2)\n            this.$[\"max\"] = parseInt(nums[1], 10); // t: 1card23\n        else if ($$[$0].indexOf(',') === -1) // t: 1card2\n            this.$[\"max\"] = parseInt(nums[0], 10);\n        else\n            this.$[\"max\"] = UNBOUNDED;\n      \nbreak;\ncase 183:\nthis.$ = { inverse: true } // t: 1inversedot;\nbreak;\ncase 184:\nthis.$ = $$[$0-1] // t: 1val1IRIREF;\nbreak;\ncase 185:\nthis.$ = [] // t: 1val1IRIREF;\nbreak;\ncase 186:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1IRIREF;\nbreak;\ncase 188:\nthis.$ = Parser._termResolver.resolve($$[$0], Parser._prefixes);\nbreak;\ncase 192:\nthis.$ = [$$[$0]] // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 193:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 194:\nthis.$ = [$$[$0]] // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 195:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 196:\nthis.$ = [$$[$0]] // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 197:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 198:\nthis.$ = { type: \"IriStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 199:\nthis.$ = { type: \"LiteralStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 200:\nthis.$ = { type: \"LanguageStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 201:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1iriStem, 1val1iriStemMinusiri3\n            type: $$[$0].length ? \"IriStemRange\" : \"IriStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1iriStemMinusiri3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1IRIREF, 1AvalA\n        }\n      \nbreak;\ncase 202:\nthis.$ = [] // t: 1val1iriStem, 1val1iriStemMinusiri3;\nbreak;\ncase 203:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1iriStemMinusiri3;\nbreak;\ncase 204:\nthis.$ = $$[$0] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 207:\nthis.$ = $$[$0] ? { type: \"IriStem\", stem: $$[$0-1] } /* t: 1val1iriStemMinusiriStem3 */ : $$[$0-1] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 210:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1literalStemMinusliteralStem3, 1val1literalStem\n            type: $$[$0].length ? \"LiteralStemRange\" : \"LiteralStem\",\n            stem: $$[$0-1].value\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1literalStemMinusliteral3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1LITERAL\n        }\n      \nbreak;\ncase 211:\nthis.$ = [] // t: 1val1literalStem, 1val1literalStemMinusliteral3;\nbreak;\ncase 212:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 213:\nthis.$ = $$[$0] // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 216:\nthis.$ = $$[$0] ? { type: \"LiteralStem\", stem: $$[$0-1].value } /* t: 1val1literalStemMinusliteral3 */ : $$[$0-1].value // t: 1val1literalStemMinusliteralStem3;\nbreak;\ncase 217:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1languageStemMinuslanguage3 1val1languageStemMinuslanguageStem3 : 1val1languageStem\n            type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1languageStemMinuslanguage3, 1val1languageStemMinuslanguageStem3\n        } else {\n          this.$ = { type: \"Language\", languageTag: $$[$0-1] }; // t: 1val1language\n        }\n      \nbreak;\ncase 218:\n\n        this.$ = {  // t: @@\n          type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n          stem: \"\"\n        };\n        if ($$[$0].length)\n          this.$[\"exclusions\"] = $$[$0]; // t: @@\n      \nbreak;\ncase 219:\nthis.$ = [] // t: 1val1languageStem, 1val1languageStemMinuslanguage3;\nbreak;\ncase 220:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 221:\nthis.$ = $$[$0] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 224:\nthis.$ = $$[$0] ? { type: \"LanguageStem\", stem: $$[$0-1] } /* t: 1val1languageStemMinuslanguageStem3 */ : $$[$0-1] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 225:\nthis.$ = addSourceMap($$[$0], yy) // Inclusion // t: 2groupInclude1;\nbreak;\ncase 226:\nthis.$ = { type: \"Annotation\", predicate: $$[$0-1], object: $$[$0] } // t: 1dotAnnotIRIREF;\nbreak;\ncase 229:\nthis.$ = $$[$0].length ? { semActs: $$[$0] } : null // t: 1dotCode1/2oneOfDot;\nbreak;\ncase 230:\nthis.$ = [] // t: 1dot, 1dotCode1;\nbreak;\ncase 231:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotCode1;\nbreak;\ncase 232:\nthis.$ = $$[$0] ? unescapeSemanticAction($$[$0-1], $$[$0]) /* t: 1dotCode1 */ : { type: \"SemAct\", name: $$[$0-1] } // t: 1dotNoCode1;\nbreak;\ncase 239:\nthis.$ = RDF_TYPE // t: 1AvalA;\nbreak;\ncase 245:\nthis.$ = createLiteral($$[$0], XSD_INTEGER) // t: 1val1INTEGER;\nbreak;\ncase 246:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL) // t: 1val1DECIMAL;\nbreak;\ncase 247:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE) // t: 1val1DOUBLE;\nbreak;\ncase 249:\nthis.$ = $$[$0] ? extend($$[$0-1], { type: $$[$0] }) : $$[$0-1] // t: 1val1Datatype;\nbreak;\ncase 253:\nthis.$ = { value: \"true\", type: XSD_BOOLEAN } // t: 1val1true;\nbreak;\ncase 254:\nthis.$ = { value: \"false\", type: XSD_BOOLEAN } // t: 1val1false;\nbreak;\ncase 255:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL2;\nbreak;\ncase 256:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL1;\nbreak;\ncase 257:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL_LONG2;\nbreak;\ncase 258:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG1;\nbreak;\ncase 259:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: @@;\nbreak;\ncase 260:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: @@;\nbreak;\ncase 261:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: 1val1LANGTAG;\nbreak;\ncase 262:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG2_with_LANGTAG;\nbreak;\ncase 263:\n // t: 1dot\n        var unesc = ShExUtil.unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._base === null || absoluteIRI.test(unesc) ? unesc : _resolveIRI(unesc)\n      \nbreak;\ncase 265:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + ShExUtil.unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n      \nbreak;\ncase 266:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n        this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n      \nbreak;\ncase 267:\nthis.$ = this._base === null || absoluteIRI.test($$[$0].slice(1, -1)) ? ShExUtil.unescapeText($$[$0].slice(1,-1), {}) : _resolveIRI(ShExUtil.unescapeText($$[$0].slice(1,-1), {})) // t: 1dot;\nbreak;\ncase 268:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n      this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1);\n    \nbreak;\ncase 269:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n      this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n    \nbreak;\ncase 270:\n\n        this.$ = Parser._termResolver.resolve($$[$0], Parser._prefixes);\n    \nbreak;\ncase 272:\nthis.$ = $$[$0] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 275:\nthis.$ = [$$[$0]] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 276:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotInherit3;\nbreak;\n}\n},\ntable: [o($V0,[2,2],{3:1,4:2}),{1:[3]},o($V0,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:11,10:16,11:17,14:6,15:7,16:8,17:9,18:10,19:[1,12],20:$V1,21:[1,13],22:$V2,23:24,24:[1,14],25:[1,15],30:18,31:19,32:[1,21],36:20,37:23,38:22,195:$V3,202:25,216:28,217:$V4,218:$V5},{7:[1,32]},o($V0,[2,4]),{7:[2,11]},o($V0,$V6),o($V0,$V7),o($V0,$V8),o($V0,$V9),o($Va,[2,7],{12:33}),{20:[1,34]},{22:[1,35]},{20:$Vb,22:$Vc,23:36,216:38,217:$Vd},{20:$Vb,22:$Vc,23:42,26:41,28:[1,43],216:38,217:$Vd},o($Va,[2,5]),o($Va,[2,6]),o($Va,$Ve),o($Va,$Vf),o($Va,[2,27],{37:44,195:$V3}),{33:[1,45]},o($Vg,$Vh,{39:46,40:47,42:49,46:51,41:[1,48],45:[1,50],81:$Vi,82:$Vj,83:$Vk}),o($V0,[2,28]),o($Vl,$Vm),o($Vl,$Vn),{20:$Vo,22:$Vp,23:55,216:57,217:$Vq},o($Vl,$Vr),o($Vl,$Vs),o($Vl,$Vt),o($Vl,$Vu),o($Vl,$Vv),{1:[2,1]},{7:[2,9],8:61,10:62,13:60,15:63,16:64,17:65,18:66,19:[1,69],20:$V1,21:[1,70],22:$V2,23:24,24:[1,71],25:[1,72],30:67,31:68,32:[1,73],38:74,202:25,216:28,217:$V4,218:$V5},o($V0,$Vw),{20:$Vb,22:$Vc,23:75,216:38,217:$Vd},o($V0,$Vx),o($V0,$Vr),o($V0,$Vs),o($V0,$Vu),o($V0,$Vv),o($V0,$Vy),o($V0,$Vz),o($VA,$VB,{27:76}),o($V0,[2,29]),o($VC,$Vh,{34:77,56:78,42:79,45:$VD}),o($Va,$VE),o($Va,$VF),o($Va,$VG),o($VH,$VI,{43:81,66:82,68:83,74:84,75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,193:101,93:103,101:104,107:110,109:111,20:$VJ,22:$VK,28:$VL,71:[1,85],73:[1,86],87:$VM,98:$VN,99:$VO,100:$VP,103:$VQ,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$V_,217:$V$}),o($Vg,$V01,{46:121,81:$V11,82:$V21,83:$V31}),{47:125,50:126,51:127,52:128,53:$V41,54:129,55:$V51},o($V61,$V71),o($V61,$V81),{20:[1,135],22:[1,139],23:133,38:132,202:134,216:136,217:[1,138],218:[1,137]},{195:[1,142],196:140,197:[1,141]},o($V91,$Vr),o($V91,$Vs),o($V91,$Vu),o($V91,$Vv),o($Va,[2,8]),o($Va,[2,30]),o($Va,[2,31]),o($Va,$V6),o($Va,$V7),o($Va,$V8),o($Va,$V9),o($Va,$Ve),o($Va,$Vf),{20:[1,143]},{22:[1,144]},{20:$Va1,22:$Vb1,23:145,216:147,217:$Vc1},{20:$Va1,22:$Vb1,23:151,26:150,28:[1,152],216:147,217:$Vc1},{33:[1,153]},o($Vg,$Vh,{39:154,40:155,42:157,46:159,41:[1,156],45:[1,158],81:$Vi,82:$Vj,83:$Vk}),o($V0,$Vd1),{20:$Ve1,22:$Vf1,23:161,29:[1,160],216:163,217:$Vg1},o($Vh1,$Vi1,{35:166}),o($Vj1,$Vk1,{60:167}),o($VH,$VI,{75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,193:101,93:103,101:104,107:110,109:111,64:168,66:169,68:170,69:171,74:174,46:175,20:$VJ,22:$VK,28:$VL,71:[1,172],73:[1,173],81:[1,176],82:[1,177],83:[1,178],87:$VM,98:$VN,99:$VO,100:$VP,103:$VQ,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$V_,217:$V$}),o($VC,$V01),o($Va,$Vl1,{50:126,51:127,52:128,54:129,44:179,47:180,53:$V41,55:$V51}),o($Vj1,$Vm1,{67:181,69:182,74:183,46:184,80:185,120:186,81:$V11,82:$V21,83:$V31,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vn1),o($Vj1,$Vo1,{70:187,66:188,75:189,94:190,96:191,97:195,101:196,98:$Vp1,99:$Vq1,100:$Vr1,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{40:198,42:199,46:201,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vu1),o($Vv1,$Vw1,{84:202}),o($Vx1,$Vw1,{84:203}),o($Vy1,$Vw1,{84:204}),o($Vz1,$VA1,{95:205}),o($Vv1,$VB1,{101:104,97:206,103:$VQ,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:207}),o($VC1,$VD1,{88:208}),o($VC1,$VD1,{88:209}),o($Vx1,$VE1,{107:110,109:111,93:210,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,211],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:220}),o($VQ1,$VR1),{102:[1,221]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,223],108:222,110:[1,224],111:[1,225],112:226,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,231]},{102:[2,121]},{102:[2,122]},{102:[2,123]},o($V$1,[2,130]),o($V$1,[2,131]),o($V$1,[2,132]),o($V$1,[2,133]),{102:[2,134]},{102:[2,135]},o($Va,$Vl1,{50:126,51:127,52:128,54:129,47:180,44:232,53:$V41,55:$V51}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,236],22:[1,240],23:234,38:233,202:235,216:237,217:[1,239],218:[1,238]},o($Va,$V02),o($Va,$V12,{52:241,53:$V41}),o($Vh1,$Vi1,{35:242,54:243,55:$V51}),o($Vh1,$V22),o($Vj1,$V32),o($VC,$Vh,{34:244,56:245,42:246,45:$VD}),o($VC,$Vh,{56:247,42:248,45:$VD}),o($V61,$V42),o($V61,$Vm),o($V61,$Vn),o($V61,$Vr),o($V61,$Vs),o($V61,$Vt),o($V61,$Vu),o($V61,$Vv),o($V0,$V52),o($V0,$V62),o($V0,$V72),o($Va,$Vw),{20:$Va1,22:$Vb1,23:249,216:147,217:$Vc1},o($Va,$Vx),o($Va,$Vr),o($Va,$Vs),o($Va,$Vu),o($Va,$Vv),o($Va,$Vy),o($Va,$Vz),o($VA,$VB,{27:250}),o($VC,$Vh,{34:251,56:252,42:253,45:$VD}),o($Va,$VE),o($Va,$VF),o($Va,$VG),o($VH,$VI,{43:254,66:255,68:256,74:257,75:260,77:261,80:262,94:263,96:264,89:266,90:267,91:268,120:269,97:273,193:274,93:276,101:277,107:283,109:284,20:$V82,22:$V92,28:$Va2,71:[1,258],73:[1,259],87:$Vb2,98:$Vc2,99:$Vd2,100:$Ve2,103:$Vf2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$Vg2,217:$Vh2}),o($Vg,$V01,{46:285,81:$Vi2,82:$Vj2,83:$Vk2}),{47:289,50:290,51:291,52:292,53:$Vl2,54:293,55:$Vm2},o($V0,$Vn2),o($VA,[2,21]),o($VA,$Vr),o($VA,$Vs),o($VA,$Vu),o($VA,$Vv),o($Va,$Vo2,{52:296,53:$V41}),o($Vh1,$Vp2,{54:297,55:$V51}),o($Vj1,$Vq2),o($Vj1,$Vm1,{69:182,74:183,46:184,80:185,120:186,67:298,81:$V11,82:$V21,83:$V31,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{66:188,75:189,94:190,96:191,97:195,101:196,70:299,98:$Vp1,99:$Vq1,100:$Vr1,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:300,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vt2,$V71),o($Vt2,$V81),{20:[1,304],22:[1,308],23:302,38:301,202:303,216:305,217:[1,307],218:[1,306]},o($Va,$Vw2),o($Va,$Vx2),o($Vj1,$Vy2),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:309}),{121:[1,310],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VA2),o($Vj1,$VB2),o($Vx1,$Vw1,{84:311}),o($VC2,$VA1,{95:312}),o($Vx1,$VB1,{101:196,97:313,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,314]},o($VC2,$VS1),{72:[1,315]},o($VH,$VI,{43:316,66:317,68:318,74:319,75:322,77:323,80:324,94:325,96:326,89:328,90:329,91:330,120:331,97:335,193:336,93:338,101:339,107:345,109:346,20:[1,341],22:[1,343],28:[1,337],71:[1,320],73:[1,321],87:[1,327],98:[1,332],99:[1,333],100:[1,334],103:$VD2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,344],217:[1,342]}),o($Vg,$V01,{46:347,81:$VE2,82:$VF2,83:$VG2}),{47:351,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2},o($VJ2,$VK2,{85:358,86:359,194:360,191:[1,361]}),o($VL2,$VK2,{85:362,86:363,194:364,191:$VM2}),o($VN2,$VK2,{85:366,86:367,194:368,191:[1,369]}),o($Vv1,$VO2,{101:104,97:370,103:$VQ,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VV2,$VW2,{122:378,128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,123:$VX2,150:$VY2,190:$VZ2}),o($VH,[2,142]),o($VH,[2,138]),o($VH,[2,139]),o($VH,[2,140]),{20:$V_2,22:$V$2,23:393,38:392,202:394,216:396,217:$V03,218:$V13,220:391},{20:$V23,22:$V33,130:400,131:401,166:$V43,193:402,201:$V53,217:$V63},o($V73,[2,273]),o($V73,[2,274]),{20:$V83,22:$V93,23:415,29:[1,408],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,441]},{113:$Vx3},{113:$Vy3},{113:$Vz3},{113:$VA3},o($VQ1,$VB3),o($Va,$VC3),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($Vh1,$VD3),o($Va,$VE3,{52:296,53:$V41}),o($Vj1,$VF3),o($Vh1,$VG3),o($Vj1,$Vk1,{60:442}),o($VH,$VI,{64:443,66:444,68:445,69:446,75:449,77:450,74:451,46:452,94:453,96:454,89:456,90:457,91:458,80:459,97:466,193:467,93:469,120:470,101:471,107:477,109:478,20:[1,473],22:[1,475],28:[1,468],71:[1,447],73:[1,448],81:[1,460],82:[1,461],83:[1,462],87:[1,455],98:[1,463],99:[1,464],100:[1,465],103:$VH3,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,476],217:[1,474]}),o($Vj1,$VI3),o($VH,$VI,{64:479,66:480,68:481,69:482,75:485,77:486,74:487,46:488,94:489,96:490,89:492,90:493,91:494,80:495,97:502,193:503,93:505,120:506,101:507,107:513,109:514,20:[1,509],22:[1,511],28:[1,504],71:[1,483],73:[1,484],81:[1,496],82:[1,497],83:[1,498],87:[1,491],98:[1,499],99:[1,500],100:[1,501],103:$VJ3,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,512],217:[1,510]}),o($Va,$Vd1),{20:$Ve1,22:$Vf1,23:161,29:[1,515],216:163,217:$Vg1},o($Vh1,$Vi1,{35:516}),o($Vj1,$Vk1,{60:517}),o($VH,$VI,{75:260,77:261,80:262,94:263,96:264,89:266,90:267,91:268,120:269,97:273,193:274,93:276,101:277,107:283,109:284,64:518,66:519,68:520,69:521,74:524,46:525,20:$V82,22:$V92,28:$Va2,71:[1,522],73:[1,523],81:[1,526],82:[1,527],83:[1,528],87:$Vb2,98:$Vc2,99:$Vd2,100:$Ve2,103:$Vf2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$Vg2,217:$Vh2}),o($Va,$Vl1,{50:290,51:291,52:292,54:293,44:529,47:530,53:$Vl2,55:$Vm2}),o($Vj1,$Vm1,{67:531,69:532,74:533,46:534,80:535,120:536,81:$Vi2,82:$Vj2,83:$Vk2,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vn1),o($Vj1,$Vo1,{70:537,66:538,75:539,94:540,96:541,97:545,101:546,98:$VK3,99:$VL3,100:$VM3,103:$VN3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:548,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vu1),o($Vv1,$Vw1,{84:549}),o($Vx1,$Vw1,{84:550}),o($Vy1,$Vw1,{84:551}),o($Vz1,$VA1,{95:552}),o($Vv1,$VB1,{101:277,97:553,103:$Vf2,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:554}),o($VC1,$VD1,{88:555}),o($VC1,$VD1,{88:556}),o($Vx1,$VE1,{107:283,109:284,93:557,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,558],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:559}),o($VQ1,$VR1),{102:[1,560]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,562],108:561,110:[1,563],111:[1,564],112:565,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,566]},o($Va,$Vl1,{50:290,51:291,52:292,54:293,47:530,44:567,53:$Vl2,55:$Vm2}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,571],22:[1,575],23:569,38:568,202:570,216:572,217:[1,574],218:[1,573]},o($Va,$V02),o($Va,$V12,{52:576,53:$Vl2}),o($Vh1,$Vi1,{35:577,54:578,55:$Vm2}),o($Vh1,$V22),o($Vj1,$V32),o($VC,$Vh,{34:579,56:580,42:581,45:$VD}),o($VC,$Vh,{56:582,42:583,45:$VD}),o($Vh1,$VO3),o($Vj1,$VP3),o($Vj1,$VQ3),o($Vj1,$VR3),{72:[1,584]},o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),o($VL2,$VK2,{86:363,194:364,85:585,191:$VM2}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:586,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:363,194:364,85:587,191:$VM2}),o($Vx1,$VO2,{101:196,97:588,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VS3),{44:589,47:590,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2,72:$Vl1},o($VH,$VI,{67:591,69:592,74:593,46:594,80:595,120:596,53:$Vm1,55:$Vm1,72:$Vm1,81:$VE2,82:$VF2,83:$VG2}),o($VT3,$Vn1),o($VT3,$Vo1,{70:597,66:598,75:599,94:600,96:601,97:605,101:606,98:[1,602],99:[1,603],100:[1,604],103:$VU3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:608,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vu1),o($VV3,$Vw1,{84:609}),o($VW3,$Vw1,{84:610}),o($VX3,$Vw1,{84:611}),o($VY3,$VA1,{95:612}),o($VV3,$VB1,{101:339,97:613,103:$VD2,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:614}),o($VZ3,$VD1,{88:615}),o($VZ3,$VD1,{88:616}),o($VW3,$VE1,{107:345,109:346,93:617,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,618],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:619}),o($V_3,$VR1),{102:[1,620]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,622],108:621,110:[1,623],111:[1,624],112:625,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,626]},{44:627,47:590,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2,72:$Vl1},o($VT3,$V71),o($VT3,$V81),{20:[1,631],22:[1,635],23:629,38:628,202:630,216:632,217:[1,634],218:[1,633]},{72:$V02},{52:636,53:$VH2,72:$V12},o($V$3,$Vi1,{35:637,54:638,55:$VI2}),o($V$3,$V22),o($VT3,$V32),o($VC,$Vh,{34:639,56:640,42:641,45:$VD}),o($VC,$Vh,{56:642,42:643,45:$VD}),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:644,195:[1,645]}),{20:$V44,22:$V54,131:646,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:653,195:[1,654]}),{20:$V44,22:$V54,131:655,166:$V64,193:647,201:$V74,217:$V84},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:656,195:[1,657]}),{20:$V44,22:$V54,131:658,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,659]},o($VC1,$VS1),{102:[1,661],108:660,110:[1,662],111:[1,663],112:664,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,665]},{123:[1,666]},{123:[2,144]},{123:$Vf4},{123:$Vg4,135:667,136:668,137:$Vh4},{123:$Vi4},o($Vj4,$Vk4),o($Vj4,$Vl4),o($Vj4,$Vm4,{141:670,144:671,145:674,142:$Vn4,143:$Vo4}),o($Vp4,$Vq4,{147:675,152:676,153:677,156:678,157:680,71:[1,679],162:$Vr4}),o($Vs4,$Vt4),o($VV2,[2,170]),{20:[1,685],22:[1,689],23:683,151:682,202:684,216:686,217:[1,688],218:[1,687]},{20:[1,693],22:[1,697],23:691,151:690,202:692,216:694,217:[1,696],218:[1,695]},o($VH,[2,272],{23:393,202:394,216:396,38:698,20:$V_2,22:$V$2,217:$V03,218:$V13}),o($Vu4,[2,275]),o($Vu4,$Vm),o($Vu4,$Vn),o($Vu4,$Vr),o($Vu4,$Vs),o($Vu4,$Vt),o($Vu4,$Vu),o($Vu4,$Vv),o($VH,[2,145],{193:402,131:699,20:$V23,22:$V33,166:$V43,201:$V53,217:$V63}),o($Vv4,[2,146]),o($Vv4,$Vw4),o($Vv4,$Vx4),o($Vv4,$VT1),o($Vv4,$VU1),o($Vv4,$VV1),o($Vv4,$VW1),o($VC1,$Vy4),o($VO1,[2,186]),o($VO1,[2,187]),o($VO1,[2,188]),o($VO1,[2,189]),o($VO1,[2,190]),{169:700,170:701,171:704,172:702,173:705,174:703,175:706,180:[1,707]},o($VO1,[2,205],{176:708,178:709,179:[1,710]}),o($VO1,[2,214],{183:711,185:712,179:[1,713]}),o($VO1,[2,222],{187:714,188:715,179:$Vz4}),{179:$Vz4,188:717},o($VA4,$Vr),o($VA4,$Vs),o($VA4,$VB4),o($VA4,$VC4),o($VA4,$VD4),o($VA4,$Vu),o($VA4,$Vv),o($VA4,$VE4),o($VA4,$VF4,{204:718,205:719,113:[1,720]}),o($VA4,$VG4),o($VA4,$VH4),o($VA4,$VI4),o($VA4,$VJ4),o($VA4,$VK4),o($VA4,$VL4),o($VA4,$VM4),o($VA4,$VN4),o($VA4,$VO4),o($VP4,$Vx3),o($VP4,$Vy3),o($VP4,$Vz3),o($VP4,$VA3),{20:[1,723],22:[1,725],89:721,166:[1,726],193:722,217:[1,724]},o($Vh1,$Vp2,{54:727,55:[1,728]}),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:729,69:730,74:731,46:732,80:733,120:737,81:[1,734],82:[1,735],83:[1,736],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:738,66:739,75:740,94:741,96:742,97:746,101:747,98:[1,743],99:[1,744],100:[1,745],103:$VQ4,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:749,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:750}),o($Vx1,$Vw1,{84:751}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:752}),o($Vv1,$VB1,{101:471,97:753,103:$VH3,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:754}),o($VC1,$VD1,{88:755}),o($VC1,$VD1,{88:756}),o($Vx1,$VE1,{107:477,109:478,93:757,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:758}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,762],22:[1,766],23:760,38:759,202:761,216:763,217:[1,765],218:[1,764]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:767}),o($VQ1,$VR1),{121:[1,768],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,769]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,771],108:770,110:[1,772],111:[1,773],112:774,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,775]},o($Vj1,$Vq2),o($Vj1,$Vm1,{67:776,69:777,74:778,46:779,80:780,120:784,81:[1,781],82:[1,782],83:[1,783],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:785,66:786,75:787,94:788,96:789,97:793,101:794,98:[1,790],99:[1,791],100:[1,792],103:$VR4,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:796,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:797}),o($Vx1,$Vw1,{84:798}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:799}),o($Vv1,$VB1,{101:507,97:800,103:$VJ3,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:801}),o($VC1,$VD1,{88:802}),o($VC1,$VD1,{88:803}),o($Vx1,$VE1,{107:513,109:514,93:804,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:805}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,809],22:[1,813],23:807,38:806,202:808,216:810,217:[1,812],218:[1,811]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:814}),o($VQ1,$VR1),{121:[1,815],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,816]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,818],108:817,110:[1,819],111:[1,820],112:821,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,822]},o($Va,$Vn2),o($Va,$Vo2,{52:823,53:$Vl2}),o($Vh1,$Vp2,{54:824,55:$Vm2}),o($Vj1,$Vq2),o($Vj1,$Vm1,{69:532,74:533,46:534,80:535,120:536,67:825,81:$Vi2,82:$Vj2,83:$Vk2,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{66:538,75:539,94:540,96:541,97:545,101:546,70:826,98:$VK3,99:$VL3,100:$VM3,103:$VN3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:827,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vt2,$V71),o($Vt2,$V81),{20:[1,831],22:[1,835],23:829,38:828,202:830,216:832,217:[1,834],218:[1,833]},o($Va,$Vw2),o($Va,$Vx2),o($Vj1,$Vy2),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:836}),{121:[1,837],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VA2),o($Vj1,$VB2),o($Vx1,$Vw1,{84:838}),o($VC2,$VA1,{95:839}),o($Vx1,$VB1,{101:546,97:840,103:$VN3,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,841]},o($VC2,$VS1),{72:[1,842]},o($VJ2,$VK2,{85:843,86:844,194:845,191:[1,846]}),o($VL2,$VK2,{85:847,86:848,194:849,191:$VS4}),o($VN2,$VK2,{85:851,86:852,194:853,191:[1,854]}),o($Vv1,$VO2,{101:277,97:855,103:$Vf2,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:863,123:$VX2,150:$VY2,190:$VZ2}),{20:$V83,22:$V93,23:415,29:[1,864],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,865]},o($VQ1,$VB3),o($Va,$VC3),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($Vh1,$VD3),o($Va,$VE3,{52:823,53:$Vl2}),o($Vj1,$VF3),o($Vh1,$VG3),o($Vj1,$Vk1,{60:866}),o($VH,$VI,{64:867,66:868,68:869,69:870,75:873,77:874,74:875,46:876,94:877,96:878,89:880,90:881,91:882,80:883,97:890,193:891,93:893,120:894,101:895,107:901,109:902,20:[1,897],22:[1,899],28:[1,892],71:[1,871],73:[1,872],81:[1,884],82:[1,885],83:[1,886],87:[1,879],98:[1,887],99:[1,888],100:[1,889],103:$VU4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,900],217:[1,898]}),o($Vj1,$VI3),o($VH,$VI,{64:903,66:904,68:905,69:906,75:909,77:910,74:911,46:912,94:913,96:914,89:916,90:917,91:918,80:919,97:926,193:927,93:929,120:930,101:931,107:937,109:938,20:[1,933],22:[1,935],28:[1,928],71:[1,907],73:[1,908],81:[1,920],82:[1,921],83:[1,922],87:[1,915],98:[1,923],99:[1,924],100:[1,925],103:$VV4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,936],217:[1,934]}),o($Vj1,$VW4),o($Vj1,$Va4),{123:[1,939]},o($Vj1,$V14),o($VC2,$Vb4),{72:$Vw2},{72:$Vx2},o($VT3,$Vy2),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:940}),{121:[1,941],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VA2),o($VT3,$VB2),o($VW3,$Vw1,{84:942}),o($VX4,$VA1,{95:943}),o($VW3,$VB1,{101:606,97:944,103:$VU3,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,945]},o($VX4,$VS1),{72:[1,946]},o($VY4,$VK2,{85:947,86:948,194:949,191:[1,950]}),o($VZ4,$VK2,{85:951,86:952,194:953,191:$V_4}),o($V$4,$VK2,{85:955,86:956,194:957,191:[1,958]}),o($VV3,$VO2,{101:339,97:959,103:$VD2,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:967,123:$VX2,150:$VY2,190:$VZ2}),{20:$V83,22:$V93,23:415,29:[1,968],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,969]},o($V_3,$VB3),{72:$VC3},o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($V$3,$VD3),{52:970,53:$VH2,72:$VE3},o($VT3,$VF3),o($V$3,$VG3),o($VT3,$Vk1,{60:971}),o($VH,$VI,{64:972,66:973,68:974,69:975,75:978,77:979,74:980,46:981,94:982,96:983,89:985,90:986,91:987,80:988,97:995,193:996,93:998,120:999,101:1000,107:1006,109:1007,20:[1,1002],22:[1,1004],28:[1,997],71:[1,976],73:[1,977],81:[1,989],82:[1,990],83:[1,991],87:[1,984],98:[1,992],99:[1,993],100:[1,994],103:$V15,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1005],217:[1,1003]}),o($VT3,$VI3),o($VH,$VI,{64:1008,66:1009,68:1010,69:1011,75:1014,77:1015,74:1016,46:1017,94:1018,96:1019,89:1021,90:1022,91:1023,80:1024,97:1031,193:1032,93:1034,120:1035,101:1036,107:1042,109:1043,20:[1,1038],22:[1,1040],28:[1,1033],71:[1,1012],73:[1,1013],81:[1,1025],82:[1,1026],83:[1,1027],87:[1,1020],98:[1,1028],99:[1,1029],100:[1,1030],103:$V25,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1041],217:[1,1039]}),o($VJ2,$V35),{20:$Vo,22:$Vp,23:1044,216:57,217:$Vq},{20:$V45,22:$V55,102:[1,1057],110:[1,1058],111:[1,1059],112:1056,166:$V65,182:1047,192:1045,193:1046,198:1052,199:1053,200:1054,203:1055,206:[1,1060],207:[1,1061],208:[1,1066],209:[1,1067],210:[1,1068],211:[1,1069],212:[1,1062],213:[1,1063],214:[1,1064],215:[1,1065],217:$V75},o($V85,$Vw4),o($V85,$Vx4),o($V85,$VT1),o($V85,$VU1),o($V85,$VV1),o($V85,$VW1),o($VL2,$V35),{20:$Vo,22:$Vp,23:1070,216:57,217:$Vq},{20:$V95,22:$Va5,102:[1,1083],110:[1,1084],111:[1,1085],112:1082,166:$Vb5,182:1073,192:1071,193:1072,198:1078,199:1079,200:1080,203:1081,206:[1,1086],207:[1,1087],208:[1,1092],209:[1,1093],210:[1,1094],211:[1,1095],212:[1,1088],213:[1,1089],214:[1,1090],215:[1,1091],217:$Vc5},o($VN2,$V35),{20:$Vo,22:$Vp,23:1096,216:57,217:$Vq},{20:$Vd5,22:$Ve5,102:[1,1109],110:[1,1110],111:[1,1111],112:1108,166:$Vf5,182:1099,192:1097,193:1098,198:1104,199:1105,200:1106,203:1107,206:[1,1112],207:[1,1113],208:[1,1118],209:[1,1119],210:[1,1120],211:[1,1121],212:[1,1114],213:[1,1115],214:[1,1116],215:[1,1117],217:$Vg5},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,1122]},o($VC1,$VB3),o($Vy1,$Vh5),{123:$Vi5,136:1123,137:$Vh4},o($Vj4,$Vj5),o($VV2,$VW2,{138:383,139:384,140:385,146:386,148:387,149:388,133:1124,150:$VY2,190:$VZ2}),o($Vj4,$Vk5),o($Vj4,$Vm4,{141:1125,145:1126,142:$Vn4,143:$Vo4}),o($VV2,$VW2,{146:386,148:387,149:388,140:1127,123:$Vl5,137:$Vl5,150:$VY2,190:$VZ2}),o($VV2,$VW2,{146:386,148:387,149:388,140:1128,123:$Vm5,137:$Vm5,150:$VY2,190:$VZ2}),o($Vs4,$Vn5),o($Vs4,$Vo5),o($Vs4,$Vp5),o($Vs4,$Vq5),{20:$Vr5,22:$Vs5,131:1129,166:$Vt5,193:1130,201:$Vu5,217:$Vv5},o($VV2,$VW2,{149:388,128:1136,132:1137,133:1138,134:1139,138:1140,139:1141,140:1142,146:1143,148:1144,150:$VY2,190:$Vw5}),o($Vp4,[2,178]),o($Vp4,[2,183]),o($Vs4,$Vx5),o($Vs4,$Vy5),o($Vs4,$Vz5),o($Vs4,$Vr),o($Vs4,$Vs),o($Vs4,$Vt),o($Vs4,$Vu),o($Vs4,$Vv),o($VV2,[2,168]),o($VV2,$Vy5),o($VV2,$Vz5),o($VV2,$Vr),o($VV2,$Vs),o($VV2,$Vt),o($VV2,$Vu),o($VV2,$Vv),o($Vu4,[2,276]),o($Vv4,[2,147]),o($VO1,[2,191]),o($VO1,[2,198],{171:1146,180:$VA5}),o($VO1,[2,199],{173:1148,180:$VB5}),o($VO1,[2,200],{175:1150,180:$VC5}),o($VD5,[2,192]),o($VD5,[2,194]),o($VD5,[2,196]),{20:$VE5,22:$VF5,23:1152,102:$VG5,110:$VH5,111:$VI5,112:1163,182:1153,186:$VJ5,198:1157,199:1158,200:1159,203:1162,206:$VK5,207:$VL5,208:$VM5,209:$VN5,210:$VO5,211:$VP5,212:$VQ5,213:$VR5,214:$VS5,215:$VT5,216:1156,217:$VU5},o($VO1,[2,201]),o($VO1,[2,206]),o($VD5,[2,202],{177:1177}),o($VO1,[2,210]),o($VO1,[2,215]),o($VD5,[2,211],{184:1178}),o($VO1,[2,217]),o($VO1,[2,223]),o($VD5,[2,219],{189:1179}),o($VO1,[2,218]),o($VA4,$VV5),o($VA4,$VW5),{20:[1,1182],22:[1,1184],89:1180,166:[1,1185],193:1181,217:[1,1183]},o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$VP3),o($VC,$Vh,{56:1186,42:1187,45:$VD}),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1188}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1192],22:[1,1196],23:1190,38:1189,202:1191,216:1193,217:[1,1195],218:[1,1194]},{121:[1,1197],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1198}),o($VC2,$VA1,{95:1199}),o($Vx1,$VB1,{101:747,97:1200,103:$VQ4,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1201]},o($VC2,$VS1),{72:[1,1202]},o($VJ2,$VK2,{85:1203,86:1204,194:1205,191:[1,1206]}),o($VL2,$VK2,{85:1207,86:1208,194:1209,191:$VY5}),o($Vv1,$VO2,{101:471,97:1211,103:$VH3,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1219,86:1220,194:1221,191:[1,1222]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1223],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1224,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1225]},o($VQ1,$VB3),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1226}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1230],22:[1,1234],23:1228,38:1227,202:1229,216:1231,217:[1,1233],218:[1,1232]},{121:[1,1235],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1236}),o($VC2,$VA1,{95:1237}),o($Vx1,$VB1,{101:794,97:1238,103:$VR4,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1239]},o($VC2,$VS1),{72:[1,1240]},o($VJ2,$VK2,{85:1241,86:1242,194:1243,191:[1,1244]}),o($VL2,$VK2,{85:1245,86:1246,194:1247,191:$V_5}),o($Vv1,$VO2,{101:507,97:1249,103:$VJ3,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1257,86:1258,194:1259,191:[1,1260]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1261],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1262,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1263]},o($VQ1,$VB3),o($Vh1,$VO3),o($Vj1,$VP3),o($Vj1,$VQ3),o($Vj1,$VR3),{72:[1,1264]},o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),o($VL2,$VK2,{86:848,194:849,85:1265,191:$VS4}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1266,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:848,194:849,85:1267,191:$VS4}),o($Vx1,$VO2,{101:546,97:1268,103:$VN3,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VS3),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1269,195:[1,1270]}),{20:$V44,22:$V54,131:1271,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1272,195:[1,1273]}),{20:$V44,22:$V54,131:1274,166:$V64,193:647,201:$V74,217:$V84},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1275,195:[1,1276]}),{20:$V44,22:$V54,131:1277,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1278]},o($VC1,$VS1),{102:[1,1280],108:1279,110:[1,1281],111:[1,1282],112:1283,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1284]},{123:[1,1285]},o($VC1,$Vy4),{20:[1,1288],22:[1,1290],89:1286,166:[1,1291],193:1287,217:[1,1289]},o($Vh1,$Vp2,{54:1292,55:[1,1293]}),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:1294,69:1295,74:1296,46:1297,80:1298,120:1302,81:[1,1299],82:[1,1300],83:[1,1301],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:1303,66:1304,75:1305,94:1306,96:1307,97:1311,101:1312,98:[1,1308],99:[1,1309],100:[1,1310],103:$V06,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1314,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:1315}),o($Vx1,$Vw1,{84:1316}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:1317}),o($Vv1,$VB1,{101:895,97:1318,103:$VU4,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:1319}),o($VC1,$VD1,{88:1320}),o($VC1,$VD1,{88:1321}),o($Vx1,$VE1,{107:901,109:902,93:1322,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:1323}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,1327],22:[1,1331],23:1325,38:1324,202:1326,216:1328,217:[1,1330],218:[1,1329]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:1332}),o($VQ1,$VR1),{121:[1,1333],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1334]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,1336],108:1335,110:[1,1337],111:[1,1338],112:1339,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1340]},o($Vj1,$Vq2),o($Vj1,$Vm1,{67:1341,69:1342,74:1343,46:1344,80:1345,120:1349,81:[1,1346],82:[1,1347],83:[1,1348],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:1350,66:1351,75:1352,94:1353,96:1354,97:1358,101:1359,98:[1,1355],99:[1,1356],100:[1,1357],103:$V16,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1361,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:1362}),o($Vx1,$Vw1,{84:1363}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:1364}),o($Vv1,$VB1,{101:931,97:1365,103:$VV4,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:1366}),o($VC1,$VD1,{88:1367}),o($VC1,$VD1,{88:1368}),o($Vx1,$VE1,{107:937,109:938,93:1369,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:1370}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,1374],22:[1,1378],23:1372,38:1371,202:1373,216:1375,217:[1,1377],218:[1,1376]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:1379}),o($VQ1,$VR1),{121:[1,1380],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1381]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,1383],108:1382,110:[1,1384],111:[1,1385],112:1386,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1387]},o($Vx1,$Vh5),o($VZ4,$VK2,{86:952,194:953,85:1388,191:$V_4}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1389,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:952,194:953,85:1390,191:$V_4}),o($VW3,$VO2,{101:606,97:1391,103:$VU3,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VS3),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:1392,195:[1,1393]}),{20:$V44,22:$V54,131:1394,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:1395,195:[1,1396]}),{20:$V44,22:$V54,131:1397,166:$V64,193:647,201:$V74,217:$V84},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:1398,195:[1,1399]}),{20:$V44,22:$V54,131:1400,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,1401]},o($VZ3,$VS1),{102:[1,1403],108:1402,110:[1,1404],111:[1,1405],112:1406,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1407]},{123:[1,1408]},o($VZ3,$Vy4),{20:[1,1411],22:[1,1413],89:1409,166:[1,1414],193:1410,217:[1,1412]},o($V$3,$VO3),o($V$3,$Vp2,{54:1415,55:[1,1416]}),o($VT3,$Vq2),o($VH,$VI,{67:1417,69:1418,74:1419,46:1420,80:1421,120:1425,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,1422],82:[1,1423],83:[1,1424]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:1426,66:1427,75:1428,94:1429,96:1430,97:1434,101:1435,98:[1,1431],99:[1,1432],100:[1,1433],103:$V46,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1437,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:1438}),o($VW3,$Vw1,{84:1439}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:1440}),o($VV3,$VB1,{101:1000,97:1441,103:$V15,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:1442}),o($VZ3,$VD1,{88:1443}),o($VZ3,$VD1,{88:1444}),o($VW3,$VE1,{107:1006,109:1007,93:1445,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:1446}),o($V36,$V71),o($V36,$V81),{20:[1,1450],22:[1,1454],23:1448,38:1447,202:1449,216:1451,217:[1,1453],218:[1,1452]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:1455}),o($V_3,$VR1),{121:[1,1456],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1457]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,1459],108:1458,110:[1,1460],111:[1,1461],112:1462,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1463]},o($VT3,$Vq2),o($VH,$VI,{67:1464,69:1465,74:1466,46:1467,80:1468,120:1472,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,1469],82:[1,1470],83:[1,1471]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:1473,66:1474,75:1475,94:1476,96:1477,97:1481,101:1482,98:[1,1478],99:[1,1479],100:[1,1480],103:$V56,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1484,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:1485}),o($VW3,$Vw1,{84:1486}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:1487}),o($VV3,$VB1,{101:1036,97:1488,103:$V25,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:1489}),o($VZ3,$VD1,{88:1490}),o($VZ3,$VD1,{88:1491}),o($VW3,$VE1,{107:1042,109:1043,93:1492,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:1493}),o($V36,$V71),o($V36,$V81),{20:[1,1497],22:[1,1501],23:1495,38:1494,202:1496,216:1498,217:[1,1500],218:[1,1499]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:1502}),o($V_3,$VR1),{121:[1,1503],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1504]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,1506],108:1505,110:[1,1507],111:[1,1508],112:1509,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1510]},{195:[1,1513],196:1511,197:[1,1512]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:1514,205:1515,113:[1,1516]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,1519],196:1517,197:[1,1518]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:1520,205:1521,113:[1,1522]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{195:[1,1525],196:1523,197:[1,1524]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:1526,205:1527,113:[1,1528]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),{20:[1,1531],22:[1,1533],89:1529,166:[1,1534],193:1530,217:[1,1532]},o($Vj4,$Vc6),o($Vj4,$Vd6),o($Vj4,$Ve6),o($Vs4,$Vf6),o($Vs4,$Vg6),o($Vs4,$Vh6),o($VC,$Vh,{48:1535,49:1536,57:1537,61:1538,42:1539,45:$VD}),o($Vi6,$Vw4),o($Vi6,$Vx4),o($Vi6,$VT1),o($Vi6,$VU1),o($Vi6,$VV1),o($Vi6,$VW1),{72:[1,1540]},{72:$Vf4},{72:$Vg4,135:1541,136:1542,137:$Vj6},{72:$Vi4},o($Vk6,$Vk4),o($Vk6,$Vl4),o($Vk6,$Vm4,{141:1544,144:1545,145:1548,142:$Vl6,143:$Vm6}),o($Vp4,$Vq4,{157:680,147:1549,152:1550,153:1551,156:1552,71:[1,1553],162:$Vr4}),o($Vn6,$Vt4),{20:[1,1557],22:[1,1561],23:1555,151:1554,202:1556,216:1558,217:[1,1560],218:[1,1559]},o($VD5,[2,193]),{20:$VE5,22:$VF5,23:1152,216:1156,217:$VU5},o($VD5,[2,195]),{102:$VG5,110:$VH5,111:$VI5,112:1163,182:1153,198:1157,199:1158,200:1159,203:1162,206:$VK5,207:$VL5,208:$VM5,209:$VN5,210:$VO5,211:$VP5,212:$VQ5,213:$VR5,214:$VS5,215:$VT5},o($VD5,[2,197]),{186:$VJ5},o($VD5,$Vo6,{181:1562,179:$Vp6}),o($VD5,$Vo6,{181:1564,179:$Vp6}),o($VD5,$Vo6,{181:1565,179:$Vp6}),o($Vq6,$Vr),o($Vq6,$Vs),o($Vq6,$VB4),o($Vq6,$VC4),o($Vq6,$VD4),o($Vq6,$Vu),o($Vq6,$Vv),o($Vq6,$VE4),o($Vq6,$VF4,{204:1566,205:1567,113:[1,1568]}),o($Vq6,$VG4),o($Vq6,$VH4),o($Vq6,$VI4),o($Vq6,$VJ4),o($Vq6,$VK4),o($Vq6,$VL4),o($Vq6,$VM4),o($Vq6,$VN4),o($Vq6,$VO4),o($Vr6,$Vx3),o($Vr6,$Vy3),o($Vr6,$Vz3),o($Vr6,$VA3),o($VO1,[2,204],{171:1569,180:$VA5}),o($VO1,[2,213],{173:1570,180:$VB5}),o($VO1,[2,221],{175:1571,180:$VC5}),o($VA4,$Vs6),o($VA4,$VN1),o($VA4,$VT1),o($VA4,$VU1),o($VA4,$VV1),o($VA4,$VW1),o($Vj1,$VI3),o($VH,$VI,{64:1572,66:1573,68:1574,69:1575,75:1578,77:1579,74:1580,46:1581,94:1582,96:1583,89:1585,90:1586,91:1587,80:1588,97:1595,193:1596,93:1598,120:1599,101:1600,107:1606,109:1607,20:[1,1602],22:[1,1604],28:[1,1597],71:[1,1576],73:[1,1577],81:[1,1589],82:[1,1590],83:[1,1591],87:[1,1584],98:[1,1592],99:[1,1593],100:[1,1594],103:$Vt6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1605],217:[1,1603]}),o($VL2,$VK2,{86:1208,194:1209,85:1608,191:$VY5}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1609,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1208,194:1209,85:1610,191:$VY5}),o($Vx1,$VO2,{101:747,97:1611,103:$VQ4,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1612,195:[1,1613]}),{20:$V44,22:$V54,131:1614,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1615,195:[1,1616]}),{20:$V44,22:$V54,131:1617,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1618]},o($VC1,$VS1),{102:[1,1620],108:1619,110:[1,1621],111:[1,1622],112:1623,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1624]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1625,195:[1,1626]}),{20:$V44,22:$V54,131:1627,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,1628]},{20:[1,1631],22:[1,1633],89:1629,166:[1,1634],193:1630,217:[1,1632]},o($VL2,$VK2,{86:1246,194:1247,85:1635,191:$V_5}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1636,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1246,194:1247,85:1637,191:$V_5}),o($Vx1,$VO2,{101:794,97:1638,103:$VR4,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1639,195:[1,1640]}),{20:$V44,22:$V54,131:1641,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1642,195:[1,1643]}),{20:$V44,22:$V54,131:1644,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1645]},o($VC1,$VS1),{102:[1,1647],108:1646,110:[1,1648],111:[1,1649],112:1650,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1651]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1652,195:[1,1653]}),{20:$V44,22:$V54,131:1654,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,1655]},{20:[1,1658],22:[1,1660],89:1656,166:[1,1661],193:1657,217:[1,1659]},o($Vj1,$VW4),o($Vj1,$Va4),{123:[1,1662]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:1663,216:57,217:$Vq},{20:$Vu6,22:$Vv6,102:[1,1676],110:[1,1677],111:[1,1678],112:1675,166:$Vw6,182:1666,192:1664,193:1665,198:1671,199:1672,200:1673,203:1674,206:[1,1679],207:[1,1680],208:[1,1685],209:[1,1686],210:[1,1687],211:[1,1688],212:[1,1681],213:[1,1682],214:[1,1683],215:[1,1684],217:$Vx6},o($VL2,$V35),{20:$Vo,22:$Vp,23:1689,216:57,217:$Vq},{20:$Vy6,22:$Vz6,102:[1,1702],110:[1,1703],111:[1,1704],112:1701,166:$VA6,182:1692,192:1690,193:1691,198:1697,199:1698,200:1699,203:1700,206:[1,1705],207:[1,1706],208:[1,1711],209:[1,1712],210:[1,1713],211:[1,1714],212:[1,1707],213:[1,1708],214:[1,1709],215:[1,1710],217:$VB6},o($VN2,$V35),{20:$Vo,22:$Vp,23:1715,216:57,217:$Vq},{20:$VC6,22:$VD6,102:[1,1728],110:[1,1729],111:[1,1730],112:1727,166:$VE6,182:1718,192:1716,193:1717,198:1723,199:1724,200:1725,203:1726,206:[1,1731],207:[1,1732],208:[1,1737],209:[1,1738],210:[1,1739],211:[1,1740],212:[1,1733],213:[1,1734],214:[1,1735],215:[1,1736],217:$VF6},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,1741]},o($VC1,$VB3),o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$VP3),o($VC,$Vh,{56:1742,42:1743,45:$VD}),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1744}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1748],22:[1,1752],23:1746,38:1745,202:1747,216:1749,217:[1,1751],218:[1,1750]},{121:[1,1753],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1754}),o($VC2,$VA1,{95:1755}),o($Vx1,$VB1,{101:1312,97:1756,103:$V06,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1757]},o($VC2,$VS1),{72:[1,1758]},o($VJ2,$VK2,{85:1759,86:1760,194:1761,191:[1,1762]}),o($VL2,$VK2,{85:1763,86:1764,194:1765,191:$VG6}),o($Vv1,$VO2,{101:895,97:1767,103:$VU4,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1775,86:1776,194:1777,191:[1,1778]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1779],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1780,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1781]},o($VQ1,$VB3),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1782}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1786],22:[1,1790],23:1784,38:1783,202:1785,216:1787,217:[1,1789],218:[1,1788]},{121:[1,1791],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1792}),o($VC2,$VA1,{95:1793}),o($Vx1,$VB1,{101:1359,97:1794,103:$V16,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1795]},o($VC2,$VS1),{72:[1,1796]},o($VJ2,$VK2,{85:1797,86:1798,194:1799,191:[1,1800]}),o($VL2,$VK2,{85:1801,86:1802,194:1803,191:$VI6}),o($Vv1,$VO2,{101:931,97:1805,103:$VV4,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1813,86:1814,194:1815,191:[1,1816]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1817],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1818,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1819]},o($VQ1,$VB3),o($VT3,$Va4),{123:[1,1820]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:1821,216:57,217:$Vq},{20:$VK6,22:$VL6,102:[1,1834],110:[1,1835],111:[1,1836],112:1833,166:$VM6,182:1824,192:1822,193:1823,198:1829,199:1830,200:1831,203:1832,206:[1,1837],207:[1,1838],208:[1,1843],209:[1,1844],210:[1,1845],211:[1,1846],212:[1,1839],213:[1,1840],214:[1,1841],215:[1,1842],217:$VN6},o($VZ4,$V35),{20:$Vo,22:$Vp,23:1847,216:57,217:$Vq},{20:$VO6,22:$VP6,102:[1,1860],110:[1,1861],111:[1,1862],112:1859,166:$VQ6,182:1850,192:1848,193:1849,198:1855,199:1856,200:1857,203:1858,206:[1,1863],207:[1,1864],208:[1,1869],209:[1,1870],210:[1,1871],211:[1,1872],212:[1,1865],213:[1,1866],214:[1,1867],215:[1,1868],217:$VR6},o($V$4,$V35),{20:$Vo,22:$Vp,23:1873,216:57,217:$Vq},{20:$VS6,22:$VT6,102:[1,1886],110:[1,1887],111:[1,1888],112:1885,166:$VU6,182:1876,192:1874,193:1875,198:1881,199:1882,200:1883,203:1884,206:[1,1889],207:[1,1890],208:[1,1895],209:[1,1896],210:[1,1897],211:[1,1898],212:[1,1891],213:[1,1892],214:[1,1893],215:[1,1894],217:$VV6},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,1899]},o($VZ3,$VB3),o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VT3,$VP3),o($VC,$Vh,{56:1900,42:1901,45:$VD}),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:1902}),o($VT3,$V71),o($VT3,$V81),{20:[1,1906],22:[1,1910],23:1904,38:1903,202:1905,216:1907,217:[1,1909],218:[1,1908]},{121:[1,1911],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:1912}),o($VX4,$VA1,{95:1913}),o($VW3,$VB1,{101:1435,97:1914,103:$V46,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,1915]},o($VX4,$VS1),{72:[1,1916]},o($VY4,$VK2,{85:1917,86:1918,194:1919,191:[1,1920]}),o($VZ4,$VK2,{85:1921,86:1922,194:1923,191:$VW6}),o($VV3,$VO2,{101:1000,97:1925,103:$V15,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:1933,86:1934,194:1935,191:[1,1936]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,1937],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1938,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,1939]},o($V_3,$VB3),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:1940}),o($VT3,$V71),o($VT3,$V81),{20:[1,1944],22:[1,1948],23:1942,38:1941,202:1943,216:1945,217:[1,1947],218:[1,1946]},{121:[1,1949],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:1950}),o($VX4,$VA1,{95:1951}),o($VW3,$VB1,{101:1482,97:1952,103:$V56,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,1953]},o($VX4,$VS1),{72:[1,1954]},o($VY4,$VK2,{85:1955,86:1956,194:1957,191:[1,1958]}),o($VZ4,$VK2,{85:1959,86:1960,194:1961,191:$VY6}),o($VV3,$VO2,{101:1036,97:1963,103:$V25,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:1971,86:1972,194:1973,191:[1,1974]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,1975],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1976,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,1977]},o($V_3,$VB3),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$V45,22:$V55,89:1978,166:$V65,193:1979,217:$V75},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$V95,22:$Va5,89:1980,166:$Vb5,193:1981,217:$Vc5},o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vd5,22:$Ve5,89:1982,166:$Vf5,193:1983,217:$Vg5},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($V_6,$V$6,{154:1984,155:1985,158:$V07,159:$V17,160:$V27,161:$V37}),o($V47,$V57),o($V67,$V77,{58:1990}),o($V87,$V97,{62:1991}),o($VH,$VI,{65:1992,75:1993,77:1994,78:1995,94:1998,96:1999,89:2001,90:2002,91:2003,80:2004,46:2005,97:2009,193:2010,93:2012,120:2013,101:2017,107:2023,109:2024,20:[1,2019],22:[1,2021],28:[1,2011],71:[1,1996],73:[1,1997],81:[1,2014],82:[1,2015],83:[1,2016],87:[1,2000],98:[1,2006],99:[1,2007],100:[1,2008],103:$Va7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2022],217:[1,2020]}),o($V_6,$V$6,{155:1985,154:2025,158:$V07,159:$V17,160:$V27,161:$V37}),{72:$Vi5,136:2026,137:$Vj6},o($Vk6,$Vj5),o($VV2,$VW2,{149:388,138:1140,139:1141,140:1142,146:1143,148:1144,133:2027,150:$VY2,190:$Vw5}),o($Vk6,$Vk5),o($Vk6,$Vm4,{141:2028,145:2029,142:$Vl6,143:$Vm6}),o($VV2,$VW2,{149:388,146:1143,148:1144,140:2030,72:$Vl5,137:$Vl5,150:$VY2,190:$Vw5}),o($VV2,$VW2,{149:388,146:1143,148:1144,140:2031,72:$Vm5,137:$Vm5,150:$VY2,190:$Vw5}),o($Vn6,$Vn5),o($Vn6,$Vo5),o($Vn6,$Vp5),o($Vn6,$Vq5),{20:$Vr5,22:$Vs5,131:2032,166:$Vt5,193:1130,201:$Vu5,217:$Vv5},o($VV2,$VW2,{149:388,132:1137,133:1138,134:1139,138:1140,139:1141,140:1142,146:1143,148:1144,128:2033,150:$VY2,190:$Vw5}),o($Vn6,$Vx5),o($Vn6,$Vy5),o($Vn6,$Vz5),o($Vn6,$Vr),o($Vn6,$Vs),o($Vn6,$Vt),o($Vn6,$Vu),o($Vn6,$Vv),o($VD5,[2,207]),o($VD5,[2,209]),o($VD5,[2,216]),o($VD5,[2,224]),o($Vq6,$VV5),o($Vq6,$VW5),{20:[1,2036],22:[1,2038],89:2034,166:[1,2039],193:2035,217:[1,2037]},o($VD5,[2,203]),o($VD5,[2,212]),o($VD5,[2,220]),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:2040,69:2041,74:2042,46:2043,80:2044,120:2048,81:[1,2045],82:[1,2046],83:[1,2047],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:2049,66:2050,75:2051,94:2052,96:2053,97:2057,101:2058,98:[1,2054],99:[1,2055],100:[1,2056],103:$Vb7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2060,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:2061}),o($Vx1,$Vw1,{84:2062}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:2063}),o($Vv1,$VB1,{101:1600,97:2064,103:$Vt6,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:2065}),o($VC1,$VD1,{88:2066}),o($VC1,$VD1,{88:2067}),o($Vx1,$VE1,{107:1606,109:1607,93:2068,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:2069}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,2073],22:[1,2077],23:2071,38:2070,202:2072,216:2074,217:[1,2076],218:[1,2075]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:2078}),o($VQ1,$VR1),{121:[1,2079],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2080]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,2082],108:2081,110:[1,2083],111:[1,2084],112:2085,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2086]},o($Vj1,$Va4),{123:[1,2087]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2088,216:57,217:$Vq},{20:$Vc7,22:$Vd7,102:[1,2101],110:[1,2102],111:[1,2103],112:2100,166:$Ve7,182:2091,192:2089,193:2090,198:2096,199:2097,200:2098,203:2099,206:[1,2104],207:[1,2105],208:[1,2110],209:[1,2111],210:[1,2112],211:[1,2113],212:[1,2106],213:[1,2107],214:[1,2108],215:[1,2109],217:$Vf7},o($VL2,$V35),{20:$Vo,22:$Vp,23:2114,216:57,217:$Vq},{20:$Vg7,22:$Vh7,102:[1,2127],110:[1,2128],111:[1,2129],112:2126,166:$Vi7,182:2117,192:2115,193:2116,198:2122,199:2123,200:2124,203:2125,206:[1,2130],207:[1,2131],208:[1,2136],209:[1,2137],210:[1,2138],211:[1,2139],212:[1,2132],213:[1,2133],214:[1,2134],215:[1,2135],217:$Vj7},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2140]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2141,216:57,217:$Vq},{20:$Vk7,22:$Vl7,102:[1,2154],110:[1,2155],111:[1,2156],112:2153,166:$Vm7,182:2144,192:2142,193:2143,198:2149,199:2150,200:2151,203:2152,206:[1,2157],207:[1,2158],208:[1,2163],209:[1,2164],210:[1,2165],211:[1,2166],212:[1,2159],213:[1,2160],214:[1,2161],215:[1,2162],217:$Vn7},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$Va4),{123:[1,2167]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2168,216:57,217:$Vq},{20:$Vo7,22:$Vp7,102:[1,2181],110:[1,2182],111:[1,2183],112:2180,166:$Vq7,182:2171,192:2169,193:2170,198:2176,199:2177,200:2178,203:2179,206:[1,2184],207:[1,2185],208:[1,2190],209:[1,2191],210:[1,2192],211:[1,2193],212:[1,2186],213:[1,2187],214:[1,2188],215:[1,2189],217:$Vr7},o($VL2,$V35),{20:$Vo,22:$Vp,23:2194,216:57,217:$Vq},{20:$Vs7,22:$Vt7,102:[1,2207],110:[1,2208],111:[1,2209],112:2206,166:$Vu7,182:2197,192:2195,193:2196,198:2202,199:2203,200:2204,203:2205,206:[1,2210],207:[1,2211],208:[1,2216],209:[1,2217],210:[1,2218],211:[1,2219],212:[1,2212],213:[1,2213],214:[1,2214],215:[1,2215],217:$Vv7},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2220]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2221,216:57,217:$Vq},{20:$Vw7,22:$Vx7,102:[1,2234],110:[1,2235],111:[1,2236],112:2233,166:$Vy7,182:2224,192:2222,193:2223,198:2229,199:2230,200:2231,203:2232,206:[1,2237],207:[1,2238],208:[1,2243],209:[1,2244],210:[1,2245],211:[1,2246],212:[1,2239],213:[1,2240],214:[1,2241],215:[1,2242],217:$Vz7},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vx1,$Vh5),{195:[1,2249],196:2247,197:[1,2248]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2250,205:2251,113:[1,2252]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2255],196:2253,197:[1,2254]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2256,205:2257,113:[1,2258]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{195:[1,2261],196:2259,197:[1,2260]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2262,205:2263,113:[1,2264]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),{20:[1,2267],22:[1,2269],89:2265,166:[1,2270],193:2266,217:[1,2268]},o($Vj1,$VI3),o($VH,$VI,{64:2271,66:2272,68:2273,69:2274,75:2277,77:2278,74:2279,46:2280,94:2281,96:2282,89:2284,90:2285,91:2286,80:2287,97:2294,193:2295,93:2297,120:2298,101:2299,107:2305,109:2306,20:[1,2301],22:[1,2303],28:[1,2296],71:[1,2275],73:[1,2276],81:[1,2288],82:[1,2289],83:[1,2290],87:[1,2283],98:[1,2291],99:[1,2292],100:[1,2293],103:$VA7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2304],217:[1,2302]}),o($VL2,$VK2,{86:1764,194:1765,85:2307,191:$VG6}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2308,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1764,194:1765,85:2309,191:$VG6}),o($Vx1,$VO2,{101:1312,97:2310,103:$V06,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:2311,195:[1,2312]}),{20:$V44,22:$V54,131:2313,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:2314,195:[1,2315]}),{20:$V44,22:$V54,131:2316,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,2317]},o($VC1,$VS1),{102:[1,2319],108:2318,110:[1,2320],111:[1,2321],112:2322,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2323]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:2324,195:[1,2325]}),{20:$V44,22:$V54,131:2326,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,2327]},{20:[1,2330],22:[1,2332],89:2328,166:[1,2333],193:2329,217:[1,2331]},o($VL2,$VK2,{86:1802,194:1803,85:2334,191:$VI6}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2335,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1802,194:1803,85:2336,191:$VI6}),o($Vx1,$VO2,{101:1359,97:2337,103:$V16,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:2338,195:[1,2339]}),{20:$V44,22:$V54,131:2340,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:2341,195:[1,2342]}),{20:$V44,22:$V54,131:2343,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,2344]},o($VC1,$VS1),{102:[1,2346],108:2345,110:[1,2347],111:[1,2348],112:2349,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2350]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:2351,195:[1,2352]}),{20:$V44,22:$V54,131:2353,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,2354]},{20:[1,2357],22:[1,2359],89:2355,166:[1,2360],193:2356,217:[1,2358]},o($VW3,$Vh5),{195:[1,2363],196:2361,197:[1,2362]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:2364,205:2365,113:[1,2366]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,2369],196:2367,197:[1,2368]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:2370,205:2371,113:[1,2372]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{195:[1,2375],196:2373,197:[1,2374]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:2376,205:2377,113:[1,2378]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),{20:[1,2381],22:[1,2383],89:2379,166:[1,2384],193:2380,217:[1,2382]},o($VT3,$VI3),o($VH,$VI,{64:2385,66:2386,68:2387,69:2388,75:2391,77:2392,74:2393,46:2394,94:2395,96:2396,89:2398,90:2399,91:2400,80:2401,97:2408,193:2409,93:2411,120:2412,101:2413,107:2419,109:2420,20:[1,2415],22:[1,2417],28:[1,2410],71:[1,2389],73:[1,2390],81:[1,2402],82:[1,2403],83:[1,2404],87:[1,2397],98:[1,2405],99:[1,2406],100:[1,2407],103:$VE7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2418],217:[1,2416]}),o($VZ4,$VK2,{86:1922,194:1923,85:2421,191:$VW6}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2422,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:1922,194:1923,85:2423,191:$VW6}),o($VW3,$VO2,{101:1435,97:2424,103:$V46,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:2425,195:[1,2426]}),{20:$V44,22:$V54,131:2427,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:2428,195:[1,2429]}),{20:$V44,22:$V54,131:2430,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,2431]},o($VZ3,$VS1),{102:[1,2433],108:2432,110:[1,2434],111:[1,2435],112:2436,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2437]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:2438,195:[1,2439]}),{20:$V44,22:$V54,131:2440,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,2441]},{20:[1,2444],22:[1,2446],89:2442,166:[1,2447],193:2443,217:[1,2445]},o($VZ4,$VK2,{86:1960,194:1961,85:2448,191:$VY6}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2449,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:1960,194:1961,85:2450,191:$VY6}),o($VW3,$VO2,{101:1482,97:2451,103:$V56,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:2452,195:[1,2453]}),{20:$V44,22:$V54,131:2454,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:2455,195:[1,2456]}),{20:$V44,22:$V54,131:2457,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,2458]},o($VZ3,$VS1),{102:[1,2460],108:2459,110:[1,2461],111:[1,2462],112:2463,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2464]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:2465,195:[1,2466]}),{20:$V44,22:$V54,131:2467,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,2468]},{20:[1,2471],22:[1,2473],89:2469,166:[1,2474],193:2470,217:[1,2472]},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($V_6,$Vw1,{84:2475}),o($V_6,$VF7),o($V_6,$VG7),o($V_6,$VH7),o($V_6,$VI7),o($V_6,$VJ7),o($V47,$VK7,{59:2476,53:[1,2477]}),o($V67,$VL7,{63:2478,55:[1,2479]}),o($V87,$VM7),o($V87,$VN7,{76:2480,78:2481,80:2482,46:2483,120:2484,81:[1,2485],82:[1,2486],83:[1,2487],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:2488,75:2489,94:2490,96:2491,97:2495,101:2496,98:[1,2492],99:[1,2493],100:[1,2494],103:$VQ7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2498,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:2499}),o($VT7,$VB1,{101:2017,97:2500,103:$Va7,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:2501}),o($VU7,$VD1,{88:2502}),o($VU7,$VD1,{88:2503}),o($V87,$VE1,{107:2023,109:2024,93:2504,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:2505}),o($VY7,$VR1),{121:[1,2506],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,2510],22:[1,2514],23:2508,38:2507,202:2509,216:2511,217:[1,2513],218:[1,2512]},{102:[1,2515]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,2517],108:2516,110:[1,2518],111:[1,2519],112:2520,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2521]},o($V_6,$Vw1,{84:2522}),o($Vk6,$Vc6),o($Vk6,$Vd6),o($Vk6,$Ve6),o($Vn6,$Vf6),o($Vn6,$Vg6),o($Vn6,$Vh6),o($VC,$Vh,{48:2523,49:2524,57:2525,61:2526,42:2527,45:$VD}),{72:[1,2528]},o($Vq6,$Vs6),o($Vq6,$VN1),o($Vq6,$VT1),o($Vq6,$VU1),o($Vq6,$VV1),o($Vq6,$VW1),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:2529}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,2533],22:[1,2537],23:2531,38:2530,202:2532,216:2534,217:[1,2536],218:[1,2535]},{121:[1,2538],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:2539}),o($VC2,$VA1,{95:2540}),o($Vx1,$VB1,{101:2058,97:2541,103:$Vb7,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,2542]},o($VC2,$VS1),{72:[1,2543]},o($VJ2,$VK2,{85:2544,86:2545,194:2546,191:[1,2547]}),o($VL2,$VK2,{85:2548,86:2549,194:2550,191:$VZ7}),o($Vv1,$VO2,{101:1600,97:2552,103:$Vt6,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:2560,86:2561,194:2562,191:[1,2563]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,2564],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2565,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,2566]},o($VQ1,$VB3),o($Vx1,$Vh5),{195:[1,2569],196:2567,197:[1,2568]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2570,205:2571,113:[1,2572]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2575],196:2573,197:[1,2574]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2576,205:2577,113:[1,2578]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,2581],22:[1,2583],89:2579,166:[1,2584],193:2580,217:[1,2582]},{195:[1,2587],196:2585,197:[1,2586]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2588,205:2589,113:[1,2590]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vx1,$Vh5),{195:[1,2593],196:2591,197:[1,2592]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2594,205:2595,113:[1,2596]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2599],196:2597,197:[1,2598]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2600,205:2601,113:[1,2602]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,2605],22:[1,2607],89:2603,166:[1,2608],193:2604,217:[1,2606]},{195:[1,2611],196:2609,197:[1,2610]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2612,205:2613,113:[1,2614]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vu6,22:$Vv6,89:2615,166:$Vw6,193:2616,217:$Vx6},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vy6,22:$Vz6,89:2617,166:$VA6,193:2618,217:$VB6},o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$VC6,22:$VD6,89:2619,166:$VE6,193:2620,217:$VF6},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:2621,69:2622,74:2623,46:2624,80:2625,120:2629,81:[1,2626],82:[1,2627],83:[1,2628],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:2630,66:2631,75:2632,94:2633,96:2634,97:2638,101:2639,98:[1,2635],99:[1,2636],100:[1,2637],103:$V$7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2641,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:2642}),o($Vx1,$Vw1,{84:2643}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:2644}),o($Vv1,$VB1,{101:2299,97:2645,103:$VA7,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:2646}),o($VC1,$VD1,{88:2647}),o($VC1,$VD1,{88:2648}),o($Vx1,$VE1,{107:2305,109:2306,93:2649,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:2650}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,2654],22:[1,2658],23:2652,38:2651,202:2653,216:2655,217:[1,2657],218:[1,2656]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:2659}),o($VQ1,$VR1),{121:[1,2660],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2661]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,2663],108:2662,110:[1,2664],111:[1,2665],112:2666,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2667]},o($Vj1,$Va4),{123:[1,2668]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2669,216:57,217:$Vq},{20:$V08,22:$V18,102:[1,2682],110:[1,2683],111:[1,2684],112:2681,166:$V28,182:2672,192:2670,193:2671,198:2677,199:2678,200:2679,203:2680,206:[1,2685],207:[1,2686],208:[1,2691],209:[1,2692],210:[1,2693],211:[1,2694],212:[1,2687],213:[1,2688],214:[1,2689],215:[1,2690],217:$V38},o($VL2,$V35),{20:$Vo,22:$Vp,23:2695,216:57,217:$Vq},{20:$V48,22:$V58,102:[1,2708],110:[1,2709],111:[1,2710],112:2707,166:$V68,182:2698,192:2696,193:2697,198:2703,199:2704,200:2705,203:2706,206:[1,2711],207:[1,2712],208:[1,2717],209:[1,2718],210:[1,2719],211:[1,2720],212:[1,2713],213:[1,2714],214:[1,2715],215:[1,2716],217:$V78},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2721]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2722,216:57,217:$Vq},{20:$V88,22:$V98,102:[1,2735],110:[1,2736],111:[1,2737],112:2734,166:$Va8,182:2725,192:2723,193:2724,198:2730,199:2731,200:2732,203:2733,206:[1,2738],207:[1,2739],208:[1,2744],209:[1,2745],210:[1,2746],211:[1,2747],212:[1,2740],213:[1,2741],214:[1,2742],215:[1,2743],217:$Vb8},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$Va4),{123:[1,2748]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2749,216:57,217:$Vq},{20:$Vc8,22:$Vd8,102:[1,2762],110:[1,2763],111:[1,2764],112:2761,166:$Ve8,182:2752,192:2750,193:2751,198:2757,199:2758,200:2759,203:2760,206:[1,2765],207:[1,2766],208:[1,2771],209:[1,2772],210:[1,2773],211:[1,2774],212:[1,2767],213:[1,2768],214:[1,2769],215:[1,2770],217:$Vf8},o($VL2,$V35),{20:$Vo,22:$Vp,23:2775,216:57,217:$Vq},{20:$Vg8,22:$Vh8,102:[1,2788],110:[1,2789],111:[1,2790],112:2787,166:$Vi8,182:2778,192:2776,193:2777,198:2783,199:2784,200:2785,203:2786,206:[1,2791],207:[1,2792],208:[1,2797],209:[1,2798],210:[1,2799],211:[1,2800],212:[1,2793],213:[1,2794],214:[1,2795],215:[1,2796],217:$Vj8},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2801]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2802,216:57,217:$Vq},{20:$Vk8,22:$Vl8,102:[1,2815],110:[1,2816],111:[1,2817],112:2814,166:$Vm8,182:2805,192:2803,193:2804,198:2810,199:2811,200:2812,203:2813,206:[1,2818],207:[1,2819],208:[1,2824],209:[1,2825],210:[1,2826],211:[1,2827],212:[1,2820],213:[1,2821],214:[1,2822],215:[1,2823],217:$Vn8},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VK6,22:$VL6,89:2828,166:$VM6,193:2829,217:$VN6},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VO6,22:$VP6,89:2830,166:$VQ6,193:2831,217:$VR6},o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$VS6,22:$VT6,89:2832,166:$VU6,193:2833,217:$VV6},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($VT3,$Vq2),o($VH,$VI,{67:2834,69:2835,74:2836,46:2837,80:2838,120:2842,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,2839],82:[1,2840],83:[1,2841]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:2843,66:2844,75:2845,94:2846,96:2847,97:2851,101:2852,98:[1,2848],99:[1,2849],100:[1,2850],103:$Vo8,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2854,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:2855}),o($VW3,$Vw1,{84:2856}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:2857}),o($VV3,$VB1,{101:2413,97:2858,103:$VE7,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:2859}),o($VZ3,$VD1,{88:2860}),o($VZ3,$VD1,{88:2861}),o($VW3,$VE1,{107:2419,109:2420,93:2862,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:2863}),o($V36,$V71),o($V36,$V81),{20:[1,2867],22:[1,2871],23:2865,38:2864,202:2866,216:2868,217:[1,2870],218:[1,2869]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:2872}),o($V_3,$VR1),{121:[1,2873],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2874]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,2876],108:2875,110:[1,2877],111:[1,2878],112:2879,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2880]},o($VT3,$Va4),{123:[1,2881]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:2882,216:57,217:$Vq},{20:$Vp8,22:$Vq8,102:[1,2895],110:[1,2896],111:[1,2897],112:2894,166:$Vr8,182:2885,192:2883,193:2884,198:2890,199:2891,200:2892,203:2893,206:[1,2898],207:[1,2899],208:[1,2904],209:[1,2905],210:[1,2906],211:[1,2907],212:[1,2900],213:[1,2901],214:[1,2902],215:[1,2903],217:$Vs8},o($VZ4,$V35),{20:$Vo,22:$Vp,23:2908,216:57,217:$Vq},{20:$Vt8,22:$Vu8,102:[1,2921],110:[1,2922],111:[1,2923],112:2920,166:$Vv8,182:2911,192:2909,193:2910,198:2916,199:2917,200:2918,203:2919,206:[1,2924],207:[1,2925],208:[1,2930],209:[1,2931],210:[1,2932],211:[1,2933],212:[1,2926],213:[1,2927],214:[1,2928],215:[1,2929],217:$Vw8},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,2934]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:2935,216:57,217:$Vq},{20:$Vx8,22:$Vy8,102:[1,2948],110:[1,2949],111:[1,2950],112:2947,166:$Vz8,182:2938,192:2936,193:2937,198:2943,199:2944,200:2945,203:2946,206:[1,2951],207:[1,2952],208:[1,2957],209:[1,2958],210:[1,2959],211:[1,2960],212:[1,2953],213:[1,2954],214:[1,2955],215:[1,2956],217:$VA8},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VT3,$Va4),{123:[1,2961]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:2962,216:57,217:$Vq},{20:$VB8,22:$VC8,102:[1,2975],110:[1,2976],111:[1,2977],112:2974,166:$VD8,182:2965,192:2963,193:2964,198:2970,199:2971,200:2972,203:2973,206:[1,2978],207:[1,2979],208:[1,2984],209:[1,2985],210:[1,2986],211:[1,2987],212:[1,2980],213:[1,2981],214:[1,2982],215:[1,2983],217:$VE8},o($VZ4,$V35),{20:$Vo,22:$Vp,23:2988,216:57,217:$Vq},{20:$VF8,22:$VG8,102:[1,3001],110:[1,3002],111:[1,3003],112:3000,166:$VH8,182:2991,192:2989,193:2990,198:2996,199:2997,200:2998,203:2999,206:[1,3004],207:[1,3005],208:[1,3010],209:[1,3011],210:[1,3012],211:[1,3013],212:[1,3006],213:[1,3007],214:[1,3008],215:[1,3009],217:$VI8},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,3014]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:3015,216:57,217:$Vq},{20:$VJ8,22:$VK8,102:[1,3028],110:[1,3029],111:[1,3030],112:3027,166:$VL8,182:3018,192:3016,193:3017,198:3023,199:3024,200:3025,203:3026,206:[1,3031],207:[1,3032],208:[1,3037],209:[1,3038],210:[1,3039],211:[1,3040],212:[1,3033],213:[1,3034],214:[1,3035],215:[1,3036],217:$VM8},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VN8,$VK2,{85:3041,86:3042,194:3043,191:$VO8}),o($V67,$VP8),o($VC,$Vh,{57:3045,61:3046,42:3047,45:$VD}),o($V87,$VQ8),o($VC,$Vh,{61:3048,42:3049,45:$VD}),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3050],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3054],22:[1,3058],23:3052,38:3051,202:3053,216:3055,217:[1,3057],218:[1,3056]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3059}),o($V87,$VB1,{101:2496,97:3060,103:$VQ7,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3061]},o($VV8,$VS1),{72:[1,3062]},o($VT7,$VO2,{101:2017,97:3063,103:$Va7,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,3071],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3072,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,3073]},o($VY7,$VB3),o($VN8,$VK2,{86:3042,194:3043,85:3074,191:$VO8}),o($VX8,$V$6,{154:3075,155:3076,158:$VY8,159:$VZ8,160:$V_8,161:$V$8}),o($V09,$V57),o($V19,$V77,{58:3081}),o($V29,$V97,{62:3082}),o($VH,$VI,{65:3083,75:3084,77:3085,78:3086,94:3089,96:3090,89:3092,90:3093,91:3094,80:3095,46:3096,97:3100,193:3101,93:3103,120:3104,101:3108,107:3114,109:3115,20:[1,3110],22:[1,3112],28:[1,3102],71:[1,3087],73:[1,3088],81:[1,3105],82:[1,3106],83:[1,3107],87:[1,3091],98:[1,3097],99:[1,3098],100:[1,3099],103:$V39,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3113],217:[1,3111]}),o($VX8,$V$6,{155:3076,154:3116,158:$VY8,159:$VZ8,160:$V_8,161:$V$8}),o($VL2,$VK2,{86:2549,194:2550,85:3117,191:$VZ7}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3118,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:2549,194:2550,85:3119,191:$VZ7}),o($Vx1,$VO2,{101:2058,97:3120,103:$Vb7,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:3121,195:[1,3122]}),{20:$V44,22:$V54,131:3123,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:3124,195:[1,3125]}),{20:$V44,22:$V54,131:3126,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,3127]},o($VC1,$VS1),{102:[1,3129],108:3128,110:[1,3130],111:[1,3131],112:3132,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3133]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:3134,195:[1,3135]}),{20:$V44,22:$V54,131:3136,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,3137]},{20:[1,3140],22:[1,3142],89:3138,166:[1,3143],193:3139,217:[1,3141]},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vc7,22:$Vd7,89:3144,166:$Ve7,193:3145,217:$Vf7},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vg7,22:$Vh7,89:3146,166:$Vi7,193:3147,217:$Vj7},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vk7,22:$Vl7,89:3148,166:$Vm7,193:3149,217:$Vn7},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vo7,22:$Vp7,89:3150,166:$Vq7,193:3151,217:$Vr7},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vs7,22:$Vt7,89:3152,166:$Vu7,193:3153,217:$Vv7},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vw7,22:$Vx7,89:3154,166:$Vy7,193:3155,217:$Vz7},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:3156}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,3160],22:[1,3164],23:3158,38:3157,202:3159,216:3161,217:[1,3163],218:[1,3162]},{121:[1,3165],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:3166}),o($VC2,$VA1,{95:3167}),o($Vx1,$VB1,{101:2639,97:3168,103:$V$7,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,3169]},o($VC2,$VS1),{72:[1,3170]},o($VJ2,$VK2,{85:3171,86:3172,194:3173,191:[1,3174]}),o($VL2,$VK2,{85:3175,86:3176,194:3177,191:$V49}),o($Vv1,$VO2,{101:2299,97:3179,103:$VA7,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:3187,86:3188,194:3189,191:[1,3190]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,3191],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3192,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,3193]},o($VQ1,$VB3),o($Vx1,$Vh5),{195:[1,3196],196:3194,197:[1,3195]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3197,205:3198,113:[1,3199]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3202],196:3200,197:[1,3201]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3203,205:3204,113:[1,3205]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3208],22:[1,3210],89:3206,166:[1,3211],193:3207,217:[1,3209]},{195:[1,3214],196:3212,197:[1,3213]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3215,205:3216,113:[1,3217]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vx1,$Vh5),{195:[1,3220],196:3218,197:[1,3219]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3221,205:3222,113:[1,3223]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3226],196:3224,197:[1,3225]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3227,205:3228,113:[1,3229]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3232],22:[1,3234],89:3230,166:[1,3235],193:3231,217:[1,3233]},{195:[1,3238],196:3236,197:[1,3237]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3239,205:3240,113:[1,3241]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:3242}),o($VT3,$V71),o($VT3,$V81),{20:[1,3246],22:[1,3250],23:3244,38:3243,202:3245,216:3247,217:[1,3249],218:[1,3248]},{121:[1,3251],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:3252}),o($VX4,$VA1,{95:3253}),o($VW3,$VB1,{101:2852,97:3254,103:$Vo8,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,3255]},o($VX4,$VS1),{72:[1,3256]},o($VY4,$VK2,{85:3257,86:3258,194:3259,191:[1,3260]}),o($VZ4,$VK2,{85:3261,86:3262,194:3263,191:$V69}),o($VV3,$VO2,{101:2413,97:3265,103:$VE7,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:3273,86:3274,194:3275,191:[1,3276]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,3277],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3278,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,3279]},o($V_3,$VB3),o($VW3,$Vh5),{195:[1,3282],196:3280,197:[1,3281]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:3283,205:3284,113:[1,3285]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,3288],196:3286,197:[1,3287]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:3289,205:3290,113:[1,3291]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,3294],22:[1,3296],89:3292,166:[1,3297],193:3293,217:[1,3295]},{195:[1,3300],196:3298,197:[1,3299]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:3301,205:3302,113:[1,3303]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($VW3,$Vh5),{195:[1,3306],196:3304,197:[1,3305]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:3307,205:3308,113:[1,3309]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,3312],196:3310,197:[1,3311]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:3313,205:3314,113:[1,3315]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,3318],22:[1,3320],89:3316,166:[1,3321],193:3317,217:[1,3319]},{195:[1,3324],196:3322,197:[1,3323]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:3325,205:3326,113:[1,3327]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($Vs4,$V89),o($V_6,$V24),o($Vs4,$V34,{37:3328,195:[1,3329]}),{20:$V44,22:$V54,131:3330,166:$V64,193:647,201:$V74,217:$V84},o($V67,$V99),o($V87,$V97,{62:3331}),o($VH,$VI,{65:3332,75:3333,77:3334,78:3335,94:3338,96:3339,89:3341,90:3342,91:3343,80:3344,46:3345,97:3349,193:3350,93:3352,120:3353,101:3357,107:3363,109:3364,20:[1,3359],22:[1,3361],28:[1,3351],71:[1,3336],73:[1,3337],81:[1,3354],82:[1,3355],83:[1,3356],87:[1,3340],98:[1,3346],99:[1,3347],100:[1,3348],103:$Va9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3362],217:[1,3360]}),o($V87,$Vb9),o($VH,$VI,{65:3365,75:3366,77:3367,78:3368,94:3371,96:3372,89:3374,90:3375,91:3376,80:3377,46:3378,97:3382,193:3383,93:3385,120:3386,101:3390,107:3396,109:3397,20:[1,3392],22:[1,3394],28:[1,3384],71:[1,3369],73:[1,3370],81:[1,3387],82:[1,3388],83:[1,3389],87:[1,3373],98:[1,3379],99:[1,3380],100:[1,3381],103:$Vc9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3395],217:[1,3393]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3398,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:2496,97:3399,103:$VQ7,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,3400]},o($VU7,$VS1),{102:[1,3402],108:3401,110:[1,3403],111:[1,3404],112:3405,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3406]},o($VU7,$Vy4),{123:[1,3407]},{20:[1,3410],22:[1,3412],89:3408,166:[1,3413],193:3409,217:[1,3411]},o($Vs4,$Ve9),o($VX8,$Vw1,{84:3414}),o($VX8,$VF7),o($VX8,$VG7),o($VX8,$VH7),o($VX8,$VI7),o($VX8,$VJ7),o($V09,$VK7,{59:3415,53:[1,3416]}),o($V19,$VL7,{63:3417,55:[1,3418]}),o($V29,$VM7),o($V29,$VN7,{76:3419,78:3420,80:3421,46:3422,120:3423,81:[1,3424],82:[1,3425],83:[1,3426],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:3427,75:3428,94:3429,96:3430,97:3434,101:3435,98:[1,3431],99:[1,3432],100:[1,3433],103:$Vf9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3437,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:3438}),o($Vh9,$VB1,{101:3108,97:3439,103:$V39,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:3440}),o($Vi9,$VD1,{88:3441}),o($Vi9,$VD1,{88:3442}),o($V29,$VE1,{107:3114,109:3115,93:3443,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:3444}),o($Vk9,$VR1),{121:[1,3445],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,3449],22:[1,3453],23:3447,38:3446,202:3448,216:3450,217:[1,3452],218:[1,3451]},{102:[1,3454]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,3456],108:3455,110:[1,3457],111:[1,3458],112:3459,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3460]},o($VX8,$Vw1,{84:3461}),o($Vj1,$Va4),{123:[1,3462]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:3463,216:57,217:$Vq},{20:$Vl9,22:$Vm9,102:[1,3476],110:[1,3477],111:[1,3478],112:3475,166:$Vn9,182:3466,192:3464,193:3465,198:3471,199:3472,200:3473,203:3474,206:[1,3479],207:[1,3480],208:[1,3485],209:[1,3486],210:[1,3487],211:[1,3488],212:[1,3481],213:[1,3482],214:[1,3483],215:[1,3484],217:$Vo9},o($VL2,$V35),{20:$Vo,22:$Vp,23:3489,216:57,217:$Vq},{20:$Vp9,22:$Vq9,102:[1,3502],110:[1,3503],111:[1,3504],112:3501,166:$Vr9,182:3492,192:3490,193:3491,198:3497,199:3498,200:3499,203:3500,206:[1,3505],207:[1,3506],208:[1,3511],209:[1,3512],210:[1,3513],211:[1,3514],212:[1,3507],213:[1,3508],214:[1,3509],215:[1,3510],217:$Vs9},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,3515]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:3516,216:57,217:$Vq},{20:$Vt9,22:$Vu9,102:[1,3529],110:[1,3530],111:[1,3531],112:3528,166:$Vv9,182:3519,192:3517,193:3518,198:3524,199:3525,200:3526,203:3527,206:[1,3532],207:[1,3533],208:[1,3538],209:[1,3539],210:[1,3540],211:[1,3541],212:[1,3534],213:[1,3535],214:[1,3536],215:[1,3537],217:$Vw9},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VL2,$VK2,{86:3176,194:3177,85:3542,191:$V49}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3543,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:3176,194:3177,85:3544,191:$V49}),o($Vx1,$VO2,{101:2639,97:3545,103:$V$7,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:3546,195:[1,3547]}),{20:$V44,22:$V54,131:3548,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:3549,195:[1,3550]}),{20:$V44,22:$V54,131:3551,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,3552]},o($VC1,$VS1),{102:[1,3554],108:3553,110:[1,3555],111:[1,3556],112:3557,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3558]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:3559,195:[1,3560]}),{20:$V44,22:$V54,131:3561,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,3562]},{20:[1,3565],22:[1,3567],89:3563,166:[1,3568],193:3564,217:[1,3566]},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$V08,22:$V18,89:3569,166:$V28,193:3570,217:$V38},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$V48,22:$V58,89:3571,166:$V68,193:3572,217:$V78},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$V88,22:$V98,89:3573,166:$Va8,193:3574,217:$Vb8},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vc8,22:$Vd8,89:3575,166:$Ve8,193:3576,217:$Vf8},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vg8,22:$Vh8,89:3577,166:$Vi8,193:3578,217:$Vj8},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vk8,22:$Vl8,89:3579,166:$Vm8,193:3580,217:$Vn8},o($VZ4,$VK2,{86:3262,194:3263,85:3581,191:$V69}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3582,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:3262,194:3263,85:3583,191:$V69}),o($VW3,$VO2,{101:2852,97:3584,103:$Vo8,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:3585,195:[1,3586]}),{20:$V44,22:$V54,131:3587,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:3588,195:[1,3589]}),{20:$V44,22:$V54,131:3590,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,3591]},o($VZ3,$VS1),{102:[1,3593],108:3592,110:[1,3594],111:[1,3595],112:3596,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3597]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:3598,195:[1,3599]}),{20:$V44,22:$V54,131:3600,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,3601]},{20:[1,3604],22:[1,3606],89:3602,166:[1,3607],193:3603,217:[1,3605]},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$Vp8,22:$Vq8,89:3608,166:$Vr8,193:3609,217:$Vs8},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$Vt8,22:$Vu8,89:3610,166:$Vv8,193:3611,217:$Vw8},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$Vx8,22:$Vy8,89:3612,166:$Vz8,193:3613,217:$VA8},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VB8,22:$VC8,89:3614,166:$VD8,193:3615,217:$VE8},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VF8,22:$VG8,89:3616,166:$VH8,193:3617,217:$VI8},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$VJ8,22:$VK8,89:3618,166:$VL8,193:3619,217:$VM8},o($VN8,$V35),{20:$Vo,22:$Vp,23:3620,216:57,217:$Vq},{20:$Vx9,22:$Vy9,102:[1,3633],110:[1,3634],111:[1,3635],112:3632,166:$Vz9,182:3623,192:3621,193:3622,198:3628,199:3629,200:3630,203:3631,206:[1,3636],207:[1,3637],208:[1,3642],209:[1,3643],210:[1,3644],211:[1,3645],212:[1,3638],213:[1,3639],214:[1,3640],215:[1,3641],217:$VA9},o($V67,$VL7,{63:3646,55:[1,3647]}),o($V87,$VM7),o($V87,$VN7,{76:3648,78:3649,80:3650,46:3651,120:3652,81:[1,3653],82:[1,3654],83:[1,3655],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:3656,75:3657,94:3658,96:3659,97:3663,101:3664,98:[1,3660],99:[1,3661],100:[1,3662],103:$VB9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3666,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:3667}),o($VT7,$VB1,{101:3357,97:3668,103:$Va9,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:3669}),o($VU7,$VD1,{88:3670}),o($VU7,$VD1,{88:3671}),o($V87,$VE1,{107:3363,109:3364,93:3672,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:3673}),o($VY7,$VR1),{121:[1,3674],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,3678],22:[1,3682],23:3676,38:3675,202:3677,216:3679,217:[1,3681],218:[1,3680]},{102:[1,3683]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,3685],108:3684,110:[1,3686],111:[1,3687],112:3688,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3689]},o($V87,$VM7),o($V87,$VN7,{76:3690,78:3691,80:3692,46:3693,120:3694,81:[1,3695],82:[1,3696],83:[1,3697],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:3698,75:3699,94:3700,96:3701,97:3705,101:3706,98:[1,3702],99:[1,3703],100:[1,3704],103:$VC9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3708,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:3709}),o($VT7,$VB1,{101:3390,97:3710,103:$Vc9,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:3711}),o($VU7,$VD1,{88:3712}),o($VU7,$VD1,{88:3713}),o($V87,$VE1,{107:3396,109:3397,93:3714,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:3715}),o($VY7,$VR1),{121:[1,3716],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,3720],22:[1,3724],23:3718,38:3717,202:3719,216:3721,217:[1,3723],218:[1,3722]},{102:[1,3725]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,3727],108:3726,110:[1,3728],111:[1,3729],112:3730,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3731]},{123:[1,3732]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,3733]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),o($VD9,$VK2,{85:3734,86:3735,194:3736,191:$VE9}),o($V19,$VP8),o($VC,$Vh,{57:3738,61:3739,42:3740,45:$VD}),o($V29,$VQ8),o($VC,$Vh,{61:3741,42:3742,45:$VD}),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,3743],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,3747],22:[1,3751],23:3745,38:3744,202:3746,216:3748,217:[1,3750],218:[1,3749]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:3752}),o($V29,$VB1,{101:3435,97:3753,103:$Vf9,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,3754]},o($VF9,$VS1),{72:[1,3755]},o($Vh9,$VO2,{101:3108,97:3756,103:$V39,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,3764],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3765,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,3766]},o($Vk9,$VB3),o($VD9,$VK2,{86:3735,194:3736,85:3767,191:$VE9}),o($Vx1,$Vh5),{195:[1,3770],196:3768,197:[1,3769]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3771,205:3772,113:[1,3773]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3776],196:3774,197:[1,3775]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3777,205:3778,113:[1,3779]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3782],22:[1,3784],89:3780,166:[1,3785],193:3781,217:[1,3783]},{195:[1,3788],196:3786,197:[1,3787]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3789,205:3790,113:[1,3791]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vj1,$Va4),{123:[1,3792]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:3793,216:57,217:$Vq},{20:$VH9,22:$VI9,102:[1,3806],110:[1,3807],111:[1,3808],112:3805,166:$VJ9,182:3796,192:3794,193:3795,198:3801,199:3802,200:3803,203:3804,206:[1,3809],207:[1,3810],208:[1,3815],209:[1,3816],210:[1,3817],211:[1,3818],212:[1,3811],213:[1,3812],214:[1,3813],215:[1,3814],217:$VK9},o($VL2,$V35),{20:$Vo,22:$Vp,23:3819,216:57,217:$Vq},{20:$VL9,22:$VM9,102:[1,3832],110:[1,3833],111:[1,3834],112:3831,166:$VN9,182:3822,192:3820,193:3821,198:3827,199:3828,200:3829,203:3830,206:[1,3835],207:[1,3836],208:[1,3841],209:[1,3842],210:[1,3843],211:[1,3844],212:[1,3837],213:[1,3838],214:[1,3839],215:[1,3840],217:$VO9},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,3845]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:3846,216:57,217:$Vq},{20:$VP9,22:$VQ9,102:[1,3859],110:[1,3860],111:[1,3861],112:3858,166:$VR9,182:3849,192:3847,193:3848,198:3854,199:3855,200:3856,203:3857,206:[1,3862],207:[1,3863],208:[1,3868],209:[1,3869],210:[1,3870],211:[1,3871],212:[1,3864],213:[1,3865],214:[1,3866],215:[1,3867],217:$VS9},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VT3,$Va4),{123:[1,3872]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:3873,216:57,217:$Vq},{20:$VT9,22:$VU9,102:[1,3886],110:[1,3887],111:[1,3888],112:3885,166:$VV9,182:3876,192:3874,193:3875,198:3881,199:3882,200:3883,203:3884,206:[1,3889],207:[1,3890],208:[1,3895],209:[1,3896],210:[1,3897],211:[1,3898],212:[1,3891],213:[1,3892],214:[1,3893],215:[1,3894],217:$VW9},o($VZ4,$V35),{20:$Vo,22:$Vp,23:3899,216:57,217:$Vq},{20:$VX9,22:$VY9,102:[1,3912],110:[1,3913],111:[1,3914],112:3911,166:$VZ9,182:3902,192:3900,193:3901,198:3907,199:3908,200:3909,203:3910,206:[1,3915],207:[1,3916],208:[1,3921],209:[1,3922],210:[1,3923],211:[1,3924],212:[1,3917],213:[1,3918],214:[1,3919],215:[1,3920],217:$V_9},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,3925]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:3926,216:57,217:$Vq},{20:$V$9,22:$V0a,102:[1,3939],110:[1,3940],111:[1,3941],112:3938,166:$V1a,182:3929,192:3927,193:3928,198:3934,199:3935,200:3936,203:3937,206:[1,3942],207:[1,3943],208:[1,3948],209:[1,3949],210:[1,3950],211:[1,3951],212:[1,3944],213:[1,3945],214:[1,3946],215:[1,3947],217:$V2a},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),{195:[1,3954],196:3952,197:[1,3953]},o($V_6,$V66),o($V_6,$V76),o($V_6,$V86),o($V_6,$VT1),o($V_6,$VU1),o($V_6,$VV1),o($V_6,$VW1),o($V_6,$VB4),o($V_6,$VC4),o($V_6,$VD4),o($V_6,$VE4),o($V_6,$VF4,{204:3955,205:3956,113:[1,3957]}),o($V_6,$VG4),o($V_6,$VH4),o($V_6,$VI4),o($V_6,$VJ4),o($V_6,$VK4),o($V_6,$VL4),o($V_6,$VM4),o($V_6,$VN4),o($V_6,$VO4),o($V3a,$Vx3),o($V3a,$Vy3),o($V3a,$Vz3),o($V3a,$VA3),o($V87,$VQ8),o($VC,$Vh,{61:3958,42:3959,45:$VD}),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3960],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3964],22:[1,3968],23:3962,38:3961,202:3963,216:3965,217:[1,3967],218:[1,3966]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3969}),o($V87,$VB1,{101:3664,97:3970,103:$VB9,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3971]},o($VV8,$VS1),{72:[1,3972]},o($VT7,$VO2,{101:3357,97:3973,103:$Va9,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,3981],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3982,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,3983]},o($VY7,$VB3),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3984],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3988],22:[1,3992],23:3986,38:3985,202:3987,216:3989,217:[1,3991],218:[1,3990]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3993}),o($V87,$VB1,{101:3706,97:3994,103:$VC9,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3995]},o($VV8,$VS1),{72:[1,3996]},o($VT7,$VO2,{101:3390,97:3997,103:$Vc9,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,4005],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4006,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,4007]},o($VY7,$VB3),o($V87,$Vh5),{20:[1,4010],22:[1,4012],89:4008,166:[1,4013],193:4009,217:[1,4011]},o($Vn6,$V89),o($VX8,$V24),o($Vn6,$V34,{37:4014,195:[1,4015]}),{20:$V44,22:$V54,131:4016,166:$V64,193:647,201:$V74,217:$V84},o($V19,$V99),o($V29,$V97,{62:4017}),o($VH,$VI,{65:4018,75:4019,77:4020,78:4021,94:4024,96:4025,89:4027,90:4028,91:4029,80:4030,46:4031,97:4035,193:4036,93:4038,120:4039,101:4043,107:4049,109:4050,20:[1,4045],22:[1,4047],28:[1,4037],71:[1,4022],73:[1,4023],81:[1,4040],82:[1,4041],83:[1,4042],87:[1,4026],98:[1,4032],99:[1,4033],100:[1,4034],103:$V6a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4048],217:[1,4046]}),o($V29,$Vb9),o($VH,$VI,{65:4051,75:4052,77:4053,78:4054,94:4057,96:4058,89:4060,90:4061,91:4062,80:4063,46:4064,97:4068,193:4069,93:4071,120:4072,101:4076,107:4082,109:4083,20:[1,4078],22:[1,4080],28:[1,4070],71:[1,4055],73:[1,4056],81:[1,4073],82:[1,4074],83:[1,4075],87:[1,4059],98:[1,4065],99:[1,4066],100:[1,4067],103:$V7a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4081],217:[1,4079]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4084,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:3435,97:4085,103:$Vf9,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4086]},o($Vi9,$VS1),{102:[1,4088],108:4087,110:[1,4089],111:[1,4090],112:4091,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4092]},o($Vi9,$Vy4),{123:[1,4093]},{20:[1,4096],22:[1,4098],89:4094,166:[1,4099],193:4095,217:[1,4097]},o($Vn6,$Ve9),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vl9,22:$Vm9,89:4100,166:$Vn9,193:4101,217:$Vo9},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vp9,22:$Vq9,89:4102,166:$Vr9,193:4103,217:$Vs9},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vt9,22:$Vu9,89:4104,166:$Vv9,193:4105,217:$Vw9},o($Vx1,$Vh5),{195:[1,4108],196:4106,197:[1,4107]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:4109,205:4110,113:[1,4111]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,4114],196:4112,197:[1,4113]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:4115,205:4116,113:[1,4117]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,4120],22:[1,4122],89:4118,166:[1,4123],193:4119,217:[1,4121]},{195:[1,4126],196:4124,197:[1,4125]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:4127,205:4128,113:[1,4129]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VW3,$Vh5),{195:[1,4132],196:4130,197:[1,4131]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:4133,205:4134,113:[1,4135]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,4138],196:4136,197:[1,4137]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:4139,205:4140,113:[1,4141]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,4144],22:[1,4146],89:4142,166:[1,4147],193:4143,217:[1,4145]},{195:[1,4150],196:4148,197:[1,4149]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:4151,205:4152,113:[1,4153]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($VN8,$V52),o($VN8,$V62),o($VN8,$V72),o($V_6,$VV5),o($V_6,$VW5),{20:$Vx9,22:$Vy9,89:4154,166:$Vz9,193:4155,217:$VA9},o($V87,$Vb9),o($VH,$VI,{65:4156,75:4157,77:4158,78:4159,94:4162,96:4163,89:4165,90:4166,91:4167,80:4168,46:4169,97:4173,193:4174,93:4176,120:4177,101:4181,107:4187,109:4188,20:[1,4183],22:[1,4185],28:[1,4175],71:[1,4160],73:[1,4161],81:[1,4178],82:[1,4179],83:[1,4180],87:[1,4164],98:[1,4170],99:[1,4171],100:[1,4172],103:$V8a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4186],217:[1,4184]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4189,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:3664,97:4190,103:$VB9,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4191]},o($VU7,$VS1),{102:[1,4193],108:4192,110:[1,4194],111:[1,4195],112:4196,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4197]},o($VU7,$Vy4),{123:[1,4198]},{20:[1,4201],22:[1,4203],89:4199,166:[1,4204],193:4200,217:[1,4202]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4205,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:3706,97:4206,103:$VC9,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4207]},o($VU7,$VS1),{102:[1,4209],108:4208,110:[1,4210],111:[1,4211],112:4212,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4213]},o($VU7,$Vy4),{123:[1,4214]},{20:[1,4217],22:[1,4219],89:4215,166:[1,4220],193:4216,217:[1,4218]},o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VD9,$V35),{20:$Vo,22:$Vp,23:4221,216:57,217:$Vq},{20:$V9a,22:$Vaa,102:[1,4234],110:[1,4235],111:[1,4236],112:4233,166:$Vba,182:4224,192:4222,193:4223,198:4229,199:4230,200:4231,203:4232,206:[1,4237],207:[1,4238],208:[1,4243],209:[1,4244],210:[1,4245],211:[1,4246],212:[1,4239],213:[1,4240],214:[1,4241],215:[1,4242],217:$Vca},o($V19,$VL7,{63:4247,55:[1,4248]}),o($V29,$VM7),o($V29,$VN7,{76:4249,78:4250,80:4251,46:4252,120:4253,81:[1,4254],82:[1,4255],83:[1,4256],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4257,75:4258,94:4259,96:4260,97:4264,101:4265,98:[1,4261],99:[1,4262],100:[1,4263],103:$Vda,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4267,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4268}),o($Vh9,$VB1,{101:4043,97:4269,103:$V6a,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4270}),o($Vi9,$VD1,{88:4271}),o($Vi9,$VD1,{88:4272}),o($V29,$VE1,{107:4049,109:4050,93:4273,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4274}),o($Vk9,$VR1),{121:[1,4275],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4279],22:[1,4283],23:4277,38:4276,202:4278,216:4280,217:[1,4282],218:[1,4281]},{102:[1,4284]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4286],108:4285,110:[1,4287],111:[1,4288],112:4289,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4290]},o($V29,$VM7),o($V29,$VN7,{76:4291,78:4292,80:4293,46:4294,120:4295,81:[1,4296],82:[1,4297],83:[1,4298],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4299,75:4300,94:4301,96:4302,97:4306,101:4307,98:[1,4303],99:[1,4304],100:[1,4305],103:$Vea,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4309,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4310}),o($Vh9,$VB1,{101:4076,97:4311,103:$V7a,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4312}),o($Vi9,$VD1,{88:4313}),o($Vi9,$VD1,{88:4314}),o($V29,$VE1,{107:4082,109:4083,93:4315,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4316}),o($Vk9,$VR1),{121:[1,4317],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4321],22:[1,4325],23:4319,38:4318,202:4320,216:4322,217:[1,4324],218:[1,4323]},{102:[1,4326]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4328],108:4327,110:[1,4329],111:[1,4330],112:4331,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4332]},{123:[1,4333]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4334]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$VH9,22:$VI9,89:4335,166:$VJ9,193:4336,217:$VK9},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$VL9,22:$VM9,89:4337,166:$VN9,193:4338,217:$VO9},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$VP9,22:$VQ9,89:4339,166:$VR9,193:4340,217:$VS9},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VT9,22:$VU9,89:4341,166:$VV9,193:4342,217:$VW9},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VX9,22:$VY9,89:4343,166:$VZ9,193:4344,217:$V_9},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$V$9,22:$V0a,89:4345,166:$V1a,193:4346,217:$V2a},o($V_6,$Vs6),o($V_6,$VN1),o($V87,$VM7),o($V87,$VN7,{76:4347,78:4348,80:4349,46:4350,120:4351,81:[1,4352],82:[1,4353],83:[1,4354],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:4355,75:4356,94:4357,96:4358,97:4362,101:4363,98:[1,4359],99:[1,4360],100:[1,4361],103:$Vfa,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4365,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:4366}),o($VT7,$VB1,{101:4181,97:4367,103:$V8a,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:4368}),o($VU7,$VD1,{88:4369}),o($VU7,$VD1,{88:4370}),o($V87,$VE1,{107:4187,109:4188,93:4371,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:4372}),o($VY7,$VR1),{121:[1,4373],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,4377],22:[1,4381],23:4375,38:4374,202:4376,216:4378,217:[1,4380],218:[1,4379]},{102:[1,4382]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,4384],108:4383,110:[1,4385],111:[1,4386],112:4387,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4388]},{123:[1,4389]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4390]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),{123:[1,4391]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4392]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),{195:[1,4395],196:4393,197:[1,4394]},o($VX8,$V66),o($VX8,$V76),o($VX8,$V86),o($VX8,$VT1),o($VX8,$VU1),o($VX8,$VV1),o($VX8,$VW1),o($VX8,$VB4),o($VX8,$VC4),o($VX8,$VD4),o($VX8,$VE4),o($VX8,$VF4,{204:4396,205:4397,113:[1,4398]}),o($VX8,$VG4),o($VX8,$VH4),o($VX8,$VI4),o($VX8,$VJ4),o($VX8,$VK4),o($VX8,$VL4),o($VX8,$VM4),o($VX8,$VN4),o($VX8,$VO4),o($Vga,$Vx3),o($Vga,$Vy3),o($Vga,$Vz3),o($Vga,$VA3),o($V29,$VQ8),o($VC,$Vh,{61:4399,42:4400,45:$VD}),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4401],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4405],22:[1,4409],23:4403,38:4402,202:4404,216:4406,217:[1,4408],218:[1,4407]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4410}),o($V29,$VB1,{101:4265,97:4411,103:$Vda,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4412]},o($VF9,$VS1),{72:[1,4413]},o($Vh9,$VO2,{101:4043,97:4414,103:$V6a,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4422],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4423,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4424]},o($Vk9,$VB3),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4425],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4429],22:[1,4433],23:4427,38:4426,202:4428,216:4430,217:[1,4432],218:[1,4431]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4434}),o($V29,$VB1,{101:4307,97:4435,103:$Vea,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4436]},o($VF9,$VS1),{72:[1,4437]},o($Vh9,$VO2,{101:4076,97:4438,103:$V7a,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4446],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4447,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4448]},o($Vk9,$VB3),o($V29,$Vh5),{20:[1,4451],22:[1,4453],89:4449,166:[1,4454],193:4450,217:[1,4452]},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,4455],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,4459],22:[1,4463],23:4457,38:4456,202:4458,216:4460,217:[1,4462],218:[1,4461]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:4464}),o($V87,$VB1,{101:4363,97:4465,103:$Vfa,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,4466]},o($VV8,$VS1),{72:[1,4467]},o($VT7,$VO2,{101:4181,97:4468,103:$V8a,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,4476],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4477,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,4478]},o($VY7,$VB3),o($V87,$Vh5),{20:[1,4481],22:[1,4483],89:4479,166:[1,4484],193:4480,217:[1,4482]},o($V87,$Vh5),{20:[1,4487],22:[1,4489],89:4485,166:[1,4490],193:4486,217:[1,4488]},o($VD9,$V52),o($VD9,$V62),o($VD9,$V72),o($VX8,$VV5),o($VX8,$VW5),{20:$V9a,22:$Vaa,89:4491,166:$Vba,193:4492,217:$Vca},o($V29,$Vb9),o($VH,$VI,{65:4493,75:4494,77:4495,78:4496,94:4499,96:4500,89:4502,90:4503,91:4504,80:4505,46:4506,97:4510,193:4511,93:4513,120:4514,101:4518,107:4524,109:4525,20:[1,4520],22:[1,4522],28:[1,4512],71:[1,4497],73:[1,4498],81:[1,4515],82:[1,4516],83:[1,4517],87:[1,4501],98:[1,4507],99:[1,4508],100:[1,4509],103:$Vka,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4523],217:[1,4521]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4526,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4265,97:4527,103:$Vda,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4528]},o($Vi9,$VS1),{102:[1,4530],108:4529,110:[1,4531],111:[1,4532],112:4533,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4534]},o($Vi9,$Vy4),{123:[1,4535]},{20:[1,4538],22:[1,4540],89:4536,166:[1,4541],193:4537,217:[1,4539]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4542,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4307,97:4543,103:$Vea,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4544]},o($Vi9,$VS1),{102:[1,4546],108:4545,110:[1,4547],111:[1,4548],112:4549,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4550]},o($Vi9,$Vy4),{123:[1,4551]},{20:[1,4554],22:[1,4556],89:4552,166:[1,4557],193:4553,217:[1,4555]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4558,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:4363,97:4559,103:$Vfa,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4560]},o($VU7,$VS1),{102:[1,4562],108:4561,110:[1,4563],111:[1,4564],112:4565,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4566]},o($VU7,$Vy4),{123:[1,4567]},{20:[1,4570],22:[1,4572],89:4568,166:[1,4573],193:4569,217:[1,4571]},o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VX8,$Vs6),o($VX8,$VN1),o($V29,$VM7),o($V29,$VN7,{76:4574,78:4575,80:4576,46:4577,120:4578,81:[1,4579],82:[1,4580],83:[1,4581],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4582,75:4583,94:4584,96:4585,97:4589,101:4590,98:[1,4586],99:[1,4587],100:[1,4588],103:$Vla,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4592,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4593}),o($Vh9,$VB1,{101:4518,97:4594,103:$Vka,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4595}),o($Vi9,$VD1,{88:4596}),o($Vi9,$VD1,{88:4597}),o($V29,$VE1,{107:4524,109:4525,93:4598,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4599}),o($Vk9,$VR1),{121:[1,4600],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4604],22:[1,4608],23:4602,38:4601,202:4603,216:4605,217:[1,4607],218:[1,4606]},{102:[1,4609]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4611],108:4610,110:[1,4612],111:[1,4613],112:4614,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4615]},{123:[1,4616]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4617]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),{123:[1,4618]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4619]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),{123:[1,4620]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4621]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4622],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4626],22:[1,4630],23:4624,38:4623,202:4625,216:4627,217:[1,4629],218:[1,4628]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4631}),o($V29,$VB1,{101:4590,97:4632,103:$Vla,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4633]},o($VF9,$VS1),{72:[1,4634]},o($Vh9,$VO2,{101:4518,97:4635,103:$Vka,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4643],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4644,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4645]},o($Vk9,$VB3),o($V29,$Vh5),{20:[1,4648],22:[1,4650],89:4646,166:[1,4651],193:4647,217:[1,4649]},o($V29,$Vh5),{20:[1,4654],22:[1,4656],89:4652,166:[1,4657],193:4653,217:[1,4655]},o($V87,$Vh5),{20:[1,4660],22:[1,4662],89:4658,166:[1,4663],193:4659,217:[1,4661]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4664,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4590,97:4665,103:$Vla,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4666]},o($Vi9,$VS1),{102:[1,4668],108:4667,110:[1,4669],111:[1,4670],112:4671,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4672]},o($Vi9,$Vy4),{123:[1,4673]},{20:[1,4676],22:[1,4678],89:4674,166:[1,4679],193:4675,217:[1,4677]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{123:[1,4680]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4681]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),o($V29,$Vh5),{20:[1,4684],22:[1,4686],89:4682,166:[1,4687],193:4683,217:[1,4685]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1)],\ndefaultActions: {6:[2,11],32:[2,1],112:[2,121],113:[2,122],114:[2,123],119:[2,134],120:[2,135],227:[2,255],228:[2,256],229:[2,257],230:[2,258],351:[2,37],379:[2,144],380:[2,148],382:[2,150],589:[2,35],590:[2,39],627:[2,36],1137:[2,148],1139:[2,150]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShEx parser in the Jison parser generator format.\n  */\n\n  var UNBOUNDED = -1;\n\n  var ShExUtil = require(\"@shexjs/util\");\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean',\n      XSD_TRUE =  '\"true\"^^'  + XSD_BOOLEAN,\n      XSD_FALSE = '\"false\"^^' + XSD_BOOLEAN,\n      XSD_PATTERN        = XSD + 'pattern',\n      XSD_MININCLUSIVE   = XSD + 'minInclusive',\n      XSD_MINEXCLUSIVE   = XSD + 'minExclusive',\n      XSD_MAXINCLUSIVE   = XSD + 'maxInclusive',\n      XSD_MAXEXCLUSIVE   = XSD + 'maxExclusive',\n      XSD_LENGTH         = XSD + 'length',\n      XSD_MINLENGTH      = XSD + 'minLength',\n      XSD_MAXLENGTH      = XSD + 'maxLength',\n      XSD_TOTALDIGITS    = XSD + 'totalDigits',\n      XSD_FRACTIONDIGITS = XSD + 'fractionDigits';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  Parser._setBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._base = baseIRI) {\n      Parser._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._baseRoot   = baseIRI[0];\n      Parser._baseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._baseScheme : Parser._baseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._basePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  Parser._setTermResolver = function (res) {\n    Parser._termResolver = res;\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return { value: value, type: type };\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser._sourceMap = Parser._termResolver = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._base = Parser._baseIRI = Parser._baseIRIPath = Parser._baseIRIRoot = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      semactEscapeReplacements = { '\\\\': '\\\\', '%': '%' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return { value: ShExUtil.unescapeText(string, stringEscapeReplacements) };\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, { language: lowercase(lang.substr(1)) });\n  }\n\n  // Translates regular expression escape codes in the string into their textual equivalent\n  function unescapeRegexp (regexp) {\n    var end = regexp.lastIndexOf(\"/\");\n    var s = regexp.substr(1, end-1);\n    var regexpEscapeReplacements = {\n      '.': \"\\\\.\", '\\\\': \"\\\\\\\\\", '?': \"\\\\?\", '*': \"\\\\*\", '+': \"\\\\+\",\n      '{': \"\\\\{\", '}': \"\\\\}\", '(': \"\\\\(\", ')': \"\\\\)\", '|': \"\\\\|\",\n      '^': \"\\\\^\", '$': \"\\\\$\", '[': \"\\\\[\", ']': \"\\\\]\", '/': \"\\\\/\",\n      't': '\\\\t', 'n': '\\\\n', 'r': '\\\\r', '-': \"\\\\-\", '/': '/'\n    };\n    s = ShExUtil.unescapeText(s, regexpEscapeReplacements)\n    var ret = {\n      pattern: s\n    };\n    if (regexp.length > end+1)\n      ret.flags = regexp.substr(end+1);\n    return ret;\n  }\n\n  // Convenience function to return object with p1 key, value p2\n  function keyValObject(key, val) {\n    var ret = {};\n    ret[key] = val;\n    return ret;\n  }\n\n  // Return object with p1 key, p2 string value\n  function unescapeSemanticAction(key, string) {\n    string = string.substring(1, string.length - 2);\n    return {\n      type: \"SemAct\",\n      name: key,\n      code: ShExUtil.unescapeText(string, semactEscapeReplacements)\n    };\n  }\n\n  function error (e, yy) {\n    const hash = {\n      text: yy.lexer.match,\n      // token: this.terminals_[symbol] || symbol,\n      line: yy.lexer.yylineno,\n      loc: yy.lexer.yylloc,\n      // expected: expected\n      pos: yy.lexer.showPosition()\n    }\n    e.hash = hash;\n    if (Parser.recoverable) {\n      Parser.recoverable(e)\n    } else {\n      throw e;\n      Parser.reset();\n    }\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefix, yy) {\n    if (!(prefix in Parser._prefixes))\n      error(new Error('Parse error; unknown prefix \"' + prefix + ':\"'), yy);\n    return Parser._prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape, yy) {\n    if (shape === EmptyShape)\n      shape = { type: \"Shape\" };\n    if (Parser.productions && label in Parser.productions)\n      error(new Error(\"Structural error: \"+label+\" is a triple expression\"), yy);\n    if (!Parser.shapes)\n      Parser.shapes = new Map();\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else {\n      shape.id = label;\n      Parser.shapes[label] = shape;\n    }\n  }\n\n  // Add a production to the map\n  function addProduction (label, production, yy) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(new Error(\"Structural error: \"+label+\" is a shape expression\"), yy);\n    if (!Parser.productions)\n      Parser.productions = new Map();\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function addSourceMap (obj, yy) {\n    if (!Parser._sourceMap)\n      Parser._sourceMap = new Map();\n    let list = Parser._sourceMap.get(obj)\n    if (!list)\n      Parser._sourceMap.set(obj, list = []);\n    list.push(yy.lexer.yylloc);\n    return obj;\n  }\n\n  // shapeJunction judiciously takes a shapeAtom and an optional list of con/disjuncts.\n  // No created Shape{And,Or,Not} will have a `nested` shapeExpr.\n  // Don't nonest arguments to shapeJunction.\n  // shapeAtom emits `nested` so nonest every argument that can be a shapeAtom, i.e.\n  //   shapeAtom, inlineShapeAtom, shapeAtomNoRef\n  //   {,inline}shape{And,Or,Not}\n  //   this does NOT include shapeOrRef or nodeConstraint.\n  function shapeJunction (type, shapeAtom, juncts) {\n    if (juncts.length === 0) {\n      return nonest(shapeAtom);\n    } else if (shapeAtom.type === type && !shapeAtom.nested) {\n      nonest(shapeAtom).shapeExprs = nonest(shapeAtom).shapeExprs.concat(juncts);\n      return shapeAtom;\n    } else {\n      return { type: type, shapeExprs: [nonest(shapeAtom)].concat(juncts) };\n    }\n  }\n\n  // strip out .nested attribute\n  function nonest (shapeAtom) {\n    delete shapeAtom.nested;\n    return shapeAtom;\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:\n  var iBacktick = yy_.yytext.indexOf('`');\n  var prefix = null;\n  if (iBacktick > 0) {\n    prefix = yy_.yytext.substr(0, iBacktick-1);\n    yy_.yytext = yy_.yytext.substr(iBacktick);\n  }\n  yy_.yytext = { prefix: prefix, label: unescapeString(yy_.yytext, 1) };\n  return 166;\n\nbreak;\ncase 1:/**/\nbreak;\ncase 2:return 81;\nbreak;\ncase 3:return 82;\nbreak;\ncase 4: yy_.yytext = yy_.yytext.substr(1); return 186; \nbreak;\ncase 5:return 83;\nbreak;\ncase 6:return 217;\nbreak;\ncase 7:return 161;\nbreak;\ncase 8:return 111;\nbreak;\ncase 9:return 110;\nbreak;\ncase 10:return 102;\nbreak;\ncase 11:return 'ANON';\nbreak;\ncase 12:return 20;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 201;\nbreak;\ncase 15:return 103;\nbreak;\ncase 16:return 218;\nbreak;\ncase 17:return 197;\nbreak;\ncase 18:return 213;\nbreak;\ncase 19:return 215;\nbreak;\ncase 20:return 212;\nbreak;\ncase 21:return 214;\nbreak;\ncase 22:return 209;\nbreak;\ncase 23:return 211;\nbreak;\ncase 24:return 208;\nbreak;\ncase 25:return 210;\nbreak;\ncase 26:return 19;\nbreak;\ncase 27:return 21;\nbreak;\ncase 28:return 24;\nbreak;\ncase 29:return 25;\nbreak;\ncase 30:return 32;\nbreak;\ncase 31:return 41;\nbreak;\ncase 32:return 'IT_VIRTUAL';\nbreak;\ncase 33:return 127;\nbreak;\ncase 34:return 129;\nbreak;\ncase 35:return 87;\nbreak;\ncase 36:return 99;\nbreak;\ncase 37:return 98;\nbreak;\ncase 38:return 100;\nbreak;\ncase 39:return 55;\nbreak;\ncase 40:return 53;\nbreak;\ncase 41:return 45;\nbreak;\ncase 42:return 114;\nbreak;\ncase 43:return 115;\nbreak;\ncase 44:return 116;\nbreak;\ncase 45:return 117;\nbreak;\ncase 46:return 104;\nbreak;\ncase 47:return 105;\nbreak;\ncase 48:return 106;\nbreak;\ncase 49:return 118;\nbreak;\ncase 50:return 119;\nbreak;\ncase 51:return 33;\nbreak;\ncase 52:return 191;\nbreak;\ncase 53:return 121;\nbreak;\ncase 54:return 123;\nbreak;\ncase 55:return 190;\nbreak;\ncase 56:return '||';\nbreak;\ncase 57:return 137;\nbreak;\ncase 58:return 142;\nbreak;\ncase 59:return 71;\nbreak;\ncase 60:return 72;\nbreak;\ncase 61:return 28;\nbreak;\ncase 62:return 29;\nbreak;\ncase 63:return 150;\nbreak;\ncase 64:return '!';\nbreak;\ncase 65:return 113;\nbreak;\ncase 66:return 162;\nbreak;\ncase 67:return 73;\nbreak;\ncase 68:return 179;\nbreak;\ncase 69:return 143;\nbreak;\ncase 70:return 158;\nbreak;\ncase 71:return 159;\nbreak;\ncase 72:return 160;\nbreak;\ncase 73:return 180;\nbreak;\ncase 74:return 195;\nbreak;\ncase 75:return 206;\nbreak;\ncase 76:return 207;\nbreak;\ncase 77:return 7;\nbreak;\ncase 78:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 79:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)?`([^\\u0060\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*`))/,/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^/]|\\\\\\/))*\\*\\/))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(\\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\\*)?))?\\}))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:a\\b)/,/^(?:(\\/([^\\u002f\\u005C\\u000A\\u000D]|\\\\[nrt\\\\|.?*+(){}$\\u002D\\u005B\\u005D\\u005E/]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:(\\{([^%\\\\]|\\\\[%\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\\}))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([Ll][Aa][Bb][Ee][Ll]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Vv][Ii][Rr][Tt][Uu][Aa][Ll]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\\/\\/)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&)/,/^(?:\\|\\|)/,/^(?:\\|)/,/^(?:,)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:!)/,/^(?:\\^\\^)/,/^(?:\\^)/,/^(?:\\.)/,/^(?:~)/,/^(?:;)/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShExJison;\nexports.Parser = ShExJison.Parser;\nexports.parse = function () { return ShExJison.parse.apply(ShExJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 36,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "index": 29,
          "index2": 25,
          "size": 8542,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerId": 17,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 17,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 26,
            "building": 9,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "./old.js",
              "loc": "14:10-29"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"
        },
        {
          "id": 37,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "index": 31,
          "index2": 29,
          "size": 4792,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerId": 6,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 6,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 28,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "brace-expansion",
              "loc": "10:13-39"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"
        },
        {
          "id": 38,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "index": 32,
          "index2": 27,
          "size": 345,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 37,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 6,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            },
            {
              "id": 37,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 28,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 11,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 37,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "concat-map",
              "loc": "1:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"
        },
        {
          "id": 39,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "index": 33,
          "index2": 28,
          "size": 1174,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 37,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 6,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            },
            {
              "id": 37,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 28,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 11,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 37,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "balanced-match",
              "loc": "2:15-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n"
        },
        {
          "id": 40,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "index": 34,
          "index2": 31,
          "size": 753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "47:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
        },
        {
          "id": 41,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/events/events.js",
          "name": "./node_modules/events/events.js",
          "index": 35,
          "index2": 32,
          "size": 14161,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "48:9-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"
        },
        {
          "id": 42,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 37,
          "index2": 33,
          "size": 472,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "issuerId": 18,
          "issuerName": "./node_modules/assert/assert.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 18,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "name": "./node_modules/assert/assert.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 71,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
        },
        {
          "id": 43,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/object-assign/index.js",
          "name": "./node_modules/object-assign/index.js",
          "index": 38,
          "index2": 34,
          "size": 2108,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "issuerId": 18,
          "issuerName": "./node_modules/assert/assert.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 18,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "name": "./node_modules/assert/assert.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 71,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "object-assign",
              "loc": "3:19-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"
        },
        {
          "id": 44,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/support/isBufferBrowser.js",
          "name": "./node_modules/util/support/isBufferBrowser.js",
          "index": 40,
          "index2": 35,
          "size": 203,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 7,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 7,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 61,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "./support/isBuffer",
              "loc": "536:19-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"
        },
        {
          "id": 45,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/node_modules/inherits/inherits_browser.js",
          "name": "./node_modules/util/node_modules/inherits/inherits_browser.js",
          "index": 41,
          "index2": 36,
          "size": 672,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 7,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 7,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 61,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "580:19-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"
        },
        {
          "id": 46,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "index": 43,
          "index2": 41,
          "size": 12002,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./sync.js",
              "loc": "52:15-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"
        },
        {
          "id": 47,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "index": 45,
          "index2": 44,
          "size": 1365,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inflight",
              "loc": "58:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"
        },
        {
          "id": 48,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api sync",
          "name": "../shex-api sync",
          "index": 48,
          "index2": 46,
          "size": 160,
          "built": true,
          "optional": true,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 34,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require context",
              "userRequest": ".",
              "loc": "326:11-24"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "shex-webapp",
          "request": "./shex-webapp.js",
          "reasons": []
        }
      ]
    },
    {
      "id": 1,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 669152,
      "names": [
        "shex-webapp.min"
      ],
      "files": [
        "shex-webapp.min.js"
      ],
      "hash": "30238979223c3998d1dd",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/process/browser.js",
          "name": "./node_modules/process/browser.js",
          "index": 5,
          "index2": 1,
          "size": 5418,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "issuerId": 32,
          "issuerName": "../shex-validator/shex-validator.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 32,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "name": "../shex-validator/shex-validator.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 366,
            "building": 21,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
              "module": "./node_modules/path-browserify/index.js",
              "moduleName": "./node_modules/path-browserify/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 7,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-59"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
        },
        {
          "id": 1,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
          "name": "./node_modules/path-browserify/index.js",
          "index": 8,
          "index2": 4,
          "size": 8742,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 35,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 35,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 10,
                "building": 166,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 36,
            "building": 59,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "6:9-24"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "49:11-26"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "15:11-26"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1179:44-59"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1870:44-59"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "22:17-32"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "10:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"
        },
        {
          "id": 2,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/node-libs-browser/mock/empty.js",
          "name": "./node_modules/node-libs-browser/mock/empty.js",
          "index": 7,
          "index2": 3,
          "size": 0,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 35,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 35,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 10,
                "building": 166,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 36,
            "building": 59,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "43:9-22"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "8:9-22"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1179:17-30"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1870:17-30"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "24:9-22"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "4:9-22"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": ""
        },
        {
          "id": 3,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-term/shex-term.js",
          "name": "../shex-term/shex-term.js",
          "index": 9,
          "index2": 8,
          "size": 10614,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "4:15-38"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "module": "../shex-parser/shex-parser.js",
              "moduleName": "../shex-parser/shex-parser.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "3:17-40"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "4:20-43"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "26:15-38"
            },
            {
              "moduleId": 33,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/eval-threaded-nerr/eval-threaded-nerr.js",
              "module": "../eval-threaded-nerr/eval-threaded-nerr.js",
              "moduleName": "../eval-threaded-nerr/eval-threaded-nerr.js",
              "type": "cjs require",
              "userRequest": "@shexjs/term",
              "loc": "2:17-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/**\n *\n * isIRI, isBlank, getLiteralType, getLiteralValue\n */\n\nconst ShExTermCjsModule = (function () {\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  const RdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\n  const XsdString = \"http://www.w3.org/2001/XMLSchema#string\";\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function resolveRelativeIRI (base, iri) {\n\n    if (absoluteIRI.test(iri))\n      return iri\n\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      let m = base.match(schemeAuthority);\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? m[1] : m[0]) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(base.replace(/[^\\/?]*(?:\\?.*)?$/, '') + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function internalTerm (node) { // !!rdfjsTermToInternal\n    switch (node.termType) {\n    case (\"NamedNode\"):\n      return node.value;\n    case (\"BlankNode\"):\n      return \"_:\" + node.value;\n    case (\"Literal\"):\n      return \"\\\"\" + node.value + \"\\\"\" + (\n        node.datatypeString === RdfLangString\n          ? \"@\" + node.language\n          : node.datatypeString === XsdString\n          ? \"\"\n          : \"^^\" + node.datatypeString\n      );\n    default: throw Error(\"unknown RDFJS node type: \" + JSON.stringify(node))\n    }\n  }\n\n  function internalTriple (triple) { // !!rdfjsTripleToInternal\n    return {\n      subject: internalTerm(triple.subject),\n      predicate: internalTerm(triple.predicate),\n      object: internalTerm(triple.object)\n    };\n  }\n\n  function externalTerm (node, factory) { // !!intermalTermToRdfjs\n    if (isIRI(node)) {\n      return factory.namedNode(node);\n    } else if (isBlank(node)) {\n      return factory.blankNode(node.substr(2));\n    } else if (isLiteral(node)) {\n      let dtOrLang = getLiteralLanguage(node) ||\n          (getLiteralType(node) === XsdString\n           ? null // seems to screw up N3.js\n           : factory.namedNode(getLiteralType(node)))\n      return factory.literal(getLiteralValue(node), dtOrLang)\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  function externalTriple (triple, factory) { // !!rename internalTripleToRdjs\n    return factory.quad(\n      externalTerm(triple.subject, factory),\n      externalTerm(triple.predicate, factory),\n      externalTerm(triple.object, factory)\n    );\n  }\n\n  function intermalTermToTurtle (node, base, prefixes) {\n    if (isIRI(node)) {\n      // if (node === RDF_TYPE) // only valid in Turtle predicates\n      //   return \"a\";\n\n      // Escape special characters\n      if (escape.test(node))\n        node = node.replace(escapeAll, characterReplacer);\n      var pref = Object.keys(prefixes).find(pref => node.startsWith(prefixes[pref]));\n      if (pref) {\n        var rest = node.substr(prefixes[pref].length);\n        if (rest.indexOf(\"\\\\\") === -1) // could also say no more than n of these: [...]\n          return pref + \":\" + rest.replace(/([~!$&'()*+,;=/?#@%])/g, '\\\\' + \"$1\");\n      }\n      if (node.startsWith(base)) {\n        return \"<\" + node.substr(base.length) + \">\";\n      } else {\n        return \"<\" + node + \">\";\n      }\n    } else if (isBlank(node)) {\n      return node;\n    } else if (isLiteral(node)) {\n      var value = getLiteralValue(node);\n      var type = getLiteralType(node);\n      var language = getLiteralLanguage(node);\n      // Escape special characters\n      if (escape.test(value))\n        value = value.replace(escapeAll, characterReplacer);\n      // Write the literal, possibly with type or language\n      if (language)\n        return '\"' + value + '\"@' + language;\n      else if (type && type !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return '\"' + value + '\"^^' + this.intermalTermToTurtle(type, base, prefixes);\n      else\n        return '\"' + value + '\"';\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  function isIRI (entity) {\n    if (typeof entity !== 'string')\n      return false;\n    else if (entity.length === 0)\n      return true;\n    else {\n      var firstChar = entity[0];\n      return firstChar !== '\"' && firstChar !== '_';\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  function isLiteral (entity) {\n    return typeof entity === 'string' && entity[0] === '\"';\n  }\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  function isBlank (entity) {\n    return typeof entity === 'string' && entity.substr(0, 2) === '_:';\n  }\n\n  // Tests whether the given entity represents the default graph\n  function isDefaultGraph (entity) {\n    return !entity;\n  }\n\n  // Tests whether the given triple is in the default graph\n  function inDefaultGraph (triple) {\n    return !triple.graph;\n  }\n\n  // Gets the string value of a literal in the N3 library\n  function getLiteralValue (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  }\n\n  // Gets the type of a literal in the N3 library\n  function getLiteralType (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  }\n\n  // Gets the language of a literal in the N3 library\n  function getLiteralLanguage (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  }\n\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n  // Replaces a character by its escaped version\n  function characterReplacer (character) {\n    // Replace a single character by its escaped version\n    var result = escapeReplacements[character];\n    if (result === undefined) {\n      // Replace a single character with its 4-bit unicode escape sequence\n      if (character.length === 1) {\n        result = character.charCodeAt(0).toString(16);\n        result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n      }\n      // Replace a surrogate pair with its 8-bit unicode escape sequence\n      else {\n        result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                  character.charCodeAt(1) + 0x2400).toString(16);\n        result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n      }\n    }\n    return result;\n  }\n\n  return {\n    RdfLangString: RdfLangString,\n    XsdString: XsdString,\n    resolveRelativeIRI: resolveRelativeIRI,\n    isIRI: isIRI,\n    isLiteral: isLiteral,\n    isBlank: isBlank,\n    isDefaultGraph: isDefaultGraph,\n    inDefaultGraph: inDefaultGraph,\n    getLiteralValue: getLiteralValue,\n    getLiteralType: getLiteralType,\n    getLiteralLanguage: getLiteralLanguage,\n    internalTerm: internalTerm,\n    internalTriple: internalTriple,\n    externalTerm: externalTerm,\n    externalTriple: externalTriple,\n    intermalTermToTurtle: intermalTermToTurtle,\n  }\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExTermCjsModule; // node environment\n"
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "index": 10,
          "index2": 20,
          "size": 73522,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/util",
              "loc": "5:20-43"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/util",
              "loc": "5:19-42"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "@shexjs/util",
              "loc": "960:17-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExUtil** provides ShEx utility functions\n\nconst ShExUtilCjsModule = (function () {\nvar ShExTerm = require(\"@shexjs/term\");\nconst Visitor = require('@shexjs/visitor')\nconst Hierarchy = require('hierarchy-closure')\n\nconst SX = {};\nSX._namespace = \"http://www.w3.org/ns/shex#\";\n[\"Schema\", \"@context\", \"imports\", \"startActs\", \"start\", \"shapes\",\n \"ShapeOr\", \"ShapeAnd\", \"shapeExprs\", \"nodeKind\",\n \"NodeConstraint\", \"iri\", \"bnode\", \"nonliteral\", \"literal\", \"datatype\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\", \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\", \"values\",\n \"ShapeNot\", \"shapeExpr\",\n \"Shape\", \"virtual\", \"closed\", \"extra\", \"expression\", \"inherit\", \"semActs\",\n \"ShapeRef\", \"reference\", \"ShapeExternal\",\n \"EachOf\", \"OneOf\", \"expressions\", \"min\", \"max\", \"annotation\",\n \"TripleConstraint\", \"inverse\", \"negated\", \"predicate\", \"valueExpr\",\n \"Inclusion\", \"include\", \"Language\", \"languageTag\",\n \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"stem\",\n \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\", \"exclusion\",\n \"Wildcard\", \"SemAct\", \"name\", \"code\",\n \"Annotation\", \"object\"].forEach(p => {\n  SX[p] = SX._namespace+p;\n});\nconst RDF = {};\nRDF._namespace = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n[\"type\", \"first\", \"rest\", \"nil\"].forEach(p => {\n  RDF[p] = RDF._namespace+p;\n});\nconst XSD = {}\nXSD._namespace = \"http://www.w3.org/2001/XMLSchema#\";\n[\"anyURI\"].forEach(p => {\n  XSD[p] = XSD._namespace+p;\n});\nconst OWL = {}\nOWL._namespace = \"http://www.w3.org/2002/07/owl#\";\n[\"Thing\"].forEach(p => {\n  OWL[p] = OWL._namespace+p;\n});\n\nconst Missed = {}; // singleton\nvar UNBOUNDED = -1;\n\nfunction extend (base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\nvar ShExUtil = {\n\n  SX: SX,\n  RDF: RDF,\n  version: function () {\n    return \"0.5.0\";\n  },\n\n  Visitor: Visitor,\n  index: Visitor.index,\n\n  // tests\n  // console.warn(\"HERE:\", ShExJtoAS({\"type\":\"Schema\",\"shapes\":[{\"id\":\"http://all.example/S1\",\"type\":\"Shape\",\"expression\":\n  //  { \"id\":\"http://all.example/S1e\", \"type\":\"EachOf\",\"expressions\":[ ] },\n  // // { \"id\":\"http://all.example/S1e\",\"type\":\"TripleConstraint\",\"predicate\":\"http://all.example/p1\"},\n  // \"extra\":[\"http://all.example/p3\",\"http://all.example/p1\",\"http://all.example/p2\"]\n  // }]}).shapes['http://all.example/S1']);\n\n  ShExJtoAS: function (schema) {\n    var _ShExUtil = this;\n    schema._prefixes = schema.prefixes || {  };\n    schema._index = this.index(schema);\n    return schema;\n  },\n\n  AStoShExJ: function (schema, abbreviate) {\n    schema[\"@context\"] = schema[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete schema[\"_index\"];\n    delete schema[\"_prefixes\"];\n    return schema;\n  },\n\n  ShExRVisitor: function (knownShapeExprs) {\n    var v = ShExUtil.Visitor();\n    var knownExpressions = {};\n    var oldVisitShapeExpr = v.visitShapeExpr,\n        oldVisitValueExpr = v.visitValueExpr,\n        oldVisitExpression = v.visitExpression;\n    v.keepShapeExpr = oldVisitShapeExpr;\n\n    v.visitShapeExpr = v.visitValueExpr = function (expr, label) {\n      if (typeof expr === \"string\")\n        return expr;\n      if (\"id\" in expr) {\n        if (knownShapeExprs.indexOf(expr.id) !== -1 || Object.keys(expr).length === 1)\n          return expr.id;\n        delete expr.id;\n      }\n      return oldVisitShapeExpr.call(this, expr, label);\n    };\n\n    v.visitExpression = function (expr) {\n      if (typeof expr === \"string\") // shortcut for recursive references e.g. 1Include1 and ../doc/TODO.md\n        return expr;\n      if (\"id\" in expr) {\n        if (expr.id in knownExpressions) {\n          knownExpressions[expr.id].refCount++;\n          return expr.id;\n        }\n      }\n      var ret = oldVisitExpression.call(this, expr);\n      // Everything from RDF has an ID, usually a BNode.\n      knownExpressions[expr.id] = { refCount: 1, expr: ret };\n      return ret;\n    }\n\n    v.cleanIds = function () {\n      for (var k in knownExpressions) {\n        var known = knownExpressions[k];\n        if (known.refCount === 1 && ShExTerm.isBlank(known.expr.id))\n          delete known.expr.id;\n      };\n    }\n\n    return v;\n  },\n\n\n  // tests\n  // var shexr = ShExUtil.ShExRtoShExJ({ \"type\": \"Schema\", \"shapes\": [\n  //   { \"id\": \"http://a.example/S1\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p1\",\n  //       \"valueExpr\": {\n  //         \"type\": \"ShapeAnd\", \"shapeExprs\": [\n  //           { \"type\": \"NodeConstraint\", \"nodeKind\": \"bnode\" },\n  //           { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //             \"expression\": {\n  //               \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  //           //            \"http://a.example/S2\"\n  //         ] } } },\n  //   { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  // ] });\n  // console.warn(\"HERE:\", shexr.shapes[0].expression.valueExpr);\n  // ShExUtil.ShExJtoAS(shexr);\n  // console.warn(\"THERE:\", shexr.shapes[\"http://a.example/S1\"].expression.valueExpr);\n\n\n  ShExRtoShExJ: function (schema) {\n    // compile a list of known shapeExprs\n    var knownShapeExprs = [];\n    if (\"shapes\" in schema)\n      knownShapeExprs = knownShapeExprs.concat(schema.shapes.map(sh => { return sh.id; }));\n\n    // normalize references to those shapeExprs\n    var v = this.ShExRVisitor(knownShapeExprs);\n    if (\"start\" in schema)\n      schema.start = v.visitShapeExpr(schema.start);\n    if (\"shapes\" in schema)\n      schema.shapes = schema.shapes.map(sh => {\n        return v.keepShapeExpr(sh);\n      });\n\n    // remove extraneous BNode IDs\n    v.cleanIds();\n    return schema;\n  },\n\n  valGrep: function (obj, type, f) {\n    var _ShExUtil = this;\n    var ret = [];\n    for (var i in obj) {\n      var o = obj[i];\n      if (typeof o === \"object\") {\n        if (\"type\" in o && o.type === type)\n          ret.push(f(o));\n        ret.push.apply(ret, _ShExUtil.valGrep(o, type, f));\n      }\n    }\n    return ret;\n  },\n\n  n3jsToTurtle: function (res) {\n    function termToLex (node) {\n      return typeof node === \"object\" ? (\"\\\"\" + node.value + \"\\\"\" + (\n        \"type\" in node ? \"^^<\" + node.type + \">\" :\n          \"language\" in node ? \"@\" + node.language :\n          \"\"\n      )) :\n      ShExTerm.isIRI(node) ? \"<\" + node + \">\" :\n      ShExTerm.isBlank(node) ? node :\n      \"???\";\n    }\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  valToN3js: function (res, factory) {\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      var ret = JSON.parse(JSON.stringify(t));\n      if (typeof t.object === \"object\")\n        ret.object = (\"\\\"\" + t.object.value + \"\\\"\" + (\n          \"type\" in t.object ? \"^^\" + t.object.type :\n            \"language\" in t.object ? \"@\" + t.object.language :\n            \"\"\n        ));\n      return ShExTerm.externalTriple(ret, factory);\n    });\n  },\n\n  n3jsToTurtle: function (n3js) {\n    function termToLex (node) {\n      if (ShExTerm.isIRI(node))\n        return \"<\" + node + \">\";\n      if (ShExTerm.isBlank(node))\n        return node;\n      var t = ShExTerm.getLiteralType(node);\n      if (t && t !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return \"\\\"\" + ShExTerm.getLiteralValue(node) + \"\\\"\" +\n        \"^^<\" + t + \">\";\n      return node;\n    }\n    return n3js.map(function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  /* canonicalize: move all tripleExpression references to their first expression.\n   *\n   */\n  canonicalize: function (schema, trimIRI) {\n    var ret = JSON.parse(JSON.stringify(schema));\n    ret[\"@context\"] = ret[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete ret._prefixes;\n    delete ret._base;\n    let index = ret._index || this.index(schema);\n    delete ret._index;\n    let sourceMap = ret._sourceMap;\n    delete ret._sourceMap;\n    // Don't delete ret.productions as it's part of the AS.\n    var v = ShExUtil.Visitor();\n    var knownExpressions = [];\n    var oldVisitInclusion = v.visitInclusion, oldVisitExpression = v.visitExpression;\n    v.visitInclusion = function (inclusion) {\n      if (knownExpressions.indexOf(inclusion) === -1 &&\n          inclusion in index.tripleExprs) {\n        knownExpressions.push(inclusion)\n        return oldVisitExpression.call(v, index.tripleExprs[inclusion]);\n      }\n      return oldVisitInclusion.call(v, inclusion);\n    };\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression) {\n        if (knownExpressions.indexOf(expression.id) === -1) {\n          knownExpressions.push(expression.id)\n          return oldVisitExpression.call(v, index.tripleExprs[expression.id]);\n        }\n        return expression.id; // Inclusion\n      }\n      return oldVisitExpression.call(v, expression);\n    };\n    if (trimIRI) {\n      v.visitIRI = function (i) {\n        return i.replace(trimIRI, \"\");\n      }\n      if (\"imports\" in ret)\n        ret.imports = v.visitImports(ret.imports);\n    }\n    if (\"shapes\" in ret) {\n      ret.shapes = Object.keys(index.shapeExprs).sort().map(k => {\n        if (\"extra\" in index.shapeExprs[k])\n          index.shapeExprs[k].extra.sort();\n        return v.visitShapeExpr(index.shapeExprs[k]);\n      });\n    }\n    return ret;\n  },\n\n  BiDiClosure: function () {\n    return {\n      needs: {},\n      neededBy: {},\n      inCycle: [],\n      test: function () {\n        function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n        // this.add(1, 2); expect(this.needs, { 1:[2]                     }); expect(this.neededBy, { 2:[1]                     });\n        // this.add(3, 4); expect(this.needs, { 1:[2], 3:[4]              }); expect(this.neededBy, { 2:[1], 4:[3]              });\n        // this.add(2, 3); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1] });\n\n        this.add(2, 3); expect(this.needs, { 2:[3]                     }); expect(this.neededBy, { 3:[2]                     });\n        this.add(1, 2); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(1, 3); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(3, 4); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(6, 7); expect(this.needs, { 6:[7]                    , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6]                    , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 6); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 7); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(7, 8); expect(this.needs, { 5:[6,7,8], 6:[7,8], 7:[8], 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5], 8:[7,6,5], 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(4, 5);\n        expect(this.needs,    { 1:[2,3,4,5,6,7,8], 2:[3,4,5,6,7,8], 3:[4,5,6,7,8], 4:[5,6,7,8], 5:[6,7,8], 6:[7,8], 7:[8] });\n        expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1], 5:[4,3,2,1], 6:[5,4,3,2,1], 7:[6,5,4,3,2,1], 8:[7,6,5,4,3,2,1] });\n      },\n      add: function (needer, needie, negated) {\n        var r = this;\n        if (!(needer in r.needs))\n          r.needs[needer] = [];\n        if (!(needie in r.neededBy))\n          r.neededBy[needie] = [];\n\n        // // [].concat.apply(r.needs[needer], [needie], r.needs[needie]). emitted only last element\n        r.needs[needer] = r.needs[needer].concat([needie], r.needs[needie]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        // // [].concat.apply(r.neededBy[needie], [needer], r.neededBy[needer]). emitted only last element\n        r.neededBy[needie] = r.neededBy[needie].concat([needer], r.neededBy[needer]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n\n        if (needer in this.neededBy) this.neededBy[needer].forEach(function (e) {\n          r.needs[e] = r.needs[e].concat([needie], r.needs[needie]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        });\n\n        if (needie in this.needs) this.needs[needie].forEach(function (e) {\n          r.neededBy[e] = r.neededBy[e].concat([needer], r.neededBy[needer]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; })\n        });\n        // this.neededBy[needie].push(needer);\n\n        if (r.needs[needer].indexOf(needer) !== -1)\n          r.inCycle = r.inCycle.concat(r.needs[needer]);\n      },\n      trim: function () {\n        function _trim (a) {\n          // filter(function (el, ord, l) { return l.indexOf(el) === ord; })\n          for (var i = a.length-1; i > -1; --i)\n            if (a.indexOf(a[i]) < i)\n              a.splice(i, i+1);\n        }\n        for (k in this.needs)\n          _trim(this.needs[k]);\n        for (k in this.neededBy)\n          _trim(this.neededBy[k]);\n      },\n      foundIn: {},\n      addIn: function (tripleExpr, shapeExpr) {\n        this.foundIn[tripleExpr] = shapeExpr;\n      }\n    }\n  },\n  /** @@TODO tests\n   * options:\n   *   no: don't do anything; just report nestable shapes\n   *   transform: function to change shape labels\n   */\n  nestShapes: function (schema, options = {}) {\n    var _ShExUtil = this;\n    const index = schema._index || this.index(schema);\n    if (!('no' in options)) { options.no = false }\n\n    let shapeLabels = Object.keys(index.shapeExprs || [])\n    let shapeReferences = {}\n    shapeLabels.forEach(label => {\n      let shape = index.shapeExprs[label]\n      noteReference(label, null) // just note the shape so we have a complete list at the end\n      shape = _ShExUtil.skipDecl(shape)\n      if (shape.type === 'Shape') {\n        if ('extends' in shape) {\n          shape.extends.forEach(\n            parent => noteReference(parent, shape)\n          )\n        }\n        if ('expression' in shape) {\n          (_ShExUtil.simpleTripleConstraints(shape) || []).forEach(tc => {\n            let target = _ShExUtil.getValueType(tc.valueExpr, true)\n            noteReference(target, {type: 'tc', shapeLabel: label, tc: tc})\n          })\n        }\n      } else if (shape.type === 'NodeConstraint') {\n        // can't have any refs to other shapes\n      } else {\n        throw Error('nestShapes currently only supports Shapes and NodeConstraints')\n      }\n    })\n    let nestables = Object.keys(shapeReferences).filter(\n      label => shapeReferences[label].length === 1\n        && shapeReferences[label][0].type === 'tc' // no inheritance support yet\n        && _ShExUtil.skipDecl(index.shapeExprs[label]).type === 'Shape' // Don't nest e.g. valuesets for now\n    ).filter(\n      nestable => !('noNestPattern' in options)\n        || !nestable.match(RegExp(options.noNestPattern))\n    ).reduce((acc, label) => {\n      acc[label] = {\n        referrer: shapeReferences[label][0].shapeLabel,\n        predicate: shapeReferences[label][0].tc.predicate\n      }\n      return acc\n    }, {})\n    if (!options.no) {\n      let oldToNew = {}\n\n      if (options.rename) {\n      if (!('transform' in options)) {\n        options.transform = (function () {\n          let map = shapeLabels.reduce((acc, k, idx) => {\n            acc[k] = '_:transformed' + idx\n            return acc\n          }, {})\n          return function (id, shapeExpr) {\n            return map[id]\n          }\n        })()\n      }\n      Object.keys(nestables).forEach(oldName => {\n        let shapeExpr = index.shapeExprs[oldName]\n        let newName = options.transform(oldName, shapeExpr)\n        oldToNew[oldName] = newName\n        shapeLabels[shapeLabels.indexOf(oldName)] = newName\n        nestables[newName] = nestables[oldName]\n        nestables[newName].was = oldName\n        delete nestables[oldName]\n        index.shapeExprs[newName] = index.shapeExprs[oldName]\n        delete index.shapeExprs[oldName]\n        if (shapeReferences[oldName].length !== 1) { throw Error('assertion: ' + oldName + ' doesn\\'t have one reference: [' + shapeReferences[oldName] + ']') }\n        let ref = shapeReferences[oldName][0]\n        if (ref.type === 'tc') {\n          if (ref.tc.valueExpr.type === 'ShapeRef') {\n            ref.tc.valueExpr.reference = newName\n          } else {\n            throw Error('assertion: rename not implemented for TripleConstraint expr: ' + ref.tc.valueExpr)\n            // _ShExUtil.setValueType(ref, newName)\n          }\n        } else if (ref.type === 'Shape') {\n          throw Error('assertion: rename not implemented for Shape: ' + ref)\n        } else {\n          throw Error('assertion: ' + ref.type + ' not TripleConstraint or Shape')\n        }\n      })\n\n      Object.keys(nestables).forEach(k => {\n        let n = nestables[k]\n        if (n.referrer in oldToNew) {\n          n.newReferrer = oldToNew[n.referrer]\n        }\n      })\n\n      // Restore old order for more concise diffs.\n      let shapesCopy = {}\n      shapeLabels.forEach(label => shapesCopy[label] = index.shapeExprs[label])\n      index.shapeExprs = shapesCopy\n      } else {\n        const doomed = []\n        const ids = schema.shapes.map(s => s.id)\n        Object.keys(nestables).forEach(oldName => {\n          shapeReferences[oldName][0].tc.valueExpr = index.shapeExprs[oldName].shapeExpr\n          const delme = ids.indexOf(oldName)\n          if (schema.shapes[delme].id !== oldName)\n            throw Error('assertion: found ' + schema.shapes[delme].id + ' instead of ' + oldName)\n          doomed.push(delme)\n          delete index.shapeExprs[oldName]\n        })\n        doomed.sort((l, r) => r - l).forEach(delme => {\n          const id = schema.shapes[delme].id\n          if (!nestables[id])\n            throw Error('deleting unexpected shape ' + id)\n          schema.shapes.splice(delme, 1)\n        })\n      }\n    }\n    // console.dir(nestables)\n    // console.dir(shapeReferences)\n    return nestables\n\n    function noteReference (id, reference) {\n      if (!(id in shapeReferences)) {\n        shapeReferences[id] = []\n      }\n      if (reference) {\n        shapeReferences[id].push(reference)\n      }\n    }\n  },\n\n  /** @@TODO tests\n   *\n   */\n  getPredicateUsage: function (schema, untyped = {}) {\n    var _ShExUtil = this;\n\n    // populate shapeHierarchy\n    let shapeHierarchy = Hierarchy.create()\n    Object.keys(schema.shapes).forEach(label => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[label])\n      if (shapeExpr.type === 'Shape') {\n        (shapeExpr.extends || []).forEach(\n          superShape => shapeHierarchy.add(superShape, label)\n        )\n      }\n    })\n    Object.keys(schema.shapes).forEach(label => {\n      if (!(label in shapeHierarchy.parents))\n        shapeHierarchy.parents[label] = []\n    })\n\n    let predicates = { } // IRI->{ uses: [shapeLabel], commonType: shapeExpr }\n    Object.keys(schema.shapes).forEach(shapeLabel => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[shapeLabel])\n      if (shapeExpr.type === 'Shape') {\n        let tcs = _ShExUtil.simpleTripleConstraints(shapeExpr) || []\n        tcs.forEach(tc => {\n          let newType = _ShExUtil.getValueType(tc.valueExpr)\n          if (!(tc.predicate in predicates)) {\n            predicates[tc.predicate] = {\n              uses: [shapeLabel],\n              commonType: newType,\n              polymorphic: false\n            }\n            if (typeof newType === 'object') {\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                newType,\n                references: []\n              }\n            }\n          } else {\n            predicates[tc.predicate].uses.push(shapeLabel)\n            let curType = predicates[tc.predicate].commonType\n            if (typeof curType === 'object' || curType === null) {\n              // another use of a predicate with no commonType\n              // console.warn(`${shapeLabel} ${tc.predicate}:${newType} uses untypable predicate`)\n              untyped[tc.predicate].references.push({ shapeLabel, newType })\n            } else if (typeof newType === 'object') {\n              // first use of a predicate with no detectable commonType\n              predicates[tc.predicate].commonType = null\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                curType,\n                newType,\n                references: []\n              }\n            } else if (curType === newType) {\n              ; // same type again\n            } else if (shapeHierarchy.parents[curType].indexOf(newType) !== -1) {\n              predicates[tc.predicate].polymorphic = true; // already covered by current commonType\n            } else {\n              let idx = shapeHierarchy.parents[newType].indexOf(curType)\n              if (idx === -1) {\n                let intersection = shapeHierarchy.parents[curType].filter(\n                  lab => -1 !== shapeHierarchy.parents[newType].indexOf(lab)\n                )\n                if (intersection.length === 0) {\n                  untyped[tc.predicate] = {\n                    shapeLabel,\n                    predicate: tc.predicate,\n                    curType,\n                    newType,\n                    references: []\n                  }\n                  // console.warn(`${shapeLabel} ${tc.predicate} : ${newType} isn\\'t related to ${curType}`)\n                  predicates[tc.predicate].commonType = null\n                } else {\n                  predicates[tc.predicate].commonType = intersection[0]\n                  predicates[tc.predicate].polymorphic = true\n                }\n              } else {\n                predicates[tc.predicate].commonType = shapeHierarchy.parents[newType][idx]\n                predicates[tc.predicate].polymorphic = true\n              }\n            }\n          }\n        })\n      }\n    })\n    return predicates\n  },\n\n  /** @@TODO tests\n   *\n   */\n  simpleTripleConstraints: function (shape) {\n    if (!('expression' in shape)) {\n      return []\n    }\n    if (shape.expression.type === 'TripleConstraint') {\n      return [ shape.expression ]\n    }\n    if (shape.expression.type === 'EachOf' &&\n        !(shape.expression.expressions.find(\n          expr => expr.type !== 'TripleConstraint'\n        ))) {\n          return shape.expression.expressions\n        }\n    throw Error('can\\'t (yet) express ' + JSON.stringify(shape))\n  },\n\n  skipDecl: function (shapeExpr) {\n    return shapeExpr.type === 'ShapeDecl' ? shapeExpr.shapeExpr : shapeExpr\n  },\n\n  getValueType: function (valueExpr) {\n    if (typeof valueExpr === 'string') { return valueExpr }\n    if (valueExpr.reference) { return valueExpr.reference }\n    if (valueExpr.nodeKind === 'iri') { return OWL.Thing } // !! push this test to callers\n    if (valueExpr.datatype) { return valueExpr.datatype }\n    // if (valueExpr.extends && valueExpr.extends.length === 1) { return valueExpr.extends[0] }\n    return valueExpr // throw Error('no value type for ' + JSON.stringify(valueExpr))\n  },\n\n  /** getDependencies: find which shappes depend on other shapes by inheritance\n   * or inclusion.\n   * TODO: rewrite in terms of Visitor.\n   */\n  getDependencies: function (schema, ret) {\n    ret = ret || this.BiDiClosure();\n    (schema.shapes || []).forEach(function (shape) {\n      function _walkShapeExpression (shapeExpr, negated) {\n        if (typeof shapeExpr === \"string\") { // ShapeRef\n          ret.add(shape.id, shapeExpr);\n        } else if (shapeExpr.type === \"ShapeOr\" || shapeExpr.type === \"ShapeAnd\") {\n          shapeExpr.shapeExprs.forEach(function (expr) {\n            _walkShapeExpression(expr, negated);\n          });\n        } else if (shapeExpr.type === \"ShapeNot\") {\n          _walkShapeExpression(shapeExpr.shapeExpr, negated ^ 1); // !!! test negation\n        } else if (shapeExpr.type === \"Shape\") {\n          _walkShape(shapeExpr, negated);\n        } else if (shapeExpr.type === \"NodeConstraint\") {\n          // no impact on dependencies\n        } else if (shapeExpr.type === \"ShapeExternal\") {\n        } else\n          throw Error(\"expected Shape{And,Or,Ref,External} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n      }\n      \n      function _walkShape (shape, negated) {\n        function _walkTripleExpression (tripleExpr, negated) {\n          function _exprGroup (exprs, negated) {\n            exprs.forEach(function (nested) {\n              _walkTripleExpression(nested, negated) // ?? negation allowed?\n            });\n          }\n\n          function _walkTripleConstraint (tc, negated) {\n            if (tc.valueExpr)\n              _walkShapeExpression(tc.valueExpr, negated);\n            if (negated && ret.inCycle.indexOf(shape.id) !== -1) // illDefined/negatedRefCycle.err\n              throw Error(\"Structural error: \" + shape.id + \" appears in negated cycle\");\n          }\n\n          if (typeof tripleExpr === \"string\") { // Inclusion\n            ret.add(shape.id, tripleExpr);\n          } else {\n            if (\"id\" in tripleExpr)\n              ret.addIn(tripleExpr.id, shape.id)\n            if (tripleExpr.type === \"TripleConstraint\") {\n              _walkTripleConstraint(tripleExpr, negated);\n            } else if (tripleExpr.type === \"OneOf\" || tripleExpr.type === \"EachOf\") {\n              _exprGroup(tripleExpr.expressions);\n            } else {\n              throw Error(\"expected {TripleConstraint,OneOf,EachOf,Inclusion} in \" + tripleExpr);\n            }\n          }\n        }\n\n        if (shape.inherit && shape.inherit.length > 0)\n          shape.inherit.forEach(function (i) {\n            ret.add(shape.id, i);\n          });\n        if (shape.expression)\n          _walkTripleExpression(shape.expression, negated);\n      }\n      _walkShapeExpression(shape, 0); // 0 means false for bitwise XOR\n    });\n    return ret;\n  },\n\n  /** partition: create subset of a schema with only desired shapes and\n   * their dependencies.\n   *\n   * @schema: input schema\n   * @partition: shape name or array of desired shape names\n   * @deps: (optional) dependency tree from getDependencies.\n   *        map(shapeLabel -> [shapeLabel])\n   */\n  partition: function (schema, includes, deps, cantFind) {\n    const inputIndex = schema._index || this.index(schema)\n    const outputIndex = { shapeExprs: new Map(), tripleExprs: new Map() };\n    includes = includes instanceof Array ? includes : [includes];\n\n    // build dependency tree if not passed one\n    deps = deps || this.getDependencies(schema);\n    cantFind = cantFind || function (what, why) {\n      throw new Error(\"Error: can't find shape \" +\n                      (why ?\n                       why + \" dependency \" + what :\n                       what));\n    };\n    var partition = {};\n    for (var k in schema)\n      partition[k] = k === \"shapes\" ? [] : schema[k];\n    includes.forEach(function (i) {\n      if (i in outputIndex.shapeExprs) {\n        // already got it.\n      } else if (i in inputIndex.shapeExprs) {\n        const adding = inputIndex.shapeExprs[i];\n        partition.shapes.push(adding);\n        outputIndex.shapeExprs[adding.id] = adding;\n        if (i in deps.needs)\n          deps.needs[i].forEach(function (n) {\n            // Turn any needed TE into an SE.\n            if (n in deps.foundIn)\n              n = deps.foundIn[n];\n\n            if (n in outputIndex.shapeExprs) {\n            } else if (n in inputIndex.shapeExprs) {\n              const needed = inputIndex.shapeExprs[n];\n              partition.shapes.push(needed);\n              outputIndex.shapeExprs[needed.id] = needed;\n            } else\n              cantFind(n, i);\n          });\n      } else {\n        cantFind(i, \"supplied\");\n      }\n    });\n    return partition;\n  },\n\n\n  /** @@TODO flatten: return copy of input schema with all shape and value class\n   * references substituted by a copy of their referent.\n   *\n   * @schema: input schema\n   */\n  flatten: function (schema, deps, cantFind) {\n    var v = this.Visitor();\n    return v.visitSchema(schema);\n  },\n\n  // @@ put predicateUsage here\n\n  emptySchema: function () {\n    return {\n      type: \"Schema\"\n    };\n  },\n  merge: function (left, right, overwrite, inPlace) {\n    var ret = inPlace ? left : this.emptySchema();\n\n    function mergeArray (attr) {\n      Object.keys(left[attr] || {}).forEach(function (key) {\n        if (!(attr in ret))\n          ret[attr] = {};\n        ret[attr][key] = left[attr][key];\n      });\n      Object.keys(right[attr] || {}).forEach(function (key) {\n        if (!(attr  in left) || !(key in left[attr]) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = {};\n          ret[attr][key] = right[attr][key];\n        }\n      });\n    }\n\n    function mergeMap (attr) {\n      (left[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr in ret))\n          ret[attr] = new Map();\n        ret[attr].set(key, left[attr].get(key));\n      });\n      (right[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr  in left) || !(left[attr].has(key)) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = new Map();\n          ret[attr].set(key, right[attr].get(key));\n        }\n      });\n    }\n\n    // base\n    if (\"_base\" in left)\n      ret._base = left._base;\n    if (\"_base\" in right)\n      if (!(\"_base\" in left) || overwrite)\n        ret._base = right._base;\n\n    mergeArray(\"_prefixes\");\n\n    mergeMap(\"_sourceMap\");\n\n    if (\"imports\" in right)\n      if (!(\"imports\" in left) || overwrite)\n        ret.imports = right.imports;\n\n    // startActs\n    if (\"startActs\" in left)\n      ret.startActs = left.startActs;\n    if (\"startActs\" in right)\n      if (!(\"startActs\" in left) || overwrite)\n        ret.startActs = right.startActs;\n\n    // start\n    if (\"start\" in left)\n      ret.start = left.start;\n    if (\"start\" in right)\n      if (!(\"start\" in left) || overwrite)\n        ret.start = right.start;\n\n    let lindex = left._index || this.index(left);\n\n    // shapes\n    if (!inPlace)\n      (left.shapes || []).forEach(function (lshape) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(lshape);\n      });\n    (right.shapes || []).forEach(function (rshape) {\n      if (!(\"shapes\"  in left) || !(rshape.id in lindex.shapeExprs) || overwrite) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(rshape)\n      }\n    });\n\n    if (left._index || right._index)\n      ret._index = this.index(ret); // inefficient; could build above\n\n    return ret;\n  },\n\n  absolutizeResults: function (parsed, base) {\n    // !! duplicate of Validation-test.js:84: var referenceResult = parseJSONFile(resultsFile...)\n    function mapFunction (k, obj) {\n      // resolve relative URLs in results file\n      if ([\"shape\", \"reference\", \"node\", \"subject\", \"predicate\", \"object\"].indexOf(k) !== -1 &&\n          ShExTerm.isIRI(obj[k])) {\n        obj[k] = ShExTerm.resolveRelativeIRI(base, obj[k]);\n      }}\n\n    function resolveRelativeURLs (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (typeof obj[k] === \"object\") {\n          resolveRelativeURLs(obj[k]);\n        }\n        if (mapFunction) {\n          mapFunction(k, obj);\n        }\n      });\n    }\n    resolveRelativeURLs(parsed);\n    return parsed;\n  },\n\n  getProofGraph: function (res, db, dataFactory) {\n    function _dive1 (solns) {\n      if (solns.type === \"NodeConstraintTest\") {\n      } else if (solns.type === \"SolutionList\" ||\n          solns.type === \"ShapeAndResults\") {\n        solns.solutions.forEach(s => {\n          if (s.solution) // no .solution for <S> {}\n            _dive1(s.solution);\n        });\n      } else if (solns.type === \"ShapeOrResults\") {\n        _dive1(solns.solution);\n      } else if (solns.type === \"ShapeTest\") {\n        if (\"solution\" in solns)\n          _dive1(solns.solution);\n      } else if (solns.type === \"OneOfSolutions\" ||\n                 solns.type === \"EachOfSolutions\") {\n        solns.solutions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"OneOfSolution\" ||\n                 solns.type === \"EachOfSolution\") {\n        solns.expressions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"TripleConstraintSolutions\") {\n        solns.solutions.map(s => {\n          if (s.type !== \"TestedTriple\")\n            throw Error(\"unexpected result type: \" + s.type);\n          var s2 = s;\n          if (typeof s2.object === \"object\")\n            s2.object = \"\\\"\" + s2.object.value.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\"\n            + (s2.object.language ? (\"@\" + s2.object.language) : \n               s2.object.type ? (\"^^\" + s2.object.type) :\n               \"\");\n          db.addQuad(ShExTerm.externalTriple(s2, dataFactory))\n          if (\"referenced\" in s) {\n            _dive1(s.referenced);\n          }\n        });\n      } else {\n        throw Error(\"unexpected expr type \"+solns.type+\" in \" + JSON.stringify(solns));\n      }\n    }\n    _dive1(res);\n    return db;\n  },\n\n  validateSchema: function (schema) { // obselete, but may need other validations in the future.\n    var _ShExUtil = this;\n    var visitor = this.Visitor();\n    var currentLabel = currentExtra = null;\n    var currentNegated = false;\n    var dependsOn = { };\n    var inTE = false;\n    var oldVisitShape = visitor.visitShape;\n    var negativeDeps = Hierarchy.create();\n    var positiveDeps = Hierarchy.create();\n    let index = schema.index || this.index(schema);\n\n    visitor.visitShape = function (shape, label) {\n      var lastExtra = currentExtra;\n      currentExtra = shape.extra;\n      var ret = oldVisitShape.call(visitor, shape, label);\n      currentExtra = lastExtra;\n      return ret;\n    }\n\n    var oldVisitShapeNot = visitor.visitShapeNot;\n    visitor.visitShapeNot = function (shapeNot, label) {\n      var lastNegated = currentNegated;\n      currentNegated ^= true;\n      var ret = oldVisitShapeNot.call(visitor, shapeNot, label);\n      currentNegated = lastNegated;\n      return ret;\n    }\n\n    var oldVisitTripleConstraint = visitor.visitTripleConstraint;\n    visitor.visitTripleConstraint = function (expr) {\n      var lastNegated = currentNegated;\n      if (currentExtra && currentExtra.indexOf(expr.predicate) !== -1)\n        currentNegated ^= true;\n      inTE = true;\n      var ret = oldVisitTripleConstraint.call(visitor, expr);\n      inTE = false;\n      currentNegated = lastNegated;\n      return ret;\n    };\n\n    var oldVisitShapeRef = visitor.visitShapeRef;\n    visitor.visitShapeRef = function (shapeRef) {\n      if (!(shapeRef in index.shapeExprs))\n        throw firstError(Error(\"Structural error: reference to \" + JSON.stringify(shapeRef) + \" not found in schema shape expressions:\\n\" + dumpKeys(index.shapeExprs) + \".\"), shapeRef);\n      if (!inTE && shapeRef === currentLabel)\n        throw firstError(Error(\"Structural error: circular reference to \" + currentLabel + \".\"), shapeRef);\n      (currentNegated ? negativeDeps : positiveDeps).add(currentLabel, shapeRef)\n      return oldVisitShapeRef.call(visitor, shapeRef);\n    }\n\n    var oldVisitInclusion = visitor.visitInclusion;\n    visitor.visitInclusion = function (inclusion) {\n      var refd;\n      if (!(refd = index.tripleExprs[inclusion]))\n        throw firstError(Error(\"Structural error: included shape \" + inclusion + \" not found in schema triple expressions:\\n\" + dumpKeys(index.tripleExprs) + \".\"), inclusion);\n      // if (refd.type !== \"Shape\")\n      //   throw Error(\"Structural error: \" + inclusion + \" is not a simple shape.\");\n      return oldVisitInclusion.call(visitor, inclusion);\n    };\n\n    (schema.shapes || []).forEach(function (shape) {\n      currentLabel = shape.id;\n      visitor.visitShapeExpr(shape, shape.id);\n    });\n    let circs = Object.keys(negativeDeps.children).filter(\n      k => negativeDeps.children[k].filter(\n        k2 => k2 in negativeDeps.children && negativeDeps.children[k2].indexOf(k) !== -1\n          || k2 in positiveDeps.children && positiveDeps.children[k2].indexOf(k) !== -1\n      ).length > 0\n    );\n    if (circs.length)\n      throw firstError(Error(\"Structural error: circular negative dependencies on \" + circs.join(',') + \".\"), circs[0]);\n\n    function dumpKeys (obj) {\n      return obj ? Object.keys(obj).map(\n        u => u.substr(0, 2) === '_:' ? u : '<' + u + '>'\n      ).join(\"\\n        \") : '- none defined -'\n    }\n\n    function firstError (e, obj) {\n      if (\"_sourceMap\" in schema)\n        e.location = (schema._sourceMap.get(obj) || [undefined])[0];\n      return e;\n    }\n  },\n\n  /** isWellDefined: assert that schema is well-defined.\n   *\n   * @schema: input schema\n   * @@TODO\n   */\n  isWellDefined: function (schema) {\n    this.validateSchema(schema);\n    // var deps = this.getDependencies(schema);\n    return schema;\n  },\n\n  walkVal: function (val, cb) {\n    var _ShExUtil = this;\n    if (val.type === \"NodeConstraintTest\") {\n      return null;\n    } else if (val.type === \"ShapeTest\") {\n      return \"solution\" in val ? _ShExUtil.walkVal(val.solution, cb) : null;\n    } else if (val.type === \"ShapeOrResults\") {\n      return _ShExUtil.walkVal(val.solution || val.solutions, cb);\n    } else if (val.type === \"ShapeAndResults\") {\n      return val.solutions.reduce((ret, exp) => {\n        var n = _ShExUtil.walkVal(exp, cb);\n        if (n)\n          Object.keys(n).forEach(k => {\n            if (k in ret)\n              ret[k] = ret[k].concat(n[k]);\n            else\n              ret[k] = n[k];\n          })\n        return ret;\n      }, {});\n    } else if (val.type === \"EachOfSolutions\" || val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        sln.expressions.forEach(exp => {\n          var n = _ShExUtil.walkVal(exp, cb);\n          if (n)\n            Object.keys(n).forEach(k => {\n              if (k in ret)\n                ret[k] = ret[k].concat(n[k]);\n              else\n                ret[k] = n[k];\n            })\n        });\n        return ret;\n      }, {});\n    } else if (val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        Object.assign(ret, _ShExUtil.walkVal(sln, cb));\n        return ret;\n      }, {});\n    } else if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        var ret = {};\n        var vals = [];\n        ret[val.predicate] = vals;\n        val.solutions.forEach(sln => {\n          var toAdd = [];\n          if (chaseList(sln.referenced, toAdd)) {\n            vals = vals.concat(toAdd);\n          } else {\n            var newElt = cb(sln);\n            if (\"referenced\" in sln) {\n              var t = _ShExUtil.walkVal(sln.referenced, cb);\n              if (t)\n                newElt.nested = t;\n            }\n            vals.push(newElt);\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = cb(member);\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.walkVal(member.referenced, cb);\n                if (t)\n                  newElt.nested = t;\n              }\n              vals.push(newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced.type === \"ShapeOrResults\" // heuristic for `nil  OR @<list>` idiom\n                          ? rest.referenced.solution\n                          : rest.referenced);\n            }\n          }\n        });\n        return vals.length ? ret : null;\n      } else {\n        return null;\n      }\n    } else if (val.type === \"Recursion\") {\n      return null;\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  /**\n   * Convert val results to a property tree.\n   * @exports\n   * @returns {@code {p1:[{p2: v2},{p3: v3}]}}\n   */\n  valToValues: function (val) {\n    return this.walkVal (val, function (sln) {\n      return { ldterm: sln.object };\n    });\n  },\n\n  valToExtension: function (val, lookfor) {\n    var map = this.walkVal (val, function (sln) {\n      return { extensions: sln.extensions };\n    });\n    function extensions (obj) {\n      var list = [];\n      var crushed = {};\n      function crush (elt) {\n        if (crushed === null)\n          return elt;\n        if (elt.constructor === Array) {\n          crushed = null;\n          return elt;\n        }\n        for (k in elt) {\n          if (k in crushed) {\n            crushed = null\n            return elt;\n          }\n          crushed[k] = ldify(elt[k]);\n        }\n        return elt;\n      }\n      for (var k in obj) {\n        if (k === \"extensions\") {\n          if (obj[k])\n            list.push(crush(ldify(obj[k][lookfor])));\n        } else if (k === \"nested\") {\n          var nested = extensions(obj[k]);\n          if (nested.constructor === Array)\n            nested.forEach(crush);\n          else\n            crush(nested);\n          list = list.concat(nested);\n        } else {\n          list.push(crush(extensions(obj[k])));\n        }\n      }\n      return list.length === 1 ? list[0] :\n        crushed ? crushed :\n        list;\n    }\n    return extensions(map);\n  },\n\n  valuesToSchema: function (values) {\n    // console.log(JSON.stringify(values, null, \"  \"));\n    var v = values;\n    var t = values[RDF.type][0].ldterm;\n    if (t === SX.Schema) {\n      /* Schema { \"@context\":\"http://www.w3.org/ns/shex.jsonld\"\n       *           startActs:[SemAct+]? start:(shapeExpr|labeledShapeExpr)?\n       *           shapes:[labeledShapeExpr+]? }\n       */\n      var ret = {\n        \"@context\": \"http://www.w3.org/ns/shex.jsonld\",\n        type: \"Schema\"\n      }\n      if (SX.startActs in v)\n        ret.startActs = v[SX.startActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      if (SX.imports in v)\n        ret.imports = v[SX.imports].map(e => {\n          return e.ldterm;\n        });\n      if (values[SX.start])\n        ret.start = extend({id: values[SX.start][0].ldterm}, shapeExpr(values[SX.start][0].nested));\n      var shapes = values[SX.shapes];\n      if (shapes) {\n        ret.shapes = shapes.map(v => {\n          return extend({id: v.ldterm}, shapeExpr(v.nested));\n        });\n      }\n      // console.log(ret);\n      return ret;\n    } else {\n      throw Error(\"unknown schema type in \" + JSON.stringify(values));\n    }\n    function findType (v, elts, f) {\n      var t = v[RDF.type][0].ldterm.substr(SX._namespace.length);\n      var elt = elts[t];\n      if (!elt)\n        return Missed;\n      if (elt.nary) {\n        var ret = {\n          type: t,\n        };\n        ret[elt.prop] = v[SX[elt.prop]].map(e => {\n          return valueOf(e);\n        });\n        return ret;\n      } else {\n        var ret = {\n          type: t\n        };\n        if (elt.prop) {\n          ret[elt.prop] = valueOf(v[SX[elt.prop]][0]);\n        }\n        return ret;\n      }\n\n      function valueOf (x) {\n        return elt.expr && \"nested\" in x ? extend({ id: x.ldterm, }, f(x.nested)) : x.ldterm;\n      }\n    }\n    function shapeExpr (v) {\n      // shapeExpr = ShapeOr | ShapeAnd | ShapeNot | NodeConstraint | Shape | ShapeRef | ShapeExternal;\n      var elts = { \"ShapeAnd\"     : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeOr\"      : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeNot\"     : { nary: false, expr: true , prop: \"shapeExpr\"  },\n                   \"ShapeRef\"     : { nary: false, expr: false, prop: \"reference\"  },\n                   \"ShapeExternal\": { nary: false, expr: false, prop: null         } };\n      var ret = findType(v, elts, shapeExpr);\n      if (ret !== Missed)\n        return ret;\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.Shape) {\n        var ret = { type: \"Shape\" };\n        [\"closed\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.extra in v)\n          ret.extra = v[SX.extra].map(e => { return e.ldterm; });\n        if (SX.expression in v) {\n          ret.expression =\n            \"nested\" in v[SX.expression][0] ?\n            extend({id: v[SX.expression][0].ldterm}, tripleExpr(v[SX.expression][0].nested)) :\n            v[SX.expression][0].ldterm;\n        }\n        if (SX.annotation in v)\n          ret.annotations = v[SX.annotation].map(e => {\n            return {\n              type: \"Annotation\",\n              predicate: e.nested[SX.predicate][0].ldterm,\n              object: e.nested[SX.object][0].ldterm\n            };\n          });\n        if (SX.semActs in v)\n          ret.semActs = v[SX.semActs].map(e => {\n            var ret = {\n              type: \"SemAct\",\n              name: e.nested[SX.name][0].ldterm\n            };\n            if (SX.code in e.nested)\n              ret.code = e.nested[SX.code][0].ldterm.value;\n            return ret;\n          });\n        return ret;\n      } else if (t === SX.NodeConstraint) {\n        var ret = { type: \"NodeConstraint\" };\n        if (SX.values in v)\n          ret.values = v[SX.values].map(v1 => { return objectValue(v1); });\n        if (SX.nodeKind in v)\n          ret.nodeKind = v[SX.nodeKind][0].ldterm.substr(SX._namespace.length);\n        [\"length\", \"minlength\", \"maxlength\", \"mininclusive\", \"maxinclusive\", \"minexclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = parseFloat(v[SX[a]][0].ldterm.value);\n        });\n        if (SX.pattern in v)\n          ret.pattern = v[SX.pattern][0].ldterm.value;\n        if (SX.flags in v)\n          ret.flags = v[SX.flags][0].ldterm.value;\n        if (SX.datatype in v)\n          ret.datatype = v[SX.datatype][0].ldterm;\n        return ret;\n      } else {\n        throw Error(\"unknown shapeExpr type in \" + JSON.stringify(v));\n      }\n\n    }\n\n    function objectValue (v, expectString) {\n      if (\"nested\" in v) {\n        var t = v.nested[RDF.type][0].ldterm;\n        if ([SX.IriStem, SX.LiteralStem, SX.LanguageStem].indexOf(t) !== -1) {\n          var ldterm = v.nested[SX.stem][0].ldterm.value;\n          return {\n            type: t.substr(SX._namespace.length),\n            stem: ldterm\n          };\n        } else if ([SX.Language].indexOf(t) !== -1) {\n          return {\n            type: \"Language\",\n            languageTag: v.nested[SX.languageTag][0].ldterm.value\n          };\n        } else if ([SX.IriStemRange, SX.LiteralStemRange, SX.LanguageStemRange].indexOf(t) !== -1) {\n          var st = v.nested[SX.stem][0];\n          var stem = st;\n          if (typeof st === \"object\") {\n            if (typeof st.ldterm === \"object\") {\n              stem = st.ldterm;\n            } else if (st.ldterm.startsWith(\"_:\")) {\n              stem = { type: \"Wildcard\" };\n            }\n          }\n          var ret = {\n            type: t.substr(SX._namespace.length),\n            stem: stem.type !== \"Wildcard\" ? stem.value : stem\n          };\n          if (SX.exclusion in v.nested) {\n            // IriStemRange:\n            // * [{\"ldterm\":\"http://a.example/v1\"},{\"ldterm\":\"http://a.example/v3\"}] <-- no value\n            // * [{\"ldterm\":\"_:b836\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v1\"}}]}},\n            //    {\"ldterm\":\"_:b838\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v3\"}}]}}]\n\n            // LiteralStemRange:\n            // * [{\"ldterm\":{\"value\":\"v1\"}},{\"ldterm\":{\"value\":\"v3\"}}]\n            // * [{\"ldterm\":\"_:b866\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v1\"}}]}},\n            //    {\"ldterm\":\"_:b868\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v3\"}}]}}]\n\n            // LanguageStemRange:\n            // * [{\"ldterm\":{\"value\":\"fr-be\"}},{\"ldterm\":{\"value\":\"fr-ch\"}}]\n            // * [{\"ldterm\":\"_:b851\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-be\"}}]}},\n            //    {\"ldterm\":\"_:b853\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-ch\"}}]}}]\n            ret.exclusions = v.nested[SX.exclusion].map(v1 => {\n              return objectValue(v1, t !== SX.IriStemRange);\n            });\n          }\n          return ret;\n        } else {\n          throw Error(\"unknown objectValue type in \" + JSON.stringify(v));\n        }\n      } else {\n        return expectString ? v.ldterm.value : v.ldterm;\n      }\n    }\n\n    function tripleExpr (v) {\n      // tripleExpr = EachOf | OneOf | TripleConstraint | Inclusion ;\n      var elts = { \"EachOf\"   : { nary: true , expr: true , prop: \"expressions\" },\n                   \"OneOf\"    : { nary: true , expr: true , prop: \"expressions\" },\n                   \"Inclusion\": { nary: false, expr: false, prop: \"include\"     } };\n      var ret = findType(v, elts, tripleExpr);\n      if (ret !== Missed) {\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      }\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.TripleConstraint) {\n        var ret = {\n          type: \"TripleConstraint\",\n          predicate: v[SX.predicate][0].ldterm\n        };\n        [\"inverse\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.valueExpr in v)\n          ret.valueExpr = extend({id: v[SX.valueExpr][0].ldterm}, \"nested\" in v[SX.valueExpr][0] ? shapeExpr(v[SX.valueExpr][0].nested) : {});\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      } else {\n        throw Error(\"unknown tripleExpr type in \" + JSON.stringify(v));\n      }\n    }\n    function minMaxAnnotSemActs (v, ret) {\n      if (SX.min in v)\n        ret.min = parseInt(v[SX.min][0].ldterm.value);\n      if (SX.max in v) {\n        ret.max = parseInt(v[SX.max][0].ldterm.value);\n        if (isNaN(ret.max))\n          ret.max = UNBOUNDED;\n      }\n      if (SX.annotation in v)\n        ret.annotations = v[SX.annotation].map(e => {\n          return {\n            type: \"Annotation\",\n            predicate: e.nested[SX.predicate][0].ldterm,\n            object: e.nested[SX.object][0].ldterm\n          };\n        });\n      if (SX.semActs in v)\n        ret.semActs = v[SX.semActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      return ret;\n    }\n  },\n\n  valToSimple: function (val) {\n    var _ShExUtil = this;\n    function _join (list) {\n      return list.reduce((ret, elt) => {\n        Object.keys(elt).forEach(k => {\n          if (k in ret) {\n            ret[k] = Array.from(new Set(ret[k].concat(elt[k])));\n          } else {\n            ret[k] = elt[k];\n          }\n        });\n        return ret;\n      }, {});\n    }\n    if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        return val.solutions.reduce((ret, sln) => {\n          if (!(\"referenced\" in sln))\n            return {};\n          var toAdd = {};\n          if (chaseList(sln.referenced, toAdd)) {\n            return _join(ret, toAdd);\n          } else {\n            return _join(ret, _ShExUtil.valToSimple(sln.referenced));\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = { ldterm: member.object };\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.valToSimple(member.referenced);\n                if (t)\n                  newElt.nested = t;\n              }\n              toAdd = _join(toAdd, newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced.type === \"ShapeOrResults\" // heuristic for `nil  OR @<list>` idiom\n                          ? rest.referenced.solution\n                          : rest.referenced);\n            }\n          }\n        }, []);\n      } else {\n        return [];\n      }\n    } else if ([\"TripleConstraintSolutions\"].indexOf(val.type) !== -1) {\n      return {  };\n    } else if (val.type === \"NodeConstraintTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return thisNode;\n    } else if (val.type === \"ShapeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return \"solution\" in val ? _join([thisNode].concat(_ShExUtil.valToSimple(val.solution))) : thisNode;\n    } else if (val.type === \"Recursion\") {\n      return {  };\n    } else if (\"solutions\" in val) {\n      // [\"SolutionList\", \"EachOfSolutions\", \"OneOfSolutions\", \"ShapeAndResults\", \"ShapeOrResults\"].indexOf(val.type) !== -1\n      return _join(val.solutions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else if (\"expressions\" in val) {\n      return _join(val.expressions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  simpleToShapeMap: function (x) {\n    return Object.keys(x).reduce((ret, k) => {\n      x[k].forEach(s => {\n        ret.push({node: k, shape: s });\n      });\n      return ret;\n    }, []);\n  },\n\n  absolutizeShapeMap: function (parsed, base) {\n    return parsed.map(elt => {\n      return Object.assign(elt, {\n        node: ShExTerm.resolveRelativeIRI(base, elt.node),\n        shape: ShExTerm.resolveRelativeIRI(base, elt.shape)\n      });\n    });\n  },\n\n  errsToSimple: function (val, node, shape) {\n    var _ShExUtil = this;\n    if (val.type === \"FailureList\") {\n      return val.errors.reduce((ret, e) => {\n        return ret.concat(_ShExUtil.errsToSimple(e));\n      }, []);\n    } else if (val.type === \"Failure\") {\n      return [\"validating \" + val.node + \" as \" + val.shape + \":\"].concat(errorList(val.errors).reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length > 0 ? ret.concat([\"  OR\"]).concat(nested) : nested.map(s => \"  \" + s);\n      }, []));\n    } else if (val.type === \"TypeMismatch\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"validating \" + n3ify(val.triple.object) + \":\"].concat(nested);\n    } else if (val.type === \"ShapeAndFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeOrFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat(\" OR \" + (typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)));\n          }, []) :\n          \" OR \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeNotFailure\") {\n      return [\"Node \" + val.errors.node + \" expected to NOT pass \" + val.errors.shape];\n    } else if (val.type === \"ExcessTripleViolation\") {\n      return [\"validating \" + n3ify(val.triple.object) + \": exceeds cardinality\"];\n    } else if (val.type === \"ClosedShapeViolation\") {\n      return [\"ClosedShapeError: unexpected: {\"].concat(\n        val.unexpectedTriples.map(t => {\n          return \"  \" + t.subject + \" \" + t.predicate + \" \" + n3ify(t.object) + \" .\"\n        })\n      ).concat([\"}\"]);\n    } else if (val.type === \"NodeConstraintViolation\") {\n      var w = require(\"@shexjs/writer\")();\n      w._write(w._writeNodeConstraint(val.shapeExpr).join(\"\"));\n      var txt;\n      w.end((err, res) => {\n        txt = res;\n      });\n      return [\"NodeConstraintError: expected to match \" + txt];\n    } else if (val.type === \"MissingProperty\") {\n      return [\"Missing property: \" + val.property];\n    } else if (val.type === \"NegatedProperty\") {\n      return [\"Unexpected property: \" + val.property];\n    } else if (val.constructor === Array) {debugger;\n      return val.reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length ? ret.concat([\"AND\"]).concat(nested) : nested;\n      }, []);\n    } else if (val.type === \"SemActFailure\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"rejected by semantic action:\"].concat(nested);\n    } else if (val.type === \"SemActViolation\") {\n      return [val.message];\n    } else if (val.type === \"BooleanSemActFailure\") {\n      return [\"Failed evaluating \" + val.code + \" on context \" + JSON.stringify(val.ctx)];\n    } else {\n      debugger; // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    function errorList (errors) {\n      return errors.reduce(function (acc, e) {\n        var attrs = Object.keys(e);\n        return acc.concat(\n          (attrs.length === 1 && attrs[0] === \"errors\")\n            ? errorList(e.errors)\n            : e);\n      }, []);\n    }\n  },\n\n  resolveRelativeIRI: ShExTerm.resolveRelativeIRI,\n\n  resolvePrefixedIRI: function (prefixedIri, prefixes) {\n    var colon = prefixedIri.indexOf(\":\");\n    if (colon === -1)\n      return null;\n    var prefix = prefixes[prefixedIri.substr(0, colon)];\n    return prefix === undefined ? null : prefix + prefixedIri.substr(colon+1);\n  },\n\n  parsePassedNode: function (passedValue, meta, deflt, known, reportUnknown) {\n    if (passedValue === undefined || passedValue.length === 0)\n      return known && known(meta.base) ? meta.base : deflt ? deflt() : this.NotSupplied;\n    if (passedValue[0] === \"_\" && passedValue[1] === \":\")\n      return passedValue;\n    if (passedValue[0] === \"\\\"\") {\n      var m = passedValue.match(/^\"((?:[^\"\\\\]|\\\\\")*)\"(?:@(.+)|\\^\\^(?:<(.*)>|([^:]*):(.*)))?$/);\n      if (!m)\n        throw Error(\"malformed literal: \" + passedValue);\n      var lex = m[1], lang = m[2], rel = m[3], pre = m[4], local = m[5];\n      // Turn the literal into an N3.js atom.\n      var quoted = \"\\\"\"+lex+\"\\\"\";\n      if (lang !== undefined)\n        return quoted + \"@\" + lang;\n      if (pre !== undefined) {\n        if (!(pre in meta.prefixes))\n          throw Error(\"error parsing node \"+passedValue+\" no prefix for \\\"\" + pre + \"\\\"\");\n        return quoted + \"^^\" + meta.prefixes[pre] + local;\n      }\n      if (rel !== undefined)\n        return quoted + \"^^\" + ShExTerm.resolveRelativeIRI(meta.base, rel);\n      return quoted;\n    }\n    if (!meta)\n      return known(passedValue) ? passedValue : this.UnknownIRI;\n    var relIRI = passedValue[0] === \"<\" && passedValue[passedValue.length-1] === \">\";\n    if (relIRI)\n      passedValue = passedValue.substr(1, passedValue.length-2);\n    var t = ShExTerm.resolveRelativeIRI(meta.base || \"\", passedValue); // fall back to base-less mode\n    if (known(t))\n      return t;\n    if (!relIRI) {\n      var t2 = this.resolvePrefixedIRI(passedValue, meta.prefixes);\n      if (t2 !== null && known(t2))\n        return t2;\n    }\n    return reportUnknown ? reportUnknown(t) : this.UnknownIRI;\n  },\n\n  executeQueryPromise: function (query, endpoint) {\n    var rows;\n\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    return fetch(queryURL, {\n      headers: {\n        'Accept': 'application/sparql-results+json'\n      }}).then(resp => resp.json()).then(t => {\n        var selects = t.head.vars;\n        return t.results.bindings.map(row => {\n          return selects.map(sel => {\n            var elt = row[sel];\n            switch (elt.type) {\n            case \"uri\": return elt.value;\n            case \"bnode\": return \"_:\" + elt.value;\n            case \"literal\":\n              var datatype = elt.datatype;\n              var lang = elt[\"xml:lang\"];\n              return \"\\\"\" + elt.value + \"\\\"\" + (\n                datatype ? \"^^\" + datatype :\n                  lang ? \"@\" + lang :\n                  \"\");\n            default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n            }\n            return row[sel];\n          })\n        });\n      })// .then(x => new Promise(resolve => setTimeout(() => resolve(x), 1000)));\n  },\n\n  executeQuery: function (query, endpoint) {\n    var rows, t, j;\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    if (require('sync-request')) {\n      var request = require('sync-request');\n      var res = request('GET', queryURL, {\n        headers: {\n          'Accept': 'application/sparql-results+json'\n        },\n      });\n      t = res.getBody().toString('utf-8');\n    } else {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", queryURL, false);\n    xhr.setRequestHeader('Accept', 'application/sparql-results+json');\n    xhr.send();\n    // var selectsBlock = query.match(/SELECT\\s*(.*?)\\s*{/)[1];\n    // var selects = selectsBlock.match(/\\?[^\\s?]+/g);\n    t = xhr.responseText;\n    }\n    var j = JSON.parse(t);\n    var selects = j.head.vars;\n    return j.results.bindings.map(row => {\n      return selects.map(sel => {\n        var elt = row[sel];\n        switch (elt.type) {\n        case \"uri\": return elt.value;\n        case \"bnode\": return \"_:\" + elt.value;\n        case \"literal\":\n          var datatype = elt.datatype;\n          var lang = elt[\"xml:lang\"];\n          return \"\\\"\" + elt.value + \"\\\"\" + (\n            lang ? \"@\" + lang :\n              datatype ? \"^^\" + datatype :\n              \"\");\n        default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n        }\n        return row[sel];\n      })\n    });\n\n/* TO ADD? XML results format parsed with jquery:\n        $(data).find(\"sparql > results > result\").\n          each((_, row) => {\n            rows.push($(row).find(\"binding > *:nth-child(1)\").\n              map((idx, elt) => {\n                elt = $(elt);\n                var text = elt.text();\n                switch (elt.prop(\"tagName\")) {\n                case \"uri\": return text;\n                case \"bnode\": return \"_:\" + text;\n                case \"literal\":\n                  var datatype = elt.attr(\"datatype\");\n                  var lang = elt.attr(\"xml:lang\");\n                  return \"\\\"\" + text + \"\\\"\" + (\n                    datatype ? \"^^\" + datatype :\n                    lang ? \"@\" + lang :\n                      \"\");\n                default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n                }\n              }).get());\n          });\n*/\n  },\n\n  makeN3DB: function (db, queryTracker) {\n\n    function getSubjects () { return db.getSubjects().map(ShExTerm.internalTerm); }\n    function getPredicates () { return db.getPredicates().map(ShExTerm.internalTerm); }\n    function getObjects () { return db.getObjects().map(ShExTerm.internalTerm); }\n    function getQuads () { return db.getQuads.apply(db, arguments).map(ShExTerm.internalTriple); }\n\n    function getNeighborhood (point, shapeLabel/*, shape */) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = db.getQuads(point, null, null, null).map(ShExTerm.internalTriple);\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = db.getQuads(null, null, point, null).map(ShExTerm.internalTriple);\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      // size: db.size,\n      getNeighborhood: getNeighborhood,\n      getSubjects: getSubjects,\n      getPredicates: getPredicates,\n      getObjects: getObjects,\n      getQuads: getQuads,\n      get size() { return db.size; },\n      // getQuads: function (s, p, o, graph, shapeLabel) {\n      //   // console.log(Error(s + p + o).stack)\n      //   if (queryTracker)\n      //     queryTracker.start(!!s, s ? s : o, shapeLabel);\n      //   var quads = db.getQuads(s, p, o, graph)\n      //   if (queryTracker)\n      //     queryTracker.end(quads, new Date() - startTime);\n      //   return quads;\n      // }\n    }\n  },\n  /** emulate N3Store().getQuads() with additional parm.\n   */\n  makeQueryDB: function (endpoint, queryTracker) {\n    var _ShExUtil = this;\n    // Need to inspect the schema to calculate the relevant neighborhood.\n    var schemaIndex = null\n\n    function getQuads(s, p, o, g) {\n      return mapQueryToTriples(\"SELECT \" + [\n        (s?\"\":\"?s\"), (p?\"\":\"?p\"), (o?\"\":\"?o\"),\n        \"{\",\n        (s?s:\"?s\"), (p?p:\"?s\"), (o?o:\"?s\"),\n        \"}\"].join(\" \"), s, o)\n    }\n\n    function mapQueryToTriples (query, s, o) {\n      var rows = _ShExUtil.executeQuery(query, endpoint);\n      var triples = rows.map(row =>  {\n        return s ? {\n          subject: s,\n          predicate: row[0],\n          object: row[1]\n        } : {\n          subject: row[0],\n          predicate: row[1],\n          object: o\n        };\n      });\n      return triples;\n    }\n\n    function getTripleConstraints (tripleExpr) {\n      var visitor = _ShExUtil.Visitor();\n      var ret = {\n        out: [],\n        inc: []\n      };\n      visitor.visitTripleConstraint = function (expr) {\n        ret[expr.inverse ? \"inc\" : \"out\"].push(expr);\n        return expr;\n      };\n\n      visitor.visitInclusion = function (inclusion) {\n        return visitor.visitExpression(schemaIndex.tripleExprs[inclusion]);\n      }\n\n      if (tripleExpr)\n        visitor.visitExpression(tripleExpr);\n      return ret;\n    }\n\n    function getNeighborhood (point, shapeLabel, shape) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      var tcs = getTripleConstraints(shape.expression);\n      var pz = tcs.out.map(t => t.predicate);\n      pz = pz.filter((p, idx) => pz.lastIndexOf(p) === idx);\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = (tcs.out.length > 0 || shape.closed)\n          ? mapQueryToTriples(\n            shape.closed\n              ? `SELECT ?p ?o { <${point}> ?p ?o }`\n              : \"SELECT ?p ?o {\\n\" +\n              pz.map(\n                p => `  {<${point}> <${p}> ?o BIND(<${p}> AS ?p)}`\n              ).join(\" UNION\\n\") +\n              \"\\n}\",\n            point, null\n          )\n          : [];\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = tcs.inc.length > 0\n          ? mapQueryToTriples(`SELECT ?s ?p { ?s ?p <${point}> }`, null, point)\n          : []\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return  {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      getNeighborhood: getNeighborhood,\n      getQuads: getQuads,\n      getSubjects: function () { return [\"!Query DB can't index subjects\"] },\n      getPredicates: function () { return [\"!Query DB can't index predicates\"] },\n      getObjects: function () { return [\"!Query DB can't index objects\"] },\n      get size() { return undefined; },\n      setSchema: function (schema) { schemaIndex = schema._index || _ShExUtil.index(schema) },\n    };\n  },\n\n  NotSupplied: \"-- not supplied --\", UnknownIRI: \"-- not found --\",\n\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  unescapeText: function (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  },\n\n};\n\nfunction n3ify (ldterm) {\n  if (typeof ldterm !== \"object\")\n    return ldterm;\n  var ret = \"\\\"\" + ldterm.value + \"\\\"\";\n  if (\"language\" in ldterm)\n    return ret + \"@\" + ldterm.language;\n  if (\"type\" in ldterm)\n    return ret + \"^^\" + ldterm.type;\n  return ret;\n}\n\n// Add the ShExUtil functions to the given object or its prototype\nfunction AddShExUtil(parent, toPrototype) {\n  for (var name in ShExUtil)\n    if (!toPrototype)\n      parent[name] = ShExUtil[name];\n    else\n      parent.prototype[name] = ApplyToThis(ShExUtil[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\nreturn AddShExUtil(AddShExUtil);\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExUtilCjsModule; // node environment\n"
        },
        {
          "id": 5,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/utils.js",
          "name": "../shex-util/node_modules/qs/lib/utils.js",
          "index": 18,
          "index2": 12,
          "size": 6636,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "issuerId": 29,
          "issuerName": "../shex-util/node_modules/qs/lib/stringify.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            },
            {
              "id": 29,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
              "name": "../shex-util/node_modules/qs/lib/stringify.js",
              "profile": {
                "factory": 7,
                "building": 7,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/formats.js",
              "module": "../shex-util/node_modules/qs/lib/formats.js",
              "moduleName": "../shex-util/node_modules/qs/lib/formats.js",
              "type": "cjs require",
              "userRequest": "./utils",
              "loc": "6:11-29"
            },
            {
              "moduleId": 29,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
              "module": "../shex-util/node_modules/qs/lib/stringify.js",
              "moduleName": "../shex-util/node_modules/qs/lib/stringify.js",
              "type": "cjs require",
              "userRequest": "./utils",
              "loc": "3:12-30"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/parse.js",
              "module": "../shex-util/node_modules/qs/lib/parse.js",
              "moduleName": "../shex-util/node_modules/qs/lib/parse.js",
              "type": "cjs require",
              "userRequest": "./utils",
              "loc": "3:12-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n"
        },
        {
          "id": 6,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "index": 30,
          "index2": 30,
          "size": 25347,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "45:16-36"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "16:16-36"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "6:16-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"
        },
        {
          "id": 7,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "index": 39,
          "index2": 37,
          "size": 19383,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "59:11-26"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "util/",
              "loc": "73:11-27"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "9:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"
        },
        {
          "id": 8,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "index": 42,
          "index2": 39,
          "size": 611,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "51:17-44"
            },
            {
              "moduleId": 19,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "17:17-44"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "12:17-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"
        },
        {
          "id": 9,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapSymbols.js",
          "name": "../shape-map/lib/ShapeMapSymbols.js",
          "index": 2,
          "index2": 0,
          "size": 451,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 23,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 23,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 163,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapSymbols",
              "loc": "7:18-50"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapSymbols",
              "loc": "417:17-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * Status: Early implementation\n *\n * TODO:\n *   testing.\n */\n\nvar ShapeMapSymbols = (function () {\n  return {\n    focus: { term: \"FOCUS\" },\n    start: { term: \"START\" },\n    wildcard: { term: \"WILDCARD\" },\n  }\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapSymbols;\n"
        },
        {
          "id": 10,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/module.js",
          "name": "(webpack)/buildin/module.js",
          "index": 6,
          "index2": 2,
          "size": 497,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 35,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 35,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 10,
                "building": 166,
                "dependencies": 3
              }
            }
          ],
          "profile": {
            "factory": 36,
            "building": 59,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 25,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
        },
        {
          "id": 11,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-visitor/shex-visitor.js",
          "name": "../shex-visitor/shex-visitor.js",
          "index": 11,
          "index2": 9,
          "size": 13166,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "issuerId": 32,
          "issuerName": "../shex-validator/shex-validator.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 32,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "name": "../shex-validator/shex-validator.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 366,
            "building": 21,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "@shexjs/visitor",
              "loc": "5:16-42"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "@shexjs/visitor",
              "loc": "27:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\nfunction ShExVisitor () {\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\n  // function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n  var _ShExUtil = this;\n  function visitMap (map, val) {\n    var ret = {};\n    Object.keys(map).forEach(function (item) {\n      ret[item] = val(map[item]);\n    });\n    return ret;\n  }\n  var r = {\n    runtimeError: function (e) {\n      throw e;\n    },\n\n    visitSchema: function (schema) {\n      var ret = { type: \"Schema\" };\n      _expect(schema, \"type\", \"Schema\");\n      this._maybeSet(schema, ret, \"Schema\",\n                     [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                     [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\"]\n                    );\n      return ret;\n    },\n\n    visitPrefixes: function (prefixes) {\n      return prefixes === undefined ?\n        undefined :\n        visitMap(prefixes, function (val) {\n          return val;\n        });\n    },\n\n    visitIRI: function (i) {\n      return i;\n    },\n\n    visitImports: function (imports) {\n      var _Visitor = this;\n      return imports.map(function (imp) {\n        return _Visitor.visitIRI(imp);\n      });\n    },\n\n    visitStartActs: function (startActs) {\n      var _Visitor = this;\n      return startActs === undefined ?\n        undefined :\n        startActs.map(function (act) {\n          return _Visitor.visitSemAct(act);\n        });\n    },\n    visitSemActs: function (semActs) {\n      var _Visitor = this;\n      if (semActs === undefined)\n        return undefined;\n      var ret = []\n      Object.keys(semActs).forEach(function (label) {\n        ret.push(_Visitor.visitSemAct(semActs[label], label));\n      });\n      return ret;\n    },\n    visitSemAct: function (semAct, label) {\n      var ret = { type: \"SemAct\" };\n      _expect(semAct, \"type\", \"SemAct\");\n\n      this._maybeSet(semAct, ret, \"SemAct\",\n                     [\"name\", \"code\"]);\n      return ret;\n    },\n\n    visitShapes: function (shapes) {\n      var _Visitor = this;\n      if (shapes === undefined)\n        return undefined;\n      return shapes.map(\n        shapeExpr =>\n          _Visitor.visitShapeExpr(shapeExpr)\n      );\n    },\n\n    visitProductions999: function (productions) { // !! DELETE\n      var _Visitor = this;\n      if (productions === undefined)\n        return undefined;\n      var ret = {}\n      Object.keys(productions).forEach(function (label) {\n        ret[label] = _Visitor.visitExpression(productions[label], label);\n      });\n      return ret;\n    },\n\n    visitShapeExpr: function (expr, label) {\n      if (isShapeRef(expr))\n        return this.visitShapeRef(expr)\n      var r =\n          expr.type === \"Shape\" ? this.visitShape(expr, label) :\n          expr.type === \"NodeConstraint\" ? this.visitNodeConstraint(expr, label) :\n          expr.type === \"ShapeAnd\" ? this.visitShapeAnd(expr, label) :\n          expr.type === \"ShapeOr\" ? this.visitShapeOr(expr, label) :\n          expr.type === \"ShapeNot\" ? this.visitShapeNot(expr, label) :\n          expr.type === \"ShapeExternal\" ? this.visitShapeExternal(expr) :\n          null;// if (expr.type === \"ShapeRef\") r = 0; // console.warn(\"visitShapeExpr:\", r);\n      if (r === null)\n        throw Error(\"unexpected shapeExpr type: \" + expr.type);\n      else\n        return r;\n    },\n\n    // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n    _visitShapeGroup: function (expr, label) {\n      this._testUnknownAttributes(expr, [\"id\", \"shapeExprs\"], expr.type, this.visitShapeNot)\n      var _Visitor = this;\n      var r = { type: expr.type };\n      if (\"id\" in expr)\n        r.id = expr.id;\n      r.shapeExprs = expr.shapeExprs.map(function (nested) {\n        return _Visitor.visitShapeExpr(nested, label);\n      });\n      return r;\n    },\n\n    // _visitShapeNot: visit negated shape\n    visitShapeNot: function (expr, label) {\n      this._testUnknownAttributes(expr, [\"id\", \"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n      var r = { type: expr.type };\n      if (\"id\" in expr)\n        r.id = expr.id;\n      r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, label);\n      return r;\n    },\n\n    // ### `visitNodeConstraint` deep-copies the structure of a shape\n    visitShape: function (shape, label) {\n      var ret = { type: \"Shape\" };\n      _expect(shape, \"type\", \"Shape\");\n\n      this._maybeSet(shape, ret, \"Shape\",\n                     [ \"id\",\n                       // \"virtual\", \"inherit\", -- futureWork\n                       \"closed\",\n                       \"expression\", \"extra\", \"semActs\", \"annotations\"]);\n      return ret;\n    },\n\n    // ### `visitNodeConstraint` deep-copies the structure of a shape\n    visitNodeConstraint: function (shape, label) {\n      var ret = { type: \"NodeConstraint\" };\n      _expect(shape, \"type\", \"NodeConstraint\");\n\n      this._maybeSet(shape, ret, \"NodeConstraint\",\n                     [ \"id\",\n                       // \"virtual\", \"inherit\", -- futureWork\n                       \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                       \"reference\", \"minlength\", \"maxlength\",\n                       \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                       \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"]);\n      return ret;\n    },\n\n    visitShapeRef: function (reference) {\n      if (typeof reference !== \"string\") {\n        let ex = Exception(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n        console.warn(ex);\n        throw ex;\n      }\n      return reference;\n    },\n\n    visitShapeExternal: function (expr) {\n      this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n      return Object.assign(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n    },\n\n    // _visitGroup: visit a grouping expression (someOf or eachOf)\n    _visitGroup: function (expr, type) {\n      var _Visitor = this;\n      var r = Object.assign(\n        // pre-declare an id so it sorts to the top\n        \"id\" in expr ? { id: null } : { },\n        { type: expr.type }\n      );\n      r.expressions = expr.expressions.map(function (nested) {\n        return _Visitor.visitExpression(nested);\n      });\n      return this._maybeSet(expr, r, \"expr\",\n                            [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"]);\n    },\n\n    visitTripleConstraint: function (expr) {\n      return this._maybeSet(expr,\n                            Object.assign(\n                              // pre-declare an id so it sorts to the top\n                              \"id\" in expr ? { id: null } : { },\n                              { type: \"TripleConstraint\" }\n                            ),\n                            \"TripleConstraint\",\n                            [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                             \"min\", \"max\", \"annotations\", \"semActs\"])\n    },\n\n    visitExpression: function (expr) {\n      if (typeof expr === \"string\")\n        return this.visitInclusion(expr);\n      var r = expr.type === \"TripleConstraint\" ? this.visitTripleConstraint(expr) :\n          expr.type === \"OneOf\" ? this.visitOneOf(expr) :\n          expr.type === \"EachOf\" ? this.visitEachOf(expr) :\n          null;\n      if (r === null)\n        throw Error(\"unexpected expression type: \" + expr.type);\n      else\n        return r;\n    },\n\n    visitValues: function (values) {\n      var _Visitor = this;\n      return values.map(function (t) {\n        return isTerm(t) || t.type === \"Language\" ?\n          t :\n          _Visitor.visitStemRange(t);\n      });\n    },\n\n    visitStemRange: function (t) {\n      var _Visitor = this; // console.log(Error(t.type).stack);\n      // _expect(t, \"type\", \"IriStemRange\");\n      if (!(\"type\" in t))\n        _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n      var stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n      if (stemRangeTypes.indexOf(t.type) === -1)\n        _Visitor.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n      var stem;\n      if (isTerm(t)) {\n        _expect(t.stem, \"type\", \"Wildcard\");\n        stem = { type: t.type, stem: { type: \"Wildcard\" } };\n      } else {\n        stem = { type: t.type, stem: t.stem };\n      }\n      if (t.exclusions) {\n        stem.exclusions = t.exclusions.map(function (c) {\n          return _Visitor.visitExclusion(c);\n        });\n      }\n      return stem;\n    },\n\n    visitExclusion: function (c) {\n      if (!isTerm(c)) {\n        // _expect(c, \"type\", \"IriStem\");\n        if (!(\"type\" in c))\n          _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n        var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n        if (stemTypes.indexOf(c.type) === -1)\n          _Visitor.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n        return { type: c.type, stem: c.stem };\n      } else {\n        return c;\n      }\n    },\n\n    visitInclusion: function (inclusion) {\n      if (typeof inclusion !== \"string\") {\n        let ex = Exception(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n        console.warn(ex);\n        throw ex;\n      }\n      return inclusion;\n    },\n\n    _maybeSet: function (obj, ret, context, members, ignore) {\n      var _Visitor = this;\n      this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n      members.forEach(function (member) {\n        var methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n        if (member in obj) {\n          var f = _Visitor[methodName];\n          if (typeof f !== \"function\") {\n            throw Error(methodName + \" not found in Visitor\");\n          }\n          var t = f.call(_Visitor, obj[member]);\n          if (t !== undefined) {\n            ret[member] = t;\n          }\n        }\n      });\n      return ret;\n    },\n    _visitValue: function (v) {\n      return v;\n    },\n    _visitList: function (l) {\n      return l.slice();\n    },\n    _testUnknownAttributes: function (obj, expected, context, captureFrame) {\n      var unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n        return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n      }, []);\n      if (unknownMembers.length > 0) {\n        var e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                      unknownMembers.map(function (p) {\n                        return \"\\\"\" + p + \"\\\"\";\n                      }).join(\",\") +\n                      \" in \" + context + \": \" + JSON.stringify(obj));\n        Error.captureStackTrace(e, captureFrame);\n        throw e;\n      }\n    }\n\n  };\n  r.visitBase = r.visitStart = r.visitVirtual = r.visitClosed = r[\"visit@context\"] = r._visitValue;\n  r.visitInherit = r.visitExtra = r.visitAnnotations = r._visitList;\n  r.visitInverse = r.visitPredicate = r._visitValue;\n  r.visitName = r.visitId = r.visitCode = r.visitMin = r.visitMax = r._visitValue;\n\n  r.visitType = r.visitNodeKind = r.visitDatatype = r.visitPattern = r.visitFlags = r.visitLength = r.visitMinlength = r.visitMaxlength = r.visitMininclusive = r.visitMinexclusive = r.visitMaxinclusive = r.visitMaxexclusive = r.visitTotaldigits = r.visitFractiondigits = r._visitValue;\n  r.visitOneOf = r.visitEachOf = r._visitGroup;\n  r.visitShapeAnd = r.visitShapeOr = r._visitShapeGroup;\n  r.visitInclude = r._visitValue;\n  r.visitValueExpr = r.visitShapeExpr;\n  return r;\n\n  // Expect property p with value v in object o\n  function _expect (o, p, v) {\n    if (!(p in o))\n      this._error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p);\n    if (arguments.length > 2 && o[p] !== v)\n      this._error(\"expected \"+o[o]+\" to equal .\"+v);\n  }\n\n  function _error (str) {\n    throw new Error(str);\n  }\n}\n\n// The ShEx Vistor is here to minimize deps for ShExValidator.\n/** create indexes for schema\n */\nShExVisitor.index = function (schema) {\n  let index = {\n    shapeExprs: {},\n    tripleExprs: {}\n  };\n  let v = ShExVisitor();\n\n  let oldVisitExpression = v.visitExpression;\n  v.visitExpression = function (expression) {\n    if (typeof expression === \"object\" && \"id\" in expression)\n      index.tripleExprs[expression.id] = expression;\n    return oldVisitExpression.call(v, expression);\n  };\n\n  let oldVisitShapeExpr = v.visitShapeExpr;\n  v.visitShapeExpr = v.visitValueExpr = function (shapeExpr, label) {\n    if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n      index.shapeExprs[shapeExpr.id] = shapeExpr;\n    return oldVisitShapeExpr.call(v, shapeExpr, label);\n  };\n\n  v.visitSchema(schema);\n  return index;\n}\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExVisitor;\n\n"
        },
        {
          "id": 12,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-writer/shex-writer.js",
          "name": "../shex-writer/shex-writer.js",
          "index": 13,
          "index2": 11,
          "size": 22306,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "@shexjs/writer",
              "loc": "1586:14-39"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/writer",
              "loc": "7:20-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExWriter** writes ShEx documents.\n\nconst ShExWriterCjsModule = (function () {\nvar UNBOUNDED = -1;\n\n// Matches a literal as represented in memory by the ShEx library\nvar ShExLiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar ESCAPE_1 = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    ESCAPE_g = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    ESCAPE_replacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '/': '\\\\/', '\\t': '\\\\t',\n                            '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\nvar nodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\nvar nonLitNodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\n\n// ## Constructor\nfunction ShExWriter (outputStream, options) {\n  if (!(this instanceof ShExWriter))\n    return new ShExWriter(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._prefixIRIs = Object.create(null);\n  options.prefixes && this.addPrefixes(options.prefixes);\n\n  this._error = options.error || _throwError;\n  this.forceParens = !options.simplifyParentheses; // default to false\n  this._expect = options.lax ? noop : expect;\n}\n\nShExWriter.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n  // ### `_writeSchema` writes the shape to the output stream\n  _writeSchema: function (schema, done) {\n    var _ShExWriter = this;\n    this._expect(schema, \"type\", \"Schema\");\n    _ShExWriter.addPrefixes(schema.prefixes);\n    if (schema.base)\n      _ShExWriter._write(\"BASE \" + this._encodeIriOrBlankNode(schema.base) + \"\\n\");\n\n    if (schema.imports)\n      schema.imports.forEach(function (imp) {\n        _ShExWriter._write(\"IMPORT \" + _ShExWriter._encodeIriOrBlankNode(imp) + \"\\n\");\n      });\n    if (schema.startActs)\n      schema.startActs.forEach(function (act) {\n        _ShExWriter._expect(act, \"type\", \"SemAct\");\n        _ShExWriter._write(\" %\"+\n                           _ShExWriter._encodePredicate(act.name)+\n                           (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n      });\n    if (schema.start)\n      _ShExWriter._write(\"start = \" + _ShExWriter._writeShapeExpr(schema.start, done, true, 0).join('') + \"\\n\")\n    if (\"shapes\" in schema)\n      schema.shapes.forEach(function (shapeExpr) {\n        _ShExWriter._write(\n          _ShExWriter._encodeShapeName(shapeExpr.id, false) +\n            \" \" +\n            _ShExWriter._writeShapeExpr(shapeExpr, done, true, 0).join(\"\")+\"\\n\",\n          done\n        );\n      })\n  },\n\n  _writeShapeExpr: function (shapeExpr, done, forceBraces, parentPrec) {\n    var _ShExWriter = this;\n    var pieces = [];\n    if (typeof shapeExpr === \"string\") // ShapeRef\n      pieces.push(\"@\", _ShExWriter._encodeShapeName(shapeExpr));\n    // !!! []s for precedence!\n    else if (shapeExpr.type === \"ShapeExternal\")\n      pieces.push(\"EXTERNAL\");\n    else if (shapeExpr.type === \"ShapeAnd\") {\n      if (parentPrec >= 3)\n        pieces.push(\"(\");\n      var lastAndElided = false;\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0) { // && !!! grammar rules too weird here\n          /*\n            shapeAtom:\n                  nonLitNodeConstraint shapeOrRef?\n                | shapeDecl nonLitNodeConstraint?\n\n            nonLitInlineNodeConstraint:\n                  nonLiteralKind stringFacet*\n          */\n          function nonLitNodeConstraint (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type !== \"NodeConstraint\"\n              || (\"nodeKind\" in c && c.nodeKind === \"literal\")\n              || \"datatype\" in c\n              || \"values\" in c\n              ? false\n              : true;\n          }\n\n          function shapeOrRef (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\" || c.type === \"ShapeRef\";\n          }\n\n          function shapeDecl (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\";\n          }\n\n          let elideAnd = !lastAndElided\n              && (nonLitNodeConstraint(ord-1) && shapeOrRef(ord)\n                  || shapeDecl(ord-1) && nonLitNodeConstraint(ord))\n          if (!elideAnd) {\n            pieces.push(\" AND \");\n          }\n          lastAndElided = elideAnd;\n        }\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, false, 3));\n      });\n      if (parentPrec >= 3)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      if (parentPrec >= 2)\n        pieces.push(\"(\");\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0)\n          pieces.push(\" OR \");\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, forceBraces, 2));\n      });\n      if (parentPrec >= 2)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      if (parentPrec >= 4)\n        pieces.push(\"(\");\n      pieces.push(\"NOT \");\n      pieces = pieces.concat(_ShExWriter._writeShapeExpr(shapeExpr.shapeExpr, done, forceBraces, 4));\n      if (parentPrec >= 4)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"Shape\") {\n      pieces = pieces.concat(_ShExWriter._writeShape(shapeExpr, done, forceBraces));\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      pieces = pieces.concat(_ShExWriter._writeNodeConstraint(shapeExpr, done, forceBraces));\n    } else\n      throw Error(\"expected Shape{,And,Or,Ref} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n    return pieces;\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeShape: function (shape, done, forceBraces) {\n    var _ShExWriter = this;\n    try {\n      var pieces = []; // guessing push/join is faster than concat\n      this._expect(shape, \"type\", \"Shape\");\n\n      if (shape.closed) pieces.push(\"CLOSED \");\n\n      // if (shape.inherit && shape.inherit.length > 0) { futureWork\n      //   pieces.push(\"&\");\n      //   shape.inherit.forEach(function (i, ord) {\n      //     if (ord)\n      //       pieces.push(\" \")\n      //     pieces.push(_ShExWriter._encodeShapeName(i, ord > 0));\n      //   });\n      //   pieces.push(\" \");\n      // }\n\n      if (shape.extra && shape.extra.length > 0) {\n        pieces.push(\"EXTRA \");\n        shape.extra.forEach(function (i, ord) {\n          pieces.push(_ShExWriter._encodeShapeName(i, false)+\" \");\n        });\n        pieces.push(\" \");\n      }\n      var empties = [\"values\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\"];\n      pieces.push(\"{\\n\");\n\n      function _writeShapeActions (semActs) {\n        if (!semActs)\n          return;\n\n        semActs.forEach(function (act) {\n          _ShExWriter._expect(act, \"type\", \"SemAct\");\n          pieces.push(\" %\",\n                      _ShExWriter._encodePredicate(act.name),\n                      (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n        });\n      }\n\n      function _writeCardinality (min, max) {\n        if      (min === 0 && max === 1)         pieces.push(\"?\");\n        else if (min === 0 && max === UNBOUNDED) pieces.push(\"*\");\n        else if (min === undefined && max === undefined)                         ;\n        else if (min === 1 && max === UNBOUNDED) pieces.push(\"+\");\n        else\n          pieces.push(\"{\", min, \",\", (max === UNBOUNDED ? \"*\" : max), \"}\"); // by coincidence, both use the same character.\n      }\n\n      function _writeExpression (expr, indent, parentPrecedence) {\n        function _writeExpressionActions (semActs) {\n          if (semActs) {\n\n            semActs.forEach(function (act) {\n              _ShExWriter._expect(act, \"type\", \"SemAct\");\n              pieces.push(\"\\n\"+indent+\"   %\");\n              pieces.push(_ShExWriter._encodeValue(act.name));\n              if (\"code\" in act)\n                pieces.push(\"{\"+escapeCode(act.code)+\"%\"+\"}\");\n              else\n                pieces.push(\"%\");\n            });\n          }\n        }\n\n        function _exprGroup (exprs, separator, precedence, forceParens) {\n          var needsParens = precedence < parentPrecedence || forceParens;\n          if (needsParens) {\n            pieces.push(\"(\");\n          }\n          exprs.forEach(function (nested, ord) {\n            _writeExpression(nested, indent+\"  \", precedence)\n            if (ord < exprs.length - 1)\n              pieces.push(separator);\n          });\n          if (needsParens) {\n            pieces.push(\")\");\n          }\n        }\n\n        if (typeof expr === \"string\") {\n          pieces.push(\"&\");\n          pieces.push(_ShExWriter._encodeShapeName(expr, false));\n        } else {\n\n        if (\"id\" in expr) {\n          pieces.push(\"$\");\n          pieces.push(_ShExWriter._encodeIriOrBlankNode(expr.id, true));\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          if (expr.inverse)\n            pieces.push(\"^\");\n          if (expr.negated)\n            pieces.push(\"!\");\n          pieces.push(indent,\n                      _ShExWriter._encodePredicate(expr.predicate),\n                      \" \");\n\n          if (\"valueExpr\" in expr)\n            pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr.valueExpr, done, true, 0));\n          else\n            pieces.push(\". \");\n\n          _writeCardinality(expr.min, expr.max);\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \"\\n\"+indent+\"| \", 1, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \";\\n\"+indent, 2, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else throw Error(\"unexpected expr type: \" + expr.type);\n        }\n      }\n\n      if (shape.expression) // t: 0, 0Inherit1\n        _writeExpression(shape.expression, \"  \", 0);\n      pieces.push(\"\\n}\");\n      _writeShapeActions(shape.semActs);\n      _ShExWriter._annotations(pieces, shape.annotations, \"  \");\n\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeNodeConstraint: function (v, done) {\n    var _ShExWriter = this;\n    try {\n      _ShExWriter._expect(v, \"type\", \"NodeConstraint\");\n\n      var pieces = [];\n      if (v.nodeKind in nodeKinds)       pieces.push(nodeKinds[v.nodeKind], \" \");\n      else if (v.nodeKind !== undefined) _ShExWriter._error(\"unexpected nodeKind: \" + v.nodeKind); // !!!!\n\n      this._fillNodeConstraint(pieces, v, done);\n      this._annotations(pieces, v.annotations, \"  \");\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n\n  },\n\n  _annotations: function (pieces, annotations, indent) {\n    var _ShExWriter = this;\n    if (annotations) {\n      annotations.forEach(function (a) {\n        _ShExWriter._expect(a, \"type\", \"Annotation\");\n        pieces.push(\"//\\n\"+indent+\"   \");\n        pieces.push(_ShExWriter._encodeValue(a.predicate));\n        pieces.push(\" \");\n        pieces.push(_ShExWriter._encodeValue(a.object));\n      });\n    }\n  },\n\n  _fillNodeConstraint: function (pieces, v, done) {\n    var _ShExWriter = this;\n    if (v.datatype  && v.values  ) _ShExWriter._error(\"found both datatype and values in \"   +expr);\n    if (v.datatype) {\n      pieces.push(_ShExWriter._encodeShapeName(v.datatype));\n    }\n\n    if (v.values) {\n      pieces.push(\"[\");\n\n      v.values.forEach(function (t, ord) {\n        if (ord > 0)\n          pieces.push(\" \");\n\n        if (!isTerm(t)) {\n//          expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                runtimeError(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\");\n          var stemRangeTypes = [\"Language\", \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                runtimeError(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n          if (t.type === \"Language\") {\n            pieces.push(\"@\" + t.languageTag);\n          } else if (!isTerm(t.stem)) {\n            expect(t.stem, \"type\", \"Wildcard\");\n            pieces.push(\".\");\n          } else {\n            pieces.push(langOrLiteral(t, t.stem) + \"~\");\n          }\n          if (t.exclusions) {\n            t.exclusions.forEach(function (c) {\n              pieces.push(\" - \");\n              if (!isTerm(c)) {\n//                expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                pieces.push(langOrLiteral(t, c.stem) + \"~\");\n              } else {\n                pieces.push(langOrLiteral(t, c));\n              }\n            });\n          }\n          function langOrLiteral (t, c) {\n            return [\"LanguageStem\", \"LanguageStemRange\"].indexOf(t.type) !== -1 ? \"@\" + c :\n              [\"LiteralStem\", \"LiteralStemRange\"].indexOf(t.type) !== -1 ? '\"' + c.replace(ESCAPE_g, c) + '\"' :\n              _ShExWriter._encodeValue(c)\n          }\n        } else {\n          pieces.push(_ShExWriter._encodeValue(t));\n        }\n      });\n\n      pieces.push(\"]\");\n    }\n\n    if ('pattern' in v) {\n      var pattern = v.pattern.\n          replace(/\\//g, \"\\\\/\");\n      // if (ESCAPE_1.test(pattern))\n      //   pattern = pattern.replace(ESCAPE_g, characterReplacer);\n      var flags = 'flags' in v ? v.flags : \"\";\n      pieces.push(\"/\" + pattern + \"/\" + flags + \" \");\n    }\n    ['length', 'minlength', 'maxlength',\n     'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive',\n     'totaldigits', 'fractiondigits'\n    ].forEach(function (a) {\n      if (v[a])\n        pieces.push(\" \", a, \" \", v[a]);\n    });\n    return pieces;\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri, trailingSpace) {\n    trailingSpace = trailingSpace ? ' ' : '';\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (ESCAPE_1.test(iri))\n      iri = iri.replace(ESCAPE_g, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]) + trailingSpace;\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (ESCAPE_1.test(value))\n      value = value.replace(ESCAPE_g, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeShapeName` represents a subject\n  _encodeShapeName: function (subject, trailingSpace) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject, trailingSpace);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeValue` represents an object\n  _encodeValue: function (object) {\n    // Represent an IRI or blank node\n    if (typeof object !== \"object\")\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    return this._encodeLiteral(object.value, object.type, object.language);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  writeSchema: function (shape, done) {\n    this._writeSchema(shape, done);\n    this.end(done);\n  },\n\n  // ### `addShape` adds the shape to the output stream\n  addShape: function (shape, name, done) {\n    this._write(\n      _ShExWriter._encodeShapeName(name, false) +\n        \" \" +\n        _ShExWriter._writeShapeExpr(shape, done, true, 0).join(\"\"),\n      done\n    );\n  },\n\n  // ### `addShapes` adds the shapes to the output stream\n  addShapes: function (shapes) {\n    for (var i = 0; i < shapes.length; i++)\n      this.addShape(shapes[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (// @@ /[#\\/]$/.test(iri) && !! what was that?\n          prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Write prefix\n        this._write('PREFIX ' + prefix + ' <' + iri + '>\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = ESCAPE_replacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeCode (code) {\n  return code.replace(/\\\\/g, \"\\\\\\\\\").replace(/%/g, \"\\\\%\")\n}\n\n/** _throwError: overridable function to throw Errors().\n *\n * @param func (optional): function at which to truncate stack trace\n * @param str: error message\n */\nfunction _throwError (func, str) {\n  if (typeof func !== \"function\") {\n    str = func;\n    func = _throwError;\n  }\n  var e = new Error(str);\n  Error.captureStackTrace(e, func);\n  throw e;\n}\n\n// Expect property p with value v in object o\nfunction expect (o, p, v) {\n  if (!(p in o))\n    this._error(expect, \"expected \"+o+\" to have a .\"+p);\n  if (arguments.length > 2 && o[p] !== v)\n    this._error(expect, \"expected \"+o[o]+\" to equal .\"+v);\n}\n\n// The empty function\nfunction noop () {}\n\nreturn ShExWriter;\n})();\n\n// Export the `ShExWriter` class as a whole.\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWriterCjsModule; // node environment\n"
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "index": 14,
          "index2": 19,
          "size": 2255,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "issuerId": 4,
          "issuerName": "../shex-util/shex-util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 215,
            "building": 26
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "sync-request",
              "loc": "1710:8-31"
            },
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "sync-request",
              "loc": "1711:20-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nexports.__esModule = true;\nvar handle_qs_js_1 = require(\"then-request/lib/handle-qs.js\");\nvar GenericResponse = require(\"http-response-object\");\nvar fd = FormData;\nexports.FormData = fd;\nfunction doRequest(method, url, options) {\n    var xhr = new XMLHttpRequest();\n    // check types of arguments\n    if (typeof method !== 'string') {\n        throw new TypeError('The method must be a string.');\n    }\n    if (url && typeof url === 'object') {\n        url = url.href;\n    }\n    if (typeof url !== 'string') {\n        throw new TypeError('The URL/path must be a string.');\n    }\n    if (options === null || options === undefined) {\n        options = {};\n    }\n    if (typeof options !== 'object') {\n        throw new TypeError('Options must be an object (or null).');\n    }\n    method = method.toUpperCase();\n    options.headers = options.headers || {};\n    // handle cross domain\n    var match;\n    var crossDomain = !!((match = /^([\\w-]+:)?\\/\\/([^\\/]+)/.exec(url)) && match[2] != location.host);\n    if (!crossDomain)\n        options.headers['X-Requested-With'] = 'XMLHttpRequest';\n    // handle query string\n    if (options.qs) {\n        url = handle_qs_js_1[\"default\"](url, options.qs);\n    }\n    // handle json body\n    if (options.json) {\n        options.body = JSON.stringify(options.json);\n        options.headers['content-type'] = 'application/json';\n    }\n    if (options.form) {\n        options.body = options.form;\n    }\n    // method, url, async\n    xhr.open(method, url, false);\n    for (var name in options.headers) {\n        xhr.setRequestHeader(name.toLowerCase(), '' + options.headers[name]);\n    }\n    // avoid sending empty string (#319)\n    xhr.send(options.body ? options.body : null);\n    var headers = {};\n    xhr\n        .getAllResponseHeaders()\n        .split('\\r\\n')\n        .forEach(function (header) {\n        var h = header.split(':');\n        if (h.length > 1) {\n            headers[h[0].toLowerCase()] = h\n                .slice(1)\n                .join(':')\n                .trim();\n        }\n    });\n    return new GenericResponse(xhr.status, headers, xhr.responseText, url);\n}\nexports[\"default\"] = doRequest;\nmodule.exports = doRequest;\nmodule.exports[\"default\"] = doRequest;\nmodule.exports.FormData = fd;\n"
        },
        {
          "id": 14,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/formats.js",
          "name": "../shex-util/node_modules/qs/lib/formats.js",
          "index": 19,
          "index2": 13,
          "size": 521,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "issuerId": 28,
          "issuerName": "../shex-util/node_modules/qs/lib/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "module": "../shex-util/node_modules/qs/lib/index.js",
              "moduleName": "../shex-util/node_modules/qs/lib/index.js",
              "type": "cjs require",
              "userRequest": "./formats",
              "loc": "5:14-34"
            },
            {
              "moduleId": 29,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
              "module": "../shex-util/node_modules/qs/lib/stringify.js",
              "moduleName": "../shex-util/node_modules/qs/lib/stringify.js",
              "type": "cjs require",
              "userRequest": "./formats",
              "loc": "4:14-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n"
        },
        {
          "id": 15,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "index": 25,
          "index2": 24,
          "size": 4495,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "9:20-45"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "6:21-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "const ShExParserCjsModule = (function () {\n\nconst ShExTerm = require(\"@shexjs/term\");\nconst ShExJison = require('./lib/ShExJison').Parser;\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, prefixes, schemaOptions) {\n  schemaOptions = schemaOptions || {};\n  // Create a copy of the prefixes\n  var prefixesCopy = {};\n  for (var prefix in prefixes || {})\n    prefixesCopy[prefix] = prefixes[prefix];\n\n  // Create a copy of the labelResolvers\n  var termResolver = \"termResolver\" in schemaOptions ?\n      schemaOptions.termResolver :\n      makeDisabledTermResolver();\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShExJison();\n\n  function runParser () {\n    // ShExJison.base = baseIRI || \"\";\n    // ShExJison.basePath = ShExJison.base.replace(/[^\\/]*$/, '');\n    // ShExJison.baseRoot = ShExJison.base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    ShExJison._prefixes = Object.create(prefixesCopy);\n    ShExJison._imports = [];\n    ShExJison._setBase(baseIRI);\n    ShExJison._setFileName(baseIRI);\n    ShExJison.options = schemaOptions;\n    if (!ShExJison._termResolver)\n      ShExJison._termResolver = termResolver;\n    let errors = [];\n    ShExJison.recoverable = e =>\n      errors.push(e);\n    let ret = null;\n    try {\n      ret = ShExJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      errors.push(e);\n    }\n    ShExJison.reset();\n    errors.forEach(e => {\n      if (\"hash\" in e) {\n        const hash = e.hash;\n        const location = hash.loc;\n        delete hash.loc;\n        Object.assign(e, hash, {location: location});\n      }\n      return e;\n    })\n    if (errors.length == 1) {\n      errors[0].parsed = ret;\n      throw errors[0];\n    } else if (errors.length) {\n      const all = new Error(\"\" + errors.length  + \" parser errors:\\n\" + errors.map(\n        e => contextError(e, parser.yy.lexer)\n      ).join(\"\\n\"));\n      all.errors = errors;\n      all.parsed = ret;\n      throw all;\n    } else {\n      return ret;\n    }\n  }\n  parser.parse = runParser;\n  parser._setBase = function (base) {\n    ShExJison._setBase;\n    baseIRI = base;\n  }\n  parser._setFileName = ShExJison._setFileName;\n  parser._setTermResolver = ShExJison._setTermResolver;\n  parser._setOptions = function (opts) { ShExJison.options = opts; };\n  parser._resetBlanks = ShExJison._resetBlanks;\n  parser.reset = ShExJison.reset;\n  ShExJison.options = schemaOptions;\n  return parser;\n\n  function contextError (e, lexer) {\n    // use the lexer's pretty-printing\n    var line = e.location.first_line;\n    var col  = e.location.first_column + 1;\n    var posStr = \"pos\" in e.hash ? \"\\n\" + e.hash.pos : \"\"\n    return `${baseIRI}\\n line: ${line}, column: ${col}: ${e.message}${posStr}`;\n  }\n}\n\nvar makeDBTermResolver = function (db) {\n  var _db = db;\n  var _lookFor = [];\n  return {\n    add: function (iri) {\n      _lookFor.push(iri);\n    },\n    resolve: function (pair, prefixes) {\n      var x = _lookFor.reduce((lfacc, lf) => {\n        var found1 = _db.getQuads(null, lf, '\"' + pair.label.value + '\"');\n        if (found1.length)\n          return pair.prefix === null ?\n          {prefix: null, length: null, term: ShExTerm.internalTerm(found1[0].subject)}:\n          found1.reduce((tripacc, triple) => {\n            var s = ShExTerm.internalTerm(triple.subject);\n            return Object.keys(prefixes).reduce((prefacc, prefix) => {\n              var ns = prefixes[prefix];\n              var sw = s.startsWith(ns);\n              if (sw && ns.length > prefacc.length && pair.prefix === prefix)\n                return {prefix: prefix, length: prefacc.length, term: s};\n              return prefacc;\n            }, tripacc);\n          }, lfacc);\n        else\n          return lfacc;\n      }, {prefix: null, length: 0, term: null});\n      if (x.term)\n        return x.term;\n      throw Error(\"no term found for `\" + JSON.stringify(pair) + \"`\");\n    }\n  };\n}\n\nvar makeDisabledTermResolver = function () {\n  return {\n    add: function (iri) {\n      throw Error(\"no term resolver to accept <\" + iri + \">\");\n    },\n    resolve: function (label, prefixes) {\n      throw Error(\"no term resolver to resolve `\" + label + \"`\");\n    }\n  };\n}\n\nreturn {\n  construct: prepareParser,\n  dbTermResolver: makeDBTermResolver,\n  disabledTermResolver: makeDisabledTermResolver\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExParserCjsModule;\n"
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "index": 27,
          "index2": 45,
          "size": 19433,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 34,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "glob",
              "loc": "322:20-35"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./glob.js",
              "loc": "8:11-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"
        },
        {
          "id": 17,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "index": 28,
          "index2": 26,
          "size": 1308,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "44:9-31"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "5:9-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n"
        },
        {
          "id": 18,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "index": 36,
          "index2": 38,
          "size": 15995,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "50:13-30"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "11:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"
        },
        {
          "id": 19,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "index": 44,
          "index2": 40,
          "size": 6167,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "53:13-35"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "13:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"
        },
        {
          "id": 20,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "index": 46,
          "index2": 42,
          "size": 905,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerId": 47,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 47,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 26,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"
        },
        {
          "id": 21,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "index": 47,
          "index2": 43,
          "size": 935,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "63:11-26"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "3:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n"
        },
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "index": 0,
          "index2": 48,
          "size": 552,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "profile": {
            "factory": 20,
            "building": 15
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp"
            },
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp.min"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0,
          "source": "ShExWebApp = (function () {\n  let shapeMap = require(\"shape-map\")\n  return Object.assign({}, {\n    ShExTerm:       require('@shexjs/term'),\n    Util:           require('@shexjs/util'),\n    Validator:      require('@shexjs/validator'),\n    Writer:         require('@shexjs/writer'),\n    Api:            require(\"@shexjs/api\"),\n    Parser:         require(\"@shexjs/parser\"),\n    ShapeMap:       shapeMap,\n    ShapeMapParser: shapeMap.Parser,\n  })\n})()\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWebApp;\n"
        },
        {
          "id": 23,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "index": 1,
          "index2": 7,
          "size": 580,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "shape-map",
              "loc": "2:17-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * See README for description.\n */\n\nconst ShapeMapCjsModule = (function () {\n  const symbols = require(\"./lib/ShapeMapSymbols\")\n\n  // Write the parser object directly into the symbols so the caller shares a\n  // symbol space with ShapeMapJison for e.g. start and focus.\n  symbols.Parser = require(\"./lib/ShapeMapParser\")\n  return symbols\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapCjsModule;\n"
        },
        {
          "id": 24,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "name": "../shape-map/lib/ShapeMapParser.js",
          "index": 3,
          "index2": 6,
          "size": 2190,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 23,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 23,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 163,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapParser",
              "loc": "11:19-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var ShapeMapParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShapeMapJison = require('./ShapeMapJison').Parser; // node environment\n} else {\n  ShapeMapJison = ShapeMapJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, schemaMeta, dataMeta) {\n  // Create a copy of the prefixes\n  var schemaBase = schemaMeta.base;\n  var schemaPrefixesCopy = {};\n  for (var prefix in schemaMeta.prefixes || {})\n    schemaPrefixesCopy[prefix] = schemaMeta.prefixes[prefix];\n  var dataBase = dataMeta.base;\n  var dataPrefixesCopy = {};\n  for (var prefix in dataMeta.prefixes || {})\n    dataPrefixesCopy[prefix] = dataMeta.prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShapeMapJison();\n\n  function runParser () {\n    ShapeMapJison._schemaPrefixes = Object.create(schemaPrefixesCopy);\n    ShapeMapJison._setSchemaBase(schemaBase);\n    ShapeMapJison._dataPrefixes = Object.create(dataPrefixesCopy);\n    ShapeMapJison._setDataBase(dataBase);\n    ShapeMapJison._setFileName(baseIRI);\n    try {\n      return ShapeMapJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      // use the lexer's pretty-printing\n      var lineNo = \"lexer\" in parser.yy ? parser.yy.lexer.yylineno + 1 : 1;\n      var pos = \"lexer\" in parser.yy ? parser.yy.lexer.showPosition() : \"\";\n      var t = Error(`${baseIRI}(${lineNo}): ${e.message}\\n${pos}`);\n      Error.captureStackTrace(t, runParser);\n      parser.reset();\n      throw t;\n    }\n  }\n  parser.parse = runParser;\n  parser._setSchemaBase = function (base) {\n    ShapeMapJison._setSchemaBase;\n    schemaBase = base;\n  }\n  parser._setDataBase = function (base) {\n    ShapeMapJison._setDataBase;\n    dataBase = base;\n  }\n  parser._setFileName = ShapeMapJison._setFileName;\n  parser.reset = ShapeMapJison.reset;\n  return parser;\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShapeMapParser;\n"
        },
        {
          "id": 25,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "name": "../shape-map/lib/ShapeMapJison.js",
          "index": 4,
          "index2": 5,
          "size": 52142,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "issuerId": 24,
          "issuerName": "../shape-map/lib/ShapeMapParser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 23,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 24,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "name": "../shape-map/lib/ShapeMapParser.js",
              "profile": {
                "factory": 163,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 198,
            "building": 56,
            "dependencies": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "module": "../shape-map/lib/ShapeMapParser.js",
              "moduleName": "../shape-map/lib/ShapeMapParser.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapJison",
              "loc": "5:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/* parser generated by jison 0.4.16 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShapeMapJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,16],$V2=[1,11],$V3=[1,14],$V4=[1,25],$V5=[1,24],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,28],$Va=[1,26],$Vb=[1,27],$Vc=[1,29],$Vd=[1,12],$Ve=[1,13],$Vf=[1,15],$Vg=[4,9],$Vh=[16,19,20,21],$Vi=[2,25],$Vj=[16,19,20,21,37],$Vk=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],$Vl=[4,9,16,19,20,21,37,43,74,75],$Vm=[4,9,43],$Vn=[29,46,80,81,82],$Vo=[4,9,42,43],$Vp=[1,59],$Vq=[46,79,80,81,82],$Vr=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],$Vs=[1,94],$Vt=[1,85],$Vu=[1,86],$Vv=[1,87],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,93],$VA=[1,95],$VB=[33,48,49,50,53,54,55,56,63],$VC=[4,9,37,65],$VD=[1,99],$VE=[9,37],$VF=[9,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shapeMap\":3,\"EOF\":4,\"pair\":5,\"Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star\":6,\"QGT_COMMA_E_Opt\":7,\"O_QGT_COMMA_E_S_Qpair_E_C\":8,\"GT_COMMA\":9,\"nodeSelector\":10,\"statusAndShape\":11,\"Qreason_E_Opt\":12,\"QjsonAttributes_E_Opt\":13,\"reason\":14,\"jsonAttributes\":15,\"GT_AT\":16,\"Qstatus_E_Opt\":17,\"shapeSelector\":18,\"ATSTART\":19,\"ATPNAME_NS\":20,\"ATPNAME_LN\":21,\"status\":22,\"objectTerm\":23,\"triplePattern\":24,\"IT_SPARQL\":25,\"string\":26,\"nodeIri\":27,\"shapeIri\":28,\"START\":29,\"subjectTerm\":30,\"BLANK_NODE_LABEL\":31,\"literal\":32,\"GT_LCURLEY\":33,\"IT_FOCUS\":34,\"nodePredicate\":35,\"O_QobjectTerm_E_Or_QIT___E_C\":36,\"GT_RCURLEY\":37,\"O_QsubjectTerm_E_Or_QIT___E_C\":38,\"IT__\":39,\"GT_NOT\":40,\"GT_OPT\":41,\"GT_DIVIDE\":42,\"GT_DOLLAR\":43,\"O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C\":44,\"jsonValue\":45,\"APPINFO_COLON\":46,\"APPINFO_SPACE_COLON\":47,\"IT_false\":48,\"IT_null\":49,\"IT_true\":50,\"jsonObject\":51,\"jsonArray\":52,\"INTEGER\":53,\"DECIMAL\":54,\"DOUBLE\":55,\"STRING_LITERAL2\":56,\"Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt\":57,\"O_QGT_COMMA_E_S_QjsonMember_E_C\":58,\"jsonMember\":59,\"Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star\":60,\"O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C\":61,\"STRING_LITERAL2_COLON\":62,\"GT_LBRACKET\":63,\"Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt\":64,\"GT_RBRACKET\":65,\"O_QGT_COMMA_E_S_QjsonValue_E_C\":66,\"Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star\":67,\"O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C\":68,\"rdfLiteral\":69,\"numericLiteral\":70,\"booleanLiteral\":71,\"Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt\":72,\"O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C\":73,\"LANGTAG\":74,\"GT_DTYPE\":75,\"STRING_LITERAL1\":76,\"STRING_LITERAL_LONG1\":77,\"STRING_LITERAL_LONG2\":78,\"IT_a\":79,\"IRIREF\":80,\"PNAME_LN\":81,\"PNAME_NS\":82,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",9:\"GT_COMMA\",16:\"GT_AT\",19:\"ATSTART\",20:\"ATPNAME_NS\",21:\"ATPNAME_LN\",25:\"IT_SPARQL\",29:\"START\",31:\"BLANK_NODE_LABEL\",33:\"GT_LCURLEY\",34:\"IT_FOCUS\",37:\"GT_RCURLEY\",39:\"IT__\",40:\"GT_NOT\",41:\"GT_OPT\",42:\"GT_DIVIDE\",43:\"GT_DOLLAR\",46:\"APPINFO_COLON\",47:\"APPINFO_SPACE_COLON\",48:\"IT_false\",49:\"IT_null\",50:\"IT_true\",53:\"INTEGER\",54:\"DECIMAL\",55:\"DOUBLE\",56:\"STRING_LITERAL2\",62:\"STRING_LITERAL2_COLON\",63:\"GT_LBRACKET\",65:\"GT_RBRACKET\",74:\"LANGTAG\",75:\"GT_DTYPE\",76:\"STRING_LITERAL1\",77:\"STRING_LITERAL_LONG1\",78:\"STRING_LITERAL_LONG2\",79:\"IT_a\",80:\"IRIREF\",81:\"PNAME_LN\",82:\"PNAME_NS\"},\nproductions_: [0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n          return []\n        \nbreak;\ncase 2:\n\n          return [$$[$0-3]].concat($$[$0-2])\n        \nbreak;\ncase 3: case 51: case 59:\nthis.$ = $$[$0];\nbreak;\ncase 4: case 60: case 63:\nthis.$ = [  ];\nbreak;\ncase 5: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 8:\nthis.$ = extend({ node: $$[$0-3] }, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 9: case 11: case 52: case 55: case 74:\nthis.$ = {  };\nbreak;\ncase 13:\nthis.$ = extend({ shape: $$[$0] }, $$[$0-1]);\nbreak;\ncase 14:\nthis.$ = { shape: ShapeMap.start };\nbreak;\ncase 15:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1)) };\n      \nbreak;\ncase 16:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + $$[$0].substr(namePos + 1) };\n      \nbreak;\ncase 17:\nthis.$ = { status: 'conformant' } // defaults to conformant;\nbreak;\ncase 18:\nthis.$ = { status: $$[$0] };\nbreak;\ncase 21:\nthis.$ = { type: \"Extension\", language: \"http://www.w3.org/ns/shex#Extensions-sparql\", lexical: $$[$0][\"@value\"] };\nbreak;\ncase 22:\nthis.$ = { type: \"Extension\", language: $$[$0-1], lexical: $$[$0][\"@value\"] };\nbreak;\ncase 24:\nthis.$ = ShapeMap.start;\nbreak;\ncase 29:\nthis.$ = { type: \"TriplePattern\", subject: ShapeMap.focus, predicate: $$[$0-2], object: $$[$0-1] };\nbreak;\ncase 30:\nthis.$ = { type: \"TriplePattern\", subject: $$[$0-3], predicate: $$[$0-2], object: ShapeMap.focus };\nbreak;\ncase 32: case 34: case 42:\nthis.$ = null;\nbreak;\ncase 35:\nthis.$ = 'nonconformant';\nbreak;\ncase 36:\nthis.$ = 'unknown';\nbreak;\ncase 37:\nthis.$ = { reason: $$[$0] };\nbreak;\ncase 38:\nthis.$ = { appinfo: $$[$0] };\nbreak;\ncase 41:\nthis.$ = false;\nbreak;\ncase 43:\nthis.$ = true;\nbreak;\ncase 46: case 47: case 48:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 49:\nthis.$ = unescapeString($$[$0], 1)[\"@value\"];\nbreak;\ncase 50: case 58:\nthis.$ = $$[$0-1];\nbreak;\ncase 53: case 54: case 71:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 57:\n\n        this.$ = {  };\n        var t = $$[$0-1].substr(0, $$[$0-1].length - 1).trim(); // remove trailing ':' and spaces\n        this.$[unescapeString(t, 1)[\"@value\"]] = $$[$0];\n      \nbreak;\ncase 62:\nthis.$ = [$$[$0-1]].concat($$[$0]);\nbreak;\ncase 68:\nthis.$ = createLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 69:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 70:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE);\nbreak;\ncase 72:\nthis.$ = obj(\"@language\", $$[$0].substr(1).toLowerCase());\nbreak;\ncase 73:\nthis.$ = obj(\"@type\", $$[$0]);\nbreak;\ncase 76:\nthis.$ = createLiteral(\"true\", XSD_BOOLEAN);\nbreak;\ncase 77:\nthis.$ = createLiteral(\"false\", XSD_BOOLEAN);\nbreak;\ncase 78: case 80:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 79: case 81:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 83:\nthis.$ = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nbreak;\ncase 84:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._dataBase === null || absoluteIRI.test(unesc) ? unesc : _resolveDataIRI(unesc)\n      \nbreak;\ncase 85: case 86: case 90:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 87:\n\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\ncase 88:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._schemaBase === null || absoluteIRI.test(unesc) ? unesc : _resolveSchemaIRI(unesc)\n      \nbreak;\ncase 89:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 91:\n\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},{1:[3]},{1:[2,1]},o($Vg,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},o($Vh,[2,19]),o($Vh,[2,20]),{26:36,56:$V9,76:$Va,77:$Vb,78:$Vc},o($Vh,$Vi,{26:37,56:$V9,76:$Va,77:$Vb,78:$Vc}),o($Vj,[2,27]),o($Vj,[2,28]),{27:42,30:40,31:$V1,34:[1,38],38:39,39:[1,41],46:$V3,80:$Vd,81:$Ve,82:$Vf},o($Vk,[2,84]),o($Vk,[2,85]),o($Vk,[2,86]),o($Vk,[2,87]),o([16,19,20,21,37,46,79,80,81,82],[2,26]),o($Vj,[2,65]),o($Vj,[2,66]),o($Vj,[2,67]),o($Vj,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),o($Vj,[2,68]),o($Vj,[2,69]),o($Vj,[2,70]),o($Vj,[2,76]),o($Vj,[2,77]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},o($Vm,[2,9],{12:50,14:51,42:[1,52]}),o($Vn,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),o($Vo,[2,14]),o($Vo,[2,15]),o($Vo,[2,16]),o($Vh,[2,21]),o($Vh,[2,22]),{27:58,35:57,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},{27:58,35:60,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},o($Vq,[2,33]),o($Vq,[2,34]),o([37,46,79,80,81,82],$Vi),o($Vj,[2,71]),o($Vj,[2,75]),o($Vj,[2,72]),{27:61,46:$V3,80:$Vd,81:$Ve,82:$Vf},{4:[1,62]},o($Vg,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vg,[2,11],{13:64,15:65,43:[1,66]}),o($Vm,[2,10]),{26:67,56:$V9,76:$Va,77:$Vb,78:$Vc},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},o($Vn,[2,18]),o($Vn,[2,35]),o($Vn,[2,36]),{23:76,26:20,27:42,30:9,31:$V1,32:10,36:75,39:[1,77],46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vr,[2,82]),o($Vr,[2,83]),{34:[1,78]},o($Vj,[2,73]),{1:[2,2]},o($Vg,[2,3]),o($Vg,[2,8]),o($Vg,[2,12]),{44:79,46:[1,80],47:[1,81]},o($Vm,[2,37]),o($Vo,[2,13]),o($Vo,[2,23]),o($Vo,[2,24]),o($Vo,[2,88]),o($Vo,[2,89]),o($Vo,[2,90]),o($Vo,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:$Vs,45:84,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VB,[2,39]),o($VB,[2,40]),o($Vh,[2,29]),o($Vh,[2,30]),o($Vg,[2,38]),o($VC,[2,41]),o($VC,[2,42]),o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),o($VC,[2,46]),o($VC,[2,47]),o($VC,[2,48]),o($VC,[2,49]),{37:[2,55],57:96,59:98,61:97,62:$VD},{33:$Vs,45:102,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},o($VE,[2,52],{60:104}),{33:$Vs,45:105,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},{65:[1,106]},{65:[2,64]},o($VF,[2,60],{67:107}),o($VC,[2,50]),{9:[1,109],37:[2,54],58:108},o($VE,[2,57]),o($VC,[2,58]),{9:[1,111],65:[2,62],66:110},o($VE,[2,53]),{59:112,62:$VD},o($VF,[2,61]),{33:$Vs,45:113,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VE,[2,51]),o($VF,[2,59])],\ndefaultActions: {2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = new Error();\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShapeMap parser in the Jison parser generator format.\n  */\n\n  var ShapeMap = require(\"./ShapeMapSymbols\");\n\n  // Common namespaces and entities\n  var XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setSchemaBase` sets the base IRI to resolve relative IRIs.\n  Parser._setSchemaBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._schemaBase = baseIRI) {\n      Parser._schemaBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._schemaBaseRoot   = baseIRI[0];\n      Parser._schemaBaseScheme = baseIRI[1];\n    }\n  }\n  Parser._setDataBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._dataBase = baseIRI) {\n      Parser._dataBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._dataBaseRoot   = baseIRI[0];\n      Parser._dataBaseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveSchemaIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveSchemaIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._schemaBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._schemaBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._schemaBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._schemaBaseScheme : Parser._schemaBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._schemaBasePath + iri);\n    }\n    }\n  }\n  function _resolveDataIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._dataBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._dataBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._dataBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._dataBaseScheme : Parser._dataBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._dataBasePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function obj() {\n    var ret = {  };\n    for (var i = 0; i < arguments.length; i+= 2) {\n      ret[arguments[i]] = arguments[i+1];\n    }\n    return ret;\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return obj(\"@value\", value, \"@type\", type );\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser.valueExprDefns = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._schemaBase = Parser._schemaBasePath = Parser._schemaBaseRoot = Parser._schemaBaseIRIScheme = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return obj(\"@value\", unescapeText(string, stringEscapeReplacements));\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, obj(\"@language\", lang.substr(1).toLowerCase()));\n  }\n\n  function error (msg) {\n    Parser.reset();\n    throw new Error(msg);\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefixes, prefix) {\n    if (!(prefix in prefixes))\n      error('Parse error; unknown prefix: ' + prefix);\n    return prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape) {\n    if (Parser.productions && label in Parser.productions)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.shapes)\n      Parser.shapes = {};\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.shapes[label] = shape;\n  }\n\n  // Add a production to the map\n  function addProduction (label, production) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.productions)\n      Parser.productions = {};\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function shapeJunction (type, container, elts) {\n    if (elts.length === 0) {\n      return container;\n    } else if (container.type === type) {\n      container.shapeExprs = container.shapeExprs.concat(elts);\n      return container;\n    } else {\n      return { type: type, shapeExprs: [container].concat(elts) };\n    }\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n\n  // <?INCLUDE from ShExUtil. Factor into `rdf-token` module? ?>\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  function unescapeText (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 47;\nbreak;\ncase 2:return 62;\nbreak;\ncase 3:return 34;\nbreak;\ncase 4:return 29;\nbreak;\ncase 5:return 19;\nbreak;\ncase 6:return 25;\nbreak;\ncase 7:return 21;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 74;\nbreak;\ncase 10:return 81;\nbreak;\ncase 11:return 46;\nbreak;\ncase 12:return 82;\nbreak;\ncase 13:return 55;\nbreak;\ncase 14:return 54;\nbreak;\ncase 15:return 53;\nbreak;\ncase 16:return 80;\nbreak;\ncase 17:return 31;\nbreak;\ncase 18:return 77;\nbreak;\ncase 19:return 78;\nbreak;\ncase 20:return 76;\nbreak;\ncase 21:return 56;\nbreak;\ncase 22:return 79;\nbreak;\ncase 23:return 9;\nbreak;\ncase 24:return 33;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 16;\nbreak;\ncase 27:return 40;\nbreak;\ncase 28:return 41;\nbreak;\ncase 29:return 42;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 75;\nbreak;\ncase 34:return 39;\nbreak;\ncase 35:return 50;\nbreak;\ncase 36:return 48;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 4;\nbreak;\ncase 39:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 40:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(appinfo[\\u0020\\u000A\\u0009]+:))/,/^(?:(\"([^\\u0022\\u005C\\u000A\\u000D]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"[\\u0020\\u000A\\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:a\\b)/,/^(?:,)/,/^(?:\\{)/,/^(?:\\})/,/^(?:@)/,/^(?:!)/,/^(?:\\?)/,/^(?:\\/)/,/^(?:\\$)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^\\^)/,/^(?:_\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShapeMapJison;\nexports.Parser = ShapeMapJison.Parser;\nexports.parse = function () { return ShapeMapJison.parse.apply(ShapeMapJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 26,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/hierarchy-closure/hierarchy-closure.js",
          "name": "../shex-util/node_modules/hierarchy-closure/hierarchy-closure.js",
          "index": 12,
          "index2": 10,
          "size": 2546,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "issuerId": 4,
          "issuerName": "../shex-util/shex-util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 215,
            "building": 26
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "module": "../shex-util/shex-util.js",
              "moduleName": "../shex-util/shex-util.js",
              "type": "cjs require",
              "userRequest": "hierarchy-closure",
              "loc": "6:18-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var HierarchyClosure = (function () {\n  /** create a hierarchy object\n   * This object keeps track of direct children and parents as well as transitive children and parents.\n   */\n  function makeHierarchy () {\n    let roots = {}\n    let parents = {}\n    let children = {}\n    let holders = {}\n    return {\n      add: function (parent, child) {\n        if (// test if this is a novel entry.\n          (parent in children && children[parent].indexOf(child) !== -1)) {\n          return\n        }\n        let target = parent in holders\n          ? getNode(parent)\n          : (roots[parent] = getNode(parent)) // add new parents to roots.\n        let value = getNode(child)\n\n        target[child] = value\n        delete roots[child]\n\n        // // maintain hierarchy (direct and confusing)\n        // children[parent] = children[parent].concat(child, children[child])\n        // children[child].forEach(c => parents[c] = parents[c].concat(parent, parents[parent]))\n        // parents[child] = parents[child].concat(parent, parents[parent])\n        // parents[parent].forEach(p => children[p] = children[p].concat(child, children[child]))\n\n        // maintain hierarchy (generic and confusing)\n        updateClosure(children, parents, child, parent)\n        updateClosure(parents, children, parent, child)\n        function updateClosure (container, members, near, far) {\n          container[far] = container[far].filter(\n            e => /* e !== near && */ container[near].indexOf(e) === -1\n          ).concat(container[near].indexOf(near) === -1 ? [near] : [], container[near])\n          container[near].forEach(\n            n => (members[n] = members[n].filter(\n              e => e !== far && members[far].indexOf(e) === -1\n            ).concat(members[far].indexOf(far) === -1 ? [far] : [], members[far]))\n          )\n        }\n\n        function getNode (node) {\n          if (!(node in holders)) {\n            parents[node] = []\n            children[node] = []\n            holders[node] = {}\n          }\n          return holders[node]\n        }\n      },\n      roots: roots,\n      parents: parents,\n      children: children\n    }\n  }\n\n  function depthFirst (n, f, p) {\n    return Object.keys(n).reduce((ret, k) => {\n      return ret.concat(\n        depthFirst(n[k], f, k),\n        p ? f(k, p) : []) // outer invocation can have null parent\n    }, [])\n  }\n\n  return { create: makeHierarchy, depthFirst }\n})()\n\n/* istanbul ignore next */\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = HierarchyClosure\n}\n"
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "index": 15,
          "index2": 17,
          "size": 526,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "issuerId": 13,
          "issuerName": "../shex-util/node_modules/sync-request/lib/browser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            }
          ],
          "profile": {
            "factory": 132,
            "building": 6
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "module": "../shex-util/node_modules/sync-request/lib/browser.js",
              "moduleName": "../shex-util/node_modules/sync-request/lib/browser.js",
              "type": "cjs require",
              "userRequest": "then-request/lib/handle-qs.js",
              "loc": "3:21-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "\"use strict\";\nexports.__esModule = true;\nvar qs_1 = require(\"qs\");\nfunction handleQs(url, query) {\n    var _a = url.split('?'), start = _a[0], part2 = _a[1];\n    var qs = (part2 || '').split('#')[0];\n    var end = part2 && part2.split('#').length > 1 ? '#' + part2.split('#')[1] : '';\n    var baseQs = qs_1.parse(qs);\n    for (var i in query) {\n        baseQs[i] = query[i];\n    }\n    qs = qs_1.stringify(baseQs);\n    if (qs !== '') {\n        qs = '?' + qs;\n    }\n    return start + qs + end;\n}\nexports[\"default\"] = handleQs;\n"
        },
        {
          "id": 28,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "name": "../shex-util/node_modules/qs/lib/index.js",
          "index": 16,
          "index2": 16,
          "size": 211,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "issuerId": 27,
          "issuerName": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            }
          ],
          "profile": {
            "factory": 50,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 27,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "module": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "moduleName": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "type": "cjs require",
              "userRequest": "qs",
              "loc": "3:11-24"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n"
        },
        {
          "id": 29,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "name": "../shex-util/node_modules/qs/lib/stringify.js",
          "index": 17,
          "index2": 14,
          "size": 8030,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "issuerId": 28,
          "issuerName": "../shex-util/node_modules/qs/lib/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "module": "../shex-util/node_modules/qs/lib/index.js",
              "moduleName": "../shex-util/node_modules/qs/lib/index.js",
              "type": "cjs require",
              "userRequest": "./stringify",
              "loc": "3:16-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n"
        },
        {
          "id": 30,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/parse.js",
          "name": "../shex-util/node_modules/qs/lib/parse.js",
          "index": 20,
          "index2": 15,
          "size": 9197,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "issuerId": 28,
          "issuerName": "../shex-util/node_modules/qs/lib/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            },
            {
              "id": 27,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
              "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
              "profile": {
                "factory": 132,
                "building": 6
              }
            },
            {
              "id": 28,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "name": "../shex-util/node_modules/qs/lib/index.js",
              "profile": {
                "factory": 50,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
              "module": "../shex-util/node_modules/qs/lib/index.js",
              "moduleName": "../shex-util/node_modules/qs/lib/index.js",
              "type": "cjs require",
              "userRequest": "./parse",
              "loc": "4:12-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"
        },
        {
          "id": 31,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/http-response-object/lib/index.js",
          "name": "../shex-util/node_modules/http-response-object/lib/index.js",
          "index": 21,
          "index2": 18,
          "size": 2170,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "issuerId": 13,
          "issuerName": "../shex-util/node_modules/sync-request/lib/browser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 4,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
              "name": "../shex-util/shex-util.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 13,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "name": "../shex-util/node_modules/sync-request/lib/browser.js",
              "profile": {
                "factory": 215,
                "building": 26
              }
            }
          ],
          "profile": {
            "factory": 132,
            "building": 6
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
              "module": "../shex-util/node_modules/sync-request/lib/browser.js",
              "moduleName": "../shex-util/node_modules/sync-request/lib/browser.js",
              "type": "cjs require",
              "userRequest": "http-response-object",
              "loc": "4:22-53"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "\"use strict\";\n/**\n * A response from a web request\n */\nvar Response = /** @class */ (function () {\n    function Response(statusCode, headers, body, url) {\n        if (typeof statusCode !== 'number') {\n            throw new TypeError('statusCode must be a number but was ' + typeof statusCode);\n        }\n        if (headers === null) {\n            throw new TypeError('headers cannot be null');\n        }\n        if (typeof headers !== 'object') {\n            throw new TypeError('headers must be an object but was ' + typeof headers);\n        }\n        this.statusCode = statusCode;\n        var headersToLowerCase = {};\n        for (var key in headers) {\n            headersToLowerCase[key.toLowerCase()] = headers[key];\n        }\n        this.headers = headersToLowerCase;\n        this.body = body;\n        this.url = url;\n    }\n    Response.prototype.isError = function () {\n        return this.statusCode === 0 || this.statusCode >= 400;\n    };\n    Response.prototype.getBody = function (encoding) {\n        if (this.statusCode === 0) {\n            var err = new Error('This request to ' +\n                this.url +\n                ' resulted in a status code of 0. This usually indicates some kind of network error in a browser (e.g. CORS not being set up or the DNS failing to resolve):\\n' +\n                this.body.toString());\n            err.statusCode = this.statusCode;\n            err.headers = this.headers;\n            err.body = this.body;\n            err.url = this.url;\n            throw err;\n        }\n        if (this.statusCode >= 300) {\n            var err = new Error('Server responded to ' +\n                this.url +\n                ' with status code ' +\n                this.statusCode +\n                ':\\n' +\n                this.body.toString());\n            err.statusCode = this.statusCode;\n            err.headers = this.headers;\n            err.body = this.body;\n            err.url = this.url;\n            throw err;\n        }\n        if (!encoding || typeof this.body === 'string') {\n            return this.body;\n        }\n        return this.body.toString(encoding);\n    };\n    return Response;\n}());\nmodule.exports = Response;\n"
        },
        {
          "id": 32,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "name": "../shex-validator/shex-validator.js",
          "index": 22,
          "index2": 22,
          "size": 47888,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/validator",
              "loc": "6:20-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/* ShExValidator - javascript module to validate a graph with respect to Shape Expressions\n *\n * Status: 1/2 tested, no known bugs.\n *\n * TODO:\n *   constraint violation reporting.\n */\n\nconst ShExValidatorCjsModule = (function () {\nvar UNBOUNDED = -1;\n\n// interface constants\nvar Start = { term: \"START\" }\nvar InterfaceOptions = {\n  \"coverage\": {\n    \"firstError\": \"fail on first error (usually used with eval-simple-1err)\",\n    \"exhaustive\": \"find as many errors as possible (usually used with eval-threaded-nerr)\"\n  }\n};\n\nvar VERBOSE = \"VERBOSE\" in process.env;\n// **ShExValidator** provides ShEx utility functions\n\nvar ProgramFlowError = { type: \"ProgramFlowError\", errors: { type: \"UntrackedError\" } };\n\nvar ShExTerm = require(\"@shexjs/term\");\nlet ShExVisitor = require(\"@shexjs/visitor\");\n\nfunction getLexicalValue (term) {\n  return ShExTerm.isIRI(term) ? term :\n    ShExTerm.isLiteral(term) ? ShExTerm.getLiteralValue(term) :\n    term.substr(2); // bnodes start with \"_:\"\n}\n\n\nvar XSD = \"http://www.w3.org/2001/XMLSchema#\";\nvar integerDatatypes = [\n  XSD + \"integer\",\n  XSD + \"nonPositiveInteger\",\n  XSD + \"negativeInteger\",\n  XSD + \"long\",\n  XSD + \"int\",\n  XSD + \"short\",\n  XSD + \"byte\",\n  XSD + \"nonNegativeInteger\",\n  XSD + \"unsignedLong\",\n  XSD + \"unsignedInt\",\n  XSD + \"unsignedShort\",\n  XSD + \"unsignedByte\",\n  XSD + \"positiveInteger\"\n];\n\nvar decimalDatatypes = [\n  XSD + \"decimal\",\n].concat(integerDatatypes);\n\nvar numericDatatypes = [\n  XSD + \"float\",\n  XSD + \"double\"\n].concat(decimalDatatypes);\n\nvar numericParsers = {};\nnumericParsers[XSD + \"integer\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?[0-9]+$/))) {\n    parseError(\"illegal integer value '\" + label + \"'\");\n  }\n  return parseInt(label);\n};\nnumericParsers[XSD + \"decimal\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?(?:[0-9]*\\.[0-9]+|[0-9]+)$/))) { // XSD has no pattern for decimal?\n    parseError(\"illegal decimal value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nconst DECIMAL_REGEX = /^[+\\-]?(?:[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+)(?:[eE][+\\-]?[0-9]+)?$/;\nnumericParsers[XSD + \"float\"  ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) { // XSD has no pattern for float?\n    parseError(\"illegal float value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nnumericParsers[XSD + \"double\" ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) {\n    parseError(\"illegal double value '\" + label + \"'\");\n  }\n  return Number(label);\n};\n\nfunction testRange (value, datatype, parseError) {\n  const ranges = {\n    //    integer            -1 0 1 +1 | \"\" -1.0 +1.0 1e0 NaN INF\n    //    decimal            -1 0 1 +1 -1.0 +1.0 | \"\" 1e0 NaN INF\n    //    float              -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    double             -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    nonPositiveInteger -1 0 +0 -0 | 1 +1 1a a1\n    //    negativeInteger    -1 | 0 +0 -0 1\n    //    long               -1 0 1 +1 |\n    //    int                -1 0 1 +1 |\n    //    short              -32768 0 32767 | -32769 32768\n    //    byte               -128 0 127 | \"\" -129 128\n    //    nonNegativeInteger 0 -0 +0 1 +1 | -1\n    //    unsignedLong       0 1 | -1\n    //    unsignedInt        0 1 | -1\n    //    unsignedShort      0 65535 | -1 65536\n    //    unsignedByte       0 255 | -1 256\n    //    positiveInteger    1 | -1 0\n    //    string             \"\" \"a\" \"0\"\n    //    boolean            true false 0 1 | \"\" TRUE FALSE tRuE fAlSe -1 2 10 01\n    //    dateTime           \"2012-01-02T12:34:56.78Z\" | \"\" \"2012-01-02T\" \"2012-01-02\"\n    integer:            { min: -Infinity           , max: Infinity },\n    decimal:            { min: -Infinity           , max: Infinity },\n    float:              { min: -Infinity           , max: Infinity },\n    double:             { min: -Infinity           , max: Infinity },\n    nonPositiveInteger: { min: -Infinity           , max: 0        },\n    negativeInteger:    { min: -Infinity           , max: -1       },\n    long:               { min: -9223372036854775808, max: 9223372036854775807 },\n    int:                { min: -2147483648         , max: 2147483647 },\n    short:              { min: -32768              , max: 32767    },\n    byte:               { min: -128                , max: 127      },\n    nonNegativeInteger: { min: 0                   , max: Infinity },\n    unsignedLong:       { min: 0                   , max: 18446744073709551615 },\n    unsignedInt:        { min: 0                   , max: 4294967295 },\n    unsignedShort:      { min: 0                   , max: 65535    },\n    unsignedByte:       { min: 0                   , max: 255      },\n    positiveInteger:    { min: 1                   , max: Infinity }\n  }\n  var parms = ranges[datatype.substr(XSD.length)];\n  if (!parms) throw Error(\"unexpected datatype: \" + datatype);\n  if (value < parms.min) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is less than the min:\", parms.min);\n  } else if (value > parms.max) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is greater than the max:\", parms.min);\n  }\n};\n\n/*\nfunction intSubType (spec, label, parseError) {\n  var ret = numericParsers[XSD + \"integer\"](label, parseError);\n  if (\"min\" in spec && ret < spec.min)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be < \" + spec.min);\n  if (\"max\" in spec && ret > spec.max)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be > \" + spec.max);\n  return ret;\n}\n[{type: \"nonPositiveInteger\", max: 0},\n {type: \"negativeInteger\", max: -1},\n {type: \"long\", min: -9223372036854775808, max: 9223372036854775807}, // beyond IEEE double\n {type: \"int\", min: -2147483648, max: 2147483647},\n {type: \"short\", min: -32768, max: 32767},\n {type: \"byte\", min: -128, max: 127},\n {type: \"nonNegativeInteger\", min: 0},\n {type: \"unsignedLong\", min: 0, max: 18446744073709551615},\n {type: \"unsignedInt\", min: 0, max: 4294967295},\n {type: \"unsignedShort\", min: 0, max: 65535},\n {type: \"unsignedByte\", min: 0, max: 255},\n {type: \"positiveInteger\", min: 1}].forEach(function (i) {\n   numericParsers[XSD + i.type ] = function (label, parseError) {\n     return intSubType(i, label, parseError);\n   };\n });\n*/\n\nvar stringTests = {\n  length   : function (v, l) { return v.length === l; },\n  minlength: function (v, l) { return v.length  >= l; },\n  maxlength: function (v, l) { return v.length  <= l; }\n};\n\nvar numericValueTests = {\n  mininclusive  : function (n, m) { return n >= m; },\n  minexclusive  : function (n, m) { return n >  m; },\n  maxinclusive  : function (n, m) { return n <= m; },\n  maxexclusive  : function (n, m) { return n <  m; }\n};\n\nvar decimalLexicalTests = {\n  totaldigits   : function (v, d) {\n    var m = v.match(/[0-9]/g);\n    return m && m.length <= d;\n  },\n  fractiondigits: function (v, d) {\n    var m = v.match(/^[+-]?[0-9]*\\.?([0-9]*)$/);\n    return m && m[1].length <= d;\n  }\n};\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n/* ShExValidator_constructor - construct an object for validating a schema.\n *\n * schema: a structure produced by a ShEx parser or equivalent.\n * options: object with controls for\n *   lax(true): boolean: whine about missing types in schema.\n *   diagnose(false): boolean: makde validate return a structure with errors.\n */\nfunction ShExValidator_constructor(schema, options) {\n  if (!(this instanceof ShExValidator_constructor))\n    return new ShExValidator_constructor(schema, options);\n  let index = schema._index || ShExVisitor.index(schema)\n  this.type = \"ShExValidator\";\n  options = options || {};\n  this.options = options;\n  this.options.coverage = this.options.coverage || \"exhaustive\";\n  if (!(\"noCache\" in options && options.noCache))\n    this.known = {};\n\n  var _ShExValidator = this;\n  this.schema = schema;\n  this._expect = this.options.lax ? noop : expect; // report errors on missing types.\n  this._optimize = {}; // optimizations:\n    // hasRepeatedGroups: whether there are patterns like (:p1 ., :p2 .)*\n  this.reset = function () {  }; // included in case we need it later.\n  // var regexModule = this.options.regexModule || require(\"@shexjs/eval-simple-1err\");\n  var regexModule = this.options.regexModule || require(\"@shexjs/eval-threaded-nerr\");\n\n  /* getAST - compile a traditional regular expression abstract syntax tree.\n   * Tested but not used at present.\n   */\n  this.getAST = function () {\n    return {\n      type: \"AST\",\n      shapes: schema.shapes.reduce(function (ret, shape) {\n        ret[shape.id] = {\n          type: \"ASTshape\",\n          expression: _compileShapeToAST(shape.expression, [], _ShExValidator.schema)\n        };\n        return ret;\n      }, {})\n    };\n  };\n\n  /* indexTripleConstraints - compile regular expression and index triple constraints\n   */\n  this.indexTripleConstraints = function (expression) {\n    // list of triple constraints from (:p1 ., (:p2 . | :p3 .))\n    var tripleConstraints = [];\n\n    if (expression)\n      indexTripleConstraints_dive(expression);\n    return tripleConstraints;\n\n    function indexTripleConstraints_dive (expr) {\n      if (typeof expr === \"string\") // Inclusion\n        return indexTripleConstraints_dive(index.tripleExprs[expr]);\n\n      else if (expr.type === \"TripleConstraint\") {\n        tripleConstraints.push(expr);\n        return [tripleConstraints.length - 1]; // index of expr\n      }\n\n      else if (expr.type === \"OneOf\" || expr.type === \"EachOf\")\n        return expr.expressions.reduce(function (acc, nested) {\n          return acc.concat(indexTripleConstraints_dive(nested));\n        }, []);\n\n      else if (expr.type === \"NestedShape\")\n        return [];\n\n      else\n        runtimeError(\"unexpected expr type: \" + expr.type);\n    };\n  };\n\n  /* emptyTracker - a tracker that does nothing\n   */\n  this.emptyTracker = function () {\n    var noop = x => x;\n    return {\n      recurse: noop,\n      known: noop,\n      enter: function (point, label) { ++this.depth; },\n      exit: function (point, label, ret) { --this.depth; },\n      depth: 0\n    };\n  };\n\n  /* validate - test point in db against the schema for labelOrShape\n   * depth: level of recurssion; for logging.\n   */\n  this.validate = function (db, point, label, tracker, seen) {\n    // default to schema's start shape\n    if (typeof point === \"object\" && \"termType\" in point) {\n      point = ShExTerm.internalTerm(point)\n    }\n    if (typeof point === \"object\") {\n      var shapeMap = point;\n      if (this.options.results === \"api\") {\n        return shapeMap.map(pair => {\n          var time = new Date();\n          var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n          time = new Date() - time;\n          return {\n            node: pair.node,\n            shape: pair.shape,\n            status: \"errors\" in res ? \"nonconformant\" : \"conformant\",\n            appinfo: res,\n            elapsed: time\n          };\n        });\n      }\n      var results = shapeMap.reduce((ret, pair) => {\n        var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n        return \"errors\" in res ?\n          { passes: ret.passes, failures: ret.failures.concat(res) } :\n          { passes: ret.passes.concat(res), failures: ret.failures } ;\n      }, {passes: [], failures: []});\n      if (false && this.options.results === \"api\") {\n        var ret = {};\n        function _add (n, s, r) {\n          if (!(n in ret)) {\n            ret[n] = [{shape: s, result: r}];\n            return;\n          }\n          if (ret[n].filter(p => { return p.shape === s; }))\n            return;\n          ret[n].push({shape: s, results: r});\n        }\n        results.passes.forEach(p => { _add(p.node, p.shape, true); });\n        results.failures.forEach(p => { _add(p.node, p.shape, false); });\n        return ret;\n      }\n      if (results.failures.length > 0) {\n        return results.failures.length !== 1 ?\n          { type: \"FailureList\", errors: results.failures } :\n          results.failures [0];\n      } else {\n        return results.passes.length !== 1 ?\n          { type: \"SolutionList\", solutions: results.passes } :\n          results.passes [0];\n      }\n    }\n\n    var outside = tracker === undefined;\n    // logging stuff\n    if (!tracker)\n      tracker = this.emptyTracker();\n    if (!label || label === Start) {\n      if (!schema.start)\n        runtimeError(\"start production not defined\");\n    }\n\n    var shape = null;\n    if (label == Start) {\n      shape = schema.start;\n    } else if (!(\"shapes\" in this.schema) || this.schema.shapes.length === 0) {\n      runtimeError(\"shape \" + label + \" not found; no shapes in schema\");\n    } else if (label in index.shapeExprs) {\n      shape = index.shapeExprs[label]\n    } else {\n      runtimeError(\"shape \" + label + \" not found in:\\n\" + Object.keys(index.shapeExprs || []).map(s => \"  \" + s).join(\"\\n\"));\n    }\n    if (typeof label !== \"string\")\n      return this._validateShapeExpr(db, point, shape, Start, tracker, seen);\n\n    if (seen === undefined)\n      seen = {};\n    var seenKey = point + \"@\" + (label === Start ? \"_: -start-\" : label);\n    if (seenKey in seen)\n      return tracker.recurse({\n        type: \"Recursion\",\n        node: ldify(point),\n        shape: label\n      });\n    if (\"known\" in this && seenKey in this.known)\n      return tracker.known(this.known[seenKey]);\n    seen[seenKey] = { point: point, shape: label };\n    tracker.enter(point, label);\n    var ret = this._validateShapeExpr(db, point, shape, label, tracker, seen);\n    tracker.exit(point, label, ret);\n    delete seen[seenKey];\n    if (\"known\" in this)\n      this.known[seenKey] = ret;\n    if (\"startActs\" in schema && outside) {\n      ret.startActs = schema.startActs;\n    }\n    return ret;\n  }\n\n  this._validateShapeExpr = function (db, point, shapeExpr, shapeLabel, tracker, seen) {\n    if (point === \"\")\n      throw Error(\"validation needs a valid focus node\");\n    if (typeof shapeExpr === \"string\") { // ShapeRef\n      return this._validateShapeExpr(db, point, index.shapeExprs[shapeExpr], shapeExpr, tracker, seen);\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      var sub = this._errorsMatchingNodeConstraint(point, shapeExpr, null);\n      return sub.errors && sub.errors.length ? { // @@ when are both conditionals needed?\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: sub.errors.map(function (error) { // !!! just sub.errors?\n          return {\n            type: \"NodeConstraintViolation\",\n            shapeExpr: shapeExpr,\n            error: error\n          };\n        })\n      } : {\n        type: \"NodeConstraintTest\",\n        node: ldify(point),\n        shape: shapeLabel,\n        shapeExpr: shapeExpr\n      };\n    } else if (shapeExpr.type === \"Shape\") {\n      return this._validateShape(db, point, shapeExpr, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeExternal\") {\n      return this.options.validateExtern(db, point, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      var sub = this._validateShapeExpr(db, point, shapeExpr.shapeExpr, shapeLabel, tracker, seen);\n      if (\"errors\" in sub)\n          return { type: \"ShapeNotResults\", solution: sub };\n        else\n          return { type: \"ShapeNotFailure\", errors: sub };\n    } else if (shapeExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          passes.push(sub);\n      }\n      if (errors.length > 0) {\n        return  { type: \"ShapeAndFailure\", errors: errors};\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else\n      throw Error(\"expected one of Shape{Ref,And,Or} or NodeConstraint, got \" + JSON.stringify(shapeExpr));\n  }\n\n  this._validateShape = function (db, point, shape, shapeLabel, tracker, seen) {\n    const _ShExValidator = this;\n    const valParms = { db, shapeLabel, tracker, seen };\n\n    let ret = null;\n    const startAcionStorage = {}; // !!! need test to see this write to results structure.\n    if (\"startActs\" in schema) {\n      const semActErrors = this.semActHandler.dispatchAll(schema.startActs, null, startAcionStorage)\n      if (semActErrors.length)\n        return {\n          type: \"Failure\",\n          node: ldify(point),\n          shape: shapeLabel,\n          errors: semActErrors\n        }; // some semAct aborted !! return a better error\n    }\n\n    const fromDB  = db.getNeighborhood(point, shapeLabel, shape);\n    const outgoingLength = fromDB.outgoing.length;\n    const neighborhood = fromDB.outgoing.sort(\n      (l, r) => l.predicate.localeCompare(r.predicate) || sparqlOrder(l.object, r.object)\n    ).concat(fromDB.incoming.sort(\n      (l, r) => l.predicate.localeCompare(r.predicate) || sparqlOrder(l.object, r.object)\n    ));\n\n    const constraintList = this.indexTripleConstraints(shape.expression);\n    const tripleList = matchByPredicate(constraintList, neighborhood, outgoingLength, point, valParms);\n    const {misses, extras} = whatsMissing(tripleList, neighborhood, outgoingLength, shape.extra || [])\n\n    const xp = crossProduct(tripleList.constraintList, \"NO_TRIPLE_CONSTRAINT\");\n    const partitionErrors = [];\n    const regexEngine = regexModule.compile(schema, shape, index);\n    while (xp.next() && ret === null) {\n      const errors = []\n      const usedTriples = []; // [{s1,p1,o1},{s2,p2,o2}] implicated triples -- used for messages\n      const constraintMatchCount = // [2,1,0,1] how many triples matched a constraint\n            _seq(neighborhood.length).map(function () { return 0; });\n\n      // t2tc - array mapping neighborhood index to TripleConstraint\n      const t2tcForThisShape = xp.get(); // [0,1,0,3] mapping from triple to constraint\n\n      // Triples not mapped to triple constraints are not allowed in closed shapes.\n      if (shape.closed) {\n        const unexpectedTriples = neighborhood.slice(0, outgoingLength).filter((t, i) => {\n          return t2tcForThisShape[i] === \"NO_TRIPLE_CONSTRAINT\" && // didn't match a constraint\n          extras.indexOf(i) === -1; // wasn't in EXTRAs.\n        });\n        if (unexpectedTriples.length > 0)\n          errors.push({\n            errors: [\n              {\n                type: \"ClosedShapeViolation\",\n                unexpectedTriples: unexpectedTriples\n              }\n            ]\n          });\n      }\n\n      // Set usedTriples and constraintMatchCount.\n      t2tcForThisShape.forEach(function (tpNumber, ord) {\n        if (tpNumber !== \"NO_TRIPLE_CONSTRAINT\") {\n          usedTriples.push(neighborhood[ord]);\n          ++constraintMatchCount[tpNumber];\n        }\n      });\n      const tc2t = _constraintToTriples(t2tcForThisShape, constraintList, tripleList); // e.g. [[t0, t2], [t1, t3]]\n\n      const results = regexEngine.match(db, point, constraintList, tc2t, t2tcForThisShape, neighborhood, this.semActHandler, null);\n      if (\"errors\" in results)\n        errors.push({ errors: results.errors });\n\n      const possibleRet = { type: \"ShapeTest\", node: ldify(point), shape: shapeLabel };\n      if (errors.length === 0 && Object.keys(results).length > 0) // only include .solution for non-empty pattern\n        possibleRet.solution = results;\n      if (\"semActs\" in shape) {\n        const semActErrors = this.semActHandler.dispatchAll(shape.semActs, results, possibleRet)\n        if (semActErrors.length)\n          // some semAct aborted\n          errors.push({ errors: semActErrors });\n      }\n\n      partitionErrors.push(errors)\n      if (errors.length === 0)\n        ret = possibleRet\n    }\n    // end of while(xp.next())\n\n    const missErrors = misses.map(function (miss) {\n      const t = neighborhood[miss.tripleNo];\n      return {\n        type: \"TypeMismatch\",\n        triple: {type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)},\n        constraint: constraintList[miss.constraintNo],\n        errors: miss.errors\n      };\n    });\n\n    // Report only last errors until we have a better idea.\n    const lastErrors = partitionErrors[partitionErrors.length - 1];\n    let errors = missErrors.concat(lastErrors.length === 1 ? lastErrors[0].errors : lastErrors);\n    if (errors.length > 0)\n      ret = {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors\n      };\n\n    // remove N3jsTripleToString\n    if (VERBOSE)\n      neighborhood.forEach(function (t) {\n        delete t.toString;\n      });\n\n    return addShapeAttributes(shape, ret);\n  };\n\n  function matchByPredicate (constraintList, neighborhood, outgoingLength, point, valParms) {\n    const outgoing = indexNeighborhood(neighborhood.slice(0, outgoingLength));\n    const incoming = indexNeighborhood(neighborhood.slice(outgoingLength));\n    return constraintList.reduce(function (ret, constraint, cNo) {\n\n      // subject and object depend on direction of constraint.\n      const searchSubject = constraint.inverse ? null : point;\n      const searchObject = constraint.inverse ? point : null;\n      const index = constraint.inverse ? incoming : outgoing;\n\n      // get triples matching predciate\n      const matchPredicate = index.byPredicate[constraint.predicate] ||\n            []; // empty list when no triple matches that constraint\n\n      // strip to triples matching value constraints (apart from @<someShape>)\n      const matchConstraints = _ShExValidator._triplesMatchingShapeExpr(\n        matchPredicate, constraint, valParms\n      );\n\n      matchConstraints.hits.forEach(function (evidence) {\n        const tNo = neighborhood.indexOf(evidence.triple);\n        ret.constraintList[tNo].push(cNo);\n        ret.results[cNo][tNo] = evidence.sub;\n      });\n      matchConstraints.misses.forEach(function (evidence) {\n        const tNo = neighborhood.indexOf(evidence.triple);\n        ret.misses[tNo] = {constraintNo: cNo, errors: evidence.errors};\n      });\n      return ret;\n    }, { misses: {}, results: _alist(constraintList.length), constraintList:_alist(neighborhood.length) })\n  }\n\n  function whatsMissing (tripleList, neighborhood, outgoingLength, extras) {\n    const matchedExtras = []; // triples accounted for by EXTRA\n    const misses = tripleList.constraintList.reduce(function (ret, constraints, ord) {\n      if (constraints.length === 0 &&   // matches no constraints\n          ord < outgoingLength &&       // not an incoming triple\n          ord in tripleList.misses) {   // predicate matched some constraint(s)\n        if (extras.indexOf(neighborhood[ord].predicate) !== -1) {\n          matchedExtras.push(ord);\n        } else {                        // not declared extra\n          ret.push({                    // so it's a missed triple.\n            tripleNo: ord,\n            constraintNo: tripleList.misses[ord].constraintNo,\n            errors: tripleList.misses[ord].errors\n          });\n        }\n      }\n      return ret;\n    }, []);\n    return {misses, extras: matchedExtras}\n  }\n\n  function addShapeAttributes (shape, ret) {\n    if (\"annotations\" in shape)\n      ret.annotations = shape.annotations;\n    return ret;\n  }\n\n  // Pivot to triples by constraint.\n  function _constraintToTriples (t2tc, constraintList, tripleList) {\n    return t2tc.slice().\n      reduce(function (ret, cNo, tNo) {\n        if (cNo !== \"NO_TRIPLE_CONSTRAINT\")\n          ret[cNo].push({tNo: tNo, res: tripleList.results[cNo][tNo]});\n        return ret;\n      }, _seq(constraintList.length).map(() => [])); // [length][]\n  }\n\n  this._triplesMatchingShapeExpr = function (triples, constraint, valParms) {\n    var _ShExValidator = this;\n    var misses = [];\n    var hits = [];\n    triples.forEach(function (triple) {\n      var value = constraint.inverse ? triple.subject : triple.object;\n      var sub;\n      var oldBindings = JSON.parse(JSON.stringify(_ShExValidator.semActHandler.results));\n      var errors = constraint.valueExpr === undefined ?\n          undefined :\n          (sub = _ShExValidator._errorsMatchingShapeExpr(value, constraint.valueExpr, valParms)).errors;\n      if (!errors) {\n        hits.push({triple: triple, sub: sub});\n      } else if (hits.indexOf(triple) === -1) {\n        _ShExValidator.semActHandler.results = JSON.parse(JSON.stringify(oldBindings));\n        misses.push({triple: triple, errors: errors});\n      }\n    });\n    return { hits: hits, misses: misses };\n  }\n  this._errorsMatchingShapeExpr = function (value, valueExpr, valParms) {\n    var _ShExValidator = this;\n    if (typeof valueExpr === \"string\") { // ShapeRef\n      return _ShExValidator.validate(valParms.db, value, valueExpr, valParms.tracker, valParms.seen);\n    } else if (valueExpr.type === \"NodeConstraint\") {\n      return this._errorsMatchingNodeConstraint(value, valueExpr, null);\n    } else if (valueExpr.type === \"Shape\") {\n      return _ShExValidator._validateShapeExpr(valParms.db, value, valueExpr, valParms.shapeLabel, valParms.tracker, valParms.seen)\n    } else if (valueExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = valueExpr.shapeExprs[i];\n        var sub = _ShExValidator._errorsMatchingShapeExpr(value, nested, valParms);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (valueExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = valueExpr.shapeExprs[i];\n        var sub = _ShExValidator._errorsMatchingShapeExpr(value, nested, valParms);\n        if (\"errors\" in sub)\n          return { type: \"ShapeAndFailure\", errors: [sub] };\n        else\n          passes.push(sub);\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else if (valueExpr.type === \"ShapeNot\") {\n      var sub = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExpr, valParms);\n      // return sub.errors && sub.errors.length ? {} : {\n      //   errors: [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"] };\n      var ret = Object.assign({\n        type: null,\n        focus: value\n      }, valueExpr);\n      if (sub.errors && sub.errors.length) {\n        ret.type = \"ShapeNotTest\";\n        // ret = {};\n      } else {\n        ret.type = \"ShapeNotFailure\";\n        ret.errors = [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"]\n      }\n      return ret;\n    } else {\n      throw Error(\"unknown value expression type '\" + valueExpr.type + \"'\");\n    }\n  };\n\n  /* _errorsMatchingNodeConstraint - return whether the value matches the value\n   * expression without checking shape references.\n   */\n  this._errorsMatchingNodeConstraint = function (value, valueExpr, recurse) {\n    var errors = [];\n    var label = ShExTerm.isLiteral(value) ? ShExTerm.getLiteralValue(value) :\n      ShExTerm.isBlank(value) ? value.substring(2) :\n      value;\n    var dt = ShExTerm.isLiteral(value) ? ShExTerm.getLiteralType(value) : null;\n    var numeric = integerDatatypes.indexOf(dt) !== -1 ? XSD + \"integer\" : numericDatatypes.indexOf(dt) !== -1 ? dt : undefined;\n\n    function validationError () {\n      var errorStr = Array.prototype.join.call(arguments, \"\");\n      errors.push(\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": \" + errorStr);\n      return false;\n    }\n    // if (negated) ;\n    if (false) {\n      // wildcard -- ignore\n    } else {\n      if (\"nodeKind\" in valueExpr) {\n        if ([\"iri\", \"bnode\", \"literal\", \"nonliteral\"].indexOf(valueExpr.nodeKind) === -1) {\n          validationError(\"unknown node kind '\" + valueExpr.nodeKind + \"'\");\n        }\n        if (ShExTerm.isBlank(value)) {\n          if (valueExpr.nodeKind === \"iri\" || valueExpr.nodeKind === \"literal\") {\n            validationError(\"blank node found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (ShExTerm.isLiteral(value)) {\n          if (valueExpr.nodeKind !== \"literal\") {\n            validationError(\"literal found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (valueExpr.nodeKind === \"bnode\" || valueExpr.nodeKind === \"literal\") {\n          validationError(\"iri found when \" + valueExpr.nodeKind + \" expected\");\n        }\n      }\n\n      if (valueExpr.datatype  && valueExpr.values  ) validationError(\"found both datatype and values in \"   +tripleConstraint);\n\n      if (valueExpr.datatype) {\n        if (!ShExTerm.isLiteral(value)) {\n          validationError(\"mismatched datatype: \" + value + \" is not a literal with datatype \" + valueExpr.datatype);\n        }\n        else if (ShExTerm.getLiteralType(value) !== valueExpr.datatype) {\n          validationError(\"mismatched datatype: \" + ShExTerm.getLiteralType(value) + \" !== \" + valueExpr.datatype);\n        }\n        else if (numeric) {\n          testRange(numericParsers[numeric](label, validationError), valueExpr.datatype, validationError);\n        }\n        else if (valueExpr.datatype === XSD + \"boolean\") {\n          if (label !== \"true\" && label !== \"false\" && label !== \"1\" && label !== \"0\")\n            validationError(\"illegal boolean value: \" + label);\n        }\n        else if (valueExpr.datatype === XSD + \"dateTime\") {\n          if (!label.match(/^[+-]?\\d{4}-[01]\\d-[0-3]\\dT[0-5]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?$/))\n            validationError(\"illegal dateTime value: \" + label);\n        }\n      }\n\n      if (valueExpr.values) {\n        if (ShExTerm.isLiteral(value) && valueExpr.values.reduce((ret, v) => {\n          if (ret) return true;\n          var ld = ldify(value);\n          if (v.type === \"Language\") {\n            return v.languageTag === ld.language; // @@ use equals/normalizeTest\n          }\n          if (!(typeof v === \"object\" && \"value\" in v))\n            return false;\n          return v.value === ld.value &&\n            v.type === ld.type &&\n            v.language === ld.language;\n        }, false)) {\n          // literal match\n        } else if (valueExpr.values.indexOf(value) !== -1) {\n          // trivial match\n        } else {\n          if (!(valueExpr.values.some(function (valueConstraint) {\n            if (typeof valueConstraint === \"object\" && !(\"value\" in valueConstraint)) { // isTerm me -- strike \"value\" in\n              if (!(\"type\" in valueConstraint))\n                runtimeError(\"expected \"+JSON.stringify(valueConstraint)+\" to have a 'type' attribute.\");\n              var stemRangeTypes = [\n                \"Language\",\n                \"IriStem\",      \"LiteralStem\",      \"LanguageStem\",\n                \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"\n              ];\n              if (stemRangeTypes.indexOf(valueConstraint.type) === -1)\n                runtimeError(\"expected type attribute '\"+valueConstraint.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n\n              /* expect N3.js literals with {Literal,Language}StemRange\n               *       or non-literals with IriStemRange\n               */\n              function normalizedTest (val, ref, func) {\n                if (ShExTerm.isLiteral(val)) {\n                  if ([\"LiteralStem\", \"LiteralStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(ShExTerm.getLiteralValue(val), ref);\n                  } else if ([\"LanguageStem\", \"LanguageStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(ShExTerm.getLiteralLanguage(val) || null, ref);\n                  } else {\n                    return validationError(\"literal \" + val + \" not comparable with non-literal \" + ref);\n                  }\n                } else {\n                  if ([\"IriStem\", \"IriStemRange\"].indexOf(valueConstraint.type) === -1) {\n                    return validationError(\"nonliteral \" + val + \" not comparable with literal \" + JSON.stringify(ref));\n                  } else {\n                    return func(val, ref);\n                  }\n                }\n              }\n              function startsWith (val, ref) {\n                return normalizedTest(val, ref, (l, r) => {\n                  return (valueConstraint.type === \"LanguageStem\" ||\n                          valueConstraint.type === \"LanguageStemRange\") ?\n                    // rfc4647 basic filtering\n                    l !== null && (l === r || r === \"\" || l[r.length] === \"-\") :\n                    // simple substring\n                    l.startsWith(r);\n                });\n              }\n              function equals (val, ref) {\n                return normalizedTest(val, ref, (l, r) => { return l === r; });\n              }\n\n              if (!isTerm(valueConstraint.stem)) {\n                expect(valueConstraint.stem, \"type\", \"Wildcard\");\n                // match whatever but check exclusions below\n              } else {\n                if (!(startsWith(value, valueConstraint.stem))) {\n                  return false;\n                }\n              }\n              if (valueConstraint.exclusions) {\n                return !valueConstraint.exclusions.some(function (c) {\n                  if (!isTerm(c)) {\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                    return startsWith(value, c.stem);\n                  } else {\n                    return equals(value, c);\n                  }\n                });\n              }\n              return true;\n            } else {\n              // ignore -- would have caught it above\n            }\n          }))) {\n            validationError(\"value \" + value + \" not found in set \" + JSON.stringify(valueExpr.values));\n          }\n        }\n      }\n    }\n\n    if (\"pattern\" in valueExpr) {\n      var regexp = \"flags\" in valueExpr ?\n\t  new RegExp(valueExpr.pattern, valueExpr.flags) :\n\t  new RegExp(valueExpr.pattern);\n      if (!(getLexicalValue(value).match(regexp)))\n        validationError(\"value \" + getLexicalValue(value) + \" did not match pattern \" + valueExpr.pattern);\n    }\n\n    Object.keys(stringTests).forEach(function (test) {\n      if (test in valueExpr && !stringTests[test](label, valueExpr[test])) {\n        validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n      }\n    });\n\n    Object.keys(numericValueTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric) {\n          if (!numericValueTests[test](numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n\n    Object.keys(decimalLexicalTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric === XSD + \"integer\" || numeric === XSD + \"decimal\") {\n          if (!decimalLexicalTests[test](\"\"+numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n    var ret = {\n      type: null,\n      focus: value,\n      shapeExpr: valueExpr\n    };\n    if (errors.length) {\n      ret.type = \"NodeConstraintViolation\";\n      ret.errors = errors;\n    } else {\n      ret.type = \"NodeConstraintTest\";\n    }\n    return ret;\n  };\n\n  this.semActHandler = {\n    handlers: { },\n    results: { },\n    /**\n     * Store a semantic action handler.\n     *\n     * @param {string} name - semantic action's URL.\n     * @param {object} handler - handler function.\n     *\n     * The handler object has a dispatch function is invoked with:\n     * @param {string} code - text of the semantic action.\n     * @param {object} ctx - matched triple or results subset.\n     * @param {object} extensionStorage - place where the extension writes into the result structure.\n     * @return {bool} false if the extension failed or did not accept the ctx object.\n     */\n    register: function (name, handler) {\n      this.handlers[name] = handler;\n    },\n    /**\n     * Calls all semantic actions, allowing each to write to resultsArtifact.\n     *\n     * @param {array} semActs - list of semantic actions to invoke.\n     * @return {bool} false if any result was false.\n     */\n    dispatchAll: function (semActs, ctx, resultsArtifact) {\n      var _semActHanlder = this;\n      return semActs.reduce(function (ret, semAct) {\n        if (ret.length === 0 && semAct.name in _semActHanlder.handlers) {\n          var code = \"code\" in semAct ? semAct.code : _ShExValidator.options.semActs[semAct.name];\n          var existing = \"extensions\" in resultsArtifact && semAct.name in resultsArtifact.extensions;\n          var extensionStorage = existing ? resultsArtifact.extensions[semAct.name] : {};\n          const response = _semActHanlder.handlers[semAct.name].dispatch(code, ctx, extensionStorage);\n          if (typeof response === 'boolean') {\n            if (!response)\n              ret.push({ type: \"SemActFailure\", errors: [{ type: \"BooleanSemActFailure\", code: code, ctx }] })\n          } else if (typeof response === 'object' && response.constructor === Array) {\n            if (response.length > 0)\n              ret.push({ type: \"SemActFailure\", errors: response })\n          } else {\n            throw Error(\"unsupported response from semantic action handler: \" + JSON.stringify(response))\n          }\n          if (!existing && Object.keys(extensionStorage).length > 0) {\n            if (!(\"extensions\" in resultsArtifact))\n              resultsArtifact.extensions = {};\n            resultsArtifact.extensions[semAct.name] = extensionStorage;\n          }\n          return ret;\n        }\n        return ret;\n      }, []);\n    }\n  };\n}\n\n/* _compileShapeToAST - compile a shape expression to an abstract syntax tree.\n *\n * currently tested but not used.\n */\nfunction _compileShapeToAST (expression, tripleConstraints, schema) {\n\n  function Epsilon () {\n    this.type = \"Epsilon\";\n  }\n\n  function TripleConstraint (ordinal, predicate, inverse, negated, valueExpr) {\n    this.type = \"TripleConstraint\";\n    // this.ordinal = ordinal; @@ does 1card25\n    this.inverse = !!inverse;\n    this.negated = !!negated;\n    this.predicate = predicate;\n    if (valueExpr !== undefined)\n      this.valueExpr = valueExpr;\n  }\n\n  function Choice (disjuncts) {\n    this.type = \"Choice\";\n    this.disjuncts = disjuncts;\n  }\n\n  function EachOf (conjuncts) {\n    this.type = \"EachOf\";\n    this.conjuncts = conjuncts;\n  }\n\n  function SemActs (expression, semActs) {\n    this.type = \"SemActs\";\n    this.expression = expression;\n    this.semActs = semActs;\n  }\n\n  function KleeneStar (expression) {\n    this.type = \"KleeneStar\";\n    this.expression = expression;\n  }\n\n  function _compileExpression (expr, schema) {\n    var repeated, container;\n\n    /* _repeat: map expr with a min and max cardinality to a corresponding AST with Groups and Stars.\n       expr 1 1 => expr\n       expr 0 1 => Choice(expr, Eps)\n       expr 0 3 => Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps)\n       expr 2 5 => EachOf(expr, expr, Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps))\n       expr 0 * => KleeneStar(expr)\n       expr 1 * => EachOf(expr, KleeneStar(expr))\n       expr 2 * => EachOf(expr, expr, KleeneStar(expr))\n\n       @@TODO: favor Plus over Star if Epsilon not in expr.\n    */\n    function _repeat (expr, min, max) {\n      if (min === undefined) { min = 1; }\n      if (max === undefined) { max = 1; }\n\n      if (min === 1 && max === 1) { return expr; }\n\n      var opts = max === UNBOUNDED ?\n        new KleeneStar(expr) :\n        _seq(max - min).reduce(function (ret, elt, ord) {\n          return ord === 0 ?\n            new Choice([expr, new Epsilon]) :\n            new Choice([new EachOf([expr, ret]), new Epsilon]);\n        }, undefined);\n\n      var reqd = min !== 0 ?\n        new EachOf(_seq(min).map(function (ret) {\n          return expr; // @@ something with ret\n        }).concat(opts)) : opts;\n      return reqd;\n    }\n\n    if (typeof expr === \"string\") { // Inclusion\n      var included = schema._index.tripleExprs[expr].expression;\n      return _compileExpression(included, schema);\n    }\n\n    else if (expr.type === \"TripleConstraint\") {\n      // predicate, inverse, negated, valueExpr, annotations, semActs, min, max\n      var valueExpr = \"valueExprRef\" in expr ?\n        schema.valueExprDefns[expr.valueExprRef] :\n        expr.valueExpr;\n      var ordinal = tripleConstraints.push(expr)-1;\n      var tp = new TripleConstraint(ordinal, expr.predicate, expr.inverse, expr.negated, valueExpr);\n      repeated = _repeat(tp, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"OneOf\") {\n      container = new Choice(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"EachOf\") {\n      container = new EachOf(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else throw Error(\"unexpected expr type: \" + expr.type);\n  }\n\n  return expression ? _compileExpression(expression, schema) : new Epsilon();\n}\n\n// http://stackoverflow.com/questions/9422386/lazy-cartesian-product-of-arrays-arbitrary-nested-loops\nfunction crossProduct(sets, emptyValue) {\n  var n = sets.length, carets = [], args = null;\n\n  function init() {\n    args = [];\n    for (var i = 0; i < n; i++) {\n      carets[i] = 0;\n      args[i] = sets[i].length > 0 ? sets[i][0] : emptyValue;\n    }\n  }\n\n  function next() {\n\n    // special case: crossProduct([]).next().next() returns false.\n    if (args !== null && args.length === 0)\n      return false;\n\n    if (args === null) {\n      init();\n      return true;\n    }\n    var i = n - 1;\n    carets[i]++;\n    if (carets[i] < sets[i].length) {\n      args[i] = sets[i][carets[i]];\n      return true;\n    }\n    while (carets[i] >= sets[i].length) {\n      if (i == 0) {\n        return false;\n      }\n      carets[i] = 0;\n      args[i] = sets[i].length > 0 ? sets[i][0] : emptyValue;\n      carets[--i]++;\n    }\n    args[i] = sets[i][carets[i]];\n    return true;\n  }\n\n  return {\n    next: next,\n    do: function (block, _context) { // old API\n      return block.apply(_context, args);\n    },\n    // new API because\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments#Description\n    // cautions about functions over arguments.\n    get: function () { return args; }\n  };\n}\n\n/* N3jsTripleToString - simple toString function to make N3.js's triples\n * printable.\n */\nvar N3jsTripleToString = function () {\n  function fmt (n) {\n    return ShExTerm.isLiteral(n) ?\n      [ \"http://www.w3.org/2001/XMLSchema#integer\",\n        \"http://www.w3.org/2001/XMLSchema#float\",\n        \"http://www.w3.org/2001/XMLSchema#double\"\n      ].indexOf(ShExTerm.getLiteralType(n)) !== -1 ?\n      parseInt(ShExTerm.getLiteralValue(n)) :\n      n :\n    ShExTerm.isBlank(n) ?\n      n :\n      \"<\" + n + \">\";\n  }\n  return fmt(this.subject) + \" \" + fmt(this.predicate) + \" \" + fmt(this.object) + \" .\";\n};\n\n/* indexNeighborhood - index triples by predicate\n * returns: {\n *     byPredicate: Object: mapping from predicate to triples containing that\n *                  predicate.\n *\n *     candidates: [[1,3], [0,2]]: mapping from triple to the triple constraints\n *                 it matches.  It is initialized to []. Mappings that remain an\n *                 empty set indicate a triple which didn't matching anything in\n *                 the shape.\n *\n *     misses: list to recieve value constraint failures.\n *   }\n */\nfunction indexNeighborhood (triples) {\n  return {\n    byPredicate: triples.reduce(function (ret, t) {\n      var p = t.predicate;\n      if (!(p in ret))\n        ret[p] = [];\n      ret[p].push(t);\n\n      // If in VERBOSE mode, add a nice toString to N3.js's triple objects.\n      if (VERBOSE)\n        t.toString = N3jsTripleToString;\n\n      return ret;\n    }, {}),\n    candidates: _seq(triples.length).map(function () {\n      return [];\n    }),\n    misses: []\n  };\n}\n\n/* sparqlOrder - sort triples by subject following SPARQL partial ordering.\n */\nfunction sparqlOrder (l, r) {\n  var [lprec, rprec] = [l, r].map(\n    x => ShExTerm.isBlank(x) ? 1 : ShExTerm.isLiteral(x) ? 2 : 3\n  );\n  return lprec === rprec ? l.localeCompare(r) : lprec - rprec;\n}\n\n/* Return a list of n \"\"s.\n *\n * Note that Array(n) on its own returns a \"sparse array\" so Array(n).map(f)\n * never calls f.\n */\nfunction _seq (n) {\n  return n === 0 ?\n    [] :\n    Array(n).join(\" \").split(/ /); // hahaha, javascript, you suck.\n}\n\n/* Expect property p with value v in object o\n */\nfunction expect (o, p, v) {\n  if (!(p in o))\n    runtimeError(\"expected \"+JSON.stringify(o)+\" to have a '\"+p+\"' attribute.\");\n  if (arguments.length > 2 && o[p] !== v)\n    runtimeError(\"expected \"+p+\" attribute '\"+o[p]+\"' to equal '\"+v+\"'.\");\n}\n\nfunction noop () {  }\n\nfunction runtimeError () {\n  var errorStr = Array.prototype.join.call(arguments, \"\");\n  var e = new Error(errorStr);\n  Error.captureStackTrace(e, runtimeError);\n  throw e;\n}\n\n  function _alist (len) {\n    return _seq(len).map(() => [])\n  }\n\n  return {\n    construct: ShExValidator_constructor,\n    start: Start,\n    options: InterfaceOptions\n  };\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExValidatorCjsModule;\n"
        },
        {
          "id": 33,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/eval-threaded-nerr/eval-threaded-nerr.js",
          "name": "../eval-threaded-nerr/eval-threaded-nerr.js",
          "index": 23,
          "index2": 21,
          "size": 17810,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "issuerId": 32,
          "issuerName": "../shex-validator/shex-validator.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 32,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "name": "../shex-validator/shex-validator.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 366,
            "building": 21,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 32,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
              "module": "../shex-validator/shex-validator.js",
              "moduleName": "../shex-validator/shex-validator.js",
              "type": "cjs require",
              "userRequest": "@shexjs/eval-threaded-nerr",
              "loc": "239:48-85"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "const EvalThreadedNErrCjsModule = (function () {\nconst ShExTerm = require(\"@shexjs/term\");\nconst UNBOUNDED = -1;\n\nfunction vpEngine (schema, shape, index) {\n    var outerExpression = shape.expression;\n    return {\n      match:match\n    };\n\n    function match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, semActHandler, trace) {\n\n      /*\n       * returns: list of passing or failing threads (no heterogeneous lists)\n       */\n      function validateExpr (expr, thread) {\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return validateExpr(included, thread);\n        }\n\n        var constraintNo = constraintList.indexOf(expr);\n        var min = \"min\" in expr ? expr.min : 1;\n        var max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n\n        function validateRept (type, val) {\n          var repeated = 0, errOut = false;\n          var newThreads = [thread];\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          for (; repeated < max && !errOut; ++repeated) {\n            var inner = [];\n            for (var t = 0; t < newThreads.length; ++t) {\n              var newt = newThreads[t];\n              var sub = val(newt);\n              if (sub.length > 0 && sub[0].errors.length === 0) { // all subs pass or all fail\n                sub.forEach(newThread => {\n                  var solutions =\n                      \"expression\" in newt ? newt.expression.solutions : [];\n                  if (\"solution\" in newThread)\n                    solutions = solutions.concat(newThread.solution);\n                  delete newThread.solution;\n                  newThread.expression = extend({\n                    type: type,\n                    solutions: solutions\n                  }, minmax);\n                });\n              }\n              if (sub.length === 0 /* min:0 */ || sub[0].errors.length > 0)\n                return repeated < min ? sub : newThreads;\n              else\n                inner = inner.concat(sub);\n              // newThreads.expressions.push(sub);\n            }\n            newThreads = inner;\n          }\n          if (newThreads.length > 0 && newThreads[0].errors.length === 0 && \"semActs\" in expr) {\n            var passes = [];\n            var failures = [];\n            newThreads.forEach(newThread => {\n              const semActErrors = semActHandler.dispatchAll(expr.semActs, \"???\", newThread)\n              if (semActErrors.length === 0) {\n                passes.push(newThread)\n              } else {\n                [].push.apply(newThread.errors, semActErrors);\n                failures.push(newThread);\n              }\n            });\n            newThreads = passes.length > 0 ? passes : failures;\n          }\n          return newThreads;\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          var negated = \"negated\" in expr && expr.negated || max === 0;\n          if (negated)\n            min = max = Infinity;\n          if (thread.avail[constraintNo] === undefined)\n            thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].map(pair => pair.tNo);\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          var taken = thread.avail[constraintNo].splice(0, min);\n          var passed = negated ? taken.length === 0 : taken.length >= min;\n          var ret = [];\n          var matched = thread.matched;\n          if (passed) {\n            do {\n              const passFail = taken.reduce((acc, tripleNo) => {\n                const t = neighborhood[tripleNo]\n                const tested = {\n                  type: \"TestedTriple\",\n                  subject: t.subject,\n                  predicate: t.predicate,\n                  object: ldify(t.object)\n                }\n                var hit = constraintToTripleMapping[constraintNo].find(x => x.tNo === tripleNo);\n                if (hit.res && Object.keys(hit.res).length > 0)\n                  tested.referenced = hit.res;\n                const semActErrors = thread.errors.concat(\n                  \"semActs\" in expr\n                    ? semActHandler.dispatchAll(expr.semActs, t, tested)\n                    : []\n                )\n                if (semActErrors.length > 0)\n                  acc.fail.push({tripleNo, tested, semActErrors})\n                else\n                  acc.pass.push({tripleNo, tested, semActErrors})\n                return acc\n              }, {pass: [], fail: []})\n\n\n              // return an empty solution if min card was 0\n              if (passFail.fail.length === 0) {\n                // If we didn't take anything, fall back to old errors.\n                // Could do something fancy here with a semAct registration for negative matches.\n                const totalErrors = taken.length === 0 ? thread.errors.slice() : []\n                const myThread = makeThread(passFail.pass, totalErrors)\n                ret.push(myThread);\n              } else {\n                passFail.fail.forEach(\n                  f => ret.push(makeThread([f], f.semActErrors))\n                )\n              }\n\n              function makeThread (tests, errors) {\n                return {\n                  avail: thread.avail.map(a => { // copy parent thread's avail vector\n                    return a.slice();\n                  }),\n                  errors: errors,\n                  matched: matched.concat({\n                    tNos: tests.map(p => p.tripleNo)\n                  }),\n                  expression: extend(\n                    {\n                      type: \"TripleConstraintSolutions\",\n                      predicate: expr.predicate\n                    },\n                    \"valueExpr\" in expr ? { valueExpr: expr.valueExpr } : {},\n                    \"id\" in expr ? { productionLabel: expr.id } : {},\n                    minmax,\n                    {\n                      solutions: tests.map(p => p.tested)\n                    }\n                  )\n                }\n              }\n            } while ((function () {\n              if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                // build another thread.\n                taken.push(thread.avail[constraintNo].shift());\n                return true;\n              } else {\n                // no more threads\n                return false;\n              }\n            })());\n          } else {\n            var valueExpr = null;\n            if (typeof expr.valueExpr === \"string\") { // ShapeRef\n              valueExpr = expr.valueExpr;\n              if (ShExTerm.isBlank(valueExpr))\n                valueExpr = index.shapeExprs[valueExpr];\n            } else if (expr.valueExpr) {\n              valueExpr = extend({}, expr.valueExpr)\n            }\n            ret.push({\n              avail: thread.avail,\n              errors: thread.errors.concat([\n                extend({\n                  type: negated ? \"NegatedProperty\" : \"MissingProperty\",\n                  property: expr.predicate\n                }, valueExpr ? { valueExpr: valueExpr } : {})\n              ]),\n              matched: matched\n            });\n          }\n\n          return ret;\n        }\n\n        else if (expr.type === \"OneOf\") {\n          return validateRept(\"OneOfSolutions\", (th) => {\n            var accept = null;\n            var matched = [];\n            var failed = [];\n            expr.expressions.forEach(nested => {\n              var thcopy = {\n                avail: th.avail.map(a => { return a.slice(); }),\n                errors: th.errors,\n                matched: th.matched//.slice() ever needed??\n              };\n              var sub = validateExpr(nested, thcopy);\n              if (sub[0].errors.length === 0) { // all subs pass or all fail\n                matched = matched.concat(sub);\n                sub.forEach(newThread => {\n                  var expressions =\n                      \"solution\" in thcopy ? thcopy.solution.expressions : [];\n                  if (\"expression\" in newThread) // undefined for no matches on min card:0\n                    expressions = expressions.concat([newThread.expression]);\n                  delete newThread.expression;\n                  newThread.solution = {\n                    type: \"OneOfSolution\",\n                    expressions: expressions\n                  };\n                });\n              } else\n                failed = failed.concat(sub);\n            });\n            return matched.length > 0 ? matched : failed;\n          });\n        }\n\n        else if (expr.type === \"EachOf\") {\n          return homogenize(validateRept(\"EachOfSolutions\", (th) => {\n            // Iterate through nested expressions, exprThreads starts as [th].\n            return expr.expressions.reduce((exprThreads, nested) => {\n              // Iterate through current thread list composing nextThreads.\n              // Consider e.g.\n              // <S1> { <p1> . | <p2> .; <p3> . } / { <x> <p2> 2; <p3> 3 } (should pass)\n              // <S1> { <p1> .; <p2> . }          / { <s1> <p1> 1 }        (should fail)\n              return homogenize(exprThreads.reduce((nextThreads, exprThread) => {\n                var sub = validateExpr(nested, exprThread);\n                // Move newThread.expression into a hierarchical solution structure.\n                sub.forEach(newThread => {\n                  if (newThread.errors.length === 0) {\n                    var expressions =\n                        \"solution\" in exprThread ? exprThread.solution.expressions : [];\n                    if (\"expression\" in newThread) // undefined for no matches on min card:0\n                      expressions = expressions.concat([newThread.expression]);\n                    // console.warn(threadMatched(newThread), \" vs \", exprMatched(expressions));\n                    delete newThread.expression;\n                    newThread.solution = {\n                      type: \"EachOfSolution\",\n                      expressions: expressions // exprThread.expression + newThread.expression\n                    };\n                  }\n                });\n                return nextThreads.concat(sub);\n              }, []));\n            }, [th]);\n          }));\n        }\n\n        runtimeError(\"unexpected expr type: \" + expr.type);\n\n        function homogenize (list) {\n          return list.reduce((acc, elt) => {\n            if (elt.errors.length === 0) {\n              if (acc.errors) {\n                return { errors: false, l: [elt] };\n              } else {\n                return { errors: false, l: acc.l.concat(elt) };\n              }\n            } else {\n              if (acc.errors) {\n                return { errors: true, l: acc.l.concat(elt) };\n              } else {\n                return acc; }\n            }\n          }, {errors: true, l: []}).l;\n        }\n      }\n\n      var startingThread = {\n        avail:[],   // triples remaining by constraint number\n        matched:[], // triples matched in this thread\n        errors:[]   // errors encounted\n      };\n      if (!outerExpression)\n        return { }; // vapid match if no expression\n      var ret = validateExpr(outerExpression, startingThread);\n      // console.log(JSON.stringify(ret));\n      // note: don't return if ret.length === 1 because it might fail the unmatchedTriples test.\n      var longerChosen =\n          ret.reduce((ret, elt) => {\n            if (elt.errors.length > 0)\n              return ret;              // early return\n            var unmatchedTriples = {};\n            // Collect triples assigned to some constraint.\n            Object.keys(tripleToConstraintMapping).forEach(k => {\n              if (tripleToConstraintMapping[k] !== \"NO_TRIPLE_CONSTRAINT\")\n                unmatchedTriples[k] = tripleToConstraintMapping[k];\n            });\n            // Removed triples matched in this thread.\n            elt.matched.forEach(m => {\n              m.tNos.forEach(t => {\n                delete unmatchedTriples[t];\n              });\n            });\n            // Remaining triples are unaccounted for.\n            Object.keys(unmatchedTriples).forEach(t => {\n              elt.errors.push({\n                type: \"ExcessTripleViolation\",\n                triple: neighborhood[t],\n                constraint: constraintList[unmatchedTriples[t]]\n              });\n            });\n            return ret !== null ? ret : // keep first solution\n            // Accept thread with no unmatched triples.\n            Object.keys(unmatchedTriples).length > 0 ? null : elt;\n          }, null);\n      return longerChosen !== null ?\n        finish(longerChosen.expression, constraintList,\n               neighborhood, semActHandler) :\n        ret.length > 1 ? {\n          type: \"PossibleErrors\",\n          errors: ret.reduce((all, e) => {\n            return all.concat([e.errors]);\n          }, [])\n        } : ret[0];\n    }\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function finish (fromValidatePoint, constraintList, neighborhood, semActHandler) {\n      function _dive (solns) {\n        if (solns.type === \"OneOfSolutions\" ||\n            solns.type === \"EachOfSolutions\") {\n          solns.solutions.forEach(s => {\n            s.expressions.forEach(e => {\n              _dive(e);\n            });\n          });\n        } else if (solns.type === \"TripleConstraintSolutions\") {\n          solns.solutions = solns.solutions.map(x => {\n            if (x.type === \"TestedTriple\") // already done\n              return x; // c.f. validation/3circularRef1_pass-open\n            var t = neighborhood[x.tripleNo];\n            var expr = constraintList[x.constraintNo];\n            var ret = {\n              type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)\n            };\n            function diver (focus, shapeLabel, dive) {\n              var sub = dive(focus, shapeLabel);\n              if (\"errors\" in sub) {\n                // console.dir(sub);\n                var err = {\n                  type: \"ReferenceError\", focus: focus,\n                  shape: shapeLabel\n                };\n                if (typeof shapeLabel === \"string\" && ShExTerm.isBlank(shapeLabel))\n                  err.referencedShape = shape;\n                err.errors = sub;\n                return [err];\n              }\n              if ((\"solution\" in sub || \"solutions\" in sub)&& Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                  sub.type === \"Recursion\")\n                ret.referenced = sub; // !!! needs to aggregate errors and solutions\n              return [];\n            }\n            function diveRecurse (focus, shapeLabel) {\n              return diver(focus, shapeLabel, recurse);\n            }\n            function diveDirect (focus, shapeLabel) {\n              return diver(focus, shapeLabel, direct);\n            }\n            var subErrors = \"valueExpr\" in expr ?\n                checkValueExpr(expr.inverse ? t.subject : t.object, expr.valueExpr, diveRecurse, diveDirect) :\n                [];\n            if (subErrors.length === 0 && \"semActs\" in expr)\n              [].push.apply(subErrors, semActHandler.dispatchAll(expr.semActs, t, ret))\n            if (subErrors.length > 0) {\n              fromValidatePoint.errors = fromValidatePoint.errors || [];\n              fromValidatePoint.errors = fromValidatePoint.errors.concat(subErrors);\n            }\n            return ret;\n          });\n        } else {\n          throw Error(\"unexpected expr type in \" + JSON.stringify(solns));\n        }\n      }\n      if (Object.keys(fromValidatePoint).length > 0) // guard against {}\n        _dive(fromValidatePoint);\n      if (\"semActs\" in shape)\n        fromValidatePoint.semActs = shape.semActs;\n      return fromValidatePoint;\n    }\n  }\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: N3Util.getLiteralValue(term) };\n          var dt = N3Util.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = N3Util.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\nreturn {\n  name: \"eval-threaded-nerr\",\n  description: \"emulation of regular expression engine with error permutations\",\n  compile: vpEngine\n};\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = EvalThreadedNErrCjsModule;\n"
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "index": 24,
          "index2": 47,
          "size": 11297,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 22,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            }
          ],
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 22,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/api",
              "loc": "8:20-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExLoader** return promise to load ShExC, ShExJ and N3 (Turtle) files.\n\nconst ShExApiCjsModule = function (config) {\n\n  const ShExUtil = require(\"@shexjs/util\");\n  const ShExParser = require(\"@shexjs/parser\");\n\n  const api = { load: LoadPromise, loadExtensions: LoadExtensions, GET: GET, loadShExImports_NotUsed: loadShExImports_NotUsed };\n  return api\n  \n  async function GET (url, mediaType) {\n    var m;\n    return (m = url.match(\"^data:([^,]+),(.*)$\"))\n      ? Promise.resolve({text: m[2], url: m[0]}) // Read from data: URL\n      : (url.match(\"^(blob:)?[a-z]+://.\"))\n      ? myHttpRequest(url, mediaType) // whatever fetch handles\n      : (() => { throw Error(`Don't know how to fetch ${url}`) })()\n\n    async function myHttpRequest(url, mediaType) {\n      if (typeof config.fetch !== \"function\")\n        throw Error(`Unable to fetch ${url} with fetch=${config.fetch}`)\n      let resp\n      try {\n        resp = await config.fetch(url, {\n          headers: {\n            'Accept': 'text/shex,text/turtle,*/*'\n          }\n        })\n      } catch (e) {\n        // DNS failure\n        // no route to host\n        // connection refused\n        throw Error(`GET <${url}> network failure: ${e.message}`)\n      }\n      if (!resp.ok)\n        throw Error(`GET <${url}> failed: ${resp.status} ${resp.statusText}`)\n      const text = await resp.text()\n      return {text, url}\n    }\n  }\n\n  function loadList (src, metaList, mediaType, parserWrapper, target, options, loadImports) {\n    return src.map(\n      async p =>\n        typeof p === \"object\" ? mergeSchema(p) : await loadParseMergeSchema(p)\n    )\n\n    async function mergeSchema (obj) {\n      var meta = addMeta(obj.url, mediaType)\n      try {\n        ShExUtil.merge(target, obj.schema, true, true)\n        meta._prefixes = target._prefixes || {}\n        meta.base = target._base\n        loadImports(obj.schema)\n        return [mediaType, obj.url]\n      } catch (e) {\n        var e2 = Error(\"error merging schema object \" + obj.schema + \": \" + e)\n        e2.stack = e.stack\n        throw e2\n      }\n    }\n\n    async function loadParseMergeSchema (p) {\n      return api.GET(p, mediaType).then(function (loaded) {\n        return parserWrapper(loaded.text, mediaType, loaded.url, target,\n                             addMeta(loaded.url, mediaType), options, loadImports)\n      })\n    }\n\n    function addMeta (url, mediaType) {\n      var meta = {\n        mediaType: mediaType,\n        url: url,\n        base: url,\n        prefixes: {}\n      }\n      metaList.push(meta)\n      return meta\n    }\n  }\n\n  /* LoadPromise - load shex and json files into a single Schema and turtle into\n   * a graph (Data).\n   */\n  async function LoadPromise (shex, json, turtle, jsonld, schemaOptions = {}, dataOptions = {}) {\n    var returns = {\n      schema: ShExUtil.emptySchema(),\n      data: new config.rdfjs.Store(),\n      schemaMeta: [],\n      dataMeta: []\n    }\n    var promises = []\n    var schemasSeen = shex.concat(json).map(p => {\n      // might be already loaded objects with a url property.\n      return typeof p === \"object\" ? p.url : p\n    })\n    var transform = null\n    if (schemaOptions && \"iriTransform\" in schemaOptions) {\n      transform = schemaOptions.iriTransform\n      delete schemaOptions.iriTransform\n    }\n\n    var allLoaded = DynamicPromise()\n    function loadImports (schema) {\n      if (!(\"imports\" in schema))\n        return schema\n      if (schemaOptions.keepImports) {\n        return schema\n      }\n      var ret = Object.assign({}, schema)\n      var imports = ret.imports\n      delete ret.imports\n      schema.imports.map(function (i) {\n        return transform ? transform(i) : i\n      }).filter(function (i) {\n        return schemasSeen.indexOf(i) === -1\n      }).map(i => {\n        schemasSeen.push(i)\n        allLoaded.add(api.GET(i).then(function (loaded) {\n          var meta = {\n            // mediaType: mediaType,\n            url: loaded.url,\n            base: loaded.url,\n            prefixes: {}\n          }\n          // metaList.push(meta)\n          return parseShExC(loaded.text, \"text/shex\", loaded.url,\n                            returns.schema, meta, schemaOptions, loadImports)\n        })); // addAfter would be after invoking schema.\n      })\n      return ret\n    }\n\n    // gather all the potentially remote inputs\n    // If there's a termResolver,\n    if (schemaOptions && \"termResolver\" in schemaOptions) {\n      returns.resolver = new config.rdfjs.Store()\n      returns.resolverMeta = []\n      // load the resolver then the schema sources,\n      promises = [Promise.all(loadList(schemaOptions.termResolver, returns.resolverMeta, \"text/turtle\",\n                                       parseTurtle, returns.resolver, dataOptions)).\n                  then(function (x) {\n                    return Promise.all(loadList(shex, returns.schemaMeta, \"text/shex\",\n                                                parseShExC, returns.schema, schemaOptions, loadImports))\n                  })]\n      schemaOptions.termResolver = ShExParser.dbTermResolver(returns.resolver)\n    } else {\n      // else just load the schema sources.\n      promises = loadList(shex, returns.schemaMeta, \"text/shex\",\n                          parseShExC, returns.schema, schemaOptions, loadImports)\n    }\n    promises = promises.\n      concat(loadList(json, returns.schemaMeta, \"text/json\",\n                      parseShExJ, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(turtle, returns.dataMeta, \"text/turtle\",\n                      parseTurtle, returns.data, dataOptions)).\n      concat(loadList(jsonld, returns.dataMeta, \"application/ld+json\",\n                      parseJSONLD, returns.data, dataOptions))\n    return allLoaded.all(promises).then(function (resources) {\n      if (returns.schemaMeta.length > 0)\n        ShExUtil.isWellDefined(returns.schema)\n      return returns\n    })\n  }\n\n  function DynamicPromise () {\n    var promises = []\n    var results = []\n    var completedPromises = 0\n    var resolveSelf, rejectSelf\n    var self = new Promise(function (resolve, reject) {\n      resolveSelf = resolve; rejectSelf = reject\n    })\n    self.all = function (pz) {\n      pz.forEach(function (promise, index) {\n        promises.push(promise)\n        addThen(promise, index)\n      })\n      return self\n    }\n    self.add = function (promise) {\n      promises.push(promise)\n      addThen(promise, promises.length - 1)\n      return self\n    }\n    return self\n\n    function addThen (promise, index) {\n      promise.then(function (value) {\n        results[index] = value\n        ++completedPromises\n        if(completedPromises === promises.length) {\n          resolveSelf(results)\n        }\n      }).catch(function (error) {\n        rejectSelf(error)\n      })\n    }\n  }\n\n  function parseShExC (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    var parser = schemaOptions && \"parser\" in schemaOptions ?\n        schemaOptions.parser :\n        ShExParser.construct(url, {}, schemaOptions)\n    try {\n      var s = parser.parse(text)\n      // !! horrible hack until I set a variable to know if there's a BASE.\n      if (s.base === url) delete s.base\n      meta.prefixes = s._prefixes || {}\n      meta.base = s._base || meta.base\n      ShExUtil.merge(schema, loadImports(s), false, true)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      e.message = \"error parsing ShEx \" + url + \": \" + e.message\n      return Promise.reject(e)\n    }\n  }\n\n  function loadShExImports_NotUsed (from, parser, transform) {\n    var schemasSeen = [from]\n    var ret = { type: \"Schema\" }\n    return api.GET(from).then(load999Imports).then(function () {\n      ShExUtil.isWellDefined(ret)\n      return ret\n    })\n    function load999Imports (loaded) {\n      var schema = parser.parse(loaded.text)\n      var imports = schema.imports\n      delete schema.imports\n      ShExUtil.merge(ret, schema, false, true)\n      if (imports) {\n        var rest = imports\n            .map(function (i) {\n              return transform ? transform(i) : i\n            }).\n            filter(function (i) {\n              return schemasSeen.indexOf(i) === -1\n            })\n        return Promise.all(rest.map(i => {\n          schemasSeen.push(i)\n          return api.GET(i).then(load999Imports)\n        })).then(a => {\n          return null\n        })\n      } else {\n        return null\n      }\n    }\n  }\n\n  function parseShExJ (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    try {\n      var s = ShExUtil.ShExJtoAS(JSON.parse(text))\n      ShExUtil.merge(schema, s, true, true)\n      meta.prefixes = schema._prefixes\n      meta.base = schema.base\n      loadImports(s)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      var e2 = Error(\"error parsing JSON \" + url + \": \" + e)\n      // e2.stack = e.stack\n      return Promise.reject(e2)\n    }\n  }\n\n  function parseTurtle (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"}).\n        parse(text,\n              function (error, triple, prefixes) {\n                if (prefixes) {\n                  meta.prefixes = prefixes\n                  // data.addPrefixes(prefixes)\n                }\n                if (error) {\n                  reject(\"error parsing \" + url + \": \" + error)\n                } else if (triple) {\n                  data.addQuad(triple)\n                } else {\n                  meta.base = this._base\n                  resolve([mediaType, url])\n                }\n              })\n    })\n  }\n\n  /* parseTurtle999 - a variant of parseTurtle with no callback.\n   * so, which is \"better\"?\n   */\n  function parseTurtle999 (text, mediaType, url, data, meta, dataOptions) {\n    try {\n      var p = new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"})\n      var triples = p.parse(text)\n      meta.prefixes = p._prefixes\n      meta.base = p._base\n      data.addPrefixes(p._prefixes)\n      data.addTriples(triples)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      return Promise.reject(Error(\"error parsing \" + url + \": \" + e))\n    }\n  }\n\n  function parseJSONLD (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      var struct = JSON.parse(text)\n      config.jsonld.toRDF(struct, {format: \"application/nquads\", base: url}, function (lderr, nquads) {\n        if (lderr) {\n          reject(\"error parsing JSON-ld \" + url + \": \" + lderr)\n        } else {\n          meta.prefixes = {}; // @@ take from @context?\n          meta.base = url;    // @@ take from @context.base? (or vocab?)\n          resolve(parseTurtle(nquads, mediaType, url, data, meta))\n        }\n      })\n    })\n  }\n\n  function LoadExtensions (globs) {\n    return globs.reduce(\n      (list, glob) =>\n        list.concat(require(\"glob\").glob.sync(glob))\n      , []).\n      reduce(function (ret, path) {\n        try {\n\t  var t = require(path)\n\t  ret[t.url] = t\n\t  return ret\n        } catch (e) {\n\t  console.warn(\"ShEx extension \\\"\" + moduleDir + \"\\\" not loadable: \" + e)\n\t  return ret\n        }\n      }, {})\n  }\n\n}\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExApiCjsModule\n"
        },
        {
          "id": 35,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "index": 26,
          "index2": 23,
          "size": 228557,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "issuerId": 15,
          "issuerName": "../shex-parser/shex-parser.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 15,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 10,
            "building": 166,
            "dependencies": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 15,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "module": "../shex-parser/shex-parser.js",
              "moduleName": "../shex-parser/shex-parser.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExJison",
              "loc": "4:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShExJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[7,19,20,21,22,24,25,32,195,217,218],$V1=[1,27],$V2=[1,31],$V3=[1,26],$V4=[1,30],$V5=[1,29],$V6=[2,12],$V7=[2,13],$V8=[2,14],$V9=[2,15],$Va=[7,19,20,21,22,24,25,32,217,218],$Vb=[1,37],$Vc=[1,40],$Vd=[1,39],$Ve=[2,24],$Vf=[2,25],$Vg=[20,22,28,71,73,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vh=[2,63],$Vi=[1,52],$Vj=[1,53],$Vk=[1,54],$Vl=[20,22,28,41,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vm=[2,241],$Vn=[2,242],$Vo=[1,56],$Vp=[1,59],$Vq=[1,58],$Vr=[2,263],$Vs=[2,264],$Vt=[2,271],$Vu=[2,265],$Vv=[2,266],$Vw=[2,16],$Vx=[2,18],$Vy=[2,19],$Vz=[2,22],$VA=[20,22,29,217],$VB=[2,20],$VC=[20,22,28,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$VD=[1,80],$VE=[2,32],$VF=[2,33],$VG=[2,34],$VH=[121,127,129,190,221],$VI=[2,141],$VJ=[1,106],$VK=[1,108],$VL=[1,102],$VM=[1,92],$VN=[1,97],$VO=[1,98],$VP=[1,99],$VQ=[1,105],$VR=[1,112],$VS=[1,113],$VT=[1,114],$VU=[1,115],$VV=[1,116],$VW=[1,117],$VX=[1,118],$VY=[1,119],$VZ=[1,120],$V_=[1,109],$V$=[1,107],$V01=[2,64],$V11=[1,122],$V21=[1,123],$V31=[1,124],$V41=[1,130],$V51=[1,131],$V61=[53,55],$V71=[2,93],$V81=[2,94],$V91=[195,197],$Va1=[1,146],$Vb1=[1,149],$Vc1=[1,148],$Vd1=[2,17],$Ve1=[1,162],$Vf1=[1,165],$Vg1=[1,164],$Vh1=[7,19,20,21,22,24,25,32,53,217,218],$Vi1=[2,49],$Vj1=[7,19,20,21,22,24,25,32,53,55,217,218],$Vk1=[2,56],$Vl1=[2,38],$Vm1=[2,71],$Vn1=[2,76],$Vo1=[2,73],$Vp1=[1,192],$Vq1=[1,193],$Vr1=[1,194],$Vs1=[1,197],$Vt1=[1,200],$Vu1=[2,79],$Vv1=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,191,195,217,218,221],$Vw1=[2,97],$Vx1=[7,19,20,21,22,24,25,32,53,55,191,195,217,218],$Vy1=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,191,195,217,218],$Vz1=[7,19,20,21,22,24,25,32,53,55,81,82,83,103,104,105,106,121,127,129,190,191,195,217,218,221],$VA1=[2,110],$VB1=[2,109],$VC1=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,114,115,116,117,118,119,191,195,217,218],$VD1=[2,104],$VE1=[2,103],$VF1=[1,215],$VG1=[1,217],$VH1=[1,219],$VI1=[1,218],$VJ1=[2,114],$VK1=[2,115],$VL1=[2,116],$VM1=[2,112],$VN1=[2,240],$VO1=[20,22,29,73,83,102,110,111,166,186,206,207,208,209,210,211,212,213,214,215,217],$VP1=[2,185],$VQ1=[7,19,20,21,22,24,25,32,53,55,114,115,116,117,118,119,191,195,217,218],$VR1=[2,106],$VS1=[2,120],$VT1=[2,267],$VU1=[2,268],$VV1=[2,269],$VW1=[2,270],$VX1=[1,227],$VY1=[1,228],$VZ1=[1,229],$V_1=[1,230],$V$1=[102,110,111,208,209,210,211],$V02=[2,37],$V12=[2,41],$V22=[2,44],$V32=[2,47],$V42=[2,95],$V52=[2,232],$V62=[2,233],$V72=[2,234],$V82=[1,279],$V92=[1,281],$Va2=[1,275],$Vb2=[1,265],$Vc2=[1,270],$Vd2=[1,271],$Ve2=[1,272],$Vf2=[1,278],$Vg2=[1,282],$Vh2=[1,280],$Vi2=[1,286],$Vj2=[1,287],$Vk2=[1,288],$Vl2=[1,294],$Vm2=[1,295],$Vn2=[2,23],$Vo2=[2,26],$Vp2=[2,55],$Vq2=[2,62],$Vr2=[2,67],$Vs2=[2,70],$Vt2=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,217,218],$Vu2=[2,89],$Vv2=[2,90],$Vw2=[2,35],$Vx2=[2,39],$Vy2=[2,75],$Vz2=[2,72],$VA2=[2,77],$VB2=[2,74],$VC2=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,191,195,217,218],$VD2=[1,340],$VE2=[1,348],$VF2=[1,349],$VG2=[1,350],$VH2=[1,356],$VI2=[1,357],$VJ2=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,195,217,218,221],$VK2=[2,230],$VL2=[7,19,20,21,22,24,25,32,53,55,195,217,218],$VM2=[1,365],$VN2=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,195,217,218],$VO2=[2,108],$VP2=[2,113],$VQ2=[2,100],$VR2=[1,375],$VS2=[2,101],$VT2=[2,102],$VU2=[2,107],$VV2=[20,22,71,162,166,201,217],$VW2=[2,169],$VX2=[2,143],$VY2=[1,390],$VZ2=[1,389],$V_2=[1,395],$V$2=[1,399],$V03=[1,398],$V13=[1,397],$V23=[1,404],$V33=[1,406],$V43=[1,407],$V53=[1,403],$V63=[1,405],$V73=[20,22,217,218],$V83=[1,419],$V93=[1,425],$Va3=[1,414],$Vb3=[1,418],$Vc3=[1,428],$Vd3=[1,429],$Ve3=[1,430],$Vf3=[1,411],$Vg3=[1,417],$Vh3=[1,431],$Vi3=[1,432],$Vj3=[1,437],$Vk3=[1,438],$Vl3=[1,439],$Vm3=[1,440],$Vn3=[1,433],$Vo3=[1,434],$Vp3=[1,435],$Vq3=[1,436],$Vr3=[1,424],$Vs3=[2,119],$Vt3=[2,124],$Vu3=[2,126],$Vv3=[2,127],$Vw3=[2,128],$Vx3=[2,255],$Vy3=[2,256],$Vz3=[2,257],$VA3=[2,258],$VB3=[2,125],$VC3=[2,36],$VD3=[2,45],$VE3=[2,42],$VF3=[2,48],$VG3=[2,43],$VH3=[1,472],$VI3=[2,46],$VJ3=[1,508],$VK3=[1,542],$VL3=[1,543],$VM3=[1,544],$VN3=[1,547],$VO3=[2,50],$VP3=[2,57],$VQ3=[2,66],$VR3=[2,68],$VS3=[2,78],$VT3=[53,55,72],$VU3=[1,607],$VV3=[53,55,72,81,82,83,121,127,129,190,191,195,221],$VW3=[53,55,72,191,195],$VX3=[53,55,72,98,99,100,103,104,105,106,191,195],$VY3=[53,55,72,81,82,83,103,104,105,106,121,127,129,190,191,195,221],$VZ3=[53,55,72,103,104,105,106,114,115,116,117,118,119,191,195],$V_3=[53,55,72,114,115,116,117,118,119,191,195],$V$3=[53,72],$V04=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,217,218,221],$V14=[2,99],$V24=[2,98],$V34=[2,229],$V44=[1,649],$V54=[1,651],$V64=[1,652],$V74=[1,648],$V84=[1,650],$V94=[2,96],$Va4=[2,136],$Vb4=[2,111],$Vc4=[2,105],$Vd4=[2,117],$Ve4=[2,118],$Vf4=[2,148],$Vg4=[2,149],$Vh4=[1,669],$Vi4=[2,150],$Vj4=[123,137],$Vk4=[2,155],$Vl4=[2,156],$Vm4=[2,158],$Vn4=[1,672],$Vo4=[1,673],$Vp4=[20,22,166,201,217],$Vq4=[2,177],$Vr4=[1,681],$Vs4=[123,137,142,143],$Vt4=[2,167],$Vu4=[20,22,121,127,129,190,217,218,221],$Vv4=[20,22,121,127,129,166,190,201,217,221],$Vw4=[2,238],$Vx4=[2,239],$Vy4=[2,184],$Vz4=[1,716],$VA4=[20,22,29,73,83,102,110,111,166,179,186,206,207,208,209,210,211,212,213,214,215,217],$VB4=[2,235],$VC4=[2,236],$VD4=[2,237],$VE4=[2,248],$VF4=[2,251],$VG4=[2,245],$VH4=[2,246],$VI4=[2,247],$VJ4=[2,253],$VK4=[2,254],$VL4=[2,259],$VM4=[2,260],$VN4=[2,261],$VO4=[2,262],$VP4=[20,22,29,73,83,102,110,111,113,166,179,186,206,207,208,209,210,211,212,213,214,215,217],$VQ4=[1,748],$VR4=[1,795],$VS4=[1,850],$VT4=[1,860],$VU4=[1,896],$VV4=[1,932],$VW4=[2,69],$VX4=[53,55,72,103,104,105,106,191,195],$VY4=[53,55,72,81,82,83,121,127,129,190,195,221],$VZ4=[53,55,72,195],$V_4=[1,954],$V$4=[53,55,72,98,99,100,103,104,105,106,195],$V05=[1,964],$V15=[1,1001],$V25=[1,1037],$V35=[2,231],$V45=[1,1048],$V55=[1,1050],$V65=[1,1051],$V75=[1,1049],$V85=[20,22,102,110,111,166,206,207,208,209,210,211,212,213,214,215,217],$V95=[1,1074],$Va5=[1,1076],$Vb5=[1,1077],$Vc5=[1,1075],$Vd5=[1,1100],$Ve5=[1,1102],$Vf5=[1,1103],$Vg5=[1,1101],$Vh5=[2,137],$Vi5=[2,151],$Vj5=[2,153],$Vk5=[2,157],$Vl5=[2,159],$Vm5=[2,160],$Vn5=[2,164],$Vo5=[2,166],$Vp5=[2,171],$Vq5=[2,172],$Vr5=[1,1132],$Vs5=[1,1134],$Vt5=[1,1135],$Vu5=[1,1131],$Vv5=[1,1133],$Vw5=[1,1145],$Vx5=[2,225],$Vy5=[2,243],$Vz5=[2,244],$VA5=[1,1147],$VB5=[1,1149],$VC5=[1,1151],$VD5=[20,22,29,73,83,102,110,111,166,180,186,206,207,208,209,210,211,212,213,214,215,217],$VE5=[1,1155],$VF5=[1,1161],$VG5=[1,1164],$VH5=[1,1165],$VI5=[1,1166],$VJ5=[1,1154],$VK5=[1,1167],$VL5=[1,1168],$VM5=[1,1173],$VN5=[1,1174],$VO5=[1,1175],$VP5=[1,1176],$VQ5=[1,1169],$VR5=[1,1170],$VS5=[1,1171],$VT5=[1,1172],$VU5=[1,1160],$VV5=[2,249],$VW5=[2,252],$VX5=[2,129],$VY5=[1,1210],$VZ5=[1,1216],$V_5=[1,1248],$V$5=[1,1254],$V06=[1,1313],$V16=[1,1360],$V26=[53,55,72,81,82,83,121,127,129,190,221],$V36=[53,55,72,98,99,100,103,104,105,106],$V46=[1,1436],$V56=[1,1483],$V66=[2,226],$V76=[2,227],$V86=[2,228],$V96=[7,19,20,21,22,24,25,32,53,55,81,82,83,113,121,127,129,190,191,195,217,218,221],$Va6=[7,19,20,21,22,24,25,32,53,55,113,191,195,217,218],$Vb6=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,113,191,195,217,218],$Vc6=[2,154],$Vd6=[2,152],$Ve6=[2,161],$Vf6=[2,165],$Vg6=[2,162],$Vh6=[2,163],$Vi6=[20,22,28,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vj6=[1,1543],$Vk6=[72,137],$Vl6=[1,1546],$Vm6=[1,1547],$Vn6=[72,137,142,143],$Vo6=[2,208],$Vp6=[1,1563],$Vq6=[20,22,29,73,83,102,110,111,166,179,180,186,206,207,208,209,210,211,212,213,214,215,217],$Vr6=[20,22,29,73,83,102,110,111,113,166,179,180,186,206,207,208,209,210,211,212,213,214,215,217],$Vs6=[2,250],$Vt6=[1,1601],$Vu6=[1,1667],$Vv6=[1,1669],$Vw6=[1,1670],$Vx6=[1,1668],$Vy6=[1,1693],$Vz6=[1,1695],$VA6=[1,1696],$VB6=[1,1694],$VC6=[1,1719],$VD6=[1,1721],$VE6=[1,1722],$VF6=[1,1720],$VG6=[1,1766],$VH6=[1,1772],$VI6=[1,1804],$VJ6=[1,1810],$VK6=[1,1825],$VL6=[1,1827],$VM6=[1,1828],$VN6=[1,1826],$VO6=[1,1851],$VP6=[1,1853],$VQ6=[1,1854],$VR6=[1,1852],$VS6=[1,1877],$VT6=[1,1879],$VU6=[1,1880],$VV6=[1,1878],$VW6=[1,1924],$VX6=[1,1930],$VY6=[1,1962],$VZ6=[1,1968],$V_6=[123,137,142,143,191,195],$V$6=[2,174],$V07=[1,1986],$V17=[1,1987],$V27=[1,1988],$V37=[1,1989],$V47=[123,137,142,143,158,159,160,161,191,195],$V57=[2,40],$V67=[53,123,137,142,143,158,159,160,161,191,195],$V77=[2,53],$V87=[53,55,123,137,142,143,158,159,160,161,191,195],$V97=[2,60],$Va7=[1,2018],$Vb7=[1,2059],$Vc7=[1,2092],$Vd7=[1,2094],$Ve7=[1,2095],$Vf7=[1,2093],$Vg7=[1,2118],$Vh7=[1,2120],$Vi7=[1,2121],$Vj7=[1,2119],$Vk7=[1,2145],$Vl7=[1,2147],$Vm7=[1,2148],$Vn7=[1,2146],$Vo7=[1,2172],$Vp7=[1,2174],$Vq7=[1,2175],$Vr7=[1,2173],$Vs7=[1,2198],$Vt7=[1,2200],$Vu7=[1,2201],$Vv7=[1,2199],$Vw7=[1,2225],$Vx7=[1,2227],$Vy7=[1,2228],$Vz7=[1,2226],$VA7=[1,2300],$VB7=[53,55,72,81,82,83,113,121,127,129,190,191,195,221],$VC7=[53,55,72,113,191,195],$VD7=[53,55,72,98,99,100,103,104,105,106,113,191,195],$VE7=[1,2414],$VF7=[2,175],$VG7=[2,179],$VH7=[2,180],$VI7=[2,181],$VJ7=[2,182],$VK7=[2,51],$VL7=[2,58],$VM7=[2,65],$VN7=[2,85],$VO7=[2,81],$VP7=[2,87],$VQ7=[1,2497],$VR7=[2,84],$VS7=[53,55,81,82,83,103,104,105,106,121,123,127,129,137,142,143,158,159,160,161,190,191,195,221],$VT7=[53,55,81,82,83,121,123,127,129,137,142,143,158,159,160,161,190,191,195,221],$VU7=[53,55,103,104,105,106,114,115,116,117,118,119,123,137,142,143,158,159,160,161,191,195],$VV7=[53,55,98,99,100,103,104,105,106,123,137,142,143,158,159,160,161,191,195],$VW7=[2,91],$VX7=[2,92],$VY7=[53,55,114,115,116,117,118,119,123,137,142,143,158,159,160,161,191,195],$VZ7=[1,2551],$V_7=[1,2557],$V$7=[1,2640],$V08=[1,2673],$V18=[1,2675],$V28=[1,2676],$V38=[1,2674],$V48=[1,2699],$V58=[1,2701],$V68=[1,2702],$V78=[1,2700],$V88=[1,2726],$V98=[1,2728],$Va8=[1,2729],$Vb8=[1,2727],$Vc8=[1,2753],$Vd8=[1,2755],$Ve8=[1,2756],$Vf8=[1,2754],$Vg8=[1,2779],$Vh8=[1,2781],$Vi8=[1,2782],$Vj8=[1,2780],$Vk8=[1,2806],$Vl8=[1,2808],$Vm8=[1,2809],$Vn8=[1,2807],$Vo8=[1,2853],$Vp8=[1,2886],$Vq8=[1,2888],$Vr8=[1,2889],$Vs8=[1,2887],$Vt8=[1,2912],$Vu8=[1,2914],$Vv8=[1,2915],$Vw8=[1,2913],$Vx8=[1,2939],$Vy8=[1,2941],$Vz8=[1,2942],$VA8=[1,2940],$VB8=[1,2966],$VC8=[1,2968],$VD8=[1,2969],$VE8=[1,2967],$VF8=[1,2992],$VG8=[1,2994],$VH8=[1,2995],$VI8=[1,2993],$VJ8=[1,3019],$VK8=[1,3021],$VL8=[1,3022],$VM8=[1,3020],$VN8=[123,137,142,143,195],$VO8=[1,3044],$VP8=[2,54],$VQ8=[2,61],$VR8=[2,80],$VS8=[2,86],$VT8=[2,82],$VU8=[2,88],$VV8=[53,55,103,104,105,106,123,137,142,143,158,159,160,161,191,195],$VW8=[1,3068],$VX8=[72,137,142,143,191,195],$VY8=[1,3077],$VZ8=[1,3078],$V_8=[1,3079],$V$8=[1,3080],$V09=[72,137,142,143,158,159,160,161,191,195],$V19=[53,72,137,142,143,158,159,160,161,191,195],$V29=[53,55,72,137,142,143,158,159,160,161,191,195],$V39=[1,3109],$V49=[1,3178],$V59=[1,3184],$V69=[1,3264],$V79=[1,3270],$V89=[2,176],$V99=[2,52],$Va9=[1,3358],$Vb9=[2,59],$Vc9=[1,3391],$Vd9=[2,83],$Ve9=[2,173],$Vf9=[1,3436],$Vg9=[53,55,72,81,82,83,103,104,105,106,121,127,129,137,142,143,158,159,160,161,190,191,195,221],$Vh9=[53,55,72,81,82,83,121,127,129,137,142,143,158,159,160,161,190,191,195,221],$Vi9=[53,55,72,103,104,105,106,114,115,116,117,118,119,137,142,143,158,159,160,161,191,195],$Vj9=[53,55,72,98,99,100,103,104,105,106,137,142,143,158,159,160,161,191,195],$Vk9=[53,55,72,114,115,116,117,118,119,137,142,143,158,159,160,161,191,195],$Vl9=[1,3467],$Vm9=[1,3469],$Vn9=[1,3470],$Vo9=[1,3468],$Vp9=[1,3493],$Vq9=[1,3495],$Vr9=[1,3496],$Vs9=[1,3494],$Vt9=[1,3520],$Vu9=[1,3522],$Vv9=[1,3523],$Vw9=[1,3521],$Vx9=[1,3624],$Vy9=[1,3626],$Vz9=[1,3627],$VA9=[1,3625],$VB9=[1,3665],$VC9=[1,3707],$VD9=[72,137,142,143,195],$VE9=[1,3737],$VF9=[53,55,72,103,104,105,106,137,142,143,158,159,160,161,191,195],$VG9=[1,3761],$VH9=[1,3797],$VI9=[1,3799],$VJ9=[1,3800],$VK9=[1,3798],$VL9=[1,3823],$VM9=[1,3825],$VN9=[1,3826],$VO9=[1,3824],$VP9=[1,3850],$VQ9=[1,3852],$VR9=[1,3853],$VS9=[1,3851],$VT9=[1,3877],$VU9=[1,3879],$VV9=[1,3880],$VW9=[1,3878],$VX9=[1,3903],$VY9=[1,3905],$VZ9=[1,3906],$V_9=[1,3904],$V$9=[1,3930],$V0a=[1,3932],$V1a=[1,3933],$V2a=[1,3931],$V3a=[113,123,137,142,143,191,195],$V4a=[1,3978],$V5a=[1,4002],$V6a=[1,4044],$V7a=[1,4077],$V8a=[1,4182],$V9a=[1,4225],$Vaa=[1,4227],$Vba=[1,4228],$Vca=[1,4226],$Vda=[1,4266],$Vea=[1,4308],$Vfa=[1,4364],$Vga=[72,113,137,142,143,191,195],$Vha=[1,4419],$Via=[1,4443],$Vja=[1,4473],$Vka=[1,4519],$Vla=[1,4591],$Vma=[1,4640];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shexDoc\":3,\"initParser\":4,\"Qdirective_E_Star\":5,\"Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt\":6,\"EOF\":7,\"directive\":8,\"O_QnotStartAction_E_Or_QstartActions_E_C\":9,\"notStartAction\":10,\"startActions\":11,\"Qstatement_E_Star\":12,\"statement\":13,\"O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C\":14,\"baseDecl\":15,\"prefixDecl\":16,\"importDecl\":17,\"labelDecl\":18,\"IT_BASE\":19,\"IRIREF\":20,\"IT_PREFIX\":21,\"PNAME_NS\":22,\"iri\":23,\"IT_IMPORT\":24,\"IT_LABEL\":25,\"O_Qiri_E_Or_QGT_LBRACKET_E_S_Qiri_E_Star_S_QGT_RBRACKET_E_C\":26,\"Qiri_E_Star\":27,\"[\":28,\"]\":29,\"start\":30,\"shapeExprDecl\":31,\"IT_start\":32,\"=\":33,\"shapeAnd\":34,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star\":35,\"QcodeDecl_E_Plus\":36,\"codeDecl\":37,\"shapeExprLabel\":38,\"O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C\":39,\"shapeExpression\":40,\"IT_EXTERNAL\":41,\"QIT_NOT_E_Opt\":42,\"shapeAtomNoRef\":43,\"QshapeOr_E_Opt\":44,\"IT_NOT\":45,\"shapeRef\":46,\"shapeOr\":47,\"inlineShapeExpression\":48,\"inlineShapeOr\":49,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus\":50,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus\":51,\"O_QIT_OR_E_S_QshapeAnd_E_C\":52,\"IT_OR\":53,\"O_QIT_AND_E_S_QshapeNot_E_C\":54,\"IT_AND\":55,\"shapeNot\":56,\"inlineShapeAnd\":57,\"Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star\":58,\"O_QIT_OR_E_S_QinlineShapeAnd_E_C\":59,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star\":60,\"inlineShapeNot\":61,\"Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star\":62,\"O_QIT_AND_E_S_QinlineShapeNot_E_C\":63,\"shapeAtom\":64,\"inlineShapeAtom\":65,\"nonLitNodeConstraint\":66,\"QshapeOrRef_E_Opt\":67,\"litNodeConstraint\":68,\"shapeOrRef\":69,\"QnonLitNodeConstraint_E_Opt\":70,\"(\":71,\")\":72,\".\":73,\"shapeDefinition\":74,\"nonLitInlineNodeConstraint\":75,\"QinlineShapeOrRef_E_Opt\":76,\"litInlineNodeConstraint\":77,\"inlineShapeOrRef\":78,\"QnonLitInlineNodeConstraint_E_Opt\":79,\"inlineShapeDefinition\":80,\"ATPNAME_LN\":81,\"ATPNAME_NS\":82,\"@\":83,\"Qannotation_E_Star\":84,\"semanticActions\":85,\"annotation\":86,\"IT_LITERAL\":87,\"QxsFacet_E_Star\":88,\"datatype\":89,\"valueSet\":90,\"QnumericFacet_E_Plus\":91,\"xsFacet\":92,\"numericFacet\":93,\"nonLiteralKind\":94,\"QstringFacet_E_Star\":95,\"QstringFacet_E_Plus\":96,\"stringFacet\":97,\"IT_IRI\":98,\"IT_BNODE\":99,\"IT_NONLITERAL\":100,\"stringLength\":101,\"INTEGER\":102,\"REGEXP\":103,\"IT_LENGTH\":104,\"IT_MINLENGTH\":105,\"IT_MAXLENGTH\":106,\"numericRange\":107,\"rawNumeric\":108,\"numericLength\":109,\"DECIMAL\":110,\"DOUBLE\":111,\"string\":112,\"^^\":113,\"IT_MININCLUSIVE\":114,\"IT_MINEXCLUSIVE\":115,\"IT_MAXINCLUSIVE\":116,\"IT_MAXEXCLUSIVE\":117,\"IT_TOTALDIGITS\":118,\"IT_FRACTIONDIGITS\":119,\"Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star\":120,\"{\":121,\"QtripleExpression_E_Opt\":122,\"}\":123,\"O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C\":124,\"extension\":125,\"extraPropertySet\":126,\"IT_CLOSED\":127,\"tripleExpression\":128,\"IT_EXTRA\":129,\"Qpredicate_E_Plus\":130,\"predicate\":131,\"oneOfTripleExpr\":132,\"groupTripleExpr\":133,\"multiElementOneOf\":134,\"Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus\":135,\"O_QGT_PIPE_E_S_QgroupTripleExpr_E_C\":136,\"|\":137,\"singleElementGroup\":138,\"multiElementGroup\":139,\"unaryTripleExpr\":140,\"QGT_SEMI_E_Opt\":141,\",\":142,\";\":143,\"Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus\":144,\"O_QGT_SEMI_E_S_QunaryTripleExpr_E_C\":145,\"Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt\":146,\"O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C\":147,\"include\":148,\"O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C\":149,\"$\":150,\"tripleExprLabel\":151,\"tripleConstraint\":152,\"bracketedTripleExpr\":153,\"Qcardinality_E_Opt\":154,\"cardinality\":155,\"QsenseFlags_E_Opt\":156,\"senseFlags\":157,\"*\":158,\"+\":159,\"?\":160,\"REPEAT_RANGE\":161,\"^\":162,\"QvalueSetValue_E_Star\":163,\"valueSetValue\":164,\"iriRange\":165,\"STRING_GRAVE\":166,\"literalRange\":167,\"languageRange\":168,\"O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C\":169,\"QiriExclusion_E_Plus\":170,\"iriExclusion\":171,\"QliteralExclusion_E_Plus\":172,\"literalExclusion\":173,\"QlanguageExclusion_E_Plus\":174,\"languageExclusion\":175,\"Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt\":176,\"QiriExclusion_E_Star\":177,\"O_QGT_TILDE_E_S_QiriExclusion_E_Star_C\":178,\"~\":179,\"-\":180,\"QGT_TILDE_E_Opt\":181,\"literal\":182,\"Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt\":183,\"QliteralExclusion_E_Star\":184,\"O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C\":185,\"LANGTAG\":186,\"Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt\":187,\"O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C\":188,\"QlanguageExclusion_E_Star\":189,\"&\":190,\"//\":191,\"O_QiriOrLabel_E_Or_Qliteral_E_C\":192,\"iriOrLabel\":193,\"QcodeDecl_E_Star\":194,\"%\":195,\"O_QCODE_E_Or_QGT_MODULO_E_C\":196,\"CODE\":197,\"rdfLiteral\":198,\"numericLiteral\":199,\"booleanLiteral\":200,\"a\":201,\"blankNode\":202,\"langString\":203,\"Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt\":204,\"O_QGT_DTYPE_E_S_Qdatatype_E_C\":205,\"IT_true\":206,\"IT_false\":207,\"STRING_LITERAL1\":208,\"STRING_LITERAL_LONG1\":209,\"STRING_LITERAL2\":210,\"STRING_LITERAL_LONG2\":211,\"LANG_STRING_LITERAL1\":212,\"LANG_STRING_LITERAL_LONG1\":213,\"LANG_STRING_LITERAL2\":214,\"LANG_STRING_LITERAL_LONG2\":215,\"prefixedName\":216,\"PNAME_LN\":217,\"BLANK_NODE_LABEL\":218,\"O_QIT_EXTENDS_E_Or_QGT_AMP_E_C\":219,\"QshapeExprLabel_E_Plus\":220,\"IT_EXTENDS\":221,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",7:\"EOF\",19:\"IT_BASE\",20:\"IRIREF\",21:\"IT_PREFIX\",22:\"PNAME_NS\",24:\"IT_IMPORT\",25:\"IT_LABEL\",28:\"[\",29:\"]\",32:\"IT_start\",33:\"=\",41:\"IT_EXTERNAL\",45:\"IT_NOT\",53:\"IT_OR\",55:\"IT_AND\",71:\"(\",72:\")\",73:\".\",81:\"ATPNAME_LN\",82:\"ATPNAME_NS\",83:\"@\",87:\"IT_LITERAL\",98:\"IT_IRI\",99:\"IT_BNODE\",100:\"IT_NONLITERAL\",102:\"INTEGER\",103:\"REGEXP\",104:\"IT_LENGTH\",105:\"IT_MINLENGTH\",106:\"IT_MAXLENGTH\",110:\"DECIMAL\",111:\"DOUBLE\",113:\"^^\",114:\"IT_MININCLUSIVE\",115:\"IT_MINEXCLUSIVE\",116:\"IT_MAXINCLUSIVE\",117:\"IT_MAXEXCLUSIVE\",118:\"IT_TOTALDIGITS\",119:\"IT_FRACTIONDIGITS\",121:\"{\",123:\"}\",127:\"IT_CLOSED\",129:\"IT_EXTRA\",137:\"|\",142:\",\",143:\";\",150:\"$\",158:\"*\",159:\"+\",160:\"?\",161:\"REPEAT_RANGE\",162:\"^\",166:\"STRING_GRAVE\",179:\"~\",180:\"-\",186:\"LANGTAG\",190:\"&\",191:\"//\",195:\"%\",197:\"CODE\",201:\"a\",206:\"IT_true\",207:\"IT_false\",208:\"STRING_LITERAL1\",209:\"STRING_LITERAL_LONG1\",210:\"STRING_LITERAL2\",211:\"STRING_LITERAL_LONG2\",212:\"LANG_STRING_LITERAL1\",213:\"LANG_STRING_LITERAL_LONG1\",214:\"LANG_STRING_LITERAL2\",215:\"LANG_STRING_LITERAL_LONG2\",217:\"PNAME_LN\",218:\"BLANK_NODE_LABEL\",221:\"IT_EXTENDS\"},\nproductions_: [0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[18,2],[27,0],[27,2],[26,1],[26,3],[10,1],[10,1],[30,4],[11,1],[36,1],[36,2],[13,1],[13,1],[31,2],[39,1],[39,1],[40,3],[40,3],[40,2],[44,0],[44,1],[48,1],[47,1],[47,2],[52,2],[50,1],[50,2],[54,2],[51,1],[51,2],[35,0],[35,2],[49,2],[59,2],[58,0],[58,2],[34,2],[60,0],[60,2],[57,2],[63,2],[62,0],[62,2],[56,2],[42,0],[42,1],[61,2],[64,2],[64,1],[64,2],[64,3],[64,1],[67,0],[67,1],[70,0],[70,1],[43,2],[43,1],[43,2],[43,3],[43,1],[65,2],[65,1],[65,2],[65,3],[65,1],[76,0],[76,1],[79,0],[79,1],[69,1],[69,1],[78,1],[78,1],[46,1],[46,1],[46,2],[68,3],[84,0],[84,2],[66,3],[77,2],[77,2],[77,2],[77,1],[88,0],[88,2],[91,1],[91,2],[75,2],[75,1],[95,0],[95,2],[96,1],[96,2],[94,1],[94,1],[94,1],[92,1],[92,1],[97,2],[97,1],[101,1],[101,1],[101,1],[93,2],[93,2],[108,1],[108,1],[108,1],[108,3],[107,1],[107,1],[107,1],[107,1],[109,1],[109,1],[74,3],[80,4],[124,1],[124,1],[124,1],[120,0],[120,2],[122,0],[122,1],[126,2],[130,1],[130,2],[128,1],[132,1],[132,1],[134,2],[136,2],[135,1],[135,2],[133,1],[133,1],[138,2],[141,0],[141,1],[141,1],[139,3],[145,2],[145,2],[144,1],[144,2],[140,2],[140,1],[149,2],[146,0],[146,1],[147,1],[147,1],[153,6],[154,0],[154,1],[152,6],[156,0],[156,1],[155,1],[155,1],[155,1],[155,1],[157,1],[90,3],[163,0],[163,2],[164,1],[164,1],[164,1],[164,1],[164,2],[170,1],[170,2],[172,1],[172,2],[174,1],[174,2],[169,1],[169,1],[169,1],[165,2],[177,0],[177,2],[178,2],[176,0],[176,1],[171,3],[181,0],[181,1],[167,2],[184,0],[184,2],[185,2],[183,0],[183,1],[173,3],[168,2],[168,2],[189,0],[189,2],[188,2],[187,0],[187,1],[175,3],[148,2],[86,3],[192,1],[192,1],[85,1],[194,0],[194,2],[37,3],[196,1],[196,1],[182,1],[182,1],[182,1],[131,1],[131,1],[89,1],[38,1],[38,1],[151,1],[151,1],[199,1],[199,1],[199,1],[198,1],[198,2],[205,2],[204,0],[204,1],[200,1],[200,1],[112,1],[112,1],[112,1],[112,1],[203,1],[203,1],[203,1],[203,1],[23,1],[23,1],[216,1],[216,1],[193,1],[193,1],[193,1],[193,1],[202,1],[125,2],[219,1],[219,1],[220,1],[220,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n        let imports = Object.keys(Parser._imports).length ? { imports: Parser._imports } : {}\n        var startObj = Parser.start ? { start: Parser.start } : {};\n        var startActs = Parser.startActs ? { startActs: Parser.startActs } : {};\n        let shapes = Parser.shapes ? { shapes: Object.values(Parser.shapes) } : {};\n        var shexj = Object.assign(\n          { type: \"Schema\" }, imports, startActs, startObj, shapes\n        )\n        if (Parser.options.index) {\n          if (Parser._base !== null)\n            shexj._base = Parser._base;\n          shexj._prefixes = Parser._prefixes;\n          shexj._index = {\n            shapeExprs: Parser.shapes || new Map(),\n            tripleExprs: Parser.productions || new Map()\n          };\n          shexj._sourceMap = Parser._sourceMap;\n        }\n        return shexj;\n      \nbreak;\ncase 2:\n yy.parser.yy = { lexer: yy.lexer} ; \nbreak;\ncase 16:\n // t: @@\n        Parser._setBase(Parser._base === null ||\n                    absoluteIRI.test($$[$0].slice(1, -1)) ? $$[$0].slice(1, -1) : _resolveIRI($$[$0].slice(1, -1)));\n      \nbreak;\ncase 17:\n // t: ShExParser-test.js/with pre-defined prefixes\n        Parser._prefixes[$$[$0-1].slice(0, -1)] = $$[$0];\n      \nbreak;\ncase 18:\n // t: @@\n        Parser._imports.push($$[$0]);\n      \nbreak;\ncase 19:\n\n        $$[$0].forEach(function (elt) {\n\t  Parser._termResolver.add(elt);\n        });\n      \nbreak;\ncase 20: case 49: case 53: case 56: case 60:\nthis.$ = [];\nbreak;\ncase 21: case 45: case 48: case 50: case 54: case 57: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 22: case 44: case 47:\nthis.$ = [$$[$0]];\nbreak;\ncase 23: case 157:\nthis.$ = $$[$0-1];\nbreak;\ncase 26:\n\n        if (Parser.start)\n          error(new Error(\"Parse error: start already defined\"), yy);\n        Parser.start = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]); // t: startInline\n      \nbreak;\ncase 27:\n\n        Parser.startActs = $$[$0]; // t: startCode1\n      \nbreak;\ncase 28:\nthis.$ = [$$[$0]] // t: startCode1;\nbreak;\ncase 29:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: startCode3;\nbreak;\ncase 32:\n // t: 1dot 1val1vsMinusiri3??\n        addShape($$[$0-1],  $$[$0], yy);\n      \nbreak;\ncase 33:\n\n        this.$ = nonest($$[$0]);\n      \nbreak;\ncase 34:\nthis.$ = { type: \"ShapeExternal\" };\nbreak;\ncase 35:\n\n        if ($$[$0-2])\n          $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) }; // t:@@\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 36:\n\n        $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) } // !!! opt\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 37:\n\n        $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n        delete $$[$0].needsAtom;\n        this.$ = $$[$0]; // { type: \"ShapeOr\", \"shapeExprs\": [$$[$0-1]].concat($$[$0]) };\n      \nbreak;\ncase 38: case 234: case 251:\nthis.$ = null;\nbreak;\ncase 39: case 43: case 46: case 52: case 59: case 191: case 250:\nthis.$ = $$[$0];\nbreak;\ncase 41:\n // returns a ShapeOr\n        var disjuncts = $$[$0].map(nonest);\n        this.$ = { type: \"ShapeOr\", shapeExprs: disjuncts, needsAtom: disjuncts }; // t: @@\n      \nbreak;\ncase 42:\n // returns a ShapeAnd\n        // $$[$0-1] could have implicit conjuncts and explicit nested ANDs (will have .nested: true)\n        $$[$0-1].filter(c => c.type === \"ShapeAnd\").length === $$[$0-1].length\n        var and = {\n          type: \"ShapeAnd\",\n          shapeExprs: $$[$0-1].reduce(\n            (acc, elt) =>\n              acc.concat(elt.type === 'ShapeAnd' && !elt.nested ? elt.shapeExprs : nonest(elt)), []\n          )\n        };\n        this.$ = $$[$0].length > 0 ? { type: \"ShapeOr\", shapeExprs: [and].concat($$[$0].map(nonest)) } : and; // t: @@\n        this.$.needsAtom = and.shapeExprs;\n      \nbreak;\ncase 51:\nthis.$ = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]);\nbreak;\ncase 55: case 58:\nthis.$ = shapeJunction(\"ShapeAnd\", $$[$0-1], $$[$0]) // t: @@;\nbreak;\ncase 62:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t:@@ */ : $$[$0];\nbreak;\ncase 63:\nthis.$ = false;\nbreak;\ncase 64:\nthis.$ = true;\nbreak;\ncase 65:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t: 1NOTNOTdot, 1NOTNOTIRI, 1NOTNOTvs */ : $$[$0];\nbreak;\ncase 66: case 75: case 80:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1];\nbreak;\ncase 68:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t: 1dotRef1 */ : $$[$0-1] // t:@@;\nbreak;\ncase 69: case 78: case 83:\nthis.$ = Object.assign($$[$0-1], {nested: true}) // t: 1val1vsMinusiri3;\nbreak;\ncase 70: case 79: case 84:\nthis.$ = EmptyShape // t: 1dot;\nbreak;\ncase 77:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t:@@ */ : $$[$0-1]\t // t: 1dotRef1 -- use _QnonLitNodeConstraint_E_Opt like below?;\nbreak;\ncase 82:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1] // t: !! look to 1dotRef1;\nbreak;\ncase 93:\n // t: 1dotRefLNex@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1), yy); // ShapeRef\n      \nbreak;\ncase 94:\n // t: 1dotRefNS1@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy), yy); // ShapeRef\n      \nbreak;\ncase 95:\nthis.$ = addSourceMap($$[$0], yy) // ShapeRef // t: 1dotRef1, 1dotRefSpaceLNex, 1dotRefSpaceNS1;\nbreak;\ncase 96: case 99:\n // t: !!\n        this.$ = $$[$0-2]\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !!\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !!\n      \nbreak;\ncase 97:\nthis.$ = [] // t: 1dot, 1dotAnnot3;\nbreak;\ncase 98:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotAnnot3;\nbreak;\ncase 100:\nthis.$ = extend({ type: \"NodeConstraint\", nodeKind: \"literal\" }, $$[$0]) // t: 1literalPattern;\nbreak;\ncase 101:\n\n        if (numericDatatypes.indexOf($$[$0-1]) === -1)\n          numericFacets.forEach(function (facet) {\n            if (facet in $$[$0])\n              error(new Error(\"Parse error: facet \" + facet + \" not allowed for unknown datatype \" + $$[$0-1]), yy);\n          });\n        this.$ = extend({ type: \"NodeConstraint\", datatype: $$[$0-1] }, $$[$0]) // t: 1datatype\n      \nbreak;\ncase 102:\nthis.$ = { type: \"NodeConstraint\", values: $$[$0-1] } // t: 1val1IRIREF;\nbreak;\ncase 103:\nthis.$ = extend({ type: \"NodeConstraint\"}, $$[$0]);\nbreak;\ncase 104:\nthis.$ = {} // t: 1literalPattern;\nbreak;\ncase 105:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: 1literalLength\n      \nbreak;\ncase 107: case 113:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: !! look to 1literalLength\n      \nbreak;\ncase 108:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0-1], $$[$0] ? $$[$0] : {}) // t: 1iriPattern;\nbreak;\ncase 109:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0]) // t: @@;\nbreak;\ncase 110:\nthis.$ = {};\nbreak;\ncase 111:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0])\n      \nbreak;\ncase 114:\nthis.$ = { nodeKind: \"iri\" } // t: 1iriPattern;\nbreak;\ncase 115:\nthis.$ = { nodeKind: \"bnode\" } // t: 1bnodeLength;\nbreak;\ncase 116:\nthis.$ = { nodeKind: \"nonliteral\" } // t: 1nonliteralLength;\nbreak;\ncase 119:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalLength;\nbreak;\ncase 120:\nthis.$ = unescapeRegexp($$[$0]) // t: 1literalPattern;\nbreak;\ncase 121:\nthis.$ = \"length\" // t: 1literalLength;\nbreak;\ncase 122:\nthis.$ = \"minlength\" // t: 1literalMinlength;\nbreak;\ncase 123:\nthis.$ = \"maxlength\" // t: 1literalMaxlength;\nbreak;\ncase 124:\nthis.$ = keyValObject($$[$0-1], $$[$0]) // t: 1literalMininclusive;\nbreak;\ncase 125:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalTotaldigits;\nbreak;\ncase 126:\nthis.$ = parseInt($$[$0], 10);\nbreak;\ncase 127: case 128:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 129:\n // ## deprecated\n        if ($$[$0] === XSD_DECIMAL || $$[$0] === XSD_FLOAT || $$[$0] === XSD_DOUBLE)\n          this.$ = parseFloat($$[$0-2].value);\n        else if (numericDatatypes.indexOf($$[$0]) !== -1)\n          this.$ = parseInt($$[$0-2].value)\n        else\n          error(new Error(\"Parse error: numeric range facet expected numeric datatype instead of \" + $$[$0]), yy);\n      \nbreak;\ncase 130:\nthis.$ = \"mininclusive\" // t: 1literalMininclusive;\nbreak;\ncase 131:\nthis.$ = \"minexclusive\" // t: 1literalMinexclusive;\nbreak;\ncase 132:\nthis.$ = \"maxinclusive\" // t: 1literalMaxinclusive;\nbreak;\ncase 133:\nthis.$ = \"maxexclusive\" // t: 1literalMaxexclusive;\nbreak;\ncase 134:\nthis.$ = \"totaldigits\" // t: 1literalTotaldigits;\nbreak;\ncase 135:\nthis.$ = \"fractiondigits\" // t: 1literalFractiondigits;\nbreak;\ncase 136:\n // t: 1dotInherit3\n        this.$ = $$[$0-2] === EmptyShape ? { type: \"Shape\" } : $$[$0-2]; // t: 0\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !! look to open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !! look to open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 137:\n // t: 1dotInherit3\n        var exprObj = $$[$0-1] ? { expression: $$[$0-1] } : EmptyObject; // t: 0, 0Inherit1\n        this.$ = (exprObj === EmptyObject && $$[$0-3] === EmptyObject) ?\n\t  EmptyShape :\n\t  extend({ type: \"Shape\" }, exprObj, $$[$0-3]);\n      \nbreak;\ncase 138:\nthis.$ = [ \"inherit\", $$[$0] ] // t: 1dotInherit1;\nbreak;\ncase 139:\nthis.$ = [ \"extra\", $$[$0] ] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 140:\nthis.$ = [ \"closed\", true ] // t: 1dotClosed;\nbreak;\ncase 141:\nthis.$ = EmptyObject;\nbreak;\ncase 142:\n\n        if ($$[$0-1] === EmptyObject)\n          $$[$0-1] = {};\n        if ($$[$0][0] === \"closed\")\n          $$[$0-1][\"closed\"] = true; // t: 1dotClosed\n        else if ($$[$0][0] in $$[$0-1])\n          $$[$0-1][$$[$0][0]] = unionAll($$[$0-1][$$[$0][0]], $$[$0][1]); // t: 1dotInherit3, 3groupdot3Extra, 3groupdotExtra3\n        else\n          $$[$0-1][$$[$0][0]] = $$[$0][1]; // t: 1dotInherit1\n        this.$ = $$[$0-1];\n      \nbreak;\ncase 145:\nthis.$ = $$[$0] // t: 1dotExtra1, 3groupdot3Extra;\nbreak;\ncase 146:\nthis.$ = [$$[$0]] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 147:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 3groupdotExtra3;\nbreak;\ncase 151:\nthis.$ = { type: \"OneOf\", expressions: unionAll([$$[$0-1]], $$[$0]) } // t: 2oneOfdot;\nbreak;\ncase 152:\nthis.$ = $$[$0] // t: 2oneOfdot;\nbreak;\ncase 153:\nthis.$ = [$$[$0]] // t: 2oneOfdot;\nbreak;\ncase 154:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2oneOfdot;\nbreak;\ncase 161:\nthis.$ = { type: \"EachOf\", expressions: unionAll([$$[$0-2]], $$[$0-1]) } // t: 2groupOfdot;\nbreak;\ncase 162:\nthis.$ = $$[$0] // ## deprecated // t: 2groupOfdot;\nbreak;\ncase 163:\nthis.$ = $$[$0] // t: 2groupOfdot;\nbreak;\ncase 164:\nthis.$ = [$$[$0]] // t: 2groupOfdot;\nbreak;\ncase 165:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2groupOfdot;\nbreak;\ncase 166:\n\n        if ($$[$0-1]) {\n          this.$ = extend({ id: $$[$0-1] }, $$[$0]);\n          addProduction($$[$0-1],  this.$, yy);\n        } else {\n          this.$ = $$[$0]\n        }\n      \nbreak;\ncase 168:\nthis.$ = addSourceMap($$[$0], yy);\nbreak;\ncase 173:\n\n        // t: open1dotOr1dot, !openopen1dotcloseCode1closeCode2\n        this.$ = $$[$0-4];\n        // Copy all of the new attributes into the encapsulated shape.\n        if (\"min\" in $$[$0-2]) { this.$.min = $$[$0-2].min; } // t: open3groupdotclosecard23Annot3Code2\n        if (\"max\" in $$[$0-2]) { this.$.max = $$[$0-2].max; } // t: open3groupdotclosecard23Annot3Code2\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = \"semActs\" in $$[$0-4] ? $$[$0-4].semActs.concat($$[$0].semActs) : $$[$0].semActs; } // t: open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 174:\nthis.$ = {} // t: 1dot;\nbreak;\ncase 176:\n\n        // $$[$0]: t: 1dotCode1\n\tif ($$[$0-3] !== EmptyShape && false) {\n\t  var t = blank();\n\t  addShape(t, $$[$0-3], yy);\n\t  $$[$0-3] = t; // ShapeRef\n\t}\n        // %6: t: 1inversedotCode1\n        this.$ = extend({ type: \"TripleConstraint\" }, $$[$0-5] ? $$[$0-5] : {}, { predicate: $$[$0-4] }, ($$[$0-3] === EmptyShape ? {} : { valueExpr: $$[$0-3] }), $$[$0-2], $$[$0]); // t: 1dot // t: 1inversedot\n        if ($$[$0-1].length)\n          this.$[\"annotations\"] = $$[$0-1]; // t: 1dotAnnot3 // t: 1inversedotAnnot3\n      \nbreak;\ncase 179:\nthis.$ = { min:0, max:UNBOUNDED } // t: 1cardStar;\nbreak;\ncase 180:\nthis.$ = { min:1, max:UNBOUNDED } // t: 1cardPlus;\nbreak;\ncase 181:\nthis.$ = { min:0, max:1 } // t: 1cardOpt;\nbreak;\ncase 182:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-2);\n        var nums = $$[$0].match(/(\\d+)/g);\n        this.$ = { min: parseInt(nums[0], 10) }; // t: 1card2blank, 1card2Star\n        if (nums.length === 2)\n            this.$[\"max\"] = parseInt(nums[1], 10); // t: 1card23\n        else if ($$[$0].indexOf(',') === -1) // t: 1card2\n            this.$[\"max\"] = parseInt(nums[0], 10);\n        else\n            this.$[\"max\"] = UNBOUNDED;\n      \nbreak;\ncase 183:\nthis.$ = { inverse: true } // t: 1inversedot;\nbreak;\ncase 184:\nthis.$ = $$[$0-1] // t: 1val1IRIREF;\nbreak;\ncase 185:\nthis.$ = [] // t: 1val1IRIREF;\nbreak;\ncase 186:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1IRIREF;\nbreak;\ncase 188:\nthis.$ = Parser._termResolver.resolve($$[$0], Parser._prefixes);\nbreak;\ncase 192:\nthis.$ = [$$[$0]] // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 193:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 194:\nthis.$ = [$$[$0]] // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 195:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 196:\nthis.$ = [$$[$0]] // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 197:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 198:\nthis.$ = { type: \"IriStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 199:\nthis.$ = { type: \"LiteralStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 200:\nthis.$ = { type: \"LanguageStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 201:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1iriStem, 1val1iriStemMinusiri3\n            type: $$[$0].length ? \"IriStemRange\" : \"IriStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1iriStemMinusiri3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1IRIREF, 1AvalA\n        }\n      \nbreak;\ncase 202:\nthis.$ = [] // t: 1val1iriStem, 1val1iriStemMinusiri3;\nbreak;\ncase 203:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1iriStemMinusiri3;\nbreak;\ncase 204:\nthis.$ = $$[$0] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 207:\nthis.$ = $$[$0] ? { type: \"IriStem\", stem: $$[$0-1] } /* t: 1val1iriStemMinusiriStem3 */ : $$[$0-1] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 210:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1literalStemMinusliteralStem3, 1val1literalStem\n            type: $$[$0].length ? \"LiteralStemRange\" : \"LiteralStem\",\n            stem: $$[$0-1].value\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1literalStemMinusliteral3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1LITERAL\n        }\n      \nbreak;\ncase 211:\nthis.$ = [] // t: 1val1literalStem, 1val1literalStemMinusliteral3;\nbreak;\ncase 212:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 213:\nthis.$ = $$[$0] // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 216:\nthis.$ = $$[$0] ? { type: \"LiteralStem\", stem: $$[$0-1].value } /* t: 1val1literalStemMinusliteral3 */ : $$[$0-1].value // t: 1val1literalStemMinusliteralStem3;\nbreak;\ncase 217:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1languageStemMinuslanguage3 1val1languageStemMinuslanguageStem3 : 1val1languageStem\n            type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1languageStemMinuslanguage3, 1val1languageStemMinuslanguageStem3\n        } else {\n          this.$ = { type: \"Language\", languageTag: $$[$0-1] }; // t: 1val1language\n        }\n      \nbreak;\ncase 218:\n\n        this.$ = {  // t: @@\n          type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n          stem: \"\"\n        };\n        if ($$[$0].length)\n          this.$[\"exclusions\"] = $$[$0]; // t: @@\n      \nbreak;\ncase 219:\nthis.$ = [] // t: 1val1languageStem, 1val1languageStemMinuslanguage3;\nbreak;\ncase 220:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 221:\nthis.$ = $$[$0] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 224:\nthis.$ = $$[$0] ? { type: \"LanguageStem\", stem: $$[$0-1] } /* t: 1val1languageStemMinuslanguageStem3 */ : $$[$0-1] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 225:\nthis.$ = addSourceMap($$[$0], yy) // Inclusion // t: 2groupInclude1;\nbreak;\ncase 226:\nthis.$ = { type: \"Annotation\", predicate: $$[$0-1], object: $$[$0] } // t: 1dotAnnotIRIREF;\nbreak;\ncase 229:\nthis.$ = $$[$0].length ? { semActs: $$[$0] } : null // t: 1dotCode1/2oneOfDot;\nbreak;\ncase 230:\nthis.$ = [] // t: 1dot, 1dotCode1;\nbreak;\ncase 231:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotCode1;\nbreak;\ncase 232:\nthis.$ = $$[$0] ? unescapeSemanticAction($$[$0-1], $$[$0]) /* t: 1dotCode1 */ : { type: \"SemAct\", name: $$[$0-1] } // t: 1dotNoCode1;\nbreak;\ncase 239:\nthis.$ = RDF_TYPE // t: 1AvalA;\nbreak;\ncase 245:\nthis.$ = createLiteral($$[$0], XSD_INTEGER) // t: 1val1INTEGER;\nbreak;\ncase 246:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL) // t: 1val1DECIMAL;\nbreak;\ncase 247:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE) // t: 1val1DOUBLE;\nbreak;\ncase 249:\nthis.$ = $$[$0] ? extend($$[$0-1], { type: $$[$0] }) : $$[$0-1] // t: 1val1Datatype;\nbreak;\ncase 253:\nthis.$ = { value: \"true\", type: XSD_BOOLEAN } // t: 1val1true;\nbreak;\ncase 254:\nthis.$ = { value: \"false\", type: XSD_BOOLEAN } // t: 1val1false;\nbreak;\ncase 255:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL2;\nbreak;\ncase 256:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL1;\nbreak;\ncase 257:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL_LONG2;\nbreak;\ncase 258:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG1;\nbreak;\ncase 259:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: @@;\nbreak;\ncase 260:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: @@;\nbreak;\ncase 261:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: 1val1LANGTAG;\nbreak;\ncase 262:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG2_with_LANGTAG;\nbreak;\ncase 263:\n // t: 1dot\n        var unesc = ShExUtil.unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._base === null || absoluteIRI.test(unesc) ? unesc : _resolveIRI(unesc)\n      \nbreak;\ncase 265:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + ShExUtil.unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n      \nbreak;\ncase 266:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n        this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n      \nbreak;\ncase 267:\nthis.$ = this._base === null || absoluteIRI.test($$[$0].slice(1, -1)) ? ShExUtil.unescapeText($$[$0].slice(1,-1), {}) : _resolveIRI(ShExUtil.unescapeText($$[$0].slice(1,-1), {})) // t: 1dot;\nbreak;\ncase 268:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n      this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1);\n    \nbreak;\ncase 269:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n      this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n    \nbreak;\ncase 270:\n\n        this.$ = Parser._termResolver.resolve($$[$0], Parser._prefixes);\n    \nbreak;\ncase 272:\nthis.$ = $$[$0] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 275:\nthis.$ = [$$[$0]] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 276:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotInherit3;\nbreak;\n}\n},\ntable: [o($V0,[2,2],{3:1,4:2}),{1:[3]},o($V0,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:11,10:16,11:17,14:6,15:7,16:8,17:9,18:10,19:[1,12],20:$V1,21:[1,13],22:$V2,23:24,24:[1,14],25:[1,15],30:18,31:19,32:[1,21],36:20,37:23,38:22,195:$V3,202:25,216:28,217:$V4,218:$V5},{7:[1,32]},o($V0,[2,4]),{7:[2,11]},o($V0,$V6),o($V0,$V7),o($V0,$V8),o($V0,$V9),o($Va,[2,7],{12:33}),{20:[1,34]},{22:[1,35]},{20:$Vb,22:$Vc,23:36,216:38,217:$Vd},{20:$Vb,22:$Vc,23:42,26:41,28:[1,43],216:38,217:$Vd},o($Va,[2,5]),o($Va,[2,6]),o($Va,$Ve),o($Va,$Vf),o($Va,[2,27],{37:44,195:$V3}),{33:[1,45]},o($Vg,$Vh,{39:46,40:47,42:49,46:51,41:[1,48],45:[1,50],81:$Vi,82:$Vj,83:$Vk}),o($V0,[2,28]),o($Vl,$Vm),o($Vl,$Vn),{20:$Vo,22:$Vp,23:55,216:57,217:$Vq},o($Vl,$Vr),o($Vl,$Vs),o($Vl,$Vt),o($Vl,$Vu),o($Vl,$Vv),{1:[2,1]},{7:[2,9],8:61,10:62,13:60,15:63,16:64,17:65,18:66,19:[1,69],20:$V1,21:[1,70],22:$V2,23:24,24:[1,71],25:[1,72],30:67,31:68,32:[1,73],38:74,202:25,216:28,217:$V4,218:$V5},o($V0,$Vw),{20:$Vb,22:$Vc,23:75,216:38,217:$Vd},o($V0,$Vx),o($V0,$Vr),o($V0,$Vs),o($V0,$Vu),o($V0,$Vv),o($V0,$Vy),o($V0,$Vz),o($VA,$VB,{27:76}),o($V0,[2,29]),o($VC,$Vh,{34:77,56:78,42:79,45:$VD}),o($Va,$VE),o($Va,$VF),o($Va,$VG),o($VH,$VI,{43:81,66:82,68:83,74:84,75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,193:101,93:103,101:104,107:110,109:111,20:$VJ,22:$VK,28:$VL,71:[1,85],73:[1,86],87:$VM,98:$VN,99:$VO,100:$VP,103:$VQ,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$V_,217:$V$}),o($Vg,$V01,{46:121,81:$V11,82:$V21,83:$V31}),{47:125,50:126,51:127,52:128,53:$V41,54:129,55:$V51},o($V61,$V71),o($V61,$V81),{20:[1,135],22:[1,139],23:133,38:132,202:134,216:136,217:[1,138],218:[1,137]},{195:[1,142],196:140,197:[1,141]},o($V91,$Vr),o($V91,$Vs),o($V91,$Vu),o($V91,$Vv),o($Va,[2,8]),o($Va,[2,30]),o($Va,[2,31]),o($Va,$V6),o($Va,$V7),o($Va,$V8),o($Va,$V9),o($Va,$Ve),o($Va,$Vf),{20:[1,143]},{22:[1,144]},{20:$Va1,22:$Vb1,23:145,216:147,217:$Vc1},{20:$Va1,22:$Vb1,23:151,26:150,28:[1,152],216:147,217:$Vc1},{33:[1,153]},o($Vg,$Vh,{39:154,40:155,42:157,46:159,41:[1,156],45:[1,158],81:$Vi,82:$Vj,83:$Vk}),o($V0,$Vd1),{20:$Ve1,22:$Vf1,23:161,29:[1,160],216:163,217:$Vg1},o($Vh1,$Vi1,{35:166}),o($Vj1,$Vk1,{60:167}),o($VH,$VI,{75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,193:101,93:103,101:104,107:110,109:111,64:168,66:169,68:170,69:171,74:174,46:175,20:$VJ,22:$VK,28:$VL,71:[1,172],73:[1,173],81:[1,176],82:[1,177],83:[1,178],87:$VM,98:$VN,99:$VO,100:$VP,103:$VQ,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$V_,217:$V$}),o($VC,$V01),o($Va,$Vl1,{50:126,51:127,52:128,54:129,44:179,47:180,53:$V41,55:$V51}),o($Vj1,$Vm1,{67:181,69:182,74:183,46:184,80:185,120:186,81:$V11,82:$V21,83:$V31,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vn1),o($Vj1,$Vo1,{70:187,66:188,75:189,94:190,96:191,97:195,101:196,98:$Vp1,99:$Vq1,100:$Vr1,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{40:198,42:199,46:201,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vu1),o($Vv1,$Vw1,{84:202}),o($Vx1,$Vw1,{84:203}),o($Vy1,$Vw1,{84:204}),o($Vz1,$VA1,{95:205}),o($Vv1,$VB1,{101:104,97:206,103:$VQ,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:207}),o($VC1,$VD1,{88:208}),o($VC1,$VD1,{88:209}),o($Vx1,$VE1,{107:110,109:111,93:210,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,211],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:220}),o($VQ1,$VR1),{102:[1,221]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,223],108:222,110:[1,224],111:[1,225],112:226,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,231]},{102:[2,121]},{102:[2,122]},{102:[2,123]},o($V$1,[2,130]),o($V$1,[2,131]),o($V$1,[2,132]),o($V$1,[2,133]),{102:[2,134]},{102:[2,135]},o($Va,$Vl1,{50:126,51:127,52:128,54:129,47:180,44:232,53:$V41,55:$V51}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,236],22:[1,240],23:234,38:233,202:235,216:237,217:[1,239],218:[1,238]},o($Va,$V02),o($Va,$V12,{52:241,53:$V41}),o($Vh1,$Vi1,{35:242,54:243,55:$V51}),o($Vh1,$V22),o($Vj1,$V32),o($VC,$Vh,{34:244,56:245,42:246,45:$VD}),o($VC,$Vh,{56:247,42:248,45:$VD}),o($V61,$V42),o($V61,$Vm),o($V61,$Vn),o($V61,$Vr),o($V61,$Vs),o($V61,$Vt),o($V61,$Vu),o($V61,$Vv),o($V0,$V52),o($V0,$V62),o($V0,$V72),o($Va,$Vw),{20:$Va1,22:$Vb1,23:249,216:147,217:$Vc1},o($Va,$Vx),o($Va,$Vr),o($Va,$Vs),o($Va,$Vu),o($Va,$Vv),o($Va,$Vy),o($Va,$Vz),o($VA,$VB,{27:250}),o($VC,$Vh,{34:251,56:252,42:253,45:$VD}),o($Va,$VE),o($Va,$VF),o($Va,$VG),o($VH,$VI,{43:254,66:255,68:256,74:257,75:260,77:261,80:262,94:263,96:264,89:266,90:267,91:268,120:269,97:273,193:274,93:276,101:277,107:283,109:284,20:$V82,22:$V92,28:$Va2,71:[1,258],73:[1,259],87:$Vb2,98:$Vc2,99:$Vd2,100:$Ve2,103:$Vf2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$Vg2,217:$Vh2}),o($Vg,$V01,{46:285,81:$Vi2,82:$Vj2,83:$Vk2}),{47:289,50:290,51:291,52:292,53:$Vl2,54:293,55:$Vm2},o($V0,$Vn2),o($VA,[2,21]),o($VA,$Vr),o($VA,$Vs),o($VA,$Vu),o($VA,$Vv),o($Va,$Vo2,{52:296,53:$V41}),o($Vh1,$Vp2,{54:297,55:$V51}),o($Vj1,$Vq2),o($Vj1,$Vm1,{69:182,74:183,46:184,80:185,120:186,67:298,81:$V11,82:$V21,83:$V31,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{66:188,75:189,94:190,96:191,97:195,101:196,70:299,98:$Vp1,99:$Vq1,100:$Vr1,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:300,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vt2,$V71),o($Vt2,$V81),{20:[1,304],22:[1,308],23:302,38:301,202:303,216:305,217:[1,307],218:[1,306]},o($Va,$Vw2),o($Va,$Vx2),o($Vj1,$Vy2),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:309}),{121:[1,310],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VA2),o($Vj1,$VB2),o($Vx1,$Vw1,{84:311}),o($VC2,$VA1,{95:312}),o($Vx1,$VB1,{101:196,97:313,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,314]},o($VC2,$VS1),{72:[1,315]},o($VH,$VI,{43:316,66:317,68:318,74:319,75:322,77:323,80:324,94:325,96:326,89:328,90:329,91:330,120:331,97:335,193:336,93:338,101:339,107:345,109:346,20:[1,341],22:[1,343],28:[1,337],71:[1,320],73:[1,321],87:[1,327],98:[1,332],99:[1,333],100:[1,334],103:$VD2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,344],217:[1,342]}),o($Vg,$V01,{46:347,81:$VE2,82:$VF2,83:$VG2}),{47:351,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2},o($VJ2,$VK2,{85:358,86:359,194:360,191:[1,361]}),o($VL2,$VK2,{85:362,86:363,194:364,191:$VM2}),o($VN2,$VK2,{85:366,86:367,194:368,191:[1,369]}),o($Vv1,$VO2,{101:104,97:370,103:$VQ,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VV2,$VW2,{122:378,128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,123:$VX2,150:$VY2,190:$VZ2}),o($VH,[2,142]),o($VH,[2,138]),o($VH,[2,139]),o($VH,[2,140]),{20:$V_2,22:$V$2,23:393,38:392,202:394,216:396,217:$V03,218:$V13,220:391},{20:$V23,22:$V33,130:400,131:401,166:$V43,193:402,201:$V53,217:$V63},o($V73,[2,273]),o($V73,[2,274]),{20:$V83,22:$V93,23:415,29:[1,408],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,441]},{113:$Vx3},{113:$Vy3},{113:$Vz3},{113:$VA3},o($VQ1,$VB3),o($Va,$VC3),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($Vh1,$VD3),o($Va,$VE3,{52:296,53:$V41}),o($Vj1,$VF3),o($Vh1,$VG3),o($Vj1,$Vk1,{60:442}),o($VH,$VI,{64:443,66:444,68:445,69:446,75:449,77:450,74:451,46:452,94:453,96:454,89:456,90:457,91:458,80:459,97:466,193:467,93:469,120:470,101:471,107:477,109:478,20:[1,473],22:[1,475],28:[1,468],71:[1,447],73:[1,448],81:[1,460],82:[1,461],83:[1,462],87:[1,455],98:[1,463],99:[1,464],100:[1,465],103:$VH3,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,476],217:[1,474]}),o($Vj1,$VI3),o($VH,$VI,{64:479,66:480,68:481,69:482,75:485,77:486,74:487,46:488,94:489,96:490,89:492,90:493,91:494,80:495,97:502,193:503,93:505,120:506,101:507,107:513,109:514,20:[1,509],22:[1,511],28:[1,504],71:[1,483],73:[1,484],81:[1,496],82:[1,497],83:[1,498],87:[1,491],98:[1,499],99:[1,500],100:[1,501],103:$VJ3,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,512],217:[1,510]}),o($Va,$Vd1),{20:$Ve1,22:$Vf1,23:161,29:[1,515],216:163,217:$Vg1},o($Vh1,$Vi1,{35:516}),o($Vj1,$Vk1,{60:517}),o($VH,$VI,{75:260,77:261,80:262,94:263,96:264,89:266,90:267,91:268,120:269,97:273,193:274,93:276,101:277,107:283,109:284,64:518,66:519,68:520,69:521,74:524,46:525,20:$V82,22:$V92,28:$Va2,71:[1,522],73:[1,523],81:[1,526],82:[1,527],83:[1,528],87:$Vb2,98:$Vc2,99:$Vd2,100:$Ve2,103:$Vf2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$Vg2,217:$Vh2}),o($Va,$Vl1,{50:290,51:291,52:292,54:293,44:529,47:530,53:$Vl2,55:$Vm2}),o($Vj1,$Vm1,{67:531,69:532,74:533,46:534,80:535,120:536,81:$Vi2,82:$Vj2,83:$Vk2,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vn1),o($Vj1,$Vo1,{70:537,66:538,75:539,94:540,96:541,97:545,101:546,98:$VK3,99:$VL3,100:$VM3,103:$VN3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:548,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vu1),o($Vv1,$Vw1,{84:549}),o($Vx1,$Vw1,{84:550}),o($Vy1,$Vw1,{84:551}),o($Vz1,$VA1,{95:552}),o($Vv1,$VB1,{101:277,97:553,103:$Vf2,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:554}),o($VC1,$VD1,{88:555}),o($VC1,$VD1,{88:556}),o($Vx1,$VE1,{107:283,109:284,93:557,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,558],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:559}),o($VQ1,$VR1),{102:[1,560]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,562],108:561,110:[1,563],111:[1,564],112:565,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,566]},o($Va,$Vl1,{50:290,51:291,52:292,54:293,47:530,44:567,53:$Vl2,55:$Vm2}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,571],22:[1,575],23:569,38:568,202:570,216:572,217:[1,574],218:[1,573]},o($Va,$V02),o($Va,$V12,{52:576,53:$Vl2}),o($Vh1,$Vi1,{35:577,54:578,55:$Vm2}),o($Vh1,$V22),o($Vj1,$V32),o($VC,$Vh,{34:579,56:580,42:581,45:$VD}),o($VC,$Vh,{56:582,42:583,45:$VD}),o($Vh1,$VO3),o($Vj1,$VP3),o($Vj1,$VQ3),o($Vj1,$VR3),{72:[1,584]},o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),o($VL2,$VK2,{86:363,194:364,85:585,191:$VM2}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:586,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:363,194:364,85:587,191:$VM2}),o($Vx1,$VO2,{101:196,97:588,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VS3),{44:589,47:590,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2,72:$Vl1},o($VH,$VI,{67:591,69:592,74:593,46:594,80:595,120:596,53:$Vm1,55:$Vm1,72:$Vm1,81:$VE2,82:$VF2,83:$VG2}),o($VT3,$Vn1),o($VT3,$Vo1,{70:597,66:598,75:599,94:600,96:601,97:605,101:606,98:[1,602],99:[1,603],100:[1,604],103:$VU3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:608,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vu1),o($VV3,$Vw1,{84:609}),o($VW3,$Vw1,{84:610}),o($VX3,$Vw1,{84:611}),o($VY3,$VA1,{95:612}),o($VV3,$VB1,{101:339,97:613,103:$VD2,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:614}),o($VZ3,$VD1,{88:615}),o($VZ3,$VD1,{88:616}),o($VW3,$VE1,{107:345,109:346,93:617,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,618],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:619}),o($V_3,$VR1),{102:[1,620]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,622],108:621,110:[1,623],111:[1,624],112:625,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,626]},{44:627,47:590,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2,72:$Vl1},o($VT3,$V71),o($VT3,$V81),{20:[1,631],22:[1,635],23:629,38:628,202:630,216:632,217:[1,634],218:[1,633]},{72:$V02},{52:636,53:$VH2,72:$V12},o($V$3,$Vi1,{35:637,54:638,55:$VI2}),o($V$3,$V22),o($VT3,$V32),o($VC,$Vh,{34:639,56:640,42:641,45:$VD}),o($VC,$Vh,{56:642,42:643,45:$VD}),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:644,195:[1,645]}),{20:$V44,22:$V54,131:646,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:653,195:[1,654]}),{20:$V44,22:$V54,131:655,166:$V64,193:647,201:$V74,217:$V84},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:656,195:[1,657]}),{20:$V44,22:$V54,131:658,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,659]},o($VC1,$VS1),{102:[1,661],108:660,110:[1,662],111:[1,663],112:664,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,665]},{123:[1,666]},{123:[2,144]},{123:$Vf4},{123:$Vg4,135:667,136:668,137:$Vh4},{123:$Vi4},o($Vj4,$Vk4),o($Vj4,$Vl4),o($Vj4,$Vm4,{141:670,144:671,145:674,142:$Vn4,143:$Vo4}),o($Vp4,$Vq4,{147:675,152:676,153:677,156:678,157:680,71:[1,679],162:$Vr4}),o($Vs4,$Vt4),o($VV2,[2,170]),{20:[1,685],22:[1,689],23:683,151:682,202:684,216:686,217:[1,688],218:[1,687]},{20:[1,693],22:[1,697],23:691,151:690,202:692,216:694,217:[1,696],218:[1,695]},o($VH,[2,272],{23:393,202:394,216:396,38:698,20:$V_2,22:$V$2,217:$V03,218:$V13}),o($Vu4,[2,275]),o($Vu4,$Vm),o($Vu4,$Vn),o($Vu4,$Vr),o($Vu4,$Vs),o($Vu4,$Vt),o($Vu4,$Vu),o($Vu4,$Vv),o($VH,[2,145],{193:402,131:699,20:$V23,22:$V33,166:$V43,201:$V53,217:$V63}),o($Vv4,[2,146]),o($Vv4,$Vw4),o($Vv4,$Vx4),o($Vv4,$VT1),o($Vv4,$VU1),o($Vv4,$VV1),o($Vv4,$VW1),o($VC1,$Vy4),o($VO1,[2,186]),o($VO1,[2,187]),o($VO1,[2,188]),o($VO1,[2,189]),o($VO1,[2,190]),{169:700,170:701,171:704,172:702,173:705,174:703,175:706,180:[1,707]},o($VO1,[2,205],{176:708,178:709,179:[1,710]}),o($VO1,[2,214],{183:711,185:712,179:[1,713]}),o($VO1,[2,222],{187:714,188:715,179:$Vz4}),{179:$Vz4,188:717},o($VA4,$Vr),o($VA4,$Vs),o($VA4,$VB4),o($VA4,$VC4),o($VA4,$VD4),o($VA4,$Vu),o($VA4,$Vv),o($VA4,$VE4),o($VA4,$VF4,{204:718,205:719,113:[1,720]}),o($VA4,$VG4),o($VA4,$VH4),o($VA4,$VI4),o($VA4,$VJ4),o($VA4,$VK4),o($VA4,$VL4),o($VA4,$VM4),o($VA4,$VN4),o($VA4,$VO4),o($VP4,$Vx3),o($VP4,$Vy3),o($VP4,$Vz3),o($VP4,$VA3),{20:[1,723],22:[1,725],89:721,166:[1,726],193:722,217:[1,724]},o($Vh1,$Vp2,{54:727,55:[1,728]}),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:729,69:730,74:731,46:732,80:733,120:737,81:[1,734],82:[1,735],83:[1,736],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:738,66:739,75:740,94:741,96:742,97:746,101:747,98:[1,743],99:[1,744],100:[1,745],103:$VQ4,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:749,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:750}),o($Vx1,$Vw1,{84:751}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:752}),o($Vv1,$VB1,{101:471,97:753,103:$VH3,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:754}),o($VC1,$VD1,{88:755}),o($VC1,$VD1,{88:756}),o($Vx1,$VE1,{107:477,109:478,93:757,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:758}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,762],22:[1,766],23:760,38:759,202:761,216:763,217:[1,765],218:[1,764]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:767}),o($VQ1,$VR1),{121:[1,768],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,769]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,771],108:770,110:[1,772],111:[1,773],112:774,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,775]},o($Vj1,$Vq2),o($Vj1,$Vm1,{67:776,69:777,74:778,46:779,80:780,120:784,81:[1,781],82:[1,782],83:[1,783],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:785,66:786,75:787,94:788,96:789,97:793,101:794,98:[1,790],99:[1,791],100:[1,792],103:$VR4,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:796,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:797}),o($Vx1,$Vw1,{84:798}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:799}),o($Vv1,$VB1,{101:507,97:800,103:$VJ3,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:801}),o($VC1,$VD1,{88:802}),o($VC1,$VD1,{88:803}),o($Vx1,$VE1,{107:513,109:514,93:804,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:805}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,809],22:[1,813],23:807,38:806,202:808,216:810,217:[1,812],218:[1,811]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:814}),o($VQ1,$VR1),{121:[1,815],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,816]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,818],108:817,110:[1,819],111:[1,820],112:821,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,822]},o($Va,$Vn2),o($Va,$Vo2,{52:823,53:$Vl2}),o($Vh1,$Vp2,{54:824,55:$Vm2}),o($Vj1,$Vq2),o($Vj1,$Vm1,{69:532,74:533,46:534,80:535,120:536,67:825,81:$Vi2,82:$Vj2,83:$Vk2,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{66:538,75:539,94:540,96:541,97:545,101:546,70:826,98:$VK3,99:$VL3,100:$VM3,103:$VN3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:827,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vt2,$V71),o($Vt2,$V81),{20:[1,831],22:[1,835],23:829,38:828,202:830,216:832,217:[1,834],218:[1,833]},o($Va,$Vw2),o($Va,$Vx2),o($Vj1,$Vy2),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:836}),{121:[1,837],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VA2),o($Vj1,$VB2),o($Vx1,$Vw1,{84:838}),o($VC2,$VA1,{95:839}),o($Vx1,$VB1,{101:546,97:840,103:$VN3,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,841]},o($VC2,$VS1),{72:[1,842]},o($VJ2,$VK2,{85:843,86:844,194:845,191:[1,846]}),o($VL2,$VK2,{85:847,86:848,194:849,191:$VS4}),o($VN2,$VK2,{85:851,86:852,194:853,191:[1,854]}),o($Vv1,$VO2,{101:277,97:855,103:$Vf2,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:863,123:$VX2,150:$VY2,190:$VZ2}),{20:$V83,22:$V93,23:415,29:[1,864],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,865]},o($VQ1,$VB3),o($Va,$VC3),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($Vh1,$VD3),o($Va,$VE3,{52:823,53:$Vl2}),o($Vj1,$VF3),o($Vh1,$VG3),o($Vj1,$Vk1,{60:866}),o($VH,$VI,{64:867,66:868,68:869,69:870,75:873,77:874,74:875,46:876,94:877,96:878,89:880,90:881,91:882,80:883,97:890,193:891,93:893,120:894,101:895,107:901,109:902,20:[1,897],22:[1,899],28:[1,892],71:[1,871],73:[1,872],81:[1,884],82:[1,885],83:[1,886],87:[1,879],98:[1,887],99:[1,888],100:[1,889],103:$VU4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,900],217:[1,898]}),o($Vj1,$VI3),o($VH,$VI,{64:903,66:904,68:905,69:906,75:909,77:910,74:911,46:912,94:913,96:914,89:916,90:917,91:918,80:919,97:926,193:927,93:929,120:930,101:931,107:937,109:938,20:[1,933],22:[1,935],28:[1,928],71:[1,907],73:[1,908],81:[1,920],82:[1,921],83:[1,922],87:[1,915],98:[1,923],99:[1,924],100:[1,925],103:$VV4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,936],217:[1,934]}),o($Vj1,$VW4),o($Vj1,$Va4),{123:[1,939]},o($Vj1,$V14),o($VC2,$Vb4),{72:$Vw2},{72:$Vx2},o($VT3,$Vy2),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:940}),{121:[1,941],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VA2),o($VT3,$VB2),o($VW3,$Vw1,{84:942}),o($VX4,$VA1,{95:943}),o($VW3,$VB1,{101:606,97:944,103:$VU3,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,945]},o($VX4,$VS1),{72:[1,946]},o($VY4,$VK2,{85:947,86:948,194:949,191:[1,950]}),o($VZ4,$VK2,{85:951,86:952,194:953,191:$V_4}),o($V$4,$VK2,{85:955,86:956,194:957,191:[1,958]}),o($VV3,$VO2,{101:339,97:959,103:$VD2,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:967,123:$VX2,150:$VY2,190:$VZ2}),{20:$V83,22:$V93,23:415,29:[1,968],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,969]},o($V_3,$VB3),{72:$VC3},o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($V$3,$VD3),{52:970,53:$VH2,72:$VE3},o($VT3,$VF3),o($V$3,$VG3),o($VT3,$Vk1,{60:971}),o($VH,$VI,{64:972,66:973,68:974,69:975,75:978,77:979,74:980,46:981,94:982,96:983,89:985,90:986,91:987,80:988,97:995,193:996,93:998,120:999,101:1000,107:1006,109:1007,20:[1,1002],22:[1,1004],28:[1,997],71:[1,976],73:[1,977],81:[1,989],82:[1,990],83:[1,991],87:[1,984],98:[1,992],99:[1,993],100:[1,994],103:$V15,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1005],217:[1,1003]}),o($VT3,$VI3),o($VH,$VI,{64:1008,66:1009,68:1010,69:1011,75:1014,77:1015,74:1016,46:1017,94:1018,96:1019,89:1021,90:1022,91:1023,80:1024,97:1031,193:1032,93:1034,120:1035,101:1036,107:1042,109:1043,20:[1,1038],22:[1,1040],28:[1,1033],71:[1,1012],73:[1,1013],81:[1,1025],82:[1,1026],83:[1,1027],87:[1,1020],98:[1,1028],99:[1,1029],100:[1,1030],103:$V25,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1041],217:[1,1039]}),o($VJ2,$V35),{20:$Vo,22:$Vp,23:1044,216:57,217:$Vq},{20:$V45,22:$V55,102:[1,1057],110:[1,1058],111:[1,1059],112:1056,166:$V65,182:1047,192:1045,193:1046,198:1052,199:1053,200:1054,203:1055,206:[1,1060],207:[1,1061],208:[1,1066],209:[1,1067],210:[1,1068],211:[1,1069],212:[1,1062],213:[1,1063],214:[1,1064],215:[1,1065],217:$V75},o($V85,$Vw4),o($V85,$Vx4),o($V85,$VT1),o($V85,$VU1),o($V85,$VV1),o($V85,$VW1),o($VL2,$V35),{20:$Vo,22:$Vp,23:1070,216:57,217:$Vq},{20:$V95,22:$Va5,102:[1,1083],110:[1,1084],111:[1,1085],112:1082,166:$Vb5,182:1073,192:1071,193:1072,198:1078,199:1079,200:1080,203:1081,206:[1,1086],207:[1,1087],208:[1,1092],209:[1,1093],210:[1,1094],211:[1,1095],212:[1,1088],213:[1,1089],214:[1,1090],215:[1,1091],217:$Vc5},o($VN2,$V35),{20:$Vo,22:$Vp,23:1096,216:57,217:$Vq},{20:$Vd5,22:$Ve5,102:[1,1109],110:[1,1110],111:[1,1111],112:1108,166:$Vf5,182:1099,192:1097,193:1098,198:1104,199:1105,200:1106,203:1107,206:[1,1112],207:[1,1113],208:[1,1118],209:[1,1119],210:[1,1120],211:[1,1121],212:[1,1114],213:[1,1115],214:[1,1116],215:[1,1117],217:$Vg5},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,1122]},o($VC1,$VB3),o($Vy1,$Vh5),{123:$Vi5,136:1123,137:$Vh4},o($Vj4,$Vj5),o($VV2,$VW2,{138:383,139:384,140:385,146:386,148:387,149:388,133:1124,150:$VY2,190:$VZ2}),o($Vj4,$Vk5),o($Vj4,$Vm4,{141:1125,145:1126,142:$Vn4,143:$Vo4}),o($VV2,$VW2,{146:386,148:387,149:388,140:1127,123:$Vl5,137:$Vl5,150:$VY2,190:$VZ2}),o($VV2,$VW2,{146:386,148:387,149:388,140:1128,123:$Vm5,137:$Vm5,150:$VY2,190:$VZ2}),o($Vs4,$Vn5),o($Vs4,$Vo5),o($Vs4,$Vp5),o($Vs4,$Vq5),{20:$Vr5,22:$Vs5,131:1129,166:$Vt5,193:1130,201:$Vu5,217:$Vv5},o($VV2,$VW2,{149:388,128:1136,132:1137,133:1138,134:1139,138:1140,139:1141,140:1142,146:1143,148:1144,150:$VY2,190:$Vw5}),o($Vp4,[2,178]),o($Vp4,[2,183]),o($Vs4,$Vx5),o($Vs4,$Vy5),o($Vs4,$Vz5),o($Vs4,$Vr),o($Vs4,$Vs),o($Vs4,$Vt),o($Vs4,$Vu),o($Vs4,$Vv),o($VV2,[2,168]),o($VV2,$Vy5),o($VV2,$Vz5),o($VV2,$Vr),o($VV2,$Vs),o($VV2,$Vt),o($VV2,$Vu),o($VV2,$Vv),o($Vu4,[2,276]),o($Vv4,[2,147]),o($VO1,[2,191]),o($VO1,[2,198],{171:1146,180:$VA5}),o($VO1,[2,199],{173:1148,180:$VB5}),o($VO1,[2,200],{175:1150,180:$VC5}),o($VD5,[2,192]),o($VD5,[2,194]),o($VD5,[2,196]),{20:$VE5,22:$VF5,23:1152,102:$VG5,110:$VH5,111:$VI5,112:1163,182:1153,186:$VJ5,198:1157,199:1158,200:1159,203:1162,206:$VK5,207:$VL5,208:$VM5,209:$VN5,210:$VO5,211:$VP5,212:$VQ5,213:$VR5,214:$VS5,215:$VT5,216:1156,217:$VU5},o($VO1,[2,201]),o($VO1,[2,206]),o($VD5,[2,202],{177:1177}),o($VO1,[2,210]),o($VO1,[2,215]),o($VD5,[2,211],{184:1178}),o($VO1,[2,217]),o($VO1,[2,223]),o($VD5,[2,219],{189:1179}),o($VO1,[2,218]),o($VA4,$VV5),o($VA4,$VW5),{20:[1,1182],22:[1,1184],89:1180,166:[1,1185],193:1181,217:[1,1183]},o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$VP3),o($VC,$Vh,{56:1186,42:1187,45:$VD}),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1188}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1192],22:[1,1196],23:1190,38:1189,202:1191,216:1193,217:[1,1195],218:[1,1194]},{121:[1,1197],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1198}),o($VC2,$VA1,{95:1199}),o($Vx1,$VB1,{101:747,97:1200,103:$VQ4,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1201]},o($VC2,$VS1),{72:[1,1202]},o($VJ2,$VK2,{85:1203,86:1204,194:1205,191:[1,1206]}),o($VL2,$VK2,{85:1207,86:1208,194:1209,191:$VY5}),o($Vv1,$VO2,{101:471,97:1211,103:$VH3,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1219,86:1220,194:1221,191:[1,1222]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1223],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1224,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1225]},o($VQ1,$VB3),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1226}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1230],22:[1,1234],23:1228,38:1227,202:1229,216:1231,217:[1,1233],218:[1,1232]},{121:[1,1235],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1236}),o($VC2,$VA1,{95:1237}),o($Vx1,$VB1,{101:794,97:1238,103:$VR4,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1239]},o($VC2,$VS1),{72:[1,1240]},o($VJ2,$VK2,{85:1241,86:1242,194:1243,191:[1,1244]}),o($VL2,$VK2,{85:1245,86:1246,194:1247,191:$V_5}),o($Vv1,$VO2,{101:507,97:1249,103:$VJ3,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1257,86:1258,194:1259,191:[1,1260]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1261],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1262,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1263]},o($VQ1,$VB3),o($Vh1,$VO3),o($Vj1,$VP3),o($Vj1,$VQ3),o($Vj1,$VR3),{72:[1,1264]},o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),o($VL2,$VK2,{86:848,194:849,85:1265,191:$VS4}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1266,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:848,194:849,85:1267,191:$VS4}),o($Vx1,$VO2,{101:546,97:1268,103:$VN3,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VS3),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1269,195:[1,1270]}),{20:$V44,22:$V54,131:1271,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1272,195:[1,1273]}),{20:$V44,22:$V54,131:1274,166:$V64,193:647,201:$V74,217:$V84},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1275,195:[1,1276]}),{20:$V44,22:$V54,131:1277,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1278]},o($VC1,$VS1),{102:[1,1280],108:1279,110:[1,1281],111:[1,1282],112:1283,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1284]},{123:[1,1285]},o($VC1,$Vy4),{20:[1,1288],22:[1,1290],89:1286,166:[1,1291],193:1287,217:[1,1289]},o($Vh1,$Vp2,{54:1292,55:[1,1293]}),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:1294,69:1295,74:1296,46:1297,80:1298,120:1302,81:[1,1299],82:[1,1300],83:[1,1301],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:1303,66:1304,75:1305,94:1306,96:1307,97:1311,101:1312,98:[1,1308],99:[1,1309],100:[1,1310],103:$V06,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1314,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:1315}),o($Vx1,$Vw1,{84:1316}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:1317}),o($Vv1,$VB1,{101:895,97:1318,103:$VU4,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:1319}),o($VC1,$VD1,{88:1320}),o($VC1,$VD1,{88:1321}),o($Vx1,$VE1,{107:901,109:902,93:1322,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:1323}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,1327],22:[1,1331],23:1325,38:1324,202:1326,216:1328,217:[1,1330],218:[1,1329]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:1332}),o($VQ1,$VR1),{121:[1,1333],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1334]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,1336],108:1335,110:[1,1337],111:[1,1338],112:1339,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1340]},o($Vj1,$Vq2),o($Vj1,$Vm1,{67:1341,69:1342,74:1343,46:1344,80:1345,120:1349,81:[1,1346],82:[1,1347],83:[1,1348],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:1350,66:1351,75:1352,94:1353,96:1354,97:1358,101:1359,98:[1,1355],99:[1,1356],100:[1,1357],103:$V16,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1361,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:1362}),o($Vx1,$Vw1,{84:1363}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:1364}),o($Vv1,$VB1,{101:931,97:1365,103:$VV4,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:1366}),o($VC1,$VD1,{88:1367}),o($VC1,$VD1,{88:1368}),o($Vx1,$VE1,{107:937,109:938,93:1369,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:1370}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,1374],22:[1,1378],23:1372,38:1371,202:1373,216:1375,217:[1,1377],218:[1,1376]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:1379}),o($VQ1,$VR1),{121:[1,1380],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1381]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,1383],108:1382,110:[1,1384],111:[1,1385],112:1386,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1387]},o($Vx1,$Vh5),o($VZ4,$VK2,{86:952,194:953,85:1388,191:$V_4}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1389,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:952,194:953,85:1390,191:$V_4}),o($VW3,$VO2,{101:606,97:1391,103:$VU3,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VS3),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:1392,195:[1,1393]}),{20:$V44,22:$V54,131:1394,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:1395,195:[1,1396]}),{20:$V44,22:$V54,131:1397,166:$V64,193:647,201:$V74,217:$V84},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:1398,195:[1,1399]}),{20:$V44,22:$V54,131:1400,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,1401]},o($VZ3,$VS1),{102:[1,1403],108:1402,110:[1,1404],111:[1,1405],112:1406,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1407]},{123:[1,1408]},o($VZ3,$Vy4),{20:[1,1411],22:[1,1413],89:1409,166:[1,1414],193:1410,217:[1,1412]},o($V$3,$VO3),o($V$3,$Vp2,{54:1415,55:[1,1416]}),o($VT3,$Vq2),o($VH,$VI,{67:1417,69:1418,74:1419,46:1420,80:1421,120:1425,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,1422],82:[1,1423],83:[1,1424]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:1426,66:1427,75:1428,94:1429,96:1430,97:1434,101:1435,98:[1,1431],99:[1,1432],100:[1,1433],103:$V46,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1437,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:1438}),o($VW3,$Vw1,{84:1439}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:1440}),o($VV3,$VB1,{101:1000,97:1441,103:$V15,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:1442}),o($VZ3,$VD1,{88:1443}),o($VZ3,$VD1,{88:1444}),o($VW3,$VE1,{107:1006,109:1007,93:1445,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:1446}),o($V36,$V71),o($V36,$V81),{20:[1,1450],22:[1,1454],23:1448,38:1447,202:1449,216:1451,217:[1,1453],218:[1,1452]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:1455}),o($V_3,$VR1),{121:[1,1456],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1457]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,1459],108:1458,110:[1,1460],111:[1,1461],112:1462,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1463]},o($VT3,$Vq2),o($VH,$VI,{67:1464,69:1465,74:1466,46:1467,80:1468,120:1472,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,1469],82:[1,1470],83:[1,1471]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:1473,66:1474,75:1475,94:1476,96:1477,97:1481,101:1482,98:[1,1478],99:[1,1479],100:[1,1480],103:$V56,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1484,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:1485}),o($VW3,$Vw1,{84:1486}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:1487}),o($VV3,$VB1,{101:1036,97:1488,103:$V25,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:1489}),o($VZ3,$VD1,{88:1490}),o($VZ3,$VD1,{88:1491}),o($VW3,$VE1,{107:1042,109:1043,93:1492,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:1493}),o($V36,$V71),o($V36,$V81),{20:[1,1497],22:[1,1501],23:1495,38:1494,202:1496,216:1498,217:[1,1500],218:[1,1499]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:1502}),o($V_3,$VR1),{121:[1,1503],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1504]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,1506],108:1505,110:[1,1507],111:[1,1508],112:1509,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1510]},{195:[1,1513],196:1511,197:[1,1512]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:1514,205:1515,113:[1,1516]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,1519],196:1517,197:[1,1518]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:1520,205:1521,113:[1,1522]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{195:[1,1525],196:1523,197:[1,1524]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:1526,205:1527,113:[1,1528]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),{20:[1,1531],22:[1,1533],89:1529,166:[1,1534],193:1530,217:[1,1532]},o($Vj4,$Vc6),o($Vj4,$Vd6),o($Vj4,$Ve6),o($Vs4,$Vf6),o($Vs4,$Vg6),o($Vs4,$Vh6),o($VC,$Vh,{48:1535,49:1536,57:1537,61:1538,42:1539,45:$VD}),o($Vi6,$Vw4),o($Vi6,$Vx4),o($Vi6,$VT1),o($Vi6,$VU1),o($Vi6,$VV1),o($Vi6,$VW1),{72:[1,1540]},{72:$Vf4},{72:$Vg4,135:1541,136:1542,137:$Vj6},{72:$Vi4},o($Vk6,$Vk4),o($Vk6,$Vl4),o($Vk6,$Vm4,{141:1544,144:1545,145:1548,142:$Vl6,143:$Vm6}),o($Vp4,$Vq4,{157:680,147:1549,152:1550,153:1551,156:1552,71:[1,1553],162:$Vr4}),o($Vn6,$Vt4),{20:[1,1557],22:[1,1561],23:1555,151:1554,202:1556,216:1558,217:[1,1560],218:[1,1559]},o($VD5,[2,193]),{20:$VE5,22:$VF5,23:1152,216:1156,217:$VU5},o($VD5,[2,195]),{102:$VG5,110:$VH5,111:$VI5,112:1163,182:1153,198:1157,199:1158,200:1159,203:1162,206:$VK5,207:$VL5,208:$VM5,209:$VN5,210:$VO5,211:$VP5,212:$VQ5,213:$VR5,214:$VS5,215:$VT5},o($VD5,[2,197]),{186:$VJ5},o($VD5,$Vo6,{181:1562,179:$Vp6}),o($VD5,$Vo6,{181:1564,179:$Vp6}),o($VD5,$Vo6,{181:1565,179:$Vp6}),o($Vq6,$Vr),o($Vq6,$Vs),o($Vq6,$VB4),o($Vq6,$VC4),o($Vq6,$VD4),o($Vq6,$Vu),o($Vq6,$Vv),o($Vq6,$VE4),o($Vq6,$VF4,{204:1566,205:1567,113:[1,1568]}),o($Vq6,$VG4),o($Vq6,$VH4),o($Vq6,$VI4),o($Vq6,$VJ4),o($Vq6,$VK4),o($Vq6,$VL4),o($Vq6,$VM4),o($Vq6,$VN4),o($Vq6,$VO4),o($Vr6,$Vx3),o($Vr6,$Vy3),o($Vr6,$Vz3),o($Vr6,$VA3),o($VO1,[2,204],{171:1569,180:$VA5}),o($VO1,[2,213],{173:1570,180:$VB5}),o($VO1,[2,221],{175:1571,180:$VC5}),o($VA4,$Vs6),o($VA4,$VN1),o($VA4,$VT1),o($VA4,$VU1),o($VA4,$VV1),o($VA4,$VW1),o($Vj1,$VI3),o($VH,$VI,{64:1572,66:1573,68:1574,69:1575,75:1578,77:1579,74:1580,46:1581,94:1582,96:1583,89:1585,90:1586,91:1587,80:1588,97:1595,193:1596,93:1598,120:1599,101:1600,107:1606,109:1607,20:[1,1602],22:[1,1604],28:[1,1597],71:[1,1576],73:[1,1577],81:[1,1589],82:[1,1590],83:[1,1591],87:[1,1584],98:[1,1592],99:[1,1593],100:[1,1594],103:$Vt6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1605],217:[1,1603]}),o($VL2,$VK2,{86:1208,194:1209,85:1608,191:$VY5}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1609,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1208,194:1209,85:1610,191:$VY5}),o($Vx1,$VO2,{101:747,97:1611,103:$VQ4,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1612,195:[1,1613]}),{20:$V44,22:$V54,131:1614,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1615,195:[1,1616]}),{20:$V44,22:$V54,131:1617,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1618]},o($VC1,$VS1),{102:[1,1620],108:1619,110:[1,1621],111:[1,1622],112:1623,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1624]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1625,195:[1,1626]}),{20:$V44,22:$V54,131:1627,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,1628]},{20:[1,1631],22:[1,1633],89:1629,166:[1,1634],193:1630,217:[1,1632]},o($VL2,$VK2,{86:1246,194:1247,85:1635,191:$V_5}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1636,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1246,194:1247,85:1637,191:$V_5}),o($Vx1,$VO2,{101:794,97:1638,103:$VR4,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1639,195:[1,1640]}),{20:$V44,22:$V54,131:1641,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1642,195:[1,1643]}),{20:$V44,22:$V54,131:1644,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1645]},o($VC1,$VS1),{102:[1,1647],108:1646,110:[1,1648],111:[1,1649],112:1650,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1651]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1652,195:[1,1653]}),{20:$V44,22:$V54,131:1654,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,1655]},{20:[1,1658],22:[1,1660],89:1656,166:[1,1661],193:1657,217:[1,1659]},o($Vj1,$VW4),o($Vj1,$Va4),{123:[1,1662]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:1663,216:57,217:$Vq},{20:$Vu6,22:$Vv6,102:[1,1676],110:[1,1677],111:[1,1678],112:1675,166:$Vw6,182:1666,192:1664,193:1665,198:1671,199:1672,200:1673,203:1674,206:[1,1679],207:[1,1680],208:[1,1685],209:[1,1686],210:[1,1687],211:[1,1688],212:[1,1681],213:[1,1682],214:[1,1683],215:[1,1684],217:$Vx6},o($VL2,$V35),{20:$Vo,22:$Vp,23:1689,216:57,217:$Vq},{20:$Vy6,22:$Vz6,102:[1,1702],110:[1,1703],111:[1,1704],112:1701,166:$VA6,182:1692,192:1690,193:1691,198:1697,199:1698,200:1699,203:1700,206:[1,1705],207:[1,1706],208:[1,1711],209:[1,1712],210:[1,1713],211:[1,1714],212:[1,1707],213:[1,1708],214:[1,1709],215:[1,1710],217:$VB6},o($VN2,$V35),{20:$Vo,22:$Vp,23:1715,216:57,217:$Vq},{20:$VC6,22:$VD6,102:[1,1728],110:[1,1729],111:[1,1730],112:1727,166:$VE6,182:1718,192:1716,193:1717,198:1723,199:1724,200:1725,203:1726,206:[1,1731],207:[1,1732],208:[1,1737],209:[1,1738],210:[1,1739],211:[1,1740],212:[1,1733],213:[1,1734],214:[1,1735],215:[1,1736],217:$VF6},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,1741]},o($VC1,$VB3),o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$VP3),o($VC,$Vh,{56:1742,42:1743,45:$VD}),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1744}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1748],22:[1,1752],23:1746,38:1745,202:1747,216:1749,217:[1,1751],218:[1,1750]},{121:[1,1753],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1754}),o($VC2,$VA1,{95:1755}),o($Vx1,$VB1,{101:1312,97:1756,103:$V06,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1757]},o($VC2,$VS1),{72:[1,1758]},o($VJ2,$VK2,{85:1759,86:1760,194:1761,191:[1,1762]}),o($VL2,$VK2,{85:1763,86:1764,194:1765,191:$VG6}),o($Vv1,$VO2,{101:895,97:1767,103:$VU4,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1775,86:1776,194:1777,191:[1,1778]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1779],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1780,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1781]},o($VQ1,$VB3),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1782}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1786],22:[1,1790],23:1784,38:1783,202:1785,216:1787,217:[1,1789],218:[1,1788]},{121:[1,1791],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1792}),o($VC2,$VA1,{95:1793}),o($Vx1,$VB1,{101:1359,97:1794,103:$V16,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1795]},o($VC2,$VS1),{72:[1,1796]},o($VJ2,$VK2,{85:1797,86:1798,194:1799,191:[1,1800]}),o($VL2,$VK2,{85:1801,86:1802,194:1803,191:$VI6}),o($Vv1,$VO2,{101:931,97:1805,103:$VV4,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1813,86:1814,194:1815,191:[1,1816]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1817],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1818,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1819]},o($VQ1,$VB3),o($VT3,$Va4),{123:[1,1820]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:1821,216:57,217:$Vq},{20:$VK6,22:$VL6,102:[1,1834],110:[1,1835],111:[1,1836],112:1833,166:$VM6,182:1824,192:1822,193:1823,198:1829,199:1830,200:1831,203:1832,206:[1,1837],207:[1,1838],208:[1,1843],209:[1,1844],210:[1,1845],211:[1,1846],212:[1,1839],213:[1,1840],214:[1,1841],215:[1,1842],217:$VN6},o($VZ4,$V35),{20:$Vo,22:$Vp,23:1847,216:57,217:$Vq},{20:$VO6,22:$VP6,102:[1,1860],110:[1,1861],111:[1,1862],112:1859,166:$VQ6,182:1850,192:1848,193:1849,198:1855,199:1856,200:1857,203:1858,206:[1,1863],207:[1,1864],208:[1,1869],209:[1,1870],210:[1,1871],211:[1,1872],212:[1,1865],213:[1,1866],214:[1,1867],215:[1,1868],217:$VR6},o($V$4,$V35),{20:$Vo,22:$Vp,23:1873,216:57,217:$Vq},{20:$VS6,22:$VT6,102:[1,1886],110:[1,1887],111:[1,1888],112:1885,166:$VU6,182:1876,192:1874,193:1875,198:1881,199:1882,200:1883,203:1884,206:[1,1889],207:[1,1890],208:[1,1895],209:[1,1896],210:[1,1897],211:[1,1898],212:[1,1891],213:[1,1892],214:[1,1893],215:[1,1894],217:$VV6},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,1899]},o($VZ3,$VB3),o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VT3,$VP3),o($VC,$Vh,{56:1900,42:1901,45:$VD}),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:1902}),o($VT3,$V71),o($VT3,$V81),{20:[1,1906],22:[1,1910],23:1904,38:1903,202:1905,216:1907,217:[1,1909],218:[1,1908]},{121:[1,1911],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:1912}),o($VX4,$VA1,{95:1913}),o($VW3,$VB1,{101:1435,97:1914,103:$V46,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,1915]},o($VX4,$VS1),{72:[1,1916]},o($VY4,$VK2,{85:1917,86:1918,194:1919,191:[1,1920]}),o($VZ4,$VK2,{85:1921,86:1922,194:1923,191:$VW6}),o($VV3,$VO2,{101:1000,97:1925,103:$V15,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:1933,86:1934,194:1935,191:[1,1936]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,1937],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1938,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,1939]},o($V_3,$VB3),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:1940}),o($VT3,$V71),o($VT3,$V81),{20:[1,1944],22:[1,1948],23:1942,38:1941,202:1943,216:1945,217:[1,1947],218:[1,1946]},{121:[1,1949],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:1950}),o($VX4,$VA1,{95:1951}),o($VW3,$VB1,{101:1482,97:1952,103:$V56,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,1953]},o($VX4,$VS1),{72:[1,1954]},o($VY4,$VK2,{85:1955,86:1956,194:1957,191:[1,1958]}),o($VZ4,$VK2,{85:1959,86:1960,194:1961,191:$VY6}),o($VV3,$VO2,{101:1036,97:1963,103:$V25,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:1971,86:1972,194:1973,191:[1,1974]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,1975],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1976,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,1977]},o($V_3,$VB3),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$V45,22:$V55,89:1978,166:$V65,193:1979,217:$V75},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$V95,22:$Va5,89:1980,166:$Vb5,193:1981,217:$Vc5},o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vd5,22:$Ve5,89:1982,166:$Vf5,193:1983,217:$Vg5},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($V_6,$V$6,{154:1984,155:1985,158:$V07,159:$V17,160:$V27,161:$V37}),o($V47,$V57),o($V67,$V77,{58:1990}),o($V87,$V97,{62:1991}),o($VH,$VI,{65:1992,75:1993,77:1994,78:1995,94:1998,96:1999,89:2001,90:2002,91:2003,80:2004,46:2005,97:2009,193:2010,93:2012,120:2013,101:2017,107:2023,109:2024,20:[1,2019],22:[1,2021],28:[1,2011],71:[1,1996],73:[1,1997],81:[1,2014],82:[1,2015],83:[1,2016],87:[1,2000],98:[1,2006],99:[1,2007],100:[1,2008],103:$Va7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2022],217:[1,2020]}),o($V_6,$V$6,{155:1985,154:2025,158:$V07,159:$V17,160:$V27,161:$V37}),{72:$Vi5,136:2026,137:$Vj6},o($Vk6,$Vj5),o($VV2,$VW2,{149:388,138:1140,139:1141,140:1142,146:1143,148:1144,133:2027,150:$VY2,190:$Vw5}),o($Vk6,$Vk5),o($Vk6,$Vm4,{141:2028,145:2029,142:$Vl6,143:$Vm6}),o($VV2,$VW2,{149:388,146:1143,148:1144,140:2030,72:$Vl5,137:$Vl5,150:$VY2,190:$Vw5}),o($VV2,$VW2,{149:388,146:1143,148:1144,140:2031,72:$Vm5,137:$Vm5,150:$VY2,190:$Vw5}),o($Vn6,$Vn5),o($Vn6,$Vo5),o($Vn6,$Vp5),o($Vn6,$Vq5),{20:$Vr5,22:$Vs5,131:2032,166:$Vt5,193:1130,201:$Vu5,217:$Vv5},o($VV2,$VW2,{149:388,132:1137,133:1138,134:1139,138:1140,139:1141,140:1142,146:1143,148:1144,128:2033,150:$VY2,190:$Vw5}),o($Vn6,$Vx5),o($Vn6,$Vy5),o($Vn6,$Vz5),o($Vn6,$Vr),o($Vn6,$Vs),o($Vn6,$Vt),o($Vn6,$Vu),o($Vn6,$Vv),o($VD5,[2,207]),o($VD5,[2,209]),o($VD5,[2,216]),o($VD5,[2,224]),o($Vq6,$VV5),o($Vq6,$VW5),{20:[1,2036],22:[1,2038],89:2034,166:[1,2039],193:2035,217:[1,2037]},o($VD5,[2,203]),o($VD5,[2,212]),o($VD5,[2,220]),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:2040,69:2041,74:2042,46:2043,80:2044,120:2048,81:[1,2045],82:[1,2046],83:[1,2047],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:2049,66:2050,75:2051,94:2052,96:2053,97:2057,101:2058,98:[1,2054],99:[1,2055],100:[1,2056],103:$Vb7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2060,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:2061}),o($Vx1,$Vw1,{84:2062}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:2063}),o($Vv1,$VB1,{101:1600,97:2064,103:$Vt6,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:2065}),o($VC1,$VD1,{88:2066}),o($VC1,$VD1,{88:2067}),o($Vx1,$VE1,{107:1606,109:1607,93:2068,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:2069}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,2073],22:[1,2077],23:2071,38:2070,202:2072,216:2074,217:[1,2076],218:[1,2075]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:2078}),o($VQ1,$VR1),{121:[1,2079],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2080]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,2082],108:2081,110:[1,2083],111:[1,2084],112:2085,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2086]},o($Vj1,$Va4),{123:[1,2087]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2088,216:57,217:$Vq},{20:$Vc7,22:$Vd7,102:[1,2101],110:[1,2102],111:[1,2103],112:2100,166:$Ve7,182:2091,192:2089,193:2090,198:2096,199:2097,200:2098,203:2099,206:[1,2104],207:[1,2105],208:[1,2110],209:[1,2111],210:[1,2112],211:[1,2113],212:[1,2106],213:[1,2107],214:[1,2108],215:[1,2109],217:$Vf7},o($VL2,$V35),{20:$Vo,22:$Vp,23:2114,216:57,217:$Vq},{20:$Vg7,22:$Vh7,102:[1,2127],110:[1,2128],111:[1,2129],112:2126,166:$Vi7,182:2117,192:2115,193:2116,198:2122,199:2123,200:2124,203:2125,206:[1,2130],207:[1,2131],208:[1,2136],209:[1,2137],210:[1,2138],211:[1,2139],212:[1,2132],213:[1,2133],214:[1,2134],215:[1,2135],217:$Vj7},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2140]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2141,216:57,217:$Vq},{20:$Vk7,22:$Vl7,102:[1,2154],110:[1,2155],111:[1,2156],112:2153,166:$Vm7,182:2144,192:2142,193:2143,198:2149,199:2150,200:2151,203:2152,206:[1,2157],207:[1,2158],208:[1,2163],209:[1,2164],210:[1,2165],211:[1,2166],212:[1,2159],213:[1,2160],214:[1,2161],215:[1,2162],217:$Vn7},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$Va4),{123:[1,2167]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2168,216:57,217:$Vq},{20:$Vo7,22:$Vp7,102:[1,2181],110:[1,2182],111:[1,2183],112:2180,166:$Vq7,182:2171,192:2169,193:2170,198:2176,199:2177,200:2178,203:2179,206:[1,2184],207:[1,2185],208:[1,2190],209:[1,2191],210:[1,2192],211:[1,2193],212:[1,2186],213:[1,2187],214:[1,2188],215:[1,2189],217:$Vr7},o($VL2,$V35),{20:$Vo,22:$Vp,23:2194,216:57,217:$Vq},{20:$Vs7,22:$Vt7,102:[1,2207],110:[1,2208],111:[1,2209],112:2206,166:$Vu7,182:2197,192:2195,193:2196,198:2202,199:2203,200:2204,203:2205,206:[1,2210],207:[1,2211],208:[1,2216],209:[1,2217],210:[1,2218],211:[1,2219],212:[1,2212],213:[1,2213],214:[1,2214],215:[1,2215],217:$Vv7},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2220]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2221,216:57,217:$Vq},{20:$Vw7,22:$Vx7,102:[1,2234],110:[1,2235],111:[1,2236],112:2233,166:$Vy7,182:2224,192:2222,193:2223,198:2229,199:2230,200:2231,203:2232,206:[1,2237],207:[1,2238],208:[1,2243],209:[1,2244],210:[1,2245],211:[1,2246],212:[1,2239],213:[1,2240],214:[1,2241],215:[1,2242],217:$Vz7},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vx1,$Vh5),{195:[1,2249],196:2247,197:[1,2248]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2250,205:2251,113:[1,2252]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2255],196:2253,197:[1,2254]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2256,205:2257,113:[1,2258]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{195:[1,2261],196:2259,197:[1,2260]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2262,205:2263,113:[1,2264]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),{20:[1,2267],22:[1,2269],89:2265,166:[1,2270],193:2266,217:[1,2268]},o($Vj1,$VI3),o($VH,$VI,{64:2271,66:2272,68:2273,69:2274,75:2277,77:2278,74:2279,46:2280,94:2281,96:2282,89:2284,90:2285,91:2286,80:2287,97:2294,193:2295,93:2297,120:2298,101:2299,107:2305,109:2306,20:[1,2301],22:[1,2303],28:[1,2296],71:[1,2275],73:[1,2276],81:[1,2288],82:[1,2289],83:[1,2290],87:[1,2283],98:[1,2291],99:[1,2292],100:[1,2293],103:$VA7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2304],217:[1,2302]}),o($VL2,$VK2,{86:1764,194:1765,85:2307,191:$VG6}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2308,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1764,194:1765,85:2309,191:$VG6}),o($Vx1,$VO2,{101:1312,97:2310,103:$V06,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:2311,195:[1,2312]}),{20:$V44,22:$V54,131:2313,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:2314,195:[1,2315]}),{20:$V44,22:$V54,131:2316,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,2317]},o($VC1,$VS1),{102:[1,2319],108:2318,110:[1,2320],111:[1,2321],112:2322,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2323]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:2324,195:[1,2325]}),{20:$V44,22:$V54,131:2326,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,2327]},{20:[1,2330],22:[1,2332],89:2328,166:[1,2333],193:2329,217:[1,2331]},o($VL2,$VK2,{86:1802,194:1803,85:2334,191:$VI6}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2335,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1802,194:1803,85:2336,191:$VI6}),o($Vx1,$VO2,{101:1359,97:2337,103:$V16,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:2338,195:[1,2339]}),{20:$V44,22:$V54,131:2340,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:2341,195:[1,2342]}),{20:$V44,22:$V54,131:2343,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,2344]},o($VC1,$VS1),{102:[1,2346],108:2345,110:[1,2347],111:[1,2348],112:2349,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2350]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:2351,195:[1,2352]}),{20:$V44,22:$V54,131:2353,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,2354]},{20:[1,2357],22:[1,2359],89:2355,166:[1,2360],193:2356,217:[1,2358]},o($VW3,$Vh5),{195:[1,2363],196:2361,197:[1,2362]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:2364,205:2365,113:[1,2366]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,2369],196:2367,197:[1,2368]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:2370,205:2371,113:[1,2372]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{195:[1,2375],196:2373,197:[1,2374]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:2376,205:2377,113:[1,2378]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),{20:[1,2381],22:[1,2383],89:2379,166:[1,2384],193:2380,217:[1,2382]},o($VT3,$VI3),o($VH,$VI,{64:2385,66:2386,68:2387,69:2388,75:2391,77:2392,74:2393,46:2394,94:2395,96:2396,89:2398,90:2399,91:2400,80:2401,97:2408,193:2409,93:2411,120:2412,101:2413,107:2419,109:2420,20:[1,2415],22:[1,2417],28:[1,2410],71:[1,2389],73:[1,2390],81:[1,2402],82:[1,2403],83:[1,2404],87:[1,2397],98:[1,2405],99:[1,2406],100:[1,2407],103:$VE7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2418],217:[1,2416]}),o($VZ4,$VK2,{86:1922,194:1923,85:2421,191:$VW6}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2422,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:1922,194:1923,85:2423,191:$VW6}),o($VW3,$VO2,{101:1435,97:2424,103:$V46,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:2425,195:[1,2426]}),{20:$V44,22:$V54,131:2427,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:2428,195:[1,2429]}),{20:$V44,22:$V54,131:2430,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,2431]},o($VZ3,$VS1),{102:[1,2433],108:2432,110:[1,2434],111:[1,2435],112:2436,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2437]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:2438,195:[1,2439]}),{20:$V44,22:$V54,131:2440,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,2441]},{20:[1,2444],22:[1,2446],89:2442,166:[1,2447],193:2443,217:[1,2445]},o($VZ4,$VK2,{86:1960,194:1961,85:2448,191:$VY6}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2449,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:1960,194:1961,85:2450,191:$VY6}),o($VW3,$VO2,{101:1482,97:2451,103:$V56,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:2452,195:[1,2453]}),{20:$V44,22:$V54,131:2454,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:2455,195:[1,2456]}),{20:$V44,22:$V54,131:2457,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,2458]},o($VZ3,$VS1),{102:[1,2460],108:2459,110:[1,2461],111:[1,2462],112:2463,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2464]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:2465,195:[1,2466]}),{20:$V44,22:$V54,131:2467,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,2468]},{20:[1,2471],22:[1,2473],89:2469,166:[1,2474],193:2470,217:[1,2472]},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($V_6,$Vw1,{84:2475}),o($V_6,$VF7),o($V_6,$VG7),o($V_6,$VH7),o($V_6,$VI7),o($V_6,$VJ7),o($V47,$VK7,{59:2476,53:[1,2477]}),o($V67,$VL7,{63:2478,55:[1,2479]}),o($V87,$VM7),o($V87,$VN7,{76:2480,78:2481,80:2482,46:2483,120:2484,81:[1,2485],82:[1,2486],83:[1,2487],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:2488,75:2489,94:2490,96:2491,97:2495,101:2496,98:[1,2492],99:[1,2493],100:[1,2494],103:$VQ7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2498,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:2499}),o($VT7,$VB1,{101:2017,97:2500,103:$Va7,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:2501}),o($VU7,$VD1,{88:2502}),o($VU7,$VD1,{88:2503}),o($V87,$VE1,{107:2023,109:2024,93:2504,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:2505}),o($VY7,$VR1),{121:[1,2506],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,2510],22:[1,2514],23:2508,38:2507,202:2509,216:2511,217:[1,2513],218:[1,2512]},{102:[1,2515]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,2517],108:2516,110:[1,2518],111:[1,2519],112:2520,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2521]},o($V_6,$Vw1,{84:2522}),o($Vk6,$Vc6),o($Vk6,$Vd6),o($Vk6,$Ve6),o($Vn6,$Vf6),o($Vn6,$Vg6),o($Vn6,$Vh6),o($VC,$Vh,{48:2523,49:2524,57:2525,61:2526,42:2527,45:$VD}),{72:[1,2528]},o($Vq6,$Vs6),o($Vq6,$VN1),o($Vq6,$VT1),o($Vq6,$VU1),o($Vq6,$VV1),o($Vq6,$VW1),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:2529}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,2533],22:[1,2537],23:2531,38:2530,202:2532,216:2534,217:[1,2536],218:[1,2535]},{121:[1,2538],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:2539}),o($VC2,$VA1,{95:2540}),o($Vx1,$VB1,{101:2058,97:2541,103:$Vb7,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,2542]},o($VC2,$VS1),{72:[1,2543]},o($VJ2,$VK2,{85:2544,86:2545,194:2546,191:[1,2547]}),o($VL2,$VK2,{85:2548,86:2549,194:2550,191:$VZ7}),o($Vv1,$VO2,{101:1600,97:2552,103:$Vt6,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:2560,86:2561,194:2562,191:[1,2563]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,2564],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2565,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,2566]},o($VQ1,$VB3),o($Vx1,$Vh5),{195:[1,2569],196:2567,197:[1,2568]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2570,205:2571,113:[1,2572]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2575],196:2573,197:[1,2574]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2576,205:2577,113:[1,2578]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,2581],22:[1,2583],89:2579,166:[1,2584],193:2580,217:[1,2582]},{195:[1,2587],196:2585,197:[1,2586]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2588,205:2589,113:[1,2590]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vx1,$Vh5),{195:[1,2593],196:2591,197:[1,2592]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2594,205:2595,113:[1,2596]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2599],196:2597,197:[1,2598]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2600,205:2601,113:[1,2602]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,2605],22:[1,2607],89:2603,166:[1,2608],193:2604,217:[1,2606]},{195:[1,2611],196:2609,197:[1,2610]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2612,205:2613,113:[1,2614]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vu6,22:$Vv6,89:2615,166:$Vw6,193:2616,217:$Vx6},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vy6,22:$Vz6,89:2617,166:$VA6,193:2618,217:$VB6},o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$VC6,22:$VD6,89:2619,166:$VE6,193:2620,217:$VF6},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:2621,69:2622,74:2623,46:2624,80:2625,120:2629,81:[1,2626],82:[1,2627],83:[1,2628],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:2630,66:2631,75:2632,94:2633,96:2634,97:2638,101:2639,98:[1,2635],99:[1,2636],100:[1,2637],103:$V$7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2641,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:2642}),o($Vx1,$Vw1,{84:2643}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:2644}),o($Vv1,$VB1,{101:2299,97:2645,103:$VA7,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:2646}),o($VC1,$VD1,{88:2647}),o($VC1,$VD1,{88:2648}),o($Vx1,$VE1,{107:2305,109:2306,93:2649,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:2650}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,2654],22:[1,2658],23:2652,38:2651,202:2653,216:2655,217:[1,2657],218:[1,2656]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:2659}),o($VQ1,$VR1),{121:[1,2660],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2661]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,2663],108:2662,110:[1,2664],111:[1,2665],112:2666,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2667]},o($Vj1,$Va4),{123:[1,2668]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2669,216:57,217:$Vq},{20:$V08,22:$V18,102:[1,2682],110:[1,2683],111:[1,2684],112:2681,166:$V28,182:2672,192:2670,193:2671,198:2677,199:2678,200:2679,203:2680,206:[1,2685],207:[1,2686],208:[1,2691],209:[1,2692],210:[1,2693],211:[1,2694],212:[1,2687],213:[1,2688],214:[1,2689],215:[1,2690],217:$V38},o($VL2,$V35),{20:$Vo,22:$Vp,23:2695,216:57,217:$Vq},{20:$V48,22:$V58,102:[1,2708],110:[1,2709],111:[1,2710],112:2707,166:$V68,182:2698,192:2696,193:2697,198:2703,199:2704,200:2705,203:2706,206:[1,2711],207:[1,2712],208:[1,2717],209:[1,2718],210:[1,2719],211:[1,2720],212:[1,2713],213:[1,2714],214:[1,2715],215:[1,2716],217:$V78},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2721]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2722,216:57,217:$Vq},{20:$V88,22:$V98,102:[1,2735],110:[1,2736],111:[1,2737],112:2734,166:$Va8,182:2725,192:2723,193:2724,198:2730,199:2731,200:2732,203:2733,206:[1,2738],207:[1,2739],208:[1,2744],209:[1,2745],210:[1,2746],211:[1,2747],212:[1,2740],213:[1,2741],214:[1,2742],215:[1,2743],217:$Vb8},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$Va4),{123:[1,2748]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2749,216:57,217:$Vq},{20:$Vc8,22:$Vd8,102:[1,2762],110:[1,2763],111:[1,2764],112:2761,166:$Ve8,182:2752,192:2750,193:2751,198:2757,199:2758,200:2759,203:2760,206:[1,2765],207:[1,2766],208:[1,2771],209:[1,2772],210:[1,2773],211:[1,2774],212:[1,2767],213:[1,2768],214:[1,2769],215:[1,2770],217:$Vf8},o($VL2,$V35),{20:$Vo,22:$Vp,23:2775,216:57,217:$Vq},{20:$Vg8,22:$Vh8,102:[1,2788],110:[1,2789],111:[1,2790],112:2787,166:$Vi8,182:2778,192:2776,193:2777,198:2783,199:2784,200:2785,203:2786,206:[1,2791],207:[1,2792],208:[1,2797],209:[1,2798],210:[1,2799],211:[1,2800],212:[1,2793],213:[1,2794],214:[1,2795],215:[1,2796],217:$Vj8},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2801]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2802,216:57,217:$Vq},{20:$Vk8,22:$Vl8,102:[1,2815],110:[1,2816],111:[1,2817],112:2814,166:$Vm8,182:2805,192:2803,193:2804,198:2810,199:2811,200:2812,203:2813,206:[1,2818],207:[1,2819],208:[1,2824],209:[1,2825],210:[1,2826],211:[1,2827],212:[1,2820],213:[1,2821],214:[1,2822],215:[1,2823],217:$Vn8},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VK6,22:$VL6,89:2828,166:$VM6,193:2829,217:$VN6},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VO6,22:$VP6,89:2830,166:$VQ6,193:2831,217:$VR6},o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$VS6,22:$VT6,89:2832,166:$VU6,193:2833,217:$VV6},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($VT3,$Vq2),o($VH,$VI,{67:2834,69:2835,74:2836,46:2837,80:2838,120:2842,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,2839],82:[1,2840],83:[1,2841]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:2843,66:2844,75:2845,94:2846,96:2847,97:2851,101:2852,98:[1,2848],99:[1,2849],100:[1,2850],103:$Vo8,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2854,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:2855}),o($VW3,$Vw1,{84:2856}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:2857}),o($VV3,$VB1,{101:2413,97:2858,103:$VE7,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:2859}),o($VZ3,$VD1,{88:2860}),o($VZ3,$VD1,{88:2861}),o($VW3,$VE1,{107:2419,109:2420,93:2862,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:2863}),o($V36,$V71),o($V36,$V81),{20:[1,2867],22:[1,2871],23:2865,38:2864,202:2866,216:2868,217:[1,2870],218:[1,2869]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:2872}),o($V_3,$VR1),{121:[1,2873],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2874]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,2876],108:2875,110:[1,2877],111:[1,2878],112:2879,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2880]},o($VT3,$Va4),{123:[1,2881]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:2882,216:57,217:$Vq},{20:$Vp8,22:$Vq8,102:[1,2895],110:[1,2896],111:[1,2897],112:2894,166:$Vr8,182:2885,192:2883,193:2884,198:2890,199:2891,200:2892,203:2893,206:[1,2898],207:[1,2899],208:[1,2904],209:[1,2905],210:[1,2906],211:[1,2907],212:[1,2900],213:[1,2901],214:[1,2902],215:[1,2903],217:$Vs8},o($VZ4,$V35),{20:$Vo,22:$Vp,23:2908,216:57,217:$Vq},{20:$Vt8,22:$Vu8,102:[1,2921],110:[1,2922],111:[1,2923],112:2920,166:$Vv8,182:2911,192:2909,193:2910,198:2916,199:2917,200:2918,203:2919,206:[1,2924],207:[1,2925],208:[1,2930],209:[1,2931],210:[1,2932],211:[1,2933],212:[1,2926],213:[1,2927],214:[1,2928],215:[1,2929],217:$Vw8},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,2934]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:2935,216:57,217:$Vq},{20:$Vx8,22:$Vy8,102:[1,2948],110:[1,2949],111:[1,2950],112:2947,166:$Vz8,182:2938,192:2936,193:2937,198:2943,199:2944,200:2945,203:2946,206:[1,2951],207:[1,2952],208:[1,2957],209:[1,2958],210:[1,2959],211:[1,2960],212:[1,2953],213:[1,2954],214:[1,2955],215:[1,2956],217:$VA8},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VT3,$Va4),{123:[1,2961]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:2962,216:57,217:$Vq},{20:$VB8,22:$VC8,102:[1,2975],110:[1,2976],111:[1,2977],112:2974,166:$VD8,182:2965,192:2963,193:2964,198:2970,199:2971,200:2972,203:2973,206:[1,2978],207:[1,2979],208:[1,2984],209:[1,2985],210:[1,2986],211:[1,2987],212:[1,2980],213:[1,2981],214:[1,2982],215:[1,2983],217:$VE8},o($VZ4,$V35),{20:$Vo,22:$Vp,23:2988,216:57,217:$Vq},{20:$VF8,22:$VG8,102:[1,3001],110:[1,3002],111:[1,3003],112:3000,166:$VH8,182:2991,192:2989,193:2990,198:2996,199:2997,200:2998,203:2999,206:[1,3004],207:[1,3005],208:[1,3010],209:[1,3011],210:[1,3012],211:[1,3013],212:[1,3006],213:[1,3007],214:[1,3008],215:[1,3009],217:$VI8},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,3014]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:3015,216:57,217:$Vq},{20:$VJ8,22:$VK8,102:[1,3028],110:[1,3029],111:[1,3030],112:3027,166:$VL8,182:3018,192:3016,193:3017,198:3023,199:3024,200:3025,203:3026,206:[1,3031],207:[1,3032],208:[1,3037],209:[1,3038],210:[1,3039],211:[1,3040],212:[1,3033],213:[1,3034],214:[1,3035],215:[1,3036],217:$VM8},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VN8,$VK2,{85:3041,86:3042,194:3043,191:$VO8}),o($V67,$VP8),o($VC,$Vh,{57:3045,61:3046,42:3047,45:$VD}),o($V87,$VQ8),o($VC,$Vh,{61:3048,42:3049,45:$VD}),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3050],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3054],22:[1,3058],23:3052,38:3051,202:3053,216:3055,217:[1,3057],218:[1,3056]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3059}),o($V87,$VB1,{101:2496,97:3060,103:$VQ7,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3061]},o($VV8,$VS1),{72:[1,3062]},o($VT7,$VO2,{101:2017,97:3063,103:$Va7,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,3071],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3072,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,3073]},o($VY7,$VB3),o($VN8,$VK2,{86:3042,194:3043,85:3074,191:$VO8}),o($VX8,$V$6,{154:3075,155:3076,158:$VY8,159:$VZ8,160:$V_8,161:$V$8}),o($V09,$V57),o($V19,$V77,{58:3081}),o($V29,$V97,{62:3082}),o($VH,$VI,{65:3083,75:3084,77:3085,78:3086,94:3089,96:3090,89:3092,90:3093,91:3094,80:3095,46:3096,97:3100,193:3101,93:3103,120:3104,101:3108,107:3114,109:3115,20:[1,3110],22:[1,3112],28:[1,3102],71:[1,3087],73:[1,3088],81:[1,3105],82:[1,3106],83:[1,3107],87:[1,3091],98:[1,3097],99:[1,3098],100:[1,3099],103:$V39,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3113],217:[1,3111]}),o($VX8,$V$6,{155:3076,154:3116,158:$VY8,159:$VZ8,160:$V_8,161:$V$8}),o($VL2,$VK2,{86:2549,194:2550,85:3117,191:$VZ7}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3118,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:2549,194:2550,85:3119,191:$VZ7}),o($Vx1,$VO2,{101:2058,97:3120,103:$Vb7,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:3121,195:[1,3122]}),{20:$V44,22:$V54,131:3123,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:3124,195:[1,3125]}),{20:$V44,22:$V54,131:3126,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,3127]},o($VC1,$VS1),{102:[1,3129],108:3128,110:[1,3130],111:[1,3131],112:3132,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3133]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:3134,195:[1,3135]}),{20:$V44,22:$V54,131:3136,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,3137]},{20:[1,3140],22:[1,3142],89:3138,166:[1,3143],193:3139,217:[1,3141]},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vc7,22:$Vd7,89:3144,166:$Ve7,193:3145,217:$Vf7},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vg7,22:$Vh7,89:3146,166:$Vi7,193:3147,217:$Vj7},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vk7,22:$Vl7,89:3148,166:$Vm7,193:3149,217:$Vn7},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vo7,22:$Vp7,89:3150,166:$Vq7,193:3151,217:$Vr7},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vs7,22:$Vt7,89:3152,166:$Vu7,193:3153,217:$Vv7},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vw7,22:$Vx7,89:3154,166:$Vy7,193:3155,217:$Vz7},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:3156}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,3160],22:[1,3164],23:3158,38:3157,202:3159,216:3161,217:[1,3163],218:[1,3162]},{121:[1,3165],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:3166}),o($VC2,$VA1,{95:3167}),o($Vx1,$VB1,{101:2639,97:3168,103:$V$7,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,3169]},o($VC2,$VS1),{72:[1,3170]},o($VJ2,$VK2,{85:3171,86:3172,194:3173,191:[1,3174]}),o($VL2,$VK2,{85:3175,86:3176,194:3177,191:$V49}),o($Vv1,$VO2,{101:2299,97:3179,103:$VA7,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:3187,86:3188,194:3189,191:[1,3190]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,3191],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3192,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,3193]},o($VQ1,$VB3),o($Vx1,$Vh5),{195:[1,3196],196:3194,197:[1,3195]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3197,205:3198,113:[1,3199]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3202],196:3200,197:[1,3201]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3203,205:3204,113:[1,3205]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3208],22:[1,3210],89:3206,166:[1,3211],193:3207,217:[1,3209]},{195:[1,3214],196:3212,197:[1,3213]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3215,205:3216,113:[1,3217]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vx1,$Vh5),{195:[1,3220],196:3218,197:[1,3219]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3221,205:3222,113:[1,3223]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3226],196:3224,197:[1,3225]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3227,205:3228,113:[1,3229]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3232],22:[1,3234],89:3230,166:[1,3235],193:3231,217:[1,3233]},{195:[1,3238],196:3236,197:[1,3237]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3239,205:3240,113:[1,3241]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:3242}),o($VT3,$V71),o($VT3,$V81),{20:[1,3246],22:[1,3250],23:3244,38:3243,202:3245,216:3247,217:[1,3249],218:[1,3248]},{121:[1,3251],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:3252}),o($VX4,$VA1,{95:3253}),o($VW3,$VB1,{101:2852,97:3254,103:$Vo8,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,3255]},o($VX4,$VS1),{72:[1,3256]},o($VY4,$VK2,{85:3257,86:3258,194:3259,191:[1,3260]}),o($VZ4,$VK2,{85:3261,86:3262,194:3263,191:$V69}),o($VV3,$VO2,{101:2413,97:3265,103:$VE7,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:3273,86:3274,194:3275,191:[1,3276]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,3277],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3278,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,3279]},o($V_3,$VB3),o($VW3,$Vh5),{195:[1,3282],196:3280,197:[1,3281]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:3283,205:3284,113:[1,3285]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,3288],196:3286,197:[1,3287]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:3289,205:3290,113:[1,3291]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,3294],22:[1,3296],89:3292,166:[1,3297],193:3293,217:[1,3295]},{195:[1,3300],196:3298,197:[1,3299]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:3301,205:3302,113:[1,3303]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($VW3,$Vh5),{195:[1,3306],196:3304,197:[1,3305]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:3307,205:3308,113:[1,3309]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,3312],196:3310,197:[1,3311]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:3313,205:3314,113:[1,3315]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,3318],22:[1,3320],89:3316,166:[1,3321],193:3317,217:[1,3319]},{195:[1,3324],196:3322,197:[1,3323]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:3325,205:3326,113:[1,3327]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($Vs4,$V89),o($V_6,$V24),o($Vs4,$V34,{37:3328,195:[1,3329]}),{20:$V44,22:$V54,131:3330,166:$V64,193:647,201:$V74,217:$V84},o($V67,$V99),o($V87,$V97,{62:3331}),o($VH,$VI,{65:3332,75:3333,77:3334,78:3335,94:3338,96:3339,89:3341,90:3342,91:3343,80:3344,46:3345,97:3349,193:3350,93:3352,120:3353,101:3357,107:3363,109:3364,20:[1,3359],22:[1,3361],28:[1,3351],71:[1,3336],73:[1,3337],81:[1,3354],82:[1,3355],83:[1,3356],87:[1,3340],98:[1,3346],99:[1,3347],100:[1,3348],103:$Va9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3362],217:[1,3360]}),o($V87,$Vb9),o($VH,$VI,{65:3365,75:3366,77:3367,78:3368,94:3371,96:3372,89:3374,90:3375,91:3376,80:3377,46:3378,97:3382,193:3383,93:3385,120:3386,101:3390,107:3396,109:3397,20:[1,3392],22:[1,3394],28:[1,3384],71:[1,3369],73:[1,3370],81:[1,3387],82:[1,3388],83:[1,3389],87:[1,3373],98:[1,3379],99:[1,3380],100:[1,3381],103:$Vc9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3395],217:[1,3393]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3398,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:2496,97:3399,103:$VQ7,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,3400]},o($VU7,$VS1),{102:[1,3402],108:3401,110:[1,3403],111:[1,3404],112:3405,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3406]},o($VU7,$Vy4),{123:[1,3407]},{20:[1,3410],22:[1,3412],89:3408,166:[1,3413],193:3409,217:[1,3411]},o($Vs4,$Ve9),o($VX8,$Vw1,{84:3414}),o($VX8,$VF7),o($VX8,$VG7),o($VX8,$VH7),o($VX8,$VI7),o($VX8,$VJ7),o($V09,$VK7,{59:3415,53:[1,3416]}),o($V19,$VL7,{63:3417,55:[1,3418]}),o($V29,$VM7),o($V29,$VN7,{76:3419,78:3420,80:3421,46:3422,120:3423,81:[1,3424],82:[1,3425],83:[1,3426],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:3427,75:3428,94:3429,96:3430,97:3434,101:3435,98:[1,3431],99:[1,3432],100:[1,3433],103:$Vf9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3437,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:3438}),o($Vh9,$VB1,{101:3108,97:3439,103:$V39,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:3440}),o($Vi9,$VD1,{88:3441}),o($Vi9,$VD1,{88:3442}),o($V29,$VE1,{107:3114,109:3115,93:3443,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:3444}),o($Vk9,$VR1),{121:[1,3445],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,3449],22:[1,3453],23:3447,38:3446,202:3448,216:3450,217:[1,3452],218:[1,3451]},{102:[1,3454]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,3456],108:3455,110:[1,3457],111:[1,3458],112:3459,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3460]},o($VX8,$Vw1,{84:3461}),o($Vj1,$Va4),{123:[1,3462]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:3463,216:57,217:$Vq},{20:$Vl9,22:$Vm9,102:[1,3476],110:[1,3477],111:[1,3478],112:3475,166:$Vn9,182:3466,192:3464,193:3465,198:3471,199:3472,200:3473,203:3474,206:[1,3479],207:[1,3480],208:[1,3485],209:[1,3486],210:[1,3487],211:[1,3488],212:[1,3481],213:[1,3482],214:[1,3483],215:[1,3484],217:$Vo9},o($VL2,$V35),{20:$Vo,22:$Vp,23:3489,216:57,217:$Vq},{20:$Vp9,22:$Vq9,102:[1,3502],110:[1,3503],111:[1,3504],112:3501,166:$Vr9,182:3492,192:3490,193:3491,198:3497,199:3498,200:3499,203:3500,206:[1,3505],207:[1,3506],208:[1,3511],209:[1,3512],210:[1,3513],211:[1,3514],212:[1,3507],213:[1,3508],214:[1,3509],215:[1,3510],217:$Vs9},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,3515]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:3516,216:57,217:$Vq},{20:$Vt9,22:$Vu9,102:[1,3529],110:[1,3530],111:[1,3531],112:3528,166:$Vv9,182:3519,192:3517,193:3518,198:3524,199:3525,200:3526,203:3527,206:[1,3532],207:[1,3533],208:[1,3538],209:[1,3539],210:[1,3540],211:[1,3541],212:[1,3534],213:[1,3535],214:[1,3536],215:[1,3537],217:$Vw9},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VL2,$VK2,{86:3176,194:3177,85:3542,191:$V49}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3543,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:3176,194:3177,85:3544,191:$V49}),o($Vx1,$VO2,{101:2639,97:3545,103:$V$7,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:3546,195:[1,3547]}),{20:$V44,22:$V54,131:3548,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:3549,195:[1,3550]}),{20:$V44,22:$V54,131:3551,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,3552]},o($VC1,$VS1),{102:[1,3554],108:3553,110:[1,3555],111:[1,3556],112:3557,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3558]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:3559,195:[1,3560]}),{20:$V44,22:$V54,131:3561,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,3562]},{20:[1,3565],22:[1,3567],89:3563,166:[1,3568],193:3564,217:[1,3566]},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$V08,22:$V18,89:3569,166:$V28,193:3570,217:$V38},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$V48,22:$V58,89:3571,166:$V68,193:3572,217:$V78},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$V88,22:$V98,89:3573,166:$Va8,193:3574,217:$Vb8},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vc8,22:$Vd8,89:3575,166:$Ve8,193:3576,217:$Vf8},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vg8,22:$Vh8,89:3577,166:$Vi8,193:3578,217:$Vj8},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vk8,22:$Vl8,89:3579,166:$Vm8,193:3580,217:$Vn8},o($VZ4,$VK2,{86:3262,194:3263,85:3581,191:$V69}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3582,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:3262,194:3263,85:3583,191:$V69}),o($VW3,$VO2,{101:2852,97:3584,103:$Vo8,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:3585,195:[1,3586]}),{20:$V44,22:$V54,131:3587,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:3588,195:[1,3589]}),{20:$V44,22:$V54,131:3590,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,3591]},o($VZ3,$VS1),{102:[1,3593],108:3592,110:[1,3594],111:[1,3595],112:3596,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3597]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:3598,195:[1,3599]}),{20:$V44,22:$V54,131:3600,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,3601]},{20:[1,3604],22:[1,3606],89:3602,166:[1,3607],193:3603,217:[1,3605]},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$Vp8,22:$Vq8,89:3608,166:$Vr8,193:3609,217:$Vs8},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$Vt8,22:$Vu8,89:3610,166:$Vv8,193:3611,217:$Vw8},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$Vx8,22:$Vy8,89:3612,166:$Vz8,193:3613,217:$VA8},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VB8,22:$VC8,89:3614,166:$VD8,193:3615,217:$VE8},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VF8,22:$VG8,89:3616,166:$VH8,193:3617,217:$VI8},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$VJ8,22:$VK8,89:3618,166:$VL8,193:3619,217:$VM8},o($VN8,$V35),{20:$Vo,22:$Vp,23:3620,216:57,217:$Vq},{20:$Vx9,22:$Vy9,102:[1,3633],110:[1,3634],111:[1,3635],112:3632,166:$Vz9,182:3623,192:3621,193:3622,198:3628,199:3629,200:3630,203:3631,206:[1,3636],207:[1,3637],208:[1,3642],209:[1,3643],210:[1,3644],211:[1,3645],212:[1,3638],213:[1,3639],214:[1,3640],215:[1,3641],217:$VA9},o($V67,$VL7,{63:3646,55:[1,3647]}),o($V87,$VM7),o($V87,$VN7,{76:3648,78:3649,80:3650,46:3651,120:3652,81:[1,3653],82:[1,3654],83:[1,3655],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:3656,75:3657,94:3658,96:3659,97:3663,101:3664,98:[1,3660],99:[1,3661],100:[1,3662],103:$VB9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3666,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:3667}),o($VT7,$VB1,{101:3357,97:3668,103:$Va9,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:3669}),o($VU7,$VD1,{88:3670}),o($VU7,$VD1,{88:3671}),o($V87,$VE1,{107:3363,109:3364,93:3672,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:3673}),o($VY7,$VR1),{121:[1,3674],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,3678],22:[1,3682],23:3676,38:3675,202:3677,216:3679,217:[1,3681],218:[1,3680]},{102:[1,3683]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,3685],108:3684,110:[1,3686],111:[1,3687],112:3688,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3689]},o($V87,$VM7),o($V87,$VN7,{76:3690,78:3691,80:3692,46:3693,120:3694,81:[1,3695],82:[1,3696],83:[1,3697],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:3698,75:3699,94:3700,96:3701,97:3705,101:3706,98:[1,3702],99:[1,3703],100:[1,3704],103:$VC9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3708,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:3709}),o($VT7,$VB1,{101:3390,97:3710,103:$Vc9,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:3711}),o($VU7,$VD1,{88:3712}),o($VU7,$VD1,{88:3713}),o($V87,$VE1,{107:3396,109:3397,93:3714,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:3715}),o($VY7,$VR1),{121:[1,3716],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,3720],22:[1,3724],23:3718,38:3717,202:3719,216:3721,217:[1,3723],218:[1,3722]},{102:[1,3725]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,3727],108:3726,110:[1,3728],111:[1,3729],112:3730,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3731]},{123:[1,3732]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,3733]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),o($VD9,$VK2,{85:3734,86:3735,194:3736,191:$VE9}),o($V19,$VP8),o($VC,$Vh,{57:3738,61:3739,42:3740,45:$VD}),o($V29,$VQ8),o($VC,$Vh,{61:3741,42:3742,45:$VD}),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,3743],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,3747],22:[1,3751],23:3745,38:3744,202:3746,216:3748,217:[1,3750],218:[1,3749]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:3752}),o($V29,$VB1,{101:3435,97:3753,103:$Vf9,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,3754]},o($VF9,$VS1),{72:[1,3755]},o($Vh9,$VO2,{101:3108,97:3756,103:$V39,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,3764],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3765,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,3766]},o($Vk9,$VB3),o($VD9,$VK2,{86:3735,194:3736,85:3767,191:$VE9}),o($Vx1,$Vh5),{195:[1,3770],196:3768,197:[1,3769]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3771,205:3772,113:[1,3773]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3776],196:3774,197:[1,3775]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3777,205:3778,113:[1,3779]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3782],22:[1,3784],89:3780,166:[1,3785],193:3781,217:[1,3783]},{195:[1,3788],196:3786,197:[1,3787]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3789,205:3790,113:[1,3791]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vj1,$Va4),{123:[1,3792]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:3793,216:57,217:$Vq},{20:$VH9,22:$VI9,102:[1,3806],110:[1,3807],111:[1,3808],112:3805,166:$VJ9,182:3796,192:3794,193:3795,198:3801,199:3802,200:3803,203:3804,206:[1,3809],207:[1,3810],208:[1,3815],209:[1,3816],210:[1,3817],211:[1,3818],212:[1,3811],213:[1,3812],214:[1,3813],215:[1,3814],217:$VK9},o($VL2,$V35),{20:$Vo,22:$Vp,23:3819,216:57,217:$Vq},{20:$VL9,22:$VM9,102:[1,3832],110:[1,3833],111:[1,3834],112:3831,166:$VN9,182:3822,192:3820,193:3821,198:3827,199:3828,200:3829,203:3830,206:[1,3835],207:[1,3836],208:[1,3841],209:[1,3842],210:[1,3843],211:[1,3844],212:[1,3837],213:[1,3838],214:[1,3839],215:[1,3840],217:$VO9},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,3845]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:3846,216:57,217:$Vq},{20:$VP9,22:$VQ9,102:[1,3859],110:[1,3860],111:[1,3861],112:3858,166:$VR9,182:3849,192:3847,193:3848,198:3854,199:3855,200:3856,203:3857,206:[1,3862],207:[1,3863],208:[1,3868],209:[1,3869],210:[1,3870],211:[1,3871],212:[1,3864],213:[1,3865],214:[1,3866],215:[1,3867],217:$VS9},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VT3,$Va4),{123:[1,3872]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:3873,216:57,217:$Vq},{20:$VT9,22:$VU9,102:[1,3886],110:[1,3887],111:[1,3888],112:3885,166:$VV9,182:3876,192:3874,193:3875,198:3881,199:3882,200:3883,203:3884,206:[1,3889],207:[1,3890],208:[1,3895],209:[1,3896],210:[1,3897],211:[1,3898],212:[1,3891],213:[1,3892],214:[1,3893],215:[1,3894],217:$VW9},o($VZ4,$V35),{20:$Vo,22:$Vp,23:3899,216:57,217:$Vq},{20:$VX9,22:$VY9,102:[1,3912],110:[1,3913],111:[1,3914],112:3911,166:$VZ9,182:3902,192:3900,193:3901,198:3907,199:3908,200:3909,203:3910,206:[1,3915],207:[1,3916],208:[1,3921],209:[1,3922],210:[1,3923],211:[1,3924],212:[1,3917],213:[1,3918],214:[1,3919],215:[1,3920],217:$V_9},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,3925]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:3926,216:57,217:$Vq},{20:$V$9,22:$V0a,102:[1,3939],110:[1,3940],111:[1,3941],112:3938,166:$V1a,182:3929,192:3927,193:3928,198:3934,199:3935,200:3936,203:3937,206:[1,3942],207:[1,3943],208:[1,3948],209:[1,3949],210:[1,3950],211:[1,3951],212:[1,3944],213:[1,3945],214:[1,3946],215:[1,3947],217:$V2a},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),{195:[1,3954],196:3952,197:[1,3953]},o($V_6,$V66),o($V_6,$V76),o($V_6,$V86),o($V_6,$VT1),o($V_6,$VU1),o($V_6,$VV1),o($V_6,$VW1),o($V_6,$VB4),o($V_6,$VC4),o($V_6,$VD4),o($V_6,$VE4),o($V_6,$VF4,{204:3955,205:3956,113:[1,3957]}),o($V_6,$VG4),o($V_6,$VH4),o($V_6,$VI4),o($V_6,$VJ4),o($V_6,$VK4),o($V_6,$VL4),o($V_6,$VM4),o($V_6,$VN4),o($V_6,$VO4),o($V3a,$Vx3),o($V3a,$Vy3),o($V3a,$Vz3),o($V3a,$VA3),o($V87,$VQ8),o($VC,$Vh,{61:3958,42:3959,45:$VD}),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3960],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3964],22:[1,3968],23:3962,38:3961,202:3963,216:3965,217:[1,3967],218:[1,3966]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3969}),o($V87,$VB1,{101:3664,97:3970,103:$VB9,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3971]},o($VV8,$VS1),{72:[1,3972]},o($VT7,$VO2,{101:3357,97:3973,103:$Va9,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,3981],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3982,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,3983]},o($VY7,$VB3),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3984],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3988],22:[1,3992],23:3986,38:3985,202:3987,216:3989,217:[1,3991],218:[1,3990]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3993}),o($V87,$VB1,{101:3706,97:3994,103:$VC9,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3995]},o($VV8,$VS1),{72:[1,3996]},o($VT7,$VO2,{101:3390,97:3997,103:$Vc9,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,4005],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4006,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,4007]},o($VY7,$VB3),o($V87,$Vh5),{20:[1,4010],22:[1,4012],89:4008,166:[1,4013],193:4009,217:[1,4011]},o($Vn6,$V89),o($VX8,$V24),o($Vn6,$V34,{37:4014,195:[1,4015]}),{20:$V44,22:$V54,131:4016,166:$V64,193:647,201:$V74,217:$V84},o($V19,$V99),o($V29,$V97,{62:4017}),o($VH,$VI,{65:4018,75:4019,77:4020,78:4021,94:4024,96:4025,89:4027,90:4028,91:4029,80:4030,46:4031,97:4035,193:4036,93:4038,120:4039,101:4043,107:4049,109:4050,20:[1,4045],22:[1,4047],28:[1,4037],71:[1,4022],73:[1,4023],81:[1,4040],82:[1,4041],83:[1,4042],87:[1,4026],98:[1,4032],99:[1,4033],100:[1,4034],103:$V6a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4048],217:[1,4046]}),o($V29,$Vb9),o($VH,$VI,{65:4051,75:4052,77:4053,78:4054,94:4057,96:4058,89:4060,90:4061,91:4062,80:4063,46:4064,97:4068,193:4069,93:4071,120:4072,101:4076,107:4082,109:4083,20:[1,4078],22:[1,4080],28:[1,4070],71:[1,4055],73:[1,4056],81:[1,4073],82:[1,4074],83:[1,4075],87:[1,4059],98:[1,4065],99:[1,4066],100:[1,4067],103:$V7a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4081],217:[1,4079]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4084,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:3435,97:4085,103:$Vf9,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4086]},o($Vi9,$VS1),{102:[1,4088],108:4087,110:[1,4089],111:[1,4090],112:4091,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4092]},o($Vi9,$Vy4),{123:[1,4093]},{20:[1,4096],22:[1,4098],89:4094,166:[1,4099],193:4095,217:[1,4097]},o($Vn6,$Ve9),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vl9,22:$Vm9,89:4100,166:$Vn9,193:4101,217:$Vo9},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vp9,22:$Vq9,89:4102,166:$Vr9,193:4103,217:$Vs9},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vt9,22:$Vu9,89:4104,166:$Vv9,193:4105,217:$Vw9},o($Vx1,$Vh5),{195:[1,4108],196:4106,197:[1,4107]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:4109,205:4110,113:[1,4111]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,4114],196:4112,197:[1,4113]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:4115,205:4116,113:[1,4117]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,4120],22:[1,4122],89:4118,166:[1,4123],193:4119,217:[1,4121]},{195:[1,4126],196:4124,197:[1,4125]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:4127,205:4128,113:[1,4129]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VW3,$Vh5),{195:[1,4132],196:4130,197:[1,4131]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:4133,205:4134,113:[1,4135]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,4138],196:4136,197:[1,4137]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:4139,205:4140,113:[1,4141]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,4144],22:[1,4146],89:4142,166:[1,4147],193:4143,217:[1,4145]},{195:[1,4150],196:4148,197:[1,4149]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:4151,205:4152,113:[1,4153]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($VN8,$V52),o($VN8,$V62),o($VN8,$V72),o($V_6,$VV5),o($V_6,$VW5),{20:$Vx9,22:$Vy9,89:4154,166:$Vz9,193:4155,217:$VA9},o($V87,$Vb9),o($VH,$VI,{65:4156,75:4157,77:4158,78:4159,94:4162,96:4163,89:4165,90:4166,91:4167,80:4168,46:4169,97:4173,193:4174,93:4176,120:4177,101:4181,107:4187,109:4188,20:[1,4183],22:[1,4185],28:[1,4175],71:[1,4160],73:[1,4161],81:[1,4178],82:[1,4179],83:[1,4180],87:[1,4164],98:[1,4170],99:[1,4171],100:[1,4172],103:$V8a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4186],217:[1,4184]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4189,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:3664,97:4190,103:$VB9,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4191]},o($VU7,$VS1),{102:[1,4193],108:4192,110:[1,4194],111:[1,4195],112:4196,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4197]},o($VU7,$Vy4),{123:[1,4198]},{20:[1,4201],22:[1,4203],89:4199,166:[1,4204],193:4200,217:[1,4202]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4205,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:3706,97:4206,103:$VC9,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4207]},o($VU7,$VS1),{102:[1,4209],108:4208,110:[1,4210],111:[1,4211],112:4212,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4213]},o($VU7,$Vy4),{123:[1,4214]},{20:[1,4217],22:[1,4219],89:4215,166:[1,4220],193:4216,217:[1,4218]},o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VD9,$V35),{20:$Vo,22:$Vp,23:4221,216:57,217:$Vq},{20:$V9a,22:$Vaa,102:[1,4234],110:[1,4235],111:[1,4236],112:4233,166:$Vba,182:4224,192:4222,193:4223,198:4229,199:4230,200:4231,203:4232,206:[1,4237],207:[1,4238],208:[1,4243],209:[1,4244],210:[1,4245],211:[1,4246],212:[1,4239],213:[1,4240],214:[1,4241],215:[1,4242],217:$Vca},o($V19,$VL7,{63:4247,55:[1,4248]}),o($V29,$VM7),o($V29,$VN7,{76:4249,78:4250,80:4251,46:4252,120:4253,81:[1,4254],82:[1,4255],83:[1,4256],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4257,75:4258,94:4259,96:4260,97:4264,101:4265,98:[1,4261],99:[1,4262],100:[1,4263],103:$Vda,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4267,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4268}),o($Vh9,$VB1,{101:4043,97:4269,103:$V6a,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4270}),o($Vi9,$VD1,{88:4271}),o($Vi9,$VD1,{88:4272}),o($V29,$VE1,{107:4049,109:4050,93:4273,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4274}),o($Vk9,$VR1),{121:[1,4275],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4279],22:[1,4283],23:4277,38:4276,202:4278,216:4280,217:[1,4282],218:[1,4281]},{102:[1,4284]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4286],108:4285,110:[1,4287],111:[1,4288],112:4289,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4290]},o($V29,$VM7),o($V29,$VN7,{76:4291,78:4292,80:4293,46:4294,120:4295,81:[1,4296],82:[1,4297],83:[1,4298],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4299,75:4300,94:4301,96:4302,97:4306,101:4307,98:[1,4303],99:[1,4304],100:[1,4305],103:$Vea,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4309,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4310}),o($Vh9,$VB1,{101:4076,97:4311,103:$V7a,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4312}),o($Vi9,$VD1,{88:4313}),o($Vi9,$VD1,{88:4314}),o($V29,$VE1,{107:4082,109:4083,93:4315,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4316}),o($Vk9,$VR1),{121:[1,4317],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4321],22:[1,4325],23:4319,38:4318,202:4320,216:4322,217:[1,4324],218:[1,4323]},{102:[1,4326]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4328],108:4327,110:[1,4329],111:[1,4330],112:4331,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4332]},{123:[1,4333]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4334]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$VH9,22:$VI9,89:4335,166:$VJ9,193:4336,217:$VK9},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$VL9,22:$VM9,89:4337,166:$VN9,193:4338,217:$VO9},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$VP9,22:$VQ9,89:4339,166:$VR9,193:4340,217:$VS9},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VT9,22:$VU9,89:4341,166:$VV9,193:4342,217:$VW9},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VX9,22:$VY9,89:4343,166:$VZ9,193:4344,217:$V_9},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$V$9,22:$V0a,89:4345,166:$V1a,193:4346,217:$V2a},o($V_6,$Vs6),o($V_6,$VN1),o($V87,$VM7),o($V87,$VN7,{76:4347,78:4348,80:4349,46:4350,120:4351,81:[1,4352],82:[1,4353],83:[1,4354],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:4355,75:4356,94:4357,96:4358,97:4362,101:4363,98:[1,4359],99:[1,4360],100:[1,4361],103:$Vfa,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4365,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:4366}),o($VT7,$VB1,{101:4181,97:4367,103:$V8a,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:4368}),o($VU7,$VD1,{88:4369}),o($VU7,$VD1,{88:4370}),o($V87,$VE1,{107:4187,109:4188,93:4371,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:4372}),o($VY7,$VR1),{121:[1,4373],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,4377],22:[1,4381],23:4375,38:4374,202:4376,216:4378,217:[1,4380],218:[1,4379]},{102:[1,4382]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,4384],108:4383,110:[1,4385],111:[1,4386],112:4387,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4388]},{123:[1,4389]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4390]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),{123:[1,4391]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4392]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),{195:[1,4395],196:4393,197:[1,4394]},o($VX8,$V66),o($VX8,$V76),o($VX8,$V86),o($VX8,$VT1),o($VX8,$VU1),o($VX8,$VV1),o($VX8,$VW1),o($VX8,$VB4),o($VX8,$VC4),o($VX8,$VD4),o($VX8,$VE4),o($VX8,$VF4,{204:4396,205:4397,113:[1,4398]}),o($VX8,$VG4),o($VX8,$VH4),o($VX8,$VI4),o($VX8,$VJ4),o($VX8,$VK4),o($VX8,$VL4),o($VX8,$VM4),o($VX8,$VN4),o($VX8,$VO4),o($Vga,$Vx3),o($Vga,$Vy3),o($Vga,$Vz3),o($Vga,$VA3),o($V29,$VQ8),o($VC,$Vh,{61:4399,42:4400,45:$VD}),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4401],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4405],22:[1,4409],23:4403,38:4402,202:4404,216:4406,217:[1,4408],218:[1,4407]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4410}),o($V29,$VB1,{101:4265,97:4411,103:$Vda,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4412]},o($VF9,$VS1),{72:[1,4413]},o($Vh9,$VO2,{101:4043,97:4414,103:$V6a,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4422],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4423,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4424]},o($Vk9,$VB3),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4425],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4429],22:[1,4433],23:4427,38:4426,202:4428,216:4430,217:[1,4432],218:[1,4431]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4434}),o($V29,$VB1,{101:4307,97:4435,103:$Vea,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4436]},o($VF9,$VS1),{72:[1,4437]},o($Vh9,$VO2,{101:4076,97:4438,103:$V7a,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4446],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4447,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4448]},o($Vk9,$VB3),o($V29,$Vh5),{20:[1,4451],22:[1,4453],89:4449,166:[1,4454],193:4450,217:[1,4452]},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,4455],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,4459],22:[1,4463],23:4457,38:4456,202:4458,216:4460,217:[1,4462],218:[1,4461]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:4464}),o($V87,$VB1,{101:4363,97:4465,103:$Vfa,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,4466]},o($VV8,$VS1),{72:[1,4467]},o($VT7,$VO2,{101:4181,97:4468,103:$V8a,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,4476],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4477,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,4478]},o($VY7,$VB3),o($V87,$Vh5),{20:[1,4481],22:[1,4483],89:4479,166:[1,4484],193:4480,217:[1,4482]},o($V87,$Vh5),{20:[1,4487],22:[1,4489],89:4485,166:[1,4490],193:4486,217:[1,4488]},o($VD9,$V52),o($VD9,$V62),o($VD9,$V72),o($VX8,$VV5),o($VX8,$VW5),{20:$V9a,22:$Vaa,89:4491,166:$Vba,193:4492,217:$Vca},o($V29,$Vb9),o($VH,$VI,{65:4493,75:4494,77:4495,78:4496,94:4499,96:4500,89:4502,90:4503,91:4504,80:4505,46:4506,97:4510,193:4511,93:4513,120:4514,101:4518,107:4524,109:4525,20:[1,4520],22:[1,4522],28:[1,4512],71:[1,4497],73:[1,4498],81:[1,4515],82:[1,4516],83:[1,4517],87:[1,4501],98:[1,4507],99:[1,4508],100:[1,4509],103:$Vka,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4523],217:[1,4521]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4526,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4265,97:4527,103:$Vda,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4528]},o($Vi9,$VS1),{102:[1,4530],108:4529,110:[1,4531],111:[1,4532],112:4533,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4534]},o($Vi9,$Vy4),{123:[1,4535]},{20:[1,4538],22:[1,4540],89:4536,166:[1,4541],193:4537,217:[1,4539]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4542,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4307,97:4543,103:$Vea,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4544]},o($Vi9,$VS1),{102:[1,4546],108:4545,110:[1,4547],111:[1,4548],112:4549,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4550]},o($Vi9,$Vy4),{123:[1,4551]},{20:[1,4554],22:[1,4556],89:4552,166:[1,4557],193:4553,217:[1,4555]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4558,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:4363,97:4559,103:$Vfa,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4560]},o($VU7,$VS1),{102:[1,4562],108:4561,110:[1,4563],111:[1,4564],112:4565,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4566]},o($VU7,$Vy4),{123:[1,4567]},{20:[1,4570],22:[1,4572],89:4568,166:[1,4573],193:4569,217:[1,4571]},o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VX8,$Vs6),o($VX8,$VN1),o($V29,$VM7),o($V29,$VN7,{76:4574,78:4575,80:4576,46:4577,120:4578,81:[1,4579],82:[1,4580],83:[1,4581],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4582,75:4583,94:4584,96:4585,97:4589,101:4590,98:[1,4586],99:[1,4587],100:[1,4588],103:$Vla,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4592,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4593}),o($Vh9,$VB1,{101:4518,97:4594,103:$Vka,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4595}),o($Vi9,$VD1,{88:4596}),o($Vi9,$VD1,{88:4597}),o($V29,$VE1,{107:4524,109:4525,93:4598,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4599}),o($Vk9,$VR1),{121:[1,4600],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4604],22:[1,4608],23:4602,38:4601,202:4603,216:4605,217:[1,4607],218:[1,4606]},{102:[1,4609]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4611],108:4610,110:[1,4612],111:[1,4613],112:4614,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4615]},{123:[1,4616]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4617]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),{123:[1,4618]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4619]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),{123:[1,4620]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4621]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4622],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4626],22:[1,4630],23:4624,38:4623,202:4625,216:4627,217:[1,4629],218:[1,4628]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4631}),o($V29,$VB1,{101:4590,97:4632,103:$Vla,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4633]},o($VF9,$VS1),{72:[1,4634]},o($Vh9,$VO2,{101:4518,97:4635,103:$Vka,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4643],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4644,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4645]},o($Vk9,$VB3),o($V29,$Vh5),{20:[1,4648],22:[1,4650],89:4646,166:[1,4651],193:4647,217:[1,4649]},o($V29,$Vh5),{20:[1,4654],22:[1,4656],89:4652,166:[1,4657],193:4653,217:[1,4655]},o($V87,$Vh5),{20:[1,4660],22:[1,4662],89:4658,166:[1,4663],193:4659,217:[1,4661]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4664,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4590,97:4665,103:$Vla,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4666]},o($Vi9,$VS1),{102:[1,4668],108:4667,110:[1,4669],111:[1,4670],112:4671,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4672]},o($Vi9,$Vy4),{123:[1,4673]},{20:[1,4676],22:[1,4678],89:4674,166:[1,4679],193:4675,217:[1,4677]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{123:[1,4680]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4681]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),o($V29,$Vh5),{20:[1,4684],22:[1,4686],89:4682,166:[1,4687],193:4683,217:[1,4685]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1)],\ndefaultActions: {6:[2,11],32:[2,1],112:[2,121],113:[2,122],114:[2,123],119:[2,134],120:[2,135],227:[2,255],228:[2,256],229:[2,257],230:[2,258],351:[2,37],379:[2,144],380:[2,148],382:[2,150],589:[2,35],590:[2,39],627:[2,36],1137:[2,148],1139:[2,150]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShEx parser in the Jison parser generator format.\n  */\n\n  var UNBOUNDED = -1;\n\n  var ShExUtil = require(\"@shexjs/util\");\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean',\n      XSD_TRUE =  '\"true\"^^'  + XSD_BOOLEAN,\n      XSD_FALSE = '\"false\"^^' + XSD_BOOLEAN,\n      XSD_PATTERN        = XSD + 'pattern',\n      XSD_MININCLUSIVE   = XSD + 'minInclusive',\n      XSD_MINEXCLUSIVE   = XSD + 'minExclusive',\n      XSD_MAXINCLUSIVE   = XSD + 'maxInclusive',\n      XSD_MAXEXCLUSIVE   = XSD + 'maxExclusive',\n      XSD_LENGTH         = XSD + 'length',\n      XSD_MINLENGTH      = XSD + 'minLength',\n      XSD_MAXLENGTH      = XSD + 'maxLength',\n      XSD_TOTALDIGITS    = XSD + 'totalDigits',\n      XSD_FRACTIONDIGITS = XSD + 'fractionDigits';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  Parser._setBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._base = baseIRI) {\n      Parser._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._baseRoot   = baseIRI[0];\n      Parser._baseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._baseScheme : Parser._baseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._basePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  Parser._setTermResolver = function (res) {\n    Parser._termResolver = res;\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return { value: value, type: type };\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser._sourceMap = Parser._termResolver = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._base = Parser._baseIRI = Parser._baseIRIPath = Parser._baseIRIRoot = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      semactEscapeReplacements = { '\\\\': '\\\\', '%': '%' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return { value: ShExUtil.unescapeText(string, stringEscapeReplacements) };\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, { language: lowercase(lang.substr(1)) });\n  }\n\n  // Translates regular expression escape codes in the string into their textual equivalent\n  function unescapeRegexp (regexp) {\n    var end = regexp.lastIndexOf(\"/\");\n    var s = regexp.substr(1, end-1);\n    var regexpEscapeReplacements = {\n      '.': \"\\\\.\", '\\\\': \"\\\\\\\\\", '?': \"\\\\?\", '*': \"\\\\*\", '+': \"\\\\+\",\n      '{': \"\\\\{\", '}': \"\\\\}\", '(': \"\\\\(\", ')': \"\\\\)\", '|': \"\\\\|\",\n      '^': \"\\\\^\", '$': \"\\\\$\", '[': \"\\\\[\", ']': \"\\\\]\", '/': \"\\\\/\",\n      't': '\\\\t', 'n': '\\\\n', 'r': '\\\\r', '-': \"\\\\-\", '/': '/'\n    };\n    s = ShExUtil.unescapeText(s, regexpEscapeReplacements)\n    var ret = {\n      pattern: s\n    };\n    if (regexp.length > end+1)\n      ret.flags = regexp.substr(end+1);\n    return ret;\n  }\n\n  // Convenience function to return object with p1 key, value p2\n  function keyValObject(key, val) {\n    var ret = {};\n    ret[key] = val;\n    return ret;\n  }\n\n  // Return object with p1 key, p2 string value\n  function unescapeSemanticAction(key, string) {\n    string = string.substring(1, string.length - 2);\n    return {\n      type: \"SemAct\",\n      name: key,\n      code: ShExUtil.unescapeText(string, semactEscapeReplacements)\n    };\n  }\n\n  function error (e, yy) {\n    const hash = {\n      text: yy.lexer.match,\n      // token: this.terminals_[symbol] || symbol,\n      line: yy.lexer.yylineno,\n      loc: yy.lexer.yylloc,\n      // expected: expected\n      pos: yy.lexer.showPosition()\n    }\n    e.hash = hash;\n    if (Parser.recoverable) {\n      Parser.recoverable(e)\n    } else {\n      throw e;\n      Parser.reset();\n    }\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefix, yy) {\n    if (!(prefix in Parser._prefixes))\n      error(new Error('Parse error; unknown prefix \"' + prefix + ':\"'), yy);\n    return Parser._prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape, yy) {\n    if (shape === EmptyShape)\n      shape = { type: \"Shape\" };\n    if (Parser.productions && label in Parser.productions)\n      error(new Error(\"Structural error: \"+label+\" is a triple expression\"), yy);\n    if (!Parser.shapes)\n      Parser.shapes = new Map();\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else {\n      shape.id = label;\n      Parser.shapes[label] = shape;\n    }\n  }\n\n  // Add a production to the map\n  function addProduction (label, production, yy) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(new Error(\"Structural error: \"+label+\" is a shape expression\"), yy);\n    if (!Parser.productions)\n      Parser.productions = new Map();\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function addSourceMap (obj, yy) {\n    if (!Parser._sourceMap)\n      Parser._sourceMap = new Map();\n    let list = Parser._sourceMap.get(obj)\n    if (!list)\n      Parser._sourceMap.set(obj, list = []);\n    list.push(yy.lexer.yylloc);\n    return obj;\n  }\n\n  // shapeJunction judiciously takes a shapeAtom and an optional list of con/disjuncts.\n  // No created Shape{And,Or,Not} will have a `nested` shapeExpr.\n  // Don't nonest arguments to shapeJunction.\n  // shapeAtom emits `nested` so nonest every argument that can be a shapeAtom, i.e.\n  //   shapeAtom, inlineShapeAtom, shapeAtomNoRef\n  //   {,inline}shape{And,Or,Not}\n  //   this does NOT include shapeOrRef or nodeConstraint.\n  function shapeJunction (type, shapeAtom, juncts) {\n    if (juncts.length === 0) {\n      return nonest(shapeAtom);\n    } else if (shapeAtom.type === type && !shapeAtom.nested) {\n      nonest(shapeAtom).shapeExprs = nonest(shapeAtom).shapeExprs.concat(juncts);\n      return shapeAtom;\n    } else {\n      return { type: type, shapeExprs: [nonest(shapeAtom)].concat(juncts) };\n    }\n  }\n\n  // strip out .nested attribute\n  function nonest (shapeAtom) {\n    delete shapeAtom.nested;\n    return shapeAtom;\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:\n  var iBacktick = yy_.yytext.indexOf('`');\n  var prefix = null;\n  if (iBacktick > 0) {\n    prefix = yy_.yytext.substr(0, iBacktick-1);\n    yy_.yytext = yy_.yytext.substr(iBacktick);\n  }\n  yy_.yytext = { prefix: prefix, label: unescapeString(yy_.yytext, 1) };\n  return 166;\n\nbreak;\ncase 1:/**/\nbreak;\ncase 2:return 81;\nbreak;\ncase 3:return 82;\nbreak;\ncase 4: yy_.yytext = yy_.yytext.substr(1); return 186; \nbreak;\ncase 5:return 83;\nbreak;\ncase 6:return 217;\nbreak;\ncase 7:return 161;\nbreak;\ncase 8:return 111;\nbreak;\ncase 9:return 110;\nbreak;\ncase 10:return 102;\nbreak;\ncase 11:return 'ANON';\nbreak;\ncase 12:return 20;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 201;\nbreak;\ncase 15:return 103;\nbreak;\ncase 16:return 218;\nbreak;\ncase 17:return 197;\nbreak;\ncase 18:return 213;\nbreak;\ncase 19:return 215;\nbreak;\ncase 20:return 212;\nbreak;\ncase 21:return 214;\nbreak;\ncase 22:return 209;\nbreak;\ncase 23:return 211;\nbreak;\ncase 24:return 208;\nbreak;\ncase 25:return 210;\nbreak;\ncase 26:return 19;\nbreak;\ncase 27:return 21;\nbreak;\ncase 28:return 24;\nbreak;\ncase 29:return 25;\nbreak;\ncase 30:return 32;\nbreak;\ncase 31:return 41;\nbreak;\ncase 32:return 'IT_VIRTUAL';\nbreak;\ncase 33:return 127;\nbreak;\ncase 34:return 129;\nbreak;\ncase 35:return 87;\nbreak;\ncase 36:return 99;\nbreak;\ncase 37:return 98;\nbreak;\ncase 38:return 100;\nbreak;\ncase 39:return 55;\nbreak;\ncase 40:return 53;\nbreak;\ncase 41:return 45;\nbreak;\ncase 42:return 114;\nbreak;\ncase 43:return 115;\nbreak;\ncase 44:return 116;\nbreak;\ncase 45:return 117;\nbreak;\ncase 46:return 104;\nbreak;\ncase 47:return 105;\nbreak;\ncase 48:return 106;\nbreak;\ncase 49:return 118;\nbreak;\ncase 50:return 119;\nbreak;\ncase 51:return 33;\nbreak;\ncase 52:return 191;\nbreak;\ncase 53:return 121;\nbreak;\ncase 54:return 123;\nbreak;\ncase 55:return 190;\nbreak;\ncase 56:return '||';\nbreak;\ncase 57:return 137;\nbreak;\ncase 58:return 142;\nbreak;\ncase 59:return 71;\nbreak;\ncase 60:return 72;\nbreak;\ncase 61:return 28;\nbreak;\ncase 62:return 29;\nbreak;\ncase 63:return 150;\nbreak;\ncase 64:return '!';\nbreak;\ncase 65:return 113;\nbreak;\ncase 66:return 162;\nbreak;\ncase 67:return 73;\nbreak;\ncase 68:return 179;\nbreak;\ncase 69:return 143;\nbreak;\ncase 70:return 158;\nbreak;\ncase 71:return 159;\nbreak;\ncase 72:return 160;\nbreak;\ncase 73:return 180;\nbreak;\ncase 74:return 195;\nbreak;\ncase 75:return 206;\nbreak;\ncase 76:return 207;\nbreak;\ncase 77:return 7;\nbreak;\ncase 78:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 79:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)?`([^\\u0060\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*`))/,/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^/]|\\\\\\/))*\\*\\/))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(\\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\\*)?))?\\}))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:a\\b)/,/^(?:(\\/([^\\u002f\\u005C\\u000A\\u000D]|\\\\[nrt\\\\|.?*+(){}$\\u002D\\u005B\\u005D\\u005E/]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:(\\{([^%\\\\]|\\\\[%\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\\}))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([Ll][Aa][Bb][Ee][Ll]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Vv][Ii][Rr][Tt][Uu][Aa][Ll]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\\/\\/)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&)/,/^(?:\\|\\|)/,/^(?:\\|)/,/^(?:,)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:!)/,/^(?:\\^\\^)/,/^(?:\\^)/,/^(?:\\.)/,/^(?:~)/,/^(?:;)/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShExJison;\nexports.Parser = ShExJison.Parser;\nexports.parse = function () { return ShExJison.parse.apply(ShExJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 36,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "index": 29,
          "index2": 25,
          "size": 8542,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerId": 17,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 17,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 26,
            "building": 9,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "./old.js",
              "loc": "14:10-29"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"
        },
        {
          "id": 37,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "index": 31,
          "index2": 29,
          "size": 4792,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerId": 6,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 6,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 28,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "brace-expansion",
              "loc": "10:13-39"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"
        },
        {
          "id": 38,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "index": 32,
          "index2": 27,
          "size": 345,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 37,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 6,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            },
            {
              "id": 37,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 28,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 11,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 37,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "concat-map",
              "loc": "1:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"
        },
        {
          "id": 39,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "index": 33,
          "index2": 28,
          "size": 1174,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 37,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 6,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            },
            {
              "id": 37,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 28,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 11,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 37,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "balanced-match",
              "loc": "2:15-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n"
        },
        {
          "id": 40,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "index": 34,
          "index2": 31,
          "size": 753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "47:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
        },
        {
          "id": 41,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/events/events.js",
          "name": "./node_modules/events/events.js",
          "index": 35,
          "index2": 32,
          "size": 14161,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "48:9-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"
        },
        {
          "id": 42,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 37,
          "index2": 33,
          "size": 472,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "issuerId": 18,
          "issuerName": "./node_modules/assert/assert.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 18,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "name": "./node_modules/assert/assert.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 71,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
        },
        {
          "id": 43,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/object-assign/index.js",
          "name": "./node_modules/object-assign/index.js",
          "index": 38,
          "index2": 34,
          "size": 2108,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "issuerId": 18,
          "issuerName": "./node_modules/assert/assert.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 18,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "name": "./node_modules/assert/assert.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 71,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "object-assign",
              "loc": "3:19-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"
        },
        {
          "id": 44,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/support/isBufferBrowser.js",
          "name": "./node_modules/util/support/isBufferBrowser.js",
          "index": 40,
          "index2": 35,
          "size": 203,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 7,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 7,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 61,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "./support/isBuffer",
              "loc": "536:19-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"
        },
        {
          "id": 45,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/node_modules/inherits/inherits_browser.js",
          "name": "./node_modules/util/node_modules/inherits/inherits_browser.js",
          "index": 41,
          "index2": 36,
          "size": 672,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 7,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            },
            {
              "id": 7,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 147,
                "building": 5,
                "dependencies": 78
              }
            }
          ],
          "profile": {
            "factory": 61,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 7,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "580:19-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"
        },
        {
          "id": 46,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "index": 43,
          "index2": 41,
          "size": 12002,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./sync.js",
              "loc": "52:15-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"
        },
        {
          "id": 47,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "index": 45,
          "index2": 44,
          "size": 1365,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 16,
          "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            },
            {
              "id": 16,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 289,
                "building": 24,
                "dependencies": 7
              }
            }
          ],
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inflight",
              "loc": "58:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"
        },
        {
          "id": 48,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api sync",
          "name": "../shex-api sync",
          "index": 48,
          "index2": 46,
          "size": 160,
          "built": true,
          "optional": true,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 34,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 22,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 20,
                "building": 15
              }
            },
            {
              "id": 34,
              "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 25,
                "building": 243,
                "dependencies": 215
              }
            }
          ],
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require context",
              "userRequest": ".",
              "loc": "326:11-24"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "shex-webapp.min",
          "request": "./shex-webapp.js",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/process/browser.js",
      "name": "./node_modules/process/browser.js",
      "index": 5,
      "index2": 1,
      "size": 5418,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
      "issuerId": 32,
      "issuerName": "../shex-validator/shex-validator.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 32,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "name": "../shex-validator/shex-validator.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 366,
        "building": 21,
        "dependencies": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
          "module": "./node_modules/path-browserify/index.js",
          "moduleName": "./node_modules/path-browserify/index.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-34"
        },
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "module": "./node_modules/util/util.js",
          "moduleName": "./node_modules/util/util.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-34"
        },
        {
          "moduleId": 8,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 17,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 19,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-62"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "module": "../shex-validator/shex-validator.js",
          "moduleName": "../shex-validator/shex-validator.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-59"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-62"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
    },
    {
      "id": 1,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
      "name": "./node_modules/path-browserify/index.js",
      "index": 8,
      "index2": 4,
      "size": 8742,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 35,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 15,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 35,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 10,
            "building": 166,
            "dependencies": 3
          }
        }
      ],
      "profile": {
        "factory": 36,
        "building": 59,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "6:9-24"
        },
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "49:11-26"
        },
        {
          "moduleId": 19,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "15:11-26"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "1179:44-59"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "1870:44-59"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "22:17-32"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "10:11-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"
    },
    {
      "id": 2,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/node-libs-browser/mock/empty.js",
      "name": "./node_modules/node-libs-browser/mock/empty.js",
      "index": 7,
      "index2": 3,
      "size": 0,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 35,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 15,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 35,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 10,
            "building": 166,
            "dependencies": 3
          }
        }
      ],
      "profile": {
        "factory": 36,
        "building": 59,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "43:9-22"
        },
        {
          "moduleId": 17,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "8:9-22"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "1179:17-30"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "1870:17-30"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "24:9-22"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "4:9-22"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": ""
    },
    {
      "id": 3,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-term/shex-term.js",
      "name": "../shex-term/shex-term.js",
      "index": 9,
      "index2": 8,
      "size": 10614,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "module": "../shex-util/shex-util.js",
          "moduleName": "../shex-util/shex-util.js",
          "type": "cjs require",
          "userRequest": "@shexjs/term",
          "loc": "4:15-38"
        },
        {
          "moduleId": 15,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "module": "../shex-parser/shex-parser.js",
          "moduleName": "../shex-parser/shex-parser.js",
          "type": "cjs require",
          "userRequest": "@shexjs/term",
          "loc": "3:17-40"
        },
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/term",
          "loc": "4:20-43"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "module": "../shex-validator/shex-validator.js",
          "moduleName": "../shex-validator/shex-validator.js",
          "type": "cjs require",
          "userRequest": "@shexjs/term",
          "loc": "26:15-38"
        },
        {
          "moduleId": 33,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/eval-threaded-nerr/eval-threaded-nerr.js",
          "module": "../eval-threaded-nerr/eval-threaded-nerr.js",
          "moduleName": "../eval-threaded-nerr/eval-threaded-nerr.js",
          "type": "cjs require",
          "userRequest": "@shexjs/term",
          "loc": "2:17-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "/**\n *\n * isIRI, isBlank, getLiteralType, getLiteralValue\n */\n\nconst ShExTermCjsModule = (function () {\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  const RdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\n  const XsdString = \"http://www.w3.org/2001/XMLSchema#string\";\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function resolveRelativeIRI (base, iri) {\n\n    if (absoluteIRI.test(iri))\n      return iri\n\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      let m = base.match(schemeAuthority);\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? m[1] : m[0]) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(base.replace(/[^\\/?]*(?:\\?.*)?$/, '') + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function internalTerm (node) { // !!rdfjsTermToInternal\n    switch (node.termType) {\n    case (\"NamedNode\"):\n      return node.value;\n    case (\"BlankNode\"):\n      return \"_:\" + node.value;\n    case (\"Literal\"):\n      return \"\\\"\" + node.value + \"\\\"\" + (\n        node.datatypeString === RdfLangString\n          ? \"@\" + node.language\n          : node.datatypeString === XsdString\n          ? \"\"\n          : \"^^\" + node.datatypeString\n      );\n    default: throw Error(\"unknown RDFJS node type: \" + JSON.stringify(node))\n    }\n  }\n\n  function internalTriple (triple) { // !!rdfjsTripleToInternal\n    return {\n      subject: internalTerm(triple.subject),\n      predicate: internalTerm(triple.predicate),\n      object: internalTerm(triple.object)\n    };\n  }\n\n  function externalTerm (node, factory) { // !!intermalTermToRdfjs\n    if (isIRI(node)) {\n      return factory.namedNode(node);\n    } else if (isBlank(node)) {\n      return factory.blankNode(node.substr(2));\n    } else if (isLiteral(node)) {\n      let dtOrLang = getLiteralLanguage(node) ||\n          (getLiteralType(node) === XsdString\n           ? null // seems to screw up N3.js\n           : factory.namedNode(getLiteralType(node)))\n      return factory.literal(getLiteralValue(node), dtOrLang)\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  function externalTriple (triple, factory) { // !!rename internalTripleToRdjs\n    return factory.quad(\n      externalTerm(triple.subject, factory),\n      externalTerm(triple.predicate, factory),\n      externalTerm(triple.object, factory)\n    );\n  }\n\n  function intermalTermToTurtle (node, base, prefixes) {\n    if (isIRI(node)) {\n      // if (node === RDF_TYPE) // only valid in Turtle predicates\n      //   return \"a\";\n\n      // Escape special characters\n      if (escape.test(node))\n        node = node.replace(escapeAll, characterReplacer);\n      var pref = Object.keys(prefixes).find(pref => node.startsWith(prefixes[pref]));\n      if (pref) {\n        var rest = node.substr(prefixes[pref].length);\n        if (rest.indexOf(\"\\\\\") === -1) // could also say no more than n of these: [...]\n          return pref + \":\" + rest.replace(/([~!$&'()*+,;=/?#@%])/g, '\\\\' + \"$1\");\n      }\n      if (node.startsWith(base)) {\n        return \"<\" + node.substr(base.length) + \">\";\n      } else {\n        return \"<\" + node + \">\";\n      }\n    } else if (isBlank(node)) {\n      return node;\n    } else if (isLiteral(node)) {\n      var value = getLiteralValue(node);\n      var type = getLiteralType(node);\n      var language = getLiteralLanguage(node);\n      // Escape special characters\n      if (escape.test(value))\n        value = value.replace(escapeAll, characterReplacer);\n      // Write the literal, possibly with type or language\n      if (language)\n        return '\"' + value + '\"@' + language;\n      else if (type && type !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return '\"' + value + '\"^^' + this.intermalTermToTurtle(type, base, prefixes);\n      else\n        return '\"' + value + '\"';\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  function isIRI (entity) {\n    if (typeof entity !== 'string')\n      return false;\n    else if (entity.length === 0)\n      return true;\n    else {\n      var firstChar = entity[0];\n      return firstChar !== '\"' && firstChar !== '_';\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  function isLiteral (entity) {\n    return typeof entity === 'string' && entity[0] === '\"';\n  }\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  function isBlank (entity) {\n    return typeof entity === 'string' && entity.substr(0, 2) === '_:';\n  }\n\n  // Tests whether the given entity represents the default graph\n  function isDefaultGraph (entity) {\n    return !entity;\n  }\n\n  // Tests whether the given triple is in the default graph\n  function inDefaultGraph (triple) {\n    return !triple.graph;\n  }\n\n  // Gets the string value of a literal in the N3 library\n  function getLiteralValue (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  }\n\n  // Gets the type of a literal in the N3 library\n  function getLiteralType (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  }\n\n  // Gets the language of a literal in the N3 library\n  function getLiteralLanguage (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  }\n\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n  // Replaces a character by its escaped version\n  function characterReplacer (character) {\n    // Replace a single character by its escaped version\n    var result = escapeReplacements[character];\n    if (result === undefined) {\n      // Replace a single character with its 4-bit unicode escape sequence\n      if (character.length === 1) {\n        result = character.charCodeAt(0).toString(16);\n        result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n      }\n      // Replace a surrogate pair with its 8-bit unicode escape sequence\n      else {\n        result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                  character.charCodeAt(1) + 0x2400).toString(16);\n        result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n      }\n    }\n    return result;\n  }\n\n  return {\n    RdfLangString: RdfLangString,\n    XsdString: XsdString,\n    resolveRelativeIRI: resolveRelativeIRI,\n    isIRI: isIRI,\n    isLiteral: isLiteral,\n    isBlank: isBlank,\n    isDefaultGraph: isDefaultGraph,\n    inDefaultGraph: inDefaultGraph,\n    getLiteralValue: getLiteralValue,\n    getLiteralType: getLiteralType,\n    getLiteralLanguage: getLiteralLanguage,\n    internalTerm: internalTerm,\n    internalTriple: internalTriple,\n    externalTerm: externalTerm,\n    externalTriple: externalTriple,\n    intermalTermToTurtle: intermalTermToTurtle,\n  }\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExTermCjsModule; // node environment\n"
    },
    {
      "id": 4,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
      "name": "../shex-util/shex-util.js",
      "index": 10,
      "index2": 20,
      "size": 73522,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/util",
          "loc": "5:20-43"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require",
          "userRequest": "@shexjs/util",
          "loc": "5:19-42"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "@shexjs/util",
          "loc": "960:17-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "// **ShExUtil** provides ShEx utility functions\n\nconst ShExUtilCjsModule = (function () {\nvar ShExTerm = require(\"@shexjs/term\");\nconst Visitor = require('@shexjs/visitor')\nconst Hierarchy = require('hierarchy-closure')\n\nconst SX = {};\nSX._namespace = \"http://www.w3.org/ns/shex#\";\n[\"Schema\", \"@context\", \"imports\", \"startActs\", \"start\", \"shapes\",\n \"ShapeOr\", \"ShapeAnd\", \"shapeExprs\", \"nodeKind\",\n \"NodeConstraint\", \"iri\", \"bnode\", \"nonliteral\", \"literal\", \"datatype\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\", \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\", \"values\",\n \"ShapeNot\", \"shapeExpr\",\n \"Shape\", \"virtual\", \"closed\", \"extra\", \"expression\", \"inherit\", \"semActs\",\n \"ShapeRef\", \"reference\", \"ShapeExternal\",\n \"EachOf\", \"OneOf\", \"expressions\", \"min\", \"max\", \"annotation\",\n \"TripleConstraint\", \"inverse\", \"negated\", \"predicate\", \"valueExpr\",\n \"Inclusion\", \"include\", \"Language\", \"languageTag\",\n \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"stem\",\n \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\", \"exclusion\",\n \"Wildcard\", \"SemAct\", \"name\", \"code\",\n \"Annotation\", \"object\"].forEach(p => {\n  SX[p] = SX._namespace+p;\n});\nconst RDF = {};\nRDF._namespace = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n[\"type\", \"first\", \"rest\", \"nil\"].forEach(p => {\n  RDF[p] = RDF._namespace+p;\n});\nconst XSD = {}\nXSD._namespace = \"http://www.w3.org/2001/XMLSchema#\";\n[\"anyURI\"].forEach(p => {\n  XSD[p] = XSD._namespace+p;\n});\nconst OWL = {}\nOWL._namespace = \"http://www.w3.org/2002/07/owl#\";\n[\"Thing\"].forEach(p => {\n  OWL[p] = OWL._namespace+p;\n});\n\nconst Missed = {}; // singleton\nvar UNBOUNDED = -1;\n\nfunction extend (base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\nvar ShExUtil = {\n\n  SX: SX,\n  RDF: RDF,\n  version: function () {\n    return \"0.5.0\";\n  },\n\n  Visitor: Visitor,\n  index: Visitor.index,\n\n  // tests\n  // console.warn(\"HERE:\", ShExJtoAS({\"type\":\"Schema\",\"shapes\":[{\"id\":\"http://all.example/S1\",\"type\":\"Shape\",\"expression\":\n  //  { \"id\":\"http://all.example/S1e\", \"type\":\"EachOf\",\"expressions\":[ ] },\n  // // { \"id\":\"http://all.example/S1e\",\"type\":\"TripleConstraint\",\"predicate\":\"http://all.example/p1\"},\n  // \"extra\":[\"http://all.example/p3\",\"http://all.example/p1\",\"http://all.example/p2\"]\n  // }]}).shapes['http://all.example/S1']);\n\n  ShExJtoAS: function (schema) {\n    var _ShExUtil = this;\n    schema._prefixes = schema.prefixes || {  };\n    schema._index = this.index(schema);\n    return schema;\n  },\n\n  AStoShExJ: function (schema, abbreviate) {\n    schema[\"@context\"] = schema[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete schema[\"_index\"];\n    delete schema[\"_prefixes\"];\n    return schema;\n  },\n\n  ShExRVisitor: function (knownShapeExprs) {\n    var v = ShExUtil.Visitor();\n    var knownExpressions = {};\n    var oldVisitShapeExpr = v.visitShapeExpr,\n        oldVisitValueExpr = v.visitValueExpr,\n        oldVisitExpression = v.visitExpression;\n    v.keepShapeExpr = oldVisitShapeExpr;\n\n    v.visitShapeExpr = v.visitValueExpr = function (expr, label) {\n      if (typeof expr === \"string\")\n        return expr;\n      if (\"id\" in expr) {\n        if (knownShapeExprs.indexOf(expr.id) !== -1 || Object.keys(expr).length === 1)\n          return expr.id;\n        delete expr.id;\n      }\n      return oldVisitShapeExpr.call(this, expr, label);\n    };\n\n    v.visitExpression = function (expr) {\n      if (typeof expr === \"string\") // shortcut for recursive references e.g. 1Include1 and ../doc/TODO.md\n        return expr;\n      if (\"id\" in expr) {\n        if (expr.id in knownExpressions) {\n          knownExpressions[expr.id].refCount++;\n          return expr.id;\n        }\n      }\n      var ret = oldVisitExpression.call(this, expr);\n      // Everything from RDF has an ID, usually a BNode.\n      knownExpressions[expr.id] = { refCount: 1, expr: ret };\n      return ret;\n    }\n\n    v.cleanIds = function () {\n      for (var k in knownExpressions) {\n        var known = knownExpressions[k];\n        if (known.refCount === 1 && ShExTerm.isBlank(known.expr.id))\n          delete known.expr.id;\n      };\n    }\n\n    return v;\n  },\n\n\n  // tests\n  // var shexr = ShExUtil.ShExRtoShExJ({ \"type\": \"Schema\", \"shapes\": [\n  //   { \"id\": \"http://a.example/S1\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p1\",\n  //       \"valueExpr\": {\n  //         \"type\": \"ShapeAnd\", \"shapeExprs\": [\n  //           { \"type\": \"NodeConstraint\", \"nodeKind\": \"bnode\" },\n  //           { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //             \"expression\": {\n  //               \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  //           //            \"http://a.example/S2\"\n  //         ] } } },\n  //   { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  // ] });\n  // console.warn(\"HERE:\", shexr.shapes[0].expression.valueExpr);\n  // ShExUtil.ShExJtoAS(shexr);\n  // console.warn(\"THERE:\", shexr.shapes[\"http://a.example/S1\"].expression.valueExpr);\n\n\n  ShExRtoShExJ: function (schema) {\n    // compile a list of known shapeExprs\n    var knownShapeExprs = [];\n    if (\"shapes\" in schema)\n      knownShapeExprs = knownShapeExprs.concat(schema.shapes.map(sh => { return sh.id; }));\n\n    // normalize references to those shapeExprs\n    var v = this.ShExRVisitor(knownShapeExprs);\n    if (\"start\" in schema)\n      schema.start = v.visitShapeExpr(schema.start);\n    if (\"shapes\" in schema)\n      schema.shapes = schema.shapes.map(sh => {\n        return v.keepShapeExpr(sh);\n      });\n\n    // remove extraneous BNode IDs\n    v.cleanIds();\n    return schema;\n  },\n\n  valGrep: function (obj, type, f) {\n    var _ShExUtil = this;\n    var ret = [];\n    for (var i in obj) {\n      var o = obj[i];\n      if (typeof o === \"object\") {\n        if (\"type\" in o && o.type === type)\n          ret.push(f(o));\n        ret.push.apply(ret, _ShExUtil.valGrep(o, type, f));\n      }\n    }\n    return ret;\n  },\n\n  n3jsToTurtle: function (res) {\n    function termToLex (node) {\n      return typeof node === \"object\" ? (\"\\\"\" + node.value + \"\\\"\" + (\n        \"type\" in node ? \"^^<\" + node.type + \">\" :\n          \"language\" in node ? \"@\" + node.language :\n          \"\"\n      )) :\n      ShExTerm.isIRI(node) ? \"<\" + node + \">\" :\n      ShExTerm.isBlank(node) ? node :\n      \"???\";\n    }\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  valToN3js: function (res, factory) {\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      var ret = JSON.parse(JSON.stringify(t));\n      if (typeof t.object === \"object\")\n        ret.object = (\"\\\"\" + t.object.value + \"\\\"\" + (\n          \"type\" in t.object ? \"^^\" + t.object.type :\n            \"language\" in t.object ? \"@\" + t.object.language :\n            \"\"\n        ));\n      return ShExTerm.externalTriple(ret, factory);\n    });\n  },\n\n  n3jsToTurtle: function (n3js) {\n    function termToLex (node) {\n      if (ShExTerm.isIRI(node))\n        return \"<\" + node + \">\";\n      if (ShExTerm.isBlank(node))\n        return node;\n      var t = ShExTerm.getLiteralType(node);\n      if (t && t !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return \"\\\"\" + ShExTerm.getLiteralValue(node) + \"\\\"\" +\n        \"^^<\" + t + \">\";\n      return node;\n    }\n    return n3js.map(function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  /* canonicalize: move all tripleExpression references to their first expression.\n   *\n   */\n  canonicalize: function (schema, trimIRI) {\n    var ret = JSON.parse(JSON.stringify(schema));\n    ret[\"@context\"] = ret[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete ret._prefixes;\n    delete ret._base;\n    let index = ret._index || this.index(schema);\n    delete ret._index;\n    let sourceMap = ret._sourceMap;\n    delete ret._sourceMap;\n    // Don't delete ret.productions as it's part of the AS.\n    var v = ShExUtil.Visitor();\n    var knownExpressions = [];\n    var oldVisitInclusion = v.visitInclusion, oldVisitExpression = v.visitExpression;\n    v.visitInclusion = function (inclusion) {\n      if (knownExpressions.indexOf(inclusion) === -1 &&\n          inclusion in index.tripleExprs) {\n        knownExpressions.push(inclusion)\n        return oldVisitExpression.call(v, index.tripleExprs[inclusion]);\n      }\n      return oldVisitInclusion.call(v, inclusion);\n    };\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression) {\n        if (knownExpressions.indexOf(expression.id) === -1) {\n          knownExpressions.push(expression.id)\n          return oldVisitExpression.call(v, index.tripleExprs[expression.id]);\n        }\n        return expression.id; // Inclusion\n      }\n      return oldVisitExpression.call(v, expression);\n    };\n    if (trimIRI) {\n      v.visitIRI = function (i) {\n        return i.replace(trimIRI, \"\");\n      }\n      if (\"imports\" in ret)\n        ret.imports = v.visitImports(ret.imports);\n    }\n    if (\"shapes\" in ret) {\n      ret.shapes = Object.keys(index.shapeExprs).sort().map(k => {\n        if (\"extra\" in index.shapeExprs[k])\n          index.shapeExprs[k].extra.sort();\n        return v.visitShapeExpr(index.shapeExprs[k]);\n      });\n    }\n    return ret;\n  },\n\n  BiDiClosure: function () {\n    return {\n      needs: {},\n      neededBy: {},\n      inCycle: [],\n      test: function () {\n        function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n        // this.add(1, 2); expect(this.needs, { 1:[2]                     }); expect(this.neededBy, { 2:[1]                     });\n        // this.add(3, 4); expect(this.needs, { 1:[2], 3:[4]              }); expect(this.neededBy, { 2:[1], 4:[3]              });\n        // this.add(2, 3); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1] });\n\n        this.add(2, 3); expect(this.needs, { 2:[3]                     }); expect(this.neededBy, { 3:[2]                     });\n        this.add(1, 2); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(1, 3); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(3, 4); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(6, 7); expect(this.needs, { 6:[7]                    , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6]                    , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 6); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 7); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(7, 8); expect(this.needs, { 5:[6,7,8], 6:[7,8], 7:[8], 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5], 8:[7,6,5], 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(4, 5);\n        expect(this.needs,    { 1:[2,3,4,5,6,7,8], 2:[3,4,5,6,7,8], 3:[4,5,6,7,8], 4:[5,6,7,8], 5:[6,7,8], 6:[7,8], 7:[8] });\n        expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1], 5:[4,3,2,1], 6:[5,4,3,2,1], 7:[6,5,4,3,2,1], 8:[7,6,5,4,3,2,1] });\n      },\n      add: function (needer, needie, negated) {\n        var r = this;\n        if (!(needer in r.needs))\n          r.needs[needer] = [];\n        if (!(needie in r.neededBy))\n          r.neededBy[needie] = [];\n\n        // // [].concat.apply(r.needs[needer], [needie], r.needs[needie]). emitted only last element\n        r.needs[needer] = r.needs[needer].concat([needie], r.needs[needie]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        // // [].concat.apply(r.neededBy[needie], [needer], r.neededBy[needer]). emitted only last element\n        r.neededBy[needie] = r.neededBy[needie].concat([needer], r.neededBy[needer]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n\n        if (needer in this.neededBy) this.neededBy[needer].forEach(function (e) {\n          r.needs[e] = r.needs[e].concat([needie], r.needs[needie]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        });\n\n        if (needie in this.needs) this.needs[needie].forEach(function (e) {\n          r.neededBy[e] = r.neededBy[e].concat([needer], r.neededBy[needer]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; })\n        });\n        // this.neededBy[needie].push(needer);\n\n        if (r.needs[needer].indexOf(needer) !== -1)\n          r.inCycle = r.inCycle.concat(r.needs[needer]);\n      },\n      trim: function () {\n        function _trim (a) {\n          // filter(function (el, ord, l) { return l.indexOf(el) === ord; })\n          for (var i = a.length-1; i > -1; --i)\n            if (a.indexOf(a[i]) < i)\n              a.splice(i, i+1);\n        }\n        for (k in this.needs)\n          _trim(this.needs[k]);\n        for (k in this.neededBy)\n          _trim(this.neededBy[k]);\n      },\n      foundIn: {},\n      addIn: function (tripleExpr, shapeExpr) {\n        this.foundIn[tripleExpr] = shapeExpr;\n      }\n    }\n  },\n  /** @@TODO tests\n   * options:\n   *   no: don't do anything; just report nestable shapes\n   *   transform: function to change shape labels\n   */\n  nestShapes: function (schema, options = {}) {\n    var _ShExUtil = this;\n    const index = schema._index || this.index(schema);\n    if (!('no' in options)) { options.no = false }\n\n    let shapeLabels = Object.keys(index.shapeExprs || [])\n    let shapeReferences = {}\n    shapeLabels.forEach(label => {\n      let shape = index.shapeExprs[label]\n      noteReference(label, null) // just note the shape so we have a complete list at the end\n      shape = _ShExUtil.skipDecl(shape)\n      if (shape.type === 'Shape') {\n        if ('extends' in shape) {\n          shape.extends.forEach(\n            parent => noteReference(parent, shape)\n          )\n        }\n        if ('expression' in shape) {\n          (_ShExUtil.simpleTripleConstraints(shape) || []).forEach(tc => {\n            let target = _ShExUtil.getValueType(tc.valueExpr, true)\n            noteReference(target, {type: 'tc', shapeLabel: label, tc: tc})\n          })\n        }\n      } else if (shape.type === 'NodeConstraint') {\n        // can't have any refs to other shapes\n      } else {\n        throw Error('nestShapes currently only supports Shapes and NodeConstraints')\n      }\n    })\n    let nestables = Object.keys(shapeReferences).filter(\n      label => shapeReferences[label].length === 1\n        && shapeReferences[label][0].type === 'tc' // no inheritance support yet\n        && _ShExUtil.skipDecl(index.shapeExprs[label]).type === 'Shape' // Don't nest e.g. valuesets for now\n    ).filter(\n      nestable => !('noNestPattern' in options)\n        || !nestable.match(RegExp(options.noNestPattern))\n    ).reduce((acc, label) => {\n      acc[label] = {\n        referrer: shapeReferences[label][0].shapeLabel,\n        predicate: shapeReferences[label][0].tc.predicate\n      }\n      return acc\n    }, {})\n    if (!options.no) {\n      let oldToNew = {}\n\n      if (options.rename) {\n      if (!('transform' in options)) {\n        options.transform = (function () {\n          let map = shapeLabels.reduce((acc, k, idx) => {\n            acc[k] = '_:transformed' + idx\n            return acc\n          }, {})\n          return function (id, shapeExpr) {\n            return map[id]\n          }\n        })()\n      }\n      Object.keys(nestables).forEach(oldName => {\n        let shapeExpr = index.shapeExprs[oldName]\n        let newName = options.transform(oldName, shapeExpr)\n        oldToNew[oldName] = newName\n        shapeLabels[shapeLabels.indexOf(oldName)] = newName\n        nestables[newName] = nestables[oldName]\n        nestables[newName].was = oldName\n        delete nestables[oldName]\n        index.shapeExprs[newName] = index.shapeExprs[oldName]\n        delete index.shapeExprs[oldName]\n        if (shapeReferences[oldName].length !== 1) { throw Error('assertion: ' + oldName + ' doesn\\'t have one reference: [' + shapeReferences[oldName] + ']') }\n        let ref = shapeReferences[oldName][0]\n        if (ref.type === 'tc') {\n          if (ref.tc.valueExpr.type === 'ShapeRef') {\n            ref.tc.valueExpr.reference = newName\n          } else {\n            throw Error('assertion: rename not implemented for TripleConstraint expr: ' + ref.tc.valueExpr)\n            // _ShExUtil.setValueType(ref, newName)\n          }\n        } else if (ref.type === 'Shape') {\n          throw Error('assertion: rename not implemented for Shape: ' + ref)\n        } else {\n          throw Error('assertion: ' + ref.type + ' not TripleConstraint or Shape')\n        }\n      })\n\n      Object.keys(nestables).forEach(k => {\n        let n = nestables[k]\n        if (n.referrer in oldToNew) {\n          n.newReferrer = oldToNew[n.referrer]\n        }\n      })\n\n      // Restore old order for more concise diffs.\n      let shapesCopy = {}\n      shapeLabels.forEach(label => shapesCopy[label] = index.shapeExprs[label])\n      index.shapeExprs = shapesCopy\n      } else {\n        const doomed = []\n        const ids = schema.shapes.map(s => s.id)\n        Object.keys(nestables).forEach(oldName => {\n          shapeReferences[oldName][0].tc.valueExpr = index.shapeExprs[oldName].shapeExpr\n          const delme = ids.indexOf(oldName)\n          if (schema.shapes[delme].id !== oldName)\n            throw Error('assertion: found ' + schema.shapes[delme].id + ' instead of ' + oldName)\n          doomed.push(delme)\n          delete index.shapeExprs[oldName]\n        })\n        doomed.sort((l, r) => r - l).forEach(delme => {\n          const id = schema.shapes[delme].id\n          if (!nestables[id])\n            throw Error('deleting unexpected shape ' + id)\n          schema.shapes.splice(delme, 1)\n        })\n      }\n    }\n    // console.dir(nestables)\n    // console.dir(shapeReferences)\n    return nestables\n\n    function noteReference (id, reference) {\n      if (!(id in shapeReferences)) {\n        shapeReferences[id] = []\n      }\n      if (reference) {\n        shapeReferences[id].push(reference)\n      }\n    }\n  },\n\n  /** @@TODO tests\n   *\n   */\n  getPredicateUsage: function (schema, untyped = {}) {\n    var _ShExUtil = this;\n\n    // populate shapeHierarchy\n    let shapeHierarchy = Hierarchy.create()\n    Object.keys(schema.shapes).forEach(label => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[label])\n      if (shapeExpr.type === 'Shape') {\n        (shapeExpr.extends || []).forEach(\n          superShape => shapeHierarchy.add(superShape, label)\n        )\n      }\n    })\n    Object.keys(schema.shapes).forEach(label => {\n      if (!(label in shapeHierarchy.parents))\n        shapeHierarchy.parents[label] = []\n    })\n\n    let predicates = { } // IRI->{ uses: [shapeLabel], commonType: shapeExpr }\n    Object.keys(schema.shapes).forEach(shapeLabel => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[shapeLabel])\n      if (shapeExpr.type === 'Shape') {\n        let tcs = _ShExUtil.simpleTripleConstraints(shapeExpr) || []\n        tcs.forEach(tc => {\n          let newType = _ShExUtil.getValueType(tc.valueExpr)\n          if (!(tc.predicate in predicates)) {\n            predicates[tc.predicate] = {\n              uses: [shapeLabel],\n              commonType: newType,\n              polymorphic: false\n            }\n            if (typeof newType === 'object') {\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                newType,\n                references: []\n              }\n            }\n          } else {\n            predicates[tc.predicate].uses.push(shapeLabel)\n            let curType = predicates[tc.predicate].commonType\n            if (typeof curType === 'object' || curType === null) {\n              // another use of a predicate with no commonType\n              // console.warn(`${shapeLabel} ${tc.predicate}:${newType} uses untypable predicate`)\n              untyped[tc.predicate].references.push({ shapeLabel, newType })\n            } else if (typeof newType === 'object') {\n              // first use of a predicate with no detectable commonType\n              predicates[tc.predicate].commonType = null\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                curType,\n                newType,\n                references: []\n              }\n            } else if (curType === newType) {\n              ; // same type again\n            } else if (shapeHierarchy.parents[curType].indexOf(newType) !== -1) {\n              predicates[tc.predicate].polymorphic = true; // already covered by current commonType\n            } else {\n              let idx = shapeHierarchy.parents[newType].indexOf(curType)\n              if (idx === -1) {\n                let intersection = shapeHierarchy.parents[curType].filter(\n                  lab => -1 !== shapeHierarchy.parents[newType].indexOf(lab)\n                )\n                if (intersection.length === 0) {\n                  untyped[tc.predicate] = {\n                    shapeLabel,\n                    predicate: tc.predicate,\n                    curType,\n                    newType,\n                    references: []\n                  }\n                  // console.warn(`${shapeLabel} ${tc.predicate} : ${newType} isn\\'t related to ${curType}`)\n                  predicates[tc.predicate].commonType = null\n                } else {\n                  predicates[tc.predicate].commonType = intersection[0]\n                  predicates[tc.predicate].polymorphic = true\n                }\n              } else {\n                predicates[tc.predicate].commonType = shapeHierarchy.parents[newType][idx]\n                predicates[tc.predicate].polymorphic = true\n              }\n            }\n          }\n        })\n      }\n    })\n    return predicates\n  },\n\n  /** @@TODO tests\n   *\n   */\n  simpleTripleConstraints: function (shape) {\n    if (!('expression' in shape)) {\n      return []\n    }\n    if (shape.expression.type === 'TripleConstraint') {\n      return [ shape.expression ]\n    }\n    if (shape.expression.type === 'EachOf' &&\n        !(shape.expression.expressions.find(\n          expr => expr.type !== 'TripleConstraint'\n        ))) {\n          return shape.expression.expressions\n        }\n    throw Error('can\\'t (yet) express ' + JSON.stringify(shape))\n  },\n\n  skipDecl: function (shapeExpr) {\n    return shapeExpr.type === 'ShapeDecl' ? shapeExpr.shapeExpr : shapeExpr\n  },\n\n  getValueType: function (valueExpr) {\n    if (typeof valueExpr === 'string') { return valueExpr }\n    if (valueExpr.reference) { return valueExpr.reference }\n    if (valueExpr.nodeKind === 'iri') { return OWL.Thing } // !! push this test to callers\n    if (valueExpr.datatype) { return valueExpr.datatype }\n    // if (valueExpr.extends && valueExpr.extends.length === 1) { return valueExpr.extends[0] }\n    return valueExpr // throw Error('no value type for ' + JSON.stringify(valueExpr))\n  },\n\n  /** getDependencies: find which shappes depend on other shapes by inheritance\n   * or inclusion.\n   * TODO: rewrite in terms of Visitor.\n   */\n  getDependencies: function (schema, ret) {\n    ret = ret || this.BiDiClosure();\n    (schema.shapes || []).forEach(function (shape) {\n      function _walkShapeExpression (shapeExpr, negated) {\n        if (typeof shapeExpr === \"string\") { // ShapeRef\n          ret.add(shape.id, shapeExpr);\n        } else if (shapeExpr.type === \"ShapeOr\" || shapeExpr.type === \"ShapeAnd\") {\n          shapeExpr.shapeExprs.forEach(function (expr) {\n            _walkShapeExpression(expr, negated);\n          });\n        } else if (shapeExpr.type === \"ShapeNot\") {\n          _walkShapeExpression(shapeExpr.shapeExpr, negated ^ 1); // !!! test negation\n        } else if (shapeExpr.type === \"Shape\") {\n          _walkShape(shapeExpr, negated);\n        } else if (shapeExpr.type === \"NodeConstraint\") {\n          // no impact on dependencies\n        } else if (shapeExpr.type === \"ShapeExternal\") {\n        } else\n          throw Error(\"expected Shape{And,Or,Ref,External} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n      }\n      \n      function _walkShape (shape, negated) {\n        function _walkTripleExpression (tripleExpr, negated) {\n          function _exprGroup (exprs, negated) {\n            exprs.forEach(function (nested) {\n              _walkTripleExpression(nested, negated) // ?? negation allowed?\n            });\n          }\n\n          function _walkTripleConstraint (tc, negated) {\n            if (tc.valueExpr)\n              _walkShapeExpression(tc.valueExpr, negated);\n            if (negated && ret.inCycle.indexOf(shape.id) !== -1) // illDefined/negatedRefCycle.err\n              throw Error(\"Structural error: \" + shape.id + \" appears in negated cycle\");\n          }\n\n          if (typeof tripleExpr === \"string\") { // Inclusion\n            ret.add(shape.id, tripleExpr);\n          } else {\n            if (\"id\" in tripleExpr)\n              ret.addIn(tripleExpr.id, shape.id)\n            if (tripleExpr.type === \"TripleConstraint\") {\n              _walkTripleConstraint(tripleExpr, negated);\n            } else if (tripleExpr.type === \"OneOf\" || tripleExpr.type === \"EachOf\") {\n              _exprGroup(tripleExpr.expressions);\n            } else {\n              throw Error(\"expected {TripleConstraint,OneOf,EachOf,Inclusion} in \" + tripleExpr);\n            }\n          }\n        }\n\n        if (shape.inherit && shape.inherit.length > 0)\n          shape.inherit.forEach(function (i) {\n            ret.add(shape.id, i);\n          });\n        if (shape.expression)\n          _walkTripleExpression(shape.expression, negated);\n      }\n      _walkShapeExpression(shape, 0); // 0 means false for bitwise XOR\n    });\n    return ret;\n  },\n\n  /** partition: create subset of a schema with only desired shapes and\n   * their dependencies.\n   *\n   * @schema: input schema\n   * @partition: shape name or array of desired shape names\n   * @deps: (optional) dependency tree from getDependencies.\n   *        map(shapeLabel -> [shapeLabel])\n   */\n  partition: function (schema, includes, deps, cantFind) {\n    const inputIndex = schema._index || this.index(schema)\n    const outputIndex = { shapeExprs: new Map(), tripleExprs: new Map() };\n    includes = includes instanceof Array ? includes : [includes];\n\n    // build dependency tree if not passed one\n    deps = deps || this.getDependencies(schema);\n    cantFind = cantFind || function (what, why) {\n      throw new Error(\"Error: can't find shape \" +\n                      (why ?\n                       why + \" dependency \" + what :\n                       what));\n    };\n    var partition = {};\n    for (var k in schema)\n      partition[k] = k === \"shapes\" ? [] : schema[k];\n    includes.forEach(function (i) {\n      if (i in outputIndex.shapeExprs) {\n        // already got it.\n      } else if (i in inputIndex.shapeExprs) {\n        const adding = inputIndex.shapeExprs[i];\n        partition.shapes.push(adding);\n        outputIndex.shapeExprs[adding.id] = adding;\n        if (i in deps.needs)\n          deps.needs[i].forEach(function (n) {\n            // Turn any needed TE into an SE.\n            if (n in deps.foundIn)\n              n = deps.foundIn[n];\n\n            if (n in outputIndex.shapeExprs) {\n            } else if (n in inputIndex.shapeExprs) {\n              const needed = inputIndex.shapeExprs[n];\n              partition.shapes.push(needed);\n              outputIndex.shapeExprs[needed.id] = needed;\n            } else\n              cantFind(n, i);\n          });\n      } else {\n        cantFind(i, \"supplied\");\n      }\n    });\n    return partition;\n  },\n\n\n  /** @@TODO flatten: return copy of input schema with all shape and value class\n   * references substituted by a copy of their referent.\n   *\n   * @schema: input schema\n   */\n  flatten: function (schema, deps, cantFind) {\n    var v = this.Visitor();\n    return v.visitSchema(schema);\n  },\n\n  // @@ put predicateUsage here\n\n  emptySchema: function () {\n    return {\n      type: \"Schema\"\n    };\n  },\n  merge: function (left, right, overwrite, inPlace) {\n    var ret = inPlace ? left : this.emptySchema();\n\n    function mergeArray (attr) {\n      Object.keys(left[attr] || {}).forEach(function (key) {\n        if (!(attr in ret))\n          ret[attr] = {};\n        ret[attr][key] = left[attr][key];\n      });\n      Object.keys(right[attr] || {}).forEach(function (key) {\n        if (!(attr  in left) || !(key in left[attr]) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = {};\n          ret[attr][key] = right[attr][key];\n        }\n      });\n    }\n\n    function mergeMap (attr) {\n      (left[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr in ret))\n          ret[attr] = new Map();\n        ret[attr].set(key, left[attr].get(key));\n      });\n      (right[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr  in left) || !(left[attr].has(key)) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = new Map();\n          ret[attr].set(key, right[attr].get(key));\n        }\n      });\n    }\n\n    // base\n    if (\"_base\" in left)\n      ret._base = left._base;\n    if (\"_base\" in right)\n      if (!(\"_base\" in left) || overwrite)\n        ret._base = right._base;\n\n    mergeArray(\"_prefixes\");\n\n    mergeMap(\"_sourceMap\");\n\n    if (\"imports\" in right)\n      if (!(\"imports\" in left) || overwrite)\n        ret.imports = right.imports;\n\n    // startActs\n    if (\"startActs\" in left)\n      ret.startActs = left.startActs;\n    if (\"startActs\" in right)\n      if (!(\"startActs\" in left) || overwrite)\n        ret.startActs = right.startActs;\n\n    // start\n    if (\"start\" in left)\n      ret.start = left.start;\n    if (\"start\" in right)\n      if (!(\"start\" in left) || overwrite)\n        ret.start = right.start;\n\n    let lindex = left._index || this.index(left);\n\n    // shapes\n    if (!inPlace)\n      (left.shapes || []).forEach(function (lshape) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(lshape);\n      });\n    (right.shapes || []).forEach(function (rshape) {\n      if (!(\"shapes\"  in left) || !(rshape.id in lindex.shapeExprs) || overwrite) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(rshape)\n      }\n    });\n\n    if (left._index || right._index)\n      ret._index = this.index(ret); // inefficient; could build above\n\n    return ret;\n  },\n\n  absolutizeResults: function (parsed, base) {\n    // !! duplicate of Validation-test.js:84: var referenceResult = parseJSONFile(resultsFile...)\n    function mapFunction (k, obj) {\n      // resolve relative URLs in results file\n      if ([\"shape\", \"reference\", \"node\", \"subject\", \"predicate\", \"object\"].indexOf(k) !== -1 &&\n          ShExTerm.isIRI(obj[k])) {\n        obj[k] = ShExTerm.resolveRelativeIRI(base, obj[k]);\n      }}\n\n    function resolveRelativeURLs (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (typeof obj[k] === \"object\") {\n          resolveRelativeURLs(obj[k]);\n        }\n        if (mapFunction) {\n          mapFunction(k, obj);\n        }\n      });\n    }\n    resolveRelativeURLs(parsed);\n    return parsed;\n  },\n\n  getProofGraph: function (res, db, dataFactory) {\n    function _dive1 (solns) {\n      if (solns.type === \"NodeConstraintTest\") {\n      } else if (solns.type === \"SolutionList\" ||\n          solns.type === \"ShapeAndResults\") {\n        solns.solutions.forEach(s => {\n          if (s.solution) // no .solution for <S> {}\n            _dive1(s.solution);\n        });\n      } else if (solns.type === \"ShapeOrResults\") {\n        _dive1(solns.solution);\n      } else if (solns.type === \"ShapeTest\") {\n        if (\"solution\" in solns)\n          _dive1(solns.solution);\n      } else if (solns.type === \"OneOfSolutions\" ||\n                 solns.type === \"EachOfSolutions\") {\n        solns.solutions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"OneOfSolution\" ||\n                 solns.type === \"EachOfSolution\") {\n        solns.expressions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"TripleConstraintSolutions\") {\n        solns.solutions.map(s => {\n          if (s.type !== \"TestedTriple\")\n            throw Error(\"unexpected result type: \" + s.type);\n          var s2 = s;\n          if (typeof s2.object === \"object\")\n            s2.object = \"\\\"\" + s2.object.value.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\"\n            + (s2.object.language ? (\"@\" + s2.object.language) : \n               s2.object.type ? (\"^^\" + s2.object.type) :\n               \"\");\n          db.addQuad(ShExTerm.externalTriple(s2, dataFactory))\n          if (\"referenced\" in s) {\n            _dive1(s.referenced);\n          }\n        });\n      } else {\n        throw Error(\"unexpected expr type \"+solns.type+\" in \" + JSON.stringify(solns));\n      }\n    }\n    _dive1(res);\n    return db;\n  },\n\n  validateSchema: function (schema) { // obselete, but may need other validations in the future.\n    var _ShExUtil = this;\n    var visitor = this.Visitor();\n    var currentLabel = currentExtra = null;\n    var currentNegated = false;\n    var dependsOn = { };\n    var inTE = false;\n    var oldVisitShape = visitor.visitShape;\n    var negativeDeps = Hierarchy.create();\n    var positiveDeps = Hierarchy.create();\n    let index = schema.index || this.index(schema);\n\n    visitor.visitShape = function (shape, label) {\n      var lastExtra = currentExtra;\n      currentExtra = shape.extra;\n      var ret = oldVisitShape.call(visitor, shape, label);\n      currentExtra = lastExtra;\n      return ret;\n    }\n\n    var oldVisitShapeNot = visitor.visitShapeNot;\n    visitor.visitShapeNot = function (shapeNot, label) {\n      var lastNegated = currentNegated;\n      currentNegated ^= true;\n      var ret = oldVisitShapeNot.call(visitor, shapeNot, label);\n      currentNegated = lastNegated;\n      return ret;\n    }\n\n    var oldVisitTripleConstraint = visitor.visitTripleConstraint;\n    visitor.visitTripleConstraint = function (expr) {\n      var lastNegated = currentNegated;\n      if (currentExtra && currentExtra.indexOf(expr.predicate) !== -1)\n        currentNegated ^= true;\n      inTE = true;\n      var ret = oldVisitTripleConstraint.call(visitor, expr);\n      inTE = false;\n      currentNegated = lastNegated;\n      return ret;\n    };\n\n    var oldVisitShapeRef = visitor.visitShapeRef;\n    visitor.visitShapeRef = function (shapeRef) {\n      if (!(shapeRef in index.shapeExprs))\n        throw firstError(Error(\"Structural error: reference to \" + JSON.stringify(shapeRef) + \" not found in schema shape expressions:\\n\" + dumpKeys(index.shapeExprs) + \".\"), shapeRef);\n      if (!inTE && shapeRef === currentLabel)\n        throw firstError(Error(\"Structural error: circular reference to \" + currentLabel + \".\"), shapeRef);\n      (currentNegated ? negativeDeps : positiveDeps).add(currentLabel, shapeRef)\n      return oldVisitShapeRef.call(visitor, shapeRef);\n    }\n\n    var oldVisitInclusion = visitor.visitInclusion;\n    visitor.visitInclusion = function (inclusion) {\n      var refd;\n      if (!(refd = index.tripleExprs[inclusion]))\n        throw firstError(Error(\"Structural error: included shape \" + inclusion + \" not found in schema triple expressions:\\n\" + dumpKeys(index.tripleExprs) + \".\"), inclusion);\n      // if (refd.type !== \"Shape\")\n      //   throw Error(\"Structural error: \" + inclusion + \" is not a simple shape.\");\n      return oldVisitInclusion.call(visitor, inclusion);\n    };\n\n    (schema.shapes || []).forEach(function (shape) {\n      currentLabel = shape.id;\n      visitor.visitShapeExpr(shape, shape.id);\n    });\n    let circs = Object.keys(negativeDeps.children).filter(\n      k => negativeDeps.children[k].filter(\n        k2 => k2 in negativeDeps.children && negativeDeps.children[k2].indexOf(k) !== -1\n          || k2 in positiveDeps.children && positiveDeps.children[k2].indexOf(k) !== -1\n      ).length > 0\n    );\n    if (circs.length)\n      throw firstError(Error(\"Structural error: circular negative dependencies on \" + circs.join(',') + \".\"), circs[0]);\n\n    function dumpKeys (obj) {\n      return obj ? Object.keys(obj).map(\n        u => u.substr(0, 2) === '_:' ? u : '<' + u + '>'\n      ).join(\"\\n        \") : '- none defined -'\n    }\n\n    function firstError (e, obj) {\n      if (\"_sourceMap\" in schema)\n        e.location = (schema._sourceMap.get(obj) || [undefined])[0];\n      return e;\n    }\n  },\n\n  /** isWellDefined: assert that schema is well-defined.\n   *\n   * @schema: input schema\n   * @@TODO\n   */\n  isWellDefined: function (schema) {\n    this.validateSchema(schema);\n    // var deps = this.getDependencies(schema);\n    return schema;\n  },\n\n  walkVal: function (val, cb) {\n    var _ShExUtil = this;\n    if (val.type === \"NodeConstraintTest\") {\n      return null;\n    } else if (val.type === \"ShapeTest\") {\n      return \"solution\" in val ? _ShExUtil.walkVal(val.solution, cb) : null;\n    } else if (val.type === \"ShapeOrResults\") {\n      return _ShExUtil.walkVal(val.solution || val.solutions, cb);\n    } else if (val.type === \"ShapeAndResults\") {\n      return val.solutions.reduce((ret, exp) => {\n        var n = _ShExUtil.walkVal(exp, cb);\n        if (n)\n          Object.keys(n).forEach(k => {\n            if (k in ret)\n              ret[k] = ret[k].concat(n[k]);\n            else\n              ret[k] = n[k];\n          })\n        return ret;\n      }, {});\n    } else if (val.type === \"EachOfSolutions\" || val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        sln.expressions.forEach(exp => {\n          var n = _ShExUtil.walkVal(exp, cb);\n          if (n)\n            Object.keys(n).forEach(k => {\n              if (k in ret)\n                ret[k] = ret[k].concat(n[k]);\n              else\n                ret[k] = n[k];\n            })\n        });\n        return ret;\n      }, {});\n    } else if (val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        Object.assign(ret, _ShExUtil.walkVal(sln, cb));\n        return ret;\n      }, {});\n    } else if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        var ret = {};\n        var vals = [];\n        ret[val.predicate] = vals;\n        val.solutions.forEach(sln => {\n          var toAdd = [];\n          if (chaseList(sln.referenced, toAdd)) {\n            vals = vals.concat(toAdd);\n          } else {\n            var newElt = cb(sln);\n            if (\"referenced\" in sln) {\n              var t = _ShExUtil.walkVal(sln.referenced, cb);\n              if (t)\n                newElt.nested = t;\n            }\n            vals.push(newElt);\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = cb(member);\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.walkVal(member.referenced, cb);\n                if (t)\n                  newElt.nested = t;\n              }\n              vals.push(newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced.type === \"ShapeOrResults\" // heuristic for `nil  OR @<list>` idiom\n                          ? rest.referenced.solution\n                          : rest.referenced);\n            }\n          }\n        });\n        return vals.length ? ret : null;\n      } else {\n        return null;\n      }\n    } else if (val.type === \"Recursion\") {\n      return null;\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  /**\n   * Convert val results to a property tree.\n   * @exports\n   * @returns {@code {p1:[{p2: v2},{p3: v3}]}}\n   */\n  valToValues: function (val) {\n    return this.walkVal (val, function (sln) {\n      return { ldterm: sln.object };\n    });\n  },\n\n  valToExtension: function (val, lookfor) {\n    var map = this.walkVal (val, function (sln) {\n      return { extensions: sln.extensions };\n    });\n    function extensions (obj) {\n      var list = [];\n      var crushed = {};\n      function crush (elt) {\n        if (crushed === null)\n          return elt;\n        if (elt.constructor === Array) {\n          crushed = null;\n          return elt;\n        }\n        for (k in elt) {\n          if (k in crushed) {\n            crushed = null\n            return elt;\n          }\n          crushed[k] = ldify(elt[k]);\n        }\n        return elt;\n      }\n      for (var k in obj) {\n        if (k === \"extensions\") {\n          if (obj[k])\n            list.push(crush(ldify(obj[k][lookfor])));\n        } else if (k === \"nested\") {\n          var nested = extensions(obj[k]);\n          if (nested.constructor === Array)\n            nested.forEach(crush);\n          else\n            crush(nested);\n          list = list.concat(nested);\n        } else {\n          list.push(crush(extensions(obj[k])));\n        }\n      }\n      return list.length === 1 ? list[0] :\n        crushed ? crushed :\n        list;\n    }\n    return extensions(map);\n  },\n\n  valuesToSchema: function (values) {\n    // console.log(JSON.stringify(values, null, \"  \"));\n    var v = values;\n    var t = values[RDF.type][0].ldterm;\n    if (t === SX.Schema) {\n      /* Schema { \"@context\":\"http://www.w3.org/ns/shex.jsonld\"\n       *           startActs:[SemAct+]? start:(shapeExpr|labeledShapeExpr)?\n       *           shapes:[labeledShapeExpr+]? }\n       */\n      var ret = {\n        \"@context\": \"http://www.w3.org/ns/shex.jsonld\",\n        type: \"Schema\"\n      }\n      if (SX.startActs in v)\n        ret.startActs = v[SX.startActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      if (SX.imports in v)\n        ret.imports = v[SX.imports].map(e => {\n          return e.ldterm;\n        });\n      if (values[SX.start])\n        ret.start = extend({id: values[SX.start][0].ldterm}, shapeExpr(values[SX.start][0].nested));\n      var shapes = values[SX.shapes];\n      if (shapes) {\n        ret.shapes = shapes.map(v => {\n          return extend({id: v.ldterm}, shapeExpr(v.nested));\n        });\n      }\n      // console.log(ret);\n      return ret;\n    } else {\n      throw Error(\"unknown schema type in \" + JSON.stringify(values));\n    }\n    function findType (v, elts, f) {\n      var t = v[RDF.type][0].ldterm.substr(SX._namespace.length);\n      var elt = elts[t];\n      if (!elt)\n        return Missed;\n      if (elt.nary) {\n        var ret = {\n          type: t,\n        };\n        ret[elt.prop] = v[SX[elt.prop]].map(e => {\n          return valueOf(e);\n        });\n        return ret;\n      } else {\n        var ret = {\n          type: t\n        };\n        if (elt.prop) {\n          ret[elt.prop] = valueOf(v[SX[elt.prop]][0]);\n        }\n        return ret;\n      }\n\n      function valueOf (x) {\n        return elt.expr && \"nested\" in x ? extend({ id: x.ldterm, }, f(x.nested)) : x.ldterm;\n      }\n    }\n    function shapeExpr (v) {\n      // shapeExpr = ShapeOr | ShapeAnd | ShapeNot | NodeConstraint | Shape | ShapeRef | ShapeExternal;\n      var elts = { \"ShapeAnd\"     : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeOr\"      : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeNot\"     : { nary: false, expr: true , prop: \"shapeExpr\"  },\n                   \"ShapeRef\"     : { nary: false, expr: false, prop: \"reference\"  },\n                   \"ShapeExternal\": { nary: false, expr: false, prop: null         } };\n      var ret = findType(v, elts, shapeExpr);\n      if (ret !== Missed)\n        return ret;\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.Shape) {\n        var ret = { type: \"Shape\" };\n        [\"closed\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.extra in v)\n          ret.extra = v[SX.extra].map(e => { return e.ldterm; });\n        if (SX.expression in v) {\n          ret.expression =\n            \"nested\" in v[SX.expression][0] ?\n            extend({id: v[SX.expression][0].ldterm}, tripleExpr(v[SX.expression][0].nested)) :\n            v[SX.expression][0].ldterm;\n        }\n        if (SX.annotation in v)\n          ret.annotations = v[SX.annotation].map(e => {\n            return {\n              type: \"Annotation\",\n              predicate: e.nested[SX.predicate][0].ldterm,\n              object: e.nested[SX.object][0].ldterm\n            };\n          });\n        if (SX.semActs in v)\n          ret.semActs = v[SX.semActs].map(e => {\n            var ret = {\n              type: \"SemAct\",\n              name: e.nested[SX.name][0].ldterm\n            };\n            if (SX.code in e.nested)\n              ret.code = e.nested[SX.code][0].ldterm.value;\n            return ret;\n          });\n        return ret;\n      } else if (t === SX.NodeConstraint) {\n        var ret = { type: \"NodeConstraint\" };\n        if (SX.values in v)\n          ret.values = v[SX.values].map(v1 => { return objectValue(v1); });\n        if (SX.nodeKind in v)\n          ret.nodeKind = v[SX.nodeKind][0].ldterm.substr(SX._namespace.length);\n        [\"length\", \"minlength\", \"maxlength\", \"mininclusive\", \"maxinclusive\", \"minexclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = parseFloat(v[SX[a]][0].ldterm.value);\n        });\n        if (SX.pattern in v)\n          ret.pattern = v[SX.pattern][0].ldterm.value;\n        if (SX.flags in v)\n          ret.flags = v[SX.flags][0].ldterm.value;\n        if (SX.datatype in v)\n          ret.datatype = v[SX.datatype][0].ldterm;\n        return ret;\n      } else {\n        throw Error(\"unknown shapeExpr type in \" + JSON.stringify(v));\n      }\n\n    }\n\n    function objectValue (v, expectString) {\n      if (\"nested\" in v) {\n        var t = v.nested[RDF.type][0].ldterm;\n        if ([SX.IriStem, SX.LiteralStem, SX.LanguageStem].indexOf(t) !== -1) {\n          var ldterm = v.nested[SX.stem][0].ldterm.value;\n          return {\n            type: t.substr(SX._namespace.length),\n            stem: ldterm\n          };\n        } else if ([SX.Language].indexOf(t) !== -1) {\n          return {\n            type: \"Language\",\n            languageTag: v.nested[SX.languageTag][0].ldterm.value\n          };\n        } else if ([SX.IriStemRange, SX.LiteralStemRange, SX.LanguageStemRange].indexOf(t) !== -1) {\n          var st = v.nested[SX.stem][0];\n          var stem = st;\n          if (typeof st === \"object\") {\n            if (typeof st.ldterm === \"object\") {\n              stem = st.ldterm;\n            } else if (st.ldterm.startsWith(\"_:\")) {\n              stem = { type: \"Wildcard\" };\n            }\n          }\n          var ret = {\n            type: t.substr(SX._namespace.length),\n            stem: stem.type !== \"Wildcard\" ? stem.value : stem\n          };\n          if (SX.exclusion in v.nested) {\n            // IriStemRange:\n            // * [{\"ldterm\":\"http://a.example/v1\"},{\"ldterm\":\"http://a.example/v3\"}] <-- no value\n            // * [{\"ldterm\":\"_:b836\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v1\"}}]}},\n            //    {\"ldterm\":\"_:b838\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v3\"}}]}}]\n\n            // LiteralStemRange:\n            // * [{\"ldterm\":{\"value\":\"v1\"}},{\"ldterm\":{\"value\":\"v3\"}}]\n            // * [{\"ldterm\":\"_:b866\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v1\"}}]}},\n            //    {\"ldterm\":\"_:b868\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v3\"}}]}}]\n\n            // LanguageStemRange:\n            // * [{\"ldterm\":{\"value\":\"fr-be\"}},{\"ldterm\":{\"value\":\"fr-ch\"}}]\n            // * [{\"ldterm\":\"_:b851\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-be\"}}]}},\n            //    {\"ldterm\":\"_:b853\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-ch\"}}]}}]\n            ret.exclusions = v.nested[SX.exclusion].map(v1 => {\n              return objectValue(v1, t !== SX.IriStemRange);\n            });\n          }\n          return ret;\n        } else {\n          throw Error(\"unknown objectValue type in \" + JSON.stringify(v));\n        }\n      } else {\n        return expectString ? v.ldterm.value : v.ldterm;\n      }\n    }\n\n    function tripleExpr (v) {\n      // tripleExpr = EachOf | OneOf | TripleConstraint | Inclusion ;\n      var elts = { \"EachOf\"   : { nary: true , expr: true , prop: \"expressions\" },\n                   \"OneOf\"    : { nary: true , expr: true , prop: \"expressions\" },\n                   \"Inclusion\": { nary: false, expr: false, prop: \"include\"     } };\n      var ret = findType(v, elts, tripleExpr);\n      if (ret !== Missed) {\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      }\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.TripleConstraint) {\n        var ret = {\n          type: \"TripleConstraint\",\n          predicate: v[SX.predicate][0].ldterm\n        };\n        [\"inverse\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.valueExpr in v)\n          ret.valueExpr = extend({id: v[SX.valueExpr][0].ldterm}, \"nested\" in v[SX.valueExpr][0] ? shapeExpr(v[SX.valueExpr][0].nested) : {});\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      } else {\n        throw Error(\"unknown tripleExpr type in \" + JSON.stringify(v));\n      }\n    }\n    function minMaxAnnotSemActs (v, ret) {\n      if (SX.min in v)\n        ret.min = parseInt(v[SX.min][0].ldterm.value);\n      if (SX.max in v) {\n        ret.max = parseInt(v[SX.max][0].ldterm.value);\n        if (isNaN(ret.max))\n          ret.max = UNBOUNDED;\n      }\n      if (SX.annotation in v)\n        ret.annotations = v[SX.annotation].map(e => {\n          return {\n            type: \"Annotation\",\n            predicate: e.nested[SX.predicate][0].ldterm,\n            object: e.nested[SX.object][0].ldterm\n          };\n        });\n      if (SX.semActs in v)\n        ret.semActs = v[SX.semActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      return ret;\n    }\n  },\n\n  valToSimple: function (val) {\n    var _ShExUtil = this;\n    function _join (list) {\n      return list.reduce((ret, elt) => {\n        Object.keys(elt).forEach(k => {\n          if (k in ret) {\n            ret[k] = Array.from(new Set(ret[k].concat(elt[k])));\n          } else {\n            ret[k] = elt[k];\n          }\n        });\n        return ret;\n      }, {});\n    }\n    if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        return val.solutions.reduce((ret, sln) => {\n          if (!(\"referenced\" in sln))\n            return {};\n          var toAdd = {};\n          if (chaseList(sln.referenced, toAdd)) {\n            return _join(ret, toAdd);\n          } else {\n            return _join(ret, _ShExUtil.valToSimple(sln.referenced));\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = { ldterm: member.object };\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.valToSimple(member.referenced);\n                if (t)\n                  newElt.nested = t;\n              }\n              toAdd = _join(toAdd, newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced.type === \"ShapeOrResults\" // heuristic for `nil  OR @<list>` idiom\n                          ? rest.referenced.solution\n                          : rest.referenced);\n            }\n          }\n        }, []);\n      } else {\n        return [];\n      }\n    } else if ([\"TripleConstraintSolutions\"].indexOf(val.type) !== -1) {\n      return {  };\n    } else if (val.type === \"NodeConstraintTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return thisNode;\n    } else if (val.type === \"ShapeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return \"solution\" in val ? _join([thisNode].concat(_ShExUtil.valToSimple(val.solution))) : thisNode;\n    } else if (val.type === \"Recursion\") {\n      return {  };\n    } else if (\"solutions\" in val) {\n      // [\"SolutionList\", \"EachOfSolutions\", \"OneOfSolutions\", \"ShapeAndResults\", \"ShapeOrResults\"].indexOf(val.type) !== -1\n      return _join(val.solutions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else if (\"expressions\" in val) {\n      return _join(val.expressions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  simpleToShapeMap: function (x) {\n    return Object.keys(x).reduce((ret, k) => {\n      x[k].forEach(s => {\n        ret.push({node: k, shape: s });\n      });\n      return ret;\n    }, []);\n  },\n\n  absolutizeShapeMap: function (parsed, base) {\n    return parsed.map(elt => {\n      return Object.assign(elt, {\n        node: ShExTerm.resolveRelativeIRI(base, elt.node),\n        shape: ShExTerm.resolveRelativeIRI(base, elt.shape)\n      });\n    });\n  },\n\n  errsToSimple: function (val, node, shape) {\n    var _ShExUtil = this;\n    if (val.type === \"FailureList\") {\n      return val.errors.reduce((ret, e) => {\n        return ret.concat(_ShExUtil.errsToSimple(e));\n      }, []);\n    } else if (val.type === \"Failure\") {\n      return [\"validating \" + val.node + \" as \" + val.shape + \":\"].concat(errorList(val.errors).reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length > 0 ? ret.concat([\"  OR\"]).concat(nested) : nested.map(s => \"  \" + s);\n      }, []));\n    } else if (val.type === \"TypeMismatch\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"validating \" + n3ify(val.triple.object) + \":\"].concat(nested);\n    } else if (val.type === \"ShapeAndFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeOrFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat(\" OR \" + (typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)));\n          }, []) :\n          \" OR \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeNotFailure\") {\n      return [\"Node \" + val.errors.node + \" expected to NOT pass \" + val.errors.shape];\n    } else if (val.type === \"ExcessTripleViolation\") {\n      return [\"validating \" + n3ify(val.triple.object) + \": exceeds cardinality\"];\n    } else if (val.type === \"ClosedShapeViolation\") {\n      return [\"ClosedShapeError: unexpected: {\"].concat(\n        val.unexpectedTriples.map(t => {\n          return \"  \" + t.subject + \" \" + t.predicate + \" \" + n3ify(t.object) + \" .\"\n        })\n      ).concat([\"}\"]);\n    } else if (val.type === \"NodeConstraintViolation\") {\n      var w = require(\"@shexjs/writer\")();\n      w._write(w._writeNodeConstraint(val.shapeExpr).join(\"\"));\n      var txt;\n      w.end((err, res) => {\n        txt = res;\n      });\n      return [\"NodeConstraintError: expected to match \" + txt];\n    } else if (val.type === \"MissingProperty\") {\n      return [\"Missing property: \" + val.property];\n    } else if (val.type === \"NegatedProperty\") {\n      return [\"Unexpected property: \" + val.property];\n    } else if (val.constructor === Array) {debugger;\n      return val.reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length ? ret.concat([\"AND\"]).concat(nested) : nested;\n      }, []);\n    } else if (val.type === \"SemActFailure\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"rejected by semantic action:\"].concat(nested);\n    } else if (val.type === \"SemActViolation\") {\n      return [val.message];\n    } else if (val.type === \"BooleanSemActFailure\") {\n      return [\"Failed evaluating \" + val.code + \" on context \" + JSON.stringify(val.ctx)];\n    } else {\n      debugger; // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    function errorList (errors) {\n      return errors.reduce(function (acc, e) {\n        var attrs = Object.keys(e);\n        return acc.concat(\n          (attrs.length === 1 && attrs[0] === \"errors\")\n            ? errorList(e.errors)\n            : e);\n      }, []);\n    }\n  },\n\n  resolveRelativeIRI: ShExTerm.resolveRelativeIRI,\n\n  resolvePrefixedIRI: function (prefixedIri, prefixes) {\n    var colon = prefixedIri.indexOf(\":\");\n    if (colon === -1)\n      return null;\n    var prefix = prefixes[prefixedIri.substr(0, colon)];\n    return prefix === undefined ? null : prefix + prefixedIri.substr(colon+1);\n  },\n\n  parsePassedNode: function (passedValue, meta, deflt, known, reportUnknown) {\n    if (passedValue === undefined || passedValue.length === 0)\n      return known && known(meta.base) ? meta.base : deflt ? deflt() : this.NotSupplied;\n    if (passedValue[0] === \"_\" && passedValue[1] === \":\")\n      return passedValue;\n    if (passedValue[0] === \"\\\"\") {\n      var m = passedValue.match(/^\"((?:[^\"\\\\]|\\\\\")*)\"(?:@(.+)|\\^\\^(?:<(.*)>|([^:]*):(.*)))?$/);\n      if (!m)\n        throw Error(\"malformed literal: \" + passedValue);\n      var lex = m[1], lang = m[2], rel = m[3], pre = m[4], local = m[5];\n      // Turn the literal into an N3.js atom.\n      var quoted = \"\\\"\"+lex+\"\\\"\";\n      if (lang !== undefined)\n        return quoted + \"@\" + lang;\n      if (pre !== undefined) {\n        if (!(pre in meta.prefixes))\n          throw Error(\"error parsing node \"+passedValue+\" no prefix for \\\"\" + pre + \"\\\"\");\n        return quoted + \"^^\" + meta.prefixes[pre] + local;\n      }\n      if (rel !== undefined)\n        return quoted + \"^^\" + ShExTerm.resolveRelativeIRI(meta.base, rel);\n      return quoted;\n    }\n    if (!meta)\n      return known(passedValue) ? passedValue : this.UnknownIRI;\n    var relIRI = passedValue[0] === \"<\" && passedValue[passedValue.length-1] === \">\";\n    if (relIRI)\n      passedValue = passedValue.substr(1, passedValue.length-2);\n    var t = ShExTerm.resolveRelativeIRI(meta.base || \"\", passedValue); // fall back to base-less mode\n    if (known(t))\n      return t;\n    if (!relIRI) {\n      var t2 = this.resolvePrefixedIRI(passedValue, meta.prefixes);\n      if (t2 !== null && known(t2))\n        return t2;\n    }\n    return reportUnknown ? reportUnknown(t) : this.UnknownIRI;\n  },\n\n  executeQueryPromise: function (query, endpoint) {\n    var rows;\n\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    return fetch(queryURL, {\n      headers: {\n        'Accept': 'application/sparql-results+json'\n      }}).then(resp => resp.json()).then(t => {\n        var selects = t.head.vars;\n        return t.results.bindings.map(row => {\n          return selects.map(sel => {\n            var elt = row[sel];\n            switch (elt.type) {\n            case \"uri\": return elt.value;\n            case \"bnode\": return \"_:\" + elt.value;\n            case \"literal\":\n              var datatype = elt.datatype;\n              var lang = elt[\"xml:lang\"];\n              return \"\\\"\" + elt.value + \"\\\"\" + (\n                datatype ? \"^^\" + datatype :\n                  lang ? \"@\" + lang :\n                  \"\");\n            default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n            }\n            return row[sel];\n          })\n        });\n      })// .then(x => new Promise(resolve => setTimeout(() => resolve(x), 1000)));\n  },\n\n  executeQuery: function (query, endpoint) {\n    var rows, t, j;\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    if (require('sync-request')) {\n      var request = require('sync-request');\n      var res = request('GET', queryURL, {\n        headers: {\n          'Accept': 'application/sparql-results+json'\n        },\n      });\n      t = res.getBody().toString('utf-8');\n    } else {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", queryURL, false);\n    xhr.setRequestHeader('Accept', 'application/sparql-results+json');\n    xhr.send();\n    // var selectsBlock = query.match(/SELECT\\s*(.*?)\\s*{/)[1];\n    // var selects = selectsBlock.match(/\\?[^\\s?]+/g);\n    t = xhr.responseText;\n    }\n    var j = JSON.parse(t);\n    var selects = j.head.vars;\n    return j.results.bindings.map(row => {\n      return selects.map(sel => {\n        var elt = row[sel];\n        switch (elt.type) {\n        case \"uri\": return elt.value;\n        case \"bnode\": return \"_:\" + elt.value;\n        case \"literal\":\n          var datatype = elt.datatype;\n          var lang = elt[\"xml:lang\"];\n          return \"\\\"\" + elt.value + \"\\\"\" + (\n            lang ? \"@\" + lang :\n              datatype ? \"^^\" + datatype :\n              \"\");\n        default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n        }\n        return row[sel];\n      })\n    });\n\n/* TO ADD? XML results format parsed with jquery:\n        $(data).find(\"sparql > results > result\").\n          each((_, row) => {\n            rows.push($(row).find(\"binding > *:nth-child(1)\").\n              map((idx, elt) => {\n                elt = $(elt);\n                var text = elt.text();\n                switch (elt.prop(\"tagName\")) {\n                case \"uri\": return text;\n                case \"bnode\": return \"_:\" + text;\n                case \"literal\":\n                  var datatype = elt.attr(\"datatype\");\n                  var lang = elt.attr(\"xml:lang\");\n                  return \"\\\"\" + text + \"\\\"\" + (\n                    datatype ? \"^^\" + datatype :\n                    lang ? \"@\" + lang :\n                      \"\");\n                default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n                }\n              }).get());\n          });\n*/\n  },\n\n  makeN3DB: function (db, queryTracker) {\n\n    function getSubjects () { return db.getSubjects().map(ShExTerm.internalTerm); }\n    function getPredicates () { return db.getPredicates().map(ShExTerm.internalTerm); }\n    function getObjects () { return db.getObjects().map(ShExTerm.internalTerm); }\n    function getQuads () { return db.getQuads.apply(db, arguments).map(ShExTerm.internalTriple); }\n\n    function getNeighborhood (point, shapeLabel/*, shape */) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = db.getQuads(point, null, null, null).map(ShExTerm.internalTriple);\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = db.getQuads(null, null, point, null).map(ShExTerm.internalTriple);\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      // size: db.size,\n      getNeighborhood: getNeighborhood,\n      getSubjects: getSubjects,\n      getPredicates: getPredicates,\n      getObjects: getObjects,\n      getQuads: getQuads,\n      get size() { return db.size; },\n      // getQuads: function (s, p, o, graph, shapeLabel) {\n      //   // console.log(Error(s + p + o).stack)\n      //   if (queryTracker)\n      //     queryTracker.start(!!s, s ? s : o, shapeLabel);\n      //   var quads = db.getQuads(s, p, o, graph)\n      //   if (queryTracker)\n      //     queryTracker.end(quads, new Date() - startTime);\n      //   return quads;\n      // }\n    }\n  },\n  /** emulate N3Store().getQuads() with additional parm.\n   */\n  makeQueryDB: function (endpoint, queryTracker) {\n    var _ShExUtil = this;\n    // Need to inspect the schema to calculate the relevant neighborhood.\n    var schemaIndex = null\n\n    function getQuads(s, p, o, g) {\n      return mapQueryToTriples(\"SELECT \" + [\n        (s?\"\":\"?s\"), (p?\"\":\"?p\"), (o?\"\":\"?o\"),\n        \"{\",\n        (s?s:\"?s\"), (p?p:\"?s\"), (o?o:\"?s\"),\n        \"}\"].join(\" \"), s, o)\n    }\n\n    function mapQueryToTriples (query, s, o) {\n      var rows = _ShExUtil.executeQuery(query, endpoint);\n      var triples = rows.map(row =>  {\n        return s ? {\n          subject: s,\n          predicate: row[0],\n          object: row[1]\n        } : {\n          subject: row[0],\n          predicate: row[1],\n          object: o\n        };\n      });\n      return triples;\n    }\n\n    function getTripleConstraints (tripleExpr) {\n      var visitor = _ShExUtil.Visitor();\n      var ret = {\n        out: [],\n        inc: []\n      };\n      visitor.visitTripleConstraint = function (expr) {\n        ret[expr.inverse ? \"inc\" : \"out\"].push(expr);\n        return expr;\n      };\n\n      visitor.visitInclusion = function (inclusion) {\n        return visitor.visitExpression(schemaIndex.tripleExprs[inclusion]);\n      }\n\n      if (tripleExpr)\n        visitor.visitExpression(tripleExpr);\n      return ret;\n    }\n\n    function getNeighborhood (point, shapeLabel, shape) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      var tcs = getTripleConstraints(shape.expression);\n      var pz = tcs.out.map(t => t.predicate);\n      pz = pz.filter((p, idx) => pz.lastIndexOf(p) === idx);\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = (tcs.out.length > 0 || shape.closed)\n          ? mapQueryToTriples(\n            shape.closed\n              ? `SELECT ?p ?o { <${point}> ?p ?o }`\n              : \"SELECT ?p ?o {\\n\" +\n              pz.map(\n                p => `  {<${point}> <${p}> ?o BIND(<${p}> AS ?p)}`\n              ).join(\" UNION\\n\") +\n              \"\\n}\",\n            point, null\n          )\n          : [];\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = tcs.inc.length > 0\n          ? mapQueryToTriples(`SELECT ?s ?p { ?s ?p <${point}> }`, null, point)\n          : []\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return  {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      getNeighborhood: getNeighborhood,\n      getQuads: getQuads,\n      getSubjects: function () { return [\"!Query DB can't index subjects\"] },\n      getPredicates: function () { return [\"!Query DB can't index predicates\"] },\n      getObjects: function () { return [\"!Query DB can't index objects\"] },\n      get size() { return undefined; },\n      setSchema: function (schema) { schemaIndex = schema._index || _ShExUtil.index(schema) },\n    };\n  },\n\n  NotSupplied: \"-- not supplied --\", UnknownIRI: \"-- not found --\",\n\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  unescapeText: function (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  },\n\n};\n\nfunction n3ify (ldterm) {\n  if (typeof ldterm !== \"object\")\n    return ldterm;\n  var ret = \"\\\"\" + ldterm.value + \"\\\"\";\n  if (\"language\" in ldterm)\n    return ret + \"@\" + ldterm.language;\n  if (\"type\" in ldterm)\n    return ret + \"^^\" + ldterm.type;\n  return ret;\n}\n\n// Add the ShExUtil functions to the given object or its prototype\nfunction AddShExUtil(parent, toPrototype) {\n  for (var name in ShExUtil)\n    if (!toPrototype)\n      parent[name] = ShExUtil[name];\n    else\n      parent.prototype[name] = ApplyToThis(ShExUtil[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\nreturn AddShExUtil(AddShExUtil);\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExUtilCjsModule; // node environment\n"
    },
    {
      "id": 5,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/utils.js",
      "name": "../shex-util/node_modules/qs/lib/utils.js",
      "index": 18,
      "index2": 12,
      "size": 6636,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
      "issuerId": 29,
      "issuerName": "../shex-util/node_modules/qs/lib/stringify.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "profile": {
            "factory": 132,
            "building": 6
          }
        },
        {
          "id": 28,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "name": "../shex-util/node_modules/qs/lib/index.js",
          "profile": {
            "factory": 50,
            "building": 3
          }
        },
        {
          "id": 29,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "name": "../shex-util/node_modules/qs/lib/stringify.js",
          "profile": {
            "factory": 7,
            "building": 7,
            "dependencies": 3
          }
        }
      ],
      "profile": {
        "factory": 7,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/formats.js",
          "module": "../shex-util/node_modules/qs/lib/formats.js",
          "moduleName": "../shex-util/node_modules/qs/lib/formats.js",
          "type": "cjs require",
          "userRequest": "./utils",
          "loc": "6:11-29"
        },
        {
          "moduleId": 29,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "module": "../shex-util/node_modules/qs/lib/stringify.js",
          "moduleName": "../shex-util/node_modules/qs/lib/stringify.js",
          "type": "cjs require",
          "userRequest": "./utils",
          "loc": "3:12-30"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/parse.js",
          "module": "../shex-util/node_modules/qs/lib/parse.js",
          "moduleName": "../shex-util/node_modules/qs/lib/parse.js",
          "type": "cjs require",
          "userRequest": "./utils",
          "loc": "3:12-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n"
    },
    {
      "id": 6,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "index": 30,
      "index2": 30,
      "size": 25347,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "minimatch",
          "loc": "45:16-36"
        },
        {
          "moduleId": 19,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "minimatch",
          "loc": "16:16-36"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "minimatch",
          "loc": "6:16-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"
    },
    {
      "id": 7,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
      "name": "./node_modules/util/util.js",
      "index": 39,
      "index2": 37,
      "size": 19383,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "59:11-26"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "module": "./node_modules/assert/assert.js",
          "moduleName": "./node_modules/assert/assert.js",
          "type": "cjs require",
          "userRequest": "util/",
          "loc": "73:11-27"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "9:11-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"
    },
    {
      "id": 8,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
      "index": 42,
      "index2": 39,
      "size": 611,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "path-is-absolute",
          "loc": "51:17-44"
        },
        {
          "moduleId": 19,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "path-is-absolute",
          "loc": "17:17-44"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "path-is-absolute",
          "loc": "12:17-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"
    },
    {
      "id": 9,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapSymbols.js",
      "name": "../shape-map/lib/ShapeMapSymbols.js",
      "index": 2,
      "index2": 0,
      "size": 451,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
      "issuerId": 23,
      "issuerName": "../shape-map/shape-map.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 23,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 163,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "module": "../shape-map/shape-map.js",
          "moduleName": "../shape-map/shape-map.js",
          "type": "cjs require",
          "userRequest": "./lib/ShapeMapSymbols",
          "loc": "7:18-50"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "./ShapeMapSymbols",
          "loc": "417:17-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * Status: Early implementation\n *\n * TODO:\n *   testing.\n */\n\nvar ShapeMapSymbols = (function () {\n  return {\n    focus: { term: \"FOCUS\" },\n    start: { term: \"START\" },\n    wildcard: { term: \"WILDCARD\" },\n  }\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapSymbols;\n"
    },
    {
      "id": 10,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/module.js",
      "name": "(webpack)/buildin/module.js",
      "index": 6,
      "index2": 2,
      "size": 497,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 35,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 15,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 35,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 10,
            "building": 166,
            "dependencies": 3
          }
        }
      ],
      "profile": {
        "factory": 36,
        "building": 59,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 25,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "module",
          "loc": "1:0-69"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "module",
          "loc": "1:0-69"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
    },
    {
      "id": 11,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-visitor/shex-visitor.js",
      "name": "../shex-visitor/shex-visitor.js",
      "index": 11,
      "index2": 9,
      "size": 13166,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
      "issuerId": 32,
      "issuerName": "../shex-validator/shex-validator.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 32,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "name": "../shex-validator/shex-validator.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 366,
        "building": 21,
        "dependencies": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "module": "../shex-util/shex-util.js",
          "moduleName": "../shex-util/shex-util.js",
          "type": "cjs require",
          "userRequest": "@shexjs/visitor",
          "loc": "5:16-42"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "module": "../shex-validator/shex-validator.js",
          "moduleName": "../shex-validator/shex-validator.js",
          "type": "cjs require",
          "userRequest": "@shexjs/visitor",
          "loc": "27:18-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\nfunction ShExVisitor () {\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\n  // function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n  var _ShExUtil = this;\n  function visitMap (map, val) {\n    var ret = {};\n    Object.keys(map).forEach(function (item) {\n      ret[item] = val(map[item]);\n    });\n    return ret;\n  }\n  var r = {\n    runtimeError: function (e) {\n      throw e;\n    },\n\n    visitSchema: function (schema) {\n      var ret = { type: \"Schema\" };\n      _expect(schema, \"type\", \"Schema\");\n      this._maybeSet(schema, ret, \"Schema\",\n                     [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                     [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\"]\n                    );\n      return ret;\n    },\n\n    visitPrefixes: function (prefixes) {\n      return prefixes === undefined ?\n        undefined :\n        visitMap(prefixes, function (val) {\n          return val;\n        });\n    },\n\n    visitIRI: function (i) {\n      return i;\n    },\n\n    visitImports: function (imports) {\n      var _Visitor = this;\n      return imports.map(function (imp) {\n        return _Visitor.visitIRI(imp);\n      });\n    },\n\n    visitStartActs: function (startActs) {\n      var _Visitor = this;\n      return startActs === undefined ?\n        undefined :\n        startActs.map(function (act) {\n          return _Visitor.visitSemAct(act);\n        });\n    },\n    visitSemActs: function (semActs) {\n      var _Visitor = this;\n      if (semActs === undefined)\n        return undefined;\n      var ret = []\n      Object.keys(semActs).forEach(function (label) {\n        ret.push(_Visitor.visitSemAct(semActs[label], label));\n      });\n      return ret;\n    },\n    visitSemAct: function (semAct, label) {\n      var ret = { type: \"SemAct\" };\n      _expect(semAct, \"type\", \"SemAct\");\n\n      this._maybeSet(semAct, ret, \"SemAct\",\n                     [\"name\", \"code\"]);\n      return ret;\n    },\n\n    visitShapes: function (shapes) {\n      var _Visitor = this;\n      if (shapes === undefined)\n        return undefined;\n      return shapes.map(\n        shapeExpr =>\n          _Visitor.visitShapeExpr(shapeExpr)\n      );\n    },\n\n    visitProductions999: function (productions) { // !! DELETE\n      var _Visitor = this;\n      if (productions === undefined)\n        return undefined;\n      var ret = {}\n      Object.keys(productions).forEach(function (label) {\n        ret[label] = _Visitor.visitExpression(productions[label], label);\n      });\n      return ret;\n    },\n\n    visitShapeExpr: function (expr, label) {\n      if (isShapeRef(expr))\n        return this.visitShapeRef(expr)\n      var r =\n          expr.type === \"Shape\" ? this.visitShape(expr, label) :\n          expr.type === \"NodeConstraint\" ? this.visitNodeConstraint(expr, label) :\n          expr.type === \"ShapeAnd\" ? this.visitShapeAnd(expr, label) :\n          expr.type === \"ShapeOr\" ? this.visitShapeOr(expr, label) :\n          expr.type === \"ShapeNot\" ? this.visitShapeNot(expr, label) :\n          expr.type === \"ShapeExternal\" ? this.visitShapeExternal(expr) :\n          null;// if (expr.type === \"ShapeRef\") r = 0; // console.warn(\"visitShapeExpr:\", r);\n      if (r === null)\n        throw Error(\"unexpected shapeExpr type: \" + expr.type);\n      else\n        return r;\n    },\n\n    // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n    _visitShapeGroup: function (expr, label) {\n      this._testUnknownAttributes(expr, [\"id\", \"shapeExprs\"], expr.type, this.visitShapeNot)\n      var _Visitor = this;\n      var r = { type: expr.type };\n      if (\"id\" in expr)\n        r.id = expr.id;\n      r.shapeExprs = expr.shapeExprs.map(function (nested) {\n        return _Visitor.visitShapeExpr(nested, label);\n      });\n      return r;\n    },\n\n    // _visitShapeNot: visit negated shape\n    visitShapeNot: function (expr, label) {\n      this._testUnknownAttributes(expr, [\"id\", \"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n      var r = { type: expr.type };\n      if (\"id\" in expr)\n        r.id = expr.id;\n      r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, label);\n      return r;\n    },\n\n    // ### `visitNodeConstraint` deep-copies the structure of a shape\n    visitShape: function (shape, label) {\n      var ret = { type: \"Shape\" };\n      _expect(shape, \"type\", \"Shape\");\n\n      this._maybeSet(shape, ret, \"Shape\",\n                     [ \"id\",\n                       // \"virtual\", \"inherit\", -- futureWork\n                       \"closed\",\n                       \"expression\", \"extra\", \"semActs\", \"annotations\"]);\n      return ret;\n    },\n\n    // ### `visitNodeConstraint` deep-copies the structure of a shape\n    visitNodeConstraint: function (shape, label) {\n      var ret = { type: \"NodeConstraint\" };\n      _expect(shape, \"type\", \"NodeConstraint\");\n\n      this._maybeSet(shape, ret, \"NodeConstraint\",\n                     [ \"id\",\n                       // \"virtual\", \"inherit\", -- futureWork\n                       \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                       \"reference\", \"minlength\", \"maxlength\",\n                       \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                       \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"]);\n      return ret;\n    },\n\n    visitShapeRef: function (reference) {\n      if (typeof reference !== \"string\") {\n        let ex = Exception(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n        console.warn(ex);\n        throw ex;\n      }\n      return reference;\n    },\n\n    visitShapeExternal: function (expr) {\n      this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n      return Object.assign(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n    },\n\n    // _visitGroup: visit a grouping expression (someOf or eachOf)\n    _visitGroup: function (expr, type) {\n      var _Visitor = this;\n      var r = Object.assign(\n        // pre-declare an id so it sorts to the top\n        \"id\" in expr ? { id: null } : { },\n        { type: expr.type }\n      );\n      r.expressions = expr.expressions.map(function (nested) {\n        return _Visitor.visitExpression(nested);\n      });\n      return this._maybeSet(expr, r, \"expr\",\n                            [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"]);\n    },\n\n    visitTripleConstraint: function (expr) {\n      return this._maybeSet(expr,\n                            Object.assign(\n                              // pre-declare an id so it sorts to the top\n                              \"id\" in expr ? { id: null } : { },\n                              { type: \"TripleConstraint\" }\n                            ),\n                            \"TripleConstraint\",\n                            [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                             \"min\", \"max\", \"annotations\", \"semActs\"])\n    },\n\n    visitExpression: function (expr) {\n      if (typeof expr === \"string\")\n        return this.visitInclusion(expr);\n      var r = expr.type === \"TripleConstraint\" ? this.visitTripleConstraint(expr) :\n          expr.type === \"OneOf\" ? this.visitOneOf(expr) :\n          expr.type === \"EachOf\" ? this.visitEachOf(expr) :\n          null;\n      if (r === null)\n        throw Error(\"unexpected expression type: \" + expr.type);\n      else\n        return r;\n    },\n\n    visitValues: function (values) {\n      var _Visitor = this;\n      return values.map(function (t) {\n        return isTerm(t) || t.type === \"Language\" ?\n          t :\n          _Visitor.visitStemRange(t);\n      });\n    },\n\n    visitStemRange: function (t) {\n      var _Visitor = this; // console.log(Error(t.type).stack);\n      // _expect(t, \"type\", \"IriStemRange\");\n      if (!(\"type\" in t))\n        _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n      var stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n      if (stemRangeTypes.indexOf(t.type) === -1)\n        _Visitor.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n      var stem;\n      if (isTerm(t)) {\n        _expect(t.stem, \"type\", \"Wildcard\");\n        stem = { type: t.type, stem: { type: \"Wildcard\" } };\n      } else {\n        stem = { type: t.type, stem: t.stem };\n      }\n      if (t.exclusions) {\n        stem.exclusions = t.exclusions.map(function (c) {\n          return _Visitor.visitExclusion(c);\n        });\n      }\n      return stem;\n    },\n\n    visitExclusion: function (c) {\n      if (!isTerm(c)) {\n        // _expect(c, \"type\", \"IriStem\");\n        if (!(\"type\" in c))\n          _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n        var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n        if (stemTypes.indexOf(c.type) === -1)\n          _Visitor.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n        return { type: c.type, stem: c.stem };\n      } else {\n        return c;\n      }\n    },\n\n    visitInclusion: function (inclusion) {\n      if (typeof inclusion !== \"string\") {\n        let ex = Exception(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n        console.warn(ex);\n        throw ex;\n      }\n      return inclusion;\n    },\n\n    _maybeSet: function (obj, ret, context, members, ignore) {\n      var _Visitor = this;\n      this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n      members.forEach(function (member) {\n        var methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n        if (member in obj) {\n          var f = _Visitor[methodName];\n          if (typeof f !== \"function\") {\n            throw Error(methodName + \" not found in Visitor\");\n          }\n          var t = f.call(_Visitor, obj[member]);\n          if (t !== undefined) {\n            ret[member] = t;\n          }\n        }\n      });\n      return ret;\n    },\n    _visitValue: function (v) {\n      return v;\n    },\n    _visitList: function (l) {\n      return l.slice();\n    },\n    _testUnknownAttributes: function (obj, expected, context, captureFrame) {\n      var unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n        return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n      }, []);\n      if (unknownMembers.length > 0) {\n        var e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                      unknownMembers.map(function (p) {\n                        return \"\\\"\" + p + \"\\\"\";\n                      }).join(\",\") +\n                      \" in \" + context + \": \" + JSON.stringify(obj));\n        Error.captureStackTrace(e, captureFrame);\n        throw e;\n      }\n    }\n\n  };\n  r.visitBase = r.visitStart = r.visitVirtual = r.visitClosed = r[\"visit@context\"] = r._visitValue;\n  r.visitInherit = r.visitExtra = r.visitAnnotations = r._visitList;\n  r.visitInverse = r.visitPredicate = r._visitValue;\n  r.visitName = r.visitId = r.visitCode = r.visitMin = r.visitMax = r._visitValue;\n\n  r.visitType = r.visitNodeKind = r.visitDatatype = r.visitPattern = r.visitFlags = r.visitLength = r.visitMinlength = r.visitMaxlength = r.visitMininclusive = r.visitMinexclusive = r.visitMaxinclusive = r.visitMaxexclusive = r.visitTotaldigits = r.visitFractiondigits = r._visitValue;\n  r.visitOneOf = r.visitEachOf = r._visitGroup;\n  r.visitShapeAnd = r.visitShapeOr = r._visitShapeGroup;\n  r.visitInclude = r._visitValue;\n  r.visitValueExpr = r.visitShapeExpr;\n  return r;\n\n  // Expect property p with value v in object o\n  function _expect (o, p, v) {\n    if (!(p in o))\n      this._error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p);\n    if (arguments.length > 2 && o[p] !== v)\n      this._error(\"expected \"+o[o]+\" to equal .\"+v);\n  }\n\n  function _error (str) {\n    throw new Error(str);\n  }\n}\n\n// The ShEx Vistor is here to minimize deps for ShExValidator.\n/** create indexes for schema\n */\nShExVisitor.index = function (schema) {\n  let index = {\n    shapeExprs: {},\n    tripleExprs: {}\n  };\n  let v = ShExVisitor();\n\n  let oldVisitExpression = v.visitExpression;\n  v.visitExpression = function (expression) {\n    if (typeof expression === \"object\" && \"id\" in expression)\n      index.tripleExprs[expression.id] = expression;\n    return oldVisitExpression.call(v, expression);\n  };\n\n  let oldVisitShapeExpr = v.visitShapeExpr;\n  v.visitShapeExpr = v.visitValueExpr = function (shapeExpr, label) {\n    if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n      index.shapeExprs[shapeExpr.id] = shapeExpr;\n    return oldVisitShapeExpr.call(v, shapeExpr, label);\n  };\n\n  v.visitSchema(schema);\n  return index;\n}\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExVisitor;\n\n"
    },
    {
      "id": 12,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-writer/shex-writer.js",
      "name": "../shex-writer/shex-writer.js",
      "index": 13,
      "index2": 11,
      "size": 22306,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "module": "../shex-util/shex-util.js",
          "moduleName": "../shex-util/shex-util.js",
          "type": "cjs require",
          "userRequest": "@shexjs/writer",
          "loc": "1586:14-39"
        },
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/writer",
          "loc": "7:20-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "// **ShExWriter** writes ShEx documents.\n\nconst ShExWriterCjsModule = (function () {\nvar UNBOUNDED = -1;\n\n// Matches a literal as represented in memory by the ShEx library\nvar ShExLiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar ESCAPE_1 = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    ESCAPE_g = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    ESCAPE_replacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '/': '\\\\/', '\\t': '\\\\t',\n                            '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\nvar nodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\nvar nonLitNodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\n\n// ## Constructor\nfunction ShExWriter (outputStream, options) {\n  if (!(this instanceof ShExWriter))\n    return new ShExWriter(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._prefixIRIs = Object.create(null);\n  options.prefixes && this.addPrefixes(options.prefixes);\n\n  this._error = options.error || _throwError;\n  this.forceParens = !options.simplifyParentheses; // default to false\n  this._expect = options.lax ? noop : expect;\n}\n\nShExWriter.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n  // ### `_writeSchema` writes the shape to the output stream\n  _writeSchema: function (schema, done) {\n    var _ShExWriter = this;\n    this._expect(schema, \"type\", \"Schema\");\n    _ShExWriter.addPrefixes(schema.prefixes);\n    if (schema.base)\n      _ShExWriter._write(\"BASE \" + this._encodeIriOrBlankNode(schema.base) + \"\\n\");\n\n    if (schema.imports)\n      schema.imports.forEach(function (imp) {\n        _ShExWriter._write(\"IMPORT \" + _ShExWriter._encodeIriOrBlankNode(imp) + \"\\n\");\n      });\n    if (schema.startActs)\n      schema.startActs.forEach(function (act) {\n        _ShExWriter._expect(act, \"type\", \"SemAct\");\n        _ShExWriter._write(\" %\"+\n                           _ShExWriter._encodePredicate(act.name)+\n                           (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n      });\n    if (schema.start)\n      _ShExWriter._write(\"start = \" + _ShExWriter._writeShapeExpr(schema.start, done, true, 0).join('') + \"\\n\")\n    if (\"shapes\" in schema)\n      schema.shapes.forEach(function (shapeExpr) {\n        _ShExWriter._write(\n          _ShExWriter._encodeShapeName(shapeExpr.id, false) +\n            \" \" +\n            _ShExWriter._writeShapeExpr(shapeExpr, done, true, 0).join(\"\")+\"\\n\",\n          done\n        );\n      })\n  },\n\n  _writeShapeExpr: function (shapeExpr, done, forceBraces, parentPrec) {\n    var _ShExWriter = this;\n    var pieces = [];\n    if (typeof shapeExpr === \"string\") // ShapeRef\n      pieces.push(\"@\", _ShExWriter._encodeShapeName(shapeExpr));\n    // !!! []s for precedence!\n    else if (shapeExpr.type === \"ShapeExternal\")\n      pieces.push(\"EXTERNAL\");\n    else if (shapeExpr.type === \"ShapeAnd\") {\n      if (parentPrec >= 3)\n        pieces.push(\"(\");\n      var lastAndElided = false;\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0) { // && !!! grammar rules too weird here\n          /*\n            shapeAtom:\n                  nonLitNodeConstraint shapeOrRef?\n                | shapeDecl nonLitNodeConstraint?\n\n            nonLitInlineNodeConstraint:\n                  nonLiteralKind stringFacet*\n          */\n          function nonLitNodeConstraint (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type !== \"NodeConstraint\"\n              || (\"nodeKind\" in c && c.nodeKind === \"literal\")\n              || \"datatype\" in c\n              || \"values\" in c\n              ? false\n              : true;\n          }\n\n          function shapeOrRef (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\" || c.type === \"ShapeRef\";\n          }\n\n          function shapeDecl (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\";\n          }\n\n          let elideAnd = !lastAndElided\n              && (nonLitNodeConstraint(ord-1) && shapeOrRef(ord)\n                  || shapeDecl(ord-1) && nonLitNodeConstraint(ord))\n          if (!elideAnd) {\n            pieces.push(\" AND \");\n          }\n          lastAndElided = elideAnd;\n        }\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, false, 3));\n      });\n      if (parentPrec >= 3)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      if (parentPrec >= 2)\n        pieces.push(\"(\");\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0)\n          pieces.push(\" OR \");\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, forceBraces, 2));\n      });\n      if (parentPrec >= 2)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      if (parentPrec >= 4)\n        pieces.push(\"(\");\n      pieces.push(\"NOT \");\n      pieces = pieces.concat(_ShExWriter._writeShapeExpr(shapeExpr.shapeExpr, done, forceBraces, 4));\n      if (parentPrec >= 4)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"Shape\") {\n      pieces = pieces.concat(_ShExWriter._writeShape(shapeExpr, done, forceBraces));\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      pieces = pieces.concat(_ShExWriter._writeNodeConstraint(shapeExpr, done, forceBraces));\n    } else\n      throw Error(\"expected Shape{,And,Or,Ref} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n    return pieces;\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeShape: function (shape, done, forceBraces) {\n    var _ShExWriter = this;\n    try {\n      var pieces = []; // guessing push/join is faster than concat\n      this._expect(shape, \"type\", \"Shape\");\n\n      if (shape.closed) pieces.push(\"CLOSED \");\n\n      // if (shape.inherit && shape.inherit.length > 0) { futureWork\n      //   pieces.push(\"&\");\n      //   shape.inherit.forEach(function (i, ord) {\n      //     if (ord)\n      //       pieces.push(\" \")\n      //     pieces.push(_ShExWriter._encodeShapeName(i, ord > 0));\n      //   });\n      //   pieces.push(\" \");\n      // }\n\n      if (shape.extra && shape.extra.length > 0) {\n        pieces.push(\"EXTRA \");\n        shape.extra.forEach(function (i, ord) {\n          pieces.push(_ShExWriter._encodeShapeName(i, false)+\" \");\n        });\n        pieces.push(\" \");\n      }\n      var empties = [\"values\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\"];\n      pieces.push(\"{\\n\");\n\n      function _writeShapeActions (semActs) {\n        if (!semActs)\n          return;\n\n        semActs.forEach(function (act) {\n          _ShExWriter._expect(act, \"type\", \"SemAct\");\n          pieces.push(\" %\",\n                      _ShExWriter._encodePredicate(act.name),\n                      (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n        });\n      }\n\n      function _writeCardinality (min, max) {\n        if      (min === 0 && max === 1)         pieces.push(\"?\");\n        else if (min === 0 && max === UNBOUNDED) pieces.push(\"*\");\n        else if (min === undefined && max === undefined)                         ;\n        else if (min === 1 && max === UNBOUNDED) pieces.push(\"+\");\n        else\n          pieces.push(\"{\", min, \",\", (max === UNBOUNDED ? \"*\" : max), \"}\"); // by coincidence, both use the same character.\n      }\n\n      function _writeExpression (expr, indent, parentPrecedence) {\n        function _writeExpressionActions (semActs) {\n          if (semActs) {\n\n            semActs.forEach(function (act) {\n              _ShExWriter._expect(act, \"type\", \"SemAct\");\n              pieces.push(\"\\n\"+indent+\"   %\");\n              pieces.push(_ShExWriter._encodeValue(act.name));\n              if (\"code\" in act)\n                pieces.push(\"{\"+escapeCode(act.code)+\"%\"+\"}\");\n              else\n                pieces.push(\"%\");\n            });\n          }\n        }\n\n        function _exprGroup (exprs, separator, precedence, forceParens) {\n          var needsParens = precedence < parentPrecedence || forceParens;\n          if (needsParens) {\n            pieces.push(\"(\");\n          }\n          exprs.forEach(function (nested, ord) {\n            _writeExpression(nested, indent+\"  \", precedence)\n            if (ord < exprs.length - 1)\n              pieces.push(separator);\n          });\n          if (needsParens) {\n            pieces.push(\")\");\n          }\n        }\n\n        if (typeof expr === \"string\") {\n          pieces.push(\"&\");\n          pieces.push(_ShExWriter._encodeShapeName(expr, false));\n        } else {\n\n        if (\"id\" in expr) {\n          pieces.push(\"$\");\n          pieces.push(_ShExWriter._encodeIriOrBlankNode(expr.id, true));\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          if (expr.inverse)\n            pieces.push(\"^\");\n          if (expr.negated)\n            pieces.push(\"!\");\n          pieces.push(indent,\n                      _ShExWriter._encodePredicate(expr.predicate),\n                      \" \");\n\n          if (\"valueExpr\" in expr)\n            pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr.valueExpr, done, true, 0));\n          else\n            pieces.push(\". \");\n\n          _writeCardinality(expr.min, expr.max);\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \"\\n\"+indent+\"| \", 1, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \";\\n\"+indent, 2, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else throw Error(\"unexpected expr type: \" + expr.type);\n        }\n      }\n\n      if (shape.expression) // t: 0, 0Inherit1\n        _writeExpression(shape.expression, \"  \", 0);\n      pieces.push(\"\\n}\");\n      _writeShapeActions(shape.semActs);\n      _ShExWriter._annotations(pieces, shape.annotations, \"  \");\n\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeNodeConstraint: function (v, done) {\n    var _ShExWriter = this;\n    try {\n      _ShExWriter._expect(v, \"type\", \"NodeConstraint\");\n\n      var pieces = [];\n      if (v.nodeKind in nodeKinds)       pieces.push(nodeKinds[v.nodeKind], \" \");\n      else if (v.nodeKind !== undefined) _ShExWriter._error(\"unexpected nodeKind: \" + v.nodeKind); // !!!!\n\n      this._fillNodeConstraint(pieces, v, done);\n      this._annotations(pieces, v.annotations, \"  \");\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n\n  },\n\n  _annotations: function (pieces, annotations, indent) {\n    var _ShExWriter = this;\n    if (annotations) {\n      annotations.forEach(function (a) {\n        _ShExWriter._expect(a, \"type\", \"Annotation\");\n        pieces.push(\"//\\n\"+indent+\"   \");\n        pieces.push(_ShExWriter._encodeValue(a.predicate));\n        pieces.push(\" \");\n        pieces.push(_ShExWriter._encodeValue(a.object));\n      });\n    }\n  },\n\n  _fillNodeConstraint: function (pieces, v, done) {\n    var _ShExWriter = this;\n    if (v.datatype  && v.values  ) _ShExWriter._error(\"found both datatype and values in \"   +expr);\n    if (v.datatype) {\n      pieces.push(_ShExWriter._encodeShapeName(v.datatype));\n    }\n\n    if (v.values) {\n      pieces.push(\"[\");\n\n      v.values.forEach(function (t, ord) {\n        if (ord > 0)\n          pieces.push(\" \");\n\n        if (!isTerm(t)) {\n//          expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                runtimeError(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\");\n          var stemRangeTypes = [\"Language\", \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                runtimeError(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n          if (t.type === \"Language\") {\n            pieces.push(\"@\" + t.languageTag);\n          } else if (!isTerm(t.stem)) {\n            expect(t.stem, \"type\", \"Wildcard\");\n            pieces.push(\".\");\n          } else {\n            pieces.push(langOrLiteral(t, t.stem) + \"~\");\n          }\n          if (t.exclusions) {\n            t.exclusions.forEach(function (c) {\n              pieces.push(\" - \");\n              if (!isTerm(c)) {\n//                expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                pieces.push(langOrLiteral(t, c.stem) + \"~\");\n              } else {\n                pieces.push(langOrLiteral(t, c));\n              }\n            });\n          }\n          function langOrLiteral (t, c) {\n            return [\"LanguageStem\", \"LanguageStemRange\"].indexOf(t.type) !== -1 ? \"@\" + c :\n              [\"LiteralStem\", \"LiteralStemRange\"].indexOf(t.type) !== -1 ? '\"' + c.replace(ESCAPE_g, c) + '\"' :\n              _ShExWriter._encodeValue(c)\n          }\n        } else {\n          pieces.push(_ShExWriter._encodeValue(t));\n        }\n      });\n\n      pieces.push(\"]\");\n    }\n\n    if ('pattern' in v) {\n      var pattern = v.pattern.\n          replace(/\\//g, \"\\\\/\");\n      // if (ESCAPE_1.test(pattern))\n      //   pattern = pattern.replace(ESCAPE_g, characterReplacer);\n      var flags = 'flags' in v ? v.flags : \"\";\n      pieces.push(\"/\" + pattern + \"/\" + flags + \" \");\n    }\n    ['length', 'minlength', 'maxlength',\n     'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive',\n     'totaldigits', 'fractiondigits'\n    ].forEach(function (a) {\n      if (v[a])\n        pieces.push(\" \", a, \" \", v[a]);\n    });\n    return pieces;\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri, trailingSpace) {\n    trailingSpace = trailingSpace ? ' ' : '';\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (ESCAPE_1.test(iri))\n      iri = iri.replace(ESCAPE_g, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]) + trailingSpace;\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (ESCAPE_1.test(value))\n      value = value.replace(ESCAPE_g, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeShapeName` represents a subject\n  _encodeShapeName: function (subject, trailingSpace) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject, trailingSpace);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeValue` represents an object\n  _encodeValue: function (object) {\n    // Represent an IRI or blank node\n    if (typeof object !== \"object\")\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    return this._encodeLiteral(object.value, object.type, object.language);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  writeSchema: function (shape, done) {\n    this._writeSchema(shape, done);\n    this.end(done);\n  },\n\n  // ### `addShape` adds the shape to the output stream\n  addShape: function (shape, name, done) {\n    this._write(\n      _ShExWriter._encodeShapeName(name, false) +\n        \" \" +\n        _ShExWriter._writeShapeExpr(shape, done, true, 0).join(\"\"),\n      done\n    );\n  },\n\n  // ### `addShapes` adds the shapes to the output stream\n  addShapes: function (shapes) {\n    for (var i = 0; i < shapes.length; i++)\n      this.addShape(shapes[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (// @@ /[#\\/]$/.test(iri) && !! what was that?\n          prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Write prefix\n        this._write('PREFIX ' + prefix + ' <' + iri + '>\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = ESCAPE_replacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeCode (code) {\n  return code.replace(/\\\\/g, \"\\\\\\\\\").replace(/%/g, \"\\\\%\")\n}\n\n/** _throwError: overridable function to throw Errors().\n *\n * @param func (optional): function at which to truncate stack trace\n * @param str: error message\n */\nfunction _throwError (func, str) {\n  if (typeof func !== \"function\") {\n    str = func;\n    func = _throwError;\n  }\n  var e = new Error(str);\n  Error.captureStackTrace(e, func);\n  throw e;\n}\n\n// Expect property p with value v in object o\nfunction expect (o, p, v) {\n  if (!(p in o))\n    this._error(expect, \"expected \"+o+\" to have a .\"+p);\n  if (arguments.length > 2 && o[p] !== v)\n    this._error(expect, \"expected \"+o[o]+\" to equal .\"+v);\n}\n\n// The empty function\nfunction noop () {}\n\nreturn ShExWriter;\n})();\n\n// Export the `ShExWriter` class as a whole.\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWriterCjsModule; // node environment\n"
    },
    {
      "id": 13,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
      "name": "../shex-util/node_modules/sync-request/lib/browser.js",
      "index": 14,
      "index2": 19,
      "size": 2255,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
      "issuerId": 4,
      "issuerName": "../shex-util/shex-util.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 215,
        "building": 26
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "module": "../shex-util/shex-util.js",
          "moduleName": "../shex-util/shex-util.js",
          "type": "cjs require",
          "userRequest": "sync-request",
          "loc": "1710:8-31"
        },
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "module": "../shex-util/shex-util.js",
          "moduleName": "../shex-util/shex-util.js",
          "type": "cjs require",
          "userRequest": "sync-request",
          "loc": "1711:20-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nexports.__esModule = true;\nvar handle_qs_js_1 = require(\"then-request/lib/handle-qs.js\");\nvar GenericResponse = require(\"http-response-object\");\nvar fd = FormData;\nexports.FormData = fd;\nfunction doRequest(method, url, options) {\n    var xhr = new XMLHttpRequest();\n    // check types of arguments\n    if (typeof method !== 'string') {\n        throw new TypeError('The method must be a string.');\n    }\n    if (url && typeof url === 'object') {\n        url = url.href;\n    }\n    if (typeof url !== 'string') {\n        throw new TypeError('The URL/path must be a string.');\n    }\n    if (options === null || options === undefined) {\n        options = {};\n    }\n    if (typeof options !== 'object') {\n        throw new TypeError('Options must be an object (or null).');\n    }\n    method = method.toUpperCase();\n    options.headers = options.headers || {};\n    // handle cross domain\n    var match;\n    var crossDomain = !!((match = /^([\\w-]+:)?\\/\\/([^\\/]+)/.exec(url)) && match[2] != location.host);\n    if (!crossDomain)\n        options.headers['X-Requested-With'] = 'XMLHttpRequest';\n    // handle query string\n    if (options.qs) {\n        url = handle_qs_js_1[\"default\"](url, options.qs);\n    }\n    // handle json body\n    if (options.json) {\n        options.body = JSON.stringify(options.json);\n        options.headers['content-type'] = 'application/json';\n    }\n    if (options.form) {\n        options.body = options.form;\n    }\n    // method, url, async\n    xhr.open(method, url, false);\n    for (var name in options.headers) {\n        xhr.setRequestHeader(name.toLowerCase(), '' + options.headers[name]);\n    }\n    // avoid sending empty string (#319)\n    xhr.send(options.body ? options.body : null);\n    var headers = {};\n    xhr\n        .getAllResponseHeaders()\n        .split('\\r\\n')\n        .forEach(function (header) {\n        var h = header.split(':');\n        if (h.length > 1) {\n            headers[h[0].toLowerCase()] = h\n                .slice(1)\n                .join(':')\n                .trim();\n        }\n    });\n    return new GenericResponse(xhr.status, headers, xhr.responseText, url);\n}\nexports[\"default\"] = doRequest;\nmodule.exports = doRequest;\nmodule.exports[\"default\"] = doRequest;\nmodule.exports.FormData = fd;\n"
    },
    {
      "id": 14,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/formats.js",
      "name": "../shex-util/node_modules/qs/lib/formats.js",
      "index": 19,
      "index2": 13,
      "size": 521,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
      "issuerId": 28,
      "issuerName": "../shex-util/node_modules/qs/lib/index.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "profile": {
            "factory": 132,
            "building": 6
          }
        },
        {
          "id": 28,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "name": "../shex-util/node_modules/qs/lib/index.js",
          "profile": {
            "factory": 50,
            "building": 3
          }
        }
      ],
      "profile": {
        "factory": 7,
        "building": 7,
        "dependencies": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "module": "../shex-util/node_modules/qs/lib/index.js",
          "moduleName": "../shex-util/node_modules/qs/lib/index.js",
          "type": "cjs require",
          "userRequest": "./formats",
          "loc": "5:14-34"
        },
        {
          "moduleId": 29,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
          "module": "../shex-util/node_modules/qs/lib/stringify.js",
          "moduleName": "../shex-util/node_modules/qs/lib/stringify.js",
          "type": "cjs require",
          "userRequest": "./formats",
          "loc": "4:14-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n"
    },
    {
      "id": 15,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
      "name": "../shex-parser/shex-parser.js",
      "index": 25,
      "index2": 24,
      "size": 4495,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/parser",
          "loc": "9:20-45"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require",
          "userRequest": "@shexjs/parser",
          "loc": "6:21-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "const ShExParserCjsModule = (function () {\n\nconst ShExTerm = require(\"@shexjs/term\");\nconst ShExJison = require('./lib/ShExJison').Parser;\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, prefixes, schemaOptions) {\n  schemaOptions = schemaOptions || {};\n  // Create a copy of the prefixes\n  var prefixesCopy = {};\n  for (var prefix in prefixes || {})\n    prefixesCopy[prefix] = prefixes[prefix];\n\n  // Create a copy of the labelResolvers\n  var termResolver = \"termResolver\" in schemaOptions ?\n      schemaOptions.termResolver :\n      makeDisabledTermResolver();\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShExJison();\n\n  function runParser () {\n    // ShExJison.base = baseIRI || \"\";\n    // ShExJison.basePath = ShExJison.base.replace(/[^\\/]*$/, '');\n    // ShExJison.baseRoot = ShExJison.base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    ShExJison._prefixes = Object.create(prefixesCopy);\n    ShExJison._imports = [];\n    ShExJison._setBase(baseIRI);\n    ShExJison._setFileName(baseIRI);\n    ShExJison.options = schemaOptions;\n    if (!ShExJison._termResolver)\n      ShExJison._termResolver = termResolver;\n    let errors = [];\n    ShExJison.recoverable = e =>\n      errors.push(e);\n    let ret = null;\n    try {\n      ret = ShExJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      errors.push(e);\n    }\n    ShExJison.reset();\n    errors.forEach(e => {\n      if (\"hash\" in e) {\n        const hash = e.hash;\n        const location = hash.loc;\n        delete hash.loc;\n        Object.assign(e, hash, {location: location});\n      }\n      return e;\n    })\n    if (errors.length == 1) {\n      errors[0].parsed = ret;\n      throw errors[0];\n    } else if (errors.length) {\n      const all = new Error(\"\" + errors.length  + \" parser errors:\\n\" + errors.map(\n        e => contextError(e, parser.yy.lexer)\n      ).join(\"\\n\"));\n      all.errors = errors;\n      all.parsed = ret;\n      throw all;\n    } else {\n      return ret;\n    }\n  }\n  parser.parse = runParser;\n  parser._setBase = function (base) {\n    ShExJison._setBase;\n    baseIRI = base;\n  }\n  parser._setFileName = ShExJison._setFileName;\n  parser._setTermResolver = ShExJison._setTermResolver;\n  parser._setOptions = function (opts) { ShExJison.options = opts; };\n  parser._resetBlanks = ShExJison._resetBlanks;\n  parser.reset = ShExJison.reset;\n  ShExJison.options = schemaOptions;\n  return parser;\n\n  function contextError (e, lexer) {\n    // use the lexer's pretty-printing\n    var line = e.location.first_line;\n    var col  = e.location.first_column + 1;\n    var posStr = \"pos\" in e.hash ? \"\\n\" + e.hash.pos : \"\"\n    return `${baseIRI}\\n line: ${line}, column: ${col}: ${e.message}${posStr}`;\n  }\n}\n\nvar makeDBTermResolver = function (db) {\n  var _db = db;\n  var _lookFor = [];\n  return {\n    add: function (iri) {\n      _lookFor.push(iri);\n    },\n    resolve: function (pair, prefixes) {\n      var x = _lookFor.reduce((lfacc, lf) => {\n        var found1 = _db.getQuads(null, lf, '\"' + pair.label.value + '\"');\n        if (found1.length)\n          return pair.prefix === null ?\n          {prefix: null, length: null, term: ShExTerm.internalTerm(found1[0].subject)}:\n          found1.reduce((tripacc, triple) => {\n            var s = ShExTerm.internalTerm(triple.subject);\n            return Object.keys(prefixes).reduce((prefacc, prefix) => {\n              var ns = prefixes[prefix];\n              var sw = s.startsWith(ns);\n              if (sw && ns.length > prefacc.length && pair.prefix === prefix)\n                return {prefix: prefix, length: prefacc.length, term: s};\n              return prefacc;\n            }, tripacc);\n          }, lfacc);\n        else\n          return lfacc;\n      }, {prefix: null, length: 0, term: null});\n      if (x.term)\n        return x.term;\n      throw Error(\"no term found for `\" + JSON.stringify(pair) + \"`\");\n    }\n  };\n}\n\nvar makeDisabledTermResolver = function () {\n  return {\n    add: function (iri) {\n      throw Error(\"no term resolver to accept <\" + iri + \">\");\n    },\n    resolve: function (label, prefixes) {\n      throw Error(\"no term resolver to resolve `\" + label + \"`\");\n    }\n  };\n}\n\nreturn {\n  construct: prepareParser,\n  dbTermResolver: makeDBTermResolver,\n  disabledTermResolver: makeDisabledTermResolver\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExParserCjsModule;\n"
    },
    {
      "id": 16,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "index": 27,
      "index2": 45,
      "size": 19433,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
      "issuerId": 34,
      "issuerName": "../shex-api/shex-api.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 289,
        "building": 24,
        "dependencies": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require",
          "userRequest": "glob",
          "loc": "322:20-35"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "./glob.js",
          "loc": "8:11-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"
    },
    {
      "id": 17,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "index": 28,
      "index2": 26,
      "size": 1308,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "fs.realpath",
          "loc": "44:9-31"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "fs.realpath",
          "loc": "5:9-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n"
    },
    {
      "id": 18,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
      "name": "./node_modules/assert/assert.js",
      "index": 36,
      "index2": 38,
      "size": 15995,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "assert",
          "loc": "50:13-30"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "assert",
          "loc": "11:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"
    },
    {
      "id": 19,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
      "index": 44,
      "index2": 40,
      "size": 6167,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "./common.js",
          "loc": "53:13-35"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "./common.js",
          "loc": "13:13-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"
    },
    {
      "id": 20,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
      "index": 46,
      "index2": 42,
      "size": 905,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "issuerId": 47,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 47,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 26,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "type": "cjs require",
          "userRequest": "wrappy",
          "loc": "1:13-30"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "type": "cjs require",
          "userRequest": "wrappy",
          "loc": "1:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"
    },
    {
      "id": 21,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/once/once.js",
      "index": 47,
      "index2": 43,
      "size": 935,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "once",
          "loc": "63:11-26"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "type": "cjs require",
          "userRequest": "once",
          "loc": "3:11-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n"
    },
    {
      "id": 22,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "name": "./shex-webapp.js",
      "index": 0,
      "index2": 48,
      "size": 552,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "issuerPath": null,
      "profile": {
        "factory": 20,
        "building": 15
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "single entry",
          "userRequest": "./shex-webapp.js",
          "loc": "shex-webapp"
        },
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "single entry",
          "userRequest": "./shex-webapp.js",
          "loc": "shex-webapp.min"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 0,
      "source": "ShExWebApp = (function () {\n  let shapeMap = require(\"shape-map\")\n  return Object.assign({}, {\n    ShExTerm:       require('@shexjs/term'),\n    Util:           require('@shexjs/util'),\n    Validator:      require('@shexjs/validator'),\n    Writer:         require('@shexjs/writer'),\n    Api:            require(\"@shexjs/api\"),\n    Parser:         require(\"@shexjs/parser\"),\n    ShapeMap:       shapeMap,\n    ShapeMapParser: shapeMap.Parser,\n  })\n})()\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWebApp;\n"
    },
    {
      "id": 23,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
      "name": "../shape-map/shape-map.js",
      "index": 1,
      "index2": 7,
      "size": 580,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "shape-map",
          "loc": "2:17-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * See README for description.\n */\n\nconst ShapeMapCjsModule = (function () {\n  const symbols = require(\"./lib/ShapeMapSymbols\")\n\n  // Write the parser object directly into the symbols so the caller shares a\n  // symbol space with ShapeMapJison for e.g. start and focus.\n  symbols.Parser = require(\"./lib/ShapeMapParser\")\n  return symbols\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapCjsModule;\n"
    },
    {
      "id": 24,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
      "name": "../shape-map/lib/ShapeMapParser.js",
      "index": 3,
      "index2": 6,
      "size": 2190,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
      "issuerId": 23,
      "issuerName": "../shape-map/shape-map.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 23,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 163,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "module": "../shape-map/shape-map.js",
          "moduleName": "../shape-map/shape-map.js",
          "type": "cjs require",
          "userRequest": "./lib/ShapeMapParser",
          "loc": "11:19-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "var ShapeMapParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShapeMapJison = require('./ShapeMapJison').Parser; // node environment\n} else {\n  ShapeMapJison = ShapeMapJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, schemaMeta, dataMeta) {\n  // Create a copy of the prefixes\n  var schemaBase = schemaMeta.base;\n  var schemaPrefixesCopy = {};\n  for (var prefix in schemaMeta.prefixes || {})\n    schemaPrefixesCopy[prefix] = schemaMeta.prefixes[prefix];\n  var dataBase = dataMeta.base;\n  var dataPrefixesCopy = {};\n  for (var prefix in dataMeta.prefixes || {})\n    dataPrefixesCopy[prefix] = dataMeta.prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShapeMapJison();\n\n  function runParser () {\n    ShapeMapJison._schemaPrefixes = Object.create(schemaPrefixesCopy);\n    ShapeMapJison._setSchemaBase(schemaBase);\n    ShapeMapJison._dataPrefixes = Object.create(dataPrefixesCopy);\n    ShapeMapJison._setDataBase(dataBase);\n    ShapeMapJison._setFileName(baseIRI);\n    try {\n      return ShapeMapJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      // use the lexer's pretty-printing\n      var lineNo = \"lexer\" in parser.yy ? parser.yy.lexer.yylineno + 1 : 1;\n      var pos = \"lexer\" in parser.yy ? parser.yy.lexer.showPosition() : \"\";\n      var t = Error(`${baseIRI}(${lineNo}): ${e.message}\\n${pos}`);\n      Error.captureStackTrace(t, runParser);\n      parser.reset();\n      throw t;\n    }\n  }\n  parser.parse = runParser;\n  parser._setSchemaBase = function (base) {\n    ShapeMapJison._setSchemaBase;\n    schemaBase = base;\n  }\n  parser._setDataBase = function (base) {\n    ShapeMapJison._setDataBase;\n    dataBase = base;\n  }\n  parser._setFileName = ShapeMapJison._setFileName;\n  parser.reset = ShapeMapJison.reset;\n  return parser;\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShapeMapParser;\n"
    },
    {
      "id": 25,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
      "name": "../shape-map/lib/ShapeMapJison.js",
      "index": 4,
      "index2": 5,
      "size": 52142,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
      "issuerId": 24,
      "issuerName": "../shape-map/lib/ShapeMapParser.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 23,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 24,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "name": "../shape-map/lib/ShapeMapParser.js",
          "profile": {
            "factory": 163,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 198,
        "building": 56,
        "dependencies": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "module": "../shape-map/lib/ShapeMapParser.js",
          "moduleName": "../shape-map/lib/ShapeMapParser.js",
          "type": "cjs require",
          "userRequest": "./ShapeMapJison",
          "loc": "5:18-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "/* parser generated by jison 0.4.16 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShapeMapJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,16],$V2=[1,11],$V3=[1,14],$V4=[1,25],$V5=[1,24],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,28],$Va=[1,26],$Vb=[1,27],$Vc=[1,29],$Vd=[1,12],$Ve=[1,13],$Vf=[1,15],$Vg=[4,9],$Vh=[16,19,20,21],$Vi=[2,25],$Vj=[16,19,20,21,37],$Vk=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],$Vl=[4,9,16,19,20,21,37,43,74,75],$Vm=[4,9,43],$Vn=[29,46,80,81,82],$Vo=[4,9,42,43],$Vp=[1,59],$Vq=[46,79,80,81,82],$Vr=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],$Vs=[1,94],$Vt=[1,85],$Vu=[1,86],$Vv=[1,87],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,93],$VA=[1,95],$VB=[33,48,49,50,53,54,55,56,63],$VC=[4,9,37,65],$VD=[1,99],$VE=[9,37],$VF=[9,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shapeMap\":3,\"EOF\":4,\"pair\":5,\"Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star\":6,\"QGT_COMMA_E_Opt\":7,\"O_QGT_COMMA_E_S_Qpair_E_C\":8,\"GT_COMMA\":9,\"nodeSelector\":10,\"statusAndShape\":11,\"Qreason_E_Opt\":12,\"QjsonAttributes_E_Opt\":13,\"reason\":14,\"jsonAttributes\":15,\"GT_AT\":16,\"Qstatus_E_Opt\":17,\"shapeSelector\":18,\"ATSTART\":19,\"ATPNAME_NS\":20,\"ATPNAME_LN\":21,\"status\":22,\"objectTerm\":23,\"triplePattern\":24,\"IT_SPARQL\":25,\"string\":26,\"nodeIri\":27,\"shapeIri\":28,\"START\":29,\"subjectTerm\":30,\"BLANK_NODE_LABEL\":31,\"literal\":32,\"GT_LCURLEY\":33,\"IT_FOCUS\":34,\"nodePredicate\":35,\"O_QobjectTerm_E_Or_QIT___E_C\":36,\"GT_RCURLEY\":37,\"O_QsubjectTerm_E_Or_QIT___E_C\":38,\"IT__\":39,\"GT_NOT\":40,\"GT_OPT\":41,\"GT_DIVIDE\":42,\"GT_DOLLAR\":43,\"O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C\":44,\"jsonValue\":45,\"APPINFO_COLON\":46,\"APPINFO_SPACE_COLON\":47,\"IT_false\":48,\"IT_null\":49,\"IT_true\":50,\"jsonObject\":51,\"jsonArray\":52,\"INTEGER\":53,\"DECIMAL\":54,\"DOUBLE\":55,\"STRING_LITERAL2\":56,\"Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt\":57,\"O_QGT_COMMA_E_S_QjsonMember_E_C\":58,\"jsonMember\":59,\"Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star\":60,\"O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C\":61,\"STRING_LITERAL2_COLON\":62,\"GT_LBRACKET\":63,\"Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt\":64,\"GT_RBRACKET\":65,\"O_QGT_COMMA_E_S_QjsonValue_E_C\":66,\"Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star\":67,\"O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C\":68,\"rdfLiteral\":69,\"numericLiteral\":70,\"booleanLiteral\":71,\"Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt\":72,\"O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C\":73,\"LANGTAG\":74,\"GT_DTYPE\":75,\"STRING_LITERAL1\":76,\"STRING_LITERAL_LONG1\":77,\"STRING_LITERAL_LONG2\":78,\"IT_a\":79,\"IRIREF\":80,\"PNAME_LN\":81,\"PNAME_NS\":82,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",9:\"GT_COMMA\",16:\"GT_AT\",19:\"ATSTART\",20:\"ATPNAME_NS\",21:\"ATPNAME_LN\",25:\"IT_SPARQL\",29:\"START\",31:\"BLANK_NODE_LABEL\",33:\"GT_LCURLEY\",34:\"IT_FOCUS\",37:\"GT_RCURLEY\",39:\"IT__\",40:\"GT_NOT\",41:\"GT_OPT\",42:\"GT_DIVIDE\",43:\"GT_DOLLAR\",46:\"APPINFO_COLON\",47:\"APPINFO_SPACE_COLON\",48:\"IT_false\",49:\"IT_null\",50:\"IT_true\",53:\"INTEGER\",54:\"DECIMAL\",55:\"DOUBLE\",56:\"STRING_LITERAL2\",62:\"STRING_LITERAL2_COLON\",63:\"GT_LBRACKET\",65:\"GT_RBRACKET\",74:\"LANGTAG\",75:\"GT_DTYPE\",76:\"STRING_LITERAL1\",77:\"STRING_LITERAL_LONG1\",78:\"STRING_LITERAL_LONG2\",79:\"IT_a\",80:\"IRIREF\",81:\"PNAME_LN\",82:\"PNAME_NS\"},\nproductions_: [0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n          return []\n        \nbreak;\ncase 2:\n\n          return [$$[$0-3]].concat($$[$0-2])\n        \nbreak;\ncase 3: case 51: case 59:\nthis.$ = $$[$0];\nbreak;\ncase 4: case 60: case 63:\nthis.$ = [  ];\nbreak;\ncase 5: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 8:\nthis.$ = extend({ node: $$[$0-3] }, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 9: case 11: case 52: case 55: case 74:\nthis.$ = {  };\nbreak;\ncase 13:\nthis.$ = extend({ shape: $$[$0] }, $$[$0-1]);\nbreak;\ncase 14:\nthis.$ = { shape: ShapeMap.start };\nbreak;\ncase 15:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1)) };\n      \nbreak;\ncase 16:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + $$[$0].substr(namePos + 1) };\n      \nbreak;\ncase 17:\nthis.$ = { status: 'conformant' } // defaults to conformant;\nbreak;\ncase 18:\nthis.$ = { status: $$[$0] };\nbreak;\ncase 21:\nthis.$ = { type: \"Extension\", language: \"http://www.w3.org/ns/shex#Extensions-sparql\", lexical: $$[$0][\"@value\"] };\nbreak;\ncase 22:\nthis.$ = { type: \"Extension\", language: $$[$0-1], lexical: $$[$0][\"@value\"] };\nbreak;\ncase 24:\nthis.$ = ShapeMap.start;\nbreak;\ncase 29:\nthis.$ = { type: \"TriplePattern\", subject: ShapeMap.focus, predicate: $$[$0-2], object: $$[$0-1] };\nbreak;\ncase 30:\nthis.$ = { type: \"TriplePattern\", subject: $$[$0-3], predicate: $$[$0-2], object: ShapeMap.focus };\nbreak;\ncase 32: case 34: case 42:\nthis.$ = null;\nbreak;\ncase 35:\nthis.$ = 'nonconformant';\nbreak;\ncase 36:\nthis.$ = 'unknown';\nbreak;\ncase 37:\nthis.$ = { reason: $$[$0] };\nbreak;\ncase 38:\nthis.$ = { appinfo: $$[$0] };\nbreak;\ncase 41:\nthis.$ = false;\nbreak;\ncase 43:\nthis.$ = true;\nbreak;\ncase 46: case 47: case 48:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 49:\nthis.$ = unescapeString($$[$0], 1)[\"@value\"];\nbreak;\ncase 50: case 58:\nthis.$ = $$[$0-1];\nbreak;\ncase 53: case 54: case 71:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 57:\n\n        this.$ = {  };\n        var t = $$[$0-1].substr(0, $$[$0-1].length - 1).trim(); // remove trailing ':' and spaces\n        this.$[unescapeString(t, 1)[\"@value\"]] = $$[$0];\n      \nbreak;\ncase 62:\nthis.$ = [$$[$0-1]].concat($$[$0]);\nbreak;\ncase 68:\nthis.$ = createLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 69:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 70:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE);\nbreak;\ncase 72:\nthis.$ = obj(\"@language\", $$[$0].substr(1).toLowerCase());\nbreak;\ncase 73:\nthis.$ = obj(\"@type\", $$[$0]);\nbreak;\ncase 76:\nthis.$ = createLiteral(\"true\", XSD_BOOLEAN);\nbreak;\ncase 77:\nthis.$ = createLiteral(\"false\", XSD_BOOLEAN);\nbreak;\ncase 78: case 80:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 79: case 81:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 83:\nthis.$ = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nbreak;\ncase 84:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._dataBase === null || absoluteIRI.test(unesc) ? unesc : _resolveDataIRI(unesc)\n      \nbreak;\ncase 85: case 86: case 90:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 87:\n\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\ncase 88:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._schemaBase === null || absoluteIRI.test(unesc) ? unesc : _resolveSchemaIRI(unesc)\n      \nbreak;\ncase 89:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 91:\n\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},{1:[3]},{1:[2,1]},o($Vg,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},o($Vh,[2,19]),o($Vh,[2,20]),{26:36,56:$V9,76:$Va,77:$Vb,78:$Vc},o($Vh,$Vi,{26:37,56:$V9,76:$Va,77:$Vb,78:$Vc}),o($Vj,[2,27]),o($Vj,[2,28]),{27:42,30:40,31:$V1,34:[1,38],38:39,39:[1,41],46:$V3,80:$Vd,81:$Ve,82:$Vf},o($Vk,[2,84]),o($Vk,[2,85]),o($Vk,[2,86]),o($Vk,[2,87]),o([16,19,20,21,37,46,79,80,81,82],[2,26]),o($Vj,[2,65]),o($Vj,[2,66]),o($Vj,[2,67]),o($Vj,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),o($Vj,[2,68]),o($Vj,[2,69]),o($Vj,[2,70]),o($Vj,[2,76]),o($Vj,[2,77]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},o($Vm,[2,9],{12:50,14:51,42:[1,52]}),o($Vn,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),o($Vo,[2,14]),o($Vo,[2,15]),o($Vo,[2,16]),o($Vh,[2,21]),o($Vh,[2,22]),{27:58,35:57,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},{27:58,35:60,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},o($Vq,[2,33]),o($Vq,[2,34]),o([37,46,79,80,81,82],$Vi),o($Vj,[2,71]),o($Vj,[2,75]),o($Vj,[2,72]),{27:61,46:$V3,80:$Vd,81:$Ve,82:$Vf},{4:[1,62]},o($Vg,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vg,[2,11],{13:64,15:65,43:[1,66]}),o($Vm,[2,10]),{26:67,56:$V9,76:$Va,77:$Vb,78:$Vc},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},o($Vn,[2,18]),o($Vn,[2,35]),o($Vn,[2,36]),{23:76,26:20,27:42,30:9,31:$V1,32:10,36:75,39:[1,77],46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vr,[2,82]),o($Vr,[2,83]),{34:[1,78]},o($Vj,[2,73]),{1:[2,2]},o($Vg,[2,3]),o($Vg,[2,8]),o($Vg,[2,12]),{44:79,46:[1,80],47:[1,81]},o($Vm,[2,37]),o($Vo,[2,13]),o($Vo,[2,23]),o($Vo,[2,24]),o($Vo,[2,88]),o($Vo,[2,89]),o($Vo,[2,90]),o($Vo,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:$Vs,45:84,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VB,[2,39]),o($VB,[2,40]),o($Vh,[2,29]),o($Vh,[2,30]),o($Vg,[2,38]),o($VC,[2,41]),o($VC,[2,42]),o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),o($VC,[2,46]),o($VC,[2,47]),o($VC,[2,48]),o($VC,[2,49]),{37:[2,55],57:96,59:98,61:97,62:$VD},{33:$Vs,45:102,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},o($VE,[2,52],{60:104}),{33:$Vs,45:105,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},{65:[1,106]},{65:[2,64]},o($VF,[2,60],{67:107}),o($VC,[2,50]),{9:[1,109],37:[2,54],58:108},o($VE,[2,57]),o($VC,[2,58]),{9:[1,111],65:[2,62],66:110},o($VE,[2,53]),{59:112,62:$VD},o($VF,[2,61]),{33:$Vs,45:113,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VE,[2,51]),o($VF,[2,59])],\ndefaultActions: {2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = new Error();\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShapeMap parser in the Jison parser generator format.\n  */\n\n  var ShapeMap = require(\"./ShapeMapSymbols\");\n\n  // Common namespaces and entities\n  var XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setSchemaBase` sets the base IRI to resolve relative IRIs.\n  Parser._setSchemaBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._schemaBase = baseIRI) {\n      Parser._schemaBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._schemaBaseRoot   = baseIRI[0];\n      Parser._schemaBaseScheme = baseIRI[1];\n    }\n  }\n  Parser._setDataBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._dataBase = baseIRI) {\n      Parser._dataBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._dataBaseRoot   = baseIRI[0];\n      Parser._dataBaseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveSchemaIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveSchemaIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._schemaBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._schemaBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._schemaBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._schemaBaseScheme : Parser._schemaBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._schemaBasePath + iri);\n    }\n    }\n  }\n  function _resolveDataIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._dataBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._dataBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._dataBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._dataBaseScheme : Parser._dataBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._dataBasePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function obj() {\n    var ret = {  };\n    for (var i = 0; i < arguments.length; i+= 2) {\n      ret[arguments[i]] = arguments[i+1];\n    }\n    return ret;\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return obj(\"@value\", value, \"@type\", type );\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser.valueExprDefns = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._schemaBase = Parser._schemaBasePath = Parser._schemaBaseRoot = Parser._schemaBaseIRIScheme = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return obj(\"@value\", unescapeText(string, stringEscapeReplacements));\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, obj(\"@language\", lang.substr(1).toLowerCase()));\n  }\n\n  function error (msg) {\n    Parser.reset();\n    throw new Error(msg);\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefixes, prefix) {\n    if (!(prefix in prefixes))\n      error('Parse error; unknown prefix: ' + prefix);\n    return prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape) {\n    if (Parser.productions && label in Parser.productions)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.shapes)\n      Parser.shapes = {};\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.shapes[label] = shape;\n  }\n\n  // Add a production to the map\n  function addProduction (label, production) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.productions)\n      Parser.productions = {};\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function shapeJunction (type, container, elts) {\n    if (elts.length === 0) {\n      return container;\n    } else if (container.type === type) {\n      container.shapeExprs = container.shapeExprs.concat(elts);\n      return container;\n    } else {\n      return { type: type, shapeExprs: [container].concat(elts) };\n    }\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n\n  // <?INCLUDE from ShExUtil. Factor into `rdf-token` module? ?>\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  function unescapeText (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 47;\nbreak;\ncase 2:return 62;\nbreak;\ncase 3:return 34;\nbreak;\ncase 4:return 29;\nbreak;\ncase 5:return 19;\nbreak;\ncase 6:return 25;\nbreak;\ncase 7:return 21;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 74;\nbreak;\ncase 10:return 81;\nbreak;\ncase 11:return 46;\nbreak;\ncase 12:return 82;\nbreak;\ncase 13:return 55;\nbreak;\ncase 14:return 54;\nbreak;\ncase 15:return 53;\nbreak;\ncase 16:return 80;\nbreak;\ncase 17:return 31;\nbreak;\ncase 18:return 77;\nbreak;\ncase 19:return 78;\nbreak;\ncase 20:return 76;\nbreak;\ncase 21:return 56;\nbreak;\ncase 22:return 79;\nbreak;\ncase 23:return 9;\nbreak;\ncase 24:return 33;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 16;\nbreak;\ncase 27:return 40;\nbreak;\ncase 28:return 41;\nbreak;\ncase 29:return 42;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 75;\nbreak;\ncase 34:return 39;\nbreak;\ncase 35:return 50;\nbreak;\ncase 36:return 48;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 4;\nbreak;\ncase 39:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 40:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(appinfo[\\u0020\\u000A\\u0009]+:))/,/^(?:(\"([^\\u0022\\u005C\\u000A\\u000D]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"[\\u0020\\u000A\\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:a\\b)/,/^(?:,)/,/^(?:\\{)/,/^(?:\\})/,/^(?:@)/,/^(?:!)/,/^(?:\\?)/,/^(?:\\/)/,/^(?:\\$)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^\\^)/,/^(?:_\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShapeMapJison;\nexports.Parser = ShapeMapJison.Parser;\nexports.parse = function () { return ShapeMapJison.parse.apply(ShapeMapJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
    },
    {
      "id": 26,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/hierarchy-closure/hierarchy-closure.js",
      "name": "../shex-util/node_modules/hierarchy-closure/hierarchy-closure.js",
      "index": 12,
      "index2": 10,
      "size": 2546,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
      "issuerId": 4,
      "issuerName": "../shex-util/shex-util.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 215,
        "building": 26
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "module": "../shex-util/shex-util.js",
          "moduleName": "../shex-util/shex-util.js",
          "type": "cjs require",
          "userRequest": "hierarchy-closure",
          "loc": "6:18-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "var HierarchyClosure = (function () {\n  /** create a hierarchy object\n   * This object keeps track of direct children and parents as well as transitive children and parents.\n   */\n  function makeHierarchy () {\n    let roots = {}\n    let parents = {}\n    let children = {}\n    let holders = {}\n    return {\n      add: function (parent, child) {\n        if (// test if this is a novel entry.\n          (parent in children && children[parent].indexOf(child) !== -1)) {\n          return\n        }\n        let target = parent in holders\n          ? getNode(parent)\n          : (roots[parent] = getNode(parent)) // add new parents to roots.\n        let value = getNode(child)\n\n        target[child] = value\n        delete roots[child]\n\n        // // maintain hierarchy (direct and confusing)\n        // children[parent] = children[parent].concat(child, children[child])\n        // children[child].forEach(c => parents[c] = parents[c].concat(parent, parents[parent]))\n        // parents[child] = parents[child].concat(parent, parents[parent])\n        // parents[parent].forEach(p => children[p] = children[p].concat(child, children[child]))\n\n        // maintain hierarchy (generic and confusing)\n        updateClosure(children, parents, child, parent)\n        updateClosure(parents, children, parent, child)\n        function updateClosure (container, members, near, far) {\n          container[far] = container[far].filter(\n            e => /* e !== near && */ container[near].indexOf(e) === -1\n          ).concat(container[near].indexOf(near) === -1 ? [near] : [], container[near])\n          container[near].forEach(\n            n => (members[n] = members[n].filter(\n              e => e !== far && members[far].indexOf(e) === -1\n            ).concat(members[far].indexOf(far) === -1 ? [far] : [], members[far]))\n          )\n        }\n\n        function getNode (node) {\n          if (!(node in holders)) {\n            parents[node] = []\n            children[node] = []\n            holders[node] = {}\n          }\n          return holders[node]\n        }\n      },\n      roots: roots,\n      parents: parents,\n      children: children\n    }\n  }\n\n  function depthFirst (n, f, p) {\n    return Object.keys(n).reduce((ret, k) => {\n      return ret.concat(\n        depthFirst(n[k], f, k),\n        p ? f(k, p) : []) // outer invocation can have null parent\n    }, [])\n  }\n\n  return { create: makeHierarchy, depthFirst }\n})()\n\n/* istanbul ignore next */\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = HierarchyClosure\n}\n"
    },
    {
      "id": 27,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
      "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
      "index": 15,
      "index2": 17,
      "size": 526,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
      "issuerId": 13,
      "issuerName": "../shex-util/node_modules/sync-request/lib/browser.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        }
      ],
      "profile": {
        "factory": 132,
        "building": 6
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "module": "../shex-util/node_modules/sync-request/lib/browser.js",
          "moduleName": "../shex-util/node_modules/sync-request/lib/browser.js",
          "type": "cjs require",
          "userRequest": "then-request/lib/handle-qs.js",
          "loc": "3:21-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "\"use strict\";\nexports.__esModule = true;\nvar qs_1 = require(\"qs\");\nfunction handleQs(url, query) {\n    var _a = url.split('?'), start = _a[0], part2 = _a[1];\n    var qs = (part2 || '').split('#')[0];\n    var end = part2 && part2.split('#').length > 1 ? '#' + part2.split('#')[1] : '';\n    var baseQs = qs_1.parse(qs);\n    for (var i in query) {\n        baseQs[i] = query[i];\n    }\n    qs = qs_1.stringify(baseQs);\n    if (qs !== '') {\n        qs = '?' + qs;\n    }\n    return start + qs + end;\n}\nexports[\"default\"] = handleQs;\n"
    },
    {
      "id": 28,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
      "name": "../shex-util/node_modules/qs/lib/index.js",
      "index": 16,
      "index2": 16,
      "size": 211,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
      "issuerId": 27,
      "issuerName": "../shex-util/node_modules/then-request/lib/handle-qs.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "profile": {
            "factory": 132,
            "building": 6
          }
        }
      ],
      "profile": {
        "factory": 50,
        "building": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 27,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "module": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "moduleName": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "type": "cjs require",
          "userRequest": "qs",
          "loc": "3:11-24"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n"
    },
    {
      "id": 29,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/stringify.js",
      "name": "../shex-util/node_modules/qs/lib/stringify.js",
      "index": 17,
      "index2": 14,
      "size": 8030,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
      "issuerId": 28,
      "issuerName": "../shex-util/node_modules/qs/lib/index.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "profile": {
            "factory": 132,
            "building": 6
          }
        },
        {
          "id": 28,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "name": "../shex-util/node_modules/qs/lib/index.js",
          "profile": {
            "factory": 50,
            "building": 3
          }
        }
      ],
      "profile": {
        "factory": 7,
        "building": 7,
        "dependencies": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "module": "../shex-util/node_modules/qs/lib/index.js",
          "moduleName": "../shex-util/node_modules/qs/lib/index.js",
          "type": "cjs require",
          "userRequest": "./stringify",
          "loc": "3:16-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n"
    },
    {
      "id": 30,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/parse.js",
      "name": "../shex-util/node_modules/qs/lib/parse.js",
      "index": 20,
      "index2": 15,
      "size": 9197,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
      "issuerId": 28,
      "issuerName": "../shex-util/node_modules/qs/lib/index.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        },
        {
          "id": 27,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/then-request/lib/handle-qs.js",
          "name": "../shex-util/node_modules/then-request/lib/handle-qs.js",
          "profile": {
            "factory": 132,
            "building": 6
          }
        },
        {
          "id": 28,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "name": "../shex-util/node_modules/qs/lib/index.js",
          "profile": {
            "factory": 50,
            "building": 3
          }
        }
      ],
      "profile": {
        "factory": 7,
        "building": 7,
        "dependencies": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/qs/lib/index.js",
          "module": "../shex-util/node_modules/qs/lib/index.js",
          "moduleName": "../shex-util/node_modules/qs/lib/index.js",
          "type": "cjs require",
          "userRequest": "./parse",
          "loc": "4:12-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"
    },
    {
      "id": 31,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/http-response-object/lib/index.js",
      "name": "../shex-util/node_modules/http-response-object/lib/index.js",
      "index": 21,
      "index2": 18,
      "size": 2170,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
      "issuerId": 13,
      "issuerName": "../shex-util/node_modules/sync-request/lib/browser.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 4,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/shex-util.js",
          "name": "../shex-util/shex-util.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 13,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "name": "../shex-util/node_modules/sync-request/lib/browser.js",
          "profile": {
            "factory": 215,
            "building": 26
          }
        }
      ],
      "profile": {
        "factory": 132,
        "building": 6
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-util/node_modules/sync-request/lib/browser.js",
          "module": "../shex-util/node_modules/sync-request/lib/browser.js",
          "moduleName": "../shex-util/node_modules/sync-request/lib/browser.js",
          "type": "cjs require",
          "userRequest": "http-response-object",
          "loc": "4:22-53"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "\"use strict\";\n/**\n * A response from a web request\n */\nvar Response = /** @class */ (function () {\n    function Response(statusCode, headers, body, url) {\n        if (typeof statusCode !== 'number') {\n            throw new TypeError('statusCode must be a number but was ' + typeof statusCode);\n        }\n        if (headers === null) {\n            throw new TypeError('headers cannot be null');\n        }\n        if (typeof headers !== 'object') {\n            throw new TypeError('headers must be an object but was ' + typeof headers);\n        }\n        this.statusCode = statusCode;\n        var headersToLowerCase = {};\n        for (var key in headers) {\n            headersToLowerCase[key.toLowerCase()] = headers[key];\n        }\n        this.headers = headersToLowerCase;\n        this.body = body;\n        this.url = url;\n    }\n    Response.prototype.isError = function () {\n        return this.statusCode === 0 || this.statusCode >= 400;\n    };\n    Response.prototype.getBody = function (encoding) {\n        if (this.statusCode === 0) {\n            var err = new Error('This request to ' +\n                this.url +\n                ' resulted in a status code of 0. This usually indicates some kind of network error in a browser (e.g. CORS not being set up or the DNS failing to resolve):\\n' +\n                this.body.toString());\n            err.statusCode = this.statusCode;\n            err.headers = this.headers;\n            err.body = this.body;\n            err.url = this.url;\n            throw err;\n        }\n        if (this.statusCode >= 300) {\n            var err = new Error('Server responded to ' +\n                this.url +\n                ' with status code ' +\n                this.statusCode +\n                ':\\n' +\n                this.body.toString());\n            err.statusCode = this.statusCode;\n            err.headers = this.headers;\n            err.body = this.body;\n            err.url = this.url;\n            throw err;\n        }\n        if (!encoding || typeof this.body === 'string') {\n            return this.body;\n        }\n        return this.body.toString(encoding);\n    };\n    return Response;\n}());\nmodule.exports = Response;\n"
    },
    {
      "id": 32,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
      "name": "../shex-validator/shex-validator.js",
      "index": 22,
      "index2": 22,
      "size": 47888,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/validator",
          "loc": "6:20-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "/* ShExValidator - javascript module to validate a graph with respect to Shape Expressions\n *\n * Status: 1/2 tested, no known bugs.\n *\n * TODO:\n *   constraint violation reporting.\n */\n\nconst ShExValidatorCjsModule = (function () {\nvar UNBOUNDED = -1;\n\n// interface constants\nvar Start = { term: \"START\" }\nvar InterfaceOptions = {\n  \"coverage\": {\n    \"firstError\": \"fail on first error (usually used with eval-simple-1err)\",\n    \"exhaustive\": \"find as many errors as possible (usually used with eval-threaded-nerr)\"\n  }\n};\n\nvar VERBOSE = \"VERBOSE\" in process.env;\n// **ShExValidator** provides ShEx utility functions\n\nvar ProgramFlowError = { type: \"ProgramFlowError\", errors: { type: \"UntrackedError\" } };\n\nvar ShExTerm = require(\"@shexjs/term\");\nlet ShExVisitor = require(\"@shexjs/visitor\");\n\nfunction getLexicalValue (term) {\n  return ShExTerm.isIRI(term) ? term :\n    ShExTerm.isLiteral(term) ? ShExTerm.getLiteralValue(term) :\n    term.substr(2); // bnodes start with \"_:\"\n}\n\n\nvar XSD = \"http://www.w3.org/2001/XMLSchema#\";\nvar integerDatatypes = [\n  XSD + \"integer\",\n  XSD + \"nonPositiveInteger\",\n  XSD + \"negativeInteger\",\n  XSD + \"long\",\n  XSD + \"int\",\n  XSD + \"short\",\n  XSD + \"byte\",\n  XSD + \"nonNegativeInteger\",\n  XSD + \"unsignedLong\",\n  XSD + \"unsignedInt\",\n  XSD + \"unsignedShort\",\n  XSD + \"unsignedByte\",\n  XSD + \"positiveInteger\"\n];\n\nvar decimalDatatypes = [\n  XSD + \"decimal\",\n].concat(integerDatatypes);\n\nvar numericDatatypes = [\n  XSD + \"float\",\n  XSD + \"double\"\n].concat(decimalDatatypes);\n\nvar numericParsers = {};\nnumericParsers[XSD + \"integer\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?[0-9]+$/))) {\n    parseError(\"illegal integer value '\" + label + \"'\");\n  }\n  return parseInt(label);\n};\nnumericParsers[XSD + \"decimal\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?(?:[0-9]*\\.[0-9]+|[0-9]+)$/))) { // XSD has no pattern for decimal?\n    parseError(\"illegal decimal value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nconst DECIMAL_REGEX = /^[+\\-]?(?:[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+)(?:[eE][+\\-]?[0-9]+)?$/;\nnumericParsers[XSD + \"float\"  ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) { // XSD has no pattern for float?\n    parseError(\"illegal float value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nnumericParsers[XSD + \"double\" ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) {\n    parseError(\"illegal double value '\" + label + \"'\");\n  }\n  return Number(label);\n};\n\nfunction testRange (value, datatype, parseError) {\n  const ranges = {\n    //    integer            -1 0 1 +1 | \"\" -1.0 +1.0 1e0 NaN INF\n    //    decimal            -1 0 1 +1 -1.0 +1.0 | \"\" 1e0 NaN INF\n    //    float              -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    double             -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    nonPositiveInteger -1 0 +0 -0 | 1 +1 1a a1\n    //    negativeInteger    -1 | 0 +0 -0 1\n    //    long               -1 0 1 +1 |\n    //    int                -1 0 1 +1 |\n    //    short              -32768 0 32767 | -32769 32768\n    //    byte               -128 0 127 | \"\" -129 128\n    //    nonNegativeInteger 0 -0 +0 1 +1 | -1\n    //    unsignedLong       0 1 | -1\n    //    unsignedInt        0 1 | -1\n    //    unsignedShort      0 65535 | -1 65536\n    //    unsignedByte       0 255 | -1 256\n    //    positiveInteger    1 | -1 0\n    //    string             \"\" \"a\" \"0\"\n    //    boolean            true false 0 1 | \"\" TRUE FALSE tRuE fAlSe -1 2 10 01\n    //    dateTime           \"2012-01-02T12:34:56.78Z\" | \"\" \"2012-01-02T\" \"2012-01-02\"\n    integer:            { min: -Infinity           , max: Infinity },\n    decimal:            { min: -Infinity           , max: Infinity },\n    float:              { min: -Infinity           , max: Infinity },\n    double:             { min: -Infinity           , max: Infinity },\n    nonPositiveInteger: { min: -Infinity           , max: 0        },\n    negativeInteger:    { min: -Infinity           , max: -1       },\n    long:               { min: -9223372036854775808, max: 9223372036854775807 },\n    int:                { min: -2147483648         , max: 2147483647 },\n    short:              { min: -32768              , max: 32767    },\n    byte:               { min: -128                , max: 127      },\n    nonNegativeInteger: { min: 0                   , max: Infinity },\n    unsignedLong:       { min: 0                   , max: 18446744073709551615 },\n    unsignedInt:        { min: 0                   , max: 4294967295 },\n    unsignedShort:      { min: 0                   , max: 65535    },\n    unsignedByte:       { min: 0                   , max: 255      },\n    positiveInteger:    { min: 1                   , max: Infinity }\n  }\n  var parms = ranges[datatype.substr(XSD.length)];\n  if (!parms) throw Error(\"unexpected datatype: \" + datatype);\n  if (value < parms.min) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is less than the min:\", parms.min);\n  } else if (value > parms.max) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is greater than the max:\", parms.min);\n  }\n};\n\n/*\nfunction intSubType (spec, label, parseError) {\n  var ret = numericParsers[XSD + \"integer\"](label, parseError);\n  if (\"min\" in spec && ret < spec.min)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be < \" + spec.min);\n  if (\"max\" in spec && ret > spec.max)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be > \" + spec.max);\n  return ret;\n}\n[{type: \"nonPositiveInteger\", max: 0},\n {type: \"negativeInteger\", max: -1},\n {type: \"long\", min: -9223372036854775808, max: 9223372036854775807}, // beyond IEEE double\n {type: \"int\", min: -2147483648, max: 2147483647},\n {type: \"short\", min: -32768, max: 32767},\n {type: \"byte\", min: -128, max: 127},\n {type: \"nonNegativeInteger\", min: 0},\n {type: \"unsignedLong\", min: 0, max: 18446744073709551615},\n {type: \"unsignedInt\", min: 0, max: 4294967295},\n {type: \"unsignedShort\", min: 0, max: 65535},\n {type: \"unsignedByte\", min: 0, max: 255},\n {type: \"positiveInteger\", min: 1}].forEach(function (i) {\n   numericParsers[XSD + i.type ] = function (label, parseError) {\n     return intSubType(i, label, parseError);\n   };\n });\n*/\n\nvar stringTests = {\n  length   : function (v, l) { return v.length === l; },\n  minlength: function (v, l) { return v.length  >= l; },\n  maxlength: function (v, l) { return v.length  <= l; }\n};\n\nvar numericValueTests = {\n  mininclusive  : function (n, m) { return n >= m; },\n  minexclusive  : function (n, m) { return n >  m; },\n  maxinclusive  : function (n, m) { return n <= m; },\n  maxexclusive  : function (n, m) { return n <  m; }\n};\n\nvar decimalLexicalTests = {\n  totaldigits   : function (v, d) {\n    var m = v.match(/[0-9]/g);\n    return m && m.length <= d;\n  },\n  fractiondigits: function (v, d) {\n    var m = v.match(/^[+-]?[0-9]*\\.?([0-9]*)$/);\n    return m && m[1].length <= d;\n  }\n};\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n/* ShExValidator_constructor - construct an object for validating a schema.\n *\n * schema: a structure produced by a ShEx parser or equivalent.\n * options: object with controls for\n *   lax(true): boolean: whine about missing types in schema.\n *   diagnose(false): boolean: makde validate return a structure with errors.\n */\nfunction ShExValidator_constructor(schema, options) {\n  if (!(this instanceof ShExValidator_constructor))\n    return new ShExValidator_constructor(schema, options);\n  let index = schema._index || ShExVisitor.index(schema)\n  this.type = \"ShExValidator\";\n  options = options || {};\n  this.options = options;\n  this.options.coverage = this.options.coverage || \"exhaustive\";\n  if (!(\"noCache\" in options && options.noCache))\n    this.known = {};\n\n  var _ShExValidator = this;\n  this.schema = schema;\n  this._expect = this.options.lax ? noop : expect; // report errors on missing types.\n  this._optimize = {}; // optimizations:\n    // hasRepeatedGroups: whether there are patterns like (:p1 ., :p2 .)*\n  this.reset = function () {  }; // included in case we need it later.\n  // var regexModule = this.options.regexModule || require(\"@shexjs/eval-simple-1err\");\n  var regexModule = this.options.regexModule || require(\"@shexjs/eval-threaded-nerr\");\n\n  /* getAST - compile a traditional regular expression abstract syntax tree.\n   * Tested but not used at present.\n   */\n  this.getAST = function () {\n    return {\n      type: \"AST\",\n      shapes: schema.shapes.reduce(function (ret, shape) {\n        ret[shape.id] = {\n          type: \"ASTshape\",\n          expression: _compileShapeToAST(shape.expression, [], _ShExValidator.schema)\n        };\n        return ret;\n      }, {})\n    };\n  };\n\n  /* indexTripleConstraints - compile regular expression and index triple constraints\n   */\n  this.indexTripleConstraints = function (expression) {\n    // list of triple constraints from (:p1 ., (:p2 . | :p3 .))\n    var tripleConstraints = [];\n\n    if (expression)\n      indexTripleConstraints_dive(expression);\n    return tripleConstraints;\n\n    function indexTripleConstraints_dive (expr) {\n      if (typeof expr === \"string\") // Inclusion\n        return indexTripleConstraints_dive(index.tripleExprs[expr]);\n\n      else if (expr.type === \"TripleConstraint\") {\n        tripleConstraints.push(expr);\n        return [tripleConstraints.length - 1]; // index of expr\n      }\n\n      else if (expr.type === \"OneOf\" || expr.type === \"EachOf\")\n        return expr.expressions.reduce(function (acc, nested) {\n          return acc.concat(indexTripleConstraints_dive(nested));\n        }, []);\n\n      else if (expr.type === \"NestedShape\")\n        return [];\n\n      else\n        runtimeError(\"unexpected expr type: \" + expr.type);\n    };\n  };\n\n  /* emptyTracker - a tracker that does nothing\n   */\n  this.emptyTracker = function () {\n    var noop = x => x;\n    return {\n      recurse: noop,\n      known: noop,\n      enter: function (point, label) { ++this.depth; },\n      exit: function (point, label, ret) { --this.depth; },\n      depth: 0\n    };\n  };\n\n  /* validate - test point in db against the schema for labelOrShape\n   * depth: level of recurssion; for logging.\n   */\n  this.validate = function (db, point, label, tracker, seen) {\n    // default to schema's start shape\n    if (typeof point === \"object\" && \"termType\" in point) {\n      point = ShExTerm.internalTerm(point)\n    }\n    if (typeof point === \"object\") {\n      var shapeMap = point;\n      if (this.options.results === \"api\") {\n        return shapeMap.map(pair => {\n          var time = new Date();\n          var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n          time = new Date() - time;\n          return {\n            node: pair.node,\n            shape: pair.shape,\n            status: \"errors\" in res ? \"nonconformant\" : \"conformant\",\n            appinfo: res,\n            elapsed: time\n          };\n        });\n      }\n      var results = shapeMap.reduce((ret, pair) => {\n        var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n        return \"errors\" in res ?\n          { passes: ret.passes, failures: ret.failures.concat(res) } :\n          { passes: ret.passes.concat(res), failures: ret.failures } ;\n      }, {passes: [], failures: []});\n      if (false && this.options.results === \"api\") {\n        var ret = {};\n        function _add (n, s, r) {\n          if (!(n in ret)) {\n            ret[n] = [{shape: s, result: r}];\n            return;\n          }\n          if (ret[n].filter(p => { return p.shape === s; }))\n            return;\n          ret[n].push({shape: s, results: r});\n        }\n        results.passes.forEach(p => { _add(p.node, p.shape, true); });\n        results.failures.forEach(p => { _add(p.node, p.shape, false); });\n        return ret;\n      }\n      if (results.failures.length > 0) {\n        return results.failures.length !== 1 ?\n          { type: \"FailureList\", errors: results.failures } :\n          results.failures [0];\n      } else {\n        return results.passes.length !== 1 ?\n          { type: \"SolutionList\", solutions: results.passes } :\n          results.passes [0];\n      }\n    }\n\n    var outside = tracker === undefined;\n    // logging stuff\n    if (!tracker)\n      tracker = this.emptyTracker();\n    if (!label || label === Start) {\n      if (!schema.start)\n        runtimeError(\"start production not defined\");\n    }\n\n    var shape = null;\n    if (label == Start) {\n      shape = schema.start;\n    } else if (!(\"shapes\" in this.schema) || this.schema.shapes.length === 0) {\n      runtimeError(\"shape \" + label + \" not found; no shapes in schema\");\n    } else if (label in index.shapeExprs) {\n      shape = index.shapeExprs[label]\n    } else {\n      runtimeError(\"shape \" + label + \" not found in:\\n\" + Object.keys(index.shapeExprs || []).map(s => \"  \" + s).join(\"\\n\"));\n    }\n    if (typeof label !== \"string\")\n      return this._validateShapeExpr(db, point, shape, Start, tracker, seen);\n\n    if (seen === undefined)\n      seen = {};\n    var seenKey = point + \"@\" + (label === Start ? \"_: -start-\" : label);\n    if (seenKey in seen)\n      return tracker.recurse({\n        type: \"Recursion\",\n        node: ldify(point),\n        shape: label\n      });\n    if (\"known\" in this && seenKey in this.known)\n      return tracker.known(this.known[seenKey]);\n    seen[seenKey] = { point: point, shape: label };\n    tracker.enter(point, label);\n    var ret = this._validateShapeExpr(db, point, shape, label, tracker, seen);\n    tracker.exit(point, label, ret);\n    delete seen[seenKey];\n    if (\"known\" in this)\n      this.known[seenKey] = ret;\n    if (\"startActs\" in schema && outside) {\n      ret.startActs = schema.startActs;\n    }\n    return ret;\n  }\n\n  this._validateShapeExpr = function (db, point, shapeExpr, shapeLabel, tracker, seen) {\n    if (point === \"\")\n      throw Error(\"validation needs a valid focus node\");\n    if (typeof shapeExpr === \"string\") { // ShapeRef\n      return this._validateShapeExpr(db, point, index.shapeExprs[shapeExpr], shapeExpr, tracker, seen);\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      var sub = this._errorsMatchingNodeConstraint(point, shapeExpr, null);\n      return sub.errors && sub.errors.length ? { // @@ when are both conditionals needed?\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: sub.errors.map(function (error) { // !!! just sub.errors?\n          return {\n            type: \"NodeConstraintViolation\",\n            shapeExpr: shapeExpr,\n            error: error\n          };\n        })\n      } : {\n        type: \"NodeConstraintTest\",\n        node: ldify(point),\n        shape: shapeLabel,\n        shapeExpr: shapeExpr\n      };\n    } else if (shapeExpr.type === \"Shape\") {\n      return this._validateShape(db, point, shapeExpr, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeExternal\") {\n      return this.options.validateExtern(db, point, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      var sub = this._validateShapeExpr(db, point, shapeExpr.shapeExpr, shapeLabel, tracker, seen);\n      if (\"errors\" in sub)\n          return { type: \"ShapeNotResults\", solution: sub };\n        else\n          return { type: \"ShapeNotFailure\", errors: sub };\n    } else if (shapeExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          passes.push(sub);\n      }\n      if (errors.length > 0) {\n        return  { type: \"ShapeAndFailure\", errors: errors};\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else\n      throw Error(\"expected one of Shape{Ref,And,Or} or NodeConstraint, got \" + JSON.stringify(shapeExpr));\n  }\n\n  this._validateShape = function (db, point, shape, shapeLabel, tracker, seen) {\n    const _ShExValidator = this;\n    const valParms = { db, shapeLabel, tracker, seen };\n\n    let ret = null;\n    const startAcionStorage = {}; // !!! need test to see this write to results structure.\n    if (\"startActs\" in schema) {\n      const semActErrors = this.semActHandler.dispatchAll(schema.startActs, null, startAcionStorage)\n      if (semActErrors.length)\n        return {\n          type: \"Failure\",\n          node: ldify(point),\n          shape: shapeLabel,\n          errors: semActErrors\n        }; // some semAct aborted !! return a better error\n    }\n\n    const fromDB  = db.getNeighborhood(point, shapeLabel, shape);\n    const outgoingLength = fromDB.outgoing.length;\n    const neighborhood = fromDB.outgoing.sort(\n      (l, r) => l.predicate.localeCompare(r.predicate) || sparqlOrder(l.object, r.object)\n    ).concat(fromDB.incoming.sort(\n      (l, r) => l.predicate.localeCompare(r.predicate) || sparqlOrder(l.object, r.object)\n    ));\n\n    const constraintList = this.indexTripleConstraints(shape.expression);\n    const tripleList = matchByPredicate(constraintList, neighborhood, outgoingLength, point, valParms);\n    const {misses, extras} = whatsMissing(tripleList, neighborhood, outgoingLength, shape.extra || [])\n\n    const xp = crossProduct(tripleList.constraintList, \"NO_TRIPLE_CONSTRAINT\");\n    const partitionErrors = [];\n    const regexEngine = regexModule.compile(schema, shape, index);\n    while (xp.next() && ret === null) {\n      const errors = []\n      const usedTriples = []; // [{s1,p1,o1},{s2,p2,o2}] implicated triples -- used for messages\n      const constraintMatchCount = // [2,1,0,1] how many triples matched a constraint\n            _seq(neighborhood.length).map(function () { return 0; });\n\n      // t2tc - array mapping neighborhood index to TripleConstraint\n      const t2tcForThisShape = xp.get(); // [0,1,0,3] mapping from triple to constraint\n\n      // Triples not mapped to triple constraints are not allowed in closed shapes.\n      if (shape.closed) {\n        const unexpectedTriples = neighborhood.slice(0, outgoingLength).filter((t, i) => {\n          return t2tcForThisShape[i] === \"NO_TRIPLE_CONSTRAINT\" && // didn't match a constraint\n          extras.indexOf(i) === -1; // wasn't in EXTRAs.\n        });\n        if (unexpectedTriples.length > 0)\n          errors.push({\n            errors: [\n              {\n                type: \"ClosedShapeViolation\",\n                unexpectedTriples: unexpectedTriples\n              }\n            ]\n          });\n      }\n\n      // Set usedTriples and constraintMatchCount.\n      t2tcForThisShape.forEach(function (tpNumber, ord) {\n        if (tpNumber !== \"NO_TRIPLE_CONSTRAINT\") {\n          usedTriples.push(neighborhood[ord]);\n          ++constraintMatchCount[tpNumber];\n        }\n      });\n      const tc2t = _constraintToTriples(t2tcForThisShape, constraintList, tripleList); // e.g. [[t0, t2], [t1, t3]]\n\n      const results = regexEngine.match(db, point, constraintList, tc2t, t2tcForThisShape, neighborhood, this.semActHandler, null);\n      if (\"errors\" in results)\n        errors.push({ errors: results.errors });\n\n      const possibleRet = { type: \"ShapeTest\", node: ldify(point), shape: shapeLabel };\n      if (errors.length === 0 && Object.keys(results).length > 0) // only include .solution for non-empty pattern\n        possibleRet.solution = results;\n      if (\"semActs\" in shape) {\n        const semActErrors = this.semActHandler.dispatchAll(shape.semActs, results, possibleRet)\n        if (semActErrors.length)\n          // some semAct aborted\n          errors.push({ errors: semActErrors });\n      }\n\n      partitionErrors.push(errors)\n      if (errors.length === 0)\n        ret = possibleRet\n    }\n    // end of while(xp.next())\n\n    const missErrors = misses.map(function (miss) {\n      const t = neighborhood[miss.tripleNo];\n      return {\n        type: \"TypeMismatch\",\n        triple: {type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)},\n        constraint: constraintList[miss.constraintNo],\n        errors: miss.errors\n      };\n    });\n\n    // Report only last errors until we have a better idea.\n    const lastErrors = partitionErrors[partitionErrors.length - 1];\n    let errors = missErrors.concat(lastErrors.length === 1 ? lastErrors[0].errors : lastErrors);\n    if (errors.length > 0)\n      ret = {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors\n      };\n\n    // remove N3jsTripleToString\n    if (VERBOSE)\n      neighborhood.forEach(function (t) {\n        delete t.toString;\n      });\n\n    return addShapeAttributes(shape, ret);\n  };\n\n  function matchByPredicate (constraintList, neighborhood, outgoingLength, point, valParms) {\n    const outgoing = indexNeighborhood(neighborhood.slice(0, outgoingLength));\n    const incoming = indexNeighborhood(neighborhood.slice(outgoingLength));\n    return constraintList.reduce(function (ret, constraint, cNo) {\n\n      // subject and object depend on direction of constraint.\n      const searchSubject = constraint.inverse ? null : point;\n      const searchObject = constraint.inverse ? point : null;\n      const index = constraint.inverse ? incoming : outgoing;\n\n      // get triples matching predciate\n      const matchPredicate = index.byPredicate[constraint.predicate] ||\n            []; // empty list when no triple matches that constraint\n\n      // strip to triples matching value constraints (apart from @<someShape>)\n      const matchConstraints = _ShExValidator._triplesMatchingShapeExpr(\n        matchPredicate, constraint, valParms\n      );\n\n      matchConstraints.hits.forEach(function (evidence) {\n        const tNo = neighborhood.indexOf(evidence.triple);\n        ret.constraintList[tNo].push(cNo);\n        ret.results[cNo][tNo] = evidence.sub;\n      });\n      matchConstraints.misses.forEach(function (evidence) {\n        const tNo = neighborhood.indexOf(evidence.triple);\n        ret.misses[tNo] = {constraintNo: cNo, errors: evidence.errors};\n      });\n      return ret;\n    }, { misses: {}, results: _alist(constraintList.length), constraintList:_alist(neighborhood.length) })\n  }\n\n  function whatsMissing (tripleList, neighborhood, outgoingLength, extras) {\n    const matchedExtras = []; // triples accounted for by EXTRA\n    const misses = tripleList.constraintList.reduce(function (ret, constraints, ord) {\n      if (constraints.length === 0 &&   // matches no constraints\n          ord < outgoingLength &&       // not an incoming triple\n          ord in tripleList.misses) {   // predicate matched some constraint(s)\n        if (extras.indexOf(neighborhood[ord].predicate) !== -1) {\n          matchedExtras.push(ord);\n        } else {                        // not declared extra\n          ret.push({                    // so it's a missed triple.\n            tripleNo: ord,\n            constraintNo: tripleList.misses[ord].constraintNo,\n            errors: tripleList.misses[ord].errors\n          });\n        }\n      }\n      return ret;\n    }, []);\n    return {misses, extras: matchedExtras}\n  }\n\n  function addShapeAttributes (shape, ret) {\n    if (\"annotations\" in shape)\n      ret.annotations = shape.annotations;\n    return ret;\n  }\n\n  // Pivot to triples by constraint.\n  function _constraintToTriples (t2tc, constraintList, tripleList) {\n    return t2tc.slice().\n      reduce(function (ret, cNo, tNo) {\n        if (cNo !== \"NO_TRIPLE_CONSTRAINT\")\n          ret[cNo].push({tNo: tNo, res: tripleList.results[cNo][tNo]});\n        return ret;\n      }, _seq(constraintList.length).map(() => [])); // [length][]\n  }\n\n  this._triplesMatchingShapeExpr = function (triples, constraint, valParms) {\n    var _ShExValidator = this;\n    var misses = [];\n    var hits = [];\n    triples.forEach(function (triple) {\n      var value = constraint.inverse ? triple.subject : triple.object;\n      var sub;\n      var oldBindings = JSON.parse(JSON.stringify(_ShExValidator.semActHandler.results));\n      var errors = constraint.valueExpr === undefined ?\n          undefined :\n          (sub = _ShExValidator._errorsMatchingShapeExpr(value, constraint.valueExpr, valParms)).errors;\n      if (!errors) {\n        hits.push({triple: triple, sub: sub});\n      } else if (hits.indexOf(triple) === -1) {\n        _ShExValidator.semActHandler.results = JSON.parse(JSON.stringify(oldBindings));\n        misses.push({triple: triple, errors: errors});\n      }\n    });\n    return { hits: hits, misses: misses };\n  }\n  this._errorsMatchingShapeExpr = function (value, valueExpr, valParms) {\n    var _ShExValidator = this;\n    if (typeof valueExpr === \"string\") { // ShapeRef\n      return _ShExValidator.validate(valParms.db, value, valueExpr, valParms.tracker, valParms.seen);\n    } else if (valueExpr.type === \"NodeConstraint\") {\n      return this._errorsMatchingNodeConstraint(value, valueExpr, null);\n    } else if (valueExpr.type === \"Shape\") {\n      return _ShExValidator._validateShapeExpr(valParms.db, value, valueExpr, valParms.shapeLabel, valParms.tracker, valParms.seen)\n    } else if (valueExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = valueExpr.shapeExprs[i];\n        var sub = _ShExValidator._errorsMatchingShapeExpr(value, nested, valParms);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (valueExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = valueExpr.shapeExprs[i];\n        var sub = _ShExValidator._errorsMatchingShapeExpr(value, nested, valParms);\n        if (\"errors\" in sub)\n          return { type: \"ShapeAndFailure\", errors: [sub] };\n        else\n          passes.push(sub);\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else if (valueExpr.type === \"ShapeNot\") {\n      var sub = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExpr, valParms);\n      // return sub.errors && sub.errors.length ? {} : {\n      //   errors: [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"] };\n      var ret = Object.assign({\n        type: null,\n        focus: value\n      }, valueExpr);\n      if (sub.errors && sub.errors.length) {\n        ret.type = \"ShapeNotTest\";\n        // ret = {};\n      } else {\n        ret.type = \"ShapeNotFailure\";\n        ret.errors = [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"]\n      }\n      return ret;\n    } else {\n      throw Error(\"unknown value expression type '\" + valueExpr.type + \"'\");\n    }\n  };\n\n  /* _errorsMatchingNodeConstraint - return whether the value matches the value\n   * expression without checking shape references.\n   */\n  this._errorsMatchingNodeConstraint = function (value, valueExpr, recurse) {\n    var errors = [];\n    var label = ShExTerm.isLiteral(value) ? ShExTerm.getLiteralValue(value) :\n      ShExTerm.isBlank(value) ? value.substring(2) :\n      value;\n    var dt = ShExTerm.isLiteral(value) ? ShExTerm.getLiteralType(value) : null;\n    var numeric = integerDatatypes.indexOf(dt) !== -1 ? XSD + \"integer\" : numericDatatypes.indexOf(dt) !== -1 ? dt : undefined;\n\n    function validationError () {\n      var errorStr = Array.prototype.join.call(arguments, \"\");\n      errors.push(\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": \" + errorStr);\n      return false;\n    }\n    // if (negated) ;\n    if (false) {\n      // wildcard -- ignore\n    } else {\n      if (\"nodeKind\" in valueExpr) {\n        if ([\"iri\", \"bnode\", \"literal\", \"nonliteral\"].indexOf(valueExpr.nodeKind) === -1) {\n          validationError(\"unknown node kind '\" + valueExpr.nodeKind + \"'\");\n        }\n        if (ShExTerm.isBlank(value)) {\n          if (valueExpr.nodeKind === \"iri\" || valueExpr.nodeKind === \"literal\") {\n            validationError(\"blank node found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (ShExTerm.isLiteral(value)) {\n          if (valueExpr.nodeKind !== \"literal\") {\n            validationError(\"literal found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (valueExpr.nodeKind === \"bnode\" || valueExpr.nodeKind === \"literal\") {\n          validationError(\"iri found when \" + valueExpr.nodeKind + \" expected\");\n        }\n      }\n\n      if (valueExpr.datatype  && valueExpr.values  ) validationError(\"found both datatype and values in \"   +tripleConstraint);\n\n      if (valueExpr.datatype) {\n        if (!ShExTerm.isLiteral(value)) {\n          validationError(\"mismatched datatype: \" + value + \" is not a literal with datatype \" + valueExpr.datatype);\n        }\n        else if (ShExTerm.getLiteralType(value) !== valueExpr.datatype) {\n          validationError(\"mismatched datatype: \" + ShExTerm.getLiteralType(value) + \" !== \" + valueExpr.datatype);\n        }\n        else if (numeric) {\n          testRange(numericParsers[numeric](label, validationError), valueExpr.datatype, validationError);\n        }\n        else if (valueExpr.datatype === XSD + \"boolean\") {\n          if (label !== \"true\" && label !== \"false\" && label !== \"1\" && label !== \"0\")\n            validationError(\"illegal boolean value: \" + label);\n        }\n        else if (valueExpr.datatype === XSD + \"dateTime\") {\n          if (!label.match(/^[+-]?\\d{4}-[01]\\d-[0-3]\\dT[0-5]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?$/))\n            validationError(\"illegal dateTime value: \" + label);\n        }\n      }\n\n      if (valueExpr.values) {\n        if (ShExTerm.isLiteral(value) && valueExpr.values.reduce((ret, v) => {\n          if (ret) return true;\n          var ld = ldify(value);\n          if (v.type === \"Language\") {\n            return v.languageTag === ld.language; // @@ use equals/normalizeTest\n          }\n          if (!(typeof v === \"object\" && \"value\" in v))\n            return false;\n          return v.value === ld.value &&\n            v.type === ld.type &&\n            v.language === ld.language;\n        }, false)) {\n          // literal match\n        } else if (valueExpr.values.indexOf(value) !== -1) {\n          // trivial match\n        } else {\n          if (!(valueExpr.values.some(function (valueConstraint) {\n            if (typeof valueConstraint === \"object\" && !(\"value\" in valueConstraint)) { // isTerm me -- strike \"value\" in\n              if (!(\"type\" in valueConstraint))\n                runtimeError(\"expected \"+JSON.stringify(valueConstraint)+\" to have a 'type' attribute.\");\n              var stemRangeTypes = [\n                \"Language\",\n                \"IriStem\",      \"LiteralStem\",      \"LanguageStem\",\n                \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"\n              ];\n              if (stemRangeTypes.indexOf(valueConstraint.type) === -1)\n                runtimeError(\"expected type attribute '\"+valueConstraint.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n\n              /* expect N3.js literals with {Literal,Language}StemRange\n               *       or non-literals with IriStemRange\n               */\n              function normalizedTest (val, ref, func) {\n                if (ShExTerm.isLiteral(val)) {\n                  if ([\"LiteralStem\", \"LiteralStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(ShExTerm.getLiteralValue(val), ref);\n                  } else if ([\"LanguageStem\", \"LanguageStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(ShExTerm.getLiteralLanguage(val) || null, ref);\n                  } else {\n                    return validationError(\"literal \" + val + \" not comparable with non-literal \" + ref);\n                  }\n                } else {\n                  if ([\"IriStem\", \"IriStemRange\"].indexOf(valueConstraint.type) === -1) {\n                    return validationError(\"nonliteral \" + val + \" not comparable with literal \" + JSON.stringify(ref));\n                  } else {\n                    return func(val, ref);\n                  }\n                }\n              }\n              function startsWith (val, ref) {\n                return normalizedTest(val, ref, (l, r) => {\n                  return (valueConstraint.type === \"LanguageStem\" ||\n                          valueConstraint.type === \"LanguageStemRange\") ?\n                    // rfc4647 basic filtering\n                    l !== null && (l === r || r === \"\" || l[r.length] === \"-\") :\n                    // simple substring\n                    l.startsWith(r);\n                });\n              }\n              function equals (val, ref) {\n                return normalizedTest(val, ref, (l, r) => { return l === r; });\n              }\n\n              if (!isTerm(valueConstraint.stem)) {\n                expect(valueConstraint.stem, \"type\", \"Wildcard\");\n                // match whatever but check exclusions below\n              } else {\n                if (!(startsWith(value, valueConstraint.stem))) {\n                  return false;\n                }\n              }\n              if (valueConstraint.exclusions) {\n                return !valueConstraint.exclusions.some(function (c) {\n                  if (!isTerm(c)) {\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                    return startsWith(value, c.stem);\n                  } else {\n                    return equals(value, c);\n                  }\n                });\n              }\n              return true;\n            } else {\n              // ignore -- would have caught it above\n            }\n          }))) {\n            validationError(\"value \" + value + \" not found in set \" + JSON.stringify(valueExpr.values));\n          }\n        }\n      }\n    }\n\n    if (\"pattern\" in valueExpr) {\n      var regexp = \"flags\" in valueExpr ?\n\t  new RegExp(valueExpr.pattern, valueExpr.flags) :\n\t  new RegExp(valueExpr.pattern);\n      if (!(getLexicalValue(value).match(regexp)))\n        validationError(\"value \" + getLexicalValue(value) + \" did not match pattern \" + valueExpr.pattern);\n    }\n\n    Object.keys(stringTests).forEach(function (test) {\n      if (test in valueExpr && !stringTests[test](label, valueExpr[test])) {\n        validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n      }\n    });\n\n    Object.keys(numericValueTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric) {\n          if (!numericValueTests[test](numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n\n    Object.keys(decimalLexicalTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric === XSD + \"integer\" || numeric === XSD + \"decimal\") {\n          if (!decimalLexicalTests[test](\"\"+numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n    var ret = {\n      type: null,\n      focus: value,\n      shapeExpr: valueExpr\n    };\n    if (errors.length) {\n      ret.type = \"NodeConstraintViolation\";\n      ret.errors = errors;\n    } else {\n      ret.type = \"NodeConstraintTest\";\n    }\n    return ret;\n  };\n\n  this.semActHandler = {\n    handlers: { },\n    results: { },\n    /**\n     * Store a semantic action handler.\n     *\n     * @param {string} name - semantic action's URL.\n     * @param {object} handler - handler function.\n     *\n     * The handler object has a dispatch function is invoked with:\n     * @param {string} code - text of the semantic action.\n     * @param {object} ctx - matched triple or results subset.\n     * @param {object} extensionStorage - place where the extension writes into the result structure.\n     * @return {bool} false if the extension failed or did not accept the ctx object.\n     */\n    register: function (name, handler) {\n      this.handlers[name] = handler;\n    },\n    /**\n     * Calls all semantic actions, allowing each to write to resultsArtifact.\n     *\n     * @param {array} semActs - list of semantic actions to invoke.\n     * @return {bool} false if any result was false.\n     */\n    dispatchAll: function (semActs, ctx, resultsArtifact) {\n      var _semActHanlder = this;\n      return semActs.reduce(function (ret, semAct) {\n        if (ret.length === 0 && semAct.name in _semActHanlder.handlers) {\n          var code = \"code\" in semAct ? semAct.code : _ShExValidator.options.semActs[semAct.name];\n          var existing = \"extensions\" in resultsArtifact && semAct.name in resultsArtifact.extensions;\n          var extensionStorage = existing ? resultsArtifact.extensions[semAct.name] : {};\n          const response = _semActHanlder.handlers[semAct.name].dispatch(code, ctx, extensionStorage);\n          if (typeof response === 'boolean') {\n            if (!response)\n              ret.push({ type: \"SemActFailure\", errors: [{ type: \"BooleanSemActFailure\", code: code, ctx }] })\n          } else if (typeof response === 'object' && response.constructor === Array) {\n            if (response.length > 0)\n              ret.push({ type: \"SemActFailure\", errors: response })\n          } else {\n            throw Error(\"unsupported response from semantic action handler: \" + JSON.stringify(response))\n          }\n          if (!existing && Object.keys(extensionStorage).length > 0) {\n            if (!(\"extensions\" in resultsArtifact))\n              resultsArtifact.extensions = {};\n            resultsArtifact.extensions[semAct.name] = extensionStorage;\n          }\n          return ret;\n        }\n        return ret;\n      }, []);\n    }\n  };\n}\n\n/* _compileShapeToAST - compile a shape expression to an abstract syntax tree.\n *\n * currently tested but not used.\n */\nfunction _compileShapeToAST (expression, tripleConstraints, schema) {\n\n  function Epsilon () {\n    this.type = \"Epsilon\";\n  }\n\n  function TripleConstraint (ordinal, predicate, inverse, negated, valueExpr) {\n    this.type = \"TripleConstraint\";\n    // this.ordinal = ordinal; @@ does 1card25\n    this.inverse = !!inverse;\n    this.negated = !!negated;\n    this.predicate = predicate;\n    if (valueExpr !== undefined)\n      this.valueExpr = valueExpr;\n  }\n\n  function Choice (disjuncts) {\n    this.type = \"Choice\";\n    this.disjuncts = disjuncts;\n  }\n\n  function EachOf (conjuncts) {\n    this.type = \"EachOf\";\n    this.conjuncts = conjuncts;\n  }\n\n  function SemActs (expression, semActs) {\n    this.type = \"SemActs\";\n    this.expression = expression;\n    this.semActs = semActs;\n  }\n\n  function KleeneStar (expression) {\n    this.type = \"KleeneStar\";\n    this.expression = expression;\n  }\n\n  function _compileExpression (expr, schema) {\n    var repeated, container;\n\n    /* _repeat: map expr with a min and max cardinality to a corresponding AST with Groups and Stars.\n       expr 1 1 => expr\n       expr 0 1 => Choice(expr, Eps)\n       expr 0 3 => Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps)\n       expr 2 5 => EachOf(expr, expr, Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps))\n       expr 0 * => KleeneStar(expr)\n       expr 1 * => EachOf(expr, KleeneStar(expr))\n       expr 2 * => EachOf(expr, expr, KleeneStar(expr))\n\n       @@TODO: favor Plus over Star if Epsilon not in expr.\n    */\n    function _repeat (expr, min, max) {\n      if (min === undefined) { min = 1; }\n      if (max === undefined) { max = 1; }\n\n      if (min === 1 && max === 1) { return expr; }\n\n      var opts = max === UNBOUNDED ?\n        new KleeneStar(expr) :\n        _seq(max - min).reduce(function (ret, elt, ord) {\n          return ord === 0 ?\n            new Choice([expr, new Epsilon]) :\n            new Choice([new EachOf([expr, ret]), new Epsilon]);\n        }, undefined);\n\n      var reqd = min !== 0 ?\n        new EachOf(_seq(min).map(function (ret) {\n          return expr; // @@ something with ret\n        }).concat(opts)) : opts;\n      return reqd;\n    }\n\n    if (typeof expr === \"string\") { // Inclusion\n      var included = schema._index.tripleExprs[expr].expression;\n      return _compileExpression(included, schema);\n    }\n\n    else if (expr.type === \"TripleConstraint\") {\n      // predicate, inverse, negated, valueExpr, annotations, semActs, min, max\n      var valueExpr = \"valueExprRef\" in expr ?\n        schema.valueExprDefns[expr.valueExprRef] :\n        expr.valueExpr;\n      var ordinal = tripleConstraints.push(expr)-1;\n      var tp = new TripleConstraint(ordinal, expr.predicate, expr.inverse, expr.negated, valueExpr);\n      repeated = _repeat(tp, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"OneOf\") {\n      container = new Choice(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"EachOf\") {\n      container = new EachOf(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else throw Error(\"unexpected expr type: \" + expr.type);\n  }\n\n  return expression ? _compileExpression(expression, schema) : new Epsilon();\n}\n\n// http://stackoverflow.com/questions/9422386/lazy-cartesian-product-of-arrays-arbitrary-nested-loops\nfunction crossProduct(sets, emptyValue) {\n  var n = sets.length, carets = [], args = null;\n\n  function init() {\n    args = [];\n    for (var i = 0; i < n; i++) {\n      carets[i] = 0;\n      args[i] = sets[i].length > 0 ? sets[i][0] : emptyValue;\n    }\n  }\n\n  function next() {\n\n    // special case: crossProduct([]).next().next() returns false.\n    if (args !== null && args.length === 0)\n      return false;\n\n    if (args === null) {\n      init();\n      return true;\n    }\n    var i = n - 1;\n    carets[i]++;\n    if (carets[i] < sets[i].length) {\n      args[i] = sets[i][carets[i]];\n      return true;\n    }\n    while (carets[i] >= sets[i].length) {\n      if (i == 0) {\n        return false;\n      }\n      carets[i] = 0;\n      args[i] = sets[i].length > 0 ? sets[i][0] : emptyValue;\n      carets[--i]++;\n    }\n    args[i] = sets[i][carets[i]];\n    return true;\n  }\n\n  return {\n    next: next,\n    do: function (block, _context) { // old API\n      return block.apply(_context, args);\n    },\n    // new API because\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments#Description\n    // cautions about functions over arguments.\n    get: function () { return args; }\n  };\n}\n\n/* N3jsTripleToString - simple toString function to make N3.js's triples\n * printable.\n */\nvar N3jsTripleToString = function () {\n  function fmt (n) {\n    return ShExTerm.isLiteral(n) ?\n      [ \"http://www.w3.org/2001/XMLSchema#integer\",\n        \"http://www.w3.org/2001/XMLSchema#float\",\n        \"http://www.w3.org/2001/XMLSchema#double\"\n      ].indexOf(ShExTerm.getLiteralType(n)) !== -1 ?\n      parseInt(ShExTerm.getLiteralValue(n)) :\n      n :\n    ShExTerm.isBlank(n) ?\n      n :\n      \"<\" + n + \">\";\n  }\n  return fmt(this.subject) + \" \" + fmt(this.predicate) + \" \" + fmt(this.object) + \" .\";\n};\n\n/* indexNeighborhood - index triples by predicate\n * returns: {\n *     byPredicate: Object: mapping from predicate to triples containing that\n *                  predicate.\n *\n *     candidates: [[1,3], [0,2]]: mapping from triple to the triple constraints\n *                 it matches.  It is initialized to []. Mappings that remain an\n *                 empty set indicate a triple which didn't matching anything in\n *                 the shape.\n *\n *     misses: list to recieve value constraint failures.\n *   }\n */\nfunction indexNeighborhood (triples) {\n  return {\n    byPredicate: triples.reduce(function (ret, t) {\n      var p = t.predicate;\n      if (!(p in ret))\n        ret[p] = [];\n      ret[p].push(t);\n\n      // If in VERBOSE mode, add a nice toString to N3.js's triple objects.\n      if (VERBOSE)\n        t.toString = N3jsTripleToString;\n\n      return ret;\n    }, {}),\n    candidates: _seq(triples.length).map(function () {\n      return [];\n    }),\n    misses: []\n  };\n}\n\n/* sparqlOrder - sort triples by subject following SPARQL partial ordering.\n */\nfunction sparqlOrder (l, r) {\n  var [lprec, rprec] = [l, r].map(\n    x => ShExTerm.isBlank(x) ? 1 : ShExTerm.isLiteral(x) ? 2 : 3\n  );\n  return lprec === rprec ? l.localeCompare(r) : lprec - rprec;\n}\n\n/* Return a list of n \"\"s.\n *\n * Note that Array(n) on its own returns a \"sparse array\" so Array(n).map(f)\n * never calls f.\n */\nfunction _seq (n) {\n  return n === 0 ?\n    [] :\n    Array(n).join(\" \").split(/ /); // hahaha, javascript, you suck.\n}\n\n/* Expect property p with value v in object o\n */\nfunction expect (o, p, v) {\n  if (!(p in o))\n    runtimeError(\"expected \"+JSON.stringify(o)+\" to have a '\"+p+\"' attribute.\");\n  if (arguments.length > 2 && o[p] !== v)\n    runtimeError(\"expected \"+p+\" attribute '\"+o[p]+\"' to equal '\"+v+\"'.\");\n}\n\nfunction noop () {  }\n\nfunction runtimeError () {\n  var errorStr = Array.prototype.join.call(arguments, \"\");\n  var e = new Error(errorStr);\n  Error.captureStackTrace(e, runtimeError);\n  throw e;\n}\n\n  function _alist (len) {\n    return _seq(len).map(() => [])\n  }\n\n  return {\n    construct: ShExValidator_constructor,\n    start: Start,\n    options: InterfaceOptions\n  };\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExValidatorCjsModule;\n"
    },
    {
      "id": 33,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/eval-threaded-nerr/eval-threaded-nerr.js",
      "name": "../eval-threaded-nerr/eval-threaded-nerr.js",
      "index": 23,
      "index2": 21,
      "size": 17810,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
      "issuerId": 32,
      "issuerName": "../shex-validator/shex-validator.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 32,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "name": "../shex-validator/shex-validator.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 366,
        "building": 21,
        "dependencies": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 32,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-validator/shex-validator.js",
          "module": "../shex-validator/shex-validator.js",
          "moduleName": "../shex-validator/shex-validator.js",
          "type": "cjs require",
          "userRequest": "@shexjs/eval-threaded-nerr",
          "loc": "239:48-85"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "const EvalThreadedNErrCjsModule = (function () {\nconst ShExTerm = require(\"@shexjs/term\");\nconst UNBOUNDED = -1;\n\nfunction vpEngine (schema, shape, index) {\n    var outerExpression = shape.expression;\n    return {\n      match:match\n    };\n\n    function match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, semActHandler, trace) {\n\n      /*\n       * returns: list of passing or failing threads (no heterogeneous lists)\n       */\n      function validateExpr (expr, thread) {\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return validateExpr(included, thread);\n        }\n\n        var constraintNo = constraintList.indexOf(expr);\n        var min = \"min\" in expr ? expr.min : 1;\n        var max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n\n        function validateRept (type, val) {\n          var repeated = 0, errOut = false;\n          var newThreads = [thread];\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          for (; repeated < max && !errOut; ++repeated) {\n            var inner = [];\n            for (var t = 0; t < newThreads.length; ++t) {\n              var newt = newThreads[t];\n              var sub = val(newt);\n              if (sub.length > 0 && sub[0].errors.length === 0) { // all subs pass or all fail\n                sub.forEach(newThread => {\n                  var solutions =\n                      \"expression\" in newt ? newt.expression.solutions : [];\n                  if (\"solution\" in newThread)\n                    solutions = solutions.concat(newThread.solution);\n                  delete newThread.solution;\n                  newThread.expression = extend({\n                    type: type,\n                    solutions: solutions\n                  }, minmax);\n                });\n              }\n              if (sub.length === 0 /* min:0 */ || sub[0].errors.length > 0)\n                return repeated < min ? sub : newThreads;\n              else\n                inner = inner.concat(sub);\n              // newThreads.expressions.push(sub);\n            }\n            newThreads = inner;\n          }\n          if (newThreads.length > 0 && newThreads[0].errors.length === 0 && \"semActs\" in expr) {\n            var passes = [];\n            var failures = [];\n            newThreads.forEach(newThread => {\n              const semActErrors = semActHandler.dispatchAll(expr.semActs, \"???\", newThread)\n              if (semActErrors.length === 0) {\n                passes.push(newThread)\n              } else {\n                [].push.apply(newThread.errors, semActErrors);\n                failures.push(newThread);\n              }\n            });\n            newThreads = passes.length > 0 ? passes : failures;\n          }\n          return newThreads;\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          var negated = \"negated\" in expr && expr.negated || max === 0;\n          if (negated)\n            min = max = Infinity;\n          if (thread.avail[constraintNo] === undefined)\n            thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].map(pair => pair.tNo);\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          var taken = thread.avail[constraintNo].splice(0, min);\n          var passed = negated ? taken.length === 0 : taken.length >= min;\n          var ret = [];\n          var matched = thread.matched;\n          if (passed) {\n            do {\n              const passFail = taken.reduce((acc, tripleNo) => {\n                const t = neighborhood[tripleNo]\n                const tested = {\n                  type: \"TestedTriple\",\n                  subject: t.subject,\n                  predicate: t.predicate,\n                  object: ldify(t.object)\n                }\n                var hit = constraintToTripleMapping[constraintNo].find(x => x.tNo === tripleNo);\n                if (hit.res && Object.keys(hit.res).length > 0)\n                  tested.referenced = hit.res;\n                const semActErrors = thread.errors.concat(\n                  \"semActs\" in expr\n                    ? semActHandler.dispatchAll(expr.semActs, t, tested)\n                    : []\n                )\n                if (semActErrors.length > 0)\n                  acc.fail.push({tripleNo, tested, semActErrors})\n                else\n                  acc.pass.push({tripleNo, tested, semActErrors})\n                return acc\n              }, {pass: [], fail: []})\n\n\n              // return an empty solution if min card was 0\n              if (passFail.fail.length === 0) {\n                // If we didn't take anything, fall back to old errors.\n                // Could do something fancy here with a semAct registration for negative matches.\n                const totalErrors = taken.length === 0 ? thread.errors.slice() : []\n                const myThread = makeThread(passFail.pass, totalErrors)\n                ret.push(myThread);\n              } else {\n                passFail.fail.forEach(\n                  f => ret.push(makeThread([f], f.semActErrors))\n                )\n              }\n\n              function makeThread (tests, errors) {\n                return {\n                  avail: thread.avail.map(a => { // copy parent thread's avail vector\n                    return a.slice();\n                  }),\n                  errors: errors,\n                  matched: matched.concat({\n                    tNos: tests.map(p => p.tripleNo)\n                  }),\n                  expression: extend(\n                    {\n                      type: \"TripleConstraintSolutions\",\n                      predicate: expr.predicate\n                    },\n                    \"valueExpr\" in expr ? { valueExpr: expr.valueExpr } : {},\n                    \"id\" in expr ? { productionLabel: expr.id } : {},\n                    minmax,\n                    {\n                      solutions: tests.map(p => p.tested)\n                    }\n                  )\n                }\n              }\n            } while ((function () {\n              if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                // build another thread.\n                taken.push(thread.avail[constraintNo].shift());\n                return true;\n              } else {\n                // no more threads\n                return false;\n              }\n            })());\n          } else {\n            var valueExpr = null;\n            if (typeof expr.valueExpr === \"string\") { // ShapeRef\n              valueExpr = expr.valueExpr;\n              if (ShExTerm.isBlank(valueExpr))\n                valueExpr = index.shapeExprs[valueExpr];\n            } else if (expr.valueExpr) {\n              valueExpr = extend({}, expr.valueExpr)\n            }\n            ret.push({\n              avail: thread.avail,\n              errors: thread.errors.concat([\n                extend({\n                  type: negated ? \"NegatedProperty\" : \"MissingProperty\",\n                  property: expr.predicate\n                }, valueExpr ? { valueExpr: valueExpr } : {})\n              ]),\n              matched: matched\n            });\n          }\n\n          return ret;\n        }\n\n        else if (expr.type === \"OneOf\") {\n          return validateRept(\"OneOfSolutions\", (th) => {\n            var accept = null;\n            var matched = [];\n            var failed = [];\n            expr.expressions.forEach(nested => {\n              var thcopy = {\n                avail: th.avail.map(a => { return a.slice(); }),\n                errors: th.errors,\n                matched: th.matched//.slice() ever needed??\n              };\n              var sub = validateExpr(nested, thcopy);\n              if (sub[0].errors.length === 0) { // all subs pass or all fail\n                matched = matched.concat(sub);\n                sub.forEach(newThread => {\n                  var expressions =\n                      \"solution\" in thcopy ? thcopy.solution.expressions : [];\n                  if (\"expression\" in newThread) // undefined for no matches on min card:0\n                    expressions = expressions.concat([newThread.expression]);\n                  delete newThread.expression;\n                  newThread.solution = {\n                    type: \"OneOfSolution\",\n                    expressions: expressions\n                  };\n                });\n              } else\n                failed = failed.concat(sub);\n            });\n            return matched.length > 0 ? matched : failed;\n          });\n        }\n\n        else if (expr.type === \"EachOf\") {\n          return homogenize(validateRept(\"EachOfSolutions\", (th) => {\n            // Iterate through nested expressions, exprThreads starts as [th].\n            return expr.expressions.reduce((exprThreads, nested) => {\n              // Iterate through current thread list composing nextThreads.\n              // Consider e.g.\n              // <S1> { <p1> . | <p2> .; <p3> . } / { <x> <p2> 2; <p3> 3 } (should pass)\n              // <S1> { <p1> .; <p2> . }          / { <s1> <p1> 1 }        (should fail)\n              return homogenize(exprThreads.reduce((nextThreads, exprThread) => {\n                var sub = validateExpr(nested, exprThread);\n                // Move newThread.expression into a hierarchical solution structure.\n                sub.forEach(newThread => {\n                  if (newThread.errors.length === 0) {\n                    var expressions =\n                        \"solution\" in exprThread ? exprThread.solution.expressions : [];\n                    if (\"expression\" in newThread) // undefined for no matches on min card:0\n                      expressions = expressions.concat([newThread.expression]);\n                    // console.warn(threadMatched(newThread), \" vs \", exprMatched(expressions));\n                    delete newThread.expression;\n                    newThread.solution = {\n                      type: \"EachOfSolution\",\n                      expressions: expressions // exprThread.expression + newThread.expression\n                    };\n                  }\n                });\n                return nextThreads.concat(sub);\n              }, []));\n            }, [th]);\n          }));\n        }\n\n        runtimeError(\"unexpected expr type: \" + expr.type);\n\n        function homogenize (list) {\n          return list.reduce((acc, elt) => {\n            if (elt.errors.length === 0) {\n              if (acc.errors) {\n                return { errors: false, l: [elt] };\n              } else {\n                return { errors: false, l: acc.l.concat(elt) };\n              }\n            } else {\n              if (acc.errors) {\n                return { errors: true, l: acc.l.concat(elt) };\n              } else {\n                return acc; }\n            }\n          }, {errors: true, l: []}).l;\n        }\n      }\n\n      var startingThread = {\n        avail:[],   // triples remaining by constraint number\n        matched:[], // triples matched in this thread\n        errors:[]   // errors encounted\n      };\n      if (!outerExpression)\n        return { }; // vapid match if no expression\n      var ret = validateExpr(outerExpression, startingThread);\n      // console.log(JSON.stringify(ret));\n      // note: don't return if ret.length === 1 because it might fail the unmatchedTriples test.\n      var longerChosen =\n          ret.reduce((ret, elt) => {\n            if (elt.errors.length > 0)\n              return ret;              // early return\n            var unmatchedTriples = {};\n            // Collect triples assigned to some constraint.\n            Object.keys(tripleToConstraintMapping).forEach(k => {\n              if (tripleToConstraintMapping[k] !== \"NO_TRIPLE_CONSTRAINT\")\n                unmatchedTriples[k] = tripleToConstraintMapping[k];\n            });\n            // Removed triples matched in this thread.\n            elt.matched.forEach(m => {\n              m.tNos.forEach(t => {\n                delete unmatchedTriples[t];\n              });\n            });\n            // Remaining triples are unaccounted for.\n            Object.keys(unmatchedTriples).forEach(t => {\n              elt.errors.push({\n                type: \"ExcessTripleViolation\",\n                triple: neighborhood[t],\n                constraint: constraintList[unmatchedTriples[t]]\n              });\n            });\n            return ret !== null ? ret : // keep first solution\n            // Accept thread with no unmatched triples.\n            Object.keys(unmatchedTriples).length > 0 ? null : elt;\n          }, null);\n      return longerChosen !== null ?\n        finish(longerChosen.expression, constraintList,\n               neighborhood, semActHandler) :\n        ret.length > 1 ? {\n          type: \"PossibleErrors\",\n          errors: ret.reduce((all, e) => {\n            return all.concat([e.errors]);\n          }, [])\n        } : ret[0];\n    }\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: ShExTerm.getLiteralValue(term) };\n          var dt = ShExTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = ShExTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function finish (fromValidatePoint, constraintList, neighborhood, semActHandler) {\n      function _dive (solns) {\n        if (solns.type === \"OneOfSolutions\" ||\n            solns.type === \"EachOfSolutions\") {\n          solns.solutions.forEach(s => {\n            s.expressions.forEach(e => {\n              _dive(e);\n            });\n          });\n        } else if (solns.type === \"TripleConstraintSolutions\") {\n          solns.solutions = solns.solutions.map(x => {\n            if (x.type === \"TestedTriple\") // already done\n              return x; // c.f. validation/3circularRef1_pass-open\n            var t = neighborhood[x.tripleNo];\n            var expr = constraintList[x.constraintNo];\n            var ret = {\n              type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)\n            };\n            function diver (focus, shapeLabel, dive) {\n              var sub = dive(focus, shapeLabel);\n              if (\"errors\" in sub) {\n                // console.dir(sub);\n                var err = {\n                  type: \"ReferenceError\", focus: focus,\n                  shape: shapeLabel\n                };\n                if (typeof shapeLabel === \"string\" && ShExTerm.isBlank(shapeLabel))\n                  err.referencedShape = shape;\n                err.errors = sub;\n                return [err];\n              }\n              if ((\"solution\" in sub || \"solutions\" in sub)&& Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                  sub.type === \"Recursion\")\n                ret.referenced = sub; // !!! needs to aggregate errors and solutions\n              return [];\n            }\n            function diveRecurse (focus, shapeLabel) {\n              return diver(focus, shapeLabel, recurse);\n            }\n            function diveDirect (focus, shapeLabel) {\n              return diver(focus, shapeLabel, direct);\n            }\n            var subErrors = \"valueExpr\" in expr ?\n                checkValueExpr(expr.inverse ? t.subject : t.object, expr.valueExpr, diveRecurse, diveDirect) :\n                [];\n            if (subErrors.length === 0 && \"semActs\" in expr)\n              [].push.apply(subErrors, semActHandler.dispatchAll(expr.semActs, t, ret))\n            if (subErrors.length > 0) {\n              fromValidatePoint.errors = fromValidatePoint.errors || [];\n              fromValidatePoint.errors = fromValidatePoint.errors.concat(subErrors);\n            }\n            return ret;\n          });\n        } else {\n          throw Error(\"unexpected expr type in \" + JSON.stringify(solns));\n        }\n      }\n      if (Object.keys(fromValidatePoint).length > 0) // guard against {}\n        _dive(fromValidatePoint);\n      if (\"semActs\" in shape)\n        fromValidatePoint.semActs = shape.semActs;\n      return fromValidatePoint;\n    }\n  }\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: N3Util.getLiteralValue(term) };\n          var dt = N3Util.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = N3Util.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\nreturn {\n  name: \"eval-threaded-nerr\",\n  description: \"emulation of regular expression engine with error permutations\",\n  compile: vpEngine\n};\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = EvalThreadedNErrCjsModule;\n"
    },
    {
      "id": 34,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
      "name": "../shex-api/shex-api.js",
      "index": 24,
      "index2": 47,
      "size": 11297,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 22,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        }
      ],
      "profile": {
        "factory": 25,
        "building": 243,
        "dependencies": 215
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 22,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/api",
          "loc": "8:20-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "// **ShExLoader** return promise to load ShExC, ShExJ and N3 (Turtle) files.\n\nconst ShExApiCjsModule = function (config) {\n\n  const ShExUtil = require(\"@shexjs/util\");\n  const ShExParser = require(\"@shexjs/parser\");\n\n  const api = { load: LoadPromise, loadExtensions: LoadExtensions, GET: GET, loadShExImports_NotUsed: loadShExImports_NotUsed };\n  return api\n  \n  async function GET (url, mediaType) {\n    var m;\n    return (m = url.match(\"^data:([^,]+),(.*)$\"))\n      ? Promise.resolve({text: m[2], url: m[0]}) // Read from data: URL\n      : (url.match(\"^(blob:)?[a-z]+://.\"))\n      ? myHttpRequest(url, mediaType) // whatever fetch handles\n      : (() => { throw Error(`Don't know how to fetch ${url}`) })()\n\n    async function myHttpRequest(url, mediaType) {\n      if (typeof config.fetch !== \"function\")\n        throw Error(`Unable to fetch ${url} with fetch=${config.fetch}`)\n      let resp\n      try {\n        resp = await config.fetch(url, {\n          headers: {\n            'Accept': 'text/shex,text/turtle,*/*'\n          }\n        })\n      } catch (e) {\n        // DNS failure\n        // no route to host\n        // connection refused\n        throw Error(`GET <${url}> network failure: ${e.message}`)\n      }\n      if (!resp.ok)\n        throw Error(`GET <${url}> failed: ${resp.status} ${resp.statusText}`)\n      const text = await resp.text()\n      return {text, url}\n    }\n  }\n\n  function loadList (src, metaList, mediaType, parserWrapper, target, options, loadImports) {\n    return src.map(\n      async p =>\n        typeof p === \"object\" ? mergeSchema(p) : await loadParseMergeSchema(p)\n    )\n\n    async function mergeSchema (obj) {\n      var meta = addMeta(obj.url, mediaType)\n      try {\n        ShExUtil.merge(target, obj.schema, true, true)\n        meta._prefixes = target._prefixes || {}\n        meta.base = target._base\n        loadImports(obj.schema)\n        return [mediaType, obj.url]\n      } catch (e) {\n        var e2 = Error(\"error merging schema object \" + obj.schema + \": \" + e)\n        e2.stack = e.stack\n        throw e2\n      }\n    }\n\n    async function loadParseMergeSchema (p) {\n      return api.GET(p, mediaType).then(function (loaded) {\n        return parserWrapper(loaded.text, mediaType, loaded.url, target,\n                             addMeta(loaded.url, mediaType), options, loadImports)\n      })\n    }\n\n    function addMeta (url, mediaType) {\n      var meta = {\n        mediaType: mediaType,\n        url: url,\n        base: url,\n        prefixes: {}\n      }\n      metaList.push(meta)\n      return meta\n    }\n  }\n\n  /* LoadPromise - load shex and json files into a single Schema and turtle into\n   * a graph (Data).\n   */\n  async function LoadPromise (shex, json, turtle, jsonld, schemaOptions = {}, dataOptions = {}) {\n    var returns = {\n      schema: ShExUtil.emptySchema(),\n      data: new config.rdfjs.Store(),\n      schemaMeta: [],\n      dataMeta: []\n    }\n    var promises = []\n    var schemasSeen = shex.concat(json).map(p => {\n      // might be already loaded objects with a url property.\n      return typeof p === \"object\" ? p.url : p\n    })\n    var transform = null\n    if (schemaOptions && \"iriTransform\" in schemaOptions) {\n      transform = schemaOptions.iriTransform\n      delete schemaOptions.iriTransform\n    }\n\n    var allLoaded = DynamicPromise()\n    function loadImports (schema) {\n      if (!(\"imports\" in schema))\n        return schema\n      if (schemaOptions.keepImports) {\n        return schema\n      }\n      var ret = Object.assign({}, schema)\n      var imports = ret.imports\n      delete ret.imports\n      schema.imports.map(function (i) {\n        return transform ? transform(i) : i\n      }).filter(function (i) {\n        return schemasSeen.indexOf(i) === -1\n      }).map(i => {\n        schemasSeen.push(i)\n        allLoaded.add(api.GET(i).then(function (loaded) {\n          var meta = {\n            // mediaType: mediaType,\n            url: loaded.url,\n            base: loaded.url,\n            prefixes: {}\n          }\n          // metaList.push(meta)\n          return parseShExC(loaded.text, \"text/shex\", loaded.url,\n                            returns.schema, meta, schemaOptions, loadImports)\n        })); // addAfter would be after invoking schema.\n      })\n      return ret\n    }\n\n    // gather all the potentially remote inputs\n    // If there's a termResolver,\n    if (schemaOptions && \"termResolver\" in schemaOptions) {\n      returns.resolver = new config.rdfjs.Store()\n      returns.resolverMeta = []\n      // load the resolver then the schema sources,\n      promises = [Promise.all(loadList(schemaOptions.termResolver, returns.resolverMeta, \"text/turtle\",\n                                       parseTurtle, returns.resolver, dataOptions)).\n                  then(function (x) {\n                    return Promise.all(loadList(shex, returns.schemaMeta, \"text/shex\",\n                                                parseShExC, returns.schema, schemaOptions, loadImports))\n                  })]\n      schemaOptions.termResolver = ShExParser.dbTermResolver(returns.resolver)\n    } else {\n      // else just load the schema sources.\n      promises = loadList(shex, returns.schemaMeta, \"text/shex\",\n                          parseShExC, returns.schema, schemaOptions, loadImports)\n    }\n    promises = promises.\n      concat(loadList(json, returns.schemaMeta, \"text/json\",\n                      parseShExJ, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(turtle, returns.dataMeta, \"text/turtle\",\n                      parseTurtle, returns.data, dataOptions)).\n      concat(loadList(jsonld, returns.dataMeta, \"application/ld+json\",\n                      parseJSONLD, returns.data, dataOptions))\n    return allLoaded.all(promises).then(function (resources) {\n      if (returns.schemaMeta.length > 0)\n        ShExUtil.isWellDefined(returns.schema)\n      return returns\n    })\n  }\n\n  function DynamicPromise () {\n    var promises = []\n    var results = []\n    var completedPromises = 0\n    var resolveSelf, rejectSelf\n    var self = new Promise(function (resolve, reject) {\n      resolveSelf = resolve; rejectSelf = reject\n    })\n    self.all = function (pz) {\n      pz.forEach(function (promise, index) {\n        promises.push(promise)\n        addThen(promise, index)\n      })\n      return self\n    }\n    self.add = function (promise) {\n      promises.push(promise)\n      addThen(promise, promises.length - 1)\n      return self\n    }\n    return self\n\n    function addThen (promise, index) {\n      promise.then(function (value) {\n        results[index] = value\n        ++completedPromises\n        if(completedPromises === promises.length) {\n          resolveSelf(results)\n        }\n      }).catch(function (error) {\n        rejectSelf(error)\n      })\n    }\n  }\n\n  function parseShExC (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    var parser = schemaOptions && \"parser\" in schemaOptions ?\n        schemaOptions.parser :\n        ShExParser.construct(url, {}, schemaOptions)\n    try {\n      var s = parser.parse(text)\n      // !! horrible hack until I set a variable to know if there's a BASE.\n      if (s.base === url) delete s.base\n      meta.prefixes = s._prefixes || {}\n      meta.base = s._base || meta.base\n      ShExUtil.merge(schema, loadImports(s), false, true)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      e.message = \"error parsing ShEx \" + url + \": \" + e.message\n      return Promise.reject(e)\n    }\n  }\n\n  function loadShExImports_NotUsed (from, parser, transform) {\n    var schemasSeen = [from]\n    var ret = { type: \"Schema\" }\n    return api.GET(from).then(load999Imports).then(function () {\n      ShExUtil.isWellDefined(ret)\n      return ret\n    })\n    function load999Imports (loaded) {\n      var schema = parser.parse(loaded.text)\n      var imports = schema.imports\n      delete schema.imports\n      ShExUtil.merge(ret, schema, false, true)\n      if (imports) {\n        var rest = imports\n            .map(function (i) {\n              return transform ? transform(i) : i\n            }).\n            filter(function (i) {\n              return schemasSeen.indexOf(i) === -1\n            })\n        return Promise.all(rest.map(i => {\n          schemasSeen.push(i)\n          return api.GET(i).then(load999Imports)\n        })).then(a => {\n          return null\n        })\n      } else {\n        return null\n      }\n    }\n  }\n\n  function parseShExJ (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    try {\n      var s = ShExUtil.ShExJtoAS(JSON.parse(text))\n      ShExUtil.merge(schema, s, true, true)\n      meta.prefixes = schema._prefixes\n      meta.base = schema.base\n      loadImports(s)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      var e2 = Error(\"error parsing JSON \" + url + \": \" + e)\n      // e2.stack = e.stack\n      return Promise.reject(e2)\n    }\n  }\n\n  function parseTurtle (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"}).\n        parse(text,\n              function (error, triple, prefixes) {\n                if (prefixes) {\n                  meta.prefixes = prefixes\n                  // data.addPrefixes(prefixes)\n                }\n                if (error) {\n                  reject(\"error parsing \" + url + \": \" + error)\n                } else if (triple) {\n                  data.addQuad(triple)\n                } else {\n                  meta.base = this._base\n                  resolve([mediaType, url])\n                }\n              })\n    })\n  }\n\n  /* parseTurtle999 - a variant of parseTurtle with no callback.\n   * so, which is \"better\"?\n   */\n  function parseTurtle999 (text, mediaType, url, data, meta, dataOptions) {\n    try {\n      var p = new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"})\n      var triples = p.parse(text)\n      meta.prefixes = p._prefixes\n      meta.base = p._base\n      data.addPrefixes(p._prefixes)\n      data.addTriples(triples)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      return Promise.reject(Error(\"error parsing \" + url + \": \" + e))\n    }\n  }\n\n  function parseJSONLD (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      var struct = JSON.parse(text)\n      config.jsonld.toRDF(struct, {format: \"application/nquads\", base: url}, function (lderr, nquads) {\n        if (lderr) {\n          reject(\"error parsing JSON-ld \" + url + \": \" + lderr)\n        } else {\n          meta.prefixes = {}; // @@ take from @context?\n          meta.base = url;    // @@ take from @context.base? (or vocab?)\n          resolve(parseTurtle(nquads, mediaType, url, data, meta))\n        }\n      })\n    })\n  }\n\n  function LoadExtensions (globs) {\n    return globs.reduce(\n      (list, glob) =>\n        list.concat(require(\"glob\").glob.sync(glob))\n      , []).\n      reduce(function (ret, path) {\n        try {\n\t  var t = require(path)\n\t  ret[t.url] = t\n\t  return ret\n        } catch (e) {\n\t  console.warn(\"ShEx extension \\\"\" + moduleDir + \"\\\" not loadable: \" + e)\n\t  return ret\n        }\n      }, {})\n  }\n\n}\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExApiCjsModule\n"
    },
    {
      "id": 35,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "name": "../shex-parser/lib/ShExJison.js",
      "index": 26,
      "index2": 23,
      "size": 228557,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
      "issuerId": 15,
      "issuerName": "../shex-parser/shex-parser.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 15,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 10,
        "building": 166,
        "dependencies": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 15,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "module": "../shex-parser/shex-parser.js",
          "moduleName": "../shex-parser/shex-parser.js",
          "type": "cjs require",
          "userRequest": "./lib/ShExJison",
          "loc": "4:18-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShExJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[7,19,20,21,22,24,25,32,195,217,218],$V1=[1,27],$V2=[1,31],$V3=[1,26],$V4=[1,30],$V5=[1,29],$V6=[2,12],$V7=[2,13],$V8=[2,14],$V9=[2,15],$Va=[7,19,20,21,22,24,25,32,217,218],$Vb=[1,37],$Vc=[1,40],$Vd=[1,39],$Ve=[2,24],$Vf=[2,25],$Vg=[20,22,28,71,73,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vh=[2,63],$Vi=[1,52],$Vj=[1,53],$Vk=[1,54],$Vl=[20,22,28,41,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vm=[2,241],$Vn=[2,242],$Vo=[1,56],$Vp=[1,59],$Vq=[1,58],$Vr=[2,263],$Vs=[2,264],$Vt=[2,271],$Vu=[2,265],$Vv=[2,266],$Vw=[2,16],$Vx=[2,18],$Vy=[2,19],$Vz=[2,22],$VA=[20,22,29,217],$VB=[2,20],$VC=[20,22,28,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$VD=[1,80],$VE=[2,32],$VF=[2,33],$VG=[2,34],$VH=[121,127,129,190,221],$VI=[2,141],$VJ=[1,106],$VK=[1,108],$VL=[1,102],$VM=[1,92],$VN=[1,97],$VO=[1,98],$VP=[1,99],$VQ=[1,105],$VR=[1,112],$VS=[1,113],$VT=[1,114],$VU=[1,115],$VV=[1,116],$VW=[1,117],$VX=[1,118],$VY=[1,119],$VZ=[1,120],$V_=[1,109],$V$=[1,107],$V01=[2,64],$V11=[1,122],$V21=[1,123],$V31=[1,124],$V41=[1,130],$V51=[1,131],$V61=[53,55],$V71=[2,93],$V81=[2,94],$V91=[195,197],$Va1=[1,146],$Vb1=[1,149],$Vc1=[1,148],$Vd1=[2,17],$Ve1=[1,162],$Vf1=[1,165],$Vg1=[1,164],$Vh1=[7,19,20,21,22,24,25,32,53,217,218],$Vi1=[2,49],$Vj1=[7,19,20,21,22,24,25,32,53,55,217,218],$Vk1=[2,56],$Vl1=[2,38],$Vm1=[2,71],$Vn1=[2,76],$Vo1=[2,73],$Vp1=[1,192],$Vq1=[1,193],$Vr1=[1,194],$Vs1=[1,197],$Vt1=[1,200],$Vu1=[2,79],$Vv1=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,191,195,217,218,221],$Vw1=[2,97],$Vx1=[7,19,20,21,22,24,25,32,53,55,191,195,217,218],$Vy1=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,191,195,217,218],$Vz1=[7,19,20,21,22,24,25,32,53,55,81,82,83,103,104,105,106,121,127,129,190,191,195,217,218,221],$VA1=[2,110],$VB1=[2,109],$VC1=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,114,115,116,117,118,119,191,195,217,218],$VD1=[2,104],$VE1=[2,103],$VF1=[1,215],$VG1=[1,217],$VH1=[1,219],$VI1=[1,218],$VJ1=[2,114],$VK1=[2,115],$VL1=[2,116],$VM1=[2,112],$VN1=[2,240],$VO1=[20,22,29,73,83,102,110,111,166,186,206,207,208,209,210,211,212,213,214,215,217],$VP1=[2,185],$VQ1=[7,19,20,21,22,24,25,32,53,55,114,115,116,117,118,119,191,195,217,218],$VR1=[2,106],$VS1=[2,120],$VT1=[2,267],$VU1=[2,268],$VV1=[2,269],$VW1=[2,270],$VX1=[1,227],$VY1=[1,228],$VZ1=[1,229],$V_1=[1,230],$V$1=[102,110,111,208,209,210,211],$V02=[2,37],$V12=[2,41],$V22=[2,44],$V32=[2,47],$V42=[2,95],$V52=[2,232],$V62=[2,233],$V72=[2,234],$V82=[1,279],$V92=[1,281],$Va2=[1,275],$Vb2=[1,265],$Vc2=[1,270],$Vd2=[1,271],$Ve2=[1,272],$Vf2=[1,278],$Vg2=[1,282],$Vh2=[1,280],$Vi2=[1,286],$Vj2=[1,287],$Vk2=[1,288],$Vl2=[1,294],$Vm2=[1,295],$Vn2=[2,23],$Vo2=[2,26],$Vp2=[2,55],$Vq2=[2,62],$Vr2=[2,67],$Vs2=[2,70],$Vt2=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,217,218],$Vu2=[2,89],$Vv2=[2,90],$Vw2=[2,35],$Vx2=[2,39],$Vy2=[2,75],$Vz2=[2,72],$VA2=[2,77],$VB2=[2,74],$VC2=[7,19,20,21,22,24,25,32,53,55,103,104,105,106,191,195,217,218],$VD2=[1,340],$VE2=[1,348],$VF2=[1,349],$VG2=[1,350],$VH2=[1,356],$VI2=[1,357],$VJ2=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,195,217,218,221],$VK2=[2,230],$VL2=[7,19,20,21,22,24,25,32,53,55,195,217,218],$VM2=[1,365],$VN2=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,195,217,218],$VO2=[2,108],$VP2=[2,113],$VQ2=[2,100],$VR2=[1,375],$VS2=[2,101],$VT2=[2,102],$VU2=[2,107],$VV2=[20,22,71,162,166,201,217],$VW2=[2,169],$VX2=[2,143],$VY2=[1,390],$VZ2=[1,389],$V_2=[1,395],$V$2=[1,399],$V03=[1,398],$V13=[1,397],$V23=[1,404],$V33=[1,406],$V43=[1,407],$V53=[1,403],$V63=[1,405],$V73=[20,22,217,218],$V83=[1,419],$V93=[1,425],$Va3=[1,414],$Vb3=[1,418],$Vc3=[1,428],$Vd3=[1,429],$Ve3=[1,430],$Vf3=[1,411],$Vg3=[1,417],$Vh3=[1,431],$Vi3=[1,432],$Vj3=[1,437],$Vk3=[1,438],$Vl3=[1,439],$Vm3=[1,440],$Vn3=[1,433],$Vo3=[1,434],$Vp3=[1,435],$Vq3=[1,436],$Vr3=[1,424],$Vs3=[2,119],$Vt3=[2,124],$Vu3=[2,126],$Vv3=[2,127],$Vw3=[2,128],$Vx3=[2,255],$Vy3=[2,256],$Vz3=[2,257],$VA3=[2,258],$VB3=[2,125],$VC3=[2,36],$VD3=[2,45],$VE3=[2,42],$VF3=[2,48],$VG3=[2,43],$VH3=[1,472],$VI3=[2,46],$VJ3=[1,508],$VK3=[1,542],$VL3=[1,543],$VM3=[1,544],$VN3=[1,547],$VO3=[2,50],$VP3=[2,57],$VQ3=[2,66],$VR3=[2,68],$VS3=[2,78],$VT3=[53,55,72],$VU3=[1,607],$VV3=[53,55,72,81,82,83,121,127,129,190,191,195,221],$VW3=[53,55,72,191,195],$VX3=[53,55,72,98,99,100,103,104,105,106,191,195],$VY3=[53,55,72,81,82,83,103,104,105,106,121,127,129,190,191,195,221],$VZ3=[53,55,72,103,104,105,106,114,115,116,117,118,119,191,195],$V_3=[53,55,72,114,115,116,117,118,119,191,195],$V$3=[53,72],$V04=[7,19,20,21,22,24,25,32,53,55,81,82,83,121,127,129,190,217,218,221],$V14=[2,99],$V24=[2,98],$V34=[2,229],$V44=[1,649],$V54=[1,651],$V64=[1,652],$V74=[1,648],$V84=[1,650],$V94=[2,96],$Va4=[2,136],$Vb4=[2,111],$Vc4=[2,105],$Vd4=[2,117],$Ve4=[2,118],$Vf4=[2,148],$Vg4=[2,149],$Vh4=[1,669],$Vi4=[2,150],$Vj4=[123,137],$Vk4=[2,155],$Vl4=[2,156],$Vm4=[2,158],$Vn4=[1,672],$Vo4=[1,673],$Vp4=[20,22,166,201,217],$Vq4=[2,177],$Vr4=[1,681],$Vs4=[123,137,142,143],$Vt4=[2,167],$Vu4=[20,22,121,127,129,190,217,218,221],$Vv4=[20,22,121,127,129,166,190,201,217,221],$Vw4=[2,238],$Vx4=[2,239],$Vy4=[2,184],$Vz4=[1,716],$VA4=[20,22,29,73,83,102,110,111,166,179,186,206,207,208,209,210,211,212,213,214,215,217],$VB4=[2,235],$VC4=[2,236],$VD4=[2,237],$VE4=[2,248],$VF4=[2,251],$VG4=[2,245],$VH4=[2,246],$VI4=[2,247],$VJ4=[2,253],$VK4=[2,254],$VL4=[2,259],$VM4=[2,260],$VN4=[2,261],$VO4=[2,262],$VP4=[20,22,29,73,83,102,110,111,113,166,179,186,206,207,208,209,210,211,212,213,214,215,217],$VQ4=[1,748],$VR4=[1,795],$VS4=[1,850],$VT4=[1,860],$VU4=[1,896],$VV4=[1,932],$VW4=[2,69],$VX4=[53,55,72,103,104,105,106,191,195],$VY4=[53,55,72,81,82,83,121,127,129,190,195,221],$VZ4=[53,55,72,195],$V_4=[1,954],$V$4=[53,55,72,98,99,100,103,104,105,106,195],$V05=[1,964],$V15=[1,1001],$V25=[1,1037],$V35=[2,231],$V45=[1,1048],$V55=[1,1050],$V65=[1,1051],$V75=[1,1049],$V85=[20,22,102,110,111,166,206,207,208,209,210,211,212,213,214,215,217],$V95=[1,1074],$Va5=[1,1076],$Vb5=[1,1077],$Vc5=[1,1075],$Vd5=[1,1100],$Ve5=[1,1102],$Vf5=[1,1103],$Vg5=[1,1101],$Vh5=[2,137],$Vi5=[2,151],$Vj5=[2,153],$Vk5=[2,157],$Vl5=[2,159],$Vm5=[2,160],$Vn5=[2,164],$Vo5=[2,166],$Vp5=[2,171],$Vq5=[2,172],$Vr5=[1,1132],$Vs5=[1,1134],$Vt5=[1,1135],$Vu5=[1,1131],$Vv5=[1,1133],$Vw5=[1,1145],$Vx5=[2,225],$Vy5=[2,243],$Vz5=[2,244],$VA5=[1,1147],$VB5=[1,1149],$VC5=[1,1151],$VD5=[20,22,29,73,83,102,110,111,166,180,186,206,207,208,209,210,211,212,213,214,215,217],$VE5=[1,1155],$VF5=[1,1161],$VG5=[1,1164],$VH5=[1,1165],$VI5=[1,1166],$VJ5=[1,1154],$VK5=[1,1167],$VL5=[1,1168],$VM5=[1,1173],$VN5=[1,1174],$VO5=[1,1175],$VP5=[1,1176],$VQ5=[1,1169],$VR5=[1,1170],$VS5=[1,1171],$VT5=[1,1172],$VU5=[1,1160],$VV5=[2,249],$VW5=[2,252],$VX5=[2,129],$VY5=[1,1210],$VZ5=[1,1216],$V_5=[1,1248],$V$5=[1,1254],$V06=[1,1313],$V16=[1,1360],$V26=[53,55,72,81,82,83,121,127,129,190,221],$V36=[53,55,72,98,99,100,103,104,105,106],$V46=[1,1436],$V56=[1,1483],$V66=[2,226],$V76=[2,227],$V86=[2,228],$V96=[7,19,20,21,22,24,25,32,53,55,81,82,83,113,121,127,129,190,191,195,217,218,221],$Va6=[7,19,20,21,22,24,25,32,53,55,113,191,195,217,218],$Vb6=[7,19,20,21,22,24,25,32,53,55,98,99,100,103,104,105,106,113,191,195,217,218],$Vc6=[2,154],$Vd6=[2,152],$Ve6=[2,161],$Vf6=[2,165],$Vg6=[2,162],$Vh6=[2,163],$Vi6=[20,22,28,45,71,73,81,82,83,87,98,99,100,103,104,105,106,114,115,116,117,118,119,121,127,129,166,190,217,221],$Vj6=[1,1543],$Vk6=[72,137],$Vl6=[1,1546],$Vm6=[1,1547],$Vn6=[72,137,142,143],$Vo6=[2,208],$Vp6=[1,1563],$Vq6=[20,22,29,73,83,102,110,111,166,179,180,186,206,207,208,209,210,211,212,213,214,215,217],$Vr6=[20,22,29,73,83,102,110,111,113,166,179,180,186,206,207,208,209,210,211,212,213,214,215,217],$Vs6=[2,250],$Vt6=[1,1601],$Vu6=[1,1667],$Vv6=[1,1669],$Vw6=[1,1670],$Vx6=[1,1668],$Vy6=[1,1693],$Vz6=[1,1695],$VA6=[1,1696],$VB6=[1,1694],$VC6=[1,1719],$VD6=[1,1721],$VE6=[1,1722],$VF6=[1,1720],$VG6=[1,1766],$VH6=[1,1772],$VI6=[1,1804],$VJ6=[1,1810],$VK6=[1,1825],$VL6=[1,1827],$VM6=[1,1828],$VN6=[1,1826],$VO6=[1,1851],$VP6=[1,1853],$VQ6=[1,1854],$VR6=[1,1852],$VS6=[1,1877],$VT6=[1,1879],$VU6=[1,1880],$VV6=[1,1878],$VW6=[1,1924],$VX6=[1,1930],$VY6=[1,1962],$VZ6=[1,1968],$V_6=[123,137,142,143,191,195],$V$6=[2,174],$V07=[1,1986],$V17=[1,1987],$V27=[1,1988],$V37=[1,1989],$V47=[123,137,142,143,158,159,160,161,191,195],$V57=[2,40],$V67=[53,123,137,142,143,158,159,160,161,191,195],$V77=[2,53],$V87=[53,55,123,137,142,143,158,159,160,161,191,195],$V97=[2,60],$Va7=[1,2018],$Vb7=[1,2059],$Vc7=[1,2092],$Vd7=[1,2094],$Ve7=[1,2095],$Vf7=[1,2093],$Vg7=[1,2118],$Vh7=[1,2120],$Vi7=[1,2121],$Vj7=[1,2119],$Vk7=[1,2145],$Vl7=[1,2147],$Vm7=[1,2148],$Vn7=[1,2146],$Vo7=[1,2172],$Vp7=[1,2174],$Vq7=[1,2175],$Vr7=[1,2173],$Vs7=[1,2198],$Vt7=[1,2200],$Vu7=[1,2201],$Vv7=[1,2199],$Vw7=[1,2225],$Vx7=[1,2227],$Vy7=[1,2228],$Vz7=[1,2226],$VA7=[1,2300],$VB7=[53,55,72,81,82,83,113,121,127,129,190,191,195,221],$VC7=[53,55,72,113,191,195],$VD7=[53,55,72,98,99,100,103,104,105,106,113,191,195],$VE7=[1,2414],$VF7=[2,175],$VG7=[2,179],$VH7=[2,180],$VI7=[2,181],$VJ7=[2,182],$VK7=[2,51],$VL7=[2,58],$VM7=[2,65],$VN7=[2,85],$VO7=[2,81],$VP7=[2,87],$VQ7=[1,2497],$VR7=[2,84],$VS7=[53,55,81,82,83,103,104,105,106,121,123,127,129,137,142,143,158,159,160,161,190,191,195,221],$VT7=[53,55,81,82,83,121,123,127,129,137,142,143,158,159,160,161,190,191,195,221],$VU7=[53,55,103,104,105,106,114,115,116,117,118,119,123,137,142,143,158,159,160,161,191,195],$VV7=[53,55,98,99,100,103,104,105,106,123,137,142,143,158,159,160,161,191,195],$VW7=[2,91],$VX7=[2,92],$VY7=[53,55,114,115,116,117,118,119,123,137,142,143,158,159,160,161,191,195],$VZ7=[1,2551],$V_7=[1,2557],$V$7=[1,2640],$V08=[1,2673],$V18=[1,2675],$V28=[1,2676],$V38=[1,2674],$V48=[1,2699],$V58=[1,2701],$V68=[1,2702],$V78=[1,2700],$V88=[1,2726],$V98=[1,2728],$Va8=[1,2729],$Vb8=[1,2727],$Vc8=[1,2753],$Vd8=[1,2755],$Ve8=[1,2756],$Vf8=[1,2754],$Vg8=[1,2779],$Vh8=[1,2781],$Vi8=[1,2782],$Vj8=[1,2780],$Vk8=[1,2806],$Vl8=[1,2808],$Vm8=[1,2809],$Vn8=[1,2807],$Vo8=[1,2853],$Vp8=[1,2886],$Vq8=[1,2888],$Vr8=[1,2889],$Vs8=[1,2887],$Vt8=[1,2912],$Vu8=[1,2914],$Vv8=[1,2915],$Vw8=[1,2913],$Vx8=[1,2939],$Vy8=[1,2941],$Vz8=[1,2942],$VA8=[1,2940],$VB8=[1,2966],$VC8=[1,2968],$VD8=[1,2969],$VE8=[1,2967],$VF8=[1,2992],$VG8=[1,2994],$VH8=[1,2995],$VI8=[1,2993],$VJ8=[1,3019],$VK8=[1,3021],$VL8=[1,3022],$VM8=[1,3020],$VN8=[123,137,142,143,195],$VO8=[1,3044],$VP8=[2,54],$VQ8=[2,61],$VR8=[2,80],$VS8=[2,86],$VT8=[2,82],$VU8=[2,88],$VV8=[53,55,103,104,105,106,123,137,142,143,158,159,160,161,191,195],$VW8=[1,3068],$VX8=[72,137,142,143,191,195],$VY8=[1,3077],$VZ8=[1,3078],$V_8=[1,3079],$V$8=[1,3080],$V09=[72,137,142,143,158,159,160,161,191,195],$V19=[53,72,137,142,143,158,159,160,161,191,195],$V29=[53,55,72,137,142,143,158,159,160,161,191,195],$V39=[1,3109],$V49=[1,3178],$V59=[1,3184],$V69=[1,3264],$V79=[1,3270],$V89=[2,176],$V99=[2,52],$Va9=[1,3358],$Vb9=[2,59],$Vc9=[1,3391],$Vd9=[2,83],$Ve9=[2,173],$Vf9=[1,3436],$Vg9=[53,55,72,81,82,83,103,104,105,106,121,127,129,137,142,143,158,159,160,161,190,191,195,221],$Vh9=[53,55,72,81,82,83,121,127,129,137,142,143,158,159,160,161,190,191,195,221],$Vi9=[53,55,72,103,104,105,106,114,115,116,117,118,119,137,142,143,158,159,160,161,191,195],$Vj9=[53,55,72,98,99,100,103,104,105,106,137,142,143,158,159,160,161,191,195],$Vk9=[53,55,72,114,115,116,117,118,119,137,142,143,158,159,160,161,191,195],$Vl9=[1,3467],$Vm9=[1,3469],$Vn9=[1,3470],$Vo9=[1,3468],$Vp9=[1,3493],$Vq9=[1,3495],$Vr9=[1,3496],$Vs9=[1,3494],$Vt9=[1,3520],$Vu9=[1,3522],$Vv9=[1,3523],$Vw9=[1,3521],$Vx9=[1,3624],$Vy9=[1,3626],$Vz9=[1,3627],$VA9=[1,3625],$VB9=[1,3665],$VC9=[1,3707],$VD9=[72,137,142,143,195],$VE9=[1,3737],$VF9=[53,55,72,103,104,105,106,137,142,143,158,159,160,161,191,195],$VG9=[1,3761],$VH9=[1,3797],$VI9=[1,3799],$VJ9=[1,3800],$VK9=[1,3798],$VL9=[1,3823],$VM9=[1,3825],$VN9=[1,3826],$VO9=[1,3824],$VP9=[1,3850],$VQ9=[1,3852],$VR9=[1,3853],$VS9=[1,3851],$VT9=[1,3877],$VU9=[1,3879],$VV9=[1,3880],$VW9=[1,3878],$VX9=[1,3903],$VY9=[1,3905],$VZ9=[1,3906],$V_9=[1,3904],$V$9=[1,3930],$V0a=[1,3932],$V1a=[1,3933],$V2a=[1,3931],$V3a=[113,123,137,142,143,191,195],$V4a=[1,3978],$V5a=[1,4002],$V6a=[1,4044],$V7a=[1,4077],$V8a=[1,4182],$V9a=[1,4225],$Vaa=[1,4227],$Vba=[1,4228],$Vca=[1,4226],$Vda=[1,4266],$Vea=[1,4308],$Vfa=[1,4364],$Vga=[72,113,137,142,143,191,195],$Vha=[1,4419],$Via=[1,4443],$Vja=[1,4473],$Vka=[1,4519],$Vla=[1,4591],$Vma=[1,4640];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shexDoc\":3,\"initParser\":4,\"Qdirective_E_Star\":5,\"Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt\":6,\"EOF\":7,\"directive\":8,\"O_QnotStartAction_E_Or_QstartActions_E_C\":9,\"notStartAction\":10,\"startActions\":11,\"Qstatement_E_Star\":12,\"statement\":13,\"O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C\":14,\"baseDecl\":15,\"prefixDecl\":16,\"importDecl\":17,\"labelDecl\":18,\"IT_BASE\":19,\"IRIREF\":20,\"IT_PREFIX\":21,\"PNAME_NS\":22,\"iri\":23,\"IT_IMPORT\":24,\"IT_LABEL\":25,\"O_Qiri_E_Or_QGT_LBRACKET_E_S_Qiri_E_Star_S_QGT_RBRACKET_E_C\":26,\"Qiri_E_Star\":27,\"[\":28,\"]\":29,\"start\":30,\"shapeExprDecl\":31,\"IT_start\":32,\"=\":33,\"shapeAnd\":34,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star\":35,\"QcodeDecl_E_Plus\":36,\"codeDecl\":37,\"shapeExprLabel\":38,\"O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C\":39,\"shapeExpression\":40,\"IT_EXTERNAL\":41,\"QIT_NOT_E_Opt\":42,\"shapeAtomNoRef\":43,\"QshapeOr_E_Opt\":44,\"IT_NOT\":45,\"shapeRef\":46,\"shapeOr\":47,\"inlineShapeExpression\":48,\"inlineShapeOr\":49,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus\":50,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus\":51,\"O_QIT_OR_E_S_QshapeAnd_E_C\":52,\"IT_OR\":53,\"O_QIT_AND_E_S_QshapeNot_E_C\":54,\"IT_AND\":55,\"shapeNot\":56,\"inlineShapeAnd\":57,\"Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star\":58,\"O_QIT_OR_E_S_QinlineShapeAnd_E_C\":59,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star\":60,\"inlineShapeNot\":61,\"Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star\":62,\"O_QIT_AND_E_S_QinlineShapeNot_E_C\":63,\"shapeAtom\":64,\"inlineShapeAtom\":65,\"nonLitNodeConstraint\":66,\"QshapeOrRef_E_Opt\":67,\"litNodeConstraint\":68,\"shapeOrRef\":69,\"QnonLitNodeConstraint_E_Opt\":70,\"(\":71,\")\":72,\".\":73,\"shapeDefinition\":74,\"nonLitInlineNodeConstraint\":75,\"QinlineShapeOrRef_E_Opt\":76,\"litInlineNodeConstraint\":77,\"inlineShapeOrRef\":78,\"QnonLitInlineNodeConstraint_E_Opt\":79,\"inlineShapeDefinition\":80,\"ATPNAME_LN\":81,\"ATPNAME_NS\":82,\"@\":83,\"Qannotation_E_Star\":84,\"semanticActions\":85,\"annotation\":86,\"IT_LITERAL\":87,\"QxsFacet_E_Star\":88,\"datatype\":89,\"valueSet\":90,\"QnumericFacet_E_Plus\":91,\"xsFacet\":92,\"numericFacet\":93,\"nonLiteralKind\":94,\"QstringFacet_E_Star\":95,\"QstringFacet_E_Plus\":96,\"stringFacet\":97,\"IT_IRI\":98,\"IT_BNODE\":99,\"IT_NONLITERAL\":100,\"stringLength\":101,\"INTEGER\":102,\"REGEXP\":103,\"IT_LENGTH\":104,\"IT_MINLENGTH\":105,\"IT_MAXLENGTH\":106,\"numericRange\":107,\"rawNumeric\":108,\"numericLength\":109,\"DECIMAL\":110,\"DOUBLE\":111,\"string\":112,\"^^\":113,\"IT_MININCLUSIVE\":114,\"IT_MINEXCLUSIVE\":115,\"IT_MAXINCLUSIVE\":116,\"IT_MAXEXCLUSIVE\":117,\"IT_TOTALDIGITS\":118,\"IT_FRACTIONDIGITS\":119,\"Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star\":120,\"{\":121,\"QtripleExpression_E_Opt\":122,\"}\":123,\"O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C\":124,\"extension\":125,\"extraPropertySet\":126,\"IT_CLOSED\":127,\"tripleExpression\":128,\"IT_EXTRA\":129,\"Qpredicate_E_Plus\":130,\"predicate\":131,\"oneOfTripleExpr\":132,\"groupTripleExpr\":133,\"multiElementOneOf\":134,\"Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus\":135,\"O_QGT_PIPE_E_S_QgroupTripleExpr_E_C\":136,\"|\":137,\"singleElementGroup\":138,\"multiElementGroup\":139,\"unaryTripleExpr\":140,\"QGT_SEMI_E_Opt\":141,\",\":142,\";\":143,\"Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus\":144,\"O_QGT_SEMI_E_S_QunaryTripleExpr_E_C\":145,\"Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt\":146,\"O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C\":147,\"include\":148,\"O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C\":149,\"$\":150,\"tripleExprLabel\":151,\"tripleConstraint\":152,\"bracketedTripleExpr\":153,\"Qcardinality_E_Opt\":154,\"cardinality\":155,\"QsenseFlags_E_Opt\":156,\"senseFlags\":157,\"*\":158,\"+\":159,\"?\":160,\"REPEAT_RANGE\":161,\"^\":162,\"QvalueSetValue_E_Star\":163,\"valueSetValue\":164,\"iriRange\":165,\"STRING_GRAVE\":166,\"literalRange\":167,\"languageRange\":168,\"O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C\":169,\"QiriExclusion_E_Plus\":170,\"iriExclusion\":171,\"QliteralExclusion_E_Plus\":172,\"literalExclusion\":173,\"QlanguageExclusion_E_Plus\":174,\"languageExclusion\":175,\"Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt\":176,\"QiriExclusion_E_Star\":177,\"O_QGT_TILDE_E_S_QiriExclusion_E_Star_C\":178,\"~\":179,\"-\":180,\"QGT_TILDE_E_Opt\":181,\"literal\":182,\"Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt\":183,\"QliteralExclusion_E_Star\":184,\"O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C\":185,\"LANGTAG\":186,\"Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt\":187,\"O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C\":188,\"QlanguageExclusion_E_Star\":189,\"&\":190,\"//\":191,\"O_QiriOrLabel_E_Or_Qliteral_E_C\":192,\"iriOrLabel\":193,\"QcodeDecl_E_Star\":194,\"%\":195,\"O_QCODE_E_Or_QGT_MODULO_E_C\":196,\"CODE\":197,\"rdfLiteral\":198,\"numericLiteral\":199,\"booleanLiteral\":200,\"a\":201,\"blankNode\":202,\"langString\":203,\"Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt\":204,\"O_QGT_DTYPE_E_S_Qdatatype_E_C\":205,\"IT_true\":206,\"IT_false\":207,\"STRING_LITERAL1\":208,\"STRING_LITERAL_LONG1\":209,\"STRING_LITERAL2\":210,\"STRING_LITERAL_LONG2\":211,\"LANG_STRING_LITERAL1\":212,\"LANG_STRING_LITERAL_LONG1\":213,\"LANG_STRING_LITERAL2\":214,\"LANG_STRING_LITERAL_LONG2\":215,\"prefixedName\":216,\"PNAME_LN\":217,\"BLANK_NODE_LABEL\":218,\"O_QIT_EXTENDS_E_Or_QGT_AMP_E_C\":219,\"QshapeExprLabel_E_Plus\":220,\"IT_EXTENDS\":221,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",7:\"EOF\",19:\"IT_BASE\",20:\"IRIREF\",21:\"IT_PREFIX\",22:\"PNAME_NS\",24:\"IT_IMPORT\",25:\"IT_LABEL\",28:\"[\",29:\"]\",32:\"IT_start\",33:\"=\",41:\"IT_EXTERNAL\",45:\"IT_NOT\",53:\"IT_OR\",55:\"IT_AND\",71:\"(\",72:\")\",73:\".\",81:\"ATPNAME_LN\",82:\"ATPNAME_NS\",83:\"@\",87:\"IT_LITERAL\",98:\"IT_IRI\",99:\"IT_BNODE\",100:\"IT_NONLITERAL\",102:\"INTEGER\",103:\"REGEXP\",104:\"IT_LENGTH\",105:\"IT_MINLENGTH\",106:\"IT_MAXLENGTH\",110:\"DECIMAL\",111:\"DOUBLE\",113:\"^^\",114:\"IT_MININCLUSIVE\",115:\"IT_MINEXCLUSIVE\",116:\"IT_MAXINCLUSIVE\",117:\"IT_MAXEXCLUSIVE\",118:\"IT_TOTALDIGITS\",119:\"IT_FRACTIONDIGITS\",121:\"{\",123:\"}\",127:\"IT_CLOSED\",129:\"IT_EXTRA\",137:\"|\",142:\",\",143:\";\",150:\"$\",158:\"*\",159:\"+\",160:\"?\",161:\"REPEAT_RANGE\",162:\"^\",166:\"STRING_GRAVE\",179:\"~\",180:\"-\",186:\"LANGTAG\",190:\"&\",191:\"//\",195:\"%\",197:\"CODE\",201:\"a\",206:\"IT_true\",207:\"IT_false\",208:\"STRING_LITERAL1\",209:\"STRING_LITERAL_LONG1\",210:\"STRING_LITERAL2\",211:\"STRING_LITERAL_LONG2\",212:\"LANG_STRING_LITERAL1\",213:\"LANG_STRING_LITERAL_LONG1\",214:\"LANG_STRING_LITERAL2\",215:\"LANG_STRING_LITERAL_LONG2\",217:\"PNAME_LN\",218:\"BLANK_NODE_LABEL\",221:\"IT_EXTENDS\"},\nproductions_: [0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[18,2],[27,0],[27,2],[26,1],[26,3],[10,1],[10,1],[30,4],[11,1],[36,1],[36,2],[13,1],[13,1],[31,2],[39,1],[39,1],[40,3],[40,3],[40,2],[44,0],[44,1],[48,1],[47,1],[47,2],[52,2],[50,1],[50,2],[54,2],[51,1],[51,2],[35,0],[35,2],[49,2],[59,2],[58,0],[58,2],[34,2],[60,0],[60,2],[57,2],[63,2],[62,0],[62,2],[56,2],[42,0],[42,1],[61,2],[64,2],[64,1],[64,2],[64,3],[64,1],[67,0],[67,1],[70,0],[70,1],[43,2],[43,1],[43,2],[43,3],[43,1],[65,2],[65,1],[65,2],[65,3],[65,1],[76,0],[76,1],[79,0],[79,1],[69,1],[69,1],[78,1],[78,1],[46,1],[46,1],[46,2],[68,3],[84,0],[84,2],[66,3],[77,2],[77,2],[77,2],[77,1],[88,0],[88,2],[91,1],[91,2],[75,2],[75,1],[95,0],[95,2],[96,1],[96,2],[94,1],[94,1],[94,1],[92,1],[92,1],[97,2],[97,1],[101,1],[101,1],[101,1],[93,2],[93,2],[108,1],[108,1],[108,1],[108,3],[107,1],[107,1],[107,1],[107,1],[109,1],[109,1],[74,3],[80,4],[124,1],[124,1],[124,1],[120,0],[120,2],[122,0],[122,1],[126,2],[130,1],[130,2],[128,1],[132,1],[132,1],[134,2],[136,2],[135,1],[135,2],[133,1],[133,1],[138,2],[141,0],[141,1],[141,1],[139,3],[145,2],[145,2],[144,1],[144,2],[140,2],[140,1],[149,2],[146,0],[146,1],[147,1],[147,1],[153,6],[154,0],[154,1],[152,6],[156,0],[156,1],[155,1],[155,1],[155,1],[155,1],[157,1],[90,3],[163,0],[163,2],[164,1],[164,1],[164,1],[164,1],[164,2],[170,1],[170,2],[172,1],[172,2],[174,1],[174,2],[169,1],[169,1],[169,1],[165,2],[177,0],[177,2],[178,2],[176,0],[176,1],[171,3],[181,0],[181,1],[167,2],[184,0],[184,2],[185,2],[183,0],[183,1],[173,3],[168,2],[168,2],[189,0],[189,2],[188,2],[187,0],[187,1],[175,3],[148,2],[86,3],[192,1],[192,1],[85,1],[194,0],[194,2],[37,3],[196,1],[196,1],[182,1],[182,1],[182,1],[131,1],[131,1],[89,1],[38,1],[38,1],[151,1],[151,1],[199,1],[199,1],[199,1],[198,1],[198,2],[205,2],[204,0],[204,1],[200,1],[200,1],[112,1],[112,1],[112,1],[112,1],[203,1],[203,1],[203,1],[203,1],[23,1],[23,1],[216,1],[216,1],[193,1],[193,1],[193,1],[193,1],[202,1],[125,2],[219,1],[219,1],[220,1],[220,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n        let imports = Object.keys(Parser._imports).length ? { imports: Parser._imports } : {}\n        var startObj = Parser.start ? { start: Parser.start } : {};\n        var startActs = Parser.startActs ? { startActs: Parser.startActs } : {};\n        let shapes = Parser.shapes ? { shapes: Object.values(Parser.shapes) } : {};\n        var shexj = Object.assign(\n          { type: \"Schema\" }, imports, startActs, startObj, shapes\n        )\n        if (Parser.options.index) {\n          if (Parser._base !== null)\n            shexj._base = Parser._base;\n          shexj._prefixes = Parser._prefixes;\n          shexj._index = {\n            shapeExprs: Parser.shapes || new Map(),\n            tripleExprs: Parser.productions || new Map()\n          };\n          shexj._sourceMap = Parser._sourceMap;\n        }\n        return shexj;\n      \nbreak;\ncase 2:\n yy.parser.yy = { lexer: yy.lexer} ; \nbreak;\ncase 16:\n // t: @@\n        Parser._setBase(Parser._base === null ||\n                    absoluteIRI.test($$[$0].slice(1, -1)) ? $$[$0].slice(1, -1) : _resolveIRI($$[$0].slice(1, -1)));\n      \nbreak;\ncase 17:\n // t: ShExParser-test.js/with pre-defined prefixes\n        Parser._prefixes[$$[$0-1].slice(0, -1)] = $$[$0];\n      \nbreak;\ncase 18:\n // t: @@\n        Parser._imports.push($$[$0]);\n      \nbreak;\ncase 19:\n\n        $$[$0].forEach(function (elt) {\n\t  Parser._termResolver.add(elt);\n        });\n      \nbreak;\ncase 20: case 49: case 53: case 56: case 60:\nthis.$ = [];\nbreak;\ncase 21: case 45: case 48: case 50: case 54: case 57: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 22: case 44: case 47:\nthis.$ = [$$[$0]];\nbreak;\ncase 23: case 157:\nthis.$ = $$[$0-1];\nbreak;\ncase 26:\n\n        if (Parser.start)\n          error(new Error(\"Parse error: start already defined\"), yy);\n        Parser.start = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]); // t: startInline\n      \nbreak;\ncase 27:\n\n        Parser.startActs = $$[$0]; // t: startCode1\n      \nbreak;\ncase 28:\nthis.$ = [$$[$0]] // t: startCode1;\nbreak;\ncase 29:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: startCode3;\nbreak;\ncase 32:\n // t: 1dot 1val1vsMinusiri3??\n        addShape($$[$0-1],  $$[$0], yy);\n      \nbreak;\ncase 33:\n\n        this.$ = nonest($$[$0]);\n      \nbreak;\ncase 34:\nthis.$ = { type: \"ShapeExternal\" };\nbreak;\ncase 35:\n\n        if ($$[$0-2])\n          $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) }; // t:@@\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 36:\n\n        $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) } // !!! opt\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 37:\n\n        $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n        delete $$[$0].needsAtom;\n        this.$ = $$[$0]; // { type: \"ShapeOr\", \"shapeExprs\": [$$[$0-1]].concat($$[$0]) };\n      \nbreak;\ncase 38: case 234: case 251:\nthis.$ = null;\nbreak;\ncase 39: case 43: case 46: case 52: case 59: case 191: case 250:\nthis.$ = $$[$0];\nbreak;\ncase 41:\n // returns a ShapeOr\n        var disjuncts = $$[$0].map(nonest);\n        this.$ = { type: \"ShapeOr\", shapeExprs: disjuncts, needsAtom: disjuncts }; // t: @@\n      \nbreak;\ncase 42:\n // returns a ShapeAnd\n        // $$[$0-1] could have implicit conjuncts and explicit nested ANDs (will have .nested: true)\n        $$[$0-1].filter(c => c.type === \"ShapeAnd\").length === $$[$0-1].length\n        var and = {\n          type: \"ShapeAnd\",\n          shapeExprs: $$[$0-1].reduce(\n            (acc, elt) =>\n              acc.concat(elt.type === 'ShapeAnd' && !elt.nested ? elt.shapeExprs : nonest(elt)), []\n          )\n        };\n        this.$ = $$[$0].length > 0 ? { type: \"ShapeOr\", shapeExprs: [and].concat($$[$0].map(nonest)) } : and; // t: @@\n        this.$.needsAtom = and.shapeExprs;\n      \nbreak;\ncase 51:\nthis.$ = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]);\nbreak;\ncase 55: case 58:\nthis.$ = shapeJunction(\"ShapeAnd\", $$[$0-1], $$[$0]) // t: @@;\nbreak;\ncase 62:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t:@@ */ : $$[$0];\nbreak;\ncase 63:\nthis.$ = false;\nbreak;\ncase 64:\nthis.$ = true;\nbreak;\ncase 65:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t: 1NOTNOTdot, 1NOTNOTIRI, 1NOTNOTvs */ : $$[$0];\nbreak;\ncase 66: case 75: case 80:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1];\nbreak;\ncase 68:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t: 1dotRef1 */ : $$[$0-1] // t:@@;\nbreak;\ncase 69: case 78: case 83:\nthis.$ = Object.assign($$[$0-1], {nested: true}) // t: 1val1vsMinusiri3;\nbreak;\ncase 70: case 79: case 84:\nthis.$ = EmptyShape // t: 1dot;\nbreak;\ncase 77:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t:@@ */ : $$[$0-1]\t // t: 1dotRef1 -- use _QnonLitNodeConstraint_E_Opt like below?;\nbreak;\ncase 82:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1] // t: !! look to 1dotRef1;\nbreak;\ncase 93:\n // t: 1dotRefLNex@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1), yy); // ShapeRef\n      \nbreak;\ncase 94:\n // t: 1dotRefNS1@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy), yy); // ShapeRef\n      \nbreak;\ncase 95:\nthis.$ = addSourceMap($$[$0], yy) // ShapeRef // t: 1dotRef1, 1dotRefSpaceLNex, 1dotRefSpaceNS1;\nbreak;\ncase 96: case 99:\n // t: !!\n        this.$ = $$[$0-2]\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !!\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !!\n      \nbreak;\ncase 97:\nthis.$ = [] // t: 1dot, 1dotAnnot3;\nbreak;\ncase 98:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotAnnot3;\nbreak;\ncase 100:\nthis.$ = extend({ type: \"NodeConstraint\", nodeKind: \"literal\" }, $$[$0]) // t: 1literalPattern;\nbreak;\ncase 101:\n\n        if (numericDatatypes.indexOf($$[$0-1]) === -1)\n          numericFacets.forEach(function (facet) {\n            if (facet in $$[$0])\n              error(new Error(\"Parse error: facet \" + facet + \" not allowed for unknown datatype \" + $$[$0-1]), yy);\n          });\n        this.$ = extend({ type: \"NodeConstraint\", datatype: $$[$0-1] }, $$[$0]) // t: 1datatype\n      \nbreak;\ncase 102:\nthis.$ = { type: \"NodeConstraint\", values: $$[$0-1] } // t: 1val1IRIREF;\nbreak;\ncase 103:\nthis.$ = extend({ type: \"NodeConstraint\"}, $$[$0]);\nbreak;\ncase 104:\nthis.$ = {} // t: 1literalPattern;\nbreak;\ncase 105:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: 1literalLength\n      \nbreak;\ncase 107: case 113:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: !! look to 1literalLength\n      \nbreak;\ncase 108:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0-1], $$[$0] ? $$[$0] : {}) // t: 1iriPattern;\nbreak;\ncase 109:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0]) // t: @@;\nbreak;\ncase 110:\nthis.$ = {};\nbreak;\ncase 111:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0])\n      \nbreak;\ncase 114:\nthis.$ = { nodeKind: \"iri\" } // t: 1iriPattern;\nbreak;\ncase 115:\nthis.$ = { nodeKind: \"bnode\" } // t: 1bnodeLength;\nbreak;\ncase 116:\nthis.$ = { nodeKind: \"nonliteral\" } // t: 1nonliteralLength;\nbreak;\ncase 119:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalLength;\nbreak;\ncase 120:\nthis.$ = unescapeRegexp($$[$0]) // t: 1literalPattern;\nbreak;\ncase 121:\nthis.$ = \"length\" // t: 1literalLength;\nbreak;\ncase 122:\nthis.$ = \"minlength\" // t: 1literalMinlength;\nbreak;\ncase 123:\nthis.$ = \"maxlength\" // t: 1literalMaxlength;\nbreak;\ncase 124:\nthis.$ = keyValObject($$[$0-1], $$[$0]) // t: 1literalMininclusive;\nbreak;\ncase 125:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalTotaldigits;\nbreak;\ncase 126:\nthis.$ = parseInt($$[$0], 10);\nbreak;\ncase 127: case 128:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 129:\n // ## deprecated\n        if ($$[$0] === XSD_DECIMAL || $$[$0] === XSD_FLOAT || $$[$0] === XSD_DOUBLE)\n          this.$ = parseFloat($$[$0-2].value);\n        else if (numericDatatypes.indexOf($$[$0]) !== -1)\n          this.$ = parseInt($$[$0-2].value)\n        else\n          error(new Error(\"Parse error: numeric range facet expected numeric datatype instead of \" + $$[$0]), yy);\n      \nbreak;\ncase 130:\nthis.$ = \"mininclusive\" // t: 1literalMininclusive;\nbreak;\ncase 131:\nthis.$ = \"minexclusive\" // t: 1literalMinexclusive;\nbreak;\ncase 132:\nthis.$ = \"maxinclusive\" // t: 1literalMaxinclusive;\nbreak;\ncase 133:\nthis.$ = \"maxexclusive\" // t: 1literalMaxexclusive;\nbreak;\ncase 134:\nthis.$ = \"totaldigits\" // t: 1literalTotaldigits;\nbreak;\ncase 135:\nthis.$ = \"fractiondigits\" // t: 1literalFractiondigits;\nbreak;\ncase 136:\n // t: 1dotInherit3\n        this.$ = $$[$0-2] === EmptyShape ? { type: \"Shape\" } : $$[$0-2]; // t: 0\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !! look to open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !! look to open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 137:\n // t: 1dotInherit3\n        var exprObj = $$[$0-1] ? { expression: $$[$0-1] } : EmptyObject; // t: 0, 0Inherit1\n        this.$ = (exprObj === EmptyObject && $$[$0-3] === EmptyObject) ?\n\t  EmptyShape :\n\t  extend({ type: \"Shape\" }, exprObj, $$[$0-3]);\n      \nbreak;\ncase 138:\nthis.$ = [ \"inherit\", $$[$0] ] // t: 1dotInherit1;\nbreak;\ncase 139:\nthis.$ = [ \"extra\", $$[$0] ] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 140:\nthis.$ = [ \"closed\", true ] // t: 1dotClosed;\nbreak;\ncase 141:\nthis.$ = EmptyObject;\nbreak;\ncase 142:\n\n        if ($$[$0-1] === EmptyObject)\n          $$[$0-1] = {};\n        if ($$[$0][0] === \"closed\")\n          $$[$0-1][\"closed\"] = true; // t: 1dotClosed\n        else if ($$[$0][0] in $$[$0-1])\n          $$[$0-1][$$[$0][0]] = unionAll($$[$0-1][$$[$0][0]], $$[$0][1]); // t: 1dotInherit3, 3groupdot3Extra, 3groupdotExtra3\n        else\n          $$[$0-1][$$[$0][0]] = $$[$0][1]; // t: 1dotInherit1\n        this.$ = $$[$0-1];\n      \nbreak;\ncase 145:\nthis.$ = $$[$0] // t: 1dotExtra1, 3groupdot3Extra;\nbreak;\ncase 146:\nthis.$ = [$$[$0]] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 147:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 3groupdotExtra3;\nbreak;\ncase 151:\nthis.$ = { type: \"OneOf\", expressions: unionAll([$$[$0-1]], $$[$0]) } // t: 2oneOfdot;\nbreak;\ncase 152:\nthis.$ = $$[$0] // t: 2oneOfdot;\nbreak;\ncase 153:\nthis.$ = [$$[$0]] // t: 2oneOfdot;\nbreak;\ncase 154:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2oneOfdot;\nbreak;\ncase 161:\nthis.$ = { type: \"EachOf\", expressions: unionAll([$$[$0-2]], $$[$0-1]) } // t: 2groupOfdot;\nbreak;\ncase 162:\nthis.$ = $$[$0] // ## deprecated // t: 2groupOfdot;\nbreak;\ncase 163:\nthis.$ = $$[$0] // t: 2groupOfdot;\nbreak;\ncase 164:\nthis.$ = [$$[$0]] // t: 2groupOfdot;\nbreak;\ncase 165:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2groupOfdot;\nbreak;\ncase 166:\n\n        if ($$[$0-1]) {\n          this.$ = extend({ id: $$[$0-1] }, $$[$0]);\n          addProduction($$[$0-1],  this.$, yy);\n        } else {\n          this.$ = $$[$0]\n        }\n      \nbreak;\ncase 168:\nthis.$ = addSourceMap($$[$0], yy);\nbreak;\ncase 173:\n\n        // t: open1dotOr1dot, !openopen1dotcloseCode1closeCode2\n        this.$ = $$[$0-4];\n        // Copy all of the new attributes into the encapsulated shape.\n        if (\"min\" in $$[$0-2]) { this.$.min = $$[$0-2].min; } // t: open3groupdotclosecard23Annot3Code2\n        if (\"max\" in $$[$0-2]) { this.$.max = $$[$0-2].max; } // t: open3groupdotclosecard23Annot3Code2\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = \"semActs\" in $$[$0-4] ? $$[$0-4].semActs.concat($$[$0].semActs) : $$[$0].semActs; } // t: open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 174:\nthis.$ = {} // t: 1dot;\nbreak;\ncase 176:\n\n        // $$[$0]: t: 1dotCode1\n\tif ($$[$0-3] !== EmptyShape && false) {\n\t  var t = blank();\n\t  addShape(t, $$[$0-3], yy);\n\t  $$[$0-3] = t; // ShapeRef\n\t}\n        // %6: t: 1inversedotCode1\n        this.$ = extend({ type: \"TripleConstraint\" }, $$[$0-5] ? $$[$0-5] : {}, { predicate: $$[$0-4] }, ($$[$0-3] === EmptyShape ? {} : { valueExpr: $$[$0-3] }), $$[$0-2], $$[$0]); // t: 1dot // t: 1inversedot\n        if ($$[$0-1].length)\n          this.$[\"annotations\"] = $$[$0-1]; // t: 1dotAnnot3 // t: 1inversedotAnnot3\n      \nbreak;\ncase 179:\nthis.$ = { min:0, max:UNBOUNDED } // t: 1cardStar;\nbreak;\ncase 180:\nthis.$ = { min:1, max:UNBOUNDED } // t: 1cardPlus;\nbreak;\ncase 181:\nthis.$ = { min:0, max:1 } // t: 1cardOpt;\nbreak;\ncase 182:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-2);\n        var nums = $$[$0].match(/(\\d+)/g);\n        this.$ = { min: parseInt(nums[0], 10) }; // t: 1card2blank, 1card2Star\n        if (nums.length === 2)\n            this.$[\"max\"] = parseInt(nums[1], 10); // t: 1card23\n        else if ($$[$0].indexOf(',') === -1) // t: 1card2\n            this.$[\"max\"] = parseInt(nums[0], 10);\n        else\n            this.$[\"max\"] = UNBOUNDED;\n      \nbreak;\ncase 183:\nthis.$ = { inverse: true } // t: 1inversedot;\nbreak;\ncase 184:\nthis.$ = $$[$0-1] // t: 1val1IRIREF;\nbreak;\ncase 185:\nthis.$ = [] // t: 1val1IRIREF;\nbreak;\ncase 186:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1IRIREF;\nbreak;\ncase 188:\nthis.$ = Parser._termResolver.resolve($$[$0], Parser._prefixes);\nbreak;\ncase 192:\nthis.$ = [$$[$0]] // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 193:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 194:\nthis.$ = [$$[$0]] // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 195:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 196:\nthis.$ = [$$[$0]] // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 197:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 198:\nthis.$ = { type: \"IriStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 199:\nthis.$ = { type: \"LiteralStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 200:\nthis.$ = { type: \"LanguageStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 201:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1iriStem, 1val1iriStemMinusiri3\n            type: $$[$0].length ? \"IriStemRange\" : \"IriStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1iriStemMinusiri3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1IRIREF, 1AvalA\n        }\n      \nbreak;\ncase 202:\nthis.$ = [] // t: 1val1iriStem, 1val1iriStemMinusiri3;\nbreak;\ncase 203:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1iriStemMinusiri3;\nbreak;\ncase 204:\nthis.$ = $$[$0] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 207:\nthis.$ = $$[$0] ? { type: \"IriStem\", stem: $$[$0-1] } /* t: 1val1iriStemMinusiriStem3 */ : $$[$0-1] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 210:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1literalStemMinusliteralStem3, 1val1literalStem\n            type: $$[$0].length ? \"LiteralStemRange\" : \"LiteralStem\",\n            stem: $$[$0-1].value\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1literalStemMinusliteral3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1LITERAL\n        }\n      \nbreak;\ncase 211:\nthis.$ = [] // t: 1val1literalStem, 1val1literalStemMinusliteral3;\nbreak;\ncase 212:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 213:\nthis.$ = $$[$0] // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 216:\nthis.$ = $$[$0] ? { type: \"LiteralStem\", stem: $$[$0-1].value } /* t: 1val1literalStemMinusliteral3 */ : $$[$0-1].value // t: 1val1literalStemMinusliteralStem3;\nbreak;\ncase 217:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1languageStemMinuslanguage3 1val1languageStemMinuslanguageStem3 : 1val1languageStem\n            type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1languageStemMinuslanguage3, 1val1languageStemMinuslanguageStem3\n        } else {\n          this.$ = { type: \"Language\", languageTag: $$[$0-1] }; // t: 1val1language\n        }\n      \nbreak;\ncase 218:\n\n        this.$ = {  // t: @@\n          type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n          stem: \"\"\n        };\n        if ($$[$0].length)\n          this.$[\"exclusions\"] = $$[$0]; // t: @@\n      \nbreak;\ncase 219:\nthis.$ = [] // t: 1val1languageStem, 1val1languageStemMinuslanguage3;\nbreak;\ncase 220:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 221:\nthis.$ = $$[$0] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 224:\nthis.$ = $$[$0] ? { type: \"LanguageStem\", stem: $$[$0-1] } /* t: 1val1languageStemMinuslanguageStem3 */ : $$[$0-1] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 225:\nthis.$ = addSourceMap($$[$0], yy) // Inclusion // t: 2groupInclude1;\nbreak;\ncase 226:\nthis.$ = { type: \"Annotation\", predicate: $$[$0-1], object: $$[$0] } // t: 1dotAnnotIRIREF;\nbreak;\ncase 229:\nthis.$ = $$[$0].length ? { semActs: $$[$0] } : null // t: 1dotCode1/2oneOfDot;\nbreak;\ncase 230:\nthis.$ = [] // t: 1dot, 1dotCode1;\nbreak;\ncase 231:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotCode1;\nbreak;\ncase 232:\nthis.$ = $$[$0] ? unescapeSemanticAction($$[$0-1], $$[$0]) /* t: 1dotCode1 */ : { type: \"SemAct\", name: $$[$0-1] } // t: 1dotNoCode1;\nbreak;\ncase 239:\nthis.$ = RDF_TYPE // t: 1AvalA;\nbreak;\ncase 245:\nthis.$ = createLiteral($$[$0], XSD_INTEGER) // t: 1val1INTEGER;\nbreak;\ncase 246:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL) // t: 1val1DECIMAL;\nbreak;\ncase 247:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE) // t: 1val1DOUBLE;\nbreak;\ncase 249:\nthis.$ = $$[$0] ? extend($$[$0-1], { type: $$[$0] }) : $$[$0-1] // t: 1val1Datatype;\nbreak;\ncase 253:\nthis.$ = { value: \"true\", type: XSD_BOOLEAN } // t: 1val1true;\nbreak;\ncase 254:\nthis.$ = { value: \"false\", type: XSD_BOOLEAN } // t: 1val1false;\nbreak;\ncase 255:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL2;\nbreak;\ncase 256:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL1;\nbreak;\ncase 257:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL_LONG2;\nbreak;\ncase 258:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG1;\nbreak;\ncase 259:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: @@;\nbreak;\ncase 260:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: @@;\nbreak;\ncase 261:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: 1val1LANGTAG;\nbreak;\ncase 262:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG2_with_LANGTAG;\nbreak;\ncase 263:\n // t: 1dot\n        var unesc = ShExUtil.unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._base === null || absoluteIRI.test(unesc) ? unesc : _resolveIRI(unesc)\n      \nbreak;\ncase 265:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + ShExUtil.unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n      \nbreak;\ncase 266:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n        this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n      \nbreak;\ncase 267:\nthis.$ = this._base === null || absoluteIRI.test($$[$0].slice(1, -1)) ? ShExUtil.unescapeText($$[$0].slice(1,-1), {}) : _resolveIRI(ShExUtil.unescapeText($$[$0].slice(1,-1), {})) // t: 1dot;\nbreak;\ncase 268:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n      this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1);\n    \nbreak;\ncase 269:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n      this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n    \nbreak;\ncase 270:\n\n        this.$ = Parser._termResolver.resolve($$[$0], Parser._prefixes);\n    \nbreak;\ncase 272:\nthis.$ = $$[$0] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 275:\nthis.$ = [$$[$0]] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 276:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotInherit3;\nbreak;\n}\n},\ntable: [o($V0,[2,2],{3:1,4:2}),{1:[3]},o($V0,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:11,10:16,11:17,14:6,15:7,16:8,17:9,18:10,19:[1,12],20:$V1,21:[1,13],22:$V2,23:24,24:[1,14],25:[1,15],30:18,31:19,32:[1,21],36:20,37:23,38:22,195:$V3,202:25,216:28,217:$V4,218:$V5},{7:[1,32]},o($V0,[2,4]),{7:[2,11]},o($V0,$V6),o($V0,$V7),o($V0,$V8),o($V0,$V9),o($Va,[2,7],{12:33}),{20:[1,34]},{22:[1,35]},{20:$Vb,22:$Vc,23:36,216:38,217:$Vd},{20:$Vb,22:$Vc,23:42,26:41,28:[1,43],216:38,217:$Vd},o($Va,[2,5]),o($Va,[2,6]),o($Va,$Ve),o($Va,$Vf),o($Va,[2,27],{37:44,195:$V3}),{33:[1,45]},o($Vg,$Vh,{39:46,40:47,42:49,46:51,41:[1,48],45:[1,50],81:$Vi,82:$Vj,83:$Vk}),o($V0,[2,28]),o($Vl,$Vm),o($Vl,$Vn),{20:$Vo,22:$Vp,23:55,216:57,217:$Vq},o($Vl,$Vr),o($Vl,$Vs),o($Vl,$Vt),o($Vl,$Vu),o($Vl,$Vv),{1:[2,1]},{7:[2,9],8:61,10:62,13:60,15:63,16:64,17:65,18:66,19:[1,69],20:$V1,21:[1,70],22:$V2,23:24,24:[1,71],25:[1,72],30:67,31:68,32:[1,73],38:74,202:25,216:28,217:$V4,218:$V5},o($V0,$Vw),{20:$Vb,22:$Vc,23:75,216:38,217:$Vd},o($V0,$Vx),o($V0,$Vr),o($V0,$Vs),o($V0,$Vu),o($V0,$Vv),o($V0,$Vy),o($V0,$Vz),o($VA,$VB,{27:76}),o($V0,[2,29]),o($VC,$Vh,{34:77,56:78,42:79,45:$VD}),o($Va,$VE),o($Va,$VF),o($Va,$VG),o($VH,$VI,{43:81,66:82,68:83,74:84,75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,193:101,93:103,101:104,107:110,109:111,20:$VJ,22:$VK,28:$VL,71:[1,85],73:[1,86],87:$VM,98:$VN,99:$VO,100:$VP,103:$VQ,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$V_,217:$V$}),o($Vg,$V01,{46:121,81:$V11,82:$V21,83:$V31}),{47:125,50:126,51:127,52:128,53:$V41,54:129,55:$V51},o($V61,$V71),o($V61,$V81),{20:[1,135],22:[1,139],23:133,38:132,202:134,216:136,217:[1,138],218:[1,137]},{195:[1,142],196:140,197:[1,141]},o($V91,$Vr),o($V91,$Vs),o($V91,$Vu),o($V91,$Vv),o($Va,[2,8]),o($Va,[2,30]),o($Va,[2,31]),o($Va,$V6),o($Va,$V7),o($Va,$V8),o($Va,$V9),o($Va,$Ve),o($Va,$Vf),{20:[1,143]},{22:[1,144]},{20:$Va1,22:$Vb1,23:145,216:147,217:$Vc1},{20:$Va1,22:$Vb1,23:151,26:150,28:[1,152],216:147,217:$Vc1},{33:[1,153]},o($Vg,$Vh,{39:154,40:155,42:157,46:159,41:[1,156],45:[1,158],81:$Vi,82:$Vj,83:$Vk}),o($V0,$Vd1),{20:$Ve1,22:$Vf1,23:161,29:[1,160],216:163,217:$Vg1},o($Vh1,$Vi1,{35:166}),o($Vj1,$Vk1,{60:167}),o($VH,$VI,{75:87,77:88,80:89,94:90,96:91,89:93,90:94,91:95,120:96,97:100,193:101,93:103,101:104,107:110,109:111,64:168,66:169,68:170,69:171,74:174,46:175,20:$VJ,22:$VK,28:$VL,71:[1,172],73:[1,173],81:[1,176],82:[1,177],83:[1,178],87:$VM,98:$VN,99:$VO,100:$VP,103:$VQ,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$V_,217:$V$}),o($VC,$V01),o($Va,$Vl1,{50:126,51:127,52:128,54:129,44:179,47:180,53:$V41,55:$V51}),o($Vj1,$Vm1,{67:181,69:182,74:183,46:184,80:185,120:186,81:$V11,82:$V21,83:$V31,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vn1),o($Vj1,$Vo1,{70:187,66:188,75:189,94:190,96:191,97:195,101:196,98:$Vp1,99:$Vq1,100:$Vr1,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{40:198,42:199,46:201,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vu1),o($Vv1,$Vw1,{84:202}),o($Vx1,$Vw1,{84:203}),o($Vy1,$Vw1,{84:204}),o($Vz1,$VA1,{95:205}),o($Vv1,$VB1,{101:104,97:206,103:$VQ,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:207}),o($VC1,$VD1,{88:208}),o($VC1,$VD1,{88:209}),o($Vx1,$VE1,{107:110,109:111,93:210,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,211],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:220}),o($VQ1,$VR1),{102:[1,221]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,223],108:222,110:[1,224],111:[1,225],112:226,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,231]},{102:[2,121]},{102:[2,122]},{102:[2,123]},o($V$1,[2,130]),o($V$1,[2,131]),o($V$1,[2,132]),o($V$1,[2,133]),{102:[2,134]},{102:[2,135]},o($Va,$Vl1,{50:126,51:127,52:128,54:129,47:180,44:232,53:$V41,55:$V51}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,236],22:[1,240],23:234,38:233,202:235,216:237,217:[1,239],218:[1,238]},o($Va,$V02),o($Va,$V12,{52:241,53:$V41}),o($Vh1,$Vi1,{35:242,54:243,55:$V51}),o($Vh1,$V22),o($Vj1,$V32),o($VC,$Vh,{34:244,56:245,42:246,45:$VD}),o($VC,$Vh,{56:247,42:248,45:$VD}),o($V61,$V42),o($V61,$Vm),o($V61,$Vn),o($V61,$Vr),o($V61,$Vs),o($V61,$Vt),o($V61,$Vu),o($V61,$Vv),o($V0,$V52),o($V0,$V62),o($V0,$V72),o($Va,$Vw),{20:$Va1,22:$Vb1,23:249,216:147,217:$Vc1},o($Va,$Vx),o($Va,$Vr),o($Va,$Vs),o($Va,$Vu),o($Va,$Vv),o($Va,$Vy),o($Va,$Vz),o($VA,$VB,{27:250}),o($VC,$Vh,{34:251,56:252,42:253,45:$VD}),o($Va,$VE),o($Va,$VF),o($Va,$VG),o($VH,$VI,{43:254,66:255,68:256,74:257,75:260,77:261,80:262,94:263,96:264,89:266,90:267,91:268,120:269,97:273,193:274,93:276,101:277,107:283,109:284,20:$V82,22:$V92,28:$Va2,71:[1,258],73:[1,259],87:$Vb2,98:$Vc2,99:$Vd2,100:$Ve2,103:$Vf2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$Vg2,217:$Vh2}),o($Vg,$V01,{46:285,81:$Vi2,82:$Vj2,83:$Vk2}),{47:289,50:290,51:291,52:292,53:$Vl2,54:293,55:$Vm2},o($V0,$Vn2),o($VA,[2,21]),o($VA,$Vr),o($VA,$Vs),o($VA,$Vu),o($VA,$Vv),o($Va,$Vo2,{52:296,53:$V41}),o($Vh1,$Vp2,{54:297,55:$V51}),o($Vj1,$Vq2),o($Vj1,$Vm1,{69:182,74:183,46:184,80:185,120:186,67:298,81:$V11,82:$V21,83:$V31,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{66:188,75:189,94:190,96:191,97:195,101:196,70:299,98:$Vp1,99:$Vq1,100:$Vr1,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:300,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vt2,$V71),o($Vt2,$V81),{20:[1,304],22:[1,308],23:302,38:301,202:303,216:305,217:[1,307],218:[1,306]},o($Va,$Vw2),o($Va,$Vx2),o($Vj1,$Vy2),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:309}),{121:[1,310],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VA2),o($Vj1,$VB2),o($Vx1,$Vw1,{84:311}),o($VC2,$VA1,{95:312}),o($Vx1,$VB1,{101:196,97:313,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,314]},o($VC2,$VS1),{72:[1,315]},o($VH,$VI,{43:316,66:317,68:318,74:319,75:322,77:323,80:324,94:325,96:326,89:328,90:329,91:330,120:331,97:335,193:336,93:338,101:339,107:345,109:346,20:[1,341],22:[1,343],28:[1,337],71:[1,320],73:[1,321],87:[1,327],98:[1,332],99:[1,333],100:[1,334],103:$VD2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,344],217:[1,342]}),o($Vg,$V01,{46:347,81:$VE2,82:$VF2,83:$VG2}),{47:351,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2},o($VJ2,$VK2,{85:358,86:359,194:360,191:[1,361]}),o($VL2,$VK2,{85:362,86:363,194:364,191:$VM2}),o($VN2,$VK2,{85:366,86:367,194:368,191:[1,369]}),o($Vv1,$VO2,{101:104,97:370,103:$VQ,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:371,97:372,93:373,101:374,107:376,109:377,103:$VR2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VV2,$VW2,{122:378,128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,123:$VX2,150:$VY2,190:$VZ2}),o($VH,[2,142]),o($VH,[2,138]),o($VH,[2,139]),o($VH,[2,140]),{20:$V_2,22:$V$2,23:393,38:392,202:394,216:396,217:$V03,218:$V13,220:391},{20:$V23,22:$V33,130:400,131:401,166:$V43,193:402,201:$V53,217:$V63},o($V73,[2,273]),o($V73,[2,274]),{20:$V83,22:$V93,23:415,29:[1,408],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,441]},{113:$Vx3},{113:$Vy3},{113:$Vz3},{113:$VA3},o($VQ1,$VB3),o($Va,$VC3),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($Vh1,$VD3),o($Va,$VE3,{52:296,53:$V41}),o($Vj1,$VF3),o($Vh1,$VG3),o($Vj1,$Vk1,{60:442}),o($VH,$VI,{64:443,66:444,68:445,69:446,75:449,77:450,74:451,46:452,94:453,96:454,89:456,90:457,91:458,80:459,97:466,193:467,93:469,120:470,101:471,107:477,109:478,20:[1,473],22:[1,475],28:[1,468],71:[1,447],73:[1,448],81:[1,460],82:[1,461],83:[1,462],87:[1,455],98:[1,463],99:[1,464],100:[1,465],103:$VH3,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,476],217:[1,474]}),o($Vj1,$VI3),o($VH,$VI,{64:479,66:480,68:481,69:482,75:485,77:486,74:487,46:488,94:489,96:490,89:492,90:493,91:494,80:495,97:502,193:503,93:505,120:506,101:507,107:513,109:514,20:[1,509],22:[1,511],28:[1,504],71:[1,483],73:[1,484],81:[1,496],82:[1,497],83:[1,498],87:[1,491],98:[1,499],99:[1,500],100:[1,501],103:$VJ3,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,512],217:[1,510]}),o($Va,$Vd1),{20:$Ve1,22:$Vf1,23:161,29:[1,515],216:163,217:$Vg1},o($Vh1,$Vi1,{35:516}),o($Vj1,$Vk1,{60:517}),o($VH,$VI,{75:260,77:261,80:262,94:263,96:264,89:266,90:267,91:268,120:269,97:273,193:274,93:276,101:277,107:283,109:284,64:518,66:519,68:520,69:521,74:524,46:525,20:$V82,22:$V92,28:$Va2,71:[1,522],73:[1,523],81:[1,526],82:[1,527],83:[1,528],87:$Vb2,98:$Vc2,99:$Vd2,100:$Ve2,103:$Vf2,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:$Vg2,217:$Vh2}),o($Va,$Vl1,{50:290,51:291,52:292,54:293,44:529,47:530,53:$Vl2,55:$Vm2}),o($Vj1,$Vm1,{67:531,69:532,74:533,46:534,80:535,120:536,81:$Vi2,82:$Vj2,83:$Vk2,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vn1),o($Vj1,$Vo1,{70:537,66:538,75:539,94:540,96:541,97:545,101:546,98:$VK3,99:$VL3,100:$VM3,103:$VN3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:548,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vu1),o($Vv1,$Vw1,{84:549}),o($Vx1,$Vw1,{84:550}),o($Vy1,$Vw1,{84:551}),o($Vz1,$VA1,{95:552}),o($Vv1,$VB1,{101:277,97:553,103:$Vf2,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:554}),o($VC1,$VD1,{88:555}),o($VC1,$VD1,{88:556}),o($Vx1,$VE1,{107:283,109:284,93:557,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,558],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:559}),o($VQ1,$VR1),{102:[1,560]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,562],108:561,110:[1,563],111:[1,564],112:565,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,566]},o($Va,$Vl1,{50:290,51:291,52:292,54:293,47:530,44:567,53:$Vl2,55:$Vm2}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,571],22:[1,575],23:569,38:568,202:570,216:572,217:[1,574],218:[1,573]},o($Va,$V02),o($Va,$V12,{52:576,53:$Vl2}),o($Vh1,$Vi1,{35:577,54:578,55:$Vm2}),o($Vh1,$V22),o($Vj1,$V32),o($VC,$Vh,{34:579,56:580,42:581,45:$VD}),o($VC,$Vh,{56:582,42:583,45:$VD}),o($Vh1,$VO3),o($Vj1,$VP3),o($Vj1,$VQ3),o($Vj1,$VR3),{72:[1,584]},o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),o($VL2,$VK2,{86:363,194:364,85:585,191:$VM2}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:586,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:363,194:364,85:587,191:$VM2}),o($Vx1,$VO2,{101:196,97:588,103:$Vs1,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VS3),{44:589,47:590,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2,72:$Vl1},o($VH,$VI,{67:591,69:592,74:593,46:594,80:595,120:596,53:$Vm1,55:$Vm1,72:$Vm1,81:$VE2,82:$VF2,83:$VG2}),o($VT3,$Vn1),o($VT3,$Vo1,{70:597,66:598,75:599,94:600,96:601,97:605,101:606,98:[1,602],99:[1,603],100:[1,604],103:$VU3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:608,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vu1),o($VV3,$Vw1,{84:609}),o($VW3,$Vw1,{84:610}),o($VX3,$Vw1,{84:611}),o($VY3,$VA1,{95:612}),o($VV3,$VB1,{101:339,97:613,103:$VD2,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:614}),o($VZ3,$VD1,{88:615}),o($VZ3,$VD1,{88:616}),o($VW3,$VE1,{107:345,109:346,93:617,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),{121:[1,618],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:619}),o($V_3,$VR1),{102:[1,620]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,622],108:621,110:[1,623],111:[1,624],112:625,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,626]},{44:627,47:590,50:352,51:353,52:354,53:$VH2,54:355,55:$VI2,72:$Vl1},o($VT3,$V71),o($VT3,$V81),{20:[1,631],22:[1,635],23:629,38:628,202:630,216:632,217:[1,634],218:[1,633]},{72:$V02},{52:636,53:$VH2,72:$V12},o($V$3,$Vi1,{35:637,54:638,55:$VI2}),o($V$3,$V22),o($VT3,$V32),o($VC,$Vh,{34:639,56:640,42:641,45:$VD}),o($VC,$Vh,{56:642,42:643,45:$VD}),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:644,195:[1,645]}),{20:$V44,22:$V54,131:646,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:653,195:[1,654]}),{20:$V44,22:$V54,131:655,166:$V64,193:647,201:$V74,217:$V84},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:656,195:[1,657]}),{20:$V44,22:$V54,131:658,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,659]},o($VC1,$VS1),{102:[1,661],108:660,110:[1,662],111:[1,663],112:664,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,665]},{123:[1,666]},{123:[2,144]},{123:$Vf4},{123:$Vg4,135:667,136:668,137:$Vh4},{123:$Vi4},o($Vj4,$Vk4),o($Vj4,$Vl4),o($Vj4,$Vm4,{141:670,144:671,145:674,142:$Vn4,143:$Vo4}),o($Vp4,$Vq4,{147:675,152:676,153:677,156:678,157:680,71:[1,679],162:$Vr4}),o($Vs4,$Vt4),o($VV2,[2,170]),{20:[1,685],22:[1,689],23:683,151:682,202:684,216:686,217:[1,688],218:[1,687]},{20:[1,693],22:[1,697],23:691,151:690,202:692,216:694,217:[1,696],218:[1,695]},o($VH,[2,272],{23:393,202:394,216:396,38:698,20:$V_2,22:$V$2,217:$V03,218:$V13}),o($Vu4,[2,275]),o($Vu4,$Vm),o($Vu4,$Vn),o($Vu4,$Vr),o($Vu4,$Vs),o($Vu4,$Vt),o($Vu4,$Vu),o($Vu4,$Vv),o($VH,[2,145],{193:402,131:699,20:$V23,22:$V33,166:$V43,201:$V53,217:$V63}),o($Vv4,[2,146]),o($Vv4,$Vw4),o($Vv4,$Vx4),o($Vv4,$VT1),o($Vv4,$VU1),o($Vv4,$VV1),o($Vv4,$VW1),o($VC1,$Vy4),o($VO1,[2,186]),o($VO1,[2,187]),o($VO1,[2,188]),o($VO1,[2,189]),o($VO1,[2,190]),{169:700,170:701,171:704,172:702,173:705,174:703,175:706,180:[1,707]},o($VO1,[2,205],{176:708,178:709,179:[1,710]}),o($VO1,[2,214],{183:711,185:712,179:[1,713]}),o($VO1,[2,222],{187:714,188:715,179:$Vz4}),{179:$Vz4,188:717},o($VA4,$Vr),o($VA4,$Vs),o($VA4,$VB4),o($VA4,$VC4),o($VA4,$VD4),o($VA4,$Vu),o($VA4,$Vv),o($VA4,$VE4),o($VA4,$VF4,{204:718,205:719,113:[1,720]}),o($VA4,$VG4),o($VA4,$VH4),o($VA4,$VI4),o($VA4,$VJ4),o($VA4,$VK4),o($VA4,$VL4),o($VA4,$VM4),o($VA4,$VN4),o($VA4,$VO4),o($VP4,$Vx3),o($VP4,$Vy3),o($VP4,$Vz3),o($VP4,$VA3),{20:[1,723],22:[1,725],89:721,166:[1,726],193:722,217:[1,724]},o($Vh1,$Vp2,{54:727,55:[1,728]}),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:729,69:730,74:731,46:732,80:733,120:737,81:[1,734],82:[1,735],83:[1,736],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:738,66:739,75:740,94:741,96:742,97:746,101:747,98:[1,743],99:[1,744],100:[1,745],103:$VQ4,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:749,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:750}),o($Vx1,$Vw1,{84:751}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:752}),o($Vv1,$VB1,{101:471,97:753,103:$VH3,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:754}),o($VC1,$VD1,{88:755}),o($VC1,$VD1,{88:756}),o($Vx1,$VE1,{107:477,109:478,93:757,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:758}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,762],22:[1,766],23:760,38:759,202:761,216:763,217:[1,765],218:[1,764]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:767}),o($VQ1,$VR1),{121:[1,768],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,769]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,771],108:770,110:[1,772],111:[1,773],112:774,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,775]},o($Vj1,$Vq2),o($Vj1,$Vm1,{67:776,69:777,74:778,46:779,80:780,120:784,81:[1,781],82:[1,782],83:[1,783],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:785,66:786,75:787,94:788,96:789,97:793,101:794,98:[1,790],99:[1,791],100:[1,792],103:$VR4,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:796,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:797}),o($Vx1,$Vw1,{84:798}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:799}),o($Vv1,$VB1,{101:507,97:800,103:$VJ3,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:801}),o($VC1,$VD1,{88:802}),o($VC1,$VD1,{88:803}),o($Vx1,$VE1,{107:513,109:514,93:804,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:805}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,809],22:[1,813],23:807,38:806,202:808,216:810,217:[1,812],218:[1,811]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:814}),o($VQ1,$VR1),{121:[1,815],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,816]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,818],108:817,110:[1,819],111:[1,820],112:821,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,822]},o($Va,$Vn2),o($Va,$Vo2,{52:823,53:$Vl2}),o($Vh1,$Vp2,{54:824,55:$Vm2}),o($Vj1,$Vq2),o($Vj1,$Vm1,{69:532,74:533,46:534,80:535,120:536,67:825,81:$Vi2,82:$Vj2,83:$Vk2,121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{66:538,75:539,94:540,96:541,97:545,101:546,70:826,98:$VK3,99:$VL3,100:$VM3,103:$VN3,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:827,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vt2,$V71),o($Vt2,$V81),{20:[1,831],22:[1,835],23:829,38:828,202:830,216:832,217:[1,834],218:[1,833]},o($Va,$Vw2),o($Va,$Vx2),o($Vj1,$Vy2),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:836}),{121:[1,837],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VA2),o($Vj1,$VB2),o($Vx1,$Vw1,{84:838}),o($VC2,$VA1,{95:839}),o($Vx1,$VB1,{101:546,97:840,103:$VN3,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,841]},o($VC2,$VS1),{72:[1,842]},o($VJ2,$VK2,{85:843,86:844,194:845,191:[1,846]}),o($VL2,$VK2,{85:847,86:848,194:849,191:$VS4}),o($VN2,$VK2,{85:851,86:852,194:853,191:[1,854]}),o($Vv1,$VO2,{101:277,97:855,103:$Vf2,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:856,97:857,93:858,101:859,107:861,109:862,103:$VT4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:863,123:$VX2,150:$VY2,190:$VZ2}),{20:$V83,22:$V93,23:415,29:[1,864],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,865]},o($VQ1,$VB3),o($Va,$VC3),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($Vh1,$VD3),o($Va,$VE3,{52:823,53:$Vl2}),o($Vj1,$VF3),o($Vh1,$VG3),o($Vj1,$Vk1,{60:866}),o($VH,$VI,{64:867,66:868,68:869,69:870,75:873,77:874,74:875,46:876,94:877,96:878,89:880,90:881,91:882,80:883,97:890,193:891,93:893,120:894,101:895,107:901,109:902,20:[1,897],22:[1,899],28:[1,892],71:[1,871],73:[1,872],81:[1,884],82:[1,885],83:[1,886],87:[1,879],98:[1,887],99:[1,888],100:[1,889],103:$VU4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,900],217:[1,898]}),o($Vj1,$VI3),o($VH,$VI,{64:903,66:904,68:905,69:906,75:909,77:910,74:911,46:912,94:913,96:914,89:916,90:917,91:918,80:919,97:926,193:927,93:929,120:930,101:931,107:937,109:938,20:[1,933],22:[1,935],28:[1,928],71:[1,907],73:[1,908],81:[1,920],82:[1,921],83:[1,922],87:[1,915],98:[1,923],99:[1,924],100:[1,925],103:$VV4,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,936],217:[1,934]}),o($Vj1,$VW4),o($Vj1,$Va4),{123:[1,939]},o($Vj1,$V14),o($VC2,$Vb4),{72:$Vw2},{72:$Vx2},o($VT3,$Vy2),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:940}),{121:[1,941],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VA2),o($VT3,$VB2),o($VW3,$Vw1,{84:942}),o($VX4,$VA1,{95:943}),o($VW3,$VB1,{101:606,97:944,103:$VU3,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,945]},o($VX4,$VS1),{72:[1,946]},o($VY4,$VK2,{85:947,86:948,194:949,191:[1,950]}),o($VZ4,$VK2,{85:951,86:952,194:953,191:$V_4}),o($V$4,$VK2,{85:955,86:956,194:957,191:[1,958]}),o($VV3,$VO2,{101:339,97:959,103:$VD2,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:960,97:961,93:962,101:963,107:965,109:966,103:$V05,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:967,123:$VX2,150:$VY2,190:$VZ2}),{20:$V83,22:$V93,23:415,29:[1,968],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,969]},o($V_3,$VB3),{72:$VC3},o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($V$3,$VD3),{52:970,53:$VH2,72:$VE3},o($VT3,$VF3),o($V$3,$VG3),o($VT3,$Vk1,{60:971}),o($VH,$VI,{64:972,66:973,68:974,69:975,75:978,77:979,74:980,46:981,94:982,96:983,89:985,90:986,91:987,80:988,97:995,193:996,93:998,120:999,101:1000,107:1006,109:1007,20:[1,1002],22:[1,1004],28:[1,997],71:[1,976],73:[1,977],81:[1,989],82:[1,990],83:[1,991],87:[1,984],98:[1,992],99:[1,993],100:[1,994],103:$V15,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1005],217:[1,1003]}),o($VT3,$VI3),o($VH,$VI,{64:1008,66:1009,68:1010,69:1011,75:1014,77:1015,74:1016,46:1017,94:1018,96:1019,89:1021,90:1022,91:1023,80:1024,97:1031,193:1032,93:1034,120:1035,101:1036,107:1042,109:1043,20:[1,1038],22:[1,1040],28:[1,1033],71:[1,1012],73:[1,1013],81:[1,1025],82:[1,1026],83:[1,1027],87:[1,1020],98:[1,1028],99:[1,1029],100:[1,1030],103:$V25,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1041],217:[1,1039]}),o($VJ2,$V35),{20:$Vo,22:$Vp,23:1044,216:57,217:$Vq},{20:$V45,22:$V55,102:[1,1057],110:[1,1058],111:[1,1059],112:1056,166:$V65,182:1047,192:1045,193:1046,198:1052,199:1053,200:1054,203:1055,206:[1,1060],207:[1,1061],208:[1,1066],209:[1,1067],210:[1,1068],211:[1,1069],212:[1,1062],213:[1,1063],214:[1,1064],215:[1,1065],217:$V75},o($V85,$Vw4),o($V85,$Vx4),o($V85,$VT1),o($V85,$VU1),o($V85,$VV1),o($V85,$VW1),o($VL2,$V35),{20:$Vo,22:$Vp,23:1070,216:57,217:$Vq},{20:$V95,22:$Va5,102:[1,1083],110:[1,1084],111:[1,1085],112:1082,166:$Vb5,182:1073,192:1071,193:1072,198:1078,199:1079,200:1080,203:1081,206:[1,1086],207:[1,1087],208:[1,1092],209:[1,1093],210:[1,1094],211:[1,1095],212:[1,1088],213:[1,1089],214:[1,1090],215:[1,1091],217:$Vc5},o($VN2,$V35),{20:$Vo,22:$Vp,23:1096,216:57,217:$Vq},{20:$Vd5,22:$Ve5,102:[1,1109],110:[1,1110],111:[1,1111],112:1108,166:$Vf5,182:1099,192:1097,193:1098,198:1104,199:1105,200:1106,203:1107,206:[1,1112],207:[1,1113],208:[1,1118],209:[1,1119],210:[1,1120],211:[1,1121],212:[1,1114],213:[1,1115],214:[1,1116],215:[1,1117],217:$Vg5},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,1122]},o($VC1,$VB3),o($Vy1,$Vh5),{123:$Vi5,136:1123,137:$Vh4},o($Vj4,$Vj5),o($VV2,$VW2,{138:383,139:384,140:385,146:386,148:387,149:388,133:1124,150:$VY2,190:$VZ2}),o($Vj4,$Vk5),o($Vj4,$Vm4,{141:1125,145:1126,142:$Vn4,143:$Vo4}),o($VV2,$VW2,{146:386,148:387,149:388,140:1127,123:$Vl5,137:$Vl5,150:$VY2,190:$VZ2}),o($VV2,$VW2,{146:386,148:387,149:388,140:1128,123:$Vm5,137:$Vm5,150:$VY2,190:$VZ2}),o($Vs4,$Vn5),o($Vs4,$Vo5),o($Vs4,$Vp5),o($Vs4,$Vq5),{20:$Vr5,22:$Vs5,131:1129,166:$Vt5,193:1130,201:$Vu5,217:$Vv5},o($VV2,$VW2,{149:388,128:1136,132:1137,133:1138,134:1139,138:1140,139:1141,140:1142,146:1143,148:1144,150:$VY2,190:$Vw5}),o($Vp4,[2,178]),o($Vp4,[2,183]),o($Vs4,$Vx5),o($Vs4,$Vy5),o($Vs4,$Vz5),o($Vs4,$Vr),o($Vs4,$Vs),o($Vs4,$Vt),o($Vs4,$Vu),o($Vs4,$Vv),o($VV2,[2,168]),o($VV2,$Vy5),o($VV2,$Vz5),o($VV2,$Vr),o($VV2,$Vs),o($VV2,$Vt),o($VV2,$Vu),o($VV2,$Vv),o($Vu4,[2,276]),o($Vv4,[2,147]),o($VO1,[2,191]),o($VO1,[2,198],{171:1146,180:$VA5}),o($VO1,[2,199],{173:1148,180:$VB5}),o($VO1,[2,200],{175:1150,180:$VC5}),o($VD5,[2,192]),o($VD5,[2,194]),o($VD5,[2,196]),{20:$VE5,22:$VF5,23:1152,102:$VG5,110:$VH5,111:$VI5,112:1163,182:1153,186:$VJ5,198:1157,199:1158,200:1159,203:1162,206:$VK5,207:$VL5,208:$VM5,209:$VN5,210:$VO5,211:$VP5,212:$VQ5,213:$VR5,214:$VS5,215:$VT5,216:1156,217:$VU5},o($VO1,[2,201]),o($VO1,[2,206]),o($VD5,[2,202],{177:1177}),o($VO1,[2,210]),o($VO1,[2,215]),o($VD5,[2,211],{184:1178}),o($VO1,[2,217]),o($VO1,[2,223]),o($VD5,[2,219],{189:1179}),o($VO1,[2,218]),o($VA4,$VV5),o($VA4,$VW5),{20:[1,1182],22:[1,1184],89:1180,166:[1,1185],193:1181,217:[1,1183]},o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$VP3),o($VC,$Vh,{56:1186,42:1187,45:$VD}),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1188}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1192],22:[1,1196],23:1190,38:1189,202:1191,216:1193,217:[1,1195],218:[1,1194]},{121:[1,1197],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1198}),o($VC2,$VA1,{95:1199}),o($Vx1,$VB1,{101:747,97:1200,103:$VQ4,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1201]},o($VC2,$VS1),{72:[1,1202]},o($VJ2,$VK2,{85:1203,86:1204,194:1205,191:[1,1206]}),o($VL2,$VK2,{85:1207,86:1208,194:1209,191:$VY5}),o($Vv1,$VO2,{101:471,97:1211,103:$VH3,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1212,97:1213,93:1214,101:1215,107:1217,109:1218,103:$VZ5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1219,86:1220,194:1221,191:[1,1222]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1223],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1224,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1225]},o($VQ1,$VB3),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1226}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1230],22:[1,1234],23:1228,38:1227,202:1229,216:1231,217:[1,1233],218:[1,1232]},{121:[1,1235],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1236}),o($VC2,$VA1,{95:1237}),o($Vx1,$VB1,{101:794,97:1238,103:$VR4,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1239]},o($VC2,$VS1),{72:[1,1240]},o($VJ2,$VK2,{85:1241,86:1242,194:1243,191:[1,1244]}),o($VL2,$VK2,{85:1245,86:1246,194:1247,191:$V_5}),o($Vv1,$VO2,{101:507,97:1249,103:$VJ3,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1250,97:1251,93:1252,101:1253,107:1255,109:1256,103:$V$5,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1257,86:1258,194:1259,191:[1,1260]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1261],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1262,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1263]},o($VQ1,$VB3),o($Vh1,$VO3),o($Vj1,$VP3),o($Vj1,$VQ3),o($Vj1,$VR3),{72:[1,1264]},o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),o($VL2,$VK2,{86:848,194:849,85:1265,191:$VS4}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1266,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:848,194:849,85:1267,191:$VS4}),o($Vx1,$VO2,{101:546,97:1268,103:$VN3,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VS3),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1269,195:[1,1270]}),{20:$V44,22:$V54,131:1271,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1272,195:[1,1273]}),{20:$V44,22:$V54,131:1274,166:$V64,193:647,201:$V74,217:$V84},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1275,195:[1,1276]}),{20:$V44,22:$V54,131:1277,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1278]},o($VC1,$VS1),{102:[1,1280],108:1279,110:[1,1281],111:[1,1282],112:1283,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1284]},{123:[1,1285]},o($VC1,$Vy4),{20:[1,1288],22:[1,1290],89:1286,166:[1,1291],193:1287,217:[1,1289]},o($Vh1,$Vp2,{54:1292,55:[1,1293]}),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:1294,69:1295,74:1296,46:1297,80:1298,120:1302,81:[1,1299],82:[1,1300],83:[1,1301],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:1303,66:1304,75:1305,94:1306,96:1307,97:1311,101:1312,98:[1,1308],99:[1,1309],100:[1,1310],103:$V06,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1314,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:1315}),o($Vx1,$Vw1,{84:1316}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:1317}),o($Vv1,$VB1,{101:895,97:1318,103:$VU4,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:1319}),o($VC1,$VD1,{88:1320}),o($VC1,$VD1,{88:1321}),o($Vx1,$VE1,{107:901,109:902,93:1322,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:1323}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,1327],22:[1,1331],23:1325,38:1324,202:1326,216:1328,217:[1,1330],218:[1,1329]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:1332}),o($VQ1,$VR1),{121:[1,1333],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1334]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,1336],108:1335,110:[1,1337],111:[1,1338],112:1339,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1340]},o($Vj1,$Vq2),o($Vj1,$Vm1,{67:1341,69:1342,74:1343,46:1344,80:1345,120:1349,81:[1,1346],82:[1,1347],83:[1,1348],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:1350,66:1351,75:1352,94:1353,96:1354,97:1358,101:1359,98:[1,1355],99:[1,1356],100:[1,1357],103:$V16,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1361,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:1362}),o($Vx1,$Vw1,{84:1363}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:1364}),o($Vv1,$VB1,{101:931,97:1365,103:$VV4,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:1366}),o($VC1,$VD1,{88:1367}),o($VC1,$VD1,{88:1368}),o($Vx1,$VE1,{107:937,109:938,93:1369,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:1370}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,1374],22:[1,1378],23:1372,38:1371,202:1373,216:1375,217:[1,1377],218:[1,1376]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:1379}),o($VQ1,$VR1),{121:[1,1380],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1381]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,1383],108:1382,110:[1,1384],111:[1,1385],112:1386,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1387]},o($Vx1,$Vh5),o($VZ4,$VK2,{86:952,194:953,85:1388,191:$V_4}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1389,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:952,194:953,85:1390,191:$V_4}),o($VW3,$VO2,{101:606,97:1391,103:$VU3,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VS3),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:1392,195:[1,1393]}),{20:$V44,22:$V54,131:1394,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:1395,195:[1,1396]}),{20:$V44,22:$V54,131:1397,166:$V64,193:647,201:$V74,217:$V84},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:1398,195:[1,1399]}),{20:$V44,22:$V54,131:1400,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,1401]},o($VZ3,$VS1),{102:[1,1403],108:1402,110:[1,1404],111:[1,1405],112:1406,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1407]},{123:[1,1408]},o($VZ3,$Vy4),{20:[1,1411],22:[1,1413],89:1409,166:[1,1414],193:1410,217:[1,1412]},o($V$3,$VO3),o($V$3,$Vp2,{54:1415,55:[1,1416]}),o($VT3,$Vq2),o($VH,$VI,{67:1417,69:1418,74:1419,46:1420,80:1421,120:1425,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,1422],82:[1,1423],83:[1,1424]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:1426,66:1427,75:1428,94:1429,96:1430,97:1434,101:1435,98:[1,1431],99:[1,1432],100:[1,1433],103:$V46,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1437,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:1438}),o($VW3,$Vw1,{84:1439}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:1440}),o($VV3,$VB1,{101:1000,97:1441,103:$V15,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:1442}),o($VZ3,$VD1,{88:1443}),o($VZ3,$VD1,{88:1444}),o($VW3,$VE1,{107:1006,109:1007,93:1445,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:1446}),o($V36,$V71),o($V36,$V81),{20:[1,1450],22:[1,1454],23:1448,38:1447,202:1449,216:1451,217:[1,1453],218:[1,1452]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:1455}),o($V_3,$VR1),{121:[1,1456],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1457]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,1459],108:1458,110:[1,1460],111:[1,1461],112:1462,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1463]},o($VT3,$Vq2),o($VH,$VI,{67:1464,69:1465,74:1466,46:1467,80:1468,120:1472,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,1469],82:[1,1470],83:[1,1471]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:1473,66:1474,75:1475,94:1476,96:1477,97:1481,101:1482,98:[1,1478],99:[1,1479],100:[1,1480],103:$V56,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:1484,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:1485}),o($VW3,$Vw1,{84:1486}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:1487}),o($VV3,$VB1,{101:1036,97:1488,103:$V25,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:1489}),o($VZ3,$VD1,{88:1490}),o($VZ3,$VD1,{88:1491}),o($VW3,$VE1,{107:1042,109:1043,93:1492,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:1493}),o($V36,$V71),o($V36,$V81),{20:[1,1497],22:[1,1501],23:1495,38:1494,202:1496,216:1498,217:[1,1500],218:[1,1499]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:1502}),o($V_3,$VR1),{121:[1,1503],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,1504]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,1506],108:1505,110:[1,1507],111:[1,1508],112:1509,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1510]},{195:[1,1513],196:1511,197:[1,1512]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:1514,205:1515,113:[1,1516]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,1519],196:1517,197:[1,1518]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:1520,205:1521,113:[1,1522]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{195:[1,1525],196:1523,197:[1,1524]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:1526,205:1527,113:[1,1528]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),{20:[1,1531],22:[1,1533],89:1529,166:[1,1534],193:1530,217:[1,1532]},o($Vj4,$Vc6),o($Vj4,$Vd6),o($Vj4,$Ve6),o($Vs4,$Vf6),o($Vs4,$Vg6),o($Vs4,$Vh6),o($VC,$Vh,{48:1535,49:1536,57:1537,61:1538,42:1539,45:$VD}),o($Vi6,$Vw4),o($Vi6,$Vx4),o($Vi6,$VT1),o($Vi6,$VU1),o($Vi6,$VV1),o($Vi6,$VW1),{72:[1,1540]},{72:$Vf4},{72:$Vg4,135:1541,136:1542,137:$Vj6},{72:$Vi4},o($Vk6,$Vk4),o($Vk6,$Vl4),o($Vk6,$Vm4,{141:1544,144:1545,145:1548,142:$Vl6,143:$Vm6}),o($Vp4,$Vq4,{157:680,147:1549,152:1550,153:1551,156:1552,71:[1,1553],162:$Vr4}),o($Vn6,$Vt4),{20:[1,1557],22:[1,1561],23:1555,151:1554,202:1556,216:1558,217:[1,1560],218:[1,1559]},o($VD5,[2,193]),{20:$VE5,22:$VF5,23:1152,216:1156,217:$VU5},o($VD5,[2,195]),{102:$VG5,110:$VH5,111:$VI5,112:1163,182:1153,198:1157,199:1158,200:1159,203:1162,206:$VK5,207:$VL5,208:$VM5,209:$VN5,210:$VO5,211:$VP5,212:$VQ5,213:$VR5,214:$VS5,215:$VT5},o($VD5,[2,197]),{186:$VJ5},o($VD5,$Vo6,{181:1562,179:$Vp6}),o($VD5,$Vo6,{181:1564,179:$Vp6}),o($VD5,$Vo6,{181:1565,179:$Vp6}),o($Vq6,$Vr),o($Vq6,$Vs),o($Vq6,$VB4),o($Vq6,$VC4),o($Vq6,$VD4),o($Vq6,$Vu),o($Vq6,$Vv),o($Vq6,$VE4),o($Vq6,$VF4,{204:1566,205:1567,113:[1,1568]}),o($Vq6,$VG4),o($Vq6,$VH4),o($Vq6,$VI4),o($Vq6,$VJ4),o($Vq6,$VK4),o($Vq6,$VL4),o($Vq6,$VM4),o($Vq6,$VN4),o($Vq6,$VO4),o($Vr6,$Vx3),o($Vr6,$Vy3),o($Vr6,$Vz3),o($Vr6,$VA3),o($VO1,[2,204],{171:1569,180:$VA5}),o($VO1,[2,213],{173:1570,180:$VB5}),o($VO1,[2,221],{175:1571,180:$VC5}),o($VA4,$Vs6),o($VA4,$VN1),o($VA4,$VT1),o($VA4,$VU1),o($VA4,$VV1),o($VA4,$VW1),o($Vj1,$VI3),o($VH,$VI,{64:1572,66:1573,68:1574,69:1575,75:1578,77:1579,74:1580,46:1581,94:1582,96:1583,89:1585,90:1586,91:1587,80:1588,97:1595,193:1596,93:1598,120:1599,101:1600,107:1606,109:1607,20:[1,1602],22:[1,1604],28:[1,1597],71:[1,1576],73:[1,1577],81:[1,1589],82:[1,1590],83:[1,1591],87:[1,1584],98:[1,1592],99:[1,1593],100:[1,1594],103:$Vt6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,1605],217:[1,1603]}),o($VL2,$VK2,{86:1208,194:1209,85:1608,191:$VY5}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1609,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1208,194:1209,85:1610,191:$VY5}),o($Vx1,$VO2,{101:747,97:1611,103:$VQ4,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1612,195:[1,1613]}),{20:$V44,22:$V54,131:1614,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1615,195:[1,1616]}),{20:$V44,22:$V54,131:1617,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1618]},o($VC1,$VS1),{102:[1,1620],108:1619,110:[1,1621],111:[1,1622],112:1623,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1624]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1625,195:[1,1626]}),{20:$V44,22:$V54,131:1627,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,1628]},{20:[1,1631],22:[1,1633],89:1629,166:[1,1634],193:1630,217:[1,1632]},o($VL2,$VK2,{86:1246,194:1247,85:1635,191:$V_5}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1636,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1246,194:1247,85:1637,191:$V_5}),o($Vx1,$VO2,{101:794,97:1638,103:$VR4,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:1639,195:[1,1640]}),{20:$V44,22:$V54,131:1641,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:1642,195:[1,1643]}),{20:$V44,22:$V54,131:1644,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,1645]},o($VC1,$VS1),{102:[1,1647],108:1646,110:[1,1648],111:[1,1649],112:1650,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,1651]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:1652,195:[1,1653]}),{20:$V44,22:$V54,131:1654,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,1655]},{20:[1,1658],22:[1,1660],89:1656,166:[1,1661],193:1657,217:[1,1659]},o($Vj1,$VW4),o($Vj1,$Va4),{123:[1,1662]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:1663,216:57,217:$Vq},{20:$Vu6,22:$Vv6,102:[1,1676],110:[1,1677],111:[1,1678],112:1675,166:$Vw6,182:1666,192:1664,193:1665,198:1671,199:1672,200:1673,203:1674,206:[1,1679],207:[1,1680],208:[1,1685],209:[1,1686],210:[1,1687],211:[1,1688],212:[1,1681],213:[1,1682],214:[1,1683],215:[1,1684],217:$Vx6},o($VL2,$V35),{20:$Vo,22:$Vp,23:1689,216:57,217:$Vq},{20:$Vy6,22:$Vz6,102:[1,1702],110:[1,1703],111:[1,1704],112:1701,166:$VA6,182:1692,192:1690,193:1691,198:1697,199:1698,200:1699,203:1700,206:[1,1705],207:[1,1706],208:[1,1711],209:[1,1712],210:[1,1713],211:[1,1714],212:[1,1707],213:[1,1708],214:[1,1709],215:[1,1710],217:$VB6},o($VN2,$V35),{20:$Vo,22:$Vp,23:1715,216:57,217:$Vq},{20:$VC6,22:$VD6,102:[1,1728],110:[1,1729],111:[1,1730],112:1727,166:$VE6,182:1718,192:1716,193:1717,198:1723,199:1724,200:1725,203:1726,206:[1,1731],207:[1,1732],208:[1,1737],209:[1,1738],210:[1,1739],211:[1,1740],212:[1,1733],213:[1,1734],214:[1,1735],215:[1,1736],217:$VF6},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,1741]},o($VC1,$VB3),o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$VP3),o($VC,$Vh,{56:1742,42:1743,45:$VD}),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1744}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1748],22:[1,1752],23:1746,38:1745,202:1747,216:1749,217:[1,1751],218:[1,1750]},{121:[1,1753],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1754}),o($VC2,$VA1,{95:1755}),o($Vx1,$VB1,{101:1312,97:1756,103:$V06,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1757]},o($VC2,$VS1),{72:[1,1758]},o($VJ2,$VK2,{85:1759,86:1760,194:1761,191:[1,1762]}),o($VL2,$VK2,{85:1763,86:1764,194:1765,191:$VG6}),o($Vv1,$VO2,{101:895,97:1767,103:$VU4,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1768,97:1769,93:1770,101:1771,107:1773,109:1774,103:$VH6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1775,86:1776,194:1777,191:[1,1778]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1779],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1780,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1781]},o($VQ1,$VB3),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:1782}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,1786],22:[1,1790],23:1784,38:1783,202:1785,216:1787,217:[1,1789],218:[1,1788]},{121:[1,1791],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:1792}),o($VC2,$VA1,{95:1793}),o($Vx1,$VB1,{101:1359,97:1794,103:$V16,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,1795]},o($VC2,$VS1),{72:[1,1796]},o($VJ2,$VK2,{85:1797,86:1798,194:1799,191:[1,1800]}),o($VL2,$VK2,{85:1801,86:1802,194:1803,191:$VI6}),o($Vv1,$VO2,{101:931,97:1805,103:$VV4,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:1806,97:1807,93:1808,101:1809,107:1811,109:1812,103:$VJ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:1813,86:1814,194:1815,191:[1,1816]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,1817],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1818,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,1819]},o($VQ1,$VB3),o($VT3,$Va4),{123:[1,1820]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:1821,216:57,217:$Vq},{20:$VK6,22:$VL6,102:[1,1834],110:[1,1835],111:[1,1836],112:1833,166:$VM6,182:1824,192:1822,193:1823,198:1829,199:1830,200:1831,203:1832,206:[1,1837],207:[1,1838],208:[1,1843],209:[1,1844],210:[1,1845],211:[1,1846],212:[1,1839],213:[1,1840],214:[1,1841],215:[1,1842],217:$VN6},o($VZ4,$V35),{20:$Vo,22:$Vp,23:1847,216:57,217:$Vq},{20:$VO6,22:$VP6,102:[1,1860],110:[1,1861],111:[1,1862],112:1859,166:$VQ6,182:1850,192:1848,193:1849,198:1855,199:1856,200:1857,203:1858,206:[1,1863],207:[1,1864],208:[1,1869],209:[1,1870],210:[1,1871],211:[1,1872],212:[1,1865],213:[1,1866],214:[1,1867],215:[1,1868],217:$VR6},o($V$4,$V35),{20:$Vo,22:$Vp,23:1873,216:57,217:$Vq},{20:$VS6,22:$VT6,102:[1,1886],110:[1,1887],111:[1,1888],112:1885,166:$VU6,182:1876,192:1874,193:1875,198:1881,199:1882,200:1883,203:1884,206:[1,1889],207:[1,1890],208:[1,1895],209:[1,1896],210:[1,1897],211:[1,1898],212:[1,1891],213:[1,1892],214:[1,1893],215:[1,1894],217:$VV6},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,1899]},o($VZ3,$VB3),o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VT3,$VP3),o($VC,$Vh,{56:1900,42:1901,45:$VD}),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:1902}),o($VT3,$V71),o($VT3,$V81),{20:[1,1906],22:[1,1910],23:1904,38:1903,202:1905,216:1907,217:[1,1909],218:[1,1908]},{121:[1,1911],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:1912}),o($VX4,$VA1,{95:1913}),o($VW3,$VB1,{101:1435,97:1914,103:$V46,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,1915]},o($VX4,$VS1),{72:[1,1916]},o($VY4,$VK2,{85:1917,86:1918,194:1919,191:[1,1920]}),o($VZ4,$VK2,{85:1921,86:1922,194:1923,191:$VW6}),o($VV3,$VO2,{101:1000,97:1925,103:$V15,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:1926,97:1927,93:1928,101:1929,107:1931,109:1932,103:$VX6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:1933,86:1934,194:1935,191:[1,1936]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,1937],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1938,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,1939]},o($V_3,$VB3),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:1940}),o($VT3,$V71),o($VT3,$V81),{20:[1,1944],22:[1,1948],23:1942,38:1941,202:1943,216:1945,217:[1,1947],218:[1,1946]},{121:[1,1949],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:1950}),o($VX4,$VA1,{95:1951}),o($VW3,$VB1,{101:1482,97:1952,103:$V56,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,1953]},o($VX4,$VS1),{72:[1,1954]},o($VY4,$VK2,{85:1955,86:1956,194:1957,191:[1,1958]}),o($VZ4,$VK2,{85:1959,86:1960,194:1961,191:$VY6}),o($VV3,$VO2,{101:1036,97:1963,103:$V25,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:1964,97:1965,93:1966,101:1967,107:1969,109:1970,103:$VZ6,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:1971,86:1972,194:1973,191:[1,1974]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,1975],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:1976,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,1977]},o($V_3,$VB3),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$V45,22:$V55,89:1978,166:$V65,193:1979,217:$V75},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$V95,22:$Va5,89:1980,166:$Vb5,193:1981,217:$Vc5},o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vd5,22:$Ve5,89:1982,166:$Vf5,193:1983,217:$Vg5},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($V_6,$V$6,{154:1984,155:1985,158:$V07,159:$V17,160:$V27,161:$V37}),o($V47,$V57),o($V67,$V77,{58:1990}),o($V87,$V97,{62:1991}),o($VH,$VI,{65:1992,75:1993,77:1994,78:1995,94:1998,96:1999,89:2001,90:2002,91:2003,80:2004,46:2005,97:2009,193:2010,93:2012,120:2013,101:2017,107:2023,109:2024,20:[1,2019],22:[1,2021],28:[1,2011],71:[1,1996],73:[1,1997],81:[1,2014],82:[1,2015],83:[1,2016],87:[1,2000],98:[1,2006],99:[1,2007],100:[1,2008],103:$Va7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2022],217:[1,2020]}),o($V_6,$V$6,{155:1985,154:2025,158:$V07,159:$V17,160:$V27,161:$V37}),{72:$Vi5,136:2026,137:$Vj6},o($Vk6,$Vj5),o($VV2,$VW2,{149:388,138:1140,139:1141,140:1142,146:1143,148:1144,133:2027,150:$VY2,190:$Vw5}),o($Vk6,$Vk5),o($Vk6,$Vm4,{141:2028,145:2029,142:$Vl6,143:$Vm6}),o($VV2,$VW2,{149:388,146:1143,148:1144,140:2030,72:$Vl5,137:$Vl5,150:$VY2,190:$Vw5}),o($VV2,$VW2,{149:388,146:1143,148:1144,140:2031,72:$Vm5,137:$Vm5,150:$VY2,190:$Vw5}),o($Vn6,$Vn5),o($Vn6,$Vo5),o($Vn6,$Vp5),o($Vn6,$Vq5),{20:$Vr5,22:$Vs5,131:2032,166:$Vt5,193:1130,201:$Vu5,217:$Vv5},o($VV2,$VW2,{149:388,132:1137,133:1138,134:1139,138:1140,139:1141,140:1142,146:1143,148:1144,128:2033,150:$VY2,190:$Vw5}),o($Vn6,$Vx5),o($Vn6,$Vy5),o($Vn6,$Vz5),o($Vn6,$Vr),o($Vn6,$Vs),o($Vn6,$Vt),o($Vn6,$Vu),o($Vn6,$Vv),o($VD5,[2,207]),o($VD5,[2,209]),o($VD5,[2,216]),o($VD5,[2,224]),o($Vq6,$VV5),o($Vq6,$VW5),{20:[1,2036],22:[1,2038],89:2034,166:[1,2039],193:2035,217:[1,2037]},o($VD5,[2,203]),o($VD5,[2,212]),o($VD5,[2,220]),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:2040,69:2041,74:2042,46:2043,80:2044,120:2048,81:[1,2045],82:[1,2046],83:[1,2047],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:2049,66:2050,75:2051,94:2052,96:2053,97:2057,101:2058,98:[1,2054],99:[1,2055],100:[1,2056],103:$Vb7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2060,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:2061}),o($Vx1,$Vw1,{84:2062}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:2063}),o($Vv1,$VB1,{101:1600,97:2064,103:$Vt6,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:2065}),o($VC1,$VD1,{88:2066}),o($VC1,$VD1,{88:2067}),o($Vx1,$VE1,{107:1606,109:1607,93:2068,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:2069}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,2073],22:[1,2077],23:2071,38:2070,202:2072,216:2074,217:[1,2076],218:[1,2075]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:2078}),o($VQ1,$VR1),{121:[1,2079],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2080]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,2082],108:2081,110:[1,2083],111:[1,2084],112:2085,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2086]},o($Vj1,$Va4),{123:[1,2087]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2088,216:57,217:$Vq},{20:$Vc7,22:$Vd7,102:[1,2101],110:[1,2102],111:[1,2103],112:2100,166:$Ve7,182:2091,192:2089,193:2090,198:2096,199:2097,200:2098,203:2099,206:[1,2104],207:[1,2105],208:[1,2110],209:[1,2111],210:[1,2112],211:[1,2113],212:[1,2106],213:[1,2107],214:[1,2108],215:[1,2109],217:$Vf7},o($VL2,$V35),{20:$Vo,22:$Vp,23:2114,216:57,217:$Vq},{20:$Vg7,22:$Vh7,102:[1,2127],110:[1,2128],111:[1,2129],112:2126,166:$Vi7,182:2117,192:2115,193:2116,198:2122,199:2123,200:2124,203:2125,206:[1,2130],207:[1,2131],208:[1,2136],209:[1,2137],210:[1,2138],211:[1,2139],212:[1,2132],213:[1,2133],214:[1,2134],215:[1,2135],217:$Vj7},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2140]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2141,216:57,217:$Vq},{20:$Vk7,22:$Vl7,102:[1,2154],110:[1,2155],111:[1,2156],112:2153,166:$Vm7,182:2144,192:2142,193:2143,198:2149,199:2150,200:2151,203:2152,206:[1,2157],207:[1,2158],208:[1,2163],209:[1,2164],210:[1,2165],211:[1,2166],212:[1,2159],213:[1,2160],214:[1,2161],215:[1,2162],217:$Vn7},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$Va4),{123:[1,2167]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2168,216:57,217:$Vq},{20:$Vo7,22:$Vp7,102:[1,2181],110:[1,2182],111:[1,2183],112:2180,166:$Vq7,182:2171,192:2169,193:2170,198:2176,199:2177,200:2178,203:2179,206:[1,2184],207:[1,2185],208:[1,2190],209:[1,2191],210:[1,2192],211:[1,2193],212:[1,2186],213:[1,2187],214:[1,2188],215:[1,2189],217:$Vr7},o($VL2,$V35),{20:$Vo,22:$Vp,23:2194,216:57,217:$Vq},{20:$Vs7,22:$Vt7,102:[1,2207],110:[1,2208],111:[1,2209],112:2206,166:$Vu7,182:2197,192:2195,193:2196,198:2202,199:2203,200:2204,203:2205,206:[1,2210],207:[1,2211],208:[1,2216],209:[1,2217],210:[1,2218],211:[1,2219],212:[1,2212],213:[1,2213],214:[1,2214],215:[1,2215],217:$Vv7},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2220]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2221,216:57,217:$Vq},{20:$Vw7,22:$Vx7,102:[1,2234],110:[1,2235],111:[1,2236],112:2233,166:$Vy7,182:2224,192:2222,193:2223,198:2229,199:2230,200:2231,203:2232,206:[1,2237],207:[1,2238],208:[1,2243],209:[1,2244],210:[1,2245],211:[1,2246],212:[1,2239],213:[1,2240],214:[1,2241],215:[1,2242],217:$Vz7},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vx1,$Vh5),{195:[1,2249],196:2247,197:[1,2248]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2250,205:2251,113:[1,2252]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2255],196:2253,197:[1,2254]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2256,205:2257,113:[1,2258]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{195:[1,2261],196:2259,197:[1,2260]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2262,205:2263,113:[1,2264]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),{20:[1,2267],22:[1,2269],89:2265,166:[1,2270],193:2266,217:[1,2268]},o($Vj1,$VI3),o($VH,$VI,{64:2271,66:2272,68:2273,69:2274,75:2277,77:2278,74:2279,46:2280,94:2281,96:2282,89:2284,90:2285,91:2286,80:2287,97:2294,193:2295,93:2297,120:2298,101:2299,107:2305,109:2306,20:[1,2301],22:[1,2303],28:[1,2296],71:[1,2275],73:[1,2276],81:[1,2288],82:[1,2289],83:[1,2290],87:[1,2283],98:[1,2291],99:[1,2292],100:[1,2293],103:$VA7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2304],217:[1,2302]}),o($VL2,$VK2,{86:1764,194:1765,85:2307,191:$VG6}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2308,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1764,194:1765,85:2309,191:$VG6}),o($Vx1,$VO2,{101:1312,97:2310,103:$V06,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:2311,195:[1,2312]}),{20:$V44,22:$V54,131:2313,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:2314,195:[1,2315]}),{20:$V44,22:$V54,131:2316,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,2317]},o($VC1,$VS1),{102:[1,2319],108:2318,110:[1,2320],111:[1,2321],112:2322,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2323]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:2324,195:[1,2325]}),{20:$V44,22:$V54,131:2326,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,2327]},{20:[1,2330],22:[1,2332],89:2328,166:[1,2333],193:2329,217:[1,2331]},o($VL2,$VK2,{86:1802,194:1803,85:2334,191:$VI6}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2335,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:1802,194:1803,85:2336,191:$VI6}),o($Vx1,$VO2,{101:1359,97:2337,103:$V16,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:2338,195:[1,2339]}),{20:$V44,22:$V54,131:2340,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:2341,195:[1,2342]}),{20:$V44,22:$V54,131:2343,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,2344]},o($VC1,$VS1),{102:[1,2346],108:2345,110:[1,2347],111:[1,2348],112:2349,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2350]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:2351,195:[1,2352]}),{20:$V44,22:$V54,131:2353,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,2354]},{20:[1,2357],22:[1,2359],89:2355,166:[1,2360],193:2356,217:[1,2358]},o($VW3,$Vh5),{195:[1,2363],196:2361,197:[1,2362]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:2364,205:2365,113:[1,2366]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,2369],196:2367,197:[1,2368]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:2370,205:2371,113:[1,2372]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{195:[1,2375],196:2373,197:[1,2374]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:2376,205:2377,113:[1,2378]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),{20:[1,2381],22:[1,2383],89:2379,166:[1,2384],193:2380,217:[1,2382]},o($VT3,$VI3),o($VH,$VI,{64:2385,66:2386,68:2387,69:2388,75:2391,77:2392,74:2393,46:2394,94:2395,96:2396,89:2398,90:2399,91:2400,80:2401,97:2408,193:2409,93:2411,120:2412,101:2413,107:2419,109:2420,20:[1,2415],22:[1,2417],28:[1,2410],71:[1,2389],73:[1,2390],81:[1,2402],82:[1,2403],83:[1,2404],87:[1,2397],98:[1,2405],99:[1,2406],100:[1,2407],103:$VE7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,2418],217:[1,2416]}),o($VZ4,$VK2,{86:1922,194:1923,85:2421,191:$VW6}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2422,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:1922,194:1923,85:2423,191:$VW6}),o($VW3,$VO2,{101:1435,97:2424,103:$V46,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:2425,195:[1,2426]}),{20:$V44,22:$V54,131:2427,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:2428,195:[1,2429]}),{20:$V44,22:$V54,131:2430,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,2431]},o($VZ3,$VS1),{102:[1,2433],108:2432,110:[1,2434],111:[1,2435],112:2436,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2437]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:2438,195:[1,2439]}),{20:$V44,22:$V54,131:2440,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,2441]},{20:[1,2444],22:[1,2446],89:2442,166:[1,2447],193:2443,217:[1,2445]},o($VZ4,$VK2,{86:1960,194:1961,85:2448,191:$VY6}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2449,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:1960,194:1961,85:2450,191:$VY6}),o($VW3,$VO2,{101:1482,97:2451,103:$V56,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:2452,195:[1,2453]}),{20:$V44,22:$V54,131:2454,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:2455,195:[1,2456]}),{20:$V44,22:$V54,131:2457,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,2458]},o($VZ3,$VS1),{102:[1,2460],108:2459,110:[1,2461],111:[1,2462],112:2463,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2464]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:2465,195:[1,2466]}),{20:$V44,22:$V54,131:2467,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,2468]},{20:[1,2471],22:[1,2473],89:2469,166:[1,2474],193:2470,217:[1,2472]},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($V_6,$Vw1,{84:2475}),o($V_6,$VF7),o($V_6,$VG7),o($V_6,$VH7),o($V_6,$VI7),o($V_6,$VJ7),o($V47,$VK7,{59:2476,53:[1,2477]}),o($V67,$VL7,{63:2478,55:[1,2479]}),o($V87,$VM7),o($V87,$VN7,{76:2480,78:2481,80:2482,46:2483,120:2484,81:[1,2485],82:[1,2486],83:[1,2487],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:2488,75:2489,94:2490,96:2491,97:2495,101:2496,98:[1,2492],99:[1,2493],100:[1,2494],103:$VQ7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2498,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:2499}),o($VT7,$VB1,{101:2017,97:2500,103:$Va7,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:2501}),o($VU7,$VD1,{88:2502}),o($VU7,$VD1,{88:2503}),o($V87,$VE1,{107:2023,109:2024,93:2504,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:2505}),o($VY7,$VR1),{121:[1,2506],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,2510],22:[1,2514],23:2508,38:2507,202:2509,216:2511,217:[1,2513],218:[1,2512]},{102:[1,2515]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,2517],108:2516,110:[1,2518],111:[1,2519],112:2520,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2521]},o($V_6,$Vw1,{84:2522}),o($Vk6,$Vc6),o($Vk6,$Vd6),o($Vk6,$Ve6),o($Vn6,$Vf6),o($Vn6,$Vg6),o($Vn6,$Vh6),o($VC,$Vh,{48:2523,49:2524,57:2525,61:2526,42:2527,45:$VD}),{72:[1,2528]},o($Vq6,$Vs6),o($Vq6,$VN1),o($Vq6,$VT1),o($Vq6,$VU1),o($Vq6,$VV1),o($Vq6,$VW1),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:2529}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,2533],22:[1,2537],23:2531,38:2530,202:2532,216:2534,217:[1,2536],218:[1,2535]},{121:[1,2538],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:2539}),o($VC2,$VA1,{95:2540}),o($Vx1,$VB1,{101:2058,97:2541,103:$Vb7,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,2542]},o($VC2,$VS1),{72:[1,2543]},o($VJ2,$VK2,{85:2544,86:2545,194:2546,191:[1,2547]}),o($VL2,$VK2,{85:2548,86:2549,194:2550,191:$VZ7}),o($Vv1,$VO2,{101:1600,97:2552,103:$Vt6,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:2553,97:2554,93:2555,101:2556,107:2558,109:2559,103:$V_7,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:2560,86:2561,194:2562,191:[1,2563]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,2564],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:2565,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,2566]},o($VQ1,$VB3),o($Vx1,$Vh5),{195:[1,2569],196:2567,197:[1,2568]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2570,205:2571,113:[1,2572]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2575],196:2573,197:[1,2574]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2576,205:2577,113:[1,2578]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,2581],22:[1,2583],89:2579,166:[1,2584],193:2580,217:[1,2582]},{195:[1,2587],196:2585,197:[1,2586]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2588,205:2589,113:[1,2590]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vx1,$Vh5),{195:[1,2593],196:2591,197:[1,2592]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:2594,205:2595,113:[1,2596]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,2599],196:2597,197:[1,2598]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:2600,205:2601,113:[1,2602]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,2605],22:[1,2607],89:2603,166:[1,2608],193:2604,217:[1,2606]},{195:[1,2611],196:2609,197:[1,2610]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:2612,205:2613,113:[1,2614]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vu6,22:$Vv6,89:2615,166:$Vw6,193:2616,217:$Vx6},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vy6,22:$Vz6,89:2617,166:$VA6,193:2618,217:$VB6},o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$VC6,22:$VD6,89:2619,166:$VE6,193:2620,217:$VF6},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($Vj1,$Vq2),o($Vj1,$Vm1,{67:2621,69:2622,74:2623,46:2624,80:2625,120:2629,81:[1,2626],82:[1,2627],83:[1,2628],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($Vj1,$Vr2),o($Vj1,$Vo1,{70:2630,66:2631,75:2632,94:2633,96:2634,97:2638,101:2639,98:[1,2635],99:[1,2636],100:[1,2637],103:$V$7,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2641,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($Vj1,$Vs2),o($Vv1,$Vw1,{84:2642}),o($Vx1,$Vw1,{84:2643}),o($Vt2,$Vu2),o($Vt2,$Vv2),o($Vz1,$VA1,{95:2644}),o($Vv1,$VB1,{101:2299,97:2645,103:$VA7,104:$VR,105:$VS,106:$VT}),o($VC1,$VD1,{88:2646}),o($VC1,$VD1,{88:2647}),o($VC1,$VD1,{88:2648}),o($Vx1,$VE1,{107:2305,109:2306,93:2649,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vy1,$Vw1,{84:2650}),o($Vt2,$V71),o($Vt2,$V81),{20:[1,2654],22:[1,2658],23:2652,38:2651,202:2653,216:2655,217:[1,2657],218:[1,2656]},o($Vz1,$VJ1),o($Vz1,$VK1),o($Vz1,$VL1),o($Vz1,$VM1),o($VC1,$VN1),o($VO1,$VP1,{163:2659}),o($VQ1,$VR1),{121:[1,2660],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2661]},o($Vz1,$VS1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),{102:[1,2663],108:2662,110:[1,2664],111:[1,2665],112:2666,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2667]},o($Vj1,$Va4),{123:[1,2668]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2669,216:57,217:$Vq},{20:$V08,22:$V18,102:[1,2682],110:[1,2683],111:[1,2684],112:2681,166:$V28,182:2672,192:2670,193:2671,198:2677,199:2678,200:2679,203:2680,206:[1,2685],207:[1,2686],208:[1,2691],209:[1,2692],210:[1,2693],211:[1,2694],212:[1,2687],213:[1,2688],214:[1,2689],215:[1,2690],217:$V38},o($VL2,$V35),{20:$Vo,22:$Vp,23:2695,216:57,217:$Vq},{20:$V48,22:$V58,102:[1,2708],110:[1,2709],111:[1,2710],112:2707,166:$V68,182:2698,192:2696,193:2697,198:2703,199:2704,200:2705,203:2706,206:[1,2711],207:[1,2712],208:[1,2717],209:[1,2718],210:[1,2719],211:[1,2720],212:[1,2713],213:[1,2714],214:[1,2715],215:[1,2716],217:$V78},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2721]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2722,216:57,217:$Vq},{20:$V88,22:$V98,102:[1,2735],110:[1,2736],111:[1,2737],112:2734,166:$Va8,182:2725,192:2723,193:2724,198:2730,199:2731,200:2732,203:2733,206:[1,2738],207:[1,2739],208:[1,2744],209:[1,2745],210:[1,2746],211:[1,2747],212:[1,2740],213:[1,2741],214:[1,2742],215:[1,2743],217:$Vb8},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vj1,$Va4),{123:[1,2748]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:2749,216:57,217:$Vq},{20:$Vc8,22:$Vd8,102:[1,2762],110:[1,2763],111:[1,2764],112:2761,166:$Ve8,182:2752,192:2750,193:2751,198:2757,199:2758,200:2759,203:2760,206:[1,2765],207:[1,2766],208:[1,2771],209:[1,2772],210:[1,2773],211:[1,2774],212:[1,2767],213:[1,2768],214:[1,2769],215:[1,2770],217:$Vf8},o($VL2,$V35),{20:$Vo,22:$Vp,23:2775,216:57,217:$Vq},{20:$Vg8,22:$Vh8,102:[1,2788],110:[1,2789],111:[1,2790],112:2787,166:$Vi8,182:2778,192:2776,193:2777,198:2783,199:2784,200:2785,203:2786,206:[1,2791],207:[1,2792],208:[1,2797],209:[1,2798],210:[1,2799],211:[1,2800],212:[1,2793],213:[1,2794],214:[1,2795],215:[1,2796],217:$Vj8},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,2801]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:2802,216:57,217:$Vq},{20:$Vk8,22:$Vl8,102:[1,2815],110:[1,2816],111:[1,2817],112:2814,166:$Vm8,182:2805,192:2803,193:2804,198:2810,199:2811,200:2812,203:2813,206:[1,2818],207:[1,2819],208:[1,2824],209:[1,2825],210:[1,2826],211:[1,2827],212:[1,2820],213:[1,2821],214:[1,2822],215:[1,2823],217:$Vn8},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VK6,22:$VL6,89:2828,166:$VM6,193:2829,217:$VN6},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VO6,22:$VP6,89:2830,166:$VQ6,193:2831,217:$VR6},o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$VS6,22:$VT6,89:2832,166:$VU6,193:2833,217:$VV6},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($VT3,$Vq2),o($VH,$VI,{67:2834,69:2835,74:2836,46:2837,80:2838,120:2842,53:$Vm1,55:$Vm1,72:$Vm1,81:[1,2839],82:[1,2840],83:[1,2841]}),o($VT3,$Vr2),o($VT3,$Vo1,{70:2843,66:2844,75:2845,94:2846,96:2847,97:2851,101:2852,98:[1,2848],99:[1,2849],100:[1,2850],103:$Vo8,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:2854,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($VT3,$Vs2),o($VV3,$Vw1,{84:2855}),o($VW3,$Vw1,{84:2856}),o($V36,$Vu2),o($V36,$Vv2),o($VY3,$VA1,{95:2857}),o($VV3,$VB1,{101:2413,97:2858,103:$VE7,104:$VR,105:$VS,106:$VT}),o($VZ3,$VD1,{88:2859}),o($VZ3,$VD1,{88:2860}),o($VZ3,$VD1,{88:2861}),o($VW3,$VE1,{107:2419,109:2420,93:2862,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VX3,$Vw1,{84:2863}),o($V36,$V71),o($V36,$V81),{20:[1,2867],22:[1,2871],23:2865,38:2864,202:2866,216:2868,217:[1,2870],218:[1,2869]},o($VY3,$VJ1),o($VY3,$VK1),o($VY3,$VL1),o($VY3,$VM1),o($VZ3,$VN1),o($VO1,$VP1,{163:2872}),o($V_3,$VR1),{121:[1,2873],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},{102:[1,2874]},o($VY3,$VS1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),{102:[1,2876],108:2875,110:[1,2877],111:[1,2878],112:2879,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,2880]},o($VT3,$Va4),{123:[1,2881]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:2882,216:57,217:$Vq},{20:$Vp8,22:$Vq8,102:[1,2895],110:[1,2896],111:[1,2897],112:2894,166:$Vr8,182:2885,192:2883,193:2884,198:2890,199:2891,200:2892,203:2893,206:[1,2898],207:[1,2899],208:[1,2904],209:[1,2905],210:[1,2906],211:[1,2907],212:[1,2900],213:[1,2901],214:[1,2902],215:[1,2903],217:$Vs8},o($VZ4,$V35),{20:$Vo,22:$Vp,23:2908,216:57,217:$Vq},{20:$Vt8,22:$Vu8,102:[1,2921],110:[1,2922],111:[1,2923],112:2920,166:$Vv8,182:2911,192:2909,193:2910,198:2916,199:2917,200:2918,203:2919,206:[1,2924],207:[1,2925],208:[1,2930],209:[1,2931],210:[1,2932],211:[1,2933],212:[1,2926],213:[1,2927],214:[1,2928],215:[1,2929],217:$Vw8},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,2934]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:2935,216:57,217:$Vq},{20:$Vx8,22:$Vy8,102:[1,2948],110:[1,2949],111:[1,2950],112:2947,166:$Vz8,182:2938,192:2936,193:2937,198:2943,199:2944,200:2945,203:2946,206:[1,2951],207:[1,2952],208:[1,2957],209:[1,2958],210:[1,2959],211:[1,2960],212:[1,2953],213:[1,2954],214:[1,2955],215:[1,2956],217:$VA8},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VT3,$Va4),{123:[1,2961]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:2962,216:57,217:$Vq},{20:$VB8,22:$VC8,102:[1,2975],110:[1,2976],111:[1,2977],112:2974,166:$VD8,182:2965,192:2963,193:2964,198:2970,199:2971,200:2972,203:2973,206:[1,2978],207:[1,2979],208:[1,2984],209:[1,2985],210:[1,2986],211:[1,2987],212:[1,2980],213:[1,2981],214:[1,2982],215:[1,2983],217:$VE8},o($VZ4,$V35),{20:$Vo,22:$Vp,23:2988,216:57,217:$Vq},{20:$VF8,22:$VG8,102:[1,3001],110:[1,3002],111:[1,3003],112:3000,166:$VH8,182:2991,192:2989,193:2990,198:2996,199:2997,200:2998,203:2999,206:[1,3004],207:[1,3005],208:[1,3010],209:[1,3011],210:[1,3012],211:[1,3013],212:[1,3006],213:[1,3007],214:[1,3008],215:[1,3009],217:$VI8},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,3014]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:3015,216:57,217:$Vq},{20:$VJ8,22:$VK8,102:[1,3028],110:[1,3029],111:[1,3030],112:3027,166:$VL8,182:3018,192:3016,193:3017,198:3023,199:3024,200:3025,203:3026,206:[1,3031],207:[1,3032],208:[1,3037],209:[1,3038],210:[1,3039],211:[1,3040],212:[1,3033],213:[1,3034],214:[1,3035],215:[1,3036],217:$VM8},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VN8,$VK2,{85:3041,86:3042,194:3043,191:$VO8}),o($V67,$VP8),o($VC,$Vh,{57:3045,61:3046,42:3047,45:$VD}),o($V87,$VQ8),o($VC,$Vh,{61:3048,42:3049,45:$VD}),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3050],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3054],22:[1,3058],23:3052,38:3051,202:3053,216:3055,217:[1,3057],218:[1,3056]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3059}),o($V87,$VB1,{101:2496,97:3060,103:$VQ7,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3061]},o($VV8,$VS1),{72:[1,3062]},o($VT7,$VO2,{101:2017,97:3063,103:$Va7,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3064,97:3065,93:3066,101:3067,107:3069,109:3070,103:$VW8,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,3071],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3072,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,3073]},o($VY7,$VB3),o($VN8,$VK2,{86:3042,194:3043,85:3074,191:$VO8}),o($VX8,$V$6,{154:3075,155:3076,158:$VY8,159:$VZ8,160:$V_8,161:$V$8}),o($V09,$V57),o($V19,$V77,{58:3081}),o($V29,$V97,{62:3082}),o($VH,$VI,{65:3083,75:3084,77:3085,78:3086,94:3089,96:3090,89:3092,90:3093,91:3094,80:3095,46:3096,97:3100,193:3101,93:3103,120:3104,101:3108,107:3114,109:3115,20:[1,3110],22:[1,3112],28:[1,3102],71:[1,3087],73:[1,3088],81:[1,3105],82:[1,3106],83:[1,3107],87:[1,3091],98:[1,3097],99:[1,3098],100:[1,3099],103:$V39,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3113],217:[1,3111]}),o($VX8,$V$6,{155:3076,154:3116,158:$VY8,159:$VZ8,160:$V_8,161:$V$8}),o($VL2,$VK2,{86:2549,194:2550,85:3117,191:$VZ7}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3118,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:2549,194:2550,85:3119,191:$VZ7}),o($Vx1,$VO2,{101:2058,97:3120,103:$Vb7,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:3121,195:[1,3122]}),{20:$V44,22:$V54,131:3123,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:3124,195:[1,3125]}),{20:$V44,22:$V54,131:3126,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,3127]},o($VC1,$VS1),{102:[1,3129],108:3128,110:[1,3130],111:[1,3131],112:3132,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3133]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:3134,195:[1,3135]}),{20:$V44,22:$V54,131:3136,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,3137]},{20:[1,3140],22:[1,3142],89:3138,166:[1,3143],193:3139,217:[1,3141]},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vc7,22:$Vd7,89:3144,166:$Ve7,193:3145,217:$Vf7},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vg7,22:$Vh7,89:3146,166:$Vi7,193:3147,217:$Vj7},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vk7,22:$Vl7,89:3148,166:$Vm7,193:3149,217:$Vn7},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vo7,22:$Vp7,89:3150,166:$Vq7,193:3151,217:$Vr7},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vs7,22:$Vt7,89:3152,166:$Vu7,193:3153,217:$Vv7},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vw7,22:$Vx7,89:3154,166:$Vy7,193:3155,217:$Vz7},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vj1,$VQ3),o($Vj1,$Vz2),o($Vj1,$Vu2),o($Vj1,$Vv2),o($Vx1,$Vw1,{84:3156}),o($Vj1,$V71),o($Vj1,$V81),{20:[1,3160],22:[1,3164],23:3158,38:3157,202:3159,216:3161,217:[1,3163],218:[1,3162]},{121:[1,3165],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj1,$VR3),o($Vj1,$VB2),o($Vx1,$Vw1,{84:3166}),o($VC2,$VA1,{95:3167}),o($Vx1,$VB1,{101:2639,97:3168,103:$V$7,104:$VR,105:$VS,106:$VT}),o($VC2,$VJ1),o($VC2,$VK1),o($VC2,$VL1),o($VC2,$VM1),{102:[1,3169]},o($VC2,$VS1),{72:[1,3170]},o($VJ2,$VK2,{85:3171,86:3172,194:3173,191:[1,3174]}),o($VL2,$VK2,{85:3175,86:3176,194:3177,191:$V49}),o($Vv1,$VO2,{101:2299,97:3179,103:$VA7,104:$VR,105:$VS,106:$VT}),o($Vz1,$VP2),o($Vx1,$VQ2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VS2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vx1,$VT2,{92:3180,97:3181,93:3182,101:3183,107:3185,109:3186,103:$V59,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VQ1,$VU2),o($VN2,$VK2,{85:3187,86:3188,194:3189,191:[1,3190]}),o($Vt2,$V42),o($Vt2,$Vm),o($Vt2,$Vn),o($Vt2,$Vr),o($Vt2,$Vs),o($Vt2,$Vt),o($Vt2,$Vu),o($Vt2,$Vv),{20:$V83,22:$V93,23:415,29:[1,3191],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3192,123:$VX2,150:$VY2,190:$VZ2}),o($Vz1,$Vs3),o($VQ1,$Vt3),o($VQ1,$Vu3),o($VQ1,$Vv3),o($VQ1,$Vw3),{113:[1,3193]},o($VQ1,$VB3),o($Vx1,$Vh5),{195:[1,3196],196:3194,197:[1,3195]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3197,205:3198,113:[1,3199]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3202],196:3200,197:[1,3201]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3203,205:3204,113:[1,3205]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3208],22:[1,3210],89:3206,166:[1,3211],193:3207,217:[1,3209]},{195:[1,3214],196:3212,197:[1,3213]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3215,205:3216,113:[1,3217]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vx1,$Vh5),{195:[1,3220],196:3218,197:[1,3219]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3221,205:3222,113:[1,3223]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3226],196:3224,197:[1,3225]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3227,205:3228,113:[1,3229]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3232],22:[1,3234],89:3230,166:[1,3235],193:3231,217:[1,3233]},{195:[1,3238],196:3236,197:[1,3237]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3239,205:3240,113:[1,3241]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($VT3,$VQ3),o($VT3,$Vz2),o($VT3,$Vu2),o($VT3,$Vv2),o($VW3,$Vw1,{84:3242}),o($VT3,$V71),o($VT3,$V81),{20:[1,3246],22:[1,3250],23:3244,38:3243,202:3245,216:3247,217:[1,3249],218:[1,3248]},{121:[1,3251],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VT3,$VR3),o($VT3,$VB2),o($VW3,$Vw1,{84:3252}),o($VX4,$VA1,{95:3253}),o($VW3,$VB1,{101:2852,97:3254,103:$Vo8,104:$VR,105:$VS,106:$VT}),o($VX4,$VJ1),o($VX4,$VK1),o($VX4,$VL1),o($VX4,$VM1),{102:[1,3255]},o($VX4,$VS1),{72:[1,3256]},o($VY4,$VK2,{85:3257,86:3258,194:3259,191:[1,3260]}),o($VZ4,$VK2,{85:3261,86:3262,194:3263,191:$V69}),o($VV3,$VO2,{101:2413,97:3265,103:$VE7,104:$VR,105:$VS,106:$VT}),o($VY3,$VP2),o($VW3,$VQ2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VS2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VW3,$VT2,{92:3266,97:3267,93:3268,101:3269,107:3271,109:3272,103:$V79,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V_3,$VU2),o($V$4,$VK2,{85:3273,86:3274,194:3275,191:[1,3276]}),o($V36,$V42),o($V36,$Vm),o($V36,$Vn),o($V36,$Vr),o($V36,$Vs),o($V36,$Vt),o($V36,$Vu),o($V36,$Vv),{20:$V83,22:$V93,23:415,29:[1,3277],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3278,123:$VX2,150:$VY2,190:$VZ2}),o($VY3,$Vs3),o($V_3,$Vt3),o($V_3,$Vu3),o($V_3,$Vv3),o($V_3,$Vw3),{113:[1,3279]},o($V_3,$VB3),o($VW3,$Vh5),{195:[1,3282],196:3280,197:[1,3281]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:3283,205:3284,113:[1,3285]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,3288],196:3286,197:[1,3287]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:3289,205:3290,113:[1,3291]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,3294],22:[1,3296],89:3292,166:[1,3297],193:3293,217:[1,3295]},{195:[1,3300],196:3298,197:[1,3299]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:3301,205:3302,113:[1,3303]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($VW3,$Vh5),{195:[1,3306],196:3304,197:[1,3305]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:3307,205:3308,113:[1,3309]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,3312],196:3310,197:[1,3311]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:3313,205:3314,113:[1,3315]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,3318],22:[1,3320],89:3316,166:[1,3321],193:3317,217:[1,3319]},{195:[1,3324],196:3322,197:[1,3323]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:3325,205:3326,113:[1,3327]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($Vs4,$V89),o($V_6,$V24),o($Vs4,$V34,{37:3328,195:[1,3329]}),{20:$V44,22:$V54,131:3330,166:$V64,193:647,201:$V74,217:$V84},o($V67,$V99),o($V87,$V97,{62:3331}),o($VH,$VI,{65:3332,75:3333,77:3334,78:3335,94:3338,96:3339,89:3341,90:3342,91:3343,80:3344,46:3345,97:3349,193:3350,93:3352,120:3353,101:3357,107:3363,109:3364,20:[1,3359],22:[1,3361],28:[1,3351],71:[1,3336],73:[1,3337],81:[1,3354],82:[1,3355],83:[1,3356],87:[1,3340],98:[1,3346],99:[1,3347],100:[1,3348],103:$Va9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3362],217:[1,3360]}),o($V87,$Vb9),o($VH,$VI,{65:3365,75:3366,77:3367,78:3368,94:3371,96:3372,89:3374,90:3375,91:3376,80:3377,46:3378,97:3382,193:3383,93:3385,120:3386,101:3390,107:3396,109:3397,20:[1,3392],22:[1,3394],28:[1,3384],71:[1,3369],73:[1,3370],81:[1,3387],82:[1,3388],83:[1,3389],87:[1,3373],98:[1,3379],99:[1,3380],100:[1,3381],103:$Vc9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,3395],217:[1,3393]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3398,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:2496,97:3399,103:$VQ7,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,3400]},o($VU7,$VS1),{102:[1,3402],108:3401,110:[1,3403],111:[1,3404],112:3405,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3406]},o($VU7,$Vy4),{123:[1,3407]},{20:[1,3410],22:[1,3412],89:3408,166:[1,3413],193:3409,217:[1,3411]},o($Vs4,$Ve9),o($VX8,$Vw1,{84:3414}),o($VX8,$VF7),o($VX8,$VG7),o($VX8,$VH7),o($VX8,$VI7),o($VX8,$VJ7),o($V09,$VK7,{59:3415,53:[1,3416]}),o($V19,$VL7,{63:3417,55:[1,3418]}),o($V29,$VM7),o($V29,$VN7,{76:3419,78:3420,80:3421,46:3422,120:3423,81:[1,3424],82:[1,3425],83:[1,3426],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:3427,75:3428,94:3429,96:3430,97:3434,101:3435,98:[1,3431],99:[1,3432],100:[1,3433],103:$Vf9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3437,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:3438}),o($Vh9,$VB1,{101:3108,97:3439,103:$V39,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:3440}),o($Vi9,$VD1,{88:3441}),o($Vi9,$VD1,{88:3442}),o($V29,$VE1,{107:3114,109:3115,93:3443,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:3444}),o($Vk9,$VR1),{121:[1,3445],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,3449],22:[1,3453],23:3447,38:3446,202:3448,216:3450,217:[1,3452],218:[1,3451]},{102:[1,3454]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,3456],108:3455,110:[1,3457],111:[1,3458],112:3459,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3460]},o($VX8,$Vw1,{84:3461}),o($Vj1,$Va4),{123:[1,3462]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:3463,216:57,217:$Vq},{20:$Vl9,22:$Vm9,102:[1,3476],110:[1,3477],111:[1,3478],112:3475,166:$Vn9,182:3466,192:3464,193:3465,198:3471,199:3472,200:3473,203:3474,206:[1,3479],207:[1,3480],208:[1,3485],209:[1,3486],210:[1,3487],211:[1,3488],212:[1,3481],213:[1,3482],214:[1,3483],215:[1,3484],217:$Vo9},o($VL2,$V35),{20:$Vo,22:$Vp,23:3489,216:57,217:$Vq},{20:$Vp9,22:$Vq9,102:[1,3502],110:[1,3503],111:[1,3504],112:3501,166:$Vr9,182:3492,192:3490,193:3491,198:3497,199:3498,200:3499,203:3500,206:[1,3505],207:[1,3506],208:[1,3511],209:[1,3512],210:[1,3513],211:[1,3514],212:[1,3507],213:[1,3508],214:[1,3509],215:[1,3510],217:$Vs9},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,3515]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:3516,216:57,217:$Vq},{20:$Vt9,22:$Vu9,102:[1,3529],110:[1,3530],111:[1,3531],112:3528,166:$Vv9,182:3519,192:3517,193:3518,198:3524,199:3525,200:3526,203:3527,206:[1,3532],207:[1,3533],208:[1,3538],209:[1,3539],210:[1,3540],211:[1,3541],212:[1,3534],213:[1,3535],214:[1,3536],215:[1,3537],217:$Vw9},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VL2,$VK2,{86:3176,194:3177,85:3542,191:$V49}),o($Vj1,$V42),o($Vj1,$Vm),o($Vj1,$Vn),o($Vj1,$Vr),o($Vj1,$Vs),o($Vj1,$Vt),o($Vj1,$Vu),o($Vj1,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3543,123:$VX2,150:$VY2,190:$VZ2}),o($VL2,$VK2,{86:3176,194:3177,85:3544,191:$V49}),o($Vx1,$VO2,{101:2639,97:3545,103:$V$7,104:$VR,105:$VS,106:$VT}),o($VC2,$VP2),o($VC2,$Vs3),o($Vj1,$VW4),o($V04,$V14),o($Vv1,$V24),o($V04,$V34,{37:3546,195:[1,3547]}),{20:$V44,22:$V54,131:3548,166:$V64,193:647,201:$V74,217:$V84},o($Vj1,$V94),o($Vx1,$V24),o($Vj1,$V34,{37:3549,195:[1,3550]}),{20:$V44,22:$V54,131:3551,166:$V64,193:647,201:$V74,217:$V84},o($Vz1,$Vb4),o($VC1,$Vc4),o($VC1,$Vd4),o($VC1,$Ve4),{102:[1,3552]},o($VC1,$VS1),{102:[1,3554],108:3553,110:[1,3555],111:[1,3556],112:3557,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3558]},o($Vt2,$Va4),o($Vy1,$V24),o($Vt2,$V34,{37:3559,195:[1,3560]}),{20:$V44,22:$V54,131:3561,166:$V64,193:647,201:$V74,217:$V84},o($VC1,$Vy4),{123:[1,3562]},{20:[1,3565],22:[1,3567],89:3563,166:[1,3568],193:3564,217:[1,3566]},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$V08,22:$V18,89:3569,166:$V28,193:3570,217:$V38},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$V48,22:$V58,89:3571,166:$V68,193:3572,217:$V78},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$V88,22:$V98,89:3573,166:$Va8,193:3574,217:$Vb8},o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vc8,22:$Vd8,89:3575,166:$Ve8,193:3576,217:$Vf8},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vg8,22:$Vh8,89:3577,166:$Vi8,193:3578,217:$Vj8},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vk8,22:$Vl8,89:3579,166:$Vm8,193:3580,217:$Vn8},o($VZ4,$VK2,{86:3262,194:3263,85:3581,191:$V69}),o($VT3,$V42),o($VT3,$Vm),o($VT3,$Vn),o($VT3,$Vr),o($VT3,$Vs),o($VT3,$Vt),o($VT3,$Vu),o($VT3,$Vv),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3582,123:$VX2,150:$VY2,190:$VZ2}),o($VZ4,$VK2,{86:3262,194:3263,85:3583,191:$V69}),o($VW3,$VO2,{101:2852,97:3584,103:$Vo8,104:$VR,105:$VS,106:$VT}),o($VX4,$VP2),o($VX4,$Vs3),o($VT3,$VW4),o($V26,$V14),o($VV3,$V24),o($V26,$V34,{37:3585,195:[1,3586]}),{20:$V44,22:$V54,131:3587,166:$V64,193:647,201:$V74,217:$V84},o($VT3,$V94),o($VW3,$V24),o($VT3,$V34,{37:3588,195:[1,3589]}),{20:$V44,22:$V54,131:3590,166:$V64,193:647,201:$V74,217:$V84},o($VY3,$Vb4),o($VZ3,$Vc4),o($VZ3,$Vd4),o($VZ3,$Ve4),{102:[1,3591]},o($VZ3,$VS1),{102:[1,3593],108:3592,110:[1,3594],111:[1,3595],112:3596,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3597]},o($V36,$Va4),o($VX3,$V24),o($V36,$V34,{37:3598,195:[1,3599]}),{20:$V44,22:$V54,131:3600,166:$V64,193:647,201:$V74,217:$V84},o($VZ3,$Vy4),{123:[1,3601]},{20:[1,3604],22:[1,3606],89:3602,166:[1,3607],193:3603,217:[1,3605]},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$Vp8,22:$Vq8,89:3608,166:$Vr8,193:3609,217:$Vs8},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$Vt8,22:$Vu8,89:3610,166:$Vv8,193:3611,217:$Vw8},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$Vx8,22:$Vy8,89:3612,166:$Vz8,193:3613,217:$VA8},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VB8,22:$VC8,89:3614,166:$VD8,193:3615,217:$VE8},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VF8,22:$VG8,89:3616,166:$VH8,193:3617,217:$VI8},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$VJ8,22:$VK8,89:3618,166:$VL8,193:3619,217:$VM8},o($VN8,$V35),{20:$Vo,22:$Vp,23:3620,216:57,217:$Vq},{20:$Vx9,22:$Vy9,102:[1,3633],110:[1,3634],111:[1,3635],112:3632,166:$Vz9,182:3623,192:3621,193:3622,198:3628,199:3629,200:3630,203:3631,206:[1,3636],207:[1,3637],208:[1,3642],209:[1,3643],210:[1,3644],211:[1,3645],212:[1,3638],213:[1,3639],214:[1,3640],215:[1,3641],217:$VA9},o($V67,$VL7,{63:3646,55:[1,3647]}),o($V87,$VM7),o($V87,$VN7,{76:3648,78:3649,80:3650,46:3651,120:3652,81:[1,3653],82:[1,3654],83:[1,3655],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:3656,75:3657,94:3658,96:3659,97:3663,101:3664,98:[1,3660],99:[1,3661],100:[1,3662],103:$VB9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3666,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:3667}),o($VT7,$VB1,{101:3357,97:3668,103:$Va9,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:3669}),o($VU7,$VD1,{88:3670}),o($VU7,$VD1,{88:3671}),o($V87,$VE1,{107:3363,109:3364,93:3672,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:3673}),o($VY7,$VR1),{121:[1,3674],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,3678],22:[1,3682],23:3676,38:3675,202:3677,216:3679,217:[1,3681],218:[1,3680]},{102:[1,3683]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,3685],108:3684,110:[1,3686],111:[1,3687],112:3688,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3689]},o($V87,$VM7),o($V87,$VN7,{76:3690,78:3691,80:3692,46:3693,120:3694,81:[1,3695],82:[1,3696],83:[1,3697],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:3698,75:3699,94:3700,96:3701,97:3705,101:3706,98:[1,3702],99:[1,3703],100:[1,3704],103:$VC9,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:3708,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:3709}),o($VT7,$VB1,{101:3390,97:3710,103:$Vc9,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:3711}),o($VU7,$VD1,{88:3712}),o($VU7,$VD1,{88:3713}),o($V87,$VE1,{107:3396,109:3397,93:3714,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:3715}),o($VY7,$VR1),{121:[1,3716],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,3720],22:[1,3724],23:3718,38:3717,202:3719,216:3721,217:[1,3723],218:[1,3722]},{102:[1,3725]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,3727],108:3726,110:[1,3728],111:[1,3729],112:3730,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,3731]},{123:[1,3732]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,3733]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),o($VD9,$VK2,{85:3734,86:3735,194:3736,191:$VE9}),o($V19,$VP8),o($VC,$Vh,{57:3738,61:3739,42:3740,45:$VD}),o($V29,$VQ8),o($VC,$Vh,{61:3741,42:3742,45:$VD}),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,3743],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,3747],22:[1,3751],23:3745,38:3744,202:3746,216:3748,217:[1,3750],218:[1,3749]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:3752}),o($V29,$VB1,{101:3435,97:3753,103:$Vf9,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,3754]},o($VF9,$VS1),{72:[1,3755]},o($Vh9,$VO2,{101:3108,97:3756,103:$V39,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:3757,97:3758,93:3759,101:3760,107:3762,109:3763,103:$VG9,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,3764],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3765,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,3766]},o($Vk9,$VB3),o($VD9,$VK2,{86:3735,194:3736,85:3767,191:$VE9}),o($Vx1,$Vh5),{195:[1,3770],196:3768,197:[1,3769]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:3771,205:3772,113:[1,3773]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,3776],196:3774,197:[1,3775]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:3777,205:3778,113:[1,3779]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,3782],22:[1,3784],89:3780,166:[1,3785],193:3781,217:[1,3783]},{195:[1,3788],196:3786,197:[1,3787]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:3789,205:3790,113:[1,3791]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($Vj1,$Va4),{123:[1,3792]},o($Vj1,$V14),o($VC2,$Vb4),o($VJ2,$V35),{20:$Vo,22:$Vp,23:3793,216:57,217:$Vq},{20:$VH9,22:$VI9,102:[1,3806],110:[1,3807],111:[1,3808],112:3805,166:$VJ9,182:3796,192:3794,193:3795,198:3801,199:3802,200:3803,203:3804,206:[1,3809],207:[1,3810],208:[1,3815],209:[1,3816],210:[1,3817],211:[1,3818],212:[1,3811],213:[1,3812],214:[1,3813],215:[1,3814],217:$VK9},o($VL2,$V35),{20:$Vo,22:$Vp,23:3819,216:57,217:$Vq},{20:$VL9,22:$VM9,102:[1,3832],110:[1,3833],111:[1,3834],112:3831,166:$VN9,182:3822,192:3820,193:3821,198:3827,199:3828,200:3829,203:3830,206:[1,3835],207:[1,3836],208:[1,3841],209:[1,3842],210:[1,3843],211:[1,3844],212:[1,3837],213:[1,3838],214:[1,3839],215:[1,3840],217:$VO9},o($VC1,$Vs3),o($VC1,$Vt3),o($VC1,$Vu3),o($VC1,$Vv3),o($VC1,$Vw3),{113:[1,3845]},o($VC1,$VB3),o($VN2,$V35),{20:$Vo,22:$Vp,23:3846,216:57,217:$Vq},{20:$VP9,22:$VQ9,102:[1,3859],110:[1,3860],111:[1,3861],112:3858,166:$VR9,182:3849,192:3847,193:3848,198:3854,199:3855,200:3856,203:3857,206:[1,3862],207:[1,3863],208:[1,3868],209:[1,3869],210:[1,3870],211:[1,3871],212:[1,3864],213:[1,3865],214:[1,3866],215:[1,3867],217:$VS9},o($Vy1,$Vh5),o($VQ1,$VX5),o($VQ1,$VN1),o($VQ1,$VT1),o($VQ1,$VU1),o($VQ1,$VV1),o($VQ1,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VT3,$Va4),{123:[1,3872]},o($VT3,$V14),o($VX4,$Vb4),o($VY4,$V35),{20:$Vo,22:$Vp,23:3873,216:57,217:$Vq},{20:$VT9,22:$VU9,102:[1,3886],110:[1,3887],111:[1,3888],112:3885,166:$VV9,182:3876,192:3874,193:3875,198:3881,199:3882,200:3883,203:3884,206:[1,3889],207:[1,3890],208:[1,3895],209:[1,3896],210:[1,3897],211:[1,3898],212:[1,3891],213:[1,3892],214:[1,3893],215:[1,3894],217:$VW9},o($VZ4,$V35),{20:$Vo,22:$Vp,23:3899,216:57,217:$Vq},{20:$VX9,22:$VY9,102:[1,3912],110:[1,3913],111:[1,3914],112:3911,166:$VZ9,182:3902,192:3900,193:3901,198:3907,199:3908,200:3909,203:3910,206:[1,3915],207:[1,3916],208:[1,3921],209:[1,3922],210:[1,3923],211:[1,3924],212:[1,3917],213:[1,3918],214:[1,3919],215:[1,3920],217:$V_9},o($VZ3,$Vs3),o($VZ3,$Vt3),o($VZ3,$Vu3),o($VZ3,$Vv3),o($VZ3,$Vw3),{113:[1,3925]},o($VZ3,$VB3),o($V$4,$V35),{20:$Vo,22:$Vp,23:3926,216:57,217:$Vq},{20:$V$9,22:$V0a,102:[1,3939],110:[1,3940],111:[1,3941],112:3938,166:$V1a,182:3929,192:3927,193:3928,198:3934,199:3935,200:3936,203:3937,206:[1,3942],207:[1,3943],208:[1,3948],209:[1,3949],210:[1,3950],211:[1,3951],212:[1,3944],213:[1,3945],214:[1,3946],215:[1,3947],217:$V2a},o($VX3,$Vh5),o($V_3,$VX5),o($V_3,$VN1),o($V_3,$VT1),o($V_3,$VU1),o($V_3,$VV1),o($V_3,$VW1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),{195:[1,3954],196:3952,197:[1,3953]},o($V_6,$V66),o($V_6,$V76),o($V_6,$V86),o($V_6,$VT1),o($V_6,$VU1),o($V_6,$VV1),o($V_6,$VW1),o($V_6,$VB4),o($V_6,$VC4),o($V_6,$VD4),o($V_6,$VE4),o($V_6,$VF4,{204:3955,205:3956,113:[1,3957]}),o($V_6,$VG4),o($V_6,$VH4),o($V_6,$VI4),o($V_6,$VJ4),o($V_6,$VK4),o($V_6,$VL4),o($V_6,$VM4),o($V_6,$VN4),o($V_6,$VO4),o($V3a,$Vx3),o($V3a,$Vy3),o($V3a,$Vz3),o($V3a,$VA3),o($V87,$VQ8),o($VC,$Vh,{61:3958,42:3959,45:$VD}),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3960],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3964],22:[1,3968],23:3962,38:3961,202:3963,216:3965,217:[1,3967],218:[1,3966]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3969}),o($V87,$VB1,{101:3664,97:3970,103:$VB9,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3971]},o($VV8,$VS1),{72:[1,3972]},o($VT7,$VO2,{101:3357,97:3973,103:$Va9,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3974,97:3975,93:3976,101:3977,107:3979,109:3980,103:$V4a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,3981],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:3982,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,3983]},o($VY7,$VB3),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,3984],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,3988],22:[1,3992],23:3986,38:3985,202:3987,216:3989,217:[1,3991],218:[1,3990]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:3993}),o($V87,$VB1,{101:3706,97:3994,103:$VC9,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,3995]},o($VV8,$VS1),{72:[1,3996]},o($VT7,$VO2,{101:3390,97:3997,103:$Vc9,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:3998,97:3999,93:4000,101:4001,107:4003,109:4004,103:$V5a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,4005],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4006,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,4007]},o($VY7,$VB3),o($V87,$Vh5),{20:[1,4010],22:[1,4012],89:4008,166:[1,4013],193:4009,217:[1,4011]},o($Vn6,$V89),o($VX8,$V24),o($Vn6,$V34,{37:4014,195:[1,4015]}),{20:$V44,22:$V54,131:4016,166:$V64,193:647,201:$V74,217:$V84},o($V19,$V99),o($V29,$V97,{62:4017}),o($VH,$VI,{65:4018,75:4019,77:4020,78:4021,94:4024,96:4025,89:4027,90:4028,91:4029,80:4030,46:4031,97:4035,193:4036,93:4038,120:4039,101:4043,107:4049,109:4050,20:[1,4045],22:[1,4047],28:[1,4037],71:[1,4022],73:[1,4023],81:[1,4040],82:[1,4041],83:[1,4042],87:[1,4026],98:[1,4032],99:[1,4033],100:[1,4034],103:$V6a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4048],217:[1,4046]}),o($V29,$Vb9),o($VH,$VI,{65:4051,75:4052,77:4053,78:4054,94:4057,96:4058,89:4060,90:4061,91:4062,80:4063,46:4064,97:4068,193:4069,93:4071,120:4072,101:4076,107:4082,109:4083,20:[1,4078],22:[1,4080],28:[1,4070],71:[1,4055],73:[1,4056],81:[1,4073],82:[1,4074],83:[1,4075],87:[1,4059],98:[1,4065],99:[1,4066],100:[1,4067],103:$V7a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4081],217:[1,4079]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4084,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:3435,97:4085,103:$Vf9,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4086]},o($Vi9,$VS1),{102:[1,4088],108:4087,110:[1,4089],111:[1,4090],112:4091,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4092]},o($Vi9,$Vy4),{123:[1,4093]},{20:[1,4096],22:[1,4098],89:4094,166:[1,4099],193:4095,217:[1,4097]},o($Vn6,$Ve9),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$Vl9,22:$Vm9,89:4100,166:$Vn9,193:4101,217:$Vo9},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$Vp9,22:$Vq9,89:4102,166:$Vr9,193:4103,217:$Vs9},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$Vt9,22:$Vu9,89:4104,166:$Vv9,193:4105,217:$Vw9},o($Vx1,$Vh5),{195:[1,4108],196:4106,197:[1,4107]},o($Vv1,$V66),o($Vv1,$V76),o($Vv1,$V86),o($Vv1,$VT1),o($Vv1,$VU1),o($Vv1,$VV1),o($Vv1,$VW1),o($Vv1,$VB4),o($Vv1,$VC4),o($Vv1,$VD4),o($Vv1,$VE4),o($Vv1,$VF4,{204:4109,205:4110,113:[1,4111]}),o($Vv1,$VG4),o($Vv1,$VH4),o($Vv1,$VI4),o($Vv1,$VJ4),o($Vv1,$VK4),o($Vv1,$VL4),o($Vv1,$VM4),o($Vv1,$VN4),o($Vv1,$VO4),o($V96,$Vx3),o($V96,$Vy3),o($V96,$Vz3),o($V96,$VA3),{195:[1,4114],196:4112,197:[1,4113]},o($Vx1,$V66),o($Vx1,$V76),o($Vx1,$V86),o($Vx1,$VT1),o($Vx1,$VU1),o($Vx1,$VV1),o($Vx1,$VW1),o($Vx1,$VB4),o($Vx1,$VC4),o($Vx1,$VD4),o($Vx1,$VE4),o($Vx1,$VF4,{204:4115,205:4116,113:[1,4117]}),o($Vx1,$VG4),o($Vx1,$VH4),o($Vx1,$VI4),o($Vx1,$VJ4),o($Vx1,$VK4),o($Vx1,$VL4),o($Vx1,$VM4),o($Vx1,$VN4),o($Vx1,$VO4),o($Va6,$Vx3),o($Va6,$Vy3),o($Va6,$Vz3),o($Va6,$VA3),{20:[1,4120],22:[1,4122],89:4118,166:[1,4123],193:4119,217:[1,4121]},{195:[1,4126],196:4124,197:[1,4125]},o($Vy1,$V66),o($Vy1,$V76),o($Vy1,$V86),o($Vy1,$VT1),o($Vy1,$VU1),o($Vy1,$VV1),o($Vy1,$VW1),o($Vy1,$VB4),o($Vy1,$VC4),o($Vy1,$VD4),o($Vy1,$VE4),o($Vy1,$VF4,{204:4127,205:4128,113:[1,4129]}),o($Vy1,$VG4),o($Vy1,$VH4),o($Vy1,$VI4),o($Vy1,$VJ4),o($Vy1,$VK4),o($Vy1,$VL4),o($Vy1,$VM4),o($Vy1,$VN4),o($Vy1,$VO4),o($Vb6,$Vx3),o($Vb6,$Vy3),o($Vb6,$Vz3),o($Vb6,$VA3),o($VW3,$Vh5),{195:[1,4132],196:4130,197:[1,4131]},o($VV3,$V66),o($VV3,$V76),o($VV3,$V86),o($VV3,$VT1),o($VV3,$VU1),o($VV3,$VV1),o($VV3,$VW1),o($VV3,$VB4),o($VV3,$VC4),o($VV3,$VD4),o($VV3,$VE4),o($VV3,$VF4,{204:4133,205:4134,113:[1,4135]}),o($VV3,$VG4),o($VV3,$VH4),o($VV3,$VI4),o($VV3,$VJ4),o($VV3,$VK4),o($VV3,$VL4),o($VV3,$VM4),o($VV3,$VN4),o($VV3,$VO4),o($VB7,$Vx3),o($VB7,$Vy3),o($VB7,$Vz3),o($VB7,$VA3),{195:[1,4138],196:4136,197:[1,4137]},o($VW3,$V66),o($VW3,$V76),o($VW3,$V86),o($VW3,$VT1),o($VW3,$VU1),o($VW3,$VV1),o($VW3,$VW1),o($VW3,$VB4),o($VW3,$VC4),o($VW3,$VD4),o($VW3,$VE4),o($VW3,$VF4,{204:4139,205:4140,113:[1,4141]}),o($VW3,$VG4),o($VW3,$VH4),o($VW3,$VI4),o($VW3,$VJ4),o($VW3,$VK4),o($VW3,$VL4),o($VW3,$VM4),o($VW3,$VN4),o($VW3,$VO4),o($VC7,$Vx3),o($VC7,$Vy3),o($VC7,$Vz3),o($VC7,$VA3),{20:[1,4144],22:[1,4146],89:4142,166:[1,4147],193:4143,217:[1,4145]},{195:[1,4150],196:4148,197:[1,4149]},o($VX3,$V66),o($VX3,$V76),o($VX3,$V86),o($VX3,$VT1),o($VX3,$VU1),o($VX3,$VV1),o($VX3,$VW1),o($VX3,$VB4),o($VX3,$VC4),o($VX3,$VD4),o($VX3,$VE4),o($VX3,$VF4,{204:4151,205:4152,113:[1,4153]}),o($VX3,$VG4),o($VX3,$VH4),o($VX3,$VI4),o($VX3,$VJ4),o($VX3,$VK4),o($VX3,$VL4),o($VX3,$VM4),o($VX3,$VN4),o($VX3,$VO4),o($VD7,$Vx3),o($VD7,$Vy3),o($VD7,$Vz3),o($VD7,$VA3),o($VN8,$V52),o($VN8,$V62),o($VN8,$V72),o($V_6,$VV5),o($V_6,$VW5),{20:$Vx9,22:$Vy9,89:4154,166:$Vz9,193:4155,217:$VA9},o($V87,$Vb9),o($VH,$VI,{65:4156,75:4157,77:4158,78:4159,94:4162,96:4163,89:4165,90:4166,91:4167,80:4168,46:4169,97:4173,193:4174,93:4176,120:4177,101:4181,107:4187,109:4188,20:[1,4183],22:[1,4185],28:[1,4175],71:[1,4160],73:[1,4161],81:[1,4178],82:[1,4179],83:[1,4180],87:[1,4164],98:[1,4170],99:[1,4171],100:[1,4172],103:$V8a,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4186],217:[1,4184]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4189,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:3664,97:4190,103:$VB9,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4191]},o($VU7,$VS1),{102:[1,4193],108:4192,110:[1,4194],111:[1,4195],112:4196,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4197]},o($VU7,$Vy4),{123:[1,4198]},{20:[1,4201],22:[1,4203],89:4199,166:[1,4204],193:4200,217:[1,4202]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4205,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:3706,97:4206,103:$VC9,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4207]},o($VU7,$VS1),{102:[1,4209],108:4208,110:[1,4210],111:[1,4211],112:4212,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4213]},o($VU7,$Vy4),{123:[1,4214]},{20:[1,4217],22:[1,4219],89:4215,166:[1,4220],193:4216,217:[1,4218]},o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VD9,$V35),{20:$Vo,22:$Vp,23:4221,216:57,217:$Vq},{20:$V9a,22:$Vaa,102:[1,4234],110:[1,4235],111:[1,4236],112:4233,166:$Vba,182:4224,192:4222,193:4223,198:4229,199:4230,200:4231,203:4232,206:[1,4237],207:[1,4238],208:[1,4243],209:[1,4244],210:[1,4245],211:[1,4246],212:[1,4239],213:[1,4240],214:[1,4241],215:[1,4242],217:$Vca},o($V19,$VL7,{63:4247,55:[1,4248]}),o($V29,$VM7),o($V29,$VN7,{76:4249,78:4250,80:4251,46:4252,120:4253,81:[1,4254],82:[1,4255],83:[1,4256],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4257,75:4258,94:4259,96:4260,97:4264,101:4265,98:[1,4261],99:[1,4262],100:[1,4263],103:$Vda,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4267,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4268}),o($Vh9,$VB1,{101:4043,97:4269,103:$V6a,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4270}),o($Vi9,$VD1,{88:4271}),o($Vi9,$VD1,{88:4272}),o($V29,$VE1,{107:4049,109:4050,93:4273,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4274}),o($Vk9,$VR1),{121:[1,4275],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4279],22:[1,4283],23:4277,38:4276,202:4278,216:4280,217:[1,4282],218:[1,4281]},{102:[1,4284]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4286],108:4285,110:[1,4287],111:[1,4288],112:4289,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4290]},o($V29,$VM7),o($V29,$VN7,{76:4291,78:4292,80:4293,46:4294,120:4295,81:[1,4296],82:[1,4297],83:[1,4298],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4299,75:4300,94:4301,96:4302,97:4306,101:4307,98:[1,4303],99:[1,4304],100:[1,4305],103:$Vea,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4309,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4310}),o($Vh9,$VB1,{101:4076,97:4311,103:$V7a,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4312}),o($Vi9,$VD1,{88:4313}),o($Vi9,$VD1,{88:4314}),o($V29,$VE1,{107:4082,109:4083,93:4315,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4316}),o($Vk9,$VR1),{121:[1,4317],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4321],22:[1,4325],23:4319,38:4318,202:4320,216:4322,217:[1,4324],218:[1,4323]},{102:[1,4326]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4328],108:4327,110:[1,4329],111:[1,4330],112:4331,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4332]},{123:[1,4333]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4334]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VJ2,$V52),o($VJ2,$V62),o($VJ2,$V72),o($Vv1,$VV5),o($Vv1,$VW5),{20:$VH9,22:$VI9,89:4335,166:$VJ9,193:4336,217:$VK9},o($VL2,$V52),o($VL2,$V62),o($VL2,$V72),o($Vx1,$VV5),o($Vx1,$VW5),{20:$VL9,22:$VM9,89:4337,166:$VN9,193:4338,217:$VO9},o($VC1,$VX5),o($VC1,$VN1),o($VC1,$VT1),o($VC1,$VU1),o($VC1,$VV1),o($VC1,$VW1),o($VN2,$V52),o($VN2,$V62),o($VN2,$V72),o($Vy1,$VV5),o($Vy1,$VW5),{20:$VP9,22:$VQ9,89:4339,166:$VR9,193:4340,217:$VS9},o($VY4,$V52),o($VY4,$V62),o($VY4,$V72),o($VV3,$VV5),o($VV3,$VW5),{20:$VT9,22:$VU9,89:4341,166:$VV9,193:4342,217:$VW9},o($VZ4,$V52),o($VZ4,$V62),o($VZ4,$V72),o($VW3,$VV5),o($VW3,$VW5),{20:$VX9,22:$VY9,89:4343,166:$VZ9,193:4344,217:$V_9},o($VZ3,$VX5),o($VZ3,$VN1),o($VZ3,$VT1),o($VZ3,$VU1),o($VZ3,$VV1),o($VZ3,$VW1),o($V$4,$V52),o($V$4,$V62),o($V$4,$V72),o($VX3,$VV5),o($VX3,$VW5),{20:$V$9,22:$V0a,89:4345,166:$V1a,193:4346,217:$V2a},o($V_6,$Vs6),o($V_6,$VN1),o($V87,$VM7),o($V87,$VN7,{76:4347,78:4348,80:4349,46:4350,120:4351,81:[1,4352],82:[1,4353],83:[1,4354],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V87,$VO7),o($V87,$VP7,{79:4355,75:4356,94:4357,96:4358,97:4362,101:4363,98:[1,4359],99:[1,4360],100:[1,4361],103:$Vfa,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4365,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V87,$VR7),o($VS7,$VA1,{95:4366}),o($VT7,$VB1,{101:4181,97:4367,103:$V8a,104:$VR,105:$VS,106:$VT}),o($VU7,$VD1,{88:4368}),o($VU7,$VD1,{88:4369}),o($VU7,$VD1,{88:4370}),o($V87,$VE1,{107:4187,109:4188,93:4371,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VV7,$VW7),o($VV7,$VX7),o($VS7,$VJ1),o($VS7,$VK1),o($VS7,$VL1),o($VS7,$VM1),o($VU7,$VN1),o($VO1,$VP1,{163:4372}),o($VY7,$VR1),{121:[1,4373],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($VV7,$V71),o($VV7,$V81),{20:[1,4377],22:[1,4381],23:4375,38:4374,202:4376,216:4378,217:[1,4380],218:[1,4379]},{102:[1,4382]},o($VS7,$VS1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{102:[1,4384],108:4383,110:[1,4385],111:[1,4386],112:4387,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4388]},{123:[1,4389]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4390]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),{123:[1,4391]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4392]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),{195:[1,4395],196:4393,197:[1,4394]},o($VX8,$V66),o($VX8,$V76),o($VX8,$V86),o($VX8,$VT1),o($VX8,$VU1),o($VX8,$VV1),o($VX8,$VW1),o($VX8,$VB4),o($VX8,$VC4),o($VX8,$VD4),o($VX8,$VE4),o($VX8,$VF4,{204:4396,205:4397,113:[1,4398]}),o($VX8,$VG4),o($VX8,$VH4),o($VX8,$VI4),o($VX8,$VJ4),o($VX8,$VK4),o($VX8,$VL4),o($VX8,$VM4),o($VX8,$VN4),o($VX8,$VO4),o($Vga,$Vx3),o($Vga,$Vy3),o($Vga,$Vz3),o($Vga,$VA3),o($V29,$VQ8),o($VC,$Vh,{61:4399,42:4400,45:$VD}),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4401],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4405],22:[1,4409],23:4403,38:4402,202:4404,216:4406,217:[1,4408],218:[1,4407]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4410}),o($V29,$VB1,{101:4265,97:4411,103:$Vda,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4412]},o($VF9,$VS1),{72:[1,4413]},o($Vh9,$VO2,{101:4043,97:4414,103:$V6a,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4415,97:4416,93:4417,101:4418,107:4420,109:4421,103:$Vha,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4422],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4423,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4424]},o($Vk9,$VB3),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4425],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4429],22:[1,4433],23:4427,38:4426,202:4428,216:4430,217:[1,4432],218:[1,4431]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4434}),o($V29,$VB1,{101:4307,97:4435,103:$Vea,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4436]},o($VF9,$VS1),{72:[1,4437]},o($Vh9,$VO2,{101:4076,97:4438,103:$V7a,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4439,97:4440,93:4441,101:4442,107:4444,109:4445,103:$Via,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4446],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4447,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4448]},o($Vk9,$VB3),o($V29,$Vh5),{20:[1,4451],22:[1,4453],89:4449,166:[1,4454],193:4450,217:[1,4452]},o($Vv1,$Vs6),o($Vv1,$VN1),o($Vx1,$Vs6),o($Vx1,$VN1),o($Vy1,$Vs6),o($Vy1,$VN1),o($VV3,$Vs6),o($VV3,$VN1),o($VW3,$Vs6),o($VW3,$VN1),o($VX3,$Vs6),o($VX3,$VN1),o($V87,$VR8),o($V87,$VS8),o($V87,$VW7),o($V87,$VX7),{121:[1,4455],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V87,$V71),o($V87,$V81),{20:[1,4459],22:[1,4463],23:4457,38:4456,202:4458,216:4460,217:[1,4462],218:[1,4461]},o($V87,$VT8),o($V87,$VU8),o($VV8,$VA1,{95:4464}),o($V87,$VB1,{101:4363,97:4465,103:$Vfa,104:$VR,105:$VS,106:$VT}),o($VV8,$VJ1),o($VV8,$VK1),o($VV8,$VL1),o($VV8,$VM1),{102:[1,4466]},o($VV8,$VS1),{72:[1,4467]},o($VT7,$VO2,{101:4181,97:4468,103:$V8a,104:$VR,105:$VS,106:$VT}),o($VS7,$VP2),o($V87,$VQ2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VS2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V87,$VT2,{92:4469,97:4470,93:4471,101:4472,107:4474,109:4475,103:$Vja,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($VY7,$VU2),{20:$V83,22:$V93,23:415,29:[1,4476],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4477,123:$VX2,150:$VY2,190:$VZ2}),o($VV7,$V42),o($VV7,$Vm),o($VV7,$Vn),o($VV7,$Vr),o($VV7,$Vs),o($VV7,$Vt),o($VV7,$Vu),o($VV7,$Vv),o($VS7,$Vs3),o($VY7,$Vt3),o($VY7,$Vu3),o($VY7,$Vv3),o($VY7,$Vw3),{113:[1,4478]},o($VY7,$VB3),o($V87,$Vh5),{20:[1,4481],22:[1,4483],89:4479,166:[1,4484],193:4480,217:[1,4482]},o($V87,$Vh5),{20:[1,4487],22:[1,4489],89:4485,166:[1,4490],193:4486,217:[1,4488]},o($VD9,$V52),o($VD9,$V62),o($VD9,$V72),o($VX8,$VV5),o($VX8,$VW5),{20:$V9a,22:$Vaa,89:4491,166:$Vba,193:4492,217:$Vca},o($V29,$Vb9),o($VH,$VI,{65:4493,75:4494,77:4495,78:4496,94:4499,96:4500,89:4502,90:4503,91:4504,80:4505,46:4506,97:4510,193:4511,93:4513,120:4514,101:4518,107:4524,109:4525,20:[1,4520],22:[1,4522],28:[1,4512],71:[1,4497],73:[1,4498],81:[1,4515],82:[1,4516],83:[1,4517],87:[1,4501],98:[1,4507],99:[1,4508],100:[1,4509],103:$Vka,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ,166:[1,4523],217:[1,4521]}),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4526,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4265,97:4527,103:$Vda,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4528]},o($Vi9,$VS1),{102:[1,4530],108:4529,110:[1,4531],111:[1,4532],112:4533,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4534]},o($Vi9,$Vy4),{123:[1,4535]},{20:[1,4538],22:[1,4540],89:4536,166:[1,4541],193:4537,217:[1,4539]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4542,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4307,97:4543,103:$Vea,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4544]},o($Vi9,$VS1),{102:[1,4546],108:4545,110:[1,4547],111:[1,4548],112:4549,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4550]},o($Vi9,$Vy4),{123:[1,4551]},{20:[1,4554],22:[1,4556],89:4552,166:[1,4557],193:4553,217:[1,4555]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4558,123:$VX2,150:$VY2,190:$VZ2}),o($V87,$V42),o($V87,$Vm),o($V87,$Vn),o($V87,$Vr),o($V87,$Vs),o($V87,$Vt),o($V87,$Vu),o($V87,$Vv),o($V87,$VO2,{101:4363,97:4559,103:$Vfa,104:$VR,105:$VS,106:$VT}),o($VV8,$VP2),o($VV8,$Vs3),o($V87,$Vd9),o($VS7,$Vb4),o($VU7,$Vc4),o($VU7,$Vd4),o($VU7,$Ve4),{102:[1,4560]},o($VU7,$VS1),{102:[1,4562],108:4561,110:[1,4563],111:[1,4564],112:4565,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4566]},o($VU7,$Vy4),{123:[1,4567]},{20:[1,4570],22:[1,4572],89:4568,166:[1,4573],193:4569,217:[1,4571]},o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),o($VX8,$Vs6),o($VX8,$VN1),o($V29,$VM7),o($V29,$VN7,{76:4574,78:4575,80:4576,46:4577,120:4578,81:[1,4579],82:[1,4580],83:[1,4581],121:$VI,127:$VI,129:$VI,190:$VI,221:$VI}),o($V29,$VO7),o($V29,$VP7,{79:4582,75:4583,94:4584,96:4585,97:4589,101:4590,98:[1,4586],99:[1,4587],100:[1,4588],103:$Vla,104:$VR,105:$VS,106:$VT}),o($Vg,$Vh,{42:199,46:201,40:4592,45:$Vt1,81:$Vi,82:$Vj,83:$Vk}),o($V29,$VR7),o($Vg9,$VA1,{95:4593}),o($Vh9,$VB1,{101:4518,97:4594,103:$Vka,104:$VR,105:$VS,106:$VT}),o($Vi9,$VD1,{88:4595}),o($Vi9,$VD1,{88:4596}),o($Vi9,$VD1,{88:4597}),o($V29,$VE1,{107:4524,109:4525,93:4598,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vj9,$VW7),o($Vj9,$VX7),o($Vg9,$VJ1),o($Vg9,$VK1),o($Vg9,$VL1),o($Vg9,$VM1),o($Vi9,$VN1),o($VO1,$VP1,{163:4599}),o($Vk9,$VR1),{121:[1,4600],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($Vj9,$V71),o($Vj9,$V81),{20:[1,4604],22:[1,4608],23:4602,38:4601,202:4603,216:4605,217:[1,4607],218:[1,4606]},{102:[1,4609]},o($Vg9,$VS1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),{102:[1,4611],108:4610,110:[1,4612],111:[1,4613],112:4614,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4615]},{123:[1,4616]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4617]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),{123:[1,4618]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4619]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),{123:[1,4620]},o($VV8,$Vb4),o($VU7,$Vs3),o($VU7,$Vt3),o($VU7,$Vu3),o($VU7,$Vv3),o($VU7,$Vw3),{113:[1,4621]},o($VU7,$VB3),o($VV7,$Vh5),o($VY7,$VX5),o($VY7,$VN1),o($VY7,$VT1),o($VY7,$VU1),o($VY7,$VV1),o($VY7,$VW1),o($V29,$VR8),o($V29,$VS8),o($V29,$VW7),o($V29,$VX7),{121:[1,4622],124:212,125:213,126:214,127:$VF1,129:$VG1,190:$VH1,219:216,221:$VI1},o($V29,$V71),o($V29,$V81),{20:[1,4626],22:[1,4630],23:4624,38:4623,202:4625,216:4627,217:[1,4629],218:[1,4628]},o($V29,$VT8),o($V29,$VU8),o($VF9,$VA1,{95:4631}),o($V29,$VB1,{101:4590,97:4632,103:$Vla,104:$VR,105:$VS,106:$VT}),o($VF9,$VJ1),o($VF9,$VK1),o($VF9,$VL1),o($VF9,$VM1),{102:[1,4633]},o($VF9,$VS1),{72:[1,4634]},o($Vh9,$VO2,{101:4518,97:4635,103:$Vka,104:$VR,105:$VS,106:$VT}),o($Vg9,$VP2),o($V29,$VQ2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VS2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($V29,$VT2,{92:4636,97:4637,93:4638,101:4639,107:4641,109:4642,103:$Vma,104:$VR,105:$VS,106:$VT,114:$VU,115:$VV,116:$VW,117:$VX,118:$VY,119:$VZ}),o($Vk9,$VU2),{20:$V83,22:$V93,23:415,29:[1,4643],73:$Va3,83:$Vb3,102:$Vc3,110:$Vd3,111:$Ve3,112:427,164:409,165:410,166:$Vf3,167:412,168:413,182:416,186:$Vg3,198:421,199:422,200:423,203:426,206:$Vh3,207:$Vi3,208:$Vj3,209:$Vk3,210:$Vl3,211:$Vm3,212:$Vn3,213:$Vo3,214:$Vp3,215:$Vq3,216:420,217:$Vr3},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4644,123:$VX2,150:$VY2,190:$VZ2}),o($Vj9,$V42),o($Vj9,$Vm),o($Vj9,$Vn),o($Vj9,$Vr),o($Vj9,$Vs),o($Vj9,$Vt),o($Vj9,$Vu),o($Vj9,$Vv),o($Vg9,$Vs3),o($Vk9,$Vt3),o($Vk9,$Vu3),o($Vk9,$Vv3),o($Vk9,$Vw3),{113:[1,4645]},o($Vk9,$VB3),o($V29,$Vh5),{20:[1,4648],22:[1,4650],89:4646,166:[1,4651],193:4647,217:[1,4649]},o($V29,$Vh5),{20:[1,4654],22:[1,4656],89:4652,166:[1,4657],193:4653,217:[1,4655]},o($V87,$Vh5),{20:[1,4660],22:[1,4662],89:4658,166:[1,4663],193:4659,217:[1,4661]},o($VV2,$VW2,{128:379,132:380,133:381,134:382,138:383,139:384,140:385,146:386,148:387,149:388,122:4664,123:$VX2,150:$VY2,190:$VZ2}),o($V29,$V42),o($V29,$Vm),o($V29,$Vn),o($V29,$Vr),o($V29,$Vs),o($V29,$Vt),o($V29,$Vu),o($V29,$Vv),o($V29,$VO2,{101:4590,97:4665,103:$Vla,104:$VR,105:$VS,106:$VT}),o($VF9,$VP2),o($VF9,$Vs3),o($V29,$Vd9),o($Vg9,$Vb4),o($Vi9,$Vc4),o($Vi9,$Vd4),o($Vi9,$Ve4),{102:[1,4666]},o($Vi9,$VS1),{102:[1,4668],108:4667,110:[1,4669],111:[1,4670],112:4671,208:$VX1,209:$VY1,210:$VZ1,211:$V_1},{102:[1,4672]},o($Vi9,$Vy4),{123:[1,4673]},{20:[1,4676],22:[1,4678],89:4674,166:[1,4679],193:4675,217:[1,4677]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1),o($VU7,$VX5),o($VU7,$VN1),o($VU7,$VT1),o($VU7,$VU1),o($VU7,$VV1),o($VU7,$VW1),{123:[1,4680]},o($VF9,$Vb4),o($Vi9,$Vs3),o($Vi9,$Vt3),o($Vi9,$Vu3),o($Vi9,$Vv3),o($Vi9,$Vw3),{113:[1,4681]},o($Vi9,$VB3),o($Vj9,$Vh5),o($Vk9,$VX5),o($Vk9,$VN1),o($Vk9,$VT1),o($Vk9,$VU1),o($Vk9,$VV1),o($Vk9,$VW1),o($V29,$Vh5),{20:[1,4684],22:[1,4686],89:4682,166:[1,4687],193:4683,217:[1,4685]},o($Vi9,$VX5),o($Vi9,$VN1),o($Vi9,$VT1),o($Vi9,$VU1),o($Vi9,$VV1),o($Vi9,$VW1)],\ndefaultActions: {6:[2,11],32:[2,1],112:[2,121],113:[2,122],114:[2,123],119:[2,134],120:[2,135],227:[2,255],228:[2,256],229:[2,257],230:[2,258],351:[2,37],379:[2,144],380:[2,148],382:[2,150],589:[2,35],590:[2,39],627:[2,36],1137:[2,148],1139:[2,150]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShEx parser in the Jison parser generator format.\n  */\n\n  var UNBOUNDED = -1;\n\n  var ShExUtil = require(\"@shexjs/util\");\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean',\n      XSD_TRUE =  '\"true\"^^'  + XSD_BOOLEAN,\n      XSD_FALSE = '\"false\"^^' + XSD_BOOLEAN,\n      XSD_PATTERN        = XSD + 'pattern',\n      XSD_MININCLUSIVE   = XSD + 'minInclusive',\n      XSD_MINEXCLUSIVE   = XSD + 'minExclusive',\n      XSD_MAXINCLUSIVE   = XSD + 'maxInclusive',\n      XSD_MAXEXCLUSIVE   = XSD + 'maxExclusive',\n      XSD_LENGTH         = XSD + 'length',\n      XSD_MINLENGTH      = XSD + 'minLength',\n      XSD_MAXLENGTH      = XSD + 'maxLength',\n      XSD_TOTALDIGITS    = XSD + 'totalDigits',\n      XSD_FRACTIONDIGITS = XSD + 'fractionDigits';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  Parser._setBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._base = baseIRI) {\n      Parser._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._baseRoot   = baseIRI[0];\n      Parser._baseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._baseScheme : Parser._baseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._basePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  Parser._setTermResolver = function (res) {\n    Parser._termResolver = res;\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return { value: value, type: type };\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser._sourceMap = Parser._termResolver = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._base = Parser._baseIRI = Parser._baseIRIPath = Parser._baseIRIRoot = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      semactEscapeReplacements = { '\\\\': '\\\\', '%': '%' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return { value: ShExUtil.unescapeText(string, stringEscapeReplacements) };\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, { language: lowercase(lang.substr(1)) });\n  }\n\n  // Translates regular expression escape codes in the string into their textual equivalent\n  function unescapeRegexp (regexp) {\n    var end = regexp.lastIndexOf(\"/\");\n    var s = regexp.substr(1, end-1);\n    var regexpEscapeReplacements = {\n      '.': \"\\\\.\", '\\\\': \"\\\\\\\\\", '?': \"\\\\?\", '*': \"\\\\*\", '+': \"\\\\+\",\n      '{': \"\\\\{\", '}': \"\\\\}\", '(': \"\\\\(\", ')': \"\\\\)\", '|': \"\\\\|\",\n      '^': \"\\\\^\", '$': \"\\\\$\", '[': \"\\\\[\", ']': \"\\\\]\", '/': \"\\\\/\",\n      't': '\\\\t', 'n': '\\\\n', 'r': '\\\\r', '-': \"\\\\-\", '/': '/'\n    };\n    s = ShExUtil.unescapeText(s, regexpEscapeReplacements)\n    var ret = {\n      pattern: s\n    };\n    if (regexp.length > end+1)\n      ret.flags = regexp.substr(end+1);\n    return ret;\n  }\n\n  // Convenience function to return object with p1 key, value p2\n  function keyValObject(key, val) {\n    var ret = {};\n    ret[key] = val;\n    return ret;\n  }\n\n  // Return object with p1 key, p2 string value\n  function unescapeSemanticAction(key, string) {\n    string = string.substring(1, string.length - 2);\n    return {\n      type: \"SemAct\",\n      name: key,\n      code: ShExUtil.unescapeText(string, semactEscapeReplacements)\n    };\n  }\n\n  function error (e, yy) {\n    const hash = {\n      text: yy.lexer.match,\n      // token: this.terminals_[symbol] || symbol,\n      line: yy.lexer.yylineno,\n      loc: yy.lexer.yylloc,\n      // expected: expected\n      pos: yy.lexer.showPosition()\n    }\n    e.hash = hash;\n    if (Parser.recoverable) {\n      Parser.recoverable(e)\n    } else {\n      throw e;\n      Parser.reset();\n    }\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefix, yy) {\n    if (!(prefix in Parser._prefixes))\n      error(new Error('Parse error; unknown prefix \"' + prefix + ':\"'), yy);\n    return Parser._prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape, yy) {\n    if (shape === EmptyShape)\n      shape = { type: \"Shape\" };\n    if (Parser.productions && label in Parser.productions)\n      error(new Error(\"Structural error: \"+label+\" is a triple expression\"), yy);\n    if (!Parser.shapes)\n      Parser.shapes = new Map();\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else {\n      shape.id = label;\n      Parser.shapes[label] = shape;\n    }\n  }\n\n  // Add a production to the map\n  function addProduction (label, production, yy) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(new Error(\"Structural error: \"+label+\" is a shape expression\"), yy);\n    if (!Parser.productions)\n      Parser.productions = new Map();\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function addSourceMap (obj, yy) {\n    if (!Parser._sourceMap)\n      Parser._sourceMap = new Map();\n    let list = Parser._sourceMap.get(obj)\n    if (!list)\n      Parser._sourceMap.set(obj, list = []);\n    list.push(yy.lexer.yylloc);\n    return obj;\n  }\n\n  // shapeJunction judiciously takes a shapeAtom and an optional list of con/disjuncts.\n  // No created Shape{And,Or,Not} will have a `nested` shapeExpr.\n  // Don't nonest arguments to shapeJunction.\n  // shapeAtom emits `nested` so nonest every argument that can be a shapeAtom, i.e.\n  //   shapeAtom, inlineShapeAtom, shapeAtomNoRef\n  //   {,inline}shape{And,Or,Not}\n  //   this does NOT include shapeOrRef or nodeConstraint.\n  function shapeJunction (type, shapeAtom, juncts) {\n    if (juncts.length === 0) {\n      return nonest(shapeAtom);\n    } else if (shapeAtom.type === type && !shapeAtom.nested) {\n      nonest(shapeAtom).shapeExprs = nonest(shapeAtom).shapeExprs.concat(juncts);\n      return shapeAtom;\n    } else {\n      return { type: type, shapeExprs: [nonest(shapeAtom)].concat(juncts) };\n    }\n  }\n\n  // strip out .nested attribute\n  function nonest (shapeAtom) {\n    delete shapeAtom.nested;\n    return shapeAtom;\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:\n  var iBacktick = yy_.yytext.indexOf('`');\n  var prefix = null;\n  if (iBacktick > 0) {\n    prefix = yy_.yytext.substr(0, iBacktick-1);\n    yy_.yytext = yy_.yytext.substr(iBacktick);\n  }\n  yy_.yytext = { prefix: prefix, label: unescapeString(yy_.yytext, 1) };\n  return 166;\n\nbreak;\ncase 1:/**/\nbreak;\ncase 2:return 81;\nbreak;\ncase 3:return 82;\nbreak;\ncase 4: yy_.yytext = yy_.yytext.substr(1); return 186; \nbreak;\ncase 5:return 83;\nbreak;\ncase 6:return 217;\nbreak;\ncase 7:return 161;\nbreak;\ncase 8:return 111;\nbreak;\ncase 9:return 110;\nbreak;\ncase 10:return 102;\nbreak;\ncase 11:return 'ANON';\nbreak;\ncase 12:return 20;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 201;\nbreak;\ncase 15:return 103;\nbreak;\ncase 16:return 218;\nbreak;\ncase 17:return 197;\nbreak;\ncase 18:return 213;\nbreak;\ncase 19:return 215;\nbreak;\ncase 20:return 212;\nbreak;\ncase 21:return 214;\nbreak;\ncase 22:return 209;\nbreak;\ncase 23:return 211;\nbreak;\ncase 24:return 208;\nbreak;\ncase 25:return 210;\nbreak;\ncase 26:return 19;\nbreak;\ncase 27:return 21;\nbreak;\ncase 28:return 24;\nbreak;\ncase 29:return 25;\nbreak;\ncase 30:return 32;\nbreak;\ncase 31:return 41;\nbreak;\ncase 32:return 'IT_VIRTUAL';\nbreak;\ncase 33:return 127;\nbreak;\ncase 34:return 129;\nbreak;\ncase 35:return 87;\nbreak;\ncase 36:return 99;\nbreak;\ncase 37:return 98;\nbreak;\ncase 38:return 100;\nbreak;\ncase 39:return 55;\nbreak;\ncase 40:return 53;\nbreak;\ncase 41:return 45;\nbreak;\ncase 42:return 114;\nbreak;\ncase 43:return 115;\nbreak;\ncase 44:return 116;\nbreak;\ncase 45:return 117;\nbreak;\ncase 46:return 104;\nbreak;\ncase 47:return 105;\nbreak;\ncase 48:return 106;\nbreak;\ncase 49:return 118;\nbreak;\ncase 50:return 119;\nbreak;\ncase 51:return 33;\nbreak;\ncase 52:return 191;\nbreak;\ncase 53:return 121;\nbreak;\ncase 54:return 123;\nbreak;\ncase 55:return 190;\nbreak;\ncase 56:return '||';\nbreak;\ncase 57:return 137;\nbreak;\ncase 58:return 142;\nbreak;\ncase 59:return 71;\nbreak;\ncase 60:return 72;\nbreak;\ncase 61:return 28;\nbreak;\ncase 62:return 29;\nbreak;\ncase 63:return 150;\nbreak;\ncase 64:return '!';\nbreak;\ncase 65:return 113;\nbreak;\ncase 66:return 162;\nbreak;\ncase 67:return 73;\nbreak;\ncase 68:return 179;\nbreak;\ncase 69:return 143;\nbreak;\ncase 70:return 158;\nbreak;\ncase 71:return 159;\nbreak;\ncase 72:return 160;\nbreak;\ncase 73:return 180;\nbreak;\ncase 74:return 195;\nbreak;\ncase 75:return 206;\nbreak;\ncase 76:return 207;\nbreak;\ncase 77:return 7;\nbreak;\ncase 78:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 79:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)?`([^\\u0060\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*`))/,/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^/]|\\\\\\/))*\\*\\/))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(\\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\\*)?))?\\}))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:a\\b)/,/^(?:(\\/([^\\u002f\\u005C\\u000A\\u000D]|\\\\[nrt\\\\|.?*+(){}$\\u002D\\u005B\\u005D\\u005E/]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:(\\{([^%\\\\]|\\\\[%\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\\}))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([Ll][Aa][Bb][Ee][Ll]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Vv][Ii][Rr][Tt][Uu][Aa][Ll]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\\/\\/)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&)/,/^(?:\\|\\|)/,/^(?:\\|)/,/^(?:,)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:!)/,/^(?:\\^\\^)/,/^(?:\\^)/,/^(?:\\.)/,/^(?:~)/,/^(?:;)/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShExJison;\nexports.Parser = ShExJison.Parser;\nexports.parse = function () { return ShExJison.parse.apply(ShExJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
    },
    {
      "id": 36,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
      "index": 29,
      "index2": 25,
      "size": 8542,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "issuerId": 17,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 17,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 26,
        "building": 9,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 17,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "type": "cjs require",
          "userRequest": "./old.js",
          "loc": "14:10-29"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"
    },
    {
      "id": 37,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "index": 31,
      "index2": 29,
      "size": 4792,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "issuerId": 6,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 6,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 28,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "type": "cjs require",
          "userRequest": "brace-expansion",
          "loc": "10:13-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"
    },
    {
      "id": 38,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
      "index": 32,
      "index2": 27,
      "size": 345,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerId": 37,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 6,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        },
        {
          "id": 37,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "profile": {
            "factory": 28,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 11,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 37,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "type": "cjs require",
          "userRequest": "concat-map",
          "loc": "1:16-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"
    },
    {
      "id": 39,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
      "index": 33,
      "index2": 28,
      "size": 1174,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerId": 37,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 6,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        },
        {
          "id": 37,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "profile": {
            "factory": 28,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 11,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 37,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "type": "cjs require",
          "userRequest": "balanced-match",
          "loc": "2:15-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n"
    },
    {
      "id": 40,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
      "index": 34,
      "index2": 31,
      "size": 753,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "47:15-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
    },
    {
      "id": 41,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/events/events.js",
      "name": "./node_modules/events/events.js",
      "index": 35,
      "index2": 32,
      "size": 14161,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "events",
          "loc": "48:9-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"
    },
    {
      "id": 42,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/global.js",
      "name": "(webpack)/buildin/global.js",
      "index": 37,
      "index2": 33,
      "size": 472,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
      "issuerId": 18,
      "issuerName": "./node_modules/assert/assert.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 18,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 71,
        "building": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "module": "./node_modules/assert/assert.js",
          "moduleName": "./node_modules/assert/assert.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
    },
    {
      "id": 43,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/object-assign/index.js",
      "name": "./node_modules/object-assign/index.js",
      "index": 38,
      "index2": 34,
      "size": 2108,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
      "issuerId": 18,
      "issuerName": "./node_modules/assert/assert.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 18,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 71,
        "building": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "module": "./node_modules/assert/assert.js",
          "moduleName": "./node_modules/assert/assert.js",
          "type": "cjs require",
          "userRequest": "object-assign",
          "loc": "3:19-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"
    },
    {
      "id": 44,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/support/isBufferBrowser.js",
      "name": "./node_modules/util/support/isBufferBrowser.js",
      "index": 40,
      "index2": 35,
      "size": 203,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
      "issuerId": 7,
      "issuerName": "./node_modules/util/util.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 7,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 61,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "module": "./node_modules/util/util.js",
          "moduleName": "./node_modules/util/util.js",
          "type": "cjs require",
          "userRequest": "./support/isBuffer",
          "loc": "536:19-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"
    },
    {
      "id": 45,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/node_modules/inherits/inherits_browser.js",
      "name": "./node_modules/util/node_modules/inherits/inherits_browser.js",
      "index": 41,
      "index2": 36,
      "size": 672,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
      "issuerId": 7,
      "issuerName": "./node_modules/util/util.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        },
        {
          "id": 7,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "profile": {
            "factory": 147,
            "building": 5,
            "dependencies": 78
          }
        }
      ],
      "profile": {
        "factory": 61,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 7,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "module": "./node_modules/util/util.js",
          "moduleName": "./node_modules/util/util.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "580:19-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"
    },
    {
      "id": 46,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
      "index": 43,
      "index2": 41,
      "size": 12002,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "./sync.js",
          "loc": "52:15-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"
    },
    {
      "id": 47,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "index": 45,
      "index2": 44,
      "size": 1365,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 16,
      "issuerName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        },
        {
          "id": 16,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 289,
            "building": 24,
            "dependencies": 7
          }
        }
      ],
      "profile": {
        "factory": 147,
        "building": 5,
        "dependencies": 78
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/home/eric/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "inflight",
          "loc": "58:15-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"
    },
    {
      "id": 48,
      "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api sync",
      "name": "../shex-api sync",
      "index": 48,
      "index2": 46,
      "size": 160,
      "built": true,
      "optional": true,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
      "issuerId": 34,
      "issuerName": "../shex-api/shex-api.js",
      "issuerPath": [
        {
          "id": 22,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 20,
            "building": 15
          }
        },
        {
          "id": 34,
          "identifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 25,
            "building": 243,
            "dependencies": 215
          }
        }
      ],
      "profile": {
        "factory": 289,
        "building": 24,
        "dependencies": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 34,
          "moduleIdentifier": "/home/eric/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require context",
          "userRequest": ".",
          "loc": "326:11-24"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2
    }
  ],
  "filteredModules": 0,
  "logging": {
    "webpack.buildChunkGraph.visitModules": {
      "entries": [],
      "filteredEntries": 2,
      "debug": false
    }
  },
  "children": []
}
