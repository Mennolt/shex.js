{
  "errors": [],
  "warnings": [
    "../shex-api/shex-api.js 312:11-24\nCritical dependency: the request of a dependency is an expression\n    at CommonJsRequireContextDependency.getWarnings (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/dependencies/ContextDependency.js:40:18)\n    at Compilation.reportDependencyErrorsAndWarnings (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1454:24)\n    at /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1258:10\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:24:1)\n    at AsyncSeriesHook.lazyCompileHook (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/Hook.js:154:20)\n    at Compilation.finish (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1253:28)\n    at /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compiler.js:672:17\n    at _done (eval at create (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:9:1)\n    at eval (eval at create (/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:20:22)\n    at /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1185:12\n    at /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/lib/Compilation.js:1097:9\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)\n @ ./shex-webapp.js",
    "asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).\nThis can impact web performance.\nAssets: \n  shex-webapp-webpack.js (923 KiB)\n  shex-webapp-webpack.min.js (434 KiB)",
    "entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.\nEntrypoints:\n  shex-webapp-webpack (923 KiB)\n      shex-webapp-webpack.js\n  shex-webapp-webpack.min (434 KiB)\n      shex-webapp-webpack.min.js\n",
    "webpack performance recommendations: \nYou can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.\nFor more info visit https://webpack.js.org/guides/code-splitting/"
  ],
  "version": "4.44.1",
  "hash": "21cc791877bca549c572",
  "time": 808,
  "builtAt": 1598694420180,
  "publicPath": "",
  "outputPath": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/browser",
  "assetsByChunkName": {
    "shex-webapp-webpack": "shex-webapp-webpack.js",
    "shex-webapp-webpack.min": "shex-webapp-webpack.min.js"
  },
  "assets": [
    {
      "name": "shex-webapp-webpack.js",
      "size": 944828,
      "chunks": [
        0,
        1
      ],
      "chunkNames": [
        "shex-webapp-webpack"
      ],
      "info": {},
      "emitted": true,
      "isOverSizeLimit": true
    },
    {
      "name": "shex-webapp-webpack.min.js",
      "size": 444862,
      "chunks": [
        1,
        0
      ],
      "chunkNames": [
        "shex-webapp-webpack.min"
      ],
      "info": {
        "minimized": true,
        "related": {
          "license": "shex-webapp-webpack.min.js.LICENSE.txt"
        }
      },
      "emitted": true,
      "isOverSizeLimit": true
    },
    {
      "name": "shex-webapp-webpack.min.js.LICENSE.txt",
      "size": 515,
      "chunks": [],
      "chunkNames": [],
      "info": {},
      "emitted": true
    }
  ],
  "filteredAssets": 0,
  "entrypoints": {
    "shex-webapp-webpack": {
      "chunks": [
        0
      ],
      "assets": [
        "shex-webapp-webpack.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    },
    "shex-webapp-webpack.min": {
      "chunks": [
        1
      ],
      "assets": [
        "shex-webapp-webpack.min.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    }
  },
  "namedChunkGroups": {
    "shex-webapp-webpack": {
      "chunks": [
        0
      ],
      "assets": [
        "shex-webapp-webpack.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    },
    "shex-webapp-webpack.min": {
      "chunks": [
        1
      ],
      "assets": [
        "shex-webapp-webpack.min.js"
      ],
      "children": {},
      "childAssets": {},
      "isOverSizeLimit": true
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 932186,
      "names": [
        "shex-webapp-webpack"
      ],
      "files": [
        "shex-webapp-webpack.js"
      ],
      "hash": "a7102e851d39b87b8f8f",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/IRIs.js",
          "name": "./node_modules/n3/src/IRIs.js",
          "index": 49,
          "index2": 46,
          "size": 705,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "issuerId": 12,
          "issuerName": "./node_modules/n3/src/N3Lexer.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 336,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "2:0-32"
            },
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "5:16-26"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "2:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "4:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "4:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "4:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "6:21-31"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "8:21-31"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "700:36-46"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "700:57-67"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "725:44-54"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "733:44-54"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "756:44-54"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1029:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1030:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1031:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1032:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1033:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1035:19-29"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1036:19-29"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1037:19-29"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 3,
          "source": "var RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: XSD + 'decimal',\n    boolean: XSD + 'boolean',\n    double:  XSD + 'double',\n    integer: XSD + 'integer',\n    string:  XSD + 'string',\n  },\n  rdf: {\n    type:       RDF + 'type',\n    nil:        RDF + 'nil',\n    first:      RDF + 'first',\n    rest:       RDF + 'rest',\n    langString: RDF + 'langString',\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: SWAP + 'reify#forSome',\n    forAll:  SWAP + 'reify#forAll',\n  },\n  log: {\n    implies: SWAP + 'log#implies',\n  },\n};\n"
        },
        {
          "id": 1,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/process/browser.js",
          "name": "./node_modules/process/browser.js",
          "index": 5,
          "index2": 1,
          "size": 5418,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
              "module": "./node_modules/path-browserify/index.js",
              "moduleName": "./node_modules/path-browserify/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-37"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-37"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/destroy.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-43"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-37"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 66,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
        },
        {
          "id": 2,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
          "name": "./node_modules/path-browserify/index.js",
          "index": 8,
          "index2": 4,
          "size": 8742,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "6:9-24"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "49:11-26"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "15:11-26"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1179:44-59"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1824:44-59"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "22:17-32"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "10:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"
        },
        {
          "id": 3,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/node-libs-browser/mock/empty.js",
          "name": "./node_modules/node-libs-browser/mock/empty.js",
          "index": 7,
          "index2": 3,
          "size": 0,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "43:9-22"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "8:9-22"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1179:17-30"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1824:17-30"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "24:9-22"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "4:9-22"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": ""
        },
        {
          "id": 4,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/errors-browser.js",
          "name": "./node_modules/readable-stream/errors-browser.js",
          "index": 63,
          "index2": 57,
          "size": 4197,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
              "type": "cjs require",
              "userRequest": "../../../errors",
              "loc": "5:33-59"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "../errors",
              "loc": "79:21-41"
            },
            {
              "moduleId": 33,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/state.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/state.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/state.js",
              "type": "cjs require",
              "userRequest": "../../../errors",
              "loc": "3:28-54"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "../errors",
              "loc": "87:21-41"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
              "module": "./node_modules/readable-stream/lib/_stream_transform.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
              "type": "cjs require",
              "userRequest": "../errors",
              "loc": "66:21-41"
            },
            {
              "moduleId": 69,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "type": "cjs require",
              "userRequest": "../../../errors",
              "loc": "16:21-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n"
        },
        {
          "id": 5,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
          "name": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "index": 65,
          "index2": 62,
          "size": 4399,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_duplex.js",
              "loc": "5:17-51"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "107:21-48"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "170:21-48"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "104:21-48"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "230:21-48"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
              "module": "./node_modules/readable-stream/lib/_stream_transform.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "72:13-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});"
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "index": 55,
          "index2": 72,
          "size": 488,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/N3Store.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 313,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "readable-stream",
              "loc": "2:0-44"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "readable-stream",
              "loc": "3:0-43"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "readable-stream",
              "loc": "3:0-44"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "readable-stream",
              "loc": "6:44-53"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "readable-stream",
              "loc": "6:44-53"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "readable-stream",
              "loc": "378:21-29"
            }
          ],
          "usedExports": [
            "Readable",
            "Transform"
          ],
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n"
        },
        {
          "id": 7,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/RdfTerm.js",
          "name": "../shex-core/lib/RdfTerm.js",
          "index": 10,
          "index2": 8,
          "size": 10523,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/RdfTerm",
              "loc": "2:14-38"
            },
            {
              "moduleId": 20,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "module": "../shex-core/lib/ShExUtil.js",
              "moduleName": "../shex-core/lib/ShExUtil.js",
              "type": "cjs require",
              "userRequest": "./RdfTerm",
              "loc": "4:14-34"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/threaded-val-nerr.js",
              "module": "../shex-core/lib/regex/threaded-val-nerr.js",
              "moduleName": "../shex-core/lib/regex/threaded-val-nerr.js",
              "type": "cjs require",
              "userRequest": "../RdfTerm",
              "loc": "2:14-35"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "./RdfTerm",
              "loc": "31:14-34"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/nfax-val-1err.js",
              "module": "../shex-core/lib/regex/nfax-val-1err.js",
              "moduleName": "../shex-core/lib/regex/nfax-val-1err.js",
              "type": "cjs require",
              "userRequest": "../RdfTerm",
              "loc": "2:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/**\n *\n * isIRI, isBlank, getLiteralType, getLiteralValue\n */\n\nvar RdfTerm = (function () {\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  const RdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\n  const XsdString = \"http://www.w3.org/2001/XMLSchema#string\";\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function resolveRelativeIRI (base, iri) {\n\n    if (absoluteIRI.test(iri))\n      return iri\n\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      let m = base.match(schemeAuthority);\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? m[1] : m[0]) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(base.replace(/[^\\/?]*(?:\\?.*)?$/, '') + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function internalTerm (node) { // !!rdfjsTermToInternal\n    switch (node.termType) {\n    case (\"NamedNode\"):\n      return node.value;\n    case (\"BlankNode\"):\n      return \"_:\" + node.value;\n    case (\"Literal\"):\n      return \"\\\"\" + node.value + \"\\\"\" + (\n        node.datatypeString === RdfLangString\n          ? \"@\" + node.language\n          : node.datatypeString === XsdString\n          ? \"\"\n          : \"^^\" + node.datatypeString\n      );\n    default: throw Error(\"unknown RDFJS node type: \" + JSON.stringify(node))\n    }\n  }\n\n  function internalTriple (triple) { // !!rdfjsTripleToInternal\n    return {\n      subject: internalTerm(triple.subject),\n      predicate: internalTerm(triple.predicate),\n      object: internalTerm(triple.object)\n    };\n  }\n\n  function externalTerm (node, factory) { // !!intermalTermToRdfjs\n    if (isIRI(node)) {\n      return factory.namedNode(node);\n    } else if (isBlank(node)) {\n      return factory.blankNode(node.substr(2));\n    } else if (isLiteral(node)) {\n      let dtOrLang = getLiteralLanguage(node) ||\n          (getLiteralType(node) === XsdString\n           ? null // seems to screw up N3.js\n           : factory.namedNode(getLiteralType(node)))\n      return factory.literal(getLiteralValue(node), dtOrLang)\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  function externalTriple (triple, factory) { // !!rename internalTripleToRdjs\n    return factory.quad(\n      externalTerm(triple.subject, factory),\n      externalTerm(triple.predicate, factory),\n      externalTerm(triple.object, factory)\n    );\n  }\n\n  function intermalTermToTurtle (node, base, prefixes) {\n    if (isIRI(node)) {\n      // if (node === RDF_TYPE) // only valid in Turtle predicates\n      //   return \"a\";\n\n      // Escape special characters\n      if (escape.test(node))\n        node = node.replace(escapeAll, characterReplacer);\n      var pref = Object.keys(prefixes).find(pref => node.startsWith(prefixes[pref]));\n      if (pref) {\n        var rest = node.substr(prefixes[pref].length);\n        if (rest.indexOf(\"\\\\\") === -1) // could also say no more than n of these: [...]\n          return pref + \":\" + rest.replace(/([~!$&'()*+,;=/?#@%])/g, '\\\\' + \"$1\");\n      }\n      if (node.startsWith(base)) {\n        return \"<\" + node.substr(base.length) + \">\";\n      } else {\n        return \"<\" + node + \">\";\n      }\n    } else if (isBlank(node)) {\n      return node;\n    } else if (isLiteral(node)) {\n      var value = getLiteralValue(node);\n      var type = getLiteralType(node);\n      var language = getLiteralLanguage(node);\n      // Escape special characters\n      if (escape.test(value))\n        value = value.replace(escapeAll, characterReplacer);\n      // Write the literal, possibly with type or language\n      if (language)\n        return '\"' + value + '\"@' + language;\n      else if (type)\n        return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n      else\n        return '\"' + value + '\"';\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  function isIRI (entity) {\n    if (typeof entity !== 'string')\n      return false;\n    else if (entity.length === 0)\n      return true;\n    else {\n      var firstChar = entity[0];\n      return firstChar !== '\"' && firstChar !== '_';\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  function isLiteral (entity) {\n    return typeof entity === 'string' && entity[0] === '\"';\n  }\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  function isBlank (entity) {\n    return typeof entity === 'string' && entity.substr(0, 2) === '_:';\n  }\n\n  // Tests whether the given entity represents the default graph\n  function isDefaultGraph (entity) {\n    return !entity;\n  }\n\n  // Tests whether the given triple is in the default graph\n  function inDefaultGraph (triple) {\n    return !triple.graph;\n  }\n\n  // Gets the string value of a literal in the N3 library\n  function getLiteralValue (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  }\n\n  // Gets the type of a literal in the N3 library\n  function getLiteralType (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  }\n\n  // Gets the language of a literal in the N3 library\n  function getLiteralLanguage (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  }\n\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n  // Replaces a character by its escaped version\n  function characterReplacer (character) {\n    // Replace a single character by its escaped version\n    var result = escapeReplacements[character];\n    if (result === undefined) {\n      // Replace a single character with its 4-bit unicode escape sequence\n      if (character.length === 1) {\n        result = character.charCodeAt(0).toString(16);\n        result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n      }\n      // Replace a surrogate pair with its 8-bit unicode escape sequence\n      else {\n        result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                  character.charCodeAt(1) + 0x2400).toString(16);\n        result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n      }\n    }\n    return result;\n  }\n\n  return {\n    RdfLangString: RdfLangString,\n    XsdString: XsdString,\n    resolveRelativeIRI: resolveRelativeIRI,\n    isIRI: isIRI,\n    isLiteral: isLiteral,\n    isBlank: isBlank,\n    isDefaultGraph: isDefaultGraph,\n    inDefaultGraph: inDefaultGraph,\n    getLiteralValue: getLiteralValue,\n    getLiteralType: getLiteralType,\n    getLiteralLanguage: getLiteralLanguage,\n    internalTerm: internalTerm,\n    internalTriple: internalTriple,\n    externalTerm: externalTerm,\n    externalTriple: externalTriple,\n    intermalTermToTurtle: intermalTermToTurtle,\n  }\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = RdfTerm; // node environment\n"
        },
        {
          "id": 8,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 33,
          "index2": 29,
          "size": 472,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            },
            {
              "moduleId": 26,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-44"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-44"
            },
            {
              "moduleId": 64,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util-deprecate/browser.js",
              "module": "./node_modules/util-deprecate/browser.js",
              "moduleName": "./node_modules/util-deprecate/browser.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
        },
        {
          "id": 9,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "name": "./node_modules/buffer/index.js",
          "index": 44,
          "index2": 44,
          "size": 48590,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "issuerId": 12,
          "issuerName": "./node_modules/n3/src/N3Lexer.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 336,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "cjs require",
              "userRequest": "Buffer",
              "loc": "1:0-34"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "46:13-30"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "70:13-30"
            },
            {
              "moduleId": 62,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "15:15-32"
            },
            {
              "moduleId": 65,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/safe-buffer/index.js",
              "module": "./node_modules/safe-buffer/index.js",
              "moduleName": "./node_modules/safe-buffer/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"
        },
        {
          "id": 10,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/inherits/inherits_browser.js",
          "name": "./node_modules/inherits/inherits_browser.js",
          "index": 64,
          "index2": 59,
          "size": 753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "46:0-19"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "90:0-19"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "99:0-19"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
              "module": "./node_modules/readable-stream/lib/_stream_transform.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "74:0-19"
            },
            {
              "moduleId": 68,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
              "module": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "30:0-19"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
        },
        {
          "id": 11,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "index": 14,
          "index2": 12,
          "size": 19383,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "issuerId": 21,
          "issuerName": "../shex-core/lib/ShExWriter.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 21,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "name": "../shex-core/lib/ShExWriter.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            }
          ],
          "profile": {
            "factory": 61,
            "building": 19,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "module": "../shex-core/lib/ShExWriter.js",
              "moduleName": "../shex-core/lib/ShExWriter.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "4:11-26"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "59:11-26"
            },
            {
              "moduleId": 26,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "util/",
              "loc": "73:11-27"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "9:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "index": 43,
          "index2": 47,
          "size": 19875,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Lexer",
              "loc": "1:0-30"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Lexer",
              "loc": "2:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony export imported specifier",
              "userRequest": "./N3Lexer",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./N3Lexer",
              "loc": "37:39-46"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module uses injected variables (Buffer)"
          ],
          "depth": 2,
          "source": "// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nvar escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nvar lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nvar invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s()\\[\\]\\{\\}\"'<])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (var key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    var input = this._input, outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      var whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      var line = this._line, type = '', value = '', prefix = '',\n          firstChar = input[0], match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(input + ' ')))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(input + ' '))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(input + ' ')))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      var token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    var err = new Error('Unexpected \"' + issue + '\" on line ' + this._line + '.');\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    var self = this;\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => self._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        var tokens = [], error;\n        this._tokenizeToEnd(function (e, t) { e ? (error = e) : tokens.push(t); }, true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', function (data) {\n        if (self._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (self._pendingBuffer) {\n            data = Buffer.concat([self._pendingBuffer, data]);\n            self._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            self._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            self._input += data;\n            self._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', function () {\n        if (self._input !== null)\n          self._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n"
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "index": 9,
          "index2": 18,
          "size": 419,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/core",
              "loc": "3:23-46"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/core",
              "loc": "5:13-36"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "@shexjs/core",
              "loc": "931:17-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "var ShExCore = {\n  RdfTerm:    require('./lib/RdfTerm'),\n  Util:         require('./lib/ShExUtil'),\n  Validator:    require('./lib/ShExValidator'),\n  Writer:    require('./lib/ShExWriter'),\n  'nfax-val-1err':     require('./lib/regex/nfax-val-1err'),\n  'threaded-val-nerr': require('./lib/regex/threaded-val-nerr')\n};\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExCore;\n\n"
        },
        {
          "id": 14,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "index": 26,
          "index2": 26,
          "size": 25347,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "45:16-36"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "16:16-36"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "6:16-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"
        },
        {
          "id": 15,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/events/events.js",
          "name": "./node_modules/events/events.js",
          "index": 31,
          "index2": 28,
          "size": 14161,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "48:9-26"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "32:9-26"
            },
            {
              "moduleId": 31,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/stream-browser.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "1:17-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"
        },
        {
          "id": 16,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "index": 35,
          "index2": 32,
          "size": 611,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "51:17-44"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "17:17-44"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "12:17-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"
        },
        {
          "id": 17,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "index": 71,
          "index2": 65,
          "size": 3102,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/internal/streams/end-of-stream.js",
              "loc": "8:19-69"
            },
            {
              "moduleId": 66,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "type": "cjs require",
              "userRequest": "./end-of-stream",
              "loc": "7:15-41"
            },
            {
              "moduleId": 69,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "type": "cjs require",
              "userRequest": "./end-of-stream",
              "loc": "35:31-57"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;"
        },
        {
          "id": 18,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapSymbols.js",
          "name": "../shape-map/lib/ShapeMapSymbols.js",
          "index": 2,
          "index2": 0,
          "size": 451,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 39,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 39,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 120,
            "building": 142
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 39,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapSymbols",
              "loc": "7:18-50"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapSymbols",
              "loc": "417:17-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * Status: Early implementation\n *\n * TODO:\n *   testing.\n */\n\nvar ShapeMapSymbols = (function () {\n  return {\n    focus: { term: \"FOCUS\" },\n    start: { term: \"START\" },\n    wildcard: { term: \"WILDCARD\" },\n  }\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapSymbols;\n"
        },
        {
          "id": 19,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/module.js",
          "name": "(webpack)/buildin/module.js",
          "index": 6,
          "index2": 2,
          "size": 497,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
        },
        {
          "id": 20,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "name": "../shex-core/lib/ShExUtil.js",
          "index": 11,
          "index2": 14,
          "size": 85300,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExUtil",
              "loc": "3:16-41"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "./ShExUtil",
              "loc": "32:15-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// **ShExUtil** provides ShEx utility functions\n\nvar ShExUtil = (function () {\nvar RdfTerm = require(\"./RdfTerm\");\n// var util = require('util');\nconst Hierarchy = require('hierarchy-closure')\n\nconst SX = {};\nSX._namespace = \"http://www.w3.org/ns/shex#\";\n[\"Schema\", \"@context\", \"imports\", \"startActs\", \"start\", \"shapes\",\n \"ShapeOr\", \"ShapeAnd\", \"shapeExprs\", \"nodeKind\",\n \"NodeConstraint\", \"iri\", \"bnode\", \"nonliteral\", \"literal\", \"datatype\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\", \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\", \"values\",\n \"ShapeNot\", \"shapeExpr\",\n \"Shape\", \"virtual\", \"closed\", \"extra\", \"expression\", \"inherit\", \"semActs\",\n \"ShapeRef\", \"reference\", \"ShapeExternal\",\n \"EachOf\", \"OneOf\", \"expressions\", \"min\", \"max\", \"annotation\",\n \"TripleConstraint\", \"inverse\", \"negated\", \"predicate\", \"valueExpr\",\n \"Inclusion\", \"include\", \"Language\", \"languageTag\",\n \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"stem\",\n \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\", \"exclusion\",\n \"Wildcard\", \"SemAct\", \"name\", \"code\",\n \"Annotation\", \"object\"].forEach(p => {\n  SX[p] = SX._namespace+p;\n});\nconst RDF = {};\nRDF._namespace = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n[\"type\", \"first\", \"rest\", \"nil\"].forEach(p => {\n  RDF[p] = RDF._namespace+p;\n});\nconst XSD = {}\nXSD._namespace = \"http://www.w3.org/2001/XMLSchema#\";\n[\"anyURI\"].forEach(p => {\n  XSD[p] = XSD._namespace+p;\n});\nconst OWL = {}\nOWL._namespace = \"http://www.w3.org/2002/07/owl#\";\n[\"Thing\"].forEach(p => {\n  OWL[p] = OWL._namespace+p;\n});\n\nconst Missed = {}; // singleton\nvar UNBOUNDED = -1;\n\nfunction extend (base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\nvar ShExUtil = {\n\n  SX: SX,\n  RDF: RDF,\n  version: function () {\n    return \"0.5.0\";\n  },\n\n  Visitor: function () {\n    // function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n    var _ShExUtil = this;\n    function visitMap (map, val) {\n      var ret = {};\n      Object.keys(map).forEach(function (item) {\n        ret[item] = val(map[item]);\n      });\n      return ret;\n    }\n    var r = {\n      runtimeError: function (e) {\n        throw e;\n      },\n\n      visitSchema: function (schema) {\n        var ret = { type: \"Schema\" };\n        _ShExUtil._expect(schema, \"type\", \"Schema\");\n        this._maybeSet(schema, ret, \"Schema\",\n                       [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                       [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\"]\n                      );\n        return ret;\n      },\n\n      visitPrefixes: function (prefixes) {\n        return prefixes === undefined ?\n          undefined :\n          visitMap(prefixes, function (val) {\n            return val;\n          });\n      },\n\n      visitIRI: function (i) {\n        return i;\n      },\n\n      visitImports: function (imports) {\n        var _Visitor = this;\n        return imports.map(function (imp) {\n          return _Visitor.visitIRI(imp);\n        });\n      },\n\n      visitStartActs: function (startActs) {\n        var _Visitor = this;\n        return startActs === undefined ?\n          undefined :\n          startActs.map(function (act) {\n            return _Visitor.visitSemAct(act);\n          });\n      },\n      visitSemActs: function (semActs) {\n        var _Visitor = this;\n        if (semActs === undefined)\n          return undefined;\n        var ret = []\n        Object.keys(semActs).forEach(function (label) {\n          ret.push(_Visitor.visitSemAct(semActs[label], label));\n        });\n        return ret;\n      },\n      visitSemAct: function (semAct, label) {\n        var ret = { type: \"SemAct\" };\n        _ShExUtil._expect(semAct, \"type\", \"SemAct\");\n\n        this._maybeSet(semAct, ret, \"SemAct\",\n                       [\"name\", \"code\"]);\n        return ret;\n      },\n\n      visitShapes: function (shapes) {\n        var _Visitor = this;\n        if (shapes === undefined)\n          return undefined;\n        return shapes.map(\n          shapeExpr =>\n            _Visitor.visitShapeExpr(shapeExpr)\n        );\n      },\n\n      visitProductions999: function (productions) { // !! DELETE\n        var _Visitor = this;\n        if (productions === undefined)\n          return undefined;\n        var ret = {}\n        Object.keys(productions).forEach(function (label) {\n          ret[label] = _Visitor.visitExpression(productions[label], label);\n        });\n        return ret;\n      },\n\n      visitShapeExpr: function (expr, label) {\n        if (isShapeRef(expr))\n          return this.visitShapeRef(expr)\n        var r =\n            expr.type === \"Shape\" ? this.visitShape(expr, label) :\n            expr.type === \"NodeConstraint\" ? this.visitNodeConstraint(expr, label) :\n            expr.type === \"ShapeAnd\" ? this.visitShapeAnd(expr, label) :\n            expr.type === \"ShapeOr\" ? this.visitShapeOr(expr, label) :\n            expr.type === \"ShapeNot\" ? this.visitShapeNot(expr, label) :\n            expr.type === \"ShapeExternal\" ? this.visitShapeExternal(expr) :\n            null;// if (expr.type === \"ShapeRef\") r = 0; // console.warn(\"visitShapeExpr:\", r);\n        if (r === null)\n          throw Error(\"unexpected shapeExpr type: \" + expr.type);\n        else\n          return r;\n      },\n\n      // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n      _visitShapeGroup: function (expr, label) {\n        this._testUnknownAttributes(expr, [\"id\", \"shapeExprs\"], expr.type, this.visitShapeNot)\n        var _Visitor = this;\n        var r = { type: expr.type };\n        if (\"id\" in expr)\n          r.id = expr.id;\n        r.shapeExprs = expr.shapeExprs.map(function (nested) {\n          return _Visitor.visitShapeExpr(nested, label);\n        });\n        return r;\n      },\n\n      // _visitShapeNot: visit negated shape\n      visitShapeNot: function (expr, label) {\n        this._testUnknownAttributes(expr, [\"id\", \"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n        var r = { type: expr.type };\n        if (\"id\" in expr)\n          r.id = expr.id;\n        r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, label);\n        return r;\n      },\n\n      // ### `visitNodeConstraint` deep-copies the structure of a shape\n      visitShape: function (shape, label) {\n        var ret = { type: \"Shape\" };\n        _ShExUtil._expect(shape, \"type\", \"Shape\");\n\n        this._maybeSet(shape, ret, \"Shape\",\n                       [ \"id\",\n                         // \"virtual\", \"inherit\", -- futureWork\n                         \"closed\",\n                         \"expression\", \"extra\", \"semActs\", \"annotations\"]);\n        return ret;\n      },\n\n      // ### `visitNodeConstraint` deep-copies the structure of a shape\n      visitNodeConstraint: function (shape, label) {\n        var ret = { type: \"NodeConstraint\" };\n        _ShExUtil._expect(shape, \"type\", \"NodeConstraint\");\n\n        this._maybeSet(shape, ret, \"NodeConstraint\",\n                       [ \"id\",\n                         // \"virtual\", \"inherit\", -- futureWork\n                         \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                         \"reference\", \"minlength\", \"maxlength\",\n                         \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                         \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"]);\n        return ret;\n      },\n\n      visitShapeRef: function (reference) {\n        if (typeof reference !== \"string\") {\n          let ex = Exception(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n          console.warn(ex);\n          throw ex;\n        }\n        return reference;\n      },\n\n      visitShapeExternal: function (expr) {\n        this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n        return extend(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n      },\n\n      // _visitGroup: visit a grouping expression (someOf or eachOf)\n      _visitGroup: function (expr, type) {\n        var _Visitor = this;\n        var r = Object.assign(\n          // pre-declare an id so it sorts to the top\n          \"id\" in expr ? { id: null } : { },\n          { type: expr.type }\n        );\n        r.expressions = expr.expressions.map(function (nested) {\n          return _Visitor.visitExpression(nested);\n        });\n        return this._maybeSet(expr, r, \"expr\",\n                              [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"]);\n      },\n\n      visitTripleConstraint: function (expr) {\n        return this._maybeSet(expr,\n                              Object.assign(\n                                // pre-declare an id so it sorts to the top\n                                \"id\" in expr ? { id: null } : { },\n                                { type: \"TripleConstraint\" }\n                              ),\n                              \"TripleConstraint\",\n                              [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                               \"min\", \"max\", \"annotations\", \"semActs\"])\n      },\n\n      visitExpression: function (expr) {\n        if (typeof expr === \"string\")\n          return this.visitInclusion(expr);\n        var r = expr.type === \"TripleConstraint\" ? this.visitTripleConstraint(expr) :\n          expr.type === \"OneOf\" ? this.visitOneOf(expr) :\n          expr.type === \"EachOf\" ? this.visitEachOf(expr) :\n          null;\n        if (r === null)\n          throw Error(\"unexpected expression type: \" + expr.type);\n        else\n          return r;\n      },\n\n      visitValues: function (values) {\n        var _Visitor = this;\n        return values.map(function (t) {\n          return isTerm(t) || t.type === \"Language\" ?\n            t :\n            _Visitor.visitStemRange(t);\n        });\n      },\n\n      visitStemRange: function (t) {\n        var _Visitor = this; // console.log(Error(t.type).stack);\n        // _ShExUtil._expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n        var stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                _Visitor.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n        var stem;\n        if (isTerm(t)) {\n          _ShExUtil._expect(t.stem, \"type\", \"Wildcard\");\n          stem = { type: t.type, stem: { type: \"Wildcard\" } };\n        } else {\n          stem = { type: t.type, stem: t.stem };\n        }\n        if (t.exclusions) {\n          stem.exclusions = t.exclusions.map(function (c) {\n            return _Visitor.visitExclusion(c);\n          });\n        }\n        return stem;\n      },\n\n      visitExclusion: function (c) {\n        if (!isTerm(c)) {\n          // _ShExUtil._expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      _Visitor.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n          return { type: c.type, stem: c.stem };\n        } else {\n          return c;\n        }\n      },\n\n      visitInclusion: function (inclusion) {\n        if (typeof inclusion !== \"string\") {\n          let ex = Exception(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n          console.warn(ex);\n          throw ex;\n        }\n        return inclusion;\n      },\n\n      _maybeSet: function (obj, ret, context, members, ignore) {\n        var _Visitor = this;\n        this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n        members.forEach(function (member) {\n          var methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n          if (member in obj) {\n            var f = _Visitor[methodName];\n            if (typeof f !== \"function\") {\n              throw Error(methodName + \" not found in Visitor\");\n            }\n            var t = f.call(_Visitor, obj[member]);\n            if (t !== undefined) {\n              ret[member] = t;\n            }\n          }\n        });\n        return ret;\n      },\n      _visitValue: function (v) {\n        return v;\n      },\n      _visitList: function (l) {\n        return l.slice();\n      },\n      _testUnknownAttributes: function (obj, expected, context, captureFrame) {\n        var unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n          return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n        }, []);\n        if (unknownMembers.length > 0) {\n          var e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                        unknownMembers.map(function (p) {\n                          return \"\\\"\" + p + \"\\\"\";\n                        }).join(\",\") +\n                        \" in \" + context + \": \" + JSON.stringify(obj));\n          Error.captureStackTrace(e, captureFrame);\n          throw e;\n        }\n      }\n\n    };\n    r.visitBase = r.visitStart = r.visitVirtual = r.visitClosed = r[\"visit@context\"] = r._visitValue;\n    r.visitInherit = r.visitExtra = r.visitAnnotations = r._visitList;\n    r.visitInverse = r.visitPredicate = r._visitValue;\n    r.visitName = r.visitId = r.visitCode = r.visitMin = r.visitMax = r._visitValue;\n\n    r.visitType = r.visitNodeKind = r.visitDatatype = r.visitPattern = r.visitFlags = r.visitLength = r.visitMinlength = r.visitMaxlength = r.visitMininclusive = r.visitMinexclusive = r.visitMaxinclusive = r.visitMaxexclusive = r.visitTotaldigits = r.visitFractiondigits = r._visitValue;\n    r.visitOneOf = r.visitEachOf = r._visitGroup;\n    r.visitShapeAnd = r.visitShapeOr = r._visitShapeGroup;\n    r.visitInclude = r._visitValue;\n    r.visitValueExpr = r.visitShapeExpr;\n    return r;\n  },\n\n  // tests\n  // console.warn(\"HERE:\", ShExJtoAS({\"type\":\"Schema\",\"shapes\":[{\"id\":\"http://all.example/S1\",\"type\":\"Shape\",\"expression\":\n  //  { \"id\":\"http://all.example/S1e\", \"type\":\"EachOf\",\"expressions\":[ ] },\n  // // { \"id\":\"http://all.example/S1e\",\"type\":\"TripleConstraint\",\"predicate\":\"http://all.example/p1\"},\n  // \"extra\":[\"http://all.example/p3\",\"http://all.example/p1\",\"http://all.example/p2\"]\n  // }]}).shapes['http://all.example/S1']);\n\n  ShExJtoAS: function (schema) {\n    var _ShExUtil = this;\n    schema._prefixes = schema.prefixes || {  };\n    schema._index = this.index(schema);\n    return schema;\n  },\n\n  AStoShExJ: function (schema, abbreviate) {\n    schema[\"@context\"] = schema[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete schema[\"_index\"];\n    delete schema[\"_prefixes\"];\n    return schema;\n  },\n\n  ShExRVisitor: function (knownShapeExprs) {\n    var v = ShExUtil.Visitor();\n    var knownExpressions = {};\n    var oldVisitShapeExpr = v.visitShapeExpr,\n        oldVisitValueExpr = v.visitValueExpr,\n        oldVisitExpression = v.visitExpression;\n    v.keepShapeExpr = oldVisitShapeExpr;\n\n    v.visitShapeExpr = v.visitValueExpr = function (expr, label) {\n      if (typeof expr === \"string\")\n        return expr;\n      if (\"id\" in expr) {\n        if (knownShapeExprs.indexOf(expr.id) !== -1 || Object.keys(expr).length === 1)\n          return expr.id;\n        delete expr.id;\n      }\n      return oldVisitShapeExpr.call(this, expr, label);\n    };\n\n    v.visitExpression = function (expr) {\n      if (typeof expr === \"string\") // shortcut for recursive references e.g. 1Include1 and ../doc/TODO.md\n        return expr;\n      if (\"id\" in expr) {\n        if (expr.id in knownExpressions) {\n          knownExpressions[expr.id].refCount++;\n          return expr.id;\n        }\n      }\n      var ret = oldVisitExpression.call(this, expr);\n      // Everything from RDF has an ID, usually a BNode.\n      knownExpressions[expr.id] = { refCount: 1, expr: ret };\n      return ret;\n    }\n\n    v.cleanIds = function () {\n      for (var k in knownExpressions) {\n        var known = knownExpressions[k];\n        if (known.refCount === 1 && RdfTerm.isBlank(known.expr.id))\n          delete known.expr.id;\n      };\n    }\n\n    return v;\n  },\n\n\n  // tests\n  // var shexr = ShExUtil.ShExRtoShExJ({ \"type\": \"Schema\", \"shapes\": [\n  //   { \"id\": \"http://a.example/S1\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p1\",\n  //       \"valueExpr\": {\n  //         \"type\": \"ShapeAnd\", \"shapeExprs\": [\n  //           { \"type\": \"NodeConstraint\", \"nodeKind\": \"bnode\" },\n  //           { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //             \"expression\": {\n  //               \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  //           //            \"http://a.example/S2\"\n  //         ] } } },\n  //   { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  // ] });\n  // console.warn(\"HERE:\", shexr.shapes[0].expression.valueExpr);\n  // ShExUtil.ShExJtoAS(shexr);\n  // console.warn(\"THERE:\", shexr.shapes[\"http://a.example/S1\"].expression.valueExpr);\n\n\n  ShExRtoShExJ: function (schema) {\n    // compile a list of known shapeExprs\n    var knownShapeExprs = [];\n    if (\"shapes\" in schema)\n      knownShapeExprs = knownShapeExprs.concat(schema.shapes.map(sh => { return sh.id; }));\n\n    // normalize references to those shapeExprs\n    var v = this.ShExRVisitor(knownShapeExprs);\n    if (\"start\" in schema)\n      schema.start = v.visitShapeExpr(schema.start);\n    if (\"shapes\" in schema)\n      schema.shapes = schema.shapes.map(sh => {\n        return v.keepShapeExpr(sh);\n      });\n\n    // remove extraneous BNode IDs\n    v.cleanIds();\n    return schema;\n  },\n\n  valGrep: function (obj, type, f) {\n    var _ShExUtil = this;\n    var ret = [];\n    for (var i in obj) {\n      var o = obj[i];\n      if (typeof o === \"object\") {\n        if (\"type\" in o && o.type === type)\n          ret.push(f(o));\n        ret.push.apply(ret, _ShExUtil.valGrep(o, type, f));\n      }\n    }\n    return ret;\n  },\n\n  n3jsToTurtle: function (res) {\n    function termToLex (node) {\n      return typeof node === \"object\" ? (\"\\\"\" + node.value + \"\\\"\" + (\n        \"type\" in node ? \"^^<\" + node.type + \">\" :\n          \"language\" in node ? \"@\" + node.language :\n          \"\"\n      )) :\n      RdfTerm.isIRI(node) ? \"<\" + node + \">\" :\n      RdfTerm.isBlank(node) ? node :\n      \"???\";\n    }\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  valToN3js: function (res) {\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      var ret = JSON.parse(JSON.stringify(t));\n      if (typeof t.object === \"object\")\n        ret.object = (\"\\\"\" + t.object.value + \"\\\"\" + (\n          \"type\" in t.object ? \"^^\" + t.object.type :\n            \"language\" in t.object ? \"@\" + t.object.language :\n            \"\"\n        ));\n      return ret;\n    });\n  },\n\n  n3jsToTurtle: function (n3js) {\n    function termToLex (node) {\n      if (RdfTerm.isIRI(node))\n        return \"<\" + node + \">\";\n      if (RdfTerm.isBlank(node))\n        return node;\n      var t = RdfTerm.getLiteralType(node);\n      if (t && t !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return \"\\\"\" + RdfTerm.getLiteralValue(node) + \"\\\"\" +\n        \"^^<\" + t + \">\";\n      return node;\n    }\n    return n3js.map(function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  /** create indexes for schema\n   */\n  index: function (schema) {\n    let index = {\n      shapeExprs: {},\n      tripleExprs: {}\n    };\n    let v = ShExUtil.Visitor();\n\n    let oldVisitExpression = v.visitExpression;\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression)\n        index.tripleExprs[expression.id] = expression;\n      return oldVisitExpression.call(v, expression);\n    };\n\n    let oldVisitShapeExpr = v.visitShapeExpr;\n    v.visitShapeExpr = v.visitValueExpr = function (shapeExpr, label) {\n      if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n        index.shapeExprs[shapeExpr.id] = shapeExpr;\n      return oldVisitShapeExpr.call(v, shapeExpr, label);\n    };\n\n    v.visitSchema(schema);\n    return index;\n  },\n\n  /* canonicalize: move all tripleExpression references to their first expression.\n   *\n   */\n  canonicalize: function (schema, trimIRI) {\n    var ret = JSON.parse(JSON.stringify(schema));\n    ret[\"@context\"] = ret[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete ret._prefixes;\n    delete ret._base;\n    let index = ret._index || this.index(schema);\n    delete ret._index;\n    let sourceMap = ret._sourceMap;\n    delete ret._sourceMap;\n    // Don't delete ret.productions as it's part of the AS.\n    var v = ShExUtil.Visitor();\n    var knownExpressions = [];\n    var oldVisitInclusion = v.visitInclusion, oldVisitExpression = v.visitExpression;\n    v.visitInclusion = function (inclusion) {\n      if (knownExpressions.indexOf(inclusion) === -1 &&\n          inclusion in index.tripleExprs) {\n        knownExpressions.push(inclusion)\n        return oldVisitExpression.call(v, index.tripleExprs[inclusion]);\n      }\n      return oldVisitInclusion.call(v, inclusion);\n    };\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression) {\n        if (knownExpressions.indexOf(expression.id) === -1) {\n          knownExpressions.push(expression.id)\n          return oldVisitExpression.call(v, index.tripleExprs[expression.id]);\n        }\n        return expression.id; // Inclusion\n      }\n      return oldVisitExpression.call(v, expression);\n    };\n    if (trimIRI) {\n      v.visitIRI = function (i) {\n        return i.replace(trimIRI, \"\");\n      }\n      if (\"imports\" in ret)\n        ret.imports = v.visitImports(ret.imports);\n    }\n    if (\"shapes\" in ret) {\n      ret.shapes = Object.keys(index.shapeExprs).sort().map(k => {\n        if (\"extra\" in index.shapeExprs[k])\n          index.shapeExprs[k].extra.sort();\n        return v.visitShapeExpr(index.shapeExprs[k]);\n      });\n    }\n    return ret;\n  },\n\n  BiDiClosure: function () {\n    return {\n      needs: {},\n      neededBy: {},\n      inCycle: [],\n      test: function () {\n        function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n        // this.add(1, 2); expect(this.needs, { 1:[2]                     }); expect(this.neededBy, { 2:[1]                     });\n        // this.add(3, 4); expect(this.needs, { 1:[2], 3:[4]              }); expect(this.neededBy, { 2:[1], 4:[3]              });\n        // this.add(2, 3); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1] });\n\n        this.add(2, 3); expect(this.needs, { 2:[3]                     }); expect(this.neededBy, { 3:[2]                     });\n        this.add(1, 2); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(1, 3); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(3, 4); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(6, 7); expect(this.needs, { 6:[7]                    , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6]                    , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 6); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 7); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(7, 8); expect(this.needs, { 5:[6,7,8], 6:[7,8], 7:[8], 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5], 8:[7,6,5], 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(4, 5);\n        expect(this.needs,    { 1:[2,3,4,5,6,7,8], 2:[3,4,5,6,7,8], 3:[4,5,6,7,8], 4:[5,6,7,8], 5:[6,7,8], 6:[7,8], 7:[8] });\n        expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1], 5:[4,3,2,1], 6:[5,4,3,2,1], 7:[6,5,4,3,2,1], 8:[7,6,5,4,3,2,1] });\n      },\n      add: function (needer, needie, negated) {\n        var r = this;\n        if (!(needer in r.needs))\n          r.needs[needer] = [];\n        if (!(needie in r.neededBy))\n          r.neededBy[needie] = [];\n\n        // // [].concat.apply(r.needs[needer], [needie], r.needs[needie]). emitted only last element\n        r.needs[needer] = r.needs[needer].concat([needie], r.needs[needie]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        // // [].concat.apply(r.neededBy[needie], [needer], r.neededBy[needer]). emitted only last element\n        r.neededBy[needie] = r.neededBy[needie].concat([needer], r.neededBy[needer]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n\n        if (needer in this.neededBy) this.neededBy[needer].forEach(function (e) {\n          r.needs[e] = r.needs[e].concat([needie], r.needs[needie]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        });\n\n        if (needie in this.needs) this.needs[needie].forEach(function (e) {\n          r.neededBy[e] = r.neededBy[e].concat([needer], r.neededBy[needer]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; })\n        });\n        // this.neededBy[needie].push(needer);\n\n        if (r.needs[needer].indexOf(needer) !== -1)\n          r.inCycle = r.inCycle.concat(r.needs[needer]);\n      },\n      trim: function () {\n        function _trim (a) {\n          // filter(function (el, ord, l) { return l.indexOf(el) === ord; })\n          for (var i = a.length-1; i > -1; --i)\n            if (a.indexOf(a[i]) < i)\n              a.splice(i, i+1);\n        }\n        for (k in this.needs)\n          _trim(this.needs[k]);\n        for (k in this.neededBy)\n          _trim(this.neededBy[k]);\n      },\n      foundIn: {},\n      addIn: function (tripleExpr, shapeExpr) {\n        this.foundIn[tripleExpr] = shapeExpr;\n      }\n    }\n  },\n  /** @@TODO tests\n   * options:\n   *   no: don't do anything; just report nestable shapes\n   *   transform: function to change shape labels\n   */\n  nestShapes: function (schema, options = {}) {\n    var _ShExUtil = this;\n    const index = schema._index || this.index(schema);\n    if (!('no' in options)) { options.no = false }\n\n    let shapeLabels = Object.keys(index.shapeExprs || [])\n    let shapeReferences = {}\n    shapeLabels.forEach(label => {\n      let shape = index.shapeExprs[label]\n      noteReference(label, null) // just note the shape so we have a complete list at the end\n      shape = _ShExUtil.skipDecl(shape)\n      if (shape.type === 'Shape') {\n        if ('extends' in shape) {\n          shape.extends.forEach(\n            parent => noteReference(parent, shape)\n          )\n        }\n        if ('expression' in shape) {\n          (_ShExUtil.simpleTripleConstraints(shape) || []).forEach(tc => {\n            let target = _ShExUtil.getValueType(tc.valueExpr, true)\n            noteReference(target, {type: 'tc', shapeLabel: label, tc: tc})\n          })\n        }\n      } else if (shape.type === 'NodeConstraint') {\n        // can't have any refs to other shapes\n      } else {\n        throw Error('nestShapes currently only supports Shapes and NodeConstraints')\n      }\n    })\n    let nestables = Object.keys(shapeReferences).filter(\n      label => shapeReferences[label].length === 1\n        && shapeReferences[label][0].type === 'tc' // no inheritance support yet\n        && _ShExUtil.skipDecl(index.shapeExprs[label]).type === 'Shape' // Don't nest e.g. valuesets for now\n    ).filter(\n      nestable => !('noNestPattern' in options)\n        || !nestable.match(RegExp(options.noNestPattern))\n    ).reduce((acc, label) => {\n      acc[label] = {\n        referrer: shapeReferences[label][0].shapeLabel,\n        predicate: shapeReferences[label][0].tc.predicate\n      }\n      return acc\n    }, {})\n    if (!options.no) {\n      let oldToNew = {}\n\n      if (options.rename) {\n      if (!('transform' in options)) {\n        options.transform = (function () {\n          let map = shapeLabels.reduce((acc, k, idx) => {\n            acc[k] = '_:transformed' + idx\n            return acc\n          }, {})\n          return function (id, shapeExpr) {\n            return map[id]\n          }\n        })()\n      }\n      Object.keys(nestables).forEach(oldName => {\n        let shapeExpr = index.shapeExprs[oldName]\n        let newName = options.transform(oldName, shapeExpr)\n        oldToNew[oldName] = newName\n        shapeLabels[shapeLabels.indexOf(oldName)] = newName\n        nestables[newName] = nestables[oldName]\n        nestables[newName].was = oldName\n        delete nestables[oldName]\n        index.shapeExprs[newName] = index.shapeExprs[oldName]\n        delete index.shapeExprs[oldName]\n        if (shapeReferences[oldName].length !== 1) { throw Error('assertion: ' + oldName + ' doesn\\'t have one reference: [' + shapeReferences[oldName] + ']') }\n        let ref = shapeReferences[oldName][0]\n        if (ref.type === 'tc') {\n          if (ref.tc.valueExpr.type === 'ShapeRef') {\n            ref.tc.valueExpr.reference = newName\n          } else {\n            throw Error('assertion: rename not implemented for TripleConstraint expr: ' + ref.tc.valueExpr)\n            // _ShExUtil.setValueType(ref, newName)\n          }\n        } else if (ref.type === 'Shape') {\n          throw Error('assertion: rename not implemented for Shape: ' + ref)\n        } else {\n          throw Error('assertion: ' + ref.type + ' not TripleConstraint or Shape')\n        }\n      })\n\n      Object.keys(nestables).forEach(k => {\n        let n = nestables[k]\n        if (n.referrer in oldToNew) {\n          n.newReferrer = oldToNew[n.referrer]\n        }\n      })\n\n      // Restore old order for more concise diffs.\n      let shapesCopy = {}\n      shapeLabels.forEach(label => shapesCopy[label] = index.shapeExprs[label])\n      index.shapeExprs = shapesCopy\n      } else {\n        const doomed = []\n        const ids = schema.shapes.map(s => s.id)\n        Object.keys(nestables).forEach(oldName => {\n          shapeReferences[oldName][0].tc.valueExpr = index.shapeExprs[oldName].shapeExpr\n          const delme = ids.indexOf(oldName)\n          if (schema.shapes[delme].id !== oldName)\n            throw Error('assertion: found ' + schema.shapes[delme].id + ' instead of ' + oldName)\n          doomed.push(delme)\n          delete index.shapeExprs[oldName]\n        })\n        doomed.sort((l, r) => r - l).forEach(delme => {\n          const id = schema.shapes[delme].id\n          if (!nestables[id])\n            throw Error('deleting unexpected shape ' + id)\n          schema.shapes.splice(delme, 1)\n        })\n      }\n    }\n    // console.dir(nestables)\n    // console.dir(shapeReferences)\n    return nestables\n\n    function noteReference (id, reference) {\n      if (!(id in shapeReferences)) {\n        shapeReferences[id] = []\n      }\n      if (reference) {\n        shapeReferences[id].push(reference)\n      }\n    }\n  },\n\n  /** @@TODO tests\n   *\n   */\n  getPredicateUsage: function (schema, untyped = {}) {\n    var _ShExUtil = this;\n\n    // populate shapeHierarchy\n    let shapeHierarchy = Hierarchy.create()\n    Object.keys(schema.shapes).forEach(label => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[label])\n      if (shapeExpr.type === 'Shape') {\n        (shapeExpr.extends || []).forEach(\n          superShape => shapeHierarchy.add(superShape, label)\n        )\n      }\n    })\n    Object.keys(schema.shapes).forEach(label => {\n      if (!(label in shapeHierarchy.parents))\n        shapeHierarchy.parents[label] = []\n    })\n\n    let predicates = { } // IRI->{ uses: [shapeLabel], commonType: shapeExpr }\n    Object.keys(schema.shapes).forEach(shapeLabel => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[shapeLabel])\n      if (shapeExpr.type === 'Shape') {\n        let tcs = _ShExUtil.simpleTripleConstraints(shapeExpr) || []\n        tcs.forEach(tc => {\n          let newType = _ShExUtil.getValueType(tc.valueExpr)\n          if (!(tc.predicate in predicates)) {\n            predicates[tc.predicate] = {\n              uses: [shapeLabel],\n              commonType: newType,\n              polymorphic: false\n            }\n            if (typeof newType === 'object') {\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                newType,\n                references: []\n              }\n            }\n          } else {\n            predicates[tc.predicate].uses.push(shapeLabel)\n            let curType = predicates[tc.predicate].commonType\n            if (typeof curType === 'object' || curType === null) {\n              // another use of a predicate with no commonType\n              // console.warn(`${shapeLabel} ${tc.predicate}:${newType} uses untypable predicate`)\n              untyped[tc.predicate].references.push({ shapeLabel, newType })\n            } else if (typeof newType === 'object') {\n              // first use of a predicate with no detectable commonType\n              predicates[tc.predicate].commonType = null\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                curType,\n                newType,\n                references: []\n              }\n            } else if (curType === newType) {\n              ; // same type again\n            } else if (shapeHierarchy.parents[curType].indexOf(newType) !== -1) {\n              predicates[tc.predicate].polymorphic = true; // already covered by current commonType\n            } else {\n              let idx = shapeHierarchy.parents[newType].indexOf(curType)\n              if (idx === -1) {\n                let intersection = shapeHierarchy.parents[curType].filter(\n                  lab => -1 !== shapeHierarchy.parents[newType].indexOf(lab)\n                )\n                if (intersection.length === 0) {\n                  untyped[tc.predicate] = {\n                    shapeLabel,\n                    predicate: tc.predicate,\n                    curType,\n                    newType,\n                    references: []\n                  }\n                  // console.warn(`${shapeLabel} ${tc.predicate} : ${newType} isn\\'t related to ${curType}`)\n                  predicates[tc.predicate].commonType = null\n                } else {\n                  predicates[tc.predicate].commonType = intersection[0]\n                  predicates[tc.predicate].polymorphic = true\n                }\n              } else {\n                predicates[tc.predicate].commonType = shapeHierarchy.parents[newType][idx]\n                predicates[tc.predicate].polymorphic = true\n              }\n            }\n          }\n        })\n      }\n    })\n    return predicates\n  },\n\n  /** @@TODO tests\n   *\n   */\n  simpleTripleConstraints: function (shape) {\n    if (!('expression' in shape)) {\n      return []\n    }\n    if (shape.expression.type === 'TripleConstraint') {\n      return [ shape.expression ]\n    }\n    if (shape.expression.type === 'EachOf' &&\n        !(shape.expression.expressions.find(\n          expr => expr.type !== 'TripleConstraint'\n        ))) {\n          return shape.expression.expressions\n        }\n    throw Error('can\\'t (yet) express ' + JSON.stringify(shape))\n  },\n\n  skipDecl: function (shapeExpr) {\n    return shapeExpr.type === 'ShapeDecl' ? shapeExpr.shapeExpr : shapeExpr\n  },\n\n  getValueType: function (valueExpr) {\n    if (typeof valueExpr === 'string') { return valueExpr }\n    if (valueExpr.reference) { return valueExpr.reference }\n    if (valueExpr.nodeKind === 'iri') { return OWL.Thing } // !! push this test to callers\n    if (valueExpr.datatype) { return valueExpr.datatype }\n    // if (valueExpr.extends && valueExpr.extends.length === 1) { return valueExpr.extends[0] }\n    return valueExpr // throw Error('no value type for ' + JSON.stringify(valueExpr))\n  },\n\n  /** getDependencies: find which shappes depend on other shapes by inheritance\n   * or inclusion.\n   * TODO: rewrite in terms of Visitor.\n   */\n  getDependencies: function (schema, ret) {\n    ret = ret || this.BiDiClosure();\n    (schema.shapes || []).forEach(function (shape) {\n      function _walkShapeExpression (shapeExpr, negated) {\n        if (typeof shapeExpr === \"string\") { // ShapeRef\n          ret.add(shape.id, shapeExpr);\n        } else if (shapeExpr.type === \"ShapeOr\" || shapeExpr.type === \"ShapeAnd\") {\n          shapeExpr.shapeExprs.forEach(function (expr) {\n            _walkShapeExpression(expr, negated);\n          });\n        } else if (shapeExpr.type === \"ShapeNot\") {\n          _walkShapeExpression(shapeExpr.shapeExpr, negated ^ 1); // !!! test negation\n        } else if (shapeExpr.type === \"Shape\") {\n          _walkShape(shapeExpr, negated);\n        } else if (shapeExpr.type === \"NodeConstraint\") {\n          // no impact on dependencies\n        } else if (shapeExpr.type === \"ShapeExternal\") {\n        } else\n          throw Error(\"expected Shape{And,Or,Ref,External} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n      }\n      \n      function _walkShape (shape, negated) {\n        function _walkTripleExpression (tripleExpr, negated) {\n          function _exprGroup (exprs, negated) {\n            exprs.forEach(function (nested) {\n              _walkTripleExpression(nested, negated) // ?? negation allowed?\n            });\n          }\n\n          function _walkTripleConstraint (tc, negated) {\n            if (tc.valueExpr)\n              _walkShapeExpression(tc.valueExpr, negated);\n            if (negated && ret.inCycle.indexOf(shape.id) !== -1) // illDefined/negatedRefCycle.err\n              throw Error(\"Structural error: \" + shape.id + \" appears in negated cycle\");\n          }\n\n          if (typeof tripleExpr === \"string\") { // Inclusion\n            ret.add(shape.id, tripleExpr);\n          } else {\n            if (\"id\" in tripleExpr)\n              ret.addIn(tripleExpr.id, shape.id)\n            if (tripleExpr.type === \"TripleConstraint\") {\n              _walkTripleConstraint(tripleExpr, negated);\n            } else if (tripleExpr.type === \"OneOf\" || tripleExpr.type === \"EachOf\") {\n              _exprGroup(tripleExpr.expressions);\n            } else {\n              throw Error(\"expected {TripleConstraint,OneOf,EachOf,Inclusion} in \" + tripleExpr);\n            }\n          }\n        }\n\n        if (shape.inherit && shape.inherit.length > 0)\n          shape.inherit.forEach(function (i) {\n            ret.add(shape.id, i);\n          });\n        if (shape.expression)\n          _walkTripleExpression(shape.expression, negated);\n      }\n      _walkShapeExpression(shape, 0); // 0 means false for bitwise XOR\n    });\n    return ret;\n  },\n\n  /** partition: create subset of a schema with only desired shapes and\n   * their dependencies.\n   *\n   * @schema: input schema\n   * @partition: shape name or array of desired shape names\n   * @deps: (optional) dependency tree from getDependencies.\n   *        map(shapeLabel -> [shapeLabel])\n   */\n  partition: function (schema, includes, deps, cantFind) {\n    const inputIndex = schema._index || this.index(schema)\n    const outputIndex = { shapeExprs: new Map(), tripleExprs: new Map() };\n    includes = includes instanceof Array ? includes : [includes];\n\n    // build dependency tree if not passed one\n    deps = deps || this.getDependencies(schema);\n    cantFind = cantFind || function (what, why) {\n      throw new Error(\"Error: can't find shape \" +\n                      (why ?\n                       why + \" dependency \" + what :\n                       what));\n    };\n    var partition = {};\n    for (var k in schema)\n      partition[k] = k === \"shapes\" ? [] : schema[k];\n    includes.forEach(function (i) {\n      if (i in outputIndex.shapeExprs) {\n        // already got it.\n      } else if (i in inputIndex.shapeExprs) {\n        const adding = inputIndex.shapeExprs[i];\n        partition.shapes.push(adding);\n        outputIndex.shapeExprs[adding.id] = adding;\n        if (i in deps.needs)\n          deps.needs[i].forEach(function (n) {\n            // Turn any needed TE into an SE.\n            if (n in deps.foundIn)\n              n = deps.foundIn[n];\n\n            if (n in outputIndex.shapeExprs) {\n            } else if (n in inputIndex.shapeExprs) {\n              const needed = inputIndex.shapeExprs[n];\n              partition.shapes.push(needed);\n              outputIndex.shapeExprs[needed.id] = needed;\n            } else\n              cantFind(n, i);\n          });\n      } else {\n        cantFind(i, \"supplied\");\n      }\n    });\n    return partition;\n  },\n\n\n  /** @@TODO flatten: return copy of input schema with all shape and value class\n   * references substituted by a copy of their referent.\n   *\n   * @schema: input schema\n   */\n  flatten: function (schema, deps, cantFind) {\n    var v = this.Visitor();\n    return v.visitSchema(schema);\n  },\n\n  // @@ put predicateUsage here\n\n  emptySchema: function () {\n    return {\n      type: \"Schema\"\n    };\n  },\n  merge: function (left, right, overwrite, inPlace) {\n    var ret = inPlace ? left : this.emptySchema();\n\n    function mergeArray (attr) {\n      Object.keys(left[attr] || {}).forEach(function (key) {\n        if (!(attr in ret))\n          ret[attr] = {};\n        ret[attr][key] = left[attr][key];\n      });\n      Object.keys(right[attr] || {}).forEach(function (key) {\n        if (!(attr  in left) || !(key in left[attr]) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = {};\n          ret[attr][key] = right[attr][key];\n        }\n      });\n    }\n\n    function mergeMap (attr) {\n      (left[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr in ret))\n          ret[attr] = new Map();\n        ret[attr].set(key, left[attr].get(key));\n      });\n      (right[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr  in left) || !(left[attr].has(key)) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = new Map();\n          ret[attr].set(key, right[attr].get(key));\n        }\n      });\n    }\n\n    // base\n    if (\"_base\" in left)\n      ret._base = left._base;\n    if (\"_base\" in right)\n      if (!(\"_base\" in left) || overwrite)\n        ret._base = right._base;\n\n    mergeArray(\"_prefixes\");\n\n    mergeMap(\"_sourceMap\");\n\n    if (\"imports\" in right)\n      if (!(\"imports\" in left) || overwrite)\n        ret.imports = right.imports;\n\n    // startActs\n    if (\"startActs\" in left)\n      ret.startActs = left.startActs;\n    if (\"startActs\" in right)\n      if (!(\"startActs\" in left) || overwrite)\n        ret.startActs = right.startActs;\n\n    // start\n    if (\"start\" in left)\n      ret.start = left.start;\n    if (\"start\" in right)\n      if (!(\"start\" in left) || overwrite)\n        ret.start = right.start;\n\n    let lindex = left._index || this.index(left);\n\n    // shapes\n    if (!inPlace)\n      (left.shapes || []).forEach(function (lshape) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(lshape);\n      });\n    (right.shapes || []).forEach(function (rshape) {\n      if (!(\"shapes\"  in left) || !(rshape.id in lindex.shapeExprs) || overwrite) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(rshape)\n      }\n    });\n\n    if (left._index || right._index)\n      ret._index = this.index(ret); // inefficient; could build above\n\n    return ret;\n  },\n\n  absolutizeResults: function (parsed, base) {\n    // !! duplicate of Validation-test.js:84: var referenceResult = parseJSONFile(resultsFile...)\n    function mapFunction (k, obj) {\n      // resolve relative URLs in results file\n      if ([\"shape\", \"reference\", \"node\", \"subject\", \"predicate\", \"object\"].indexOf(k) !== -1 &&\n          RdfTerm.isIRI(obj[k])) {\n        obj[k] = RdfTerm.resolveRelativeIRI(base, obj[k]);\n      }}\n\n    function resolveRelativeURLs (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (typeof obj[k] === \"object\") {\n          resolveRelativeURLs(obj[k]);\n        }\n        if (mapFunction) {\n          mapFunction(k, obj);\n        }\n      });\n    }\n    resolveRelativeURLs(parsed);\n    return parsed;\n  },\n\n  getProofGraph: function (res, db, dataFactory) {\n    function _dive1 (solns) {\n      if (solns.type === \"NodeTest\" || solns.type === \"NodeConstraintTest\") {\n      } else if (solns.type === \"SolutionList\" ||\n          solns.type === \"ShapeAndResults\") {\n        solns.solutions.forEach(s => {\n          if (s.solution) // no .solution for <S> {}\n            _dive1(s.solution);\n        });\n      } else if (solns.type === \"ShapeOrResults\") {\n        _dive1(solns.solution);\n      } else if (solns.type === \"ShapeTest\") {\n        if (\"solution\" in solns)\n          _dive1(solns.solution);\n      } else if (solns.type === \"OneOfSolutions\" ||\n                 solns.type === \"EachOfSolutions\") {\n        solns.solutions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"OneOfSolution\" ||\n                 solns.type === \"EachOfSolution\") {\n        solns.expressions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"TripleConstraintSolutions\") {\n        solns.solutions.map(s => {\n          if (s.type !== \"TestedTriple\")\n            throw Error(\"unexpected result type: \" + s.type);\n          var s2 = s;\n          if (typeof s2.object === \"object\")\n            s2.object = \"\\\"\" + s2.object.value.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\"\n            + (s2.object.language ? (\"@\" + s2.object.language) : \n               s2.object.type ? (\"^^\" + s2.object.type) :\n               \"\");\n          db.addQuad(RdfTerm.externalTriple(s2, dataFactory))\n          if (\"referenced\" in s) {\n            _dive1(s.referenced);\n          }\n        });\n      } else {\n        throw Error(\"unexpected expr type \"+solns.type+\" in \" + JSON.stringify(solns));\n      }\n    }\n    _dive1(res);\n    return db;\n  },\n\n  validateSchema: function (schema) { // obselete, but may need other validations in the future.\n    var _ShExUtil = this;\n    var visitor = this.Visitor();\n    var currentLabel = currentExtra = null;\n    var currentNegated = false;\n    var dependsOn = { };\n    var inTE = false;\n    var oldVisitShape = visitor.visitShape;\n    var negativeDeps = Hierarchy.create();\n    var positiveDeps = Hierarchy.create();\n    let index = schema.index || this.index(schema);\n\n    visitor.visitShape = function (shape, label) {\n      var lastExtra = currentExtra;\n      currentExtra = shape.extra;\n      var ret = oldVisitShape.call(visitor, shape, label);\n      currentExtra = lastExtra;\n      return ret;\n    }\n\n    var oldVisitShapeNot = visitor.visitShapeNot;\n    visitor.visitShapeNot = function (shapeNot, label) {\n      var lastNegated = currentNegated;\n      currentNegated ^= true;\n      var ret = oldVisitShapeNot.call(visitor, shapeNot, label);\n      currentNegated = lastNegated;\n      return ret;\n    }\n\n    var oldVisitTripleConstraint = visitor.visitTripleConstraint;\n    visitor.visitTripleConstraint = function (expr) {\n      var lastNegated = currentNegated;\n      if (currentExtra && currentExtra.indexOf(expr.predicate) !== -1)\n        currentNegated ^= true;\n      inTE = true;\n      var ret = oldVisitTripleConstraint.call(visitor, expr);\n      inTE = false;\n      currentNegated = lastNegated;\n      return ret;\n    };\n\n    var oldVisitShapeRef = visitor.visitShapeRef;\n    visitor.visitShapeRef = function (shapeRef) {\n      if (!(shapeRef in index.shapeExprs))\n        throw firstError(Error(\"Structural error: reference to \" + JSON.stringify(shapeRef) + \" not found in schema shape expressions:\\n\" + dumpKeys(index.shapeExprs) + \".\"), shapeRef);\n      if (!inTE && shapeRef === currentLabel)\n        throw firstError(Error(\"Structural error: circular reference to \" + currentLabel + \".\"), shapeRef);\n      (currentNegated ? negativeDeps : positiveDeps).add(currentLabel, shapeRef)\n      return oldVisitShapeRef.call(visitor, shapeRef);\n    }\n\n    var oldVisitInclusion = visitor.visitInclusion;\n    visitor.visitInclusion = function (inclusion) {\n      var refd;\n      if (!(refd = index.tripleExprs[inclusion]))\n        throw firstError(Error(\"Structural error: included shape \" + inclusion + \" not found in schema triple expressions:\\n\" + dumpKeys(index.tripleExprs) + \".\"), inclusion);\n      // if (refd.type !== \"Shape\")\n      //   throw Error(\"Structural error: \" + inclusion + \" is not a simple shape.\");\n      return oldVisitInclusion.call(visitor, inclusion);\n    };\n\n    (schema.shapes || []).forEach(function (shape) {\n      currentLabel = shape.id;\n      visitor.visitShapeExpr(shape, shape.id);\n    });\n    let circs = Object.keys(negativeDeps.children).filter(\n      k => negativeDeps.children[k].filter(\n        k2 => k2 in negativeDeps.children && negativeDeps.children[k2].indexOf(k) !== -1\n          || k2 in positiveDeps.children && positiveDeps.children[k2].indexOf(k) !== -1\n      ).length > 0\n    );\n    if (circs.length)\n      throw firstError(Error(\"Structural error: circular negative dependencies on \" + circs.join(',') + \".\"), circs[0]);\n\n    function dumpKeys (obj) {\n      return obj ? Object.keys(obj).map(\n        u => u.substr(0, 2) === '_:' ? u : '<' + u + '>'\n      ).join(\"\\n        \") : '- none defined -'\n    }\n\n    function firstError (e, obj) {\n      if (\"_sourceMap\" in schema)\n        e.location = (schema._sourceMap.get(obj) || [undefined])[0];\n      return e;\n    }\n  },\n\n  /** isWellDefined: assert that schema is well-defined.\n   *\n   * @schema: input schema\n   * @@TODO\n   */\n  isWellDefined: function (schema) {\n    this.validateSchema(schema);\n    // var deps = this.getDependencies(schema);\n    return schema;\n  },\n\n  walkVal: function (val, cb) {\n    var _ShExUtil = this;\n    if (val.type === \"NodeTest\") {\n      return null;\n    } else if (val.type === \"ShapeTest\") {\n      return \"solution\" in val ? _ShExUtil.walkVal(val.solution, cb) : null;\n    } else if (val.type === \"ShapeOrResults\") {\n      return _ShExUtil.walkVal(val.solution || val.solutions, cb);\n    } else if (val.type === \"ShapeAndResults\") {\n      return val.solutions.reduce((ret, exp) => {\n        var n = _ShExUtil.walkVal(exp, cb);\n        if (n)\n          Object.keys(n).forEach(k => {\n            if (k in ret)\n              ret[k] = ret[k].concat(n[k]);\n            else\n              ret[k] = n[k];\n          })\n        return ret;\n      }, {});\n    } else if (val.type === \"EachOfSolutions\" || val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        sln.expressions.forEach(exp => {\n          var n = _ShExUtil.walkVal(exp, cb);\n          if (n)\n            Object.keys(n).forEach(k => {\n              if (k in ret)\n                ret[k] = ret[k].concat(n[k]);\n              else\n                ret[k] = n[k];\n            })\n        });\n        return ret;\n      }, {});\n    } else if (val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        Object.assign(ret, _ShExUtil.walkVal(sln, cb));\n        return ret;\n      }, {});\n    } else if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        var ret = {};\n        var vals = [];\n        ret[val.predicate] = vals;\n        val.solutions.forEach(sln => {\n          var toAdd = [];\n          if (chaseList(sln.referenced, toAdd)) {\n            vals = vals.concat(toAdd);\n          } else {\n            var newElt = cb(sln);\n            if (\"referenced\" in sln) {\n              var t = _ShExUtil.walkVal(sln.referenced, cb);\n              if (t)\n                newElt.nested = t;\n            }\n            vals.push(newElt);\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = cb(member);\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.walkVal(member.referenced, cb);\n                if (t)\n                  newElt.nested = t;\n              }\n              vals.push(newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced);\n            }\n          }\n        });\n        return vals.length ? ret : null;\n      } else {\n        return null;\n      }\n    } else if (val.type === \"Recursion\") {\n      return null;\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  /**\n   * Convert val results to a property tree.\n   * @exports\n   * @returns {@code {p1:[{p2: v2},{p3: v3}]}}\n   */\n  valToValues: function (val) {\n    return this.walkVal (val, function (sln) {\n      return { ldterm: sln.object };\n    });\n  },\n\n  valToExtension: function (val, lookfor) {\n    var map = this.walkVal (val, function (sln) {\n      return { extensions: sln.extensions };\n    });\n    function extensions (obj) {\n      var list = [];\n      var crushed = {};\n      function crush (elt) {\n        if (crushed === null)\n          return elt;\n        if (elt.constructor === Array) {\n          crushed = null;\n          return elt;\n        }\n        for (k in elt) {\n          if (k in crushed) {\n            crushed = null\n            return elt;\n          }\n          crushed[k] = elt[k];\n        }\n        return elt;\n      }\n      for (var k in obj) {\n        if (k === \"extensions\") {\n          if (obj[k])\n            list.push(crush(obj[k][lookfor]));\n        } else if (k === \"nested\") {\n          var nested = extensions(obj[k]);\n          if (nested.constructor === Array)\n            nested.forEach(crush);\n          else\n            crush(nested);\n          list = list.concat(nested);\n        } else {\n          list.push(crush(extensions(obj[k])));\n        }\n      }\n      return list.length === 1 ? list[0] :\n        crushed ? crushed :\n        list;\n    }\n    return extensions(map);\n  },\n\n  valuesToSchema: function (values) {\n    // console.log(JSON.stringify(values, null, \"  \"));\n    var v = values;\n    var t = values[RDF.type][0].ldterm;\n    if (t === SX.Schema) {\n      /* Schema { \"@context\":\"http://www.w3.org/ns/shex.jsonld\"\n       *           startActs:[SemAct+]? start:(shapeExpr|labeledShapeExpr)?\n       *           shapes:[labeledShapeExpr+]? }\n       */\n      var ret = {\n        \"@context\": \"http://www.w3.org/ns/shex.jsonld\",\n        type: \"Schema\"\n      }\n      if (SX.startActs in v)\n        ret.startActs = v[SX.startActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      if (SX.imports in v)\n        ret.imports = v[SX.imports].map(e => {\n          return e.ldterm;\n        });\n      if (values[SX.start])\n        ret.start = extend({id: values[SX.start][0].ldterm}, shapeExpr(values[SX.start][0].nested));\n      var shapes = values[SX.shapes];\n      if (shapes) {\n        ret.shapes = shapes.map(v => {\n          return extend({id: v.ldterm}, shapeExpr(v.nested));\n        });\n      }\n      // console.log(ret);\n      return ret;\n    } else {\n      throw Error(\"unknown schema type in \" + JSON.stringify(values));\n    }\n    function findType (v, elts, f) {\n      var t = v[RDF.type][0].ldterm.substr(SX._namespace.length);\n      var elt = elts[t];\n      if (!elt)\n        return Missed;\n      if (elt.nary) {\n        var ret = {\n          type: t,\n        };\n        ret[elt.prop] = v[SX[elt.prop]].map(e => {\n          return valueOf(e);\n        });\n        return ret;\n      } else {\n        var ret = {\n          type: t\n        };\n        if (elt.prop) {\n          ret[elt.prop] = valueOf(v[SX[elt.prop]][0]);\n        }\n        return ret;\n      }\n\n      function valueOf (x) {\n        return elt.expr && \"nested\" in x ? extend({ id: x.ldterm, }, f(x.nested)) : x.ldterm;\n      }\n    }\n    function shapeExpr (v) {\n      // shapeExpr = ShapeOr | ShapeAnd | ShapeNot | NodeConstraint | Shape | ShapeRef | ShapeExternal;\n      var elts = { \"ShapeAnd\"     : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeOr\"      : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeNot\"     : { nary: false, expr: true , prop: \"shapeExpr\"  },\n                   \"ShapeRef\"     : { nary: false, expr: false, prop: \"reference\"  },\n                   \"ShapeExternal\": { nary: false, expr: false, prop: null         } };\n      var ret = findType(v, elts, shapeExpr);\n      if (ret !== Missed)\n        return ret;\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.Shape) {\n        var ret = { type: \"Shape\" };\n        [\"closed\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.extra in v)\n          ret.extra = v[SX.extra].map(e => { return e.ldterm; });\n        if (SX.expression in v) {\n          ret.expression =\n            \"nested\" in v[SX.expression][0] ?\n            extend({id: v[SX.expression][0].ldterm}, tripleExpr(v[SX.expression][0].nested)) :\n            v[SX.expression][0].ldterm;\n        }\n        if (SX.annotation in v)\n          ret.annotations = v[SX.annotation].map(e => {\n            return {\n              type: \"Annotation\",\n              predicate: e.nested[SX.predicate][0].ldterm,\n              object: e.nested[SX.object][0].ldterm\n            };\n          });\n        if (SX.semActs in v)\n          ret.semActs = v[SX.semActs].map(e => {\n            var ret = {\n              type: \"SemAct\",\n              name: e.nested[SX.name][0].ldterm\n            };\n            if (SX.code in e.nested)\n              ret.code = e.nested[SX.code][0].ldterm.value;\n            return ret;\n          });\n        return ret;\n      } else if (t === SX.NodeConstraint) {\n        var ret = { type: \"NodeConstraint\" };\n        if (SX.values in v)\n          ret.values = v[SX.values].map(v1 => { return objectValue(v1); });\n        if (SX.nodeKind in v)\n          ret.nodeKind = v[SX.nodeKind][0].ldterm.substr(SX._namespace.length);\n        [\"length\", \"minlength\", \"maxlength\", \"mininclusive\", \"maxinclusive\", \"minexclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = parseFloat(v[SX[a]][0].ldterm.value);\n        });\n        if (SX.pattern in v)\n          ret.pattern = v[SX.pattern][0].ldterm.value;\n        if (SX.flags in v)\n          ret.flags = v[SX.flags][0].ldterm.value;\n        if (SX.datatype in v)\n          ret.datatype = v[SX.datatype][0].ldterm;\n        return ret;\n      } else {\n        throw Error(\"unknown shapeExpr type in \" + JSON.stringify(v));\n      }\n\n    }\n\n    function objectValue (v, expectString) {\n      if (\"nested\" in v) {\n        var t = v.nested[RDF.type][0].ldterm;\n        if ([SX.IriStem, SX.LiteralStem, SX.LanguageStem].indexOf(t) !== -1) {\n          var ldterm = v.nested[SX.stem][0].ldterm.value;\n          return {\n            type: t.substr(SX._namespace.length),\n            stem: ldterm\n          };\n        } else if ([SX.Language].indexOf(t) !== -1) {\n          return {\n            type: \"Language\",\n            languageTag: v.nested[SX.languageTag][0].ldterm.value\n          };\n        } else if ([SX.IriStemRange, SX.LiteralStemRange, SX.LanguageStemRange].indexOf(t) !== -1) {\n          var st = v.nested[SX.stem][0];\n          var stem = st;\n          if (typeof st === \"object\") {\n            if (typeof st.ldterm === \"object\") {\n              stem = st.ldterm;\n            } else if (st.ldterm.startsWith(\"_:\")) {\n              stem = { type: \"Wildcard\" };\n            }\n          }\n          var ret = {\n            type: t.substr(SX._namespace.length),\n            stem: stem.type !== \"Wildcard\" ? stem.value : stem\n          };\n          if (SX.exclusion in v.nested) {\n            // IriStemRange:\n            // * [{\"ldterm\":\"http://a.example/v1\"},{\"ldterm\":\"http://a.example/v3\"}] <-- no value\n            // * [{\"ldterm\":\"_:b836\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v1\"}}]}},\n            //    {\"ldterm\":\"_:b838\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v3\"}}]}}]\n\n            // LiteralStemRange:\n            // * [{\"ldterm\":{\"value\":\"v1\"}},{\"ldterm\":{\"value\":\"v3\"}}]\n            // * [{\"ldterm\":\"_:b866\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v1\"}}]}},\n            //    {\"ldterm\":\"_:b868\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v3\"}}]}}]\n\n            // LanguageStemRange:\n            // * [{\"ldterm\":{\"value\":\"fr-be\"}},{\"ldterm\":{\"value\":\"fr-ch\"}}]\n            // * [{\"ldterm\":\"_:b851\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-be\"}}]}},\n            //    {\"ldterm\":\"_:b853\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-ch\"}}]}}]\n            ret.exclusions = v.nested[SX.exclusion].map(v1 => {\n              return objectValue(v1, t !== SX.IriStemRange);\n            });\n          }\n          return ret;\n        } else {\n          throw Error(\"unknown objectValue type in \" + JSON.stringify(v));\n        }\n      } else {\n        return expectString ? v.ldterm.value : v.ldterm;\n      }\n    }\n\n    function tripleExpr (v) {\n      // tripleExpr = EachOf | OneOf | TripleConstraint | Inclusion ;\n      var elts = { \"EachOf\"   : { nary: true , expr: true , prop: \"expressions\" },\n                   \"OneOf\"    : { nary: true , expr: true , prop: \"expressions\" },\n                   \"Inclusion\": { nary: false, expr: false, prop: \"include\"     } };\n      var ret = findType(v, elts, tripleExpr);\n      if (ret !== Missed) {\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      }\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.TripleConstraint) {\n        var ret = {\n          type: \"TripleConstraint\",\n          predicate: v[SX.predicate][0].ldterm\n        };\n        [\"inverse\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.valueExpr in v)\n          ret.valueExpr = extend({id: v[SX.valueExpr][0].ldterm}, \"nested\" in v[SX.valueExpr][0] ? shapeExpr(v[SX.valueExpr][0].nested) : {});\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      } else {\n        throw Error(\"unknown tripleExpr type in \" + JSON.stringify(v));\n      }\n    }\n    function minMaxAnnotSemActs (v, ret) {\n      if (SX.min in v)\n        ret.min = parseInt(v[SX.min][0].ldterm.value);\n      if (SX.max in v) {\n        ret.max = parseInt(v[SX.max][0].ldterm.value);\n        if (isNaN(ret.max))\n          ret.max = UNBOUNDED;\n      }\n      if (SX.annotation in v)\n        ret.annotations = v[SX.annotation].map(e => {\n          return {\n            type: \"Annotation\",\n            predicate: e.nested[SX.predicate][0].ldterm,\n            object: e.nested[SX.object][0].ldterm\n          };\n        });\n      if (SX.semActs in v)\n        ret.semActs = v[SX.semActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      return ret;\n    }\n  },\n\n  valToSimple: function (val) {\n    var _ShExUtil = this;\n    function _join (list) {\n      return list.reduce((ret, elt) => {\n        Object.keys(elt).forEach(k => {\n          if (k in ret) {\n            ret[k] = Array.from(new Set(ret[k].concat(elt[k])));\n          } else {\n            ret[k] = elt[k];\n          }\n        });\n        return ret;\n      }, {});\n    }\n    if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        return val.solutions.reduce((ret, sln) => {\n          if (!(\"referenced\" in sln))\n            return {};\n          var toAdd = {};\n          if (chaseList(sln.referenced, toAdd)) {\n            return _join(ret, toAdd);\n          } else {\n            return _join(ret, _ShExUtil.valToSimple(sln.referenced));\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = { ldterm: member.object };\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.valToSimple(member.referenced);\n                if (t)\n                  newElt.nested = t;\n              }\n              toAdd = _join(toAdd, newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced);\n            }\n          }\n        }, []);\n      } else {\n        return [];\n      }\n    } else if ([\"TripleConstraintSolutions\"].indexOf(val.type) !== -1) {\n      return {  };\n    } else if (val.type === \"NodeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return thisNode;\n    } else if (val.type === \"ShapeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return \"solution\" in val ? _join([thisNode].concat(_ShExUtil.valToSimple(val.solution))) : thisNode;\n    } else if (val.type === \"Recursion\") {\n      return {  };\n    } else if (\"solutions\" in val) {\n      // [\"SolutionList\", \"EachOfSolutions\", \"OneOfSolutions\", \"ShapeAndResults\", \"ShapeOrResults\"].indexOf(val.type) !== -1\n      return _join(val.solutions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else if (\"expressions\" in val) {\n      return _join(val.expressions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  simpleToShapeMap: function (x) {\n    return Object.keys(x).reduce((ret, k) => {\n      x[k].forEach(s => {\n        ret.push({node: k, shape: s });\n      });\n      return ret;\n    }, []);\n  },\n\n  absolutizeShapeMap: function (parsed, base) {\n    return parsed.map(elt => {\n      return Object.assign(elt, {\n        node: RdfTerm.resolveRelativeIRI(base, elt.node),\n        shape: RdfTerm.resolveRelativeIRI(base, elt.shape)\n      });\n    });\n  },\n\n  errsToSimple: function (val, node, shape) {\n    var _ShExUtil = this;\n    if (val.type === \"FailureList\") {\n      return val.errors.reduce((ret, e) => {\n        return ret.concat(_ShExUtil.errsToSimple(e));\n      }, []);\n    } else if (val.type === \"Failure\") {\n      return [\"validating \" + val.node + \" as \" + val.shape + \":\"].concat(errorList(val.errors).reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length > 0 ? ret.concat([\"  OR\"]).concat(nested) : nested.map(s => \"  \" + s);\n      }, []));\n    } else if (val.type === \"TypeMismatch\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"validating \" + n3ify(val.triple.object) + \":\"].concat(nested);\n    } else if (val.type === \"ShapeAndFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeOrFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat(\" OR \" + (typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)));\n          }, []) :\n          \" OR \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeNotFailure\") {\n      return [\"Node \" + val.errors.node + \" expected to NOT pass \" + val.errors.shape];\n    } else if (val.type === \"ExcessTripleViolation\") {\n      return [\"validating \" + n3ify(val.triple.object) + \": exceeds cardinality\"];\n    } else if (val.type === \"ClosedShapeViolation\") {\n      return [\"ClosedShapeError: unexpected: {\"].concat(\n        val.unexpectedTriples.map(t => {\n          return \"  \" + t.subject + \" \" + t.predicate + \" \" + n3ify(t.object) + \" .\"\n        })\n      ).concat([\"}\"]);\n    } else if (val.type === \"NodeConstraintViolation\") {\n      var w = require(\"../lib/ShExWriter\")();\n      w._write(w._writeNodeConstraint(val.shapeExpr).join(\"\"));\n      var txt;\n      w.end((err, res) => {\n        txt = res;\n      });\n      return [\"NodeConstraintError: expected to match \" + txt];\n    } else if (val.type === \"MissingProperty\") {\n      return [\"Missing property: \" + val.property];\n    } else if (val.type === \"NegatedProperty\") {\n      return [\"Unexpected property: \" + val.property];\n    } else if (val.constructor === Array) {debugger;\n      return val.reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length ? ret.concat([\"AND\"]).concat(nested) : nested;\n      }, []);\n    } else if (val.type === \"SemActFailure\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"rejected by semantic action:\"].concat(nested);\n    } else if (val.type === \"SemActViolation\") {\n      return [val.message];\n    } else if (val.type === \"BooleanSemActFailure\") {\n      return [\"Failed evaluating \" + val.code + \" on context \" + JSON.stringify(val.ctx)];\n    } else {\n      debugger; // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    function errorList (errors) {\n      return errors.reduce(function (acc, e) {\n        var attrs = Object.keys(e);\n        return acc.concat(\n          (attrs.length === 1 && attrs[0] === \"errors\")\n            ? errorList(e.errors)\n            : e);\n      }, []);\n    }\n  },\n\n  resolveRelativeIRI: RdfTerm.resolveRelativeIRI,\n\n  resolvePrefixedIRI: function (prefixedIri, prefixes) {\n    var colon = prefixedIri.indexOf(\":\");\n    if (colon === -1)\n      return null;\n    var prefix = prefixes[prefixedIri.substr(0, colon)];\n    return prefix === undefined ? null : prefix + prefixedIri.substr(colon+1);\n  },\n\n  parsePassedNode: function (passedValue, meta, deflt, known, reportUnknown) {\n    if (passedValue === undefined || passedValue.length === 0)\n      return known && known(meta.base) ? meta.base : deflt ? deflt() : this.NotSupplied;\n    if (passedValue[0] === \"_\" && passedValue[1] === \":\")\n      return passedValue;\n    if (passedValue[0] === \"\\\"\") {\n      var m = passedValue.match(/^\"((?:[^\"\\\\]|\\\\\")*)\"(?:@(.+)|\\^\\^(?:<(.*)>|([^:]*):(.*)))?$/);\n      if (!m)\n        throw Error(\"malformed literal: \" + passedValue);\n      var lex = m[1], lang = m[2], rel = m[3], pre = m[4], local = m[5];\n      // Turn the literal into an N3.js atom.\n      var quoted = \"\\\"\"+lex+\"\\\"\";\n      if (lang !== undefined)\n        return quoted + \"@\" + lang;\n      if (pre !== undefined) {\n        if (!(pre in meta.prefixes))\n          throw Error(\"error parsing node \"+passedValue+\" no prefix for \\\"\" + pre + \"\\\"\");\n        return quoted + \"^^\" + meta.prefixes[pre] + local;\n      }\n      if (rel !== undefined)\n        return quoted + \"^^\" + RdfTerm.resolveRelativeIRI(meta.base, rel);\n      return quoted;\n    }\n    if (!meta)\n      return known(passedValue) ? passedValue : this.UnknownIRI;\n    var relIRI = passedValue[0] === \"<\" && passedValue[passedValue.length-1] === \">\";\n    if (relIRI)\n      passedValue = passedValue.substr(1, passedValue.length-2);\n    var t = RdfTerm.resolveRelativeIRI(meta.base || \"\", passedValue); // fall back to base-less mode\n    if (known(t))\n      return t;\n    if (!relIRI) {\n      var t2 = this.resolvePrefixedIRI(passedValue, meta.prefixes);\n      if (t2 !== null && known(t2))\n        return t2;\n    }\n    return reportUnknown ? reportUnknown(t) : this.UnknownIRI;\n  },\n\n  executeQueryPromise: function (query, endpoint) {\n    var rows;\n\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    return fetch(queryURL, {\n      headers: {\n        'Accept': 'application/sparql-results+json'\n      }}).then(resp => resp.json()).then(t => {\n        var selects = t.head.vars;\n        return t.results.bindings.map(row => {\n          return selects.map(sel => {\n            var elt = row[sel];\n            switch (elt.type) {\n            case \"uri\": return elt.value;\n            case \"bnode\": return \"_:\" + elt.value;\n            case \"literal\":\n              var datatype = elt.datatype;\n              var lang = elt[\"xml:lang\"];\n              return \"\\\"\" + elt.value + \"\\\"\" + (\n                datatype ? \"^^\" + datatype :\n                  lang ? \"@\" + lang :\n                  \"\");\n            default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n            }\n            return row[sel];\n          })\n        });\n      })// .then(x => new Promise(resolve => setTimeout(() => resolve(x), 1000)));\n  },\n\n  executeQuery: function (query, endpoint) {\n    var rows, t, j;\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", queryURL, false);\n    xhr.setRequestHeader('Accept', 'application/sparql-results+json');\n    xhr.send();\n    // var selectsBlock = query.match(/SELECT\\s*(.*?)\\s*{/)[1];\n    // var selects = selectsBlock.match(/\\?[^\\s?]+/g);\n    var t = JSON.parse(xhr.responseText);\n    var selects = t.head.vars;\n    return t.results.bindings.map(row => {\n      return selects.map(sel => {\n        var elt = row[sel];\n        switch (elt.type) {\n        case \"uri\": return elt.value;\n        case \"bnode\": return \"_:\" + elt.value;\n        case \"literal\":\n          var datatype = elt.datatype;\n          var lang = elt[\"xml:lang\"];\n          return \"\\\"\" + elt.value + \"\\\"\" + (\n            datatype ? \"^^\" + datatype :\n              lang ? \"@\" + lang :\n              \"\");\n        default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n        }\n        return row[sel];\n      })\n    });\n\n/* TO ADD? XML results format parsed with jquery:\n        $(data).find(\"sparql > results > result\").\n          each((_, row) => {\n            rows.push($(row).find(\"binding > *:nth-child(1)\").\n              map((idx, elt) => {\n                elt = $(elt);\n                var text = elt.text();\n                switch (elt.prop(\"tagName\")) {\n                case \"uri\": return text;\n                case \"bnode\": return \"_:\" + text;\n                case \"literal\":\n                  var datatype = elt.attr(\"datatype\");\n                  var lang = elt.attr(\"xml:lang\");\n                  return \"\\\"\" + text + \"\\\"\" + (\n                    datatype ? \"^^\" + datatype :\n                    lang ? \"@\" + lang :\n                      \"\");\n                default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n                }\n              }).get());\n          });\n*/\n  },\n\n  makeN3DB: function (db, queryTracker) {\n\n    function getSubjects () { return db.getSubjects().map(RdfTerm.internalTerm); }\n    function getPredicates () { return db.getPredicates().map(RdfTerm.internalTerm); }\n    function getObjects () { return db.getObjects().map(RdfTerm.internalTerm); }\n    function getQuads () { return db.getQuads.apply(db, arguments).map(RdfTerm.internalTriple); }\n\n    function getNeighborhood (point, shapeLabel/*, shape */) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = db.getQuads(point, null, null, null).map(RdfTerm.internalTriple);\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = db.getQuads(null, null, point, null).map(RdfTerm.internalTriple);\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      // size: db.size,\n      getNeighborhood: getNeighborhood,\n      getSubjects: getSubjects,\n      getPredicates: getPredicates,\n      getObjects: getObjects,\n      getQuads: getQuads,\n      get size() { return db.size; },\n      // getQuads: function (s, p, o, graph, shapeLabel) {\n      //   // console.log(Error(s + p + o).stack)\n      //   if (queryTracker)\n      //     queryTracker.start(!!s, s ? s : o, shapeLabel);\n      //   var quads = db.getQuads(s, p, o, graph)\n      //   if (queryTracker)\n      //     queryTracker.end(quads, new Date() - startTime);\n      //   return quads;\n      // }\n    }\n  },\n  /** emulate N3Store().getQuads() with additional parm.\n   */\n  makeQueryDB: function (endpoint, queryTracker) {\n    var _ShExUtil = this;\n\n    function getQuads(s, p, o, g) {\n      return mapQueryToTriples(\"SELECT \" + [\n        (s?\"\":\"?s\"), (p?\"\":\"?p\"), (o?\"\":\"?o\"),\n        \"{\",\n        (s?s:\"?s\"), (p?p:\"?s\"), (o?o:\"?s\"),\n        \"}\"].join(\" \"), s, o)\n    }\n\n    function mapQueryToTriples (query, s, o) {\n      var rows = _ShExUtil.executeQuery(query, endpoint);\n      var triples = rows.map(row =>  {\n        return s ? {\n          subject: s,\n          predicate: row[0],\n          object: row[1]\n        } : {\n          subject: row[0],\n          predicate: row[1],\n          object: o\n        };\n      });\n      return triples;\n    }\n\n    function getTripleConstraints (tripleExpr) {\n      var visitor = _ShExUtil.Visitor();\n      var ret = {\n        out: [],\n        inc: []\n      };\n      visitor.visitTripleConstraint = function (expr) {\n        ret[expr.inverse ? \"inc\" : \"out\"].push(expr);\n        return expr;\n      };\n\n      if (tripleExpr)\n        visitor.visitExpression(tripleExpr);\n      return ret;\n    }\n\n    function getNeighborhood (point, shapeLabel, shape) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      var tcs = getTripleConstraints(shape.expression);\n      var pz = tcs.out.map(t => t.predicate);\n      pz = pz.filter((p, idx) => pz.lastIndexOf(p) === idx);\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = (tcs.out.length > 0 || shape.closed)\n          ? mapQueryToTriples(\n            shape.closed\n              ? `SELECT ?p ?o { <${point}> ?p ?o }`\n              : \"SELECT ?p ?o {\\n\" +\n              pz.map(\n                p => `  {<${point}> <${p}> ?o BIND(<${p}> AS ?p)}`\n              ).join(\" UNION\\n\") +\n              \"\\n}\",\n            point, null\n          )\n          : [];\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = tcs.inc.length > 0\n          ? mapQueryToTriples(`SELECT ?s ?p { ?s ?p <${point}> }`, null, point)\n          : []\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return  {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      getNeighborhood: getNeighborhood,\n      getQuads: getQuads,\n      getSubjects: function () { return [\"!Query DB can't index subjects\"] },\n      getPredicates: function () { return [\"!Query DB can't index predicates\"] },\n      getObjects: function () { return [\"!Query DB can't index objects\"] },\n      get size() { return undefined; }\n    };\n  },\n\n  NotSupplied: \"-- not supplied --\", UnknownIRI: \"-- not found --\",\n\n  // Expect property p with value v in object o\n  _expect: function (o, p, v) {\n    if (!(p in o))\n      this._error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p);\n    if (arguments.length > 2 && o[p] !== v)\n      this._error(\"expected \"+o[o]+\" to equal .\"+v);\n  },\n\n  _error: function (str) {\n    throw new Error(str);\n  },\n\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  unescapeText: function (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  },\n\n};\n\n\nfunction n3ify (ldterm) {\n  if (typeof ldterm !== \"object\")\n    return ldterm;\n  var ret = \"\\\"\" + ldterm.value + \"\\\"\";\n  if (\"language\" in ldterm)\n    return ret + \"@\" + ldterm.language;\n  if (\"type\" in ldterm)\n    return ret + \"^^\" + ldterm.type;\n  return ret;\n}\n\n// Add the ShExUtil functions to the given object or its prototype\nfunction AddShExUtil(parent, toPrototype) {\n  for (var name in ShExUtil)\n    if (!toPrototype)\n      parent[name] = ShExUtil[name];\n    else\n      parent.prototype[name] = ApplyToThis(ShExUtil[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\nreturn AddShExUtil(AddShExUtil);\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExUtil; // node environment\n"
        },
        {
          "id": 21,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "name": "../shex-core/lib/ShExWriter.js",
          "index": 13,
          "index2": 13,
          "size": 22312,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExWriter",
              "loc": "5:13-40"
            },
            {
              "moduleId": 20,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "module": "../shex-core/lib/ShExUtil.js",
              "moduleName": "../shex-core/lib/ShExUtil.js",
              "type": "cjs require",
              "userRequest": "../lib/ShExWriter",
              "loc": "1914:14-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// **ShExWriter** writes ShEx documents.\n\nvar ShExWriter = (function () {\nvar util = require('util');\nvar UNBOUNDED = -1;\n\n// Matches a literal as represented in memory by the ShEx library\nvar ShExLiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar ESCAPE_1 = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    ESCAPE_g = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    ESCAPE_replacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '/': '\\\\/', '\\t': '\\\\t',\n                            '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\nvar nodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\nvar nonLitNodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\n\n// ## Constructor\nfunction ShExWriter (outputStream, options) {\n  if (!(this instanceof ShExWriter))\n    return new ShExWriter(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._prefixIRIs = Object.create(null);\n  options.prefixes && this.addPrefixes(options.prefixes);\n\n  this._error = options.error || _throwError;\n  this.forceParens = !options.simplifyParentheses; // default to false\n  this._expect = options.lax ? noop : expect;\n}\n\nShExWriter.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n  // ### `_writeSchema` writes the shape to the output stream\n  _writeSchema: function (schema, done) {\n    var _ShExWriter = this;\n    this._expect(schema, \"type\", \"Schema\");\n    _ShExWriter.addPrefixes(schema.prefixes);\n    if (schema.base)\n      _ShExWriter._write(\"BASE \" + this._encodeIriOrBlankNode(schema.base) + \"\\n\");\n\n    if (schema.imports)\n      schema.imports.forEach(function (imp) {\n        _ShExWriter._write(\"IMPORT \" + _ShExWriter._encodeIriOrBlankNode(imp) + \"\\n\");\n      });\n    if (schema.startActs)\n      schema.startActs.forEach(function (act) {\n        _ShExWriter._expect(act, \"type\", \"SemAct\");\n        _ShExWriter._write(\" %\"+\n                           _ShExWriter._encodePredicate(act.name)+\n                           (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n      });\n    if (schema.start)\n      _ShExWriter._write(\"start = \" + _ShExWriter._writeShapeExpr(schema.start, done, true, 0).join('') + \"\\n\")\n    if (\"shapes\" in schema)\n      schema.shapes.forEach(function (shapeExpr) {\n        _ShExWriter._write(\n          _ShExWriter._encodeShapeName(shapeExpr.id, false) +\n            \" \" +\n            _ShExWriter._writeShapeExpr(shapeExpr, done, true, 0).join(\"\")+\"\\n\",\n          done\n        );\n      })\n  },\n\n  _writeShapeExpr: function (shapeExpr, done, forceBraces, parentPrec) {\n    var _ShExWriter = this;\n    var pieces = [];\n    if (typeof shapeExpr === \"string\") // ShapeRef\n      pieces.push(\"@\", _ShExWriter._encodeShapeName(shapeExpr));\n    // !!! []s for precedence!\n    else if (shapeExpr.type === \"ShapeExternal\")\n      pieces.push(\"EXTERNAL\");\n    else if (shapeExpr.type === \"ShapeAnd\") {\n      if (parentPrec >= 3)\n        pieces.push(\"(\");\n      var lastAndElided = false;\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0) { // && !!! grammar rules too weird here\n          /*\n            shapeAtom:\n                  nonLitNodeConstraint shapeOrRef?\n                | shapeDecl nonLitNodeConstraint?\n\n            nonLitInlineNodeConstraint:\n                  nonLiteralKind stringFacet*\n          */\n          function nonLitNodeConstraint (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type !== \"NodeConstraint\"\n              || (\"nodeKind\" in c && c.nodeKind === \"literal\")\n              || \"datatype\" in c\n              || \"values\" in c\n              ? false\n              : true;\n          }\n\n          function shapeOrRef (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\" || c.type === \"ShapeRef\";\n          }\n\n          function shapeDecl (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\";\n          }\n\n          let elideAnd = !lastAndElided\n              && (nonLitNodeConstraint(ord-1) && shapeOrRef(ord)\n                  || shapeDecl(ord-1) && nonLitNodeConstraint(ord))\n          if (!elideAnd) {\n            pieces.push(\" AND \");\n          }\n          lastAndElided = elideAnd;\n        }\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, false, 3));\n      });\n      if (parentPrec >= 3)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      if (parentPrec >= 2)\n        pieces.push(\"(\");\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0)\n          pieces.push(\" OR \");\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, forceBraces, 2));\n      });\n      if (parentPrec >= 2)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      if (parentPrec >= 4)\n        pieces.push(\"(\");\n      pieces.push(\"NOT \");\n      pieces = pieces.concat(_ShExWriter._writeShapeExpr(shapeExpr.shapeExpr, done, forceBraces, 4));\n      if (parentPrec >= 4)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"Shape\") {\n      pieces = pieces.concat(_ShExWriter._writeShape(shapeExpr, done, forceBraces));\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      pieces = pieces.concat(_ShExWriter._writeNodeConstraint(shapeExpr, done, forceBraces));\n    } else\n      throw Error(\"expected Shape{,And,Or,Ref} or NodeConstraint in \" + util.inspect(shapeExpr));\n    return pieces;\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeShape: function (shape, done, forceBraces) {\n    var _ShExWriter = this;\n    try {\n      var pieces = []; // guessing push/join is faster than concat\n      this._expect(shape, \"type\", \"Shape\");\n\n      if (shape.closed) pieces.push(\"CLOSED \");\n\n      // if (shape.inherit && shape.inherit.length > 0) { futureWork\n      //   pieces.push(\"&\");\n      //   shape.inherit.forEach(function (i, ord) {\n      //     if (ord)\n      //       pieces.push(\" \")\n      //     pieces.push(_ShExWriter._encodeShapeName(i, ord > 0));\n      //   });\n      //   pieces.push(\" \");\n      // }\n\n      if (shape.extra && shape.extra.length > 0) {\n        pieces.push(\"EXTRA \");\n        shape.extra.forEach(function (i, ord) {\n          pieces.push(_ShExWriter._encodeShapeName(i, false)+\" \");\n        });\n        pieces.push(\" \");\n      }\n      var empties = [\"values\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\"];\n      pieces.push(\"{\\n\");\n\n      function _writeShapeActions (semActs) {\n        if (!semActs)\n          return;\n\n        semActs.forEach(function (act) {\n          _ShExWriter._expect(act, \"type\", \"SemAct\");\n          pieces.push(\" %\",\n                      _ShExWriter._encodePredicate(act.name),\n                      (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n        });\n      }\n\n      function _writeCardinality (min, max) {\n        if      (min === 0 && max === 1)         pieces.push(\"?\");\n        else if (min === 0 && max === UNBOUNDED) pieces.push(\"*\");\n        else if (min === undefined && max === undefined)                         ;\n        else if (min === 1 && max === UNBOUNDED) pieces.push(\"+\");\n        else\n          pieces.push(\"{\", min, \",\", (max === UNBOUNDED ? \"*\" : max), \"}\"); // by coincidence, both use the same character.\n      }\n\n      function _writeExpression (expr, indent, parentPrecedence) {\n        function _writeExpressionActions (semActs) {\n          if (semActs) {\n\n            semActs.forEach(function (act) {\n              _ShExWriter._expect(act, \"type\", \"SemAct\");\n              pieces.push(\"\\n\"+indent+\"   %\");\n              pieces.push(_ShExWriter._encodeValue(act.name));\n              if (\"code\" in act)\n                pieces.push(\"{\"+escapeCode(act.code)+\"%\"+\"}\");\n              else\n                pieces.push(\"%\");\n            });\n          }\n        }\n\n        function _exprGroup (exprs, separator, precedence, forceParens) {\n          var needsParens = precedence < parentPrecedence || forceParens;\n          if (needsParens) {\n            pieces.push(\"(\");\n          }\n          exprs.forEach(function (nested, ord) {\n            _writeExpression(nested, indent+\"  \", precedence)\n            if (ord < exprs.length - 1)\n              pieces.push(separator);\n          });\n          if (needsParens) {\n            pieces.push(\")\");\n          }\n        }\n\n        if (typeof expr === \"string\") {\n          pieces.push(\"&\");\n          pieces.push(_ShExWriter._encodeShapeName(expr, false));\n        } else {\n\n        if (\"id\" in expr) {\n          pieces.push(\"$\");\n          pieces.push(_ShExWriter._encodeIriOrBlankNode(expr.id, true));\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          if (expr.inverse)\n            pieces.push(\"^\");\n          if (expr.negated)\n            pieces.push(\"!\");\n          pieces.push(indent,\n                      _ShExWriter._encodePredicate(expr.predicate),\n                      \" \");\n\n          if (\"valueExpr\" in expr)\n            pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr.valueExpr, done, true, 0));\n          else\n            pieces.push(\". \");\n\n          _writeCardinality(expr.min, expr.max);\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \"\\n\"+indent+\"| \", 1, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \";\\n\"+indent, 2, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else throw Error(\"unexpected expr type: \" + expr.type);\n        }\n      }\n\n      if (shape.expression) // t: 0, 0Inherit1\n        _writeExpression(shape.expression, \"  \", 0);\n      pieces.push(\"\\n}\");\n      _writeShapeActions(shape.semActs);\n      _ShExWriter._annotations(pieces, shape.annotations, \"  \");\n\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeNodeConstraint: function (v, done) {\n    var _ShExWriter = this;\n    try {\n      _ShExWriter._expect(v, \"type\", \"NodeConstraint\");\n\n      var pieces = [];\n      if (v.nodeKind in nodeKinds)       pieces.push(nodeKinds[v.nodeKind], \" \");\n      else if (v.nodeKind !== undefined) _ShExWriter._error(\"unexpected nodeKind: \" + v.nodeKind); // !!!!\n\n      this._fillNodeConstraint(pieces, v, done);\n      this._annotations(pieces, v.annotations, \"  \");\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n\n  },\n\n  _annotations: function (pieces, annotations, indent) {\n    var _ShExWriter = this;\n    if (annotations) {\n      annotations.forEach(function (a) {\n        _ShExWriter._expect(a, \"type\", \"Annotation\");\n        pieces.push(\"//\\n\"+indent+\"   \");\n        pieces.push(_ShExWriter._encodeValue(a.predicate));\n        pieces.push(\" \");\n        pieces.push(_ShExWriter._encodeValue(a.object));\n      });\n    }\n  },\n\n  _fillNodeConstraint: function (pieces, v, done) {\n    var _ShExWriter = this;\n    if (v.datatype  && v.values  ) _ShExWriter._error(\"found both datatype and values in \"   +expr);\n    if (v.datatype) {\n      pieces.push(_ShExWriter._encodeShapeName(v.datatype));\n    }\n\n    if (v.values) {\n      pieces.push(\"[\");\n\n      v.values.forEach(function (t, ord) {\n        if (ord > 0)\n          pieces.push(\" \");\n\n        if (!isTerm(t)) {\n//          expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                runtimeError(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\");\n          var stemRangeTypes = [\"Language\", \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                runtimeError(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n          if (t.type === \"Language\") {\n            pieces.push(\"@\" + t.languageTag);\n          } else if (!isTerm(t.stem)) {\n            expect(t.stem, \"type\", \"Wildcard\");\n            pieces.push(\".\");\n          } else {\n            pieces.push(langOrLiteral(t, t.stem) + \"~\");\n          }\n          if (t.exclusions) {\n            t.exclusions.forEach(function (c) {\n              pieces.push(\" - \");\n              if (!isTerm(c)) {\n//                expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                pieces.push(langOrLiteral(t, c.stem) + \"~\");\n              } else {\n                pieces.push(langOrLiteral(t, c));\n              }\n            });\n          }\n          function langOrLiteral (t, c) {\n            return [\"LanguageStem\", \"LanguageStemRange\"].indexOf(t.type) !== -1 ? \"@\" + c :\n              [\"LiteralStem\", \"LiteralStemRange\"].indexOf(t.type) !== -1 ? '\"' + c.replace(ESCAPE_g, c) + '\"' :\n              _ShExWriter._encodeValue(c)\n          }\n        } else {\n          pieces.push(_ShExWriter._encodeValue(t));\n        }\n      });\n\n      pieces.push(\"]\");\n    }\n\n    if ('pattern' in v) {\n      var pattern = v.pattern.\n          replace(/\\//g, \"\\\\/\");\n      // if (ESCAPE_1.test(pattern))\n      //   pattern = pattern.replace(ESCAPE_g, characterReplacer);\n      var flags = 'flags' in v ? v.flags : \"\";\n      pieces.push(\"/\" + pattern + \"/\" + flags + \" \");\n    }\n    ['length', 'minlength', 'maxlength',\n     'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive',\n     'totaldigits', 'fractiondigits'\n    ].forEach(function (a) {\n      if (v[a])\n        pieces.push(\" \", a, \" \", v[a]);\n    });\n    return pieces;\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri, trailingSpace) {\n    trailingSpace = trailingSpace ? ' ' : '';\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (ESCAPE_1.test(iri))\n      iri = iri.replace(ESCAPE_g, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]) + trailingSpace;\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (ESCAPE_1.test(value))\n      value = value.replace(ESCAPE_g, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeShapeName` represents a subject\n  _encodeShapeName: function (subject, trailingSpace) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject, trailingSpace);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeValue` represents an object\n  _encodeValue: function (object) {\n    // Represent an IRI or blank node\n    if (typeof object !== \"object\")\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    return this._encodeLiteral(object.value, object.type, object.language);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  writeSchema: function (shape, done) {\n    this._writeSchema(shape, done);\n    this.end(done);\n  },\n\n  // ### `addShape` adds the shape to the output stream\n  addShape: function (shape, name, done) {\n    this._write(\n      _ShExWriter._encodeShapeName(name, false) +\n        \" \" +\n        _ShExWriter._writeShapeExpr(shape, done, true, 0).join(\"\"),\n      done\n    );\n  },\n\n  // ### `addShapes` adds the shapes to the output stream\n  addShapes: function (shapes) {\n    for (var i = 0; i < shapes.length; i++)\n      this.addShape(shapes[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (// @@ /[#\\/]$/.test(iri) && !! what was that?\n          prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Write prefix\n        this._write('PREFIX ' + prefix + ' <' + iri + '>\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = ESCAPE_replacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeCode (code) {\n  return code.replace(/\\\\/g, \"\\\\\\\\\").replace(/%/g, \"\\\\%\")\n}\n\n/** _throwError: overridable function to throw Errors().\n *\n * @param func (optional): function at which to truncate stack trace\n * @param str: error message\n */\nfunction _throwError (func, str) {\n  if (typeof func !== \"function\") {\n    str = func;\n    func = _throwError;\n  }\n  var e = new Error(str);\n  Error.captureStackTrace(e, func);\n  throw e;\n}\n\n// Expect property p with value v in object o\nfunction expect (o, p, v) {\n  if (!(p in o))\n    this._error(expect, \"expected \"+o+\" to have a .\"+p);\n  if (arguments.length > 2 && o[p] !== v)\n    this._error(expect, \"expected \"+o[o]+\" to equal .\"+v);\n}\n\n// The empty function\nfunction noop () {}\n\nreturn ShExWriter;\n})();\n\n// Export the `ShExWriter` class as a whole.\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWriter; // node environment\n"
        },
        {
          "id": 22,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/threaded-val-nerr.js",
          "name": "../shex-core/lib/regex/threaded-val-nerr.js",
          "index": 18,
          "index2": 15,
          "size": 15290,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/regex/threaded-val-nerr",
              "loc": "7:23-63"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "../lib/regex/threaded-val-nerr",
              "loc": "245:48-89"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var ThreadedValNErr = (function () {\nvar RdfTerm = require(\"../RdfTerm\");\nvar UNBOUNDED = -1;\n\nfunction vpEngine (schema, shape, index) {\n    var outerExpression = shape.expression;\n    return {\n      match:match\n    };\n\n    function match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, recurse, direct, semActHandler, checkValueExpr, trace) {\n\n      /*\n       * returns: list of passing or failing threads (no heterogeneous lists)\n       */\n      function validateExpr (expr, thread) {\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return validateExpr(included, thread);\n        }\n\n        var constraintNo = constraintList.indexOf(expr);\n        var min = \"min\" in expr ? expr.min : 1;\n        var max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n\n        function validateRept (type, val) {\n          var repeated = 0, errOut = false;\n          var newThreads = [thread];\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          for (; repeated < max && !errOut; ++repeated) {\n            var inner = [];\n            for (var t = 0; t < newThreads.length; ++t) {\n              var newt = newThreads[t];\n              var sub = val(newt);\n              if (sub.length > 0 && sub[0].errors.length === 0) {\n                sub.forEach(newThread => {\n                  var solutions =\n                      \"expression\" in newt ? newt.expression.solutions : [];\n                  if (\"solution\" in newThread)\n                    solutions = solutions.concat(newThread.solution);\n                  delete newThread.solution;\n                  newThread.expression = extend({\n                    type: type,\n                    solutions: solutions\n                  }, minmax);\n                });\n              }\n              if (sub.length === 0 /* min:0 */ || sub[0].errors.length > 0)\n                return repeated < min ? sub : newThreads;\n              else\n                inner = inner.concat(sub);\n              // newThreads.expressions.push(sub);\n            }\n            newThreads = inner;\n          }\n          if (newThreads.length > 0 && newThreads[0].errors.length === 0 && \"semActs\" in expr) {\n            var passes = [];\n            var failures = [];\n            newThreads.forEach(newThread => {\n              const semActErrors = semActHandler.dispatchAll(expr.semActs, \"???\", newThread)\n              if (semActErrors.length === 0) {\n                passes.push(newThread)\n              } else {\n                [].push.apply(newThread.errors, semActErrors);\n                failures.push(newThread);\n              }\n            });\n            newThreads = passes.length > 0 ? passes : failures;\n          }\n          return newThreads;\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          var negated = \"negated\" in expr && expr.negated || max === 0;\n          if (negated)\n            min = max = Infinity;\n          if (thread.avail[constraintNo] === undefined)\n            thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].slice();\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          var taken = thread.avail[constraintNo].splice(0, min);\n          var passed = negated ? taken.length === 0 : taken.length >= min;\n          var ret = [];\n          var matched = thread.matched;\n          if (passed) {\n            do {\n              ret.push({\n                avail: thread.avail.map(a => { // copy parent thread's avail vector\n                  return a.slice();\n                }), // was: extend({}, thread.avail)\n                errors: thread.errors.slice(),\n                matched: matched.concat({\n                  tNos: taken.slice()\n                }),\n                expression: extend(\n                  {\n                    type: \"TripleConstraintSolutions\",\n                    predicate: expr.predicate,\n                    solutions: taken.map(tripleNo =>  {\n                      return { type: \"halfTestedTriple\", tripleNo: tripleNo, constraintNo: constraintNo };\n                    })\n                    // map(triple => {\n                    //   var t = neighborhood[triple];\n                    //   return {\n                    //     type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: t.object\n                    //   }\n                    // })\n                  },\n                  \"valueExpr\" in expr ? { valueExpr: expr.valueExpr } : {},\n                  \"productionLabel\" in expr ? { productionLabel: expr.productionLabel } : {},\n                  minmax)\n              });\n            } while ((function () {\n              if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                taken.push(thread.avail[constraintNo].shift());\n                return true;\n              } else {\n                return false;\n              }\n            })());\n          } else {\n            var valueExpr = null;\n            if (typeof expr.valueExpr === \"string\") { // ShapeRef\n              valueExpr = expr.valueExpr;\n              if (RdfTerm.isBlank(valueExpr))\n                valueExpr = index.shapeExprs[valueExpr];\n            } else if (expr.valueExpr) {\n              valueExpr = extend({}, expr.valueExpr)\n            }\n            ret.push({\n              avail: thread.avail,\n              errors: thread.errors.concat([\n                extend({\n                  type: negated ? \"NegatedProperty\" : \"MissingProperty\",\n                  property: expr.predicate\n                }, valueExpr ? { valueExpr: valueExpr } : {})\n              ]),\n              matched: matched\n            });\n          }\n\n          return ret;\n        }\n\n        else if (expr.type === \"OneOf\") {\n          return validateRept(\"OneOfSolutions\", (th) => {\n            var accept = null;\n            var matched = [];\n            var failed = [];\n            expr.expressions.forEach(nested => {\n              var thcopy = {\n                avail: th.avail.map(a => { return a.slice(); }),\n                errors: th.errors,\n                matched: th.matched//.slice() ever needed??\n              };\n              var sub = validateExpr(nested, thcopy);\n              if (sub[0].errors.length === 0) {\n                matched = matched.concat(sub);\n                sub.forEach(newThread => {\n                  var expressions =\n                      \"solution\" in thcopy ? thcopy.solution.expressions : [];\n                  if (\"expression\" in newThread) // undefined for no matches on min card:0\n                    expressions = expressions.concat([newThread.expression]);\n                  delete newThread.expression;\n                  newThread.solution = {\n                    type: \"OneOfSolution\",\n                    expressions: expressions\n                  };\n                });\n              } else\n                failed = failed.concat(sub);\n            });\n            return matched.length > 0 ? matched : failed;\n          });\n        }\n\n        else if (expr.type === \"EachOf\") {\n          return validateRept(\"EachOfSolutions\", (th) => {\n            // Iterate through nested expressions, exprThreads starts as [th].\n            return expr.expressions.reduce((exprThreads, nested) => {\n              // Iterate through current thread list composing nextThreads.\n              // Consider e.g.\n              // <S1> { <p1> . | <p2> .; <p3> . } / { <x> <p2> 2; <p3> 3 } (should pass)\n              // <S1> { <p1> .; <p2> . }          / { <s1> <p1> 1 }        (should fail)\n              return exprThreads.reduce((nextThreads, exprThread) => {\n                var sub = validateExpr(nested, exprThread);\n                // Move newThread.expression into a hierarchical solution structure.\n                sub.forEach(newThread => {\n                  if (newThread.errors.length === 0) {\n                    var expressions =\n                        \"solution\" in exprThread ? exprThread.solution.expressions : [];\n                    if (\"expression\" in newThread) // undefined for no matches on min card:0\n                      expressions = expressions.concat([newThread.expression]);\n                    // console.warn(threadMatched(newThread), \" vs \", exprMatched(expressions));\n                    delete newThread.expression;\n                    newThread.solution = {\n                      type: \"EachOfSolution\",\n                      expressions: expressions // exprThread.expression + newThread.expression\n                    };\n                  }\n                });\n                return nextThreads.concat(sub);\n              }, []);\n            }, [th]);\n          });\n        }\n\n        runtimeError(\"unexpected expr type: \" + expr.type);\n      }\n\n      var startingThread = {\n        avail:[],   // triples remaining by constraint number\n        matched:[], // triples matched in this thread\n        errors:[]   // errors encounted\n      };\n      if (!outerExpression)\n        return { }; // vapid match if no expression\n      var ret = validateExpr(outerExpression, startingThread);\n      // console.log(JSON.stringify(ret));\n      // note: don't return if ret.length === 1 because it might fail the unmatchedTriples test.\n      var longerChosen =\n          ret.reduce((ret, elt) => {\n            if (elt.errors.length > 0)\n              return ret;              // early return\n            var unmatchedTriples = {};\n            // Collect triples assigned to some constraint.\n            Object.keys(tripleToConstraintMapping).forEach(k => {\n              if (tripleToConstraintMapping[k] !== undefined)\n                unmatchedTriples[k] = tripleToConstraintMapping[k];\n            });\n            // Removed triples matched in this thread.\n            elt.matched.forEach(m => {\n              m.tNos.forEach(t => {\n                delete unmatchedTriples[t];\n              });\n            });\n            // Remaining triples are unaccounted for.\n            Object.keys(unmatchedTriples).forEach(t => {\n              elt.errors.push({\n                type: \"ExcessTripleViolation\",\n                triple: neighborhood[t],\n                constraint: constraintList[unmatchedTriples[t]]\n              });\n            });\n            return ret !== null ? ret : // keep first solution\n            // Accept thread with no unmatched triples.\n            Object.keys(unmatchedTriples).length > 0 ? null : elt;\n          }, null);\n      return longerChosen !== null ?\n        finish(longerChosen.expression, constraintList,\n               neighborhood, recurse, direct, semActHandler, checkValueExpr) :\n        ret.length > 1 ? {\n          type: \"PossibleErrors\",\n          errors: ret.reduce((all, e) => {\n            return all.concat([e.errors]);\n          }, [])\n        } : ret[0];\n    }\n\n    function finish (fromValidatePoint, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr) {\n      function _dive (solns) {\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n        if (solns.type === \"OneOfSolutions\" ||\n            solns.type === \"EachOfSolutions\") {\n          solns.solutions.forEach(s => {\n            s.expressions.forEach(e => {\n              _dive(e);\n            });\n          });\n        } else if (solns.type === \"TripleConstraintSolutions\") {\n          solns.solutions = solns.solutions.map(x => {\n            if (x.type === \"TestedTriple\") // already done\n              return x; // c.f. validation/3circularRef1_pass-open\n            var t = neighborhood[x.tripleNo];\n            var expr = constraintList[x.constraintNo];\n            var ret = {\n              type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)\n            };\n            function diver (focus, shapeLabel, dive) {\n              var sub = dive(focus, shapeLabel);\n              if (\"errors\" in sub) {\n                // console.dir(sub);\n                var err = {\n                  type: \"ReferenceError\", focus: focus,\n                  shape: shapeLabel\n                };\n                if (typeof shapeLabel === \"string\" && RdfTerm.isBlank(shapeLabel))\n                  err.referencedShape = shape;\n                err.errors = sub;\n                return [err];\n              }\n              if ((\"solution\" in sub || \"solutions\" in sub)&& Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                  sub.type === \"Recursion\")\n                ret.referenced = sub; // !!! needs to aggregate errors and solutions\n              return [];\n            }\n            function diveRecurse (focus, shapeLabel) {\n              return diver(focus, shapeLabel, recurse);\n            }\n            function diveDirect (focus, shapeLabel) {\n              return diver(focus, shapeLabel, direct);\n            }\n            var subErrors = \"valueExpr\" in expr ?\n                checkValueExpr(expr.inverse ? t.subject : t.object, expr.valueExpr, diveRecurse, diveDirect) :\n                [];\n            if (subErrors.length === 0 && \"semActs\" in expr)\n              [].push.apply(subErrors, semActHandler.dispatchAll(expr.semActs, t, ret))\n            if (subErrors.length > 0) {\n              fromValidatePoint.errors = fromValidatePoint.errors || [];\n              fromValidatePoint.errors = fromValidatePoint.errors.concat(subErrors);\n            }\n            return ret;\n          });\n        } else {\n          throw Error(\"unexpected expr type in \" + JSON.stringify(solns));\n        }\n      }\n      if (Object.keys(fromValidatePoint).length > 0) // guard against {}\n        _dive(fromValidatePoint);\n      if (\"semActs\" in shape)\n        fromValidatePoint.semActs = shape.semActs;\n      return fromValidatePoint;\n    }\n  }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\nreturn {\n  name: \"threaded-val-nerr\",\n  description: \"emulation of regular expression engine with error permutations\",\n  compile: vpEngine\n};\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ThreadedValNErr;\n"
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "index": 21,
          "index2": 20,
          "size": 2803,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "5:12-37"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "7:19-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "var ShExParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShExJison = require('./lib/ShExJison').Parser; // node environment\n} else {\n  ShExJison = ShExJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, prefixes, schemaOptions) {\n  schemaOptions = schemaOptions || {};\n  // Create a copy of the prefixes\n  var prefixesCopy = {};\n  for (var prefix in prefixes || {})\n    prefixesCopy[prefix] = prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShExJison();\n\n  function runParser () {\n    // ShExJison.base = baseIRI || \"\";\n    // ShExJison.basePath = ShExJison.base.replace(/[^\\/]*$/, '');\n    // ShExJison.baseRoot = ShExJison.base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    ShExJison._prefixes = Object.create(prefixesCopy);\n    ShExJison._imports = [];\n    ShExJison._setBase(baseIRI);\n    ShExJison._setFileName(baseIRI);\n    ShExJison.options = schemaOptions;\n    let errors = [];\n    ShExJison.recoverable = e =>\n      errors.push(e);\n    let ret = null;\n    try {\n      ret = ShExJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      errors.push(e);\n    }\n    ShExJison.reset();\n    errors.forEach(e => {\n      if (\"hash\" in e) {\n        const hash = e.hash;\n        const location = hash.loc;\n        delete hash.loc;\n        Object.assign(e, hash, {location: location});\n      }\n      return e;\n    })\n    if (errors.length == 1) {\n      errors[0].parsed = ret;\n      throw errors[0];\n    } else if (errors.length) {\n      const all = new Error(\"\" + errors.length  + \" parser errors:\\n\" + errors.map(\n        e => contextError(e, parser.yy.lexer)\n      ).join(\"\\n\"));\n      all.errors = errors;\n      all.parsed = ret;\n      throw all;\n    } else {\n      return ret;\n    }\n  }\n  parser.parse = runParser;\n  parser._setBase = function (base) {\n    ShExJison._setBase;\n    baseIRI = base;\n  }\n  parser._setFileName = ShExJison._setFileName;\n  parser._setOptions = function (opts) { ShExJison.options = opts; };\n  parser._resetBlanks = ShExJison._resetBlanks;\n  parser.reset = ShExJison.reset;\n  ShExJison.options = schemaOptions;\n  return parser;\n\n  function contextError (e, lexer) {\n    // use the lexer's pretty-printing\n    var line = e.location.first_line;\n    var col  = e.location.first_column + 1;\n    var posStr = \"pos\" in e.hash ? \"\\n\" + e.hash.pos : \"\"\n    return `${baseIRI}\\n line: ${line}, column: ${col}: ${e.message}${posStr}`;\n  }\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExParser;\n"
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "index": 23,
          "index2": 38,
          "size": 19433,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 47,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "glob",
              "loc": "308:20-35"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./glob.js",
              "loc": "8:11-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"
        },
        {
          "id": 25,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "index": 24,
          "index2": 22,
          "size": 1308,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "44:9-31"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "5:9-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n"
        },
        {
          "id": 26,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "index": 32,
          "index2": 31,
          "size": 15995,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "50:13-30"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "11:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"
        },
        {
          "id": 27,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "index": 37,
          "index2": 33,
          "size": 6167,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "53:13-35"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "13:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"
        },
        {
          "id": 28,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "index": 39,
          "index2": 35,
          "size": 905,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerId": 56,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 56,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 31,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 29,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"
        },
        {
          "id": 29,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "index": 40,
          "index2": 36,
          "size": 935,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "63:11-26"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "3:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n"
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "index": 56,
          "index2": 68,
          "size": 35972,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "./_stream_readable",
              "loc": "42:15-44"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_readable.js",
              "loc": "1:27-63"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}"
        },
        {
          "id": 31,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "index": 57,
          "index2": 52,
          "size": 49,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/stream",
              "loc": "42:13-49"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/stream",
              "loc": "66:13-49"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = require('events').EventEmitter;\n"
        },
        {
          "id": 32,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/destroy.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
          "index": 61,
          "index2": 56,
          "size": 3117,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/destroy",
              "loc": "74:18-55"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/destroy",
              "loc": "82:18-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};"
        },
        {
          "id": 33,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/state.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/state.js",
          "index": 62,
          "index2": 58,
          "size": 749,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/state",
              "loc": "76:15-50"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/state",
              "loc": "84:15-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};"
        },
        {
          "id": 34,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "name": "./node_modules/readable-stream/lib/_stream_writable.js",
          "index": 66,
          "index2": 61,
          "size": 21821,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "./_stream_writable",
              "loc": "44:15-44"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_writable.js",
              "loc": "4:19-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};"
        },
        {
          "id": 35,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
          "name": "./node_modules/string_decoder/lib/string_decoder.js",
          "index": 68,
          "index2": 64,
          "size": 9465,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "string_decoder/",
              "loc": "163:40-66"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "string_decoder/",
              "loc": "325:38-64"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}"
        },
        {
          "id": 36,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
          "name": "./node_modules/readable-stream/lib/_stream_transform.js",
          "index": 73,
          "index2": 69,
          "size": 7947,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_transform.js",
              "loc": "6:20-57"
            },
            {
              "moduleId": 68,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
              "module": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "type": "cjs require",
              "userRequest": "./_stream_transform",
              "loc": "28:16-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}"
        },
        {
          "id": 37,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/queue-microtask/index.js",
          "name": "./node_modules/queue-microtask/index.js",
          "index": 48,
          "index2": 45,
          "size": 348,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "issuerId": 12,
          "issuerName": "./node_modules/n3/src/N3Lexer.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 336,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony side effect evaluation",
              "userRequest": "queue-microtask",
              "loc": "3:0-45"
            },
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony import specifier",
              "userRequest": "queue-microtask",
              "loc": "443:8-22"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n"
        },
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "index": 0,
          "index2": 77,
          "size": 383,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "profile": {
            "factory": 16,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp-webpack"
            },
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp-webpack.min"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0,
          "source": "ShExWebApp = (function () {\n  let shapeMap = require(\"shape-map\")\n  return Object.assign(require(\"@shexjs/core\"), {\n    Api: require(\"@shexjs/api\"),\n    Parser: require(\"@shexjs/parser\"),\n    ShapeMap: shapeMap,\n    ShapeMapParser: shapeMap.Parser,\n    N3: require(\"n3\")\n  })\n})()\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWebApp;\n"
        },
        {
          "id": 39,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "index": 1,
          "index2": 7,
          "size": 560,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "shape-map",
              "loc": "2:17-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * See README for description.\n */\n\nvar ShapeMap = (function () {\n  const symbols = require(\"./lib/ShapeMapSymbols\")\n\n  // Write the parser object directly into the symbols so the caller shares a\n  // symbol space with ShapeMapJison for e.g. start and focus.\n  symbols.Parser = require(\"./lib/ShapeMapParser\")\n  return symbols\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMap;\n"
        },
        {
          "id": 40,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "name": "../shape-map/lib/ShapeMapParser.js",
          "index": 3,
          "index2": 6,
          "size": 2190,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 39,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 39,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 120,
            "building": 142
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 39,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapParser",
              "loc": "11:19-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var ShapeMapParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShapeMapJison = require('./ShapeMapJison').Parser; // node environment\n} else {\n  ShapeMapJison = ShapeMapJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, schemaMeta, dataMeta) {\n  // Create a copy of the prefixes\n  var schemaBase = schemaMeta.base;\n  var schemaPrefixesCopy = {};\n  for (var prefix in schemaMeta.prefixes || {})\n    schemaPrefixesCopy[prefix] = schemaMeta.prefixes[prefix];\n  var dataBase = dataMeta.base;\n  var dataPrefixesCopy = {};\n  for (var prefix in dataMeta.prefixes || {})\n    dataPrefixesCopy[prefix] = dataMeta.prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShapeMapJison();\n\n  function runParser () {\n    ShapeMapJison._schemaPrefixes = Object.create(schemaPrefixesCopy);\n    ShapeMapJison._setSchemaBase(schemaBase);\n    ShapeMapJison._dataPrefixes = Object.create(dataPrefixesCopy);\n    ShapeMapJison._setDataBase(dataBase);\n    ShapeMapJison._setFileName(baseIRI);\n    try {\n      return ShapeMapJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      // use the lexer's pretty-printing\n      var lineNo = \"lexer\" in parser.yy ? parser.yy.lexer.yylineno + 1 : 1;\n      var pos = \"lexer\" in parser.yy ? parser.yy.lexer.showPosition() : \"\";\n      var t = Error(`${baseIRI}(${lineNo}): ${e.message}\\n${pos}`);\n      Error.captureStackTrace(t, runParser);\n      parser.reset();\n      throw t;\n    }\n  }\n  parser.parse = runParser;\n  parser._setSchemaBase = function (base) {\n    ShapeMapJison._setSchemaBase;\n    schemaBase = base;\n  }\n  parser._setDataBase = function (base) {\n    ShapeMapJison._setDataBase;\n    dataBase = base;\n  }\n  parser._setFileName = ShapeMapJison._setFileName;\n  parser.reset = ShapeMapJison.reset;\n  return parser;\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShapeMapParser;\n"
        },
        {
          "id": 41,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "name": "../shape-map/lib/ShapeMapJison.js",
          "index": 4,
          "index2": 5,
          "size": 52142,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "issuerId": 40,
          "issuerName": "../shape-map/lib/ShapeMapParser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 39,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 40,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "name": "../shape-map/lib/ShapeMapParser.js",
              "profile": {
                "factory": 120,
                "building": 142
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 34,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 40,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "module": "../shape-map/lib/ShapeMapParser.js",
              "moduleName": "../shape-map/lib/ShapeMapParser.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapJison",
              "loc": "5:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/* parser generated by jison 0.4.16 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShapeMapJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,16],$V2=[1,11],$V3=[1,14],$V4=[1,25],$V5=[1,24],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,28],$Va=[1,26],$Vb=[1,27],$Vc=[1,29],$Vd=[1,12],$Ve=[1,13],$Vf=[1,15],$Vg=[4,9],$Vh=[16,19,20,21],$Vi=[2,25],$Vj=[16,19,20,21,37],$Vk=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],$Vl=[4,9,16,19,20,21,37,43,74,75],$Vm=[4,9,43],$Vn=[29,46,80,81,82],$Vo=[4,9,42,43],$Vp=[1,59],$Vq=[46,79,80,81,82],$Vr=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],$Vs=[1,94],$Vt=[1,85],$Vu=[1,86],$Vv=[1,87],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,93],$VA=[1,95],$VB=[33,48,49,50,53,54,55,56,63],$VC=[4,9,37,65],$VD=[1,99],$VE=[9,37],$VF=[9,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shapeMap\":3,\"EOF\":4,\"pair\":5,\"Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star\":6,\"QGT_COMMA_E_Opt\":7,\"O_QGT_COMMA_E_S_Qpair_E_C\":8,\"GT_COMMA\":9,\"nodeSelector\":10,\"statusAndShape\":11,\"Qreason_E_Opt\":12,\"QjsonAttributes_E_Opt\":13,\"reason\":14,\"jsonAttributes\":15,\"GT_AT\":16,\"Qstatus_E_Opt\":17,\"shapeSelector\":18,\"ATSTART\":19,\"ATPNAME_NS\":20,\"ATPNAME_LN\":21,\"status\":22,\"objectTerm\":23,\"triplePattern\":24,\"IT_SPARQL\":25,\"string\":26,\"nodeIri\":27,\"shapeIri\":28,\"START\":29,\"subjectTerm\":30,\"BLANK_NODE_LABEL\":31,\"literal\":32,\"GT_LCURLEY\":33,\"IT_FOCUS\":34,\"nodePredicate\":35,\"O_QobjectTerm_E_Or_QIT___E_C\":36,\"GT_RCURLEY\":37,\"O_QsubjectTerm_E_Or_QIT___E_C\":38,\"IT__\":39,\"GT_NOT\":40,\"GT_OPT\":41,\"GT_DIVIDE\":42,\"GT_DOLLAR\":43,\"O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C\":44,\"jsonValue\":45,\"APPINFO_COLON\":46,\"APPINFO_SPACE_COLON\":47,\"IT_false\":48,\"IT_null\":49,\"IT_true\":50,\"jsonObject\":51,\"jsonArray\":52,\"INTEGER\":53,\"DECIMAL\":54,\"DOUBLE\":55,\"STRING_LITERAL2\":56,\"Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt\":57,\"O_QGT_COMMA_E_S_QjsonMember_E_C\":58,\"jsonMember\":59,\"Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star\":60,\"O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C\":61,\"STRING_LITERAL2_COLON\":62,\"GT_LBRACKET\":63,\"Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt\":64,\"GT_RBRACKET\":65,\"O_QGT_COMMA_E_S_QjsonValue_E_C\":66,\"Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star\":67,\"O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C\":68,\"rdfLiteral\":69,\"numericLiteral\":70,\"booleanLiteral\":71,\"Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt\":72,\"O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C\":73,\"LANGTAG\":74,\"GT_DTYPE\":75,\"STRING_LITERAL1\":76,\"STRING_LITERAL_LONG1\":77,\"STRING_LITERAL_LONG2\":78,\"IT_a\":79,\"IRIREF\":80,\"PNAME_LN\":81,\"PNAME_NS\":82,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",9:\"GT_COMMA\",16:\"GT_AT\",19:\"ATSTART\",20:\"ATPNAME_NS\",21:\"ATPNAME_LN\",25:\"IT_SPARQL\",29:\"START\",31:\"BLANK_NODE_LABEL\",33:\"GT_LCURLEY\",34:\"IT_FOCUS\",37:\"GT_RCURLEY\",39:\"IT__\",40:\"GT_NOT\",41:\"GT_OPT\",42:\"GT_DIVIDE\",43:\"GT_DOLLAR\",46:\"APPINFO_COLON\",47:\"APPINFO_SPACE_COLON\",48:\"IT_false\",49:\"IT_null\",50:\"IT_true\",53:\"INTEGER\",54:\"DECIMAL\",55:\"DOUBLE\",56:\"STRING_LITERAL2\",62:\"STRING_LITERAL2_COLON\",63:\"GT_LBRACKET\",65:\"GT_RBRACKET\",74:\"LANGTAG\",75:\"GT_DTYPE\",76:\"STRING_LITERAL1\",77:\"STRING_LITERAL_LONG1\",78:\"STRING_LITERAL_LONG2\",79:\"IT_a\",80:\"IRIREF\",81:\"PNAME_LN\",82:\"PNAME_NS\"},\nproductions_: [0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n          return []\n        \nbreak;\ncase 2:\n\n          return [$$[$0-3]].concat($$[$0-2])\n        \nbreak;\ncase 3: case 51: case 59:\nthis.$ = $$[$0];\nbreak;\ncase 4: case 60: case 63:\nthis.$ = [  ];\nbreak;\ncase 5: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 8:\nthis.$ = extend({ node: $$[$0-3] }, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 9: case 11: case 52: case 55: case 74:\nthis.$ = {  };\nbreak;\ncase 13:\nthis.$ = extend({ shape: $$[$0] }, $$[$0-1]);\nbreak;\ncase 14:\nthis.$ = { shape: ShapeMap.start };\nbreak;\ncase 15:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1)) };\n      \nbreak;\ncase 16:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + $$[$0].substr(namePos + 1) };\n      \nbreak;\ncase 17:\nthis.$ = { status: 'conformant' } // defaults to conformant;\nbreak;\ncase 18:\nthis.$ = { status: $$[$0] };\nbreak;\ncase 21:\nthis.$ = { type: \"Extension\", language: \"http://www.w3.org/ns/shex#Extensions-sparql\", lexical: $$[$0][\"@value\"] };\nbreak;\ncase 22:\nthis.$ = { type: \"Extension\", language: $$[$0-1], lexical: $$[$0][\"@value\"] };\nbreak;\ncase 24:\nthis.$ = ShapeMap.start;\nbreak;\ncase 29:\nthis.$ = { type: \"TriplePattern\", subject: ShapeMap.focus, predicate: $$[$0-2], object: $$[$0-1] };\nbreak;\ncase 30:\nthis.$ = { type: \"TriplePattern\", subject: $$[$0-3], predicate: $$[$0-2], object: ShapeMap.focus };\nbreak;\ncase 32: case 34: case 42:\nthis.$ = null;\nbreak;\ncase 35:\nthis.$ = 'nonconformant';\nbreak;\ncase 36:\nthis.$ = 'unknown';\nbreak;\ncase 37:\nthis.$ = { reason: $$[$0] };\nbreak;\ncase 38:\nthis.$ = { appinfo: $$[$0] };\nbreak;\ncase 41:\nthis.$ = false;\nbreak;\ncase 43:\nthis.$ = true;\nbreak;\ncase 46: case 47: case 48:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 49:\nthis.$ = unescapeString($$[$0], 1)[\"@value\"];\nbreak;\ncase 50: case 58:\nthis.$ = $$[$0-1];\nbreak;\ncase 53: case 54: case 71:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 57:\n\n        this.$ = {  };\n        var t = $$[$0-1].substr(0, $$[$0-1].length - 1).trim(); // remove trailing ':' and spaces\n        this.$[unescapeString(t, 1)[\"@value\"]] = $$[$0];\n      \nbreak;\ncase 62:\nthis.$ = [$$[$0-1]].concat($$[$0]);\nbreak;\ncase 68:\nthis.$ = createLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 69:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 70:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE);\nbreak;\ncase 72:\nthis.$ = obj(\"@language\", $$[$0].substr(1).toLowerCase());\nbreak;\ncase 73:\nthis.$ = obj(\"@type\", $$[$0]);\nbreak;\ncase 76:\nthis.$ = createLiteral(\"true\", XSD_BOOLEAN);\nbreak;\ncase 77:\nthis.$ = createLiteral(\"false\", XSD_BOOLEAN);\nbreak;\ncase 78: case 80:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 79: case 81:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 83:\nthis.$ = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nbreak;\ncase 84:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._dataBase === null || absoluteIRI.test(unesc) ? unesc : _resolveDataIRI(unesc)\n      \nbreak;\ncase 85: case 86: case 90:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 87:\n\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\ncase 88:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._schemaBase === null || absoluteIRI.test(unesc) ? unesc : _resolveSchemaIRI(unesc)\n      \nbreak;\ncase 89:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 91:\n\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},{1:[3]},{1:[2,1]},o($Vg,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},o($Vh,[2,19]),o($Vh,[2,20]),{26:36,56:$V9,76:$Va,77:$Vb,78:$Vc},o($Vh,$Vi,{26:37,56:$V9,76:$Va,77:$Vb,78:$Vc}),o($Vj,[2,27]),o($Vj,[2,28]),{27:42,30:40,31:$V1,34:[1,38],38:39,39:[1,41],46:$V3,80:$Vd,81:$Ve,82:$Vf},o($Vk,[2,84]),o($Vk,[2,85]),o($Vk,[2,86]),o($Vk,[2,87]),o([16,19,20,21,37,46,79,80,81,82],[2,26]),o($Vj,[2,65]),o($Vj,[2,66]),o($Vj,[2,67]),o($Vj,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),o($Vj,[2,68]),o($Vj,[2,69]),o($Vj,[2,70]),o($Vj,[2,76]),o($Vj,[2,77]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},o($Vm,[2,9],{12:50,14:51,42:[1,52]}),o($Vn,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),o($Vo,[2,14]),o($Vo,[2,15]),o($Vo,[2,16]),o($Vh,[2,21]),o($Vh,[2,22]),{27:58,35:57,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},{27:58,35:60,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},o($Vq,[2,33]),o($Vq,[2,34]),o([37,46,79,80,81,82],$Vi),o($Vj,[2,71]),o($Vj,[2,75]),o($Vj,[2,72]),{27:61,46:$V3,80:$Vd,81:$Ve,82:$Vf},{4:[1,62]},o($Vg,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vg,[2,11],{13:64,15:65,43:[1,66]}),o($Vm,[2,10]),{26:67,56:$V9,76:$Va,77:$Vb,78:$Vc},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},o($Vn,[2,18]),o($Vn,[2,35]),o($Vn,[2,36]),{23:76,26:20,27:42,30:9,31:$V1,32:10,36:75,39:[1,77],46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vr,[2,82]),o($Vr,[2,83]),{34:[1,78]},o($Vj,[2,73]),{1:[2,2]},o($Vg,[2,3]),o($Vg,[2,8]),o($Vg,[2,12]),{44:79,46:[1,80],47:[1,81]},o($Vm,[2,37]),o($Vo,[2,13]),o($Vo,[2,23]),o($Vo,[2,24]),o($Vo,[2,88]),o($Vo,[2,89]),o($Vo,[2,90]),o($Vo,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:$Vs,45:84,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VB,[2,39]),o($VB,[2,40]),o($Vh,[2,29]),o($Vh,[2,30]),o($Vg,[2,38]),o($VC,[2,41]),o($VC,[2,42]),o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),o($VC,[2,46]),o($VC,[2,47]),o($VC,[2,48]),o($VC,[2,49]),{37:[2,55],57:96,59:98,61:97,62:$VD},{33:$Vs,45:102,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},o($VE,[2,52],{60:104}),{33:$Vs,45:105,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},{65:[1,106]},{65:[2,64]},o($VF,[2,60],{67:107}),o($VC,[2,50]),{9:[1,109],37:[2,54],58:108},o($VE,[2,57]),o($VC,[2,58]),{9:[1,111],65:[2,62],66:110},o($VE,[2,53]),{59:112,62:$VD},o($VF,[2,61]),{33:$Vs,45:113,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VE,[2,51]),o($VF,[2,59])],\ndefaultActions: {2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = new Error();\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShapeMap parser in the Jison parser generator format.\n  */\n\n  var ShapeMap = require(\"./ShapeMapSymbols\");\n\n  // Common namespaces and entities\n  var XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setSchemaBase` sets the base IRI to resolve relative IRIs.\n  Parser._setSchemaBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._schemaBase = baseIRI) {\n      Parser._schemaBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._schemaBaseRoot   = baseIRI[0];\n      Parser._schemaBaseScheme = baseIRI[1];\n    }\n  }\n  Parser._setDataBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._dataBase = baseIRI) {\n      Parser._dataBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._dataBaseRoot   = baseIRI[0];\n      Parser._dataBaseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveSchemaIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveSchemaIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._schemaBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._schemaBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._schemaBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._schemaBaseScheme : Parser._schemaBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._schemaBasePath + iri);\n    }\n    }\n  }\n  function _resolveDataIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._dataBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._dataBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._dataBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._dataBaseScheme : Parser._dataBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._dataBasePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function obj() {\n    var ret = {  };\n    for (var i = 0; i < arguments.length; i+= 2) {\n      ret[arguments[i]] = arguments[i+1];\n    }\n    return ret;\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return obj(\"@value\", value, \"@type\", type );\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser.valueExprDefns = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._schemaBase = Parser._schemaBasePath = Parser._schemaBaseRoot = Parser._schemaBaseIRIScheme = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return obj(\"@value\", unescapeText(string, stringEscapeReplacements));\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, obj(\"@language\", lang.substr(1).toLowerCase()));\n  }\n\n  function error (msg) {\n    Parser.reset();\n    throw new Error(msg);\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefixes, prefix) {\n    if (!(prefix in prefixes))\n      error('Parse error; unknown prefix: ' + prefix);\n    return prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape) {\n    if (Parser.productions && label in Parser.productions)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.shapes)\n      Parser.shapes = {};\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.shapes[label] = shape;\n  }\n\n  // Add a production to the map\n  function addProduction (label, production) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.productions)\n      Parser.productions = {};\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function shapeJunction (type, container, elts) {\n    if (elts.length === 0) {\n      return container;\n    } else if (container.type === type) {\n      container.shapeExprs = container.shapeExprs.concat(elts);\n      return container;\n    } else {\n      return { type: type, shapeExprs: [container].concat(elts) };\n    }\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n\n  // <?INCLUDE from ShExUtil. Factor into `rdf-token` module? ?>\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  function unescapeText (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 47;\nbreak;\ncase 2:return 62;\nbreak;\ncase 3:return 34;\nbreak;\ncase 4:return 29;\nbreak;\ncase 5:return 19;\nbreak;\ncase 6:return 25;\nbreak;\ncase 7:return 21;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 74;\nbreak;\ncase 10:return 81;\nbreak;\ncase 11:return 46;\nbreak;\ncase 12:return 82;\nbreak;\ncase 13:return 55;\nbreak;\ncase 14:return 54;\nbreak;\ncase 15:return 53;\nbreak;\ncase 16:return 80;\nbreak;\ncase 17:return 31;\nbreak;\ncase 18:return 77;\nbreak;\ncase 19:return 78;\nbreak;\ncase 20:return 76;\nbreak;\ncase 21:return 56;\nbreak;\ncase 22:return 79;\nbreak;\ncase 23:return 9;\nbreak;\ncase 24:return 33;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 16;\nbreak;\ncase 27:return 40;\nbreak;\ncase 28:return 41;\nbreak;\ncase 29:return 42;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 75;\nbreak;\ncase 34:return 39;\nbreak;\ncase 35:return 50;\nbreak;\ncase 36:return 48;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 4;\nbreak;\ncase 39:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 40:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(appinfo[\\u0020\\u000A\\u0009]+:))/,/^(?:(\"([^\\u0022\\u005C\\u000A\\u000D]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"[\\u0020\\u000A\\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:a\\b)/,/^(?:,)/,/^(?:\\{)/,/^(?:\\})/,/^(?:@)/,/^(?:!)/,/^(?:\\?)/,/^(?:\\/)/,/^(?:\\$)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^\\^)/,/^(?:_\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShapeMapJison;\nexports.Parser = ShapeMapJison.Parser;\nexports.parse = function () { return ShapeMapJison.parse.apply(ShapeMapJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 42,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/node_modules/hierarchy-closure/hierarchy-closure.js",
          "name": "../shex-core/node_modules/hierarchy-closure/hierarchy-closure.js",
          "index": 12,
          "index2": 9,
          "size": 2546,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "issuerId": 20,
          "issuerName": "../shex-core/lib/ShExUtil.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 20,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "name": "../shex-core/lib/ShExUtil.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            }
          ],
          "profile": {
            "factory": 134,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 20,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "module": "../shex-core/lib/ShExUtil.js",
              "moduleName": "../shex-core/lib/ShExUtil.js",
              "type": "cjs require",
              "userRequest": "hierarchy-closure",
              "loc": "6:18-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var HierarchyClosure = (function () {\n  /** create a hierarchy object\n   * This object keeps track of direct children and parents as well as transitive children and parents.\n   */\n  function makeHierarchy () {\n    let roots = {}\n    let parents = {}\n    let children = {}\n    let holders = {}\n    return {\n      add: function (parent, child) {\n        if (// test if this is a novel entry.\n          (parent in children && children[parent].indexOf(child) !== -1)) {\n          return\n        }\n        let target = parent in holders\n          ? getNode(parent)\n          : (roots[parent] = getNode(parent)) // add new parents to roots.\n        let value = getNode(child)\n\n        target[child] = value\n        delete roots[child]\n\n        // // maintain hierarchy (direct and confusing)\n        // children[parent] = children[parent].concat(child, children[child])\n        // children[child].forEach(c => parents[c] = parents[c].concat(parent, parents[parent]))\n        // parents[child] = parents[child].concat(parent, parents[parent])\n        // parents[parent].forEach(p => children[p] = children[p].concat(child, children[child]))\n\n        // maintain hierarchy (generic and confusing)\n        updateClosure(children, parents, child, parent)\n        updateClosure(parents, children, parent, child)\n        function updateClosure (container, members, near, far) {\n          container[far] = container[far].filter(\n            e => /* e !== near && */ container[near].indexOf(e) === -1\n          ).concat(container[near].indexOf(near) === -1 ? [near] : [], container[near])\n          container[near].forEach(\n            n => (members[n] = members[n].filter(\n              e => e !== far && members[far].indexOf(e) === -1\n            ).concat(members[far].indexOf(far) === -1 ? [far] : [], members[far]))\n          )\n        }\n\n        function getNode (node) {\n          if (!(node in holders)) {\n            parents[node] = []\n            children[node] = []\n            holders[node] = {}\n          }\n          return holders[node]\n        }\n      },\n      roots: roots,\n      parents: parents,\n      children: children\n    }\n  }\n\n  function depthFirst (n, f, p) {\n    return Object.keys(n).reduce((ret, k) => {\n      return ret.concat(\n        depthFirst(n[k], f, k),\n        p ? f(k, p) : []) // outer invocation can have null parent\n    }, [])\n  }\n\n  return { create: makeHierarchy, depthFirst }\n})()\n\n/* istanbul ignore next */\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = HierarchyClosure\n}\n"
        },
        {
          "id": 43,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/support/isBufferBrowser.js",
          "name": "./node_modules/util/support/isBufferBrowser.js",
          "index": 15,
          "index2": 10,
          "size": 203,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 11,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 21,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "name": "../shex-core/lib/ShExWriter.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            },
            {
              "id": 11,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 61,
                "building": 19,
                "dependencies": 0
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "./support/isBuffer",
              "loc": "536:19-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"
        },
        {
          "id": 44,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/node_modules/inherits/inherits_browser.js",
          "name": "./node_modules/util/node_modules/inherits/inherits_browser.js",
          "index": 16,
          "index2": 11,
          "size": 672,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 11,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 21,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "name": "../shex-core/lib/ShExWriter.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            },
            {
              "id": 11,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 61,
                "building": 19,
                "dependencies": 0
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "580:19-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"
        },
        {
          "id": 45,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
          "name": "../shex-core/lib/ShExValidator.js",
          "index": 17,
          "index2": 16,
          "size": 47933,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExValidator",
              "loc": "4:16-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* ShExValidator - javascript module to validate a graph with respect to Shape Expressions\n *\n * Status: 1/2 tested, no known bugs.\n *\n * TODO:\n *   constraint violation reporting.\n */\n\nvar ShExValidator = (function () {\nvar UNBOUNDED = -1;\n\n// interface constants\nvar Start = { term: \"START\" }\nvar InterfaceOptions = {\n  \"or\": {\n    \"oneOf\": \"exactly one disjunct must pass\",\n    \"someOf\": \"one or more disjuncts must pass\",\n    \"firstOf\": \"disjunct evaluation stops after one passes\"\n  },\n  \"partition\": {\n    \"greedy\": \"each triple constraint consumes all triples matching predicate and object\",\n    \"exhaustive\": \"search all mappings of triples to triple constriant\"\n  }\n};\n\nvar VERBOSE = \"VERBOSE\" in process.env;\n// **ShExValidator** provides ShEx utility functions\n\nvar ProgramFlowError = { type: \"ProgramFlowError\", errors: { type: \"UntrackedError\" } };\n\nvar RdfTerm = require(\"./RdfTerm\");\nlet ShExUtil = require(\"./ShExUtil\");\n\nfunction getLexicalValue (term) {\n  return RdfTerm.isIRI(term) ? term :\n    RdfTerm.isLiteral(term) ? RdfTerm.getLiteralValue(term) :\n    term.substr(2); // bnodes start with \"_:\"\n}\n\n\nvar XSD = \"http://www.w3.org/2001/XMLSchema#\";\nvar integerDatatypes = [\n  XSD + \"integer\",\n  XSD + \"nonPositiveInteger\",\n  XSD + \"negativeInteger\",\n  XSD + \"long\",\n  XSD + \"int\",\n  XSD + \"short\",\n  XSD + \"byte\",\n  XSD + \"nonNegativeInteger\",\n  XSD + \"unsignedLong\",\n  XSD + \"unsignedInt\",\n  XSD + \"unsignedShort\",\n  XSD + \"unsignedByte\",\n  XSD + \"positiveInteger\"\n];\n\nvar decimalDatatypes = [\n  XSD + \"decimal\",\n].concat(integerDatatypes);\n\nvar numericDatatypes = [\n  XSD + \"float\",\n  XSD + \"double\"\n].concat(decimalDatatypes);\n\nvar numericParsers = {};\nnumericParsers[XSD + \"integer\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?[0-9]+$/))) {\n    parseError(\"illegal integer value '\" + label + \"'\");\n  }\n  return parseInt(label);\n};\nnumericParsers[XSD + \"decimal\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?(?:[0-9]*\\.[0-9]+|[0-9]+)$/))) { // XSD has no pattern for decimal?\n    parseError(\"illegal decimal value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nconst DECIMAL_REGEX = /^[+\\-]?(?:[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+)(?:[eE][+\\-]?[0-9]+)?$/;\nnumericParsers[XSD + \"float\"  ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) { // XSD has no pattern for float?\n    parseError(\"illegal float value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nnumericParsers[XSD + \"double\" ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) {\n    parseError(\"illegal double value '\" + label + \"'\");\n  }\n  return Number(label);\n};\n\ntestRange = function (value, datatype, parseError) {\n  const ranges = {\n    //    integer            -1 0 1 +1 | \"\" -1.0 +1.0 1e0 NaN INF\n    //    decimal            -1 0 1 +1 -1.0 +1.0 | \"\" 1e0 NaN INF\n    //    float              -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    double             -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    nonPositiveInteger -1 0 +0 -0 | 1 +1 1a a1\n    //    negativeInteger    -1 | 0 +0 -0 1\n    //    long               -1 0 1 +1 |\n    //    int                -1 0 1 +1 |\n    //    short              -32768 0 32767 | -32769 32768\n    //    byte               -128 0 127 | \"\" -129 128\n    //    nonNegativeInteger 0 -0 +0 1 +1 | -1\n    //    unsignedLong       0 1 | -1\n    //    unsignedInt        0 1 | -1\n    //    unsignedShort      0 65535 | -1 65536\n    //    unsignedByte       0 255 | -1 256\n    //    positiveInteger    1 | -1 0\n    //    string             \"\" \"a\" \"0\"\n    //    boolean            true false 0 1 | \"\" TRUE FALSE tRuE fAlSe -1 2 10 01\n    //    dateTime           \"2012-01-02T12:34:56.78Z\" | \"\" \"2012-01-02T\" \"2012-01-02\"\n    integer:            { min: -Infinity           , max: Infinity },\n    decimal:            { min: -Infinity           , max: Infinity },\n    float:              { min: -Infinity           , max: Infinity },\n    double:             { min: -Infinity           , max: Infinity },\n    nonPositiveInteger: { min: -Infinity           , max: 0        },\n    negativeInteger:    { min: -Infinity           , max: -1       },\n    long:               { min: -9223372036854775808, max: 9223372036854775807 },\n    int:                { min: -2147483648         , max: 2147483647 },\n    short:              { min: -32768              , max: 32767    },\n    byte:               { min: -128                , max: 127      },\n    nonNegativeInteger: { min: 0                   , max: Infinity },\n    unsignedLong:       { min: 0                   , max: 18446744073709551615 },\n    unsignedInt:        { min: 0                   , max: 4294967295 },\n    unsignedShort:      { min: 0                   , max: 65535    },\n    unsignedByte:       { min: 0                   , max: 255      },\n    positiveInteger:    { min: 1                   , max: Infinity }\n  }\n  var parms = ranges[datatype.substr(XSD.length)];\n  if (!parms) throw Error(\"unexpected datatype: \" + datatype);\n  if (value < parms.min) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is less than the min:\", parms.min);\n  } else if (value > parms.max) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is greater than the max:\", parms.min);\n  }\n};\n\n/*\nfunction intSubType (spec, label, parseError) {\n  var ret = numericParsers[XSD + \"integer\"](label, parseError);\n  if (\"min\" in spec && ret < spec.min)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be < \" + spec.min);\n  if (\"max\" in spec && ret > spec.max)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be > \" + spec.max);\n  return ret;\n}\n[{type: \"nonPositiveInteger\", max: 0},\n {type: \"negativeInteger\", max: -1},\n {type: \"long\", min: -9223372036854775808, max: 9223372036854775807}, // beyond IEEE double\n {type: \"int\", min: -2147483648, max: 2147483647},\n {type: \"short\", min: -32768, max: 32767},\n {type: \"byte\", min: -128, max: 127},\n {type: \"nonNegativeInteger\", min: 0},\n {type: \"unsignedLong\", min: 0, max: 18446744073709551615},\n {type: \"unsignedInt\", min: 0, max: 4294967295},\n {type: \"unsignedShort\", min: 0, max: 65535},\n {type: \"unsignedByte\", min: 0, max: 255},\n {type: \"positiveInteger\", min: 1}].forEach(function (i) {\n   numericParsers[XSD + i.type ] = function (label, parseError) {\n     return intSubType(i, label, parseError);\n   };\n });\n*/\n\nvar stringTests = {\n  length   : function (v, l) { return v.length === l; },\n  minlength: function (v, l) { return v.length  >= l; },\n  maxlength: function (v, l) { return v.length  <= l; }\n};\n\nvar numericValueTests = {\n  mininclusive  : function (n, m) { return n >= m; },\n  minexclusive  : function (n, m) { return n >  m; },\n  maxinclusive  : function (n, m) { return n <= m; },\n  maxexclusive  : function (n, m) { return n <  m; }\n};\n\nvar decimalLexicalTests = {\n  totaldigits   : function (v, d) {\n    var m = v.match(/[0-9]/g);\n    return m && m.length <= d;\n  },\n  fractiondigits: function (v, d) {\n    var m = v.match(/^[+-]?[0-9]*\\.?([0-9]*)$/);\n    return m && m[1].length <= d;\n  }\n};\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n/* ShExValidator_constructor - construct an object for validating a schema.\n *\n * schema: a structure produced by a ShEx parser or equivalent.\n * options: object with controls for\n *   lax(true): boolean: whine about missing types in schema.\n *   diagnose(false): boolean: makde validate return a structure with errors.\n */\nfunction ShExValidator_constructor(schema, options) {\n  if (!(this instanceof ShExValidator_constructor))\n    return new ShExValidator_constructor(schema, options);\n  let index = schema._index || ShExUtil.index(schema)\n  this.type = \"ShExValidator\";\n  options = options || {};\n  this.options = options;\n  this.options.or = this.options.or || \"someOf\";\n  this.options.partition = this.options.partition || \"exhaustive\";\n  if (!(\"noCache\" in options && options.noCache))\n    this.known = {};\n\n  var _ShExValidator = this;\n  this.schema = schema;\n  this._expect = this.options.lax ? noop : expect; // report errors on missing types.\n  this._optimize = {}; // optimizations:\n    // hasRepeatedGroups: whether there are patterns like (:p1 ., :p2 .)*\n  this.reset = function () {  }; // included in case we need it later.\n  // var regexModule = this.options.regexModule || require(\"../lib/regex/nfax-val-1err\");\n  var regexModule = this.options.regexModule || require(\"../lib/regex/threaded-val-nerr\");\n\n  /* getAST - compile a traditional regular expression abstract syntax tree.\n   * Tested but not used at present.\n   */\n  this.getAST = function () {\n    return {\n      type: \"AST\",\n      shapes: schema.shapes.reduce(function (ret, shape) {\n        ret[shape.id] = {\n          type: \"ASTshape\",\n          expression: _compileShapeToAST(shape.expression, [], _ShExValidator.schema)\n        };\n        return ret;\n      }, {})\n    };\n  };\n\n  /* indexTripleConstraints - compile regular expression and index triple constraints\n   */\n  this.indexTripleConstraints = function (expression) {\n    // list of triple constraints from (:p1 ., (:p2 . | :p3 .))\n    var tripleConstraints = [];\n\n    if (expression)\n      indexTripleConstraints_dive(expression);\n    return tripleConstraints;\n\n    function indexTripleConstraints_dive (expr) {\n      if (typeof expr === \"string\") // Inclusion\n        indexTripleConstraints_dive(index.tripleExprs[expr]);\n\n      else if (expr.type === \"TripleConstraint\")\n        tripleConstraints.push(expr)-1;\n\n      else if (expr.type === \"OneOf\" || expr.type === \"EachOf\")\n        expr.expressions.forEach(function (nested) {\n          indexTripleConstraints_dive(nested);\n        });\n\n      // @@TODO shape.virtual, shape.inherit\n      else\n        runtimeError(\"unexpected expr type: \" + expr.type);\n    };\n  };\n\n  /* emptyTracker - a tracker that does nothing\n   */\n  this.emptyTracker = function () {\n    var noop = x => x;\n    return {\n      recurse: noop,\n      known: noop,\n      enter: function (point, label) { ++this.depth; },\n      exit: function (point, label, ret) { --this.depth; },\n      depth: 0\n    };\n  };\n\n  /* validate - test point in db against the schema for labelOrShape\n   * depth: level of recurssion; for logging.\n   */\n  this.validate = function (db, point, label, tracker, seen) {\n    // default to schema's start shape\n    if (typeof point === \"object\" && \"termType\" in point) {\n      point = RdfTerm.internalTerm(point)\n    }\n    if (typeof point === \"object\") {\n      var shapeMap = point;\n      if (this.options.results === \"api\") {\n        return shapeMap.map(pair => {\n          var time = new Date();\n          var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n          time = new Date() - time;\n          return {\n            node: pair.node,\n            shape: pair.shape,\n            status: \"errors\" in res ? \"nonconformant\" : \"conformant\",\n            appinfo: res,\n            elapsed: time\n          };\n        });\n      }\n      var results = shapeMap.reduce((ret, pair) => {\n        var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n        return \"errors\" in res ?\n          { passes: ret.passes, failures: ret.failures.concat(res) } :\n          { passes: ret.passes.concat(res), failures: ret.failures } ;\n      }, {passes: [], failures: []});\n      if (false && this.options.results === \"api\") {\n        var ret = {};\n        function _add (n, s, r) {\n          if (!(n in ret)) {\n            ret[n] = [{shape: s, result: r}];\n            return;\n          }\n          if (ret[n].filter(p => { return p.shape === s; }))\n            return;\n          ret[n].push({shape: s, results: r});\n        }\n        results.passes.forEach(p => { _add(p.node, p.shape, true); });\n        results.failures.forEach(p => { _add(p.node, p.shape, false); });\n        return ret;\n      }\n      if (results.failures.length) {\n        return results.failures.length !== 1 ?\n          { type: \"FailureList\", errors: results.failures } :\n          results.failures [0];\n      } else {\n        return results.passes.length !== 1 ?\n          { type: \"SolutionList\", solutions: results.passes } :\n          results.passes [0];\n      }\n    }\n\n    var outside = tracker === undefined;\n    // logging stuff\n    if (!tracker)\n      tracker = this.emptyTracker();\n    if (!label || label === Start) {\n      if (!schema.start)\n        runtimeError(\"start production not defined\");\n    }\n\n    var shape = null;\n    if (label == Start) {\n      shape = schema.start;\n    } else if (!(\"shapes\" in this.schema) || this.schema.shapes.length === 0) {\n      runtimeError(\"shape \" + label + \" not found; no shapes in schema\");\n    } else if (label in index.shapeExprs) {\n      shape = index.shapeExprs[label]\n    } else {\n      runtimeError(\"shape \" + label + \" not found in:\\n\" + Object.keys(index.shapeExprs || []).map(s => \"  \" + s).join(\"\\n\"));\n    }\n\n    if (seen === undefined)\n      seen = {};\n    var seenKey = point + \"@\" + (label === Start ? \"_: -start-\" : label);\n    if (seenKey in seen)\n      return tracker.recurse({\n        type: \"Recursion\",\n        node: ldify(point),\n        shape: label\n      });\n    if (\"known\" in this && seenKey in this.known)\n      return tracker.known(this.known[seenKey]);\n    seen[seenKey] = { point: point, shape: label };\n    tracker.enter(point, label);\n    var ret = this._validateShapeExpr(db, point, shape, label, tracker, seen);\n    tracker.exit(point, label, ret);\n    delete seen[seenKey];\n    if (\"known\" in this)\n      this.known[seenKey] = ret;\n    if (\"startActs\" in schema && outside) {\n      ret.startActs = schema.startActs;\n    }\n    return ret;\n  }\n\n  this._validateShapeExpr = function (db, point, shapeExpr, shapeLabel, tracker, seen) {\n    if (point === \"\")\n      throw Error(\"validation needs a valid focus node\");\n    if (typeof shapeExpr === \"string\") { // ShapeRef\n      return this._validateShapeExpr(db, point, index.shapeExprs[shapeExpr], shapeExpr, tracker, seen);\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      var errors = this._errorsMatchingNodeConstraint(point, shapeExpr, null);\n      return errors.length ? {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors.map(function (error) {\n          return {\n            type: \"NodeConstraintViolation\",\n            shapeExpr: shapeExpr,\n            error: error\n          };\n        })\n      } : {\n        type: \"NodeTest\",\n        node: ldify(point),\n        shape: shapeLabel,\n        shapeExpr: shapeExpr\n      };\n    } else if (shapeExpr.type === \"Shape\") {\n      return this._validateShape(db, point, regexModule.compile(schema, shapeExpr, index),\n                                 shapeExpr, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeExternal\") {\n      return this.options.validateExtern(db, point, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      var sub = this._validateShapeExpr(db, point, shapeExpr.shapeExpr, shapeLabel, tracker, seen);\n      if (\"errors\" in sub)\n          return { type: \"ShapeNotResults\", solution: sub };\n        else\n          return { type: \"ShapeNotFailure\", errors: sub };\n    } else if (shapeExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          passes.push(sub);\n      }\n      if (errors.length > 0) {\n        return  { type: \"ShapeAndFailure\", errors: errors};\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else\n      throw Error(\"expected one of Shape{Ref,And,Or} or NodeConstraint, got \" + JSON.stringify(shapeExpr));\n  }\n\n  this._validateShape = function (db, point, regexEngine, shape, shapeLabel, tracker, seen) {\n    var _ShExValidator = this;\n\n    var ret = null;\n    var startAcionStorage = {}; // !!! need test to see this write to results structure.\n    if (\"startActs\" in schema) {\n      const semActErrors = this.semActHandler.dispatchAll(schema.startActs, null, startAcionStorage)\n      if (semActErrors.length)\n        return {\n          type: \"Failure\",\n          node: ldify(point),\n          shape: shapeLabel,\n          errors: semActErrors\n        }; // some semAct aborted !! return real error\n    }\n    // @@ add to tracker: f(\"validating <\" + point + \"> as <\" + shapeLabel + \">\");\n\n    var fromDB  = db.getNeighborhood(point, shapeLabel, shape);\n    var outgoing = indexNeighborhood(fromDB.outgoing.sort(\n      (l, r) => sparqlOrder(l.object, r.object)\n    ));\n    var incoming = indexNeighborhood(fromDB.incoming.sort(\n      (l, r) => sparqlOrder(l.subject, r.subject)\n    ));\n    var outgoingLength = fromDB.outgoing.length;\n    var neighborhood = fromDB.outgoing.concat(fromDB.incoming);\n\n    var constraintList = this.indexTripleConstraints(shape.expression);\n    var tripleList = constraintList.reduce(function (ret, constraint, ord) {\n\n      // subject and object depend on direction of constraint.\n      var searchSubject = constraint.inverse ? null : point;\n      var searchObject = constraint.inverse ? point : null;\n      var index = constraint.inverse ? incoming : outgoing;\n\n      // get triples matching predciate\n      var matchPredicate = index.byPredicate[constraint.predicate] ||\n        []; // empty list when no triple matches that constraint\n\n      function _errorsByShapeLabel (focus, shapeLabel) {\n        var sub = _ShExValidator.validate(db, focus, shapeLabel, tracker, seen);\n        return \"errors\" in sub ? sub.errors : [];\n      }\n      function _errorsByShapeExpr (focus, shapeExpr) {\n        var sub = _ShExValidator._validateShapeExpr(db, focus, shapeExpr, shapeLabel, tracker, seen);\n        return \"errors\" in sub ? sub.errors : [];\n      }\n      // strip to triples matching value constraints (apart from @<someShape>)\n      var matchConstraints = _ShExValidator._triplesMatchingShapeExpr(\n        matchPredicate,\n        constraint.valueExpr,\n        constraint.inverse,\n        /* _ShExValidator.options.partition === \"exhaustive\" ? undefined : */ _errorsByShapeLabel,\n        /* _ShExValidator.options.partition === \"exhaustive\" ? undefined : */ _errorsByShapeExpr\n      );\n\n      matchConstraints.hits.forEach(function (t) {\n        ret.constraintList[neighborhood.indexOf(t)].push(ord);\n      });\n      matchConstraints.misses.forEach(function (t) {\n        ret.misses[neighborhood.indexOf(t.triple)] = {constraintNo: ord, errors: t.errors};\n      });\n      return ret;\n    }, { misses: {}, constraintList:_seq(neighborhood.length).map(function () { return []; }) }); // start with [[],[]...]\n\n    // @@ add to tracker: f(\"constraints by triple: \", JSON.stringify(tripleList.constraintList));\n\n    var extras = []; // triples accounted for by EXTRA\n    var misses = tripleList.constraintList.reduce(function (ret, constraints, ord) {\n      if (constraints.length === 0 &&                       // matches no constraints\n          ord < outgoingLength &&                           // not an incoming triple\n          ord in tripleList.misses) {                       // predicate matched some constraint(s)\n        if (shape.extra !== undefined &&\n            shape.extra.indexOf(neighborhood[ord].predicate) !== -1) {\n          extras.push(ord);\n        } else {                                            // not declared extra\n          ret.push({                                        // so it's a missed triple.\n            tripleNo: ord,\n            constraintNo: tripleList.misses[ord].constraintNo,\n            errors: tripleList.misses[ord].errors\n          });\n        }\n      }\n      return ret;\n    }, []);\n\n    var xp = crossProduct(tripleList.constraintList);\n    var partitionErrors = [];\n    while ((misses.length === 0 || this.options.partition !== \"greedy\") && xp.next() && ret === null) {\n      // caution: early continues\n\n      var usedTriples = []; // [{s1,p1,o1},{s2,p2,o2}] implicated triples -- used for messages\n      var constraintMatchCount = // [2,1,0,1] how many triples matched a constraint\n        _seq(neighborhood.length).map(function () { return 0; });\n      var tripleToConstraintMapping = xp.get(); // [0,1,0,3] mapping from triple to constraint\n\n      // Triples not mapped to triple constraints are not allowed in closed shapes.\n      if (shape.closed) {\n        var unexpectedTriples = neighborhood.slice(0, outgoingLength).filter((t, i) => {\n          return tripleToConstraintMapping[i] === undefined && // didn't match a constraint\n          extras.indexOf(i) === -1; // wasn't in EXTRAs.\n        });\n        if (unexpectedTriples.length > 0) {\n          partitionErrors.push({\n            errors: [\n              {\n                type: \"ClosedShapeViolation\",\n                unexpectedTriples: unexpectedTriples\n              }\n            ]\n          });\n          continue; // closed shape violation.\n        }\n      }\n\n      // Set usedTriples and constraintMatchCount.\n      tripleToConstraintMapping.forEach(function (tpNumber, ord) {\n        if (tpNumber !== undefined) {\n          usedTriples.push(neighborhood[ord]);\n          ++constraintMatchCount[tpNumber];\n        }\n      });\n\n      // Pivot to triples by constraint.\n      function _constraintToTriples () {\n        var cll = constraintList.length;\n        return tripleToConstraintMapping.slice().\n          reduce(function (ret, c, ord) {\n            if (c !== undefined)\n              ret[c].push(ord);\n            return ret;\n          }, _seq(cll).map(function () { return []; }));\n      }\n\n      tripleToConstraintMapping.slice().sort(function (a,b) { return a-b; }).filter(function (i) { // sort constraint numbers\n        return i !== undefined;\n      }).map(function (n) { return n + \" \"; }).join(\"\"); // e.g. 0 0 1 3\n\n      function _recurse (point, shapeLabel) {\n        return _ShExValidator.validate(db, point, shapeLabel, tracker, seen);\n      }\n      function _direct (point, shapeExpr) {\n        return _ShExValidator._validateShapeExpr(db, point, shapeExpr, shapeLabel, tracker, seen);\n      }\n      function _testExpr (term, valueExpr, recurse, direct) {\n        return _ShExValidator._errorsMatchingShapeExpr(term, valueExpr, recurse, direct)\n      }\n      var results = regexEngine.match(db, point, constraintList, _constraintToTriples(), tripleToConstraintMapping, neighborhood, _recurse, _direct, this.semActHandler, _testExpr, null);\n      if (false) {// testing parity between two engines\n        var nfa = require(\"../lib/regex/nfax-val-1err\").compile(schema, shape);\n        var fromNFA = nfa.match(db, point, constraintList, _constraintToTriples(), tripleToConstraintMapping, neighborhood, _recurse, this.semActHandler, _testExpr, null);\n        if (\"errors\" in fromNFA !== \"errors\" in results)\n          { throw Error(JSON.stringify(results) + \" vs \" + JSON.stringify(fromNFA)); }\n      }\n      if (\"errors\" in results) {\n        partitionErrors.push({\n          errors: results.errors\n        });\n        if (_ShExValidator.options.partition !== \"exhaustive\")\n          break;\n        else\n          continue;\n      }\n\n      // @@ add to tracker: f(\"post-regexp \" + usedTriples.join(\" \"));\n\n      var possibleRet = { type: \"ShapeTest\", node: ldify(point), shape: shapeLabel };\n      if (Object.keys(results).length > 0) // only include .solution for non-empty pattern\n        possibleRet.solution = results;\n      if (\"semActs\" in shape) {\n        const semActErrors = this.semActHandler.dispatchAll(shape.semActs, results, possibleRet)\n        if (semActErrors.length) {\n          // some semAct aborted\n          partitionErrors.push({\n            errors: semActErrors\n          });\n          if (_ShExValidator.options.partition !== \"exhaustive\")\n            break;\n          else\n            continue;\n        }\n      }\n      // @@ add to tracker: f(\"final \" + usedTriples.join(\" \"));\n\n      ret = possibleRet;\n      partitionErrors = [];\n      // alts.push(tripleToConstraintMapping);\n    }\n    var missErrors = misses.map(function (miss) {\n      var t = neighborhood[miss.tripleNo];\n      return {\n        type: \"TypeMismatch\",\n        triple: {type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)},\n        constraint: constraintList[miss.constraintNo],\n        errors: miss.errors\n      };\n    });\n    let errors = missErrors.concat(partitionErrors.length === 1 ? partitionErrors[0].errors : partitionErrors);\n    if (errors.length > 0) {\n      ret = {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors\n      };\n    }\n\n    if (VERBOSE) { // remove N3jsTripleToString\n      neighborhood.forEach(function (t) {\n        delete t.toString;\n      });\n    }\n    // @@ add to tracker: f(\"</\" + shapeLabel + \">\");\n    return addShapeAttributes(ret);\n\n    function addShapeAttributes (ret) {\n      if (\"annotations\" in shape)\n        ret.annotations = shape.annotations;\n      return ret;\n    }\n  };\n\n  this._triplesMatchingShapeExpr = function (triples, valueExpr, inverse, recurse, direct) {\n    var _ShExValidator = this;\n    var misses = [];\n    var hits = [];\n    triples.forEach(function (triple) {\n      var value = inverse ? triple.subject : triple.object;\n      var errors = valueExpr === undefined ?\n          [] :\n          _ShExValidator._errorsMatchingShapeExpr(value, valueExpr, recurse, direct);\n      if (errors.length === 0) {\n        hits.push(triple);\n      } else if (hits.indexOf(triple) === -1) {\n        misses.push({triple: triple, errors: errors});\n      }\n    });\n    return { hits: hits, misses: misses };\n  }\n  this._errorsMatchingShapeExpr = function (value, valueExpr, recurse, direct) {\n    var _ShExValidator = this;\n    if (typeof valueExpr === \"string\") { // ShapeRef\n      return recurse ? recurse(value, valueExpr) : [];\n    } else if (valueExpr.type === \"NodeConstraint\") {\n      return this._errorsMatchingNodeConstraint(value, valueExpr, null);\n    } else if (valueExpr.type === \"Shape\") {\n      return direct === undefined ? [] : direct(value, valueExpr);\n    } else if (valueExpr.type === \"ShapeOr\") {\n      var ret = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExprs[i], recurse, direct);\n        if (nested.length === 0)\n          return nested;\n        ret = ret.concat(nested);\n      }\n      return ret;\n    } else if (valueExpr.type === \"ShapeAnd\") {\n      return valueExpr.shapeExprs.reduce(function (ret, nested, iter) {\n        return ret.concat(_ShExValidator._errorsMatchingShapeExpr(value, nested, recurse, direct, true));\n      }, []);\n    } else if (valueExpr.type === \"ShapeNot\") {\n      var ret = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExpr, recurse, direct, true);\n      return ret.length ?\n        [] :\n        [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"];\n    } else {\n      throw Error(\"unknown value expression type '\" + valueExpr.type + \"'\");\n    }\n  };\n\n  /* _errorsMatchingNodeConstraint - return whether the value matches the value\n   * expression without checking shape references.\n   */\n  this._errorsMatchingNodeConstraint = function (value, valueExpr, recurse) {\n    var errors = [];\n    var label = RdfTerm.isLiteral(value) ? RdfTerm.getLiteralValue(value) :\n      RdfTerm.isBlank(value) ? value.substring(2) :\n      value;\n    var dt = RdfTerm.isLiteral(value) ? RdfTerm.getLiteralType(value) : null;\n    var numeric = integerDatatypes.indexOf(dt) !== -1 ? XSD + \"integer\" : numericDatatypes.indexOf(dt) !== -1 ? dt : undefined;\n\n    function validationError () {\n      var errorStr = Array.prototype.join.call(arguments, \"\");\n      errors.push(\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": \" + errorStr);\n      return false;\n    }\n    // if (negated) ;\n    if (false) {\n      // wildcard -- ignore\n    } else {\n      if (\"nodeKind\" in valueExpr) {\n        if ([\"iri\", \"bnode\", \"literal\", \"nonliteral\"].indexOf(valueExpr.nodeKind) === -1) {\n          validationError(\"unknown node kind '\" + valueExpr.nodeKind + \"'\");\n        }\n        if (RdfTerm.isBlank(value)) {\n          if (valueExpr.nodeKind === \"iri\" || valueExpr.nodeKind === \"literal\") {\n            validationError(\"blank node found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (RdfTerm.isLiteral(value)) {\n          if (valueExpr.nodeKind !== \"literal\") {\n            validationError(\"literal found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (valueExpr.nodeKind === \"bnode\" || valueExpr.nodeKind === \"literal\") {\n          validationError(\"iri found when \" + valueExpr.nodeKind + \" expected\");\n        }\n      }\n\n      if (valueExpr.datatype  && valueExpr.values  ) validationError(\"found both datatype and values in \"   +tripleConstraint);\n\n      if (valueExpr.datatype) {\n        if (!RdfTerm.isLiteral(value)) {\n          validationError(\"mismatched datatype: \" + value + \" is not a literal with datatype \" + valueExpr.datatype);\n        }\n        else if (RdfTerm.getLiteralType(value) !== valueExpr.datatype) {\n          validationError(\"mismatched datatype: \" + RdfTerm.getLiteralType(value) + \" !== \" + valueExpr.datatype);\n        }\n        else if (numeric) {\n          testRange(numericParsers[numeric](label, validationError), valueExpr.datatype, validationError);\n        }\n        else if (valueExpr.datatype === XSD + \"boolean\") {\n          if (label !== \"true\" && label !== \"false\" && label !== \"1\" && label !== \"0\")\n            validationError(\"illegal boolean value: \" + label);\n        }\n        else if (valueExpr.datatype === XSD + \"dateTime\") {\n          if (!label.match(/^[+-]?\\d{4}-[01]\\d-[0-3]\\dT[0-5]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?$/))\n            validationError(\"illegal dateTime value: \" + label);\n        }\n      }\n\n      if (valueExpr.values) {\n        if (RdfTerm.isLiteral(value) && valueExpr.values.reduce((ret, v) => {\n          if (ret) return true;\n          var ld = ldify(value);\n          if (v.type === \"Language\") {\n            return v.languageTag === ld.language; // @@ use equals/normalizeTest\n          }\n          if (!(typeof v === \"object\" && \"value\" in v))\n            return false;\n          return v.value === ld.value &&\n            v.type === ld.type &&\n            v.language === ld.language;\n        }, false)) {\n          // literal match\n        } else if (valueExpr.values.indexOf(value) !== -1) {\n          // trivial match\n        } else {\n          if (!(valueExpr.values.some(function (valueConstraint) {\n            if (typeof valueConstraint === \"object\" && !(\"value\" in valueConstraint)) { // isTerm me -- strike \"value\" in\n              if (!(\"type\" in valueConstraint))\n                runtimeError(\"expected \"+JSON.stringify(valueConstraint)+\" to have a 'type' attribute.\");\n              var stemRangeTypes = [\n                \"Language\",\n                \"IriStem\",      \"LiteralStem\",      \"LanguageStem\",\n                \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"\n              ];\n              if (stemRangeTypes.indexOf(valueConstraint.type) === -1)\n                runtimeError(\"expected type attribute '\"+valueConstraint.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n\n              /* expect N3.js literals with {Literal,Language}StemRange\n               *       or non-literals with IriStemRange\n               */\n              function normalizedTest (val, ref, func) {\n                if (RdfTerm.isLiteral(val)) {\n                  if ([\"LiteralStem\", \"LiteralStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(RdfTerm.getLiteralValue(val), ref);\n                  } else if ([\"LanguageStem\", \"LanguageStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(RdfTerm.getLiteralLanguage(val) || null, ref);\n                  } else {\n                    return validationError(\"literal \" + val + \" not comparable with non-literal \" + ref);\n                  }\n                } else {\n                  if ([\"IriStem\", \"IriStemRange\"].indexOf(valueConstraint.type) === -1) {\n                    return validationError(\"nonliteral \" + val + \" not comparable with literal \" + JSON.stringify(ref));\n                  } else {\n                    return func(val, ref);\n                  }\n                }\n              }\n              function startsWith (val, ref) {\n                return normalizedTest(val, ref, (l, r) => {\n                  return (valueConstraint.type === \"LanguageStem\" ||\n                          valueConstraint.type === \"LanguageStemRange\") ?\n                    // rfc4647 basic filtering\n                    l !== null && (l === r || r === \"\" || l[r.length] === \"-\") :\n                    // simple substring\n                    l.startsWith(r);\n                });\n              }\n              function equals (val, ref) {\n                return normalizedTest(val, ref, (l, r) => { return l === r; });\n              }\n\n              if (!isTerm(valueConstraint.stem)) {\n                expect(valueConstraint.stem, \"type\", \"Wildcard\");\n                // match whatever but check exclusions below\n              } else {\n                if (!(startsWith(value, valueConstraint.stem))) {\n                  return false;\n                }\n              }\n              if (valueConstraint.exclusions) {\n                return !valueConstraint.exclusions.some(function (c) {\n                  if (!isTerm(c)) {\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                    return startsWith(value, c.stem);\n                  } else {\n                    return equals(value, c);\n                  }\n                });\n              }\n              return true;\n            } else {\n              // ignore -- would have caught it above\n            }\n          }))) {\n            validationError(\"value \" + value + \" not found in set \" + JSON.stringify(valueExpr.values));\n          }\n        }\n      }\n    }\n\n    if (\"pattern\" in valueExpr) {\n      var regexp = \"flags\" in valueExpr ?\n\t  new RegExp(valueExpr.pattern, valueExpr.flags) :\n\t  new RegExp(valueExpr.pattern);\n      if (!(getLexicalValue(value).match(regexp)))\n        validationError(\"value \" + getLexicalValue(value) + \" did not match pattern \" + valueExpr.pattern);\n    }\n\n    Object.keys(stringTests).forEach(function (test) {\n      if (test in valueExpr && !stringTests[test](label, valueExpr[test])) {\n        validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n      }\n    });\n\n    Object.keys(numericValueTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric) {\n          if (!numericValueTests[test](numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n\n    Object.keys(decimalLexicalTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric === XSD + \"integer\" || numeric === XSD + \"decimal\") {\n          if (!decimalLexicalTests[test](\"\"+numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n    return errors;\n  };\n\n  this.semActHandler = {\n    handlers: { },\n    results: { },\n    /**\n     * Store a semantic action handler.\n     *\n     * @param {string} name - semantic action's URL.\n     * @param {object} handler - handler function.\n     *\n     * The handler object has a dispatch function is invoked with:\n     * @param {string} code - text of the semantic action.\n     * @param {object} ctx - matched triple or results subset.\n     * @param {object} extensionStorage - place where the extension writes into the result structure.\n     * @return {bool} false if the extension failed or did not accept the ctx object.\n     */\n    register: function (name, handler) {\n      this.handlers[name] = handler;\n    },\n    /**\n     * Calls all semantic actions, allowing each to write to resultsArtifact.\n     *\n     * @param {array} semActs - list of semantic actions to invoke.\n     * @return {bool} false if any result was false.\n     */\n    dispatchAll: function (semActs, ctx, resultsArtifact) {\n      var _semActHanlder = this;\n      return semActs.reduce(function (ret, semAct) {\n        if (ret.length === 0 && semAct.name in _semActHanlder.handlers) {\n          var code = \"code\" in semAct ? semAct.code : _ShExValidator.options.semActs[semAct.name];\n          var existing = \"extensions\" in resultsArtifact && semAct.name in resultsArtifact.extensions;\n          var extensionStorage = existing ? resultsArtifact.extensions[semAct.name] : {};\n          const response = _semActHanlder.handlers[semAct.name].dispatch(code, ctx, extensionStorage); debugger\n          if (typeof response === 'boolean') {\n            if (!response)\n              ret.push({ type: \"SemActFailure\", errors: [{ type: \"BooleanSemActFailure\", code: code, ctx }] })\n          } else if (typeof response === 'object' && response.constructor === Array) {\n            if (response.length > 0)\n              ret.push({ type: \"SemActFailure\", errors: response })\n          } else {\n            throw Error(\"unsupported response from semantic action handler: \" + JSON.stringify(response))\n          }\n          if (!existing && Object.keys(extensionStorage).length > 0) {\n            if (!(\"extensions\" in resultsArtifact))\n              resultsArtifact.extensions = {};\n            resultsArtifact.extensions[semAct.name] = extensionStorage;\n          }\n          return ret;\n        }\n        return ret;\n      }, []);\n    }\n  };\n}\n\n/* _compileShapeToAST - compile a shape expression to an abstract syntax tree.\n *\n * currently tested but not used.\n */\nfunction _compileShapeToAST (expression, tripleConstraints, schema) {\n\n  function Epsilon () {\n    this.type = \"Epsilon\";\n  }\n\n  function TripleConstraint (ordinal, predicate, inverse, negated, valueExpr) {\n    this.type = \"TripleConstraint\";\n    // this.ordinal = ordinal; @@ does 1card25\n    this.inverse = !!inverse;\n    this.negated = !!negated;\n    this.predicate = predicate;\n    if (valueExpr !== undefined)\n      this.valueExpr = valueExpr;\n  }\n\n  function Choice (disjuncts) {\n    this.type = \"Choice\";\n    this.disjuncts = disjuncts;\n  }\n\n  function EachOf (conjuncts) {\n    this.type = \"EachOf\";\n    this.conjuncts = conjuncts;\n  }\n\n  function SemActs (expression, semActs) {\n    this.type = \"SemActs\";\n    this.expression = expression;\n    this.semActs = semActs;\n  }\n\n  function KleeneStar (expression) {\n    this.type = \"KleeneStar\";\n    this.expression = expression;\n  }\n\n  function _compileExpression (expr, schema) {\n    var repeated, container;\n\n    /* _repeat: map expr with a min and max cardinality to a corresponding AST with Groups and Stars.\n       expr 1 1 => expr\n       expr 0 1 => Choice(expr, Eps)\n       expr 0 3 => Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps)\n       expr 2 5 => EachOf(expr, expr, Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps))\n       expr 0 * => KleeneStar(expr)\n       expr 1 * => EachOf(expr, KleeneStar(expr))\n       expr 2 * => EachOf(expr, expr, KleeneStar(expr))\n\n       @@TODO: favor Plus over Star if Epsilon not in expr.\n    */\n    function _repeat (expr, min, max) {\n      if (min === undefined) { min = 1; }\n      if (max === undefined) { max = 1; }\n\n      if (min === 1 && max === 1) { return expr; }\n\n      var opts = max === UNBOUNDED ?\n        new KleeneStar(expr) :\n        _seq(max - min).reduce(function (ret, elt, ord) {\n          return ord === 0 ?\n            new Choice([expr, new Epsilon]) :\n            new Choice([new EachOf([expr, ret]), new Epsilon]);\n        }, undefined);\n\n      var reqd = min !== 0 ?\n        new EachOf(_seq(min).map(function (ret) {\n          return expr; // @@ something with ret\n        }).concat(opts)) : opts;\n      return reqd;\n    }\n\n    if (typeof expr === \"string\") { // Inclusion\n      var included = schema._index.tripleExprs[expr].expression;\n      return _compileExpression(included, schema);\n    }\n\n    else if (expr.type === \"TripleConstraint\") {\n      // predicate, inverse, negated, valueExpr, annotations, semActs, min, max\n      var valueExpr = \"valueExprRef\" in expr ?\n        schema.valueExprDefns[expr.valueExprRef] :\n        expr.valueExpr;\n      var ordinal = tripleConstraints.push(expr)-1;\n      var tp = new TripleConstraint(ordinal, expr.predicate, expr.inverse, expr.negated, valueExpr);\n      repeated = _repeat(tp, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"OneOf\") {\n      container = new Choice(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"EachOf\") {\n      container = new EachOf(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else throw Error(\"unexpected expr type: \" + expr.type);\n  }\n\n  return expression ? _compileExpression(expression, schema) : new Epsilon();\n}\n\n// http://stackoverflow.com/questions/9422386/lazy-cartesian-product-of-arrays-arbitrary-nested-loops\nfunction crossProduct(sets) {\n  var n = sets.length, carets = [], args = null;\n\n  function init() {\n    args = [];\n    for (var i = 0; i < n; i++) {\n      carets[i] = 0;\n      args[i] = sets[i][0];\n    }\n  }\n\n  function next() {\n\n    // special case: crossProduct([]).next().next() returns false.\n    if (args !== null && args.length === 0)\n      return false;\n\n    if (args === null) {\n      init();\n      return true;\n    }\n    var i = n - 1;\n    carets[i]++;\n    if (carets[i] < sets[i].length) {\n      args[i] = sets[i][carets[i]];\n      return true;\n    }\n    while (carets[i] >= sets[i].length) {\n      if (i == 0) {\n        return false;\n      }\n      carets[i] = 0;\n      args[i] = sets[i][0];\n      carets[--i]++;\n    }\n    args[i] = sets[i][carets[i]];\n    return true;\n  }\n\n  return {\n    next: next,\n    do: function (block, _context) { // old API\n      return block.apply(_context, args);\n    },\n    // new API because\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments#Description\n    // cautions about functions over arguments.\n    get: function () { return args; }\n  };\n}\n\n/* N3jsTripleToString - simple toString function to make N3.js's triples\n * printable.\n */\nvar N3jsTripleToString = function () {\n  function fmt (n) {\n    return RdfTerm.isLiteral(n) ?\n      [ \"http://www.w3.org/2001/XMLSchema#integer\",\n        \"http://www.w3.org/2001/XMLSchema#float\",\n        \"http://www.w3.org/2001/XMLSchema#double\"\n      ].indexOf(RdfTerm.getLiteralType(n)) !== -1 ?\n      parseInt(RdfTerm.getLiteralValue(n)) :\n      n :\n    RdfTerm.isBlank(n) ?\n      n :\n      \"<\" + n + \">\";\n  }\n  return fmt(this.subject) + \" \" + fmt(this.predicate) + \" \" + fmt(this.object) + \" .\";\n};\n\n/* indexNeighborhood - index triples by predicate\n * returns: {\n *     byPredicate: Object: mapping from predicate to triples containing that\n *                  predicate.\n *\n *     candidates: [[1,3], [0,2]]: mapping from triple to the triple constraints\n *                 it matches.  It is initialized to []. Mappings that remain an\n *                 empty set indicate a triple which didn't matching anything in\n *                 the shape.\n *\n *     misses: list to recieve value constraint failures.\n *   }\n */\nfunction indexNeighborhood (triples) {\n  return {\n    byPredicate: triples.reduce(function (ret, t) {\n      var p = t.predicate;\n      if (!(p in ret))\n        ret[p] = [];\n      ret[p].push(t);\n\n      // If in VERBOSE mode, add a nice toString to N3.js's triple objects.\n      if (VERBOSE)\n        t.toString = N3jsTripleToString;\n\n      return ret;\n    }, {}),\n    candidates: _seq(triples.length).map(function () {\n      return [];\n    }),\n    misses: []\n  };\n}\n\n/* sparqlOrder - sort triples by subject following SPARQL partial ordering.\n */\nfunction sparqlOrder (l, r) {\n  var [lprec, rprec] = [l, r].map(\n    x => RdfTerm.isBlank(x) ? 1 : RdfTerm.isLiteral(x) ? 2 : 3\n  );\n  return lprec === rprec ? l.localeCompare(r) : lprec - rprec;\n}\n\n/* Return a list of n \"\"s.\n *\n * Note that Array(n) on its own returns a \"sparse array\" so Array(n).map(f)\n * never calls f.\n */\nfunction _seq (n) {\n  return n === 0 ?\n    [] :\n    Array(n).join(\" \").split(/ /); // hahaha, javascript, you suck.\n}\n\n/* Expect property p with value v in object o\n */\nfunction expect (o, p, v) {\n  if (!(p in o))\n    runtimeError(\"expected \"+JSON.stringify(o)+\" to have a '\"+p+\"' attribute.\");\n  if (arguments.length > 2 && o[p] !== v)\n    runtimeError(\"expected \"+p+\" attribute '\"+o[p]+\"' to equal '\"+v+\"'.\");\n}\n\nfunction noop () {  }\n\nfunction runtimeError () {\n  var errorStr = Array.prototype.join.call(arguments, \"\");\n  var e = new Error(errorStr);\n  Error.captureStackTrace(e, runtimeError);\n  throw e;\n}\n\n  return {\n    construct: ShExValidator_constructor,\n    start: Start,\n    options: InterfaceOptions\n  };\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExValidator;\n"
        },
        {
          "id": 46,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/nfax-val-1err.js",
          "name": "../shex-core/lib/regex/nfax-val-1err.js",
          "index": 19,
          "index2": 17,
          "size": 20104,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/regex/nfax-val-1err",
              "loc": "6:23-59"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var NFAXVal1Err = (function () {\n  var RdfTerm = require(\"../RdfTerm\");\n\n  var Split = \"<span class='keyword' title='Split'>|</span>\";\n  var Rept  = \"<span class='keyword' title='Repeat'>×</span>\";\n  var Match = \"<span class='keyword' title='Match'>␃</span>\";\n  /* compileNFA - compile regular expression and index triple constraints\n   */\n  var UNBOUNDED = -1;\n\n  function compileNFA (schema, shape, index) {\n    var expression = shape.expression;\n    return NFA();\n\n    function NFA () {\n      // wrapper for states, startNo and matchstate\n      var states = [];\n      var matchstate = State_make(Match, []);\n      var startNo = matchstate;\n      var stack = [];\n      var pair;\n      if (expression) {\n        var pair = walkExpr(expression, []);\n        patch(pair.tail, matchstate);\n        startNo = pair.start;\n      }\n      var ret = {\n        algorithm: \"rbenx\",\n        end: matchstate,\n        states: states,\n        start: startNo,\n        match: rbenx_match\n      }\n      matchstate = states = startNo = null;\n      return ret;\n\n      function walkExpr (expr, stack) {\n        var s, starts;\n        var lastTail;\n        function maybeAddRept (start, tail) {\n          if ((expr.min == undefined || expr.min === 1) &&\n              (expr.max == undefined || expr.max === 1))\n            return {start: start, tail: tail}\n          s = State_make(Rept, [start]);\n          states[s].expr = expr;\n          // cache min/max in normalized form for simplicity of comparison.\n          states[s].min = \"min\" in expr ? expr.min : 1;\n          states[s].max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n          patch(tail, s);\n          return {start: s, tail: [s]}\n        }\n\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return walkExpr(included, stack);\n        }\n\n        else if (expr.type === \"TripleConstraint\") {\n          s = State_make(expr, []);\n          states[s].stack = stack;\n          return {start: s, tail: [s]};\n          // maybeAddRept(s, [s]);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          lastTail = [];\n          starts = [];\n          expr.expressions.forEach(function (nested, ord) {\n            pair = walkExpr(nested, stack.concat({c:expr, e:ord}));\n            starts.push(pair.start);\n            lastTail = lastTail.concat(pair.tail);\n          });\n          s = State_make(Split, starts);\n          states[s].expr = expr;\n          return maybeAddRept(s, lastTail);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          expr.expressions.forEach(function (nested, ord) {\n            pair = walkExpr(nested, stack.concat({c:expr, e:ord}));\n            if (ord === 0)\n              s = pair.start;\n            else\n              patch(lastTail, pair.start);\n            lastTail = pair.tail;\n          });\n          return maybeAddRept(s, lastTail);\n        }\n\n        throw Error(\"unexpected expr type: \" + expr.type);\n      };\n\n      function State_make (c, outs, negated) {\n        var ret = states.length;\n        states.push({c:c, outs:outs});\n        if (negated)\n          states[ret].negated = true; // only include if true for brevity\n        return ret;\n      }\n\n      function patch (l, target) {\n        l.forEach(elt => {\n          states[elt].outs.push(target);\n        });\n      }\n    }\n\n\n    function nfaToString () {\n      var known = {OneOf: [], EachOf: []};\n      function dumpTripleConstraint (tc) {\n        return \"<\" + tc.predicate + \">\";\n      }\n      function card (obj) {\n        var x = \"\";\n        if (\"min\" in obj) x += obj.min;\n        if (\"max\" in obj) x += \",\" + obj.max;\n        return x ? \"{\" + x + \"}\" : \"\";\n      }\n      function junct (j) {\n        var id = known[j.type].indexOf(j);\n        if (id === -1)\n          id = known[j.type].push(j)-1;\n        return j.type + id; // + card(j);\n      }\n      function dumpStackElt (elt) {\n        return junct(elt.c) + \".\" + elt.e + (\"i\" in elt ? \"[\" + elt.i + \"]\" : \"\");\n      }\n      function dumpStack (stack) {\n        return stack.map(elt => { return dumpStackElt(elt); }).join(\"/\");\n      }\n      function dumpNFA (states, startNo) {\n        return states.map((s, i) => {\n          return (i === startNo ? s.c === Match ? \".\" : \"S\" : s.c === Match ? \"E\" : \" \") + i + \" \" + (\n            s.c === Split ? (\"Split-\" + junct(s.expr)) :\n              s.c === Rept ? (\"Rept-\" + junct(s.expr)) :\n              s.c === Match ? \"Match\" :\n              dumpTripleConstraint(s.c)\n          ) + card(s) + \"→\" + s.outs.join(\" | \") + (\"stack\" in s ? dumpStack(s.stack) : \"\");\n        }).join(\"\\n\");\n      }\n      function dumpMatched (matched) {\n        return matched.map(m => {\n          return dumpTripleConstraint(m.c) + \"[\" + m.triples.join(\",\") + \"]\" + dumpStack(m.stack);\n        }).join(\",\");\n      }\n      function dumpThread (thread) {\n        return \"S\" + thread.state + \":\" + Object.keys(thread.repeats).map(k => {\n          return k + \"×\" + thread.repeats[k];\n        }).join(\",\") + \" \" + dumpMatched(thread.matched);\n      }\n      function dumpThreadList (list) {\n        return \"[[\" + list.map(thread => { return dumpThread(thread); }).join(\"\\n  \") + \"]]\";\n      }\n      return {\n        nfa: dumpNFA,\n        stack: dumpStack,\n        stackElt: dumpStackElt,\n        thread: dumpThread,\n        threadList: dumpThreadList\n      };\n    }\n\n    function rbenx_match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, recurse, direct, semActHandler, checkValueExpr, trace) {\n      var rbenx = this;\n      var clist = [], nlist = []; // list of {state:state number, repeats:stateNo->repetitionCount}\n\n      function localExpect (list) {\n        return list.map(st => {\n          var s = rbenx.states[st.state]; // simpler threads are a list of states.\n          return renderAtom(s.c, s.negated);\n        });\n      }\n\n      if (rbenx.states.length === 1)\n        return matchedToResult([], constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr);\n\n      var chosen = null;\n      // var dump = nfaToString();\n      // console.log(dump.nfa(this.states, this.start));\n      addstate(rbenx, clist, this.start, {repeats:{}, avail:[], matched:[], stack:[], errors:[]});\n      while (clist.length) {\n        nlist = [];\n        if (trace)\n          trace.push({threads:[]});\n        for (var threadno = 0; threadno < clist.length; ++threadno) {\n          var thread = clist[threadno];\n          if (thread.state === rbenx.end)\n            continue;\n          var state = rbenx.states[thread.state];\n          var nlistlen = nlist.length;\n          var constraintNo = constraintList.indexOf(state.c);\n          // may be Accept!\n            var min = \"min\" in state.c ? state.c.min : 1;\n            var max = \"max\" in state.c ? state.c.max === UNBOUNDED ? Infinity : state.c.max : 1;\n            if (\"negated\" in state.c && state.c.negated)\n              min = max = 0;\n            if (thread.avail[constraintNo] === undefined)\n              thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].slice();\n            var taken = thread.avail[constraintNo].splice(0, max);\n            if (taken.length >= min) {\n              do {\n                addStates(rbenx, nlist, thread, taken);\n              } while ((function () {\n                if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                  taken.push(thread.avail[constraintNo].shift());\n                  return true; // stay in look to take more.\n                } else {\n                  return false; // no more to take or we're already at max\n                }\n              })());\n          }\n          if (trace)\n            trace[trace.length-1].threads.push({\n              state: clist[threadno].state,\n              to:nlist.slice(nlistlen).map(x => {\n                return stateString(x.state, x.repeats);\n              })\n            });\n        }\n        // console.log(dump.threadList(nlist));\n        if (nlist.length === 0 && chosen === null)\n          return reportError(localExpect(clist, rbenx.states));\n        var t = clist;\n        clist = nlist;\n        nlist = t;\n        var longerChosen = clist.reduce((ret, elt) => {\n          var matchedAll =\n              elt.matched.reduce((ret, m) => {\n                return ret + m.triples.length; // count matched triples\n              }, 0) === tripleToConstraintMapping.reduce((ret, t) => {\n                return t === undefined ? ret : ret + 1; // count expected\n              }, 0);\n          return ret !== null ? ret : (elt.state === rbenx.end && matchedAll) ? elt : null;\n        }, null)\n        if (longerChosen)\n          chosen = longerChosen;\n        // if (longerChosen !== null)\n        //   console.log(JSON.stringify(matchedToResult(longerChosen.matched)));\n      }\n      if (chosen === null)\n        return reportError();\n      function reportError () { return {\n        type: \"Failure\",\n        node: node,\n        errors: localExpect(clist, rbenx.states)\n      } }\n      function localExpect () {\n        return clist.map(t => {\n          var c = rbenx.states[t.state].c;\n          // if (c === Match)\n          //   return { type: \"EndState999\" };\n          var valueExpr = null;\n          if (typeof c.valueExpr === \"string\") { // ShapeRef\n            valueExpr = c.valueExpr;\n            if (RdfTerm.isBlank(valueExpr))\n              valueExpr = schema.shapes[valueExpr];\n          } else if (c.valueExpr) {\n            valueExpr = extend({}, c.valueExpr)\n          }\n          return extend({\n            type: state.c.negated ? \"NegatedProperty\" :\n              t.state === rbenx.end ? \"ExcessTripleViolation\" :\n              \"MissingProperty\",\n            property: state.c.predicate\n          }, valueExpr ? { valueExpr: valueExpr } : {});\n        });\n      }\n      // console.log(\"chosen:\", dump.thread(chosen));\n      return \"errors\" in chosen.matched ?\n        chosen.matched :\n        matchedToResult(chosen.matched, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr);\n    }\n\n    function addStates (rbenx, nlist, thread, taken) {\n      var state = rbenx.states[thread.state];\n      // find the exprs that require repetition\n      var exprs = rbenx.states.map(x => { return x.c === Rept ? x.expr : null; });\n      var newStack = state.stack.map(e => {\n        var i = thread.repeats[exprs.indexOf(e.c)];\n        if (i === undefined)\n          i = 0; // expr has no repeats\n        else\n          i = i-1;\n        return { c:e.c, e:e.e, i:i };\n      });\n      var withIndexes = {\n        c: state.c,\n        triples: taken,\n        stack: newStack\n      };\n      thread.matched = thread.matched.concat(withIndexes);\n      state.outs.forEach(o => { // single out if NFA includes epsilons\n        addstate(rbenx, nlist, o, thread);\n      });\n    }\n\n    function addstate (rbenx, list, stateNo, thread, seen) {\n      seen = seen || [];\n      var seenkey = stateString(stateNo, thread.repeats);\n      if (seen.indexOf(seenkey) !== -1)\n        return;\n      seen.push(seenkey);\n\n      var s = rbenx.states[stateNo];\n      if (s.c === Split) {\n        return s.outs.reduce((ret, o, idx) => {\n          return ret.concat(addstate(rbenx, list, o, thread, seen));\n        }, []);\n        // } else if (s.c.type === \"OneOf\" || s.c.type === \"EachOf\") { // don't need Rept\n      } else if (s.c === Rept) {\n        var ret = [];\n        // matched = [matched].concat(\"Rept\" + s.expr);\n        if (!(stateNo in thread.repeats))\n          thread.repeats[stateNo] = 0;\n        var repetitions = thread.repeats[stateNo];\n        // add(r < s.min ? outs[0] : r >= s.min && < s.max ? outs[0], outs[1] : outs[1])\n        if (repetitions < s.max)\n          ret = ret.concat(addstate(rbenx, list, s.outs[0], incrmRepeat(thread, stateNo), seen)); // outs[0] to repeat\n        if (repetitions >= s.min && repetitions <= s.max)\n          ret = ret.concat(addstate(rbenx, list, s.outs[1], resetRepeat(thread, stateNo), seen)); // outs[1] when done\n        return ret;\n      } else {\n        // if (stateNo !== rbenx.end || !thread.avail.reduce((r2, avail) => { faster if we trim early??\n        //   return r2 || avail.length > 0;\n        // }, false))\n        return [list.push({ // return [new list element index]\n          state:stateNo,\n          repeats:thread.repeats,\n          avail:thread.avail.map(a => { // copy parent thread's avail vector\n            return a.slice();\n          }),\n          stack:thread.stack,\n          matched:thread.matched,\n          errors: thread.errors\n        }) - 1];\n      }\n    }\n\n    function resetRepeat (thread, repeatedState) {\n      var trimmedRepeats = Object.keys(thread.repeats).reduce((r, k) => {\n        if (parseInt(k) !== repeatedState) // ugh, hash keys are strings\n          r[k] = thread.repeats[k];\n        return r;\n      }, {});\n      return {state:thread.state/*???*/, repeats:trimmedRepeats, matched:thread.matched, avail:thread.avail.slice(), stack:thread.stack};\n    }\n\n    function incrmRepeat (thread, repeatedState) {\n      var incrmedRepeats = Object.keys(thread.repeats).reduce((r, k) => {\n        r[k] = parseInt(k) == repeatedState ? thread.repeats[k] + 1 : thread.repeats[k];\n        return r;\n      }, {});\n      return {state:thread.state/*???*/, repeats:incrmedRepeats, matched:thread.matched, avail:thread.avail.slice(), stack:thread.stack};\n    }\n\n    function stateString (state, repeats) {\n      var rs = Object.keys(repeats).map(rpt => {\n        return rpt+\":\"+repeats[rpt];\n      }).join(\",\");\n      return rs.length ? state + \"-\" + rs : \"\"+state;\n    }\n\n    function matchedToResult (matched, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr) {\n      var last = [];\n      var errors = [];\n      var skips = [];\n      var ret = matched.reduce((out, m) => {\n        var mis = 0;\n        var ptr = out, t;\n        while (mis < last.length &&\n               m.stack[mis].c === last[mis].c && // constraint\n               m.stack[mis].i === last[mis].i && // iteration number\n               m.stack[mis].e === last[mis].e) { // (dis|con)junction number\n            ptr = ptr.solutions[last[mis].i].expressions[last[mis].e];\n          ++mis;\n        }\n        while (mis < m.stack.length) {\n          if (mis >= last.length) {\n            last.push({});\n          }\n          if (m.stack[mis].c !== last[mis].c) {\n            t = [];\n            ptr.type = m.stack[mis].c.type === \"EachOf\" ? \"EachOfSolutions\" : \"OneOfSolutions\", ptr.solutions = t;\n            if (\"min\" in m.stack[mis].c)\n              ptr.min = m.stack[mis].c.min;\n            if (\"max\" in m.stack[mis].c)\n              ptr.max = m.stack[mis].c.max;\n            if (\"annotations\" in m.stack[mis].c)\n              ptr.annotations = m.stack[mis].c.annotations;\n            if (\"semActs\" in m.stack[mis].c)\n              ptr.semActs = m.stack[mis].c.semActs;\n            ptr = t;\n            last[mis].i = null;\n            // !!! on the way out to call after valueExpr test\n            if (\"semActs\" in m.stack[mis].c) {\n              const errors = semActHandler.dispatchAll(m.stack[mis].c.semActs, \"???\", ptr);\n              if (errors.length)\n                throw errors;\n            }\n            if (ret && \"semActs\" in expr) { ret.semActs = expr.semActs; }\n          } else {\n            ptr = ptr.solutions;\n          }\n          if (m.stack[mis].i !== last[mis].i) {\n            t = [];\n            ptr[m.stack[mis].i] = {\n              type:m.stack[mis].c.type === \"EachOf\" ? \"EachOfSolution\" : \"OneOfSolution\",\n              expressions: t};\n            ptr = t;\n            last[mis].e = null;\n          } else {\n            ptr = ptr[last[mis].i].expressions;\n          }\n          if (m.stack[mis].e !== last[mis].e) {\n            t = {};\n            ptr[m.stack[mis].e] = t;\n            if (m.stack[mis].e > 0 && ptr[m.stack[mis].e-1] === undefined && skips.indexOf(ptr) === -1)\n              skips.push(ptr);\n            ptr = t;\n            last.length = mis + 1; // chop off last so we create everything underneath\n          } else {\n            throw \"how'd we get here?\"\n            ptr = ptr[last[mis].e];\n          }\n          ++mis;\n        }\n        ptr.type = \"TripleConstraintSolutions\";\n        if (\"min\" in m.c)\n          ptr.min = m.c.min;\n        if (\"max\" in m.c)\n          ptr.max = m.c.max;\n        ptr.predicate = m.c.predicate;\n        if (\"valueExpr\" in m.c)\n          ptr.valueExpr = m.c.valueExpr;\n        if (\"productionLabel\" in m.c)\n          ptr.productionLabel = m.c.productionLabel;\n        ptr.solutions = m.triples.map(tno => {\n          var triple = neighborhood[tno];\n          var ret = {\n            type: \"TestedTriple\",\n            subject: triple.subject,\n            predicate: triple.predicate,\n            object: ldify(triple.object)\n          };\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n          function diver (focus, shape, dive) {\n            var sub = dive(focus, shape);\n            if (\"errors\" in sub) {\n              // console.dir(sub);\n              var err = {\n                type: \"ReferenceError\", focus: focus,\n                shape: shape, errors: sub\n              };\n              if (typeof shapeLabel === \"string\" && RdfTerm.isBlank(shapeLabel))\n                err.referencedShape = shape;\n              return [err];\n            }\n            if ((\"solution\" in sub || \"solutions\" in sub) && Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                sub.type === \"Recursion\")\n              ret.referenced = sub; // !!! needs to aggregate errors and solutions\n            return [];\n          }\n          function diveRecurse (focus, shapeLabel) {\n            return diver(focus, shapeLabel, recurse);\n          }\n          function diveDirect (focus, shapeLabel) {\n            return diver(focus, shapeLabel, direct);\n          }\n          if (\"valueExpr\" in ptr)\n            errors = errors.concat(checkValueExpr(ptr.inverse ? triple.subject : triple.object, ptr.valueExpr, diveRecurse, diveDirect));\n\n          if (errors.length === 0 && \"semActs\" in m.c)\n            [].push.apply(errors, semActHandler.dispatchAll(m.c.semActs, triple, ret));\n          return ret;\n        })\n        if (\"annotations\" in m.c)\n          ptr.annotations = m.c.annotations;\n        if (\"semActs\" in m.c)\n          ptr.semActs = m.c.semActs;\n        last = m.stack.slice();\n        return out;\n      }, {});\n\n      if (errors.length)\n        return {\n          type: \"SemActFailure\",\n          errors: errors\n        };\n\n      // Clear out the nulls for the expressions with min:0 and no matches.\n      // <S> { (:p .; :q .)?; :r . } \\ { <s> :r 1 } -> i:0, e:1 resulting in null at e=0\n      // Maybe we want these nulls in expressions[] to make it clear that there are holes?\n      skips.forEach(skip => {\n        for (var exprNo = 0; exprNo < skip.length; ++exprNo)\n          if (skip[exprNo] === null || skip[exprNo] === undefined)\n            skip.splice(exprNo--, 1);\n      });\n\n      if (\"semActs\" in shape)\n        ret.semActs = shape.semActs;\n      return ret;\n    }\n  }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n// ## Exports\n\nreturn exports = {\n  name: \"nfax-val-1err\",\n  description: \"simple regular expression engine with n out states\",\n  compile: compileNFA\n};\n\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = NFAXVal1Err;\n"
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "index": 20,
          "index2": 40,
          "size": 10480,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/api",
              "loc": "4:9-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExLoader** return promise to load ShExC, ShExJ and N3 (Turtle) files.\n\nvar ShExApi = function (config) {\n\n  var ShEx = require(\"@shexjs/core\");\n  var ShExUtil = ShEx.Util;\n  var ShExParser = require(\"@shexjs/parser\");\n\n  const api = { load: LoadPromise, loadExtensions: LoadExtensions, GET: GET, loadShExImports_NotUsed: loadShExImports_NotUsed };\n  return api\n  \n  async function GET (url, mediaType) {\n    var m;\n    return (m = url.match(\"^data:([^,]+),(.*)$\"))\n      ? Promise.resolve({text: m[2], url: m[0]}) // Read from data: URL\n      : (url.match(\"^(blob:)?[a-z]+://.\"))\n      ? myHttpRequest(url, mediaType) // whatever fetch handles\n      : (() => { throw Error(`Don't know how to fetch ${url}`) })()\n\n    async function myHttpRequest(url, mediaType) {\n      if (typeof config.fetch !== \"function\")\n        throw Error(`Unable to fetch ${url} with fetch=${config.fetch}`)\n      let resp\n      try {\n        resp = await config.fetch(url, {\n          headers: {\n            'Accept': 'text/shex,text/turtle,*/*'\n          }\n        })\n      } catch (e) {\n        // DNS failure\n        // no route to host\n        // connection refused\n        throw Error(`GET <${url}> network failure: ${e.message}`)\n      }\n      if (!resp.ok)\n        throw Error(`GET <${url}> failed: ${resp.status} ${resp.statusText}`)\n      const text = await resp.text()\n      return {text, url}\n    }\n  }\n\n  function loadList (src, metaList, mediaType, parserWrapper, target, options, loadImports) {\n    return src.map(\n      async p =>\n        typeof p === \"object\" ? mergeSchema(p) : await loadParseMergeSchema(p)\n    )\n\n    async function mergeSchema (obj) {\n      var meta = addMeta(obj.url, mediaType)\n      try {\n        ShExUtil.merge(target, obj.schema, true, true)\n        meta._prefixes = target._prefixes || {}\n        meta.base = target._base\n        loadImports(obj.schema)\n        return [mediaType, obj.url]\n      } catch (e) {\n        var e2 = Error(\"error merging schema object \" + obj.schema + \": \" + e)\n        e2.stack = e.stack\n        throw e2\n      }\n    }\n\n    async function loadParseMergeSchema (p) {\n      return api.GET(p, mediaType).then(function (loaded) {\n        return parserWrapper(loaded.text, mediaType, loaded.url, target,\n                             addMeta(loaded.url, mediaType), options, loadImports)\n      })\n    }\n\n    function addMeta (url, mediaType) {\n      var meta = {\n        mediaType: mediaType,\n        url: url,\n        base: url,\n        prefixes: {}\n      }\n      metaList.push(meta)\n      return meta\n    }\n  }\n\n  /* LoadPromise - load shex and json files into a single Schema and turtle into\n   * a graph (Data).\n   */\n  async function LoadPromise (shex, json, turtle, jsonld, schemaOptions = {}, dataOptions = {}) {\n    var returns = {\n      schema: ShExUtil.emptySchema(),\n      data: new config.rdfjs.Store(),\n      schemaMeta: [],\n      dataMeta: []\n    }\n    var promises = []\n    var schemasSeen = shex.concat(json).map(p => {\n      // might be already loaded objects with a url property.\n      return typeof p === \"object\" ? p.url : p\n    })\n    var transform = null\n    if (schemaOptions && \"iriTransform\" in schemaOptions) {\n      transform = schemaOptions.iriTransform\n      delete schemaOptions.iriTransform\n    }\n\n    var allLoaded = DynamicPromise()\n    function loadImports (schema) {\n      if (!(\"imports\" in schema))\n        return schema\n      if (schemaOptions.keepImports) {\n        return schema\n      }\n      var ret = Object.assign({}, schema)\n      var imports = ret.imports\n      delete ret.imports\n      schema.imports.map(function (i) {\n        return transform ? transform(i) : i\n      }).filter(function (i) {\n        return schemasSeen.indexOf(i) === -1\n      }).map(i => {\n        schemasSeen.push(i)\n        allLoaded.add(api.GET(i).then(function (loaded) {\n          var meta = {\n            // mediaType: mediaType,\n            url: loaded.url,\n            base: loaded.url,\n            prefixes: {}\n          }\n          // metaList.push(meta)\n          return parseShExC(loaded.text, \"text/shex\", loaded.url,\n                            returns.schema, meta, schemaOptions, loadImports)\n        })); // addAfter would be after invoking schema.\n      })\n      return ret\n    }\n\n    // gather all the potentially remote inputs\n    promises = promises.\n      concat(loadList(shex, returns.schemaMeta, \"text/shex\",\n                      parseShExC, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(json, returns.schemaMeta, \"text/json\",\n                      parseShExJ, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(turtle, returns.dataMeta, \"text/turtle\",\n                      parseTurtle, returns.data, dataOptions)).\n      concat(loadList(jsonld, returns.dataMeta, \"application/ld+json\",\n                      parseJSONLD, returns.data, dataOptions))\n    return allLoaded.all(promises).then(function (resources) {\n      if (returns.schemaMeta.length > 0)\n        ShExUtil.isWellDefined(returns.schema)\n      return returns\n    })\n  }\n\n  function DynamicPromise () {\n    var promises = []\n    var results = []\n    var completedPromises = 0\n    var resolveSelf, rejectSelf\n    var self = new Promise(function (resolve, reject) {\n      resolveSelf = resolve; rejectSelf = reject\n    })\n    self.all = function (pz) {\n      pz.forEach(function (promise, index) {\n        promises.push(promise)\n        addThen(promise, index)\n      })\n      return self\n    }\n    self.add = function (promise) {\n      promises.push(promise)\n      addThen(promise, promises.length - 1)\n      return self\n    }\n    return self\n\n    function addThen (promise, index) {\n      promise.then(function (value) {\n        results[index] = value\n        ++completedPromises\n        if(completedPromises === promises.length) {\n          resolveSelf(results)\n        }\n      }).catch(function (error) {\n        rejectSelf(error)\n      })\n    }\n  }\n\n  function parseShExC (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    var parser = schemaOptions && \"parser\" in schemaOptions ?\n        schemaOptions.parser :\n        ShExParser.construct(url, {}, schemaOptions)\n    try {\n      var s = parser.parse(text)\n      // !! horrible hack until I set a variable to know if there's a BASE.\n      if (s.base === url) delete s.base\n      meta.prefixes = s._prefixes || {}\n      meta.base = s._base || meta.base\n      ShExUtil.merge(schema, loadImports(s), false, true)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      e.message = \"error parsing ShEx \" + url + \": \" + e.message\n      return Promise.reject(e)\n    }\n  }\n\n  function loadShExImports_NotUsed (from, parser, transform) {\n    var schemasSeen = [from]\n    var ret = { type: \"Schema\" }\n    return api.GET(from).then(load999Imports).then(function () {\n      ShExUtil.isWellDefined(ret)\n      return ret\n    })\n    function load999Imports (loaded) {\n      var schema = parser.parse(loaded.text)\n      var imports = schema.imports\n      delete schema.imports\n      ShExUtil.merge(ret, schema, false, true)\n      if (imports) {\n        var rest = imports\n            .map(function (i) {\n              return transform ? transform(i) : i\n            }).\n            filter(function (i) {\n              return schemasSeen.indexOf(i) === -1\n            })\n        return Promise.all(rest.map(i => {\n          schemasSeen.push(i)\n          return api.GET(i).then(load999Imports)\n        })).then(a => {\n          return null\n        })\n      } else {\n        return null\n      }\n    }\n  }\n\n  function parseShExJ (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    try {\n      var s = ShExUtil.ShExJtoAS(JSON.parse(text))\n      ShExUtil.merge(schema, s, true, true)\n      meta.prefixes = schema._prefixes\n      meta.base = schema.base\n      loadImports(s)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      var e2 = Error(\"error parsing JSON \" + url + \": \" + e)\n      // e2.stack = e.stack\n      return Promise.reject(e2)\n    }\n  }\n\n  function parseTurtle (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"}).\n        parse(text,\n              function (error, triple, prefixes) {\n                if (prefixes) {\n                  meta.prefixes = prefixes\n                  // data.addPrefixes(prefixes)\n                }\n                if (error) {\n                  reject(\"error parsing \" + url + \": \" + error)\n                } else if (triple) {\n                  data.addQuad(triple)\n                } else {\n                  meta.base = this._base\n                  resolve([mediaType, url])\n                }\n              })\n    })\n  }\n\n  /* parseTurtle999 - a variant of parseTurtle with no callback.\n   * so, which is \"better\"?\n   */\n  function parseTurtle999 (text, mediaType, url, data, meta, dataOptions) {\n    try {\n      var p = new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"})\n      var triples = p.parse(text)\n      meta.prefixes = p._prefixes\n      meta.base = p._base\n      data.addPrefixes(p._prefixes)\n      data.addTriples(triples)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      return Promise.reject(Error(\"error parsing \" + url + \": \" + e))\n    }\n  }\n\n  function parseJSONLD (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      var struct = JSON.parse(text)\n      config.jsonld.toRDF(struct, {format: \"application/nquads\", base: url}, function (lderr, nquads) {\n        if (lderr) {\n          reject(\"error parsing JSON-ld \" + url + \": \" + lderr)\n        } else {\n          meta.prefixes = {}; // @@ take from @context?\n          meta.base = url;    // @@ take from @context.base? (or vocab?)\n          resolve(parseTurtle(nquads, mediaType, url, data, meta))\n        }\n      })\n    })\n  }\n\n  function LoadExtensions (globs) {\n    return globs.reduce(\n      (list, glob) =>\n        list.concat(require(\"glob\").glob.sync(glob))\n      , []).\n      reduce(function (ret, path) {\n        try {\n\t  var t = require(path)\n\t  ret[t.url] = t\n\t  return ret\n        } catch (e) {\n\t  console.warn(\"ShEx extension \\\"\" + moduleDir + \"\\\" not loadable: \" + e)\n\t  return ret\n        }\n      }, {})\n  }\n\n}\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExApi\n"
        },
        {
          "id": 48,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "index": 22,
          "index2": 19,
          "size": 222161,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "issuerId": 23,
          "issuerName": "../shex-parser/shex-parser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 113,
            "building": 140,
            "dependencies": 106
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "module": "../shex-parser/shex-parser.js",
              "moduleName": "../shex-parser/shex-parser.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExJison",
              "loc": "5:14-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShExJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[7,18,19,20,21,23,26,189,211,212],$V1=[1,25],$V2=[1,29],$V3=[1,24],$V4=[1,28],$V5=[1,27],$V6=[2,12],$V7=[2,13],$V8=[2,14],$V9=[7,18,19,20,21,23,26,211,212],$Va=[1,35],$Vb=[1,38],$Vc=[1,37],$Vd=[2,18],$Ve=[2,19],$Vf=[19,21,65,67,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vg=[2,57],$Vh=[1,47],$Vi=[1,48],$Vj=[1,49],$Vk=[19,21,35,39,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vl=[2,234],$Vm=[2,235],$Vn=[1,51],$Vo=[1,54],$Vp=[1,53],$Vq=[2,256],$Vr=[2,257],$Vs=[2,260],$Vt=[2,258],$Vu=[2,259],$Vv=[2,15],$Vw=[2,17],$Vx=[19,21,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vy=[1,72],$Vz=[2,26],$VA=[2,27],$VB=[2,28],$VC=[115,121,123,185,215],$VD=[2,135],$VE=[1,98],$VF=[1,106],$VG=[1,84],$VH=[1,89],$VI=[1,90],$VJ=[1,91],$VK=[1,97],$VL=[1,102],$VM=[1,103],$VN=[1,104],$VO=[1,107],$VP=[1,108],$VQ=[1,109],$VR=[1,110],$VS=[1,111],$VT=[1,112],$VU=[1,94],$VV=[1,105],$VW=[2,58],$VX=[1,114],$VY=[1,115],$VZ=[1,116],$V_=[1,122],$V$=[1,123],$V01=[47,49],$V11=[2,87],$V21=[2,88],$V31=[189,191],$V41=[1,138],$V51=[1,141],$V61=[1,140],$V71=[2,16],$V81=[7,18,19,20,21,23,26,47,211,212],$V91=[2,43],$Va1=[7,18,19,20,21,23,26,47,49,211,212],$Vb1=[2,50],$Vc1=[2,32],$Vd1=[2,65],$Ve1=[2,70],$Vf1=[2,67],$Vg1=[1,175],$Vh1=[1,176],$Vi1=[1,177],$Vj1=[1,180],$Vk1=[1,183],$Vl1=[2,73],$Vm1=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,186,189,211,212,215],$Vn1=[2,91],$Vo1=[7,18,19,20,21,23,26,47,49,186,189,211,212],$Vp1=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,186,189,211,212],$Vq1=[7,18,19,20,21,23,26,47,49,75,76,77,97,98,99,100,115,121,123,185,186,189,211,212,215],$Vr1=[2,104],$Vs1=[2,103],$Vt1=[7,18,19,20,21,23,26,47,49,97,98,99,100,108,109,110,111,112,113,186,189,211,212],$Vu1=[2,98],$Vv1=[2,97],$Vw1=[1,198],$Vx1=[1,200],$Vy1=[1,202],$Vz1=[1,201],$VA1=[2,108],$VB1=[2,109],$VC1=[2,110],$VD1=[2,106],$VE1=[2,233],$VF1=[19,21,67,77,96,104,105,159,181,200,201,202,203,204,205,206,207,208,209,211],$VG1=[2,179],$VH1=[7,18,19,20,21,23,26,47,49,108,109,110,111,112,113,186,189,211,212],$VI1=[2,100],$VJ1=[2,114],$VK1=[1,210],$VL1=[1,211],$VM1=[1,212],$VN1=[1,213],$VO1=[96,104,105,202,203,204,205],$VP1=[2,31],$VQ1=[2,35],$VR1=[2,38],$VS1=[2,41],$VT1=[2,89],$VU1=[2,225],$VV1=[2,226],$VW1=[2,227],$VX1=[1,261],$VY1=[1,266],$VZ1=[1,247],$V_1=[1,252],$V$1=[1,253],$V02=[1,254],$V12=[1,260],$V22=[1,257],$V32=[1,265],$V42=[1,268],$V52=[1,269],$V62=[1,270],$V72=[1,276],$V82=[1,277],$V92=[2,20],$Va2=[2,49],$Vb2=[2,56],$Vc2=[2,61],$Vd2=[2,64],$Ve2=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,211,212],$Vf2=[2,83],$Vg2=[2,84],$Vh2=[2,29],$Vi2=[2,33],$Vj2=[2,69],$Vk2=[2,66],$Vl2=[2,71],$Vm2=[2,68],$Vn2=[7,18,19,20,21,23,26,47,49,97,98,99,100,186,189,211,212],$Vo2=[1,322],$Vp2=[1,330],$Vq2=[1,331],$Vr2=[1,332],$Vs2=[1,338],$Vt2=[1,339],$Vu2=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,189,211,212,215],$Vv2=[2,223],$Vw2=[7,18,19,20,21,23,26,47,49,189,211,212],$Vx2=[1,347],$Vy2=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,189,211,212],$Vz2=[2,102],$VA2=[2,107],$VB2=[2,94],$VC2=[1,357],$VD2=[2,95],$VE2=[2,96],$VF2=[2,101],$VG2=[19,21,65,156,195,211],$VH2=[2,163],$VI2=[2,137],$VJ2=[1,372],$VK2=[1,371],$VL2=[1,377],$VM2=[1,381],$VN2=[1,380],$VO2=[1,379],$VP2=[1,386],$VQ2=[1,389],$VR2=[1,385],$VS2=[1,388],$VT2=[19,21,211,212],$VU2=[1,400],$VV2=[1,406],$VW2=[1,395],$VX2=[1,399],$VY2=[1,409],$VZ2=[1,410],$V_2=[1,411],$V$2=[1,398],$V03=[1,412],$V13=[1,413],$V23=[1,418],$V33=[1,419],$V43=[1,420],$V53=[1,421],$V63=[1,414],$V73=[1,415],$V83=[1,416],$V93=[1,417],$Va3=[1,405],$Vb3=[2,113],$Vc3=[2,118],$Vd3=[2,120],$Ve3=[2,121],$Vf3=[2,122],$Vg3=[2,248],$Vh3=[2,249],$Vi3=[2,250],$Vj3=[2,251],$Vk3=[2,119],$Vl3=[2,30],$Vm3=[2,39],$Vn3=[2,36],$Vo3=[2,42],$Vp3=[2,37],$Vq3=[1,453],$Vr3=[2,40],$Vs3=[1,489],$Vt3=[1,522],$Vu3=[1,523],$Vv3=[1,524],$Vw3=[1,527],$Vx3=[2,44],$Vy3=[2,51],$Vz3=[2,60],$VA3=[2,62],$VB3=[2,72],$VC3=[47,49,66],$VD3=[1,587],$VE3=[47,49,66,75,76,77,115,121,123,185,186,189,215],$VF3=[47,49,66,186,189],$VG3=[47,49,66,92,93,94,97,98,99,100,186,189],$VH3=[47,49,66,75,76,77,97,98,99,100,115,121,123,185,186,189,215],$VI3=[47,49,66,97,98,99,100,108,109,110,111,112,113,186,189],$VJ3=[47,49,66,108,109,110,111,112,113,186,189],$VK3=[47,66],$VL3=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,211,212,215],$VM3=[2,93],$VN3=[2,92],$VO3=[2,222],$VP3=[1,629],$VQ3=[1,632],$VR3=[1,628],$VS3=[1,631],$VT3=[2,90],$VU3=[2,130],$VV3=[2,105],$VW3=[2,99],$VX3=[2,111],$VY3=[2,112],$VZ3=[2,142],$V_3=[2,143],$V$3=[1,649],$V04=[2,144],$V14=[117,131],$V24=[2,149],$V34=[2,150],$V44=[2,152],$V54=[1,652],$V64=[1,653],$V74=[19,21,195,211],$V84=[2,171],$V94=[1,661],$Va4=[117,131,136,137],$Vb4=[2,161],$Vc4=[19,21,115,121,123,185,211,212,215],$Vd4=[19,21,115,121,123,185,195,211,215],$Ve4=[2,231],$Vf4=[2,232],$Vg4=[2,178],$Vh4=[1,696],$Vi4=[19,21,67,77,96,104,105,159,174,181,200,201,202,203,204,205,206,207,208,209,211],$Vj4=[2,228],$Vk4=[2,229],$Vl4=[2,230],$Vm4=[2,241],$Vn4=[2,244],$Vo4=[2,238],$Vp4=[2,239],$Vq4=[2,240],$Vr4=[2,246],$Vs4=[2,247],$Vt4=[2,252],$Vu4=[2,253],$Vv4=[2,254],$Vw4=[2,255],$Vx4=[19,21,67,77,96,104,105,107,159,174,181,200,201,202,203,204,205,206,207,208,209,211],$Vy4=[1,728],$Vz4=[1,775],$VA4=[1,830],$VB4=[1,840],$VC4=[1,876],$VD4=[1,912],$VE4=[2,63],$VF4=[47,49,66,97,98,99,100,186,189],$VG4=[47,49,66,75,76,77,115,121,123,185,189,215],$VH4=[47,49,66,189],$VI4=[1,934],$VJ4=[47,49,66,92,93,94,97,98,99,100,189],$VK4=[1,944],$VL4=[1,981],$VM4=[1,1017],$VN4=[2,224],$VO4=[1,1028],$VP4=[1,1034],$VQ4=[1,1033],$VR4=[19,21,96,104,105,200,201,202,203,204,205,206,207,208,209,211],$VS4=[1,1054],$VT4=[1,1060],$VU4=[1,1059],$VV4=[1,1080],$VW4=[1,1086],$VX4=[1,1085],$VY4=[2,131],$VZ4=[2,145],$V_4=[2,147],$V$4=[2,151],$V05=[2,153],$V15=[2,154],$V25=[2,158],$V35=[2,160],$V45=[2,165],$V55=[2,166],$V65=[1,1112],$V75=[1,1115],$V85=[1,1111],$V95=[1,1114],$Va5=[1,1125],$Vb5=[2,218],$Vc5=[2,236],$Vd5=[2,237],$Ve5=[1,1127],$Vf5=[1,1129],$Vg5=[1,1131],$Vh5=[19,21,67,77,96,104,105,159,175,181,200,201,202,203,204,205,206,207,208,209,211],$Vi5=[1,1135],$Vj5=[1,1141],$Vk5=[1,1144],$Vl5=[1,1145],$Vm5=[1,1146],$Vn5=[1,1134],$Vo5=[1,1147],$Vp5=[1,1148],$Vq5=[1,1153],$Vr5=[1,1154],$Vs5=[1,1155],$Vt5=[1,1156],$Vu5=[1,1149],$Vv5=[1,1150],$Vw5=[1,1151],$Vx5=[1,1152],$Vy5=[1,1140],$Vz5=[2,242],$VA5=[2,245],$VB5=[2,123],$VC5=[1,1186],$VD5=[1,1192],$VE5=[1,1224],$VF5=[1,1230],$VG5=[1,1289],$VH5=[1,1336],$VI5=[47,49,66,75,76,77,115,121,123,185,215],$VJ5=[47,49,66,92,93,94,97,98,99,100],$VK5=[1,1412],$VL5=[1,1459],$VM5=[2,219],$VN5=[2,220],$VO5=[2,221],$VP5=[7,18,19,20,21,23,26,47,49,75,76,77,107,115,121,123,185,186,189,211,212,215],$VQ5=[7,18,19,20,21,23,26,47,49,107,186,189,211,212],$VR5=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,107,186,189,211,212],$VS5=[2,148],$VT5=[2,146],$VU5=[2,155],$VV5=[2,159],$VW5=[2,156],$VX5=[2,157],$VY5=[19,21,39,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$VZ5=[1,1519],$V_5=[66,131],$V$5=[1,1522],$V06=[1,1523],$V16=[66,131,136,137],$V26=[2,201],$V36=[1,1539],$V46=[19,21,67,77,96,104,105,159,174,175,181,200,201,202,203,204,205,206,207,208,209,211],$V56=[19,21,67,77,96,104,105,107,159,174,175,181,200,201,202,203,204,205,206,207,208,209,211],$V66=[2,243],$V76=[1,1577],$V86=[1,1643],$V96=[1,1649],$Va6=[1,1648],$Vb6=[1,1669],$Vc6=[1,1675],$Vd6=[1,1674],$Ve6=[1,1695],$Vf6=[1,1701],$Vg6=[1,1700],$Vh6=[1,1742],$Vi6=[1,1748],$Vj6=[1,1780],$Vk6=[1,1786],$Vl6=[1,1801],$Vm6=[1,1807],$Vn6=[1,1806],$Vo6=[1,1827],$Vp6=[1,1833],$Vq6=[1,1832],$Vr6=[1,1853],$Vs6=[1,1859],$Vt6=[1,1858],$Vu6=[1,1900],$Vv6=[1,1906],$Vw6=[1,1938],$Vx6=[1,1944],$Vy6=[117,131,136,137,186,189],$Vz6=[2,168],$VA6=[1,1962],$VB6=[1,1963],$VC6=[1,1964],$VD6=[1,1965],$VE6=[117,131,136,137,152,153,154,155,186,189],$VF6=[2,34],$VG6=[47,117,131,136,137,152,153,154,155,186,189],$VH6=[2,47],$VI6=[47,49,117,131,136,137,152,153,154,155,186,189],$VJ6=[2,54],$VK6=[1,1994],$VL6=[1,2031],$VM6=[1,2064],$VN6=[1,2070],$VO6=[1,2069],$VP6=[1,2090],$VQ6=[1,2096],$VR6=[1,2095],$VS6=[1,2117],$VT6=[1,2123],$VU6=[1,2122],$VV6=[1,2144],$VW6=[1,2150],$VX6=[1,2149],$VY6=[1,2170],$VZ6=[1,2176],$V_6=[1,2175],$V$6=[1,2197],$V07=[1,2203],$V17=[1,2202],$V27=[1,2272],$V37=[47,49,66,75,76,77,107,115,121,123,185,186,189,215],$V47=[47,49,66,107,186,189],$V57=[47,49,66,92,93,94,97,98,99,100,107,186,189],$V67=[1,2386],$V77=[2,169],$V87=[2,173],$V97=[2,174],$Va7=[2,175],$Vb7=[2,176],$Vc7=[2,45],$Vd7=[2,52],$Ve7=[2,59],$Vf7=[2,79],$Vg7=[2,75],$Vh7=[2,81],$Vi7=[1,2469],$Vj7=[2,78],$Vk7=[47,49,75,76,77,97,98,99,100,115,117,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vl7=[47,49,75,76,77,115,117,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vm7=[47,49,97,98,99,100,108,109,110,111,112,113,117,131,136,137,152,153,154,155,186,189],$Vn7=[47,49,92,93,94,97,98,99,100,117,131,136,137,152,153,154,155,186,189],$Vo7=[2,85],$Vp7=[2,86],$Vq7=[47,49,108,109,110,111,112,113,117,131,136,137,152,153,154,155,186,189],$Vr7=[1,2523],$Vs7=[1,2529],$Vt7=[1,2612],$Vu7=[1,2645],$Vv7=[1,2651],$Vw7=[1,2650],$Vx7=[1,2671],$Vy7=[1,2677],$Vz7=[1,2676],$VA7=[1,2698],$VB7=[1,2704],$VC7=[1,2703],$VD7=[1,2725],$VE7=[1,2731],$VF7=[1,2730],$VG7=[1,2751],$VH7=[1,2757],$VI7=[1,2756],$VJ7=[1,2778],$VK7=[1,2784],$VL7=[1,2783],$VM7=[1,2825],$VN7=[1,2858],$VO7=[1,2864],$VP7=[1,2863],$VQ7=[1,2884],$VR7=[1,2890],$VS7=[1,2889],$VT7=[1,2911],$VU7=[1,2917],$VV7=[1,2916],$VW7=[1,2938],$VX7=[1,2944],$VY7=[1,2943],$VZ7=[1,2964],$V_7=[1,2970],$V$7=[1,2969],$V08=[1,2991],$V18=[1,2997],$V28=[1,2996],$V38=[117,131,136,137,189],$V48=[1,3016],$V58=[2,48],$V68=[2,55],$V78=[2,74],$V88=[2,80],$V98=[2,76],$Va8=[2,82],$Vb8=[47,49,97,98,99,100,117,131,136,137,152,153,154,155,186,189],$Vc8=[1,3040],$Vd8=[66,131,136,137,186,189],$Ve8=[1,3049],$Vf8=[1,3050],$Vg8=[1,3051],$Vh8=[1,3052],$Vi8=[66,131,136,137,152,153,154,155,186,189],$Vj8=[47,66,131,136,137,152,153,154,155,186,189],$Vk8=[47,49,66,131,136,137,152,153,154,155,186,189],$Vl8=[1,3081],$Vm8=[1,3150],$Vn8=[1,3156],$Vo8=[1,3236],$Vp8=[1,3242],$Vq8=[2,170],$Vr8=[2,46],$Vs8=[1,3330],$Vt8=[2,53],$Vu8=[1,3363],$Vv8=[2,77],$Vw8=[2,167],$Vx8=[1,3408],$Vy8=[47,49,66,75,76,77,97,98,99,100,115,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vz8=[47,49,66,75,76,77,115,121,123,131,136,137,152,153,154,155,185,186,189,215],$VA8=[47,49,66,97,98,99,100,108,109,110,111,112,113,131,136,137,152,153,154,155,186,189],$VB8=[47,49,66,92,93,94,97,98,99,100,131,136,137,152,153,154,155,186,189],$VC8=[47,49,66,108,109,110,111,112,113,131,136,137,152,153,154,155,186,189],$VD8=[1,3439],$VE8=[1,3445],$VF8=[1,3444],$VG8=[1,3465],$VH8=[1,3471],$VI8=[1,3470],$VJ8=[1,3492],$VK8=[1,3498],$VL8=[1,3497],$VM8=[1,3596],$VN8=[1,3602],$VO8=[1,3601],$VP8=[1,3637],$VQ8=[1,3679],$VR8=[66,131,136,137,189],$VS8=[1,3709],$VT8=[47,49,66,97,98,99,100,131,136,137,152,153,154,155,186,189],$VU8=[1,3733],$VV8=[1,3769],$VW8=[1,3775],$VX8=[1,3774],$VY8=[1,3795],$VZ8=[1,3801],$V_8=[1,3800],$V$8=[1,3822],$V09=[1,3828],$V19=[1,3827],$V29=[1,3849],$V39=[1,3855],$V49=[1,3854],$V59=[1,3875],$V69=[1,3881],$V79=[1,3880],$V89=[1,3902],$V99=[1,3908],$Va9=[1,3907],$Vb9=[107,117,131,136,137,186,189],$Vc9=[1,3950],$Vd9=[1,3974],$Ve9=[1,4016],$Vf9=[1,4049],$Vg9=[1,4154],$Vh9=[1,4197],$Vi9=[1,4203],$Vj9=[1,4202],$Vk9=[1,4238],$Vl9=[1,4280],$Vm9=[1,4336],$Vn9=[66,107,131,136,137,186,189],$Vo9=[1,4391],$Vp9=[1,4415],$Vq9=[1,4445],$Vr9=[1,4491],$Vs9=[1,4563],$Vt9=[1,4612];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shexDoc\":3,\"initParser\":4,\"Qdirective_E_Star\":5,\"Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt\":6,\"EOF\":7,\"directive\":8,\"O_QnotStartAction_E_Or_QstartActions_E_C\":9,\"notStartAction\":10,\"startActions\":11,\"Qstatement_E_Star\":12,\"statement\":13,\"O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C\":14,\"baseDecl\":15,\"prefixDecl\":16,\"importDecl\":17,\"IT_BASE\":18,\"IRIREF\":19,\"IT_PREFIX\":20,\"PNAME_NS\":21,\"iri\":22,\"IT_IMPORT\":23,\"start\":24,\"shapeExprDecl\":25,\"IT_start\":26,\"=\":27,\"shapeAnd\":28,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star\":29,\"QcodeDecl_E_Plus\":30,\"codeDecl\":31,\"shapeExprLabel\":32,\"O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C\":33,\"shapeExpression\":34,\"IT_EXTERNAL\":35,\"QIT_NOT_E_Opt\":36,\"shapeAtomNoRef\":37,\"QshapeOr_E_Opt\":38,\"IT_NOT\":39,\"shapeRef\":40,\"shapeOr\":41,\"inlineShapeExpression\":42,\"inlineShapeOr\":43,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus\":44,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus\":45,\"O_QIT_OR_E_S_QshapeAnd_E_C\":46,\"IT_OR\":47,\"O_QIT_AND_E_S_QshapeNot_E_C\":48,\"IT_AND\":49,\"shapeNot\":50,\"inlineShapeAnd\":51,\"Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star\":52,\"O_QIT_OR_E_S_QinlineShapeAnd_E_C\":53,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star\":54,\"inlineShapeNot\":55,\"Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star\":56,\"O_QIT_AND_E_S_QinlineShapeNot_E_C\":57,\"shapeAtom\":58,\"inlineShapeAtom\":59,\"nonLitNodeConstraint\":60,\"QshapeOrRef_E_Opt\":61,\"litNodeConstraint\":62,\"shapeOrRef\":63,\"QnonLitNodeConstraint_E_Opt\":64,\"(\":65,\")\":66,\".\":67,\"shapeDefinition\":68,\"nonLitInlineNodeConstraint\":69,\"QinlineShapeOrRef_E_Opt\":70,\"litInlineNodeConstraint\":71,\"inlineShapeOrRef\":72,\"QnonLitInlineNodeConstraint_E_Opt\":73,\"inlineShapeDefinition\":74,\"ATPNAME_LN\":75,\"ATPNAME_NS\":76,\"@\":77,\"Qannotation_E_Star\":78,\"semanticActions\":79,\"annotation\":80,\"IT_LITERAL\":81,\"QxsFacet_E_Star\":82,\"datatype\":83,\"valueSet\":84,\"QnumericFacet_E_Plus\":85,\"xsFacet\":86,\"numericFacet\":87,\"nonLiteralKind\":88,\"QstringFacet_E_Star\":89,\"QstringFacet_E_Plus\":90,\"stringFacet\":91,\"IT_IRI\":92,\"IT_BNODE\":93,\"IT_NONLITERAL\":94,\"stringLength\":95,\"INTEGER\":96,\"REGEXP\":97,\"IT_LENGTH\":98,\"IT_MINLENGTH\":99,\"IT_MAXLENGTH\":100,\"numericRange\":101,\"rawNumeric\":102,\"numericLength\":103,\"DECIMAL\":104,\"DOUBLE\":105,\"string\":106,\"^^\":107,\"IT_MININCLUSIVE\":108,\"IT_MINEXCLUSIVE\":109,\"IT_MAXINCLUSIVE\":110,\"IT_MAXEXCLUSIVE\":111,\"IT_TOTALDIGITS\":112,\"IT_FRACTIONDIGITS\":113,\"Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star\":114,\"{\":115,\"QtripleExpression_E_Opt\":116,\"}\":117,\"O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C\":118,\"extension\":119,\"extraPropertySet\":120,\"IT_CLOSED\":121,\"tripleExpression\":122,\"IT_EXTRA\":123,\"Qpredicate_E_Plus\":124,\"predicate\":125,\"oneOfTripleExpr\":126,\"groupTripleExpr\":127,\"multiElementOneOf\":128,\"Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus\":129,\"O_QGT_PIPE_E_S_QgroupTripleExpr_E_C\":130,\"|\":131,\"singleElementGroup\":132,\"multiElementGroup\":133,\"unaryTripleExpr\":134,\"QGT_SEMI_E_Opt\":135,\",\":136,\";\":137,\"Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus\":138,\"O_QGT_SEMI_E_S_QunaryTripleExpr_E_C\":139,\"Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt\":140,\"O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C\":141,\"include\":142,\"O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C\":143,\"$\":144,\"tripleExprLabel\":145,\"tripleConstraint\":146,\"bracketedTripleExpr\":147,\"Qcardinality_E_Opt\":148,\"cardinality\":149,\"QsenseFlags_E_Opt\":150,\"senseFlags\":151,\"*\":152,\"+\":153,\"?\":154,\"REPEAT_RANGE\":155,\"^\":156,\"[\":157,\"QvalueSetValue_E_Star\":158,\"]\":159,\"valueSetValue\":160,\"iriRange\":161,\"literalRange\":162,\"languageRange\":163,\"O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C\":164,\"QiriExclusion_E_Plus\":165,\"iriExclusion\":166,\"QliteralExclusion_E_Plus\":167,\"literalExclusion\":168,\"QlanguageExclusion_E_Plus\":169,\"languageExclusion\":170,\"Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt\":171,\"QiriExclusion_E_Star\":172,\"O_QGT_TILDE_E_S_QiriExclusion_E_Star_C\":173,\"~\":174,\"-\":175,\"QGT_TILDE_E_Opt\":176,\"literal\":177,\"Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt\":178,\"QliteralExclusion_E_Star\":179,\"O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C\":180,\"LANGTAG\":181,\"Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt\":182,\"O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C\":183,\"QlanguageExclusion_E_Star\":184,\"&\":185,\"//\":186,\"O_Qiri_E_Or_Qliteral_E_C\":187,\"QcodeDecl_E_Star\":188,\"%\":189,\"O_QCODE_E_Or_QGT_MODULO_E_C\":190,\"CODE\":191,\"rdfLiteral\":192,\"numericLiteral\":193,\"booleanLiteral\":194,\"a\":195,\"blankNode\":196,\"langString\":197,\"Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt\":198,\"O_QGT_DTYPE_E_S_Qdatatype_E_C\":199,\"IT_true\":200,\"IT_false\":201,\"STRING_LITERAL1\":202,\"STRING_LITERAL_LONG1\":203,\"STRING_LITERAL2\":204,\"STRING_LITERAL_LONG2\":205,\"LANG_STRING_LITERAL1\":206,\"LANG_STRING_LITERAL_LONG1\":207,\"LANG_STRING_LITERAL2\":208,\"LANG_STRING_LITERAL_LONG2\":209,\"prefixedName\":210,\"PNAME_LN\":211,\"BLANK_NODE_LABEL\":212,\"O_QIT_EXTENDS_E_Or_QGT_AMP_E_C\":213,\"QshapeExprLabel_E_Plus\":214,\"IT_EXTENDS\":215,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",7:\"EOF\",18:\"IT_BASE\",19:\"IRIREF\",20:\"IT_PREFIX\",21:\"PNAME_NS\",23:\"IT_IMPORT\",26:\"IT_start\",27:\"=\",35:\"IT_EXTERNAL\",39:\"IT_NOT\",47:\"IT_OR\",49:\"IT_AND\",65:\"(\",66:\")\",67:\".\",75:\"ATPNAME_LN\",76:\"ATPNAME_NS\",77:\"@\",81:\"IT_LITERAL\",92:\"IT_IRI\",93:\"IT_BNODE\",94:\"IT_NONLITERAL\",96:\"INTEGER\",97:\"REGEXP\",98:\"IT_LENGTH\",99:\"IT_MINLENGTH\",100:\"IT_MAXLENGTH\",104:\"DECIMAL\",105:\"DOUBLE\",107:\"^^\",108:\"IT_MININCLUSIVE\",109:\"IT_MINEXCLUSIVE\",110:\"IT_MAXINCLUSIVE\",111:\"IT_MAXEXCLUSIVE\",112:\"IT_TOTALDIGITS\",113:\"IT_FRACTIONDIGITS\",115:\"{\",117:\"}\",121:\"IT_CLOSED\",123:\"IT_EXTRA\",131:\"|\",136:\",\",137:\";\",144:\"$\",152:\"*\",153:\"+\",154:\"?\",155:\"REPEAT_RANGE\",156:\"^\",157:\"[\",159:\"]\",174:\"~\",175:\"-\",181:\"LANGTAG\",185:\"&\",186:\"//\",189:\"%\",191:\"CODE\",195:\"a\",200:\"IT_true\",201:\"IT_false\",202:\"STRING_LITERAL1\",203:\"STRING_LITERAL_LONG1\",204:\"STRING_LITERAL2\",205:\"STRING_LITERAL_LONG2\",206:\"LANG_STRING_LITERAL1\",207:\"LANG_STRING_LITERAL_LONG1\",208:\"LANG_STRING_LITERAL2\",209:\"LANG_STRING_LITERAL_LONG2\",211:\"PNAME_LN\",212:\"BLANK_NODE_LABEL\",215:\"IT_EXTENDS\"},\nproductions_: [0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[10,1],[10,1],[24,4],[11,1],[30,1],[30,2],[13,1],[13,1],[25,2],[33,1],[33,1],[34,3],[34,3],[34,2],[38,0],[38,1],[42,1],[41,1],[41,2],[46,2],[44,1],[44,2],[48,2],[45,1],[45,2],[29,0],[29,2],[43,2],[53,2],[52,0],[52,2],[28,2],[54,0],[54,2],[51,2],[57,2],[56,0],[56,2],[50,2],[36,0],[36,1],[55,2],[58,2],[58,1],[58,2],[58,3],[58,1],[61,0],[61,1],[64,0],[64,1],[37,2],[37,1],[37,2],[37,3],[37,1],[59,2],[59,1],[59,2],[59,3],[59,1],[70,0],[70,1],[73,0],[73,1],[63,1],[63,1],[72,1],[72,1],[40,1],[40,1],[40,2],[62,3],[78,0],[78,2],[60,3],[71,2],[71,2],[71,2],[71,1],[82,0],[82,2],[85,1],[85,2],[69,2],[69,1],[89,0],[89,2],[90,1],[90,2],[88,1],[88,1],[88,1],[86,1],[86,1],[91,2],[91,1],[95,1],[95,1],[95,1],[87,2],[87,2],[102,1],[102,1],[102,1],[102,3],[101,1],[101,1],[101,1],[101,1],[103,1],[103,1],[68,3],[74,4],[118,1],[118,1],[118,1],[114,0],[114,2],[116,0],[116,1],[120,2],[124,1],[124,2],[122,1],[126,1],[126,1],[128,2],[130,2],[129,1],[129,2],[127,1],[127,1],[132,2],[135,0],[135,1],[135,1],[133,3],[139,2],[139,2],[138,1],[138,2],[134,2],[134,1],[143,2],[140,0],[140,1],[141,1],[141,1],[147,6],[148,0],[148,1],[146,6],[150,0],[150,1],[149,1],[149,1],[149,1],[149,1],[151,1],[84,3],[158,0],[158,2],[160,1],[160,1],[160,1],[160,2],[165,1],[165,2],[167,1],[167,2],[169,1],[169,2],[164,1],[164,1],[164,1],[161,2],[172,0],[172,2],[173,2],[171,0],[171,1],[166,3],[176,0],[176,1],[162,2],[179,0],[179,2],[180,2],[178,0],[178,1],[168,3],[163,2],[163,2],[184,0],[184,2],[183,2],[182,0],[182,1],[170,3],[142,2],[80,3],[187,1],[187,1],[79,1],[188,0],[188,2],[31,3],[190,1],[190,1],[177,1],[177,1],[177,1],[125,1],[125,1],[83,1],[32,1],[32,1],[145,1],[145,1],[193,1],[193,1],[193,1],[192,1],[192,2],[199,2],[198,0],[198,1],[194,1],[194,1],[106,1],[106,1],[106,1],[106,1],[197,1],[197,1],[197,1],[197,1],[22,1],[22,1],[210,1],[210,1],[196,1],[119,2],[213,1],[213,1],[214,1],[214,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n        let imports = Object.keys(Parser._imports).length ? { imports: Parser._imports } : {}\n        var startObj = Parser.start ? { start: Parser.start } : {};\n        var startActs = Parser.startActs ? { startActs: Parser.startActs } : {};\n        let shapes = Parser.shapes ? { shapes: Object.values(Parser.shapes) } : {};\n        var shexj = Object.assign(\n          { type: \"Schema\" }, imports, startActs, startObj, shapes\n        )\n        if (Parser.options.index) {\n          if (Parser._base !== null)\n            shexj._base = Parser._base;\n          shexj._prefixes = Parser._prefixes;\n          shexj._index = {\n            shapeExprs: Parser.shapes || new Map(),\n            tripleExprs: Parser.productions || new Map()\n          };\n          shexj._sourceMap = Parser._sourceMap;\n        }\n        return shexj;\n      \nbreak;\ncase 2:\n yy.parser.yy = { lexer: yy.lexer} ; \nbreak;\ncase 15:\n // t: @@\n        Parser._setBase(Parser._base === null ||\n                    absoluteIRI.test($$[$0].slice(1, -1)) ? $$[$0].slice(1, -1) : _resolveIRI($$[$0].slice(1, -1)));\n      \nbreak;\ncase 16:\n // t: ShExParser-test.js/with pre-defined prefixes\n        Parser._prefixes[$$[$0-1].slice(0, -1)] = $$[$0];\n      \nbreak;\ncase 17:\n // t: @@\n        Parser._imports.push($$[$0]);\n      \nbreak;\ncase 20:\n\n        if (Parser.start)\n          error(new Error(\"Parse error: start already defined\"), yy);\n        Parser.start = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]); // t: startInline\n      \nbreak;\ncase 21:\n\n        Parser.startActs = $$[$0]; // t: startCode1\n      \nbreak;\ncase 22:\nthis.$ = [$$[$0]] // t: startCode1;\nbreak;\ncase 23:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: startCode3;\nbreak;\ncase 26:\n // t: 1dot 1val1vsMinusiri3??\n        addShape($$[$0-1],  $$[$0], yy);\n      \nbreak;\ncase 27:\n\n        this.$ = nonest($$[$0]);\n      \nbreak;\ncase 28:\nthis.$ = { type: \"ShapeExternal\" };\nbreak;\ncase 29:\n\n        if ($$[$0-2])\n          $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) }; // t:@@\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 30:\n\n        $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) } // !!! opt\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 31:\n\n        $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n        delete $$[$0].needsAtom;\n        this.$ = $$[$0]; // { type: \"ShapeOr\", \"shapeExprs\": [$$[$0-1]].concat($$[$0]) };\n      \nbreak;\ncase 32: case 227: case 244:\nthis.$ = null;\nbreak;\ncase 33: case 37: case 40: case 46: case 53: case 184: case 243:\nthis.$ = $$[$0];\nbreak;\ncase 35:\n // returns a ShapeOr\n        var disjuncts = $$[$0].map(nonest);\n        this.$ = { type: \"ShapeOr\", shapeExprs: disjuncts, needsAtom: disjuncts }; // t: @@\n      \nbreak;\ncase 36:\n // returns a ShapeAnd\n        // $$[$0-1] could have implicit conjuncts and explicit nested ANDs (will have .nested: true)\n        $$[$0-1].filter(c => c.type === \"ShapeAnd\").length === $$[$0-1].length\n        var and = {\n          type: \"ShapeAnd\",\n          shapeExprs: $$[$0-1].reduce(\n            (acc, elt) =>\n              acc.concat(elt.type === 'ShapeAnd' && !elt.nested ? elt.shapeExprs : nonest(elt)), []\n          )\n        };\n        this.$ = $$[$0].length > 0 ? { type: \"ShapeOr\", shapeExprs: [and].concat($$[$0].map(nonest)) } : and; // t: @@\n        this.$.needsAtom = and.shapeExprs;\n      \nbreak;\ncase 38: case 41:\nthis.$ = [$$[$0]];\nbreak;\ncase 39: case 42: case 44: case 48: case 51: case 55:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 43: case 47: case 50: case 54:\nthis.$ = [];\nbreak;\ncase 45:\nthis.$ = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]);\nbreak;\ncase 49: case 52:\nthis.$ = shapeJunction(\"ShapeAnd\", $$[$0-1], $$[$0]) // t: @@;\nbreak;\ncase 56:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t:@@ */ : $$[$0];\nbreak;\ncase 57:\nthis.$ = false;\nbreak;\ncase 58:\nthis.$ = true;\nbreak;\ncase 59:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t: 1NOTNOTdot, 1NOTNOTIRI, 1NOTNOTvs */ : $$[$0];\nbreak;\ncase 60: case 69: case 74:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1];\nbreak;\ncase 62:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t: 1dotRef1 */ : $$[$0-1] // t:@@;\nbreak;\ncase 63: case 72: case 77:\nthis.$ = Object.assign($$[$0-1], {nested: true}) // t: 1val1vsMinusiri3;\nbreak;\ncase 64: case 73: case 78:\nthis.$ = EmptyShape // t: 1dot;\nbreak;\ncase 71:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t:@@ */ : $$[$0-1]\t // t: 1dotRef1 -- use _QnonLitNodeConstraint_E_Opt like below?;\nbreak;\ncase 76:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1] // t: !! look to 1dotRef1;\nbreak;\ncase 87:\n // t: 1dotRefLNex@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1), yy); // ShapeRef\n      \nbreak;\ncase 88:\n // t: 1dotRefNS1@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy), yy); // ShapeRef\n      \nbreak;\ncase 89:\nthis.$ = addSourceMap($$[$0], yy) // ShapeRef // t: 1dotRef1, 1dotRefSpaceLNex, 1dotRefSpaceNS1;\nbreak;\ncase 90: case 93:\n // t: !!\n        this.$ = $$[$0-2]\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !!\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !!\n      \nbreak;\ncase 91:\nthis.$ = [] // t: 1dot, 1dotAnnot3;\nbreak;\ncase 92:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotAnnot3;\nbreak;\ncase 94:\nthis.$ = extend({ type: \"NodeConstraint\", nodeKind: \"literal\" }, $$[$0]) // t: 1literalPattern;\nbreak;\ncase 95:\n\n        if (numericDatatypes.indexOf($$[$0-1]) === -1)\n          numericFacets.forEach(function (facet) {\n            if (facet in $$[$0])\n              error(new Error(\"Parse error: facet \" + facet + \" not allowed for unknown datatype \" + $$[$0-1]), yy);\n          });\n        this.$ = extend({ type: \"NodeConstraint\", datatype: $$[$0-1] }, $$[$0]) // t: 1datatype\n      \nbreak;\ncase 96:\nthis.$ = { type: \"NodeConstraint\", values: $$[$0-1] } // t: 1val1IRIREF;\nbreak;\ncase 97:\nthis.$ = extend({ type: \"NodeConstraint\"}, $$[$0]);\nbreak;\ncase 98:\nthis.$ = {} // t: 1literalPattern;\nbreak;\ncase 99:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: 1literalLength\n      \nbreak;\ncase 101: case 107:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: !! look to 1literalLength\n      \nbreak;\ncase 102:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0-1], $$[$0] ? $$[$0] : {}) // t: 1iriPattern;\nbreak;\ncase 103:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0]) // t: @@;\nbreak;\ncase 104:\nthis.$ = {};\nbreak;\ncase 105:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0])\n      \nbreak;\ncase 108:\nthis.$ = { nodeKind: \"iri\" } // t: 1iriPattern;\nbreak;\ncase 109:\nthis.$ = { nodeKind: \"bnode\" } // t: 1bnodeLength;\nbreak;\ncase 110:\nthis.$ = { nodeKind: \"nonliteral\" } // t: 1nonliteralLength;\nbreak;\ncase 113:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalLength;\nbreak;\ncase 114:\nthis.$ = unescapeRegexp($$[$0]) // t: 1literalPattern;\nbreak;\ncase 115:\nthis.$ = \"length\" // t: 1literalLength;\nbreak;\ncase 116:\nthis.$ = \"minlength\" // t: 1literalMinlength;\nbreak;\ncase 117:\nthis.$ = \"maxlength\" // t: 1literalMaxlength;\nbreak;\ncase 118:\nthis.$ = keyValObject($$[$0-1], $$[$0]) // t: 1literalMininclusive;\nbreak;\ncase 119:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalTotaldigits;\nbreak;\ncase 120:\nthis.$ = parseInt($$[$0], 10);\nbreak;\ncase 121: case 122:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 123:\n // ## deprecated\n        if ($$[$0] === XSD_DECIMAL || $$[$0] === XSD_FLOAT || $$[$0] === XSD_DOUBLE)\n          this.$ = parseFloat($$[$0-2].value);\n        else if (numericDatatypes.indexOf($$[$0]) !== -1)\n          this.$ = parseInt($$[$0-2].value)\n        else\n          error(new Error(\"Parse error: numeric range facet expected numeric datatype instead of \" + $$[$0]), yy);\n      \nbreak;\ncase 124:\nthis.$ = \"mininclusive\" // t: 1literalMininclusive;\nbreak;\ncase 125:\nthis.$ = \"minexclusive\" // t: 1literalMinexclusive;\nbreak;\ncase 126:\nthis.$ = \"maxinclusive\" // t: 1literalMaxinclusive;\nbreak;\ncase 127:\nthis.$ = \"maxexclusive\" // t: 1literalMaxexclusive;\nbreak;\ncase 128:\nthis.$ = \"totaldigits\" // t: 1literalTotaldigits;\nbreak;\ncase 129:\nthis.$ = \"fractiondigits\" // t: 1literalFractiondigits;\nbreak;\ncase 130:\n // t: 1dotInherit3\n        this.$ = $$[$0-2] === EmptyShape ? { type: \"Shape\" } : $$[$0-2]; // t: 0\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !! look to open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !! look to open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 131:\n // t: 1dotInherit3\n        var exprObj = $$[$0-1] ? { expression: $$[$0-1] } : EmptyObject; // t: 0, 0Inherit1\n        this.$ = (exprObj === EmptyObject && $$[$0-3] === EmptyObject) ?\n\t  EmptyShape :\n\t  extend({ type: \"Shape\" }, exprObj, $$[$0-3]);\n      \nbreak;\ncase 132:\nthis.$ = [ \"inherit\", $$[$0] ] // t: 1dotInherit1;\nbreak;\ncase 133:\nthis.$ = [ \"extra\", $$[$0] ] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 134:\nthis.$ = [ \"closed\", true ] // t: 1dotClosed;\nbreak;\ncase 135:\nthis.$ = EmptyObject;\nbreak;\ncase 136:\n\n        if ($$[$0-1] === EmptyObject)\n          $$[$0-1] = {};\n        if ($$[$0][0] === \"closed\")\n          $$[$0-1][\"closed\"] = true; // t: 1dotClosed\n        else if ($$[$0][0] in $$[$0-1])\n          $$[$0-1][$$[$0][0]] = unionAll($$[$0-1][$$[$0][0]], $$[$0][1]); // t: 1dotInherit3, 3groupdot3Extra, 3groupdotExtra3\n        else\n          $$[$0-1][$$[$0][0]] = $$[$0][1]; // t: 1dotInherit1\n        this.$ = $$[$0-1];\n      \nbreak;\ncase 139:\nthis.$ = $$[$0] // t: 1dotExtra1, 3groupdot3Extra;\nbreak;\ncase 140:\nthis.$ = [$$[$0]] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 141:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 3groupdotExtra3;\nbreak;\ncase 145:\nthis.$ = { type: \"OneOf\", expressions: unionAll([$$[$0-1]], $$[$0]) } // t: 2oneOfdot;\nbreak;\ncase 146:\nthis.$ = $$[$0] // t: 2oneOfdot;\nbreak;\ncase 147:\nthis.$ = [$$[$0]] // t: 2oneOfdot;\nbreak;\ncase 148:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2oneOfdot;\nbreak;\ncase 151:\nthis.$ = $$[$0-1];\nbreak;\ncase 155:\nthis.$ = { type: \"EachOf\", expressions: unionAll([$$[$0-2]], $$[$0-1]) } // t: 2groupOfdot;\nbreak;\ncase 156:\nthis.$ = $$[$0] // ## deprecated // t: 2groupOfdot;\nbreak;\ncase 157:\nthis.$ = $$[$0] // t: 2groupOfdot;\nbreak;\ncase 158:\nthis.$ = [$$[$0]] // t: 2groupOfdot;\nbreak;\ncase 159:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2groupOfdot;\nbreak;\ncase 160:\n\n        if ($$[$0-1]) {\n          this.$ = extend({ id: $$[$0-1] }, $$[$0]);\n          addProduction($$[$0-1],  this.$, yy);\n        } else {\n          this.$ = $$[$0]\n        }\n      \nbreak;\ncase 162:\nthis.$ = addSourceMap($$[$0], yy);\nbreak;\ncase 167:\n\n        // t: open1dotOr1dot, !openopen1dotcloseCode1closeCode2\n        this.$ = $$[$0-4];\n        // Copy all of the new attributes into the encapsulated shape.\n        if (\"min\" in $$[$0-2]) { this.$.min = $$[$0-2].min; } // t: open3groupdotclosecard23Annot3Code2\n        if (\"max\" in $$[$0-2]) { this.$.max = $$[$0-2].max; } // t: open3groupdotclosecard23Annot3Code2\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = \"semActs\" in $$[$0-4] ? $$[$0-4].semActs.concat($$[$0].semActs) : $$[$0].semActs; } // t: open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 168:\nthis.$ = {} // t: 1dot;\nbreak;\ncase 170:\n\n        // $$[$0]: t: 1dotCode1\n\tif ($$[$0-3] !== EmptyShape && false) {\n\t  var t = blank();\n\t  addShape(t, $$[$0-3], yy);\n\t  $$[$0-3] = t; // ShapeRef\n\t}\n        // %6: t: 1inversedotCode1\n        this.$ = extend({ type: \"TripleConstraint\" }, $$[$0-5] ? $$[$0-5] : {}, { predicate: $$[$0-4] }, ($$[$0-3] === EmptyShape ? {} : { valueExpr: $$[$0-3] }), $$[$0-2], $$[$0]); // t: 1dot // t: 1inversedot\n        if ($$[$0-1].length)\n          this.$[\"annotations\"] = $$[$0-1]; // t: 1dotAnnot3 // t: 1inversedotAnnot3\n      \nbreak;\ncase 173:\nthis.$ = { min:0, max:UNBOUNDED } // t: 1cardStar;\nbreak;\ncase 174:\nthis.$ = { min:1, max:UNBOUNDED } // t: 1cardPlus;\nbreak;\ncase 175:\nthis.$ = { min:0, max:1 } // t: 1cardOpt;\nbreak;\ncase 176:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-2);\n        var nums = $$[$0].match(/(\\d+)/g);\n        this.$ = { min: parseInt(nums[0], 10) }; // t: 1card2blank, 1card2Star\n        if (nums.length === 2)\n            this.$[\"max\"] = parseInt(nums[1], 10); // t: 1card23\n        else if ($$[$0].indexOf(',') === -1) // t: 1card2\n            this.$[\"max\"] = parseInt(nums[0], 10);\n        else\n            this.$[\"max\"] = UNBOUNDED;\n      \nbreak;\ncase 177:\nthis.$ = { inverse: true } // t: 1inversedot;\nbreak;\ncase 178:\nthis.$ = $$[$0-1] // t: 1val1IRIREF;\nbreak;\ncase 179:\nthis.$ = [] // t: 1val1IRIREF;\nbreak;\ncase 180:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1IRIREF;\nbreak;\ncase 185:\nthis.$ = [$$[$0]] // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 186:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 187:\nthis.$ = [$$[$0]] // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 188:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 189:\nthis.$ = [$$[$0]] // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 190:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 191:\nthis.$ = { type: \"IriStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 192:\nthis.$ = { type: \"LiteralStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 193:\nthis.$ = { type: \"LanguageStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 194:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1iriStem, 1val1iriStemMinusiri3\n            type: $$[$0].length ? \"IriStemRange\" : \"IriStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1iriStemMinusiri3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1IRIREF, 1AvalA\n        }\n      \nbreak;\ncase 195:\nthis.$ = [] // t: 1val1iriStem, 1val1iriStemMinusiri3;\nbreak;\ncase 196:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1iriStemMinusiri3;\nbreak;\ncase 197:\nthis.$ = $$[$0] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 200:\nthis.$ = $$[$0] ? { type: \"IriStem\", stem: $$[$0-1] } /* t: 1val1iriStemMinusiriStem3 */ : $$[$0-1] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 203:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1literalStemMinusliteralStem3, 1val1literalStem\n            type: $$[$0].length ? \"LiteralStemRange\" : \"LiteralStem\",\n            stem: $$[$0-1].value\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1literalStemMinusliteral3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1LITERAL\n        }\n      \nbreak;\ncase 204:\nthis.$ = [] // t: 1val1literalStem, 1val1literalStemMinusliteral3;\nbreak;\ncase 205:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 206:\nthis.$ = $$[$0] // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 209:\nthis.$ = $$[$0] ? { type: \"LiteralStem\", stem: $$[$0-1].value } /* t: 1val1literalStemMinusliteral3 */ : $$[$0-1].value // t: 1val1literalStemMinusliteralStem3;\nbreak;\ncase 210:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1languageStemMinuslanguage3 1val1languageStemMinuslanguageStem3 : 1val1languageStem\n            type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1languageStemMinuslanguage3, 1val1languageStemMinuslanguageStem3\n        } else {\n          this.$ = { type: \"Language\", languageTag: $$[$0-1] }; // t: 1val1language\n        }\n      \nbreak;\ncase 211:\n\n        this.$ = {  // t: @@\n          type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n          stem: \"\"\n        };\n        if ($$[$0].length)\n          this.$[\"exclusions\"] = $$[$0]; // t: @@\n      \nbreak;\ncase 212:\nthis.$ = [] // t: 1val1languageStem, 1val1languageStemMinuslanguage3;\nbreak;\ncase 213:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 214:\nthis.$ = $$[$0] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 217:\nthis.$ = $$[$0] ? { type: \"LanguageStem\", stem: $$[$0-1] } /* t: 1val1languageStemMinuslanguageStem3 */ : $$[$0-1] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 218:\nthis.$ = addSourceMap($$[$0], yy) // Inclusion // t: 2groupInclude1;\nbreak;\ncase 219:\nthis.$ = { type: \"Annotation\", predicate: $$[$0-1], object: $$[$0] } // t: 1dotAnnotIRIREF;\nbreak;\ncase 222:\nthis.$ = $$[$0].length ? { semActs: $$[$0] } : null // t: 1dotCode1/2oneOfDot;\nbreak;\ncase 223:\nthis.$ = [] // t: 1dot, 1dotCode1;\nbreak;\ncase 224:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotCode1;\nbreak;\ncase 225:\nthis.$ = $$[$0] ? unescapeSemanticAction($$[$0-1], $$[$0]) /* t: 1dotCode1 */ : { type: \"SemAct\", name: $$[$0-1] } // t: 1dotNoCode1;\nbreak;\ncase 232:\nthis.$ = RDF_TYPE // t: 1AvalA;\nbreak;\ncase 238:\nthis.$ = createLiteral($$[$0], XSD_INTEGER) // t: 1val1INTEGER;\nbreak;\ncase 239:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL) // t: 1val1DECIMAL;\nbreak;\ncase 240:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE) // t: 1val1DOUBLE;\nbreak;\ncase 242:\nthis.$ = $$[$0] ? extend($$[$0-1], { type: $$[$0] }) : $$[$0-1] // t: 1val1Datatype;\nbreak;\ncase 246:\nthis.$ = { value: \"true\", type: XSD_BOOLEAN } // t: 1val1true;\nbreak;\ncase 247:\nthis.$ = { value: \"false\", type: XSD_BOOLEAN } // t: 1val1false;\nbreak;\ncase 248:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL2;\nbreak;\ncase 249:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL1;\nbreak;\ncase 250:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL_LONG2;\nbreak;\ncase 251:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG1;\nbreak;\ncase 252:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: @@;\nbreak;\ncase 253:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: @@;\nbreak;\ncase 254:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: 1val1LANGTAG;\nbreak;\ncase 255:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG2_with_LANGTAG;\nbreak;\ncase 256:\n // t: 1dot\n        var unesc = ShExUtil.unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._base === null || absoluteIRI.test(unesc) ? unesc : _resolveIRI(unesc)\n      \nbreak;\ncase 258:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + ShExUtil.unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n      \nbreak;\ncase 259:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n        this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n      \nbreak;\ncase 261:\nthis.$ = $$[$0] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 264:\nthis.$ = [$$[$0]] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 265:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotInherit3;\nbreak;\n}\n},\ntable: [o($V0,[2,2],{3:1,4:2}),{1:[3]},o($V0,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:10,10:14,11:15,14:6,15:7,16:8,17:9,18:[1,11],19:$V1,20:[1,12],21:$V2,22:22,23:[1,13],24:16,25:17,26:[1,19],30:18,31:21,32:20,189:$V3,196:23,210:26,211:$V4,212:$V5},{7:[1,30]},o($V0,[2,4]),{7:[2,11]},o($V0,$V6),o($V0,$V7),o($V0,$V8),o($V9,[2,7],{12:31}),{19:[1,32]},{21:[1,33]},{19:$Va,21:$Vb,22:34,210:36,211:$Vc},o($V9,[2,5]),o($V9,[2,6]),o($V9,$Vd),o($V9,$Ve),o($V9,[2,21],{31:39,189:$V3}),{27:[1,40]},o($Vf,$Vg,{33:41,34:42,36:44,40:46,35:[1,43],39:[1,45],75:$Vh,76:$Vi,77:$Vj}),o($V0,[2,22]),o($Vk,$Vl),o($Vk,$Vm),{19:$Vn,21:$Vo,22:50,210:52,211:$Vp},o($Vk,$Vq),o($Vk,$Vr),o($Vk,$Vs),o($Vk,$Vt),o($Vk,$Vu),{1:[2,1]},{7:[2,9],8:56,10:57,13:55,15:58,16:59,17:60,18:[1,63],19:$V1,20:[1,64],21:$V2,22:22,23:[1,65],24:61,25:62,26:[1,66],32:67,196:23,210:26,211:$V4,212:$V5},o($V0,$Vv),{19:$Va,21:$Vb,22:68,210:36,211:$Vc},o($V0,$Vw),o($V0,$Vq),o($V0,$Vr),o($V0,$Vt),o($V0,$Vu),o($V0,[2,23]),o($Vx,$Vg,{28:69,50:70,36:71,39:$Vy}),o($V9,$Vz),o($V9,$VA),o($V9,$VB),o($VC,$VD,{37:73,60:74,62:75,68:76,69:79,71:80,74:81,88:82,90:83,83:85,84:86,85:87,114:88,91:92,22:93,87:95,95:96,210:99,101:100,103:101,19:$VE,21:$VF,65:[1,77],67:[1,78],81:$VG,92:$VH,93:$VI,94:$VJ,97:$VK,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$VU,211:$VV}),o($Vf,$VW,{40:113,75:$VX,76:$VY,77:$VZ}),{41:117,44:118,45:119,46:120,47:$V_,48:121,49:$V$},o($V01,$V11),o($V01,$V21),{19:[1,127],21:[1,131],22:125,32:124,196:126,210:128,211:[1,130],212:[1,129]},{189:[1,134],190:132,191:[1,133]},o($V31,$Vq),o($V31,$Vr),o($V31,$Vt),o($V31,$Vu),o($V9,[2,8]),o($V9,[2,24]),o($V9,[2,25]),o($V9,$V6),o($V9,$V7),o($V9,$V8),o($V9,$Vd),o($V9,$Ve),{19:[1,135]},{21:[1,136]},{19:$V41,21:$V51,22:137,210:139,211:$V61},{27:[1,142]},o($Vf,$Vg,{33:143,34:144,36:146,40:148,35:[1,145],39:[1,147],75:$Vh,76:$Vi,77:$Vj}),o($V0,$V71),o($V81,$V91,{29:149}),o($Va1,$Vb1,{54:150}),o($VC,$VD,{69:79,71:80,74:81,88:82,90:83,83:85,84:86,85:87,114:88,91:92,22:93,87:95,95:96,210:99,101:100,103:101,58:151,60:152,62:153,63:154,68:157,40:158,19:$VE,21:$VF,65:[1,155],67:[1,156],75:[1,159],76:[1,160],77:[1,161],81:$VG,92:$VH,93:$VI,94:$VJ,97:$VK,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$VU,211:$VV}),o($Vx,$VW),o($V9,$Vc1,{44:118,45:119,46:120,48:121,38:162,41:163,47:$V_,49:$V$}),o($Va1,$Vd1,{61:164,63:165,68:166,40:167,74:168,114:169,75:$VX,76:$VY,77:$VZ,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Ve1),o($Va1,$Vf1,{64:170,60:171,69:172,88:173,90:174,91:178,95:179,92:$Vg1,93:$Vh1,94:$Vi1,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{34:181,36:182,40:184,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vl1),o($Vm1,$Vn1,{78:185}),o($Vo1,$Vn1,{78:186}),o($Vp1,$Vn1,{78:187}),o($Vq1,$Vr1,{89:188}),o($Vm1,$Vs1,{95:96,91:189,97:$VK,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:190}),o($Vt1,$Vu1,{82:191}),o($Vt1,$Vu1,{82:192}),o($Vo1,$Vv1,{101:100,103:101,87:193,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,194],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:203}),o($VH1,$VI1),{96:[1,204]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,206],102:205,104:[1,207],105:[1,208],106:209,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,214]},{96:[2,115]},{96:[2,116]},{96:[2,117]},o($Vt1,$Vt),o($Vt1,$Vu),o($VO1,[2,124]),o($VO1,[2,125]),o($VO1,[2,126]),o($VO1,[2,127]),{96:[2,128]},{96:[2,129]},o($V9,$Vc1,{44:118,45:119,46:120,48:121,41:163,38:215,47:$V_,49:$V$}),o($Va1,$V11),o($Va1,$V21),{19:[1,219],21:[1,223],22:217,32:216,196:218,210:220,211:[1,222],212:[1,221]},o($V9,$VP1),o($V9,$VQ1,{46:224,47:$V_}),o($V81,$V91,{29:225,48:226,49:$V$}),o($V81,$VR1),o($Va1,$VS1),o($Vx,$Vg,{28:227,50:228,36:229,39:$Vy}),o($Vx,$Vg,{50:230,36:231,39:$Vy}),o($V01,$VT1),o($V01,$Vl),o($V01,$Vm),o($V01,$Vq),o($V01,$Vr),o($V01,$Vs),o($V01,$Vt),o($V01,$Vu),o($V0,$VU1),o($V0,$VV1),o($V0,$VW1),o($V9,$Vv),{19:$V41,21:$V51,22:232,210:139,211:$V61},o($V9,$Vw),o($V9,$Vq),o($V9,$Vr),o($V9,$Vt),o($V9,$Vu),o($Vx,$Vg,{28:233,50:234,36:235,39:$Vy}),o($V9,$Vz),o($V9,$VA),o($V9,$VB),o($VC,$VD,{37:236,60:237,62:238,68:239,69:242,71:243,74:244,88:245,90:246,83:248,84:249,85:250,114:251,91:255,22:256,87:258,95:259,210:262,101:263,103:264,19:$VX1,21:$VY1,65:[1,240],67:[1,241],81:$VZ1,92:$V_1,93:$V$1,94:$V02,97:$V12,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$V22,211:$V32}),o($Vf,$VW,{40:267,75:$V42,76:$V52,77:$V62}),{41:271,44:272,45:273,46:274,47:$V72,48:275,49:$V82},o($V9,$V92,{46:278,47:$V_}),o($V81,$Va2,{48:279,49:$V$}),o($Va1,$Vb2),o($Va1,$Vd1,{63:165,68:166,40:167,74:168,114:169,61:280,75:$VX,76:$VY,77:$VZ,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{60:171,69:172,88:173,90:174,91:178,95:179,64:281,92:$Vg1,93:$Vh1,94:$Vi1,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:282,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Ve2,$V11),o($Ve2,$V21),{19:[1,286],21:[1,290],22:284,32:283,196:285,210:287,211:[1,289],212:[1,288]},o($V9,$Vh2),o($V9,$Vi2),o($Va1,$Vj2),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:291}),{115:[1,292],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$Vl2),o($Va1,$Vm2),o($Vo1,$Vn1,{78:293}),o($Vn2,$Vr1,{89:294}),o($Vo1,$Vs1,{95:179,91:295,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,296]},o($Vn2,$VJ1),{66:[1,297]},o($VC,$VD,{37:298,60:299,62:300,68:301,69:304,71:305,74:306,88:307,90:308,83:310,84:311,85:312,114:313,91:317,22:318,87:320,95:321,210:324,101:325,103:326,19:[1,323],21:[1,328],65:[1,302],67:[1,303],81:[1,309],92:[1,314],93:[1,315],94:[1,316],97:$Vo2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,319],211:[1,327]}),o($Vf,$VW,{40:329,75:$Vp2,76:$Vq2,77:$Vr2}),{41:333,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2},o($Vu2,$Vv2,{79:340,80:341,188:342,186:[1,343]}),o($Vw2,$Vv2,{79:344,80:345,188:346,186:$Vx2}),o($Vy2,$Vv2,{79:348,80:349,188:350,186:[1,351]}),o($Vm1,$Vz2,{95:96,91:352,97:$VK,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($VG2,$VH2,{116:360,122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,117:$VI2,144:$VJ2,185:$VK2}),o($VC,[2,136]),o($VC,[2,132]),o($VC,[2,133]),o($VC,[2,134]),{19:$VL2,21:$VM2,22:375,32:374,196:376,210:378,211:$VN2,212:$VO2,214:373},{19:$VP2,21:$VQ2,22:384,124:382,125:383,195:$VR2,210:387,211:$VS2},o($VT2,[2,262]),o($VT2,[2,263]),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,390],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,422]},{107:$Vg3},{107:$Vh3},{107:$Vi3},{107:$Vj3},o($VH1,$Vk3),o($V9,$Vl3),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($V81,$Vm3),o($V9,$Vn3,{46:278,47:$V_}),o($Va1,$Vo3),o($V81,$Vp3),o($Va1,$Vb1,{54:423}),o($VC,$VD,{58:424,60:425,62:426,63:427,69:430,71:431,68:432,40:433,88:434,90:435,83:437,84:438,85:439,74:440,91:447,22:448,87:450,114:451,95:452,210:455,101:456,103:457,19:[1,454],21:[1,459],65:[1,428],67:[1,429],75:[1,441],76:[1,442],77:[1,443],81:[1,436],92:[1,444],93:[1,445],94:[1,446],97:$Vq3,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,449],211:[1,458]}),o($Va1,$Vr3),o($VC,$VD,{58:460,60:461,62:462,63:463,69:466,71:467,68:468,40:469,88:470,90:471,83:473,84:474,85:475,74:476,91:483,22:484,87:486,114:487,95:488,210:491,101:492,103:493,19:[1,490],21:[1,495],65:[1,464],67:[1,465],75:[1,477],76:[1,478],77:[1,479],81:[1,472],92:[1,480],93:[1,481],94:[1,482],97:$Vs3,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,485],211:[1,494]}),o($V9,$V71),o($V81,$V91,{29:496}),o($Va1,$Vb1,{54:497}),o($VC,$VD,{69:242,71:243,74:244,88:245,90:246,83:248,84:249,85:250,114:251,91:255,22:256,87:258,95:259,210:262,101:263,103:264,58:498,60:499,62:500,63:501,68:504,40:505,19:$VX1,21:$VY1,65:[1,502],67:[1,503],75:[1,506],76:[1,507],77:[1,508],81:$VZ1,92:$V_1,93:$V$1,94:$V02,97:$V12,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$V22,211:$V32}),o($V9,$Vc1,{44:272,45:273,46:274,48:275,38:509,41:510,47:$V72,49:$V82}),o($Va1,$Vd1,{61:511,63:512,68:513,40:514,74:515,114:516,75:$V42,76:$V52,77:$V62,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Ve1),o($Va1,$Vf1,{64:517,60:518,69:519,88:520,90:521,91:525,95:526,92:$Vt3,93:$Vu3,94:$Vv3,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:528,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vl1),o($Vm1,$Vn1,{78:529}),o($Vo1,$Vn1,{78:530}),o($Vp1,$Vn1,{78:531}),o($Vq1,$Vr1,{89:532}),o($Vm1,$Vs1,{95:259,91:533,97:$V12,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:534}),o($Vt1,$Vu1,{82:535}),o($Vt1,$Vu1,{82:536}),o($Vo1,$Vv1,{101:263,103:264,87:537,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,538],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:539}),o($VH1,$VI1),{96:[1,540]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,542],102:541,104:[1,543],105:[1,544],106:545,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,546]},o($Vt1,$Vt),o($Vt1,$Vu),o($V9,$Vc1,{44:272,45:273,46:274,48:275,41:510,38:547,47:$V72,49:$V82}),o($Va1,$V11),o($Va1,$V21),{19:[1,551],21:[1,555],22:549,32:548,196:550,210:552,211:[1,554],212:[1,553]},o($V9,$VP1),o($V9,$VQ1,{46:556,47:$V72}),o($V81,$V91,{29:557,48:558,49:$V82}),o($V81,$VR1),o($Va1,$VS1),o($Vx,$Vg,{28:559,50:560,36:561,39:$Vy}),o($Vx,$Vg,{50:562,36:563,39:$Vy}),o($V81,$Vx3),o($Va1,$Vy3),o($Va1,$Vz3),o($Va1,$VA3),{66:[1,564]},o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),o($Vw2,$Vv2,{80:345,188:346,79:565,186:$Vx2}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:566,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:345,188:346,79:567,186:$Vx2}),o($Vo1,$Vz2,{95:179,91:568,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VB3),{38:569,41:570,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2,66:$Vc1},o($VC,$VD,{61:571,63:572,68:573,40:574,74:575,114:576,47:$Vd1,49:$Vd1,66:$Vd1,75:$Vp2,76:$Vq2,77:$Vr2}),o($VC3,$Ve1),o($VC3,$Vf1,{64:577,60:578,69:579,88:580,90:581,91:585,95:586,92:[1,582],93:[1,583],94:[1,584],97:$VD3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:588,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vl1),o($VE3,$Vn1,{78:589}),o($VF3,$Vn1,{78:590}),o($VG3,$Vn1,{78:591}),o($VH3,$Vr1,{89:592}),o($VE3,$Vs1,{95:321,91:593,97:$Vo2,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:594}),o($VI3,$Vu1,{82:595}),o($VI3,$Vu1,{82:596}),o($VF3,$Vv1,{101:325,103:326,87:597,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,598],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:599}),o($VJ3,$VI1),{96:[1,600]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,602],102:601,104:[1,603],105:[1,604],106:605,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,606]},o($VI3,$Vt),o($VI3,$Vu),{38:607,41:570,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2,66:$Vc1},o($VC3,$V11),o($VC3,$V21),{19:[1,611],21:[1,615],22:609,32:608,196:610,210:612,211:[1,614],212:[1,613]},{66:$VP1},{46:616,47:$Vs2,66:$VQ1},o($VK3,$V91,{29:617,48:618,49:$Vt2}),o($VK3,$VR1),o($VC3,$VS1),o($Vx,$Vg,{28:619,50:620,36:621,39:$Vy}),o($Vx,$Vg,{50:622,36:623,39:$Vy}),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:624,189:[1,625]}),{19:$VP3,21:$VQ3,22:627,125:626,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:633,189:[1,634]}),{19:$VP3,21:$VQ3,22:627,125:635,195:$VR3,210:630,211:$VS3},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:636,189:[1,637]}),{19:$VP3,21:$VQ3,22:627,125:638,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,639]},o($Vt1,$VJ1),{96:[1,641],102:640,104:[1,642],105:[1,643],106:644,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,645]},{117:[1,646]},{117:[2,138]},{117:$VZ3},{117:$V_3,129:647,130:648,131:$V$3},{117:$V04},o($V14,$V24),o($V14,$V34),o($V14,$V44,{135:650,138:651,139:654,136:$V54,137:$V64}),o($V74,$V84,{141:655,146:656,147:657,150:658,151:660,65:[1,659],156:$V94}),o($Va4,$Vb4),o($VG2,[2,164]),{19:[1,665],21:[1,669],22:663,145:662,196:664,210:666,211:[1,668],212:[1,667]},{19:[1,673],21:[1,677],22:671,145:670,196:672,210:674,211:[1,676],212:[1,675]},o($VC,[2,261],{22:375,196:376,210:378,32:678,19:$VL2,21:$VM2,211:$VN2,212:$VO2}),o($Vc4,[2,264]),o($Vc4,$Vl),o($Vc4,$Vm),o($Vc4,$Vq),o($Vc4,$Vr),o($Vc4,$Vs),o($Vc4,$Vt),o($Vc4,$Vu),o($VC,[2,139],{22:384,210:387,125:679,19:$VP2,21:$VQ2,195:$VR2,211:$VS2}),o($Vd4,[2,140]),o($Vd4,$Ve4),o($Vd4,$Vf4),o($Vd4,$Vq),o($Vd4,$Vr),o($Vd4,$Vt),o($Vd4,$Vu),o($Vt1,$Vg4),o($VF1,[2,180]),o($VF1,[2,181]),o($VF1,[2,182]),o($VF1,[2,183]),{164:680,165:681,166:684,167:682,168:685,169:683,170:686,175:[1,687]},o($VF1,[2,198],{171:688,173:689,174:[1,690]}),o($VF1,[2,207],{178:691,180:692,174:[1,693]}),o($VF1,[2,215],{182:694,183:695,174:$Vh4}),{174:$Vh4,183:697},o($Vi4,$Vq),o($Vi4,$Vr),o($Vi4,$Vj4),o($Vi4,$Vk4),o($Vi4,$Vl4),o($Vi4,$Vt),o($Vi4,$Vu),o($Vi4,$Vm4),o($Vi4,$Vn4,{198:698,199:699,107:[1,700]}),o($Vi4,$Vo4),o($Vi4,$Vp4),o($Vi4,$Vq4),o($Vi4,$Vr4),o($Vi4,$Vs4),o($Vi4,$Vt4),o($Vi4,$Vu4),o($Vi4,$Vv4),o($Vi4,$Vw4),o($Vx4,$Vg3),o($Vx4,$Vh3),o($Vx4,$Vi3),o($Vx4,$Vj3),{19:[1,703],21:[1,706],22:702,83:701,210:704,211:[1,705]},o($V81,$Va2,{48:707,49:[1,708]}),o($Va1,$Vb2),o($Va1,$Vd1,{61:709,63:710,68:711,40:712,74:713,114:717,75:[1,714],76:[1,715],77:[1,716],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:718,60:719,69:720,88:721,90:722,91:726,95:727,92:[1,723],93:[1,724],94:[1,725],97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:729,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:730}),o($Vo1,$Vn1,{78:731}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:732}),o($Vm1,$Vs1,{95:452,91:733,97:$Vq3,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:734}),o($Vt1,$Vu1,{82:735}),o($Vt1,$Vu1,{82:736}),o($Vo1,$Vv1,{101:456,103:457,87:737,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:738}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,742],21:[1,746],22:740,32:739,196:741,210:743,211:[1,745],212:[1,744]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:747}),o($VH1,$VI1),{115:[1,748],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,749]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,751],102:750,104:[1,752],105:[1,753],106:754,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,755]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:756,63:757,68:758,40:759,74:760,114:764,75:[1,761],76:[1,762],77:[1,763],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:765,60:766,69:767,88:768,90:769,91:773,95:774,92:[1,770],93:[1,771],94:[1,772],97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:776,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:777}),o($Vo1,$Vn1,{78:778}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:779}),o($Vm1,$Vs1,{95:488,91:780,97:$Vs3,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:781}),o($Vt1,$Vu1,{82:782}),o($Vt1,$Vu1,{82:783}),o($Vo1,$Vv1,{101:492,103:493,87:784,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:785}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,789],21:[1,793],22:787,32:786,196:788,210:790,211:[1,792],212:[1,791]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:794}),o($VH1,$VI1),{115:[1,795],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,796]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,798],102:797,104:[1,799],105:[1,800],106:801,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,802]},o($Vt1,$Vt),o($Vt1,$Vu),o($V9,$V92,{46:803,47:$V72}),o($V81,$Va2,{48:804,49:$V82}),o($Va1,$Vb2),o($Va1,$Vd1,{63:512,68:513,40:514,74:515,114:516,61:805,75:$V42,76:$V52,77:$V62,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{60:518,69:519,88:520,90:521,91:525,95:526,64:806,92:$Vt3,93:$Vu3,94:$Vv3,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:807,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Ve2,$V11),o($Ve2,$V21),{19:[1,811],21:[1,815],22:809,32:808,196:810,210:812,211:[1,814],212:[1,813]},o($V9,$Vh2),o($V9,$Vi2),o($Va1,$Vj2),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:816}),{115:[1,817],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$Vl2),o($Va1,$Vm2),o($Vo1,$Vn1,{78:818}),o($Vn2,$Vr1,{89:819}),o($Vo1,$Vs1,{95:526,91:820,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,821]},o($Vn2,$VJ1),{66:[1,822]},o($Vu2,$Vv2,{79:823,80:824,188:825,186:[1,826]}),o($Vw2,$Vv2,{79:827,80:828,188:829,186:$VA4}),o($Vy2,$Vv2,{79:831,80:832,188:833,186:[1,834]}),o($Vm1,$Vz2,{95:259,91:835,97:$V12,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:843,117:$VI2,144:$VJ2,185:$VK2}),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,844],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,845]},o($VH1,$Vk3),o($V9,$Vl3),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($V81,$Vm3),o($V9,$Vn3,{46:803,47:$V72}),o($Va1,$Vo3),o($V81,$Vp3),o($Va1,$Vb1,{54:846}),o($VC,$VD,{58:847,60:848,62:849,63:850,69:853,71:854,68:855,40:856,88:857,90:858,83:860,84:861,85:862,74:863,91:870,22:871,87:873,114:874,95:875,210:878,101:879,103:880,19:[1,877],21:[1,882],65:[1,851],67:[1,852],75:[1,864],76:[1,865],77:[1,866],81:[1,859],92:[1,867],93:[1,868],94:[1,869],97:$VC4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,872],211:[1,881]}),o($Va1,$Vr3),o($VC,$VD,{58:883,60:884,62:885,63:886,69:889,71:890,68:891,40:892,88:893,90:894,83:896,84:897,85:898,74:899,91:906,22:907,87:909,114:910,95:911,210:914,101:915,103:916,19:[1,913],21:[1,918],65:[1,887],67:[1,888],75:[1,900],76:[1,901],77:[1,902],81:[1,895],92:[1,903],93:[1,904],94:[1,905],97:$VD4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,908],211:[1,917]}),o($Va1,$VE4),o($Va1,$VU3),{117:[1,919]},o($Va1,$VM3),o($Vn2,$VV3),{66:$Vh2},{66:$Vi2},o($VC3,$Vj2),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:920}),{115:[1,921],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$Vl2),o($VC3,$Vm2),o($VF3,$Vn1,{78:922}),o($VF4,$Vr1,{89:923}),o($VF3,$Vs1,{95:586,91:924,97:$VD3,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,925]},o($VF4,$VJ1),{66:[1,926]},o($VG4,$Vv2,{79:927,80:928,188:929,186:[1,930]}),o($VH4,$Vv2,{79:931,80:932,188:933,186:$VI4}),o($VJ4,$Vv2,{79:935,80:936,188:937,186:[1,938]}),o($VE3,$Vz2,{95:321,91:939,97:$Vo2,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:947,117:$VI2,144:$VJ2,185:$VK2}),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,948],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,949]},o($VJ3,$Vk3),{66:$Vl3},o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VK3,$Vm3),{46:950,47:$Vs2,66:$Vn3},o($VC3,$Vo3),o($VK3,$Vp3),o($VC3,$Vb1,{54:951}),o($VC,$VD,{58:952,60:953,62:954,63:955,69:958,71:959,68:960,40:961,88:962,90:963,83:965,84:966,85:967,74:968,91:975,22:976,87:978,114:979,95:980,210:983,101:984,103:985,19:[1,982],21:[1,987],65:[1,956],67:[1,957],75:[1,969],76:[1,970],77:[1,971],81:[1,964],92:[1,972],93:[1,973],94:[1,974],97:$VL4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,977],211:[1,986]}),o($VC3,$Vr3),o($VC,$VD,{58:988,60:989,62:990,63:991,69:994,71:995,68:996,40:997,88:998,90:999,83:1001,84:1002,85:1003,74:1004,91:1011,22:1012,87:1014,114:1015,95:1016,210:1019,101:1020,103:1021,19:[1,1018],21:[1,1023],65:[1,992],67:[1,993],75:[1,1005],76:[1,1006],77:[1,1007],81:[1,1000],92:[1,1008],93:[1,1009],94:[1,1010],97:$VM4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1013],211:[1,1022]}),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:1024,210:52,211:$Vp},{19:$VO4,21:$VP4,22:1026,96:[1,1037],104:[1,1038],105:[1,1039],106:1036,177:1027,187:1025,192:1030,193:1031,194:1032,197:1035,200:[1,1040],201:[1,1041],202:[1,1046],203:[1,1047],204:[1,1048],205:[1,1049],206:[1,1042],207:[1,1043],208:[1,1044],209:[1,1045],210:1029,211:$VQ4},o($VR4,$Ve4),o($VR4,$Vf4),o($VR4,$Vq),o($VR4,$Vr),o($VR4,$Vt),o($VR4,$Vu),o($Vw2,$VN4),{19:$Vn,21:$Vo,22:1050,210:52,211:$Vp},{19:$VS4,21:$VT4,22:1052,96:[1,1063],104:[1,1064],105:[1,1065],106:1062,177:1053,187:1051,192:1056,193:1057,194:1058,197:1061,200:[1,1066],201:[1,1067],202:[1,1072],203:[1,1073],204:[1,1074],205:[1,1075],206:[1,1068],207:[1,1069],208:[1,1070],209:[1,1071],210:1055,211:$VU4},o($Vy2,$VN4),{19:$Vn,21:$Vo,22:1076,210:52,211:$Vp},{19:$VV4,21:$VW4,22:1078,96:[1,1089],104:[1,1090],105:[1,1091],106:1088,177:1079,187:1077,192:1082,193:1083,194:1084,197:1087,200:[1,1092],201:[1,1093],202:[1,1098],203:[1,1099],204:[1,1100],205:[1,1101],206:[1,1094],207:[1,1095],208:[1,1096],209:[1,1097],210:1081,211:$VX4},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,1102]},o($Vt1,$Vk3),o($Vp1,$VY4),{117:$VZ4,130:1103,131:$V$3},o($V14,$V_4),o($VG2,$VH2,{132:365,133:366,134:367,140:368,142:369,143:370,127:1104,144:$VJ2,185:$VK2}),o($V14,$V$4),o($V14,$V44,{135:1105,139:1106,136:$V54,137:$V64}),o($VG2,$VH2,{140:368,142:369,143:370,134:1107,117:$V05,131:$V05,144:$VJ2,185:$VK2}),o($VG2,$VH2,{140:368,142:369,143:370,134:1108,117:$V15,131:$V15,144:$VJ2,185:$VK2}),o($Va4,$V25),o($Va4,$V35),o($Va4,$V45),o($Va4,$V55),{19:$V65,21:$V75,22:1110,125:1109,195:$V85,210:1113,211:$V95},o($VG2,$VH2,{143:370,122:1116,126:1117,127:1118,128:1119,132:1120,133:1121,134:1122,140:1123,142:1124,144:$VJ2,185:$Va5}),o($V74,[2,172]),o($V74,[2,177]),o($Va4,$Vb5),o($Va4,$Vc5),o($Va4,$Vd5),o($Va4,$Vq),o($Va4,$Vr),o($Va4,$Vs),o($Va4,$Vt),o($Va4,$Vu),o($VG2,[2,162]),o($VG2,$Vc5),o($VG2,$Vd5),o($VG2,$Vq),o($VG2,$Vr),o($VG2,$Vs),o($VG2,$Vt),o($VG2,$Vu),o($Vc4,[2,265]),o($Vd4,[2,141]),o($VF1,[2,184]),o($VF1,[2,191],{166:1126,175:$Ve5}),o($VF1,[2,192],{168:1128,175:$Vf5}),o($VF1,[2,193],{170:1130,175:$Vg5}),o($Vh5,[2,185]),o($Vh5,[2,187]),o($Vh5,[2,189]),{19:$Vi5,21:$Vj5,22:1132,96:$Vk5,104:$Vl5,105:$Vm5,106:1143,177:1133,181:$Vn5,192:1137,193:1138,194:1139,197:1142,200:$Vo5,201:$Vp5,202:$Vq5,203:$Vr5,204:$Vs5,205:$Vt5,206:$Vu5,207:$Vv5,208:$Vw5,209:$Vx5,210:1136,211:$Vy5},o($VF1,[2,194]),o($VF1,[2,199]),o($Vh5,[2,195],{172:1157}),o($VF1,[2,203]),o($VF1,[2,208]),o($Vh5,[2,204],{179:1158}),o($VF1,[2,210]),o($VF1,[2,216]),o($Vh5,[2,212],{184:1159}),o($VF1,[2,211]),o($Vi4,$Vz5),o($Vi4,$VA5),{19:$VU2,21:$VV2,22:1161,83:1160,210:401,211:$Va3},o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$Vy3),o($Vx,$Vg,{50:1162,36:1163,39:$Vy}),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1164}),o($Va1,$V11),o($Va1,$V21),{19:[1,1168],21:[1,1172],22:1166,32:1165,196:1167,210:1169,211:[1,1171],212:[1,1170]},{115:[1,1173],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1174}),o($Vn2,$Vr1,{89:1175}),o($Vo1,$Vs1,{95:727,91:1176,97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1177]},o($Vn2,$VJ1),{66:[1,1178]},o($Vu2,$Vv2,{79:1179,80:1180,188:1181,186:[1,1182]}),o($Vw2,$Vv2,{79:1183,80:1184,188:1185,186:$VC5}),o($Vm1,$Vz2,{95:452,91:1187,97:$Vq3,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1195,80:1196,188:1197,186:[1,1198]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1199],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1200,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1201]},o($VH1,$Vk3),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1202}),o($Va1,$V11),o($Va1,$V21),{19:[1,1206],21:[1,1210],22:1204,32:1203,196:1205,210:1207,211:[1,1209],212:[1,1208]},{115:[1,1211],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1212}),o($Vn2,$Vr1,{89:1213}),o($Vo1,$Vs1,{95:774,91:1214,97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1215]},o($Vn2,$VJ1),{66:[1,1216]},o($Vu2,$Vv2,{79:1217,80:1218,188:1219,186:[1,1220]}),o($Vw2,$Vv2,{79:1221,80:1222,188:1223,186:$VE5}),o($Vm1,$Vz2,{95:488,91:1225,97:$Vs3,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1233,80:1234,188:1235,186:[1,1236]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1237],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1238,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1239]},o($VH1,$Vk3),o($V81,$Vx3),o($Va1,$Vy3),o($Va1,$Vz3),o($Va1,$VA3),{66:[1,1240]},o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),o($Vw2,$Vv2,{80:828,188:829,79:1241,186:$VA4}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1242,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:828,188:829,79:1243,186:$VA4}),o($Vo1,$Vz2,{95:526,91:1244,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VB3),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1245,189:[1,1246]}),{19:$VP3,21:$VQ3,22:627,125:1247,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1248,189:[1,1249]}),{19:$VP3,21:$VQ3,22:627,125:1250,195:$VR3,210:630,211:$VS3},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1251,189:[1,1252]}),{19:$VP3,21:$VQ3,22:627,125:1253,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1254]},o($Vt1,$VJ1),{96:[1,1256],102:1255,104:[1,1257],105:[1,1258],106:1259,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1260]},{117:[1,1261]},o($Vt1,$Vg4),{19:[1,1264],21:[1,1267],22:1263,83:1262,210:1265,211:[1,1266]},o($V81,$Va2,{48:1268,49:[1,1269]}),o($Va1,$Vb2),o($Va1,$Vd1,{61:1270,63:1271,68:1272,40:1273,74:1274,114:1278,75:[1,1275],76:[1,1276],77:[1,1277],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:1279,60:1280,69:1281,88:1282,90:1283,91:1287,95:1288,92:[1,1284],93:[1,1285],94:[1,1286],97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1290,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:1291}),o($Vo1,$Vn1,{78:1292}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:1293}),o($Vm1,$Vs1,{95:875,91:1294,97:$VC4,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:1295}),o($Vt1,$Vu1,{82:1296}),o($Vt1,$Vu1,{82:1297}),o($Vo1,$Vv1,{101:879,103:880,87:1298,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:1299}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,1303],21:[1,1307],22:1301,32:1300,196:1302,210:1304,211:[1,1306],212:[1,1305]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:1308}),o($VH1,$VI1),{115:[1,1309],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1310]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,1312],102:1311,104:[1,1313],105:[1,1314],106:1315,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1316]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:1317,63:1318,68:1319,40:1320,74:1321,114:1325,75:[1,1322],76:[1,1323],77:[1,1324],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:1326,60:1327,69:1328,88:1329,90:1330,91:1334,95:1335,92:[1,1331],93:[1,1332],94:[1,1333],97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1337,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:1338}),o($Vo1,$Vn1,{78:1339}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:1340}),o($Vm1,$Vs1,{95:911,91:1341,97:$VD4,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:1342}),o($Vt1,$Vu1,{82:1343}),o($Vt1,$Vu1,{82:1344}),o($Vo1,$Vv1,{101:915,103:916,87:1345,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:1346}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,1350],21:[1,1354],22:1348,32:1347,196:1349,210:1351,211:[1,1353],212:[1,1352]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:1355}),o($VH1,$VI1),{115:[1,1356],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1357]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,1359],102:1358,104:[1,1360],105:[1,1361],106:1362,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1363]},o($Vt1,$Vt),o($Vt1,$Vu),o($Vo1,$VY4),o($VH4,$Vv2,{80:932,188:933,79:1364,186:$VI4}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1365,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:932,188:933,79:1366,186:$VI4}),o($VF3,$Vz2,{95:586,91:1367,97:$VD3,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VB3),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:1368,189:[1,1369]}),{19:$VP3,21:$VQ3,22:627,125:1370,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:1371,189:[1,1372]}),{19:$VP3,21:$VQ3,22:627,125:1373,195:$VR3,210:630,211:$VS3},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:1374,189:[1,1375]}),{19:$VP3,21:$VQ3,22:627,125:1376,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,1377]},o($VI3,$VJ1),{96:[1,1379],102:1378,104:[1,1380],105:[1,1381],106:1382,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1383]},{117:[1,1384]},o($VI3,$Vg4),{19:[1,1387],21:[1,1390],22:1386,83:1385,210:1388,211:[1,1389]},o($VK3,$Vx3),o($VK3,$Va2,{48:1391,49:[1,1392]}),o($VC3,$Vb2),o($VC,$VD,{61:1393,63:1394,68:1395,40:1396,74:1397,114:1401,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,1398],76:[1,1399],77:[1,1400]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:1402,60:1403,69:1404,88:1405,90:1406,91:1410,95:1411,92:[1,1407],93:[1,1408],94:[1,1409],97:$VK5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1413,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:1414}),o($VF3,$Vn1,{78:1415}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:1416}),o($VE3,$Vs1,{95:980,91:1417,97:$VL4,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:1418}),o($VI3,$Vu1,{82:1419}),o($VI3,$Vu1,{82:1420}),o($VF3,$Vv1,{101:984,103:985,87:1421,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:1422}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,1426],21:[1,1430],22:1424,32:1423,196:1425,210:1427,211:[1,1429],212:[1,1428]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:1431}),o($VJ3,$VI1),{115:[1,1432],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1433]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,1435],102:1434,104:[1,1436],105:[1,1437],106:1438,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1439]},o($VI3,$Vt),o($VI3,$Vu),o($VC3,$Vb2),o($VC,$VD,{61:1440,63:1441,68:1442,40:1443,74:1444,114:1448,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,1445],76:[1,1446],77:[1,1447]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:1449,60:1450,69:1451,88:1452,90:1453,91:1457,95:1458,92:[1,1454],93:[1,1455],94:[1,1456],97:$VL5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1460,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:1461}),o($VF3,$Vn1,{78:1462}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:1463}),o($VE3,$Vs1,{95:1016,91:1464,97:$VM4,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:1465}),o($VI3,$Vu1,{82:1466}),o($VI3,$Vu1,{82:1467}),o($VF3,$Vv1,{101:1020,103:1021,87:1468,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:1469}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,1473],21:[1,1477],22:1471,32:1470,196:1472,210:1474,211:[1,1476],212:[1,1475]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:1478}),o($VJ3,$VI1),{115:[1,1479],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1480]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,1482],102:1481,104:[1,1483],105:[1,1484],106:1485,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1486]},o($VI3,$Vt),o($VI3,$Vu),{189:[1,1489],190:1487,191:[1,1488]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:1490,199:1491,107:[1,1492]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,1495],190:1493,191:[1,1494]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:1496,199:1497,107:[1,1498]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{189:[1,1501],190:1499,191:[1,1500]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:1502,199:1503,107:[1,1504]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),{19:[1,1507],21:[1,1510],22:1506,83:1505,210:1508,211:[1,1509]},o($V14,$VS5),o($V14,$VT5),o($V14,$VU5),o($Va4,$VV5),o($Va4,$VW5),o($Va4,$VX5),o($Vx,$Vg,{42:1511,43:1512,51:1513,55:1514,36:1515,39:$Vy}),o($VY5,$Ve4),o($VY5,$Vf4),o($VY5,$Vq),o($VY5,$Vr),o($VY5,$Vt),o($VY5,$Vu),{66:[1,1516]},{66:$VZ3},{66:$V_3,129:1517,130:1518,131:$VZ5},{66:$V04},o($V_5,$V24),o($V_5,$V34),o($V_5,$V44,{135:1520,138:1521,139:1524,136:$V$5,137:$V06}),o($V74,$V84,{151:660,141:1525,146:1526,147:1527,150:1528,65:[1,1529],156:$V94}),o($V16,$Vb4),{19:[1,1533],21:[1,1537],22:1531,145:1530,196:1532,210:1534,211:[1,1536],212:[1,1535]},o($Vh5,[2,186]),{19:$Vi5,21:$Vj5,22:1132,210:1136,211:$Vy5},o($Vh5,[2,188]),{96:$Vk5,104:$Vl5,105:$Vm5,106:1143,177:1133,192:1137,193:1138,194:1139,197:1142,200:$Vo5,201:$Vp5,202:$Vq5,203:$Vr5,204:$Vs5,205:$Vt5,206:$Vu5,207:$Vv5,208:$Vw5,209:$Vx5},o($Vh5,[2,190]),{181:$Vn5},o($Vh5,$V26,{176:1538,174:$V36}),o($Vh5,$V26,{176:1540,174:$V36}),o($Vh5,$V26,{176:1541,174:$V36}),o($V46,$Vq),o($V46,$Vr),o($V46,$Vj4),o($V46,$Vk4),o($V46,$Vl4),o($V46,$Vt),o($V46,$Vu),o($V46,$Vm4),o($V46,$Vn4,{198:1542,199:1543,107:[1,1544]}),o($V46,$Vo4),o($V46,$Vp4),o($V46,$Vq4),o($V46,$Vr4),o($V46,$Vs4),o($V46,$Vt4),o($V46,$Vu4),o($V46,$Vv4),o($V46,$Vw4),o($V56,$Vg3),o($V56,$Vh3),o($V56,$Vi3),o($V56,$Vj3),o($VF1,[2,197],{166:1545,175:$Ve5}),o($VF1,[2,206],{168:1546,175:$Vf5}),o($VF1,[2,214],{170:1547,175:$Vg5}),o($Vi4,$V66),o($Vi4,$VE1),o($Va1,$Vr3),o($VC,$VD,{58:1548,60:1549,62:1550,63:1551,69:1554,71:1555,68:1556,40:1557,88:1558,90:1559,83:1561,84:1562,85:1563,74:1564,91:1571,22:1572,87:1574,114:1575,95:1576,210:1579,101:1580,103:1581,19:[1,1578],21:[1,1583],65:[1,1552],67:[1,1553],75:[1,1565],76:[1,1566],77:[1,1567],81:[1,1560],92:[1,1568],93:[1,1569],94:[1,1570],97:$V76,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1573],211:[1,1582]}),o($Vw2,$Vv2,{80:1184,188:1185,79:1584,186:$VC5}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1585,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1184,188:1185,79:1586,186:$VC5}),o($Vo1,$Vz2,{95:727,91:1587,97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1588,189:[1,1589]}),{19:$VP3,21:$VQ3,22:627,125:1590,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1591,189:[1,1592]}),{19:$VP3,21:$VQ3,22:627,125:1593,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1594]},o($Vt1,$VJ1),{96:[1,1596],102:1595,104:[1,1597],105:[1,1598],106:1599,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1600]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1601,189:[1,1602]}),{19:$VP3,21:$VQ3,22:627,125:1603,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,1604]},{19:[1,1607],21:[1,1610],22:1606,83:1605,210:1608,211:[1,1609]},o($Vw2,$Vv2,{80:1222,188:1223,79:1611,186:$VE5}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1612,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1222,188:1223,79:1613,186:$VE5}),o($Vo1,$Vz2,{95:774,91:1614,97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1615,189:[1,1616]}),{19:$VP3,21:$VQ3,22:627,125:1617,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1618,189:[1,1619]}),{19:$VP3,21:$VQ3,22:627,125:1620,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1621]},o($Vt1,$VJ1),{96:[1,1623],102:1622,104:[1,1624],105:[1,1625],106:1626,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1627]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1628,189:[1,1629]}),{19:$VP3,21:$VQ3,22:627,125:1630,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,1631]},{19:[1,1634],21:[1,1637],22:1633,83:1632,210:1635,211:[1,1636]},o($Va1,$VE4),o($Va1,$VU3),{117:[1,1638]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:1639,210:52,211:$Vp},{19:$V86,21:$V96,22:1641,96:[1,1652],104:[1,1653],105:[1,1654],106:1651,177:1642,187:1640,192:1645,193:1646,194:1647,197:1650,200:[1,1655],201:[1,1656],202:[1,1661],203:[1,1662],204:[1,1663],205:[1,1664],206:[1,1657],207:[1,1658],208:[1,1659],209:[1,1660],210:1644,211:$Va6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:1665,210:52,211:$Vp},{19:$Vb6,21:$Vc6,22:1667,96:[1,1678],104:[1,1679],105:[1,1680],106:1677,177:1668,187:1666,192:1671,193:1672,194:1673,197:1676,200:[1,1681],201:[1,1682],202:[1,1687],203:[1,1688],204:[1,1689],205:[1,1690],206:[1,1683],207:[1,1684],208:[1,1685],209:[1,1686],210:1670,211:$Vd6},o($Vy2,$VN4),{19:$Vn,21:$Vo,22:1691,210:52,211:$Vp},{19:$Ve6,21:$Vf6,22:1693,96:[1,1704],104:[1,1705],105:[1,1706],106:1703,177:1694,187:1692,192:1697,193:1698,194:1699,197:1702,200:[1,1707],201:[1,1708],202:[1,1713],203:[1,1714],204:[1,1715],205:[1,1716],206:[1,1709],207:[1,1710],208:[1,1711],209:[1,1712],210:1696,211:$Vg6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,1717]},o($Vt1,$Vk3),o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$Vy3),o($Vx,$Vg,{50:1718,36:1719,39:$Vy}),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1720}),o($Va1,$V11),o($Va1,$V21),{19:[1,1724],21:[1,1728],22:1722,32:1721,196:1723,210:1725,211:[1,1727],212:[1,1726]},{115:[1,1729],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1730}),o($Vn2,$Vr1,{89:1731}),o($Vo1,$Vs1,{95:1288,91:1732,97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1733]},o($Vn2,$VJ1),{66:[1,1734]},o($Vu2,$Vv2,{79:1735,80:1736,188:1737,186:[1,1738]}),o($Vw2,$Vv2,{79:1739,80:1740,188:1741,186:$Vh6}),o($Vm1,$Vz2,{95:875,91:1743,97:$VC4,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1751,80:1752,188:1753,186:[1,1754]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1755],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1756,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1757]},o($VH1,$Vk3),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1758}),o($Va1,$V11),o($Va1,$V21),{19:[1,1762],21:[1,1766],22:1760,32:1759,196:1761,210:1763,211:[1,1765],212:[1,1764]},{115:[1,1767],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1768}),o($Vn2,$Vr1,{89:1769}),o($Vo1,$Vs1,{95:1335,91:1770,97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1771]},o($Vn2,$VJ1),{66:[1,1772]},o($Vu2,$Vv2,{79:1773,80:1774,188:1775,186:[1,1776]}),o($Vw2,$Vv2,{79:1777,80:1778,188:1779,186:$Vj6}),o($Vm1,$Vz2,{95:911,91:1781,97:$VD4,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1789,80:1790,188:1791,186:[1,1792]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1793],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1794,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1795]},o($VH1,$Vk3),o($VC3,$VU3),{117:[1,1796]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:1797,210:52,211:$Vp},{19:$Vl6,21:$Vm6,22:1799,96:[1,1810],104:[1,1811],105:[1,1812],106:1809,177:1800,187:1798,192:1803,193:1804,194:1805,197:1808,200:[1,1813],201:[1,1814],202:[1,1819],203:[1,1820],204:[1,1821],205:[1,1822],206:[1,1815],207:[1,1816],208:[1,1817],209:[1,1818],210:1802,211:$Vn6},o($VH4,$VN4),{19:$Vn,21:$Vo,22:1823,210:52,211:$Vp},{19:$Vo6,21:$Vp6,22:1825,96:[1,1836],104:[1,1837],105:[1,1838],106:1835,177:1826,187:1824,192:1829,193:1830,194:1831,197:1834,200:[1,1839],201:[1,1840],202:[1,1845],203:[1,1846],204:[1,1847],205:[1,1848],206:[1,1841],207:[1,1842],208:[1,1843],209:[1,1844],210:1828,211:$Vq6},o($VJ4,$VN4),{19:$Vn,21:$Vo,22:1849,210:52,211:$Vp},{19:$Vr6,21:$Vs6,22:1851,96:[1,1862],104:[1,1863],105:[1,1864],106:1861,177:1852,187:1850,192:1855,193:1856,194:1857,197:1860,200:[1,1865],201:[1,1866],202:[1,1871],203:[1,1872],204:[1,1873],205:[1,1874],206:[1,1867],207:[1,1868],208:[1,1869],209:[1,1870],210:1854,211:$Vt6},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,1875]},o($VI3,$Vk3),o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VC3,$Vy3),o($Vx,$Vg,{50:1876,36:1877,39:$Vy}),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:1878}),o($VC3,$V11),o($VC3,$V21),{19:[1,1882],21:[1,1886],22:1880,32:1879,196:1881,210:1883,211:[1,1885],212:[1,1884]},{115:[1,1887],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:1888}),o($VF4,$Vr1,{89:1889}),o($VF3,$Vs1,{95:1411,91:1890,97:$VK5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,1891]},o($VF4,$VJ1),{66:[1,1892]},o($VG4,$Vv2,{79:1893,80:1894,188:1895,186:[1,1896]}),o($VH4,$Vv2,{79:1897,80:1898,188:1899,186:$Vu6}),o($VE3,$Vz2,{95:980,91:1901,97:$VL4,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:1909,80:1910,188:1911,186:[1,1912]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1913],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1914,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,1915]},o($VJ3,$Vk3),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:1916}),o($VC3,$V11),o($VC3,$V21),{19:[1,1920],21:[1,1924],22:1918,32:1917,196:1919,210:1921,211:[1,1923],212:[1,1922]},{115:[1,1925],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:1926}),o($VF4,$Vr1,{89:1927}),o($VF3,$Vs1,{95:1458,91:1928,97:$VL5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,1929]},o($VF4,$VJ1),{66:[1,1930]},o($VG4,$Vv2,{79:1931,80:1932,188:1933,186:[1,1934]}),o($VH4,$Vv2,{79:1935,80:1936,188:1937,186:$Vw6}),o($VE3,$Vz2,{95:1016,91:1939,97:$VM4,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:1947,80:1948,188:1949,186:[1,1950]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1951],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1952,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,1953]},o($VJ3,$Vk3),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VO4,21:$VP4,22:1955,83:1954,210:1029,211:$VQ4},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VS4,21:$VT4,22:1957,83:1956,210:1055,211:$VU4},o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VV4,21:$VW4,22:1959,83:1958,210:1081,211:$VX4},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy6,$Vz6,{148:1960,149:1961,152:$VA6,153:$VB6,154:$VC6,155:$VD6}),o($VE6,$VF6),o($VG6,$VH6,{52:1966}),o($VI6,$VJ6,{56:1967}),o($VC,$VD,{59:1968,69:1969,71:1970,72:1971,88:1974,90:1975,83:1977,84:1978,85:1979,74:1980,40:1981,91:1985,22:1986,87:1988,114:1989,95:1993,210:1996,101:1997,103:1998,19:[1,1995],21:[1,2000],65:[1,1972],67:[1,1973],75:[1,1990],76:[1,1991],77:[1,1992],81:[1,1976],92:[1,1982],93:[1,1983],94:[1,1984],97:$VK6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1987],211:[1,1999]}),o($Vy6,$Vz6,{149:1961,148:2001,152:$VA6,153:$VB6,154:$VC6,155:$VD6}),{66:$VZ4,130:2002,131:$VZ5},o($V_5,$V_4),o($VG2,$VH2,{143:370,132:1120,133:1121,134:1122,140:1123,142:1124,127:2003,144:$VJ2,185:$Va5}),o($V_5,$V$4),o($V_5,$V44,{135:2004,139:2005,136:$V$5,137:$V06}),o($VG2,$VH2,{143:370,140:1123,142:1124,134:2006,66:$V05,131:$V05,144:$VJ2,185:$Va5}),o($VG2,$VH2,{143:370,140:1123,142:1124,134:2007,66:$V15,131:$V15,144:$VJ2,185:$Va5}),o($V16,$V25),o($V16,$V35),o($V16,$V45),o($V16,$V55),{19:$V65,21:$V75,22:1110,125:2008,195:$V85,210:1113,211:$V95},o($VG2,$VH2,{143:370,126:1117,127:1118,128:1119,132:1120,133:1121,134:1122,140:1123,142:1124,122:2009,144:$VJ2,185:$Va5}),o($V16,$Vb5),o($V16,$Vc5),o($V16,$Vd5),o($V16,$Vq),o($V16,$Vr),o($V16,$Vs),o($V16,$Vt),o($V16,$Vu),o($Vh5,[2,200]),o($Vh5,[2,202]),o($Vh5,[2,209]),o($Vh5,[2,217]),o($V46,$Vz5),o($V46,$VA5),{19:$Vi5,21:$Vj5,22:2011,83:2010,210:1136,211:$Vy5},o($Vh5,[2,196]),o($Vh5,[2,205]),o($Vh5,[2,213]),o($Va1,$Vb2),o($Va1,$Vd1,{61:2012,63:2013,68:2014,40:2015,74:2016,114:2020,75:[1,2017],76:[1,2018],77:[1,2019],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:2021,60:2022,69:2023,88:2024,90:2025,91:2029,95:2030,92:[1,2026],93:[1,2027],94:[1,2028],97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2032,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:2033}),o($Vo1,$Vn1,{78:2034}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:2035}),o($Vm1,$Vs1,{95:1576,91:2036,97:$V76,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:2037}),o($Vt1,$Vu1,{82:2038}),o($Vt1,$Vu1,{82:2039}),o($Vo1,$Vv1,{101:1580,103:1581,87:2040,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:2041}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,2045],21:[1,2049],22:2043,32:2042,196:2044,210:2046,211:[1,2048],212:[1,2047]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:2050}),o($VH1,$VI1),{115:[1,2051],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2052]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,2054],102:2053,104:[1,2055],105:[1,2056],106:2057,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2058]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$VU3),{117:[1,2059]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2060,210:52,211:$Vp},{19:$VM6,21:$VN6,22:2062,96:[1,2073],104:[1,2074],105:[1,2075],106:2072,177:2063,187:2061,192:2066,193:2067,194:2068,197:2071,200:[1,2076],201:[1,2077],202:[1,2082],203:[1,2083],204:[1,2084],205:[1,2085],206:[1,2078],207:[1,2079],208:[1,2080],209:[1,2081],210:2065,211:$VO6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2086,210:52,211:$Vp},{19:$VP6,21:$VQ6,22:2088,96:[1,2099],104:[1,2100],105:[1,2101],106:2098,177:2089,187:2087,192:2092,193:2093,194:2094,197:2097,200:[1,2102],201:[1,2103],202:[1,2108],203:[1,2109],204:[1,2110],205:[1,2111],206:[1,2104],207:[1,2105],208:[1,2106],209:[1,2107],210:2091,211:$VR6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2112]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2113,210:52,211:$Vp},{19:$VS6,21:$VT6,22:2115,96:[1,2126],104:[1,2127],105:[1,2128],106:2125,177:2116,187:2114,192:2119,193:2120,194:2121,197:2124,200:[1,2129],201:[1,2130],202:[1,2135],203:[1,2136],204:[1,2137],205:[1,2138],206:[1,2131],207:[1,2132],208:[1,2133],209:[1,2134],210:2118,211:$VU6},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$VU3),{117:[1,2139]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2140,210:52,211:$Vp},{19:$VV6,21:$VW6,22:2142,96:[1,2153],104:[1,2154],105:[1,2155],106:2152,177:2143,187:2141,192:2146,193:2147,194:2148,197:2151,200:[1,2156],201:[1,2157],202:[1,2162],203:[1,2163],204:[1,2164],205:[1,2165],206:[1,2158],207:[1,2159],208:[1,2160],209:[1,2161],210:2145,211:$VX6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2166,210:52,211:$Vp},{19:$VY6,21:$VZ6,22:2168,96:[1,2179],104:[1,2180],105:[1,2181],106:2178,177:2169,187:2167,192:2172,193:2173,194:2174,197:2177,200:[1,2182],201:[1,2183],202:[1,2188],203:[1,2189],204:[1,2190],205:[1,2191],206:[1,2184],207:[1,2185],208:[1,2186],209:[1,2187],210:2171,211:$V_6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2192]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2193,210:52,211:$Vp},{19:$V$6,21:$V07,22:2195,96:[1,2206],104:[1,2207],105:[1,2208],106:2205,177:2196,187:2194,192:2199,193:2200,194:2201,197:2204,200:[1,2209],201:[1,2210],202:[1,2215],203:[1,2216],204:[1,2217],205:[1,2218],206:[1,2211],207:[1,2212],208:[1,2213],209:[1,2214],210:2198,211:$V17},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vo1,$VY4),{189:[1,2221],190:2219,191:[1,2220]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2222,199:2223,107:[1,2224]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2227],190:2225,191:[1,2226]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2228,199:2229,107:[1,2230]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{189:[1,2233],190:2231,191:[1,2232]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2234,199:2235,107:[1,2236]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),{19:[1,2239],21:[1,2242],22:2238,83:2237,210:2240,211:[1,2241]},o($Va1,$Vr3),o($VC,$VD,{58:2243,60:2244,62:2245,63:2246,69:2249,71:2250,68:2251,40:2252,88:2253,90:2254,83:2256,84:2257,85:2258,74:2259,91:2266,22:2267,87:2269,114:2270,95:2271,210:2274,101:2275,103:2276,19:[1,2273],21:[1,2278],65:[1,2247],67:[1,2248],75:[1,2260],76:[1,2261],77:[1,2262],81:[1,2255],92:[1,2263],93:[1,2264],94:[1,2265],97:$V27,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,2268],211:[1,2277]}),o($Vw2,$Vv2,{80:1740,188:1741,79:2279,186:$Vh6}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2280,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1740,188:1741,79:2281,186:$Vh6}),o($Vo1,$Vz2,{95:1288,91:2282,97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:2283,189:[1,2284]}),{19:$VP3,21:$VQ3,22:627,125:2285,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:2286,189:[1,2287]}),{19:$VP3,21:$VQ3,22:627,125:2288,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,2289]},o($Vt1,$VJ1),{96:[1,2291],102:2290,104:[1,2292],105:[1,2293],106:2294,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2295]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:2296,189:[1,2297]}),{19:$VP3,21:$VQ3,22:627,125:2298,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,2299]},{19:[1,2302],21:[1,2305],22:2301,83:2300,210:2303,211:[1,2304]},o($Vw2,$Vv2,{80:1778,188:1779,79:2306,186:$Vj6}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2307,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1778,188:1779,79:2308,186:$Vj6}),o($Vo1,$Vz2,{95:1335,91:2309,97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:2310,189:[1,2311]}),{19:$VP3,21:$VQ3,22:627,125:2312,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:2313,189:[1,2314]}),{19:$VP3,21:$VQ3,22:627,125:2315,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,2316]},o($Vt1,$VJ1),{96:[1,2318],102:2317,104:[1,2319],105:[1,2320],106:2321,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2322]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:2323,189:[1,2324]}),{19:$VP3,21:$VQ3,22:627,125:2325,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,2326]},{19:[1,2329],21:[1,2332],22:2328,83:2327,210:2330,211:[1,2331]},o($VF3,$VY4),{189:[1,2335],190:2333,191:[1,2334]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:2336,199:2337,107:[1,2338]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,2341],190:2339,191:[1,2340]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:2342,199:2343,107:[1,2344]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{189:[1,2347],190:2345,191:[1,2346]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:2348,199:2349,107:[1,2350]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),{19:[1,2353],21:[1,2356],22:2352,83:2351,210:2354,211:[1,2355]},o($VC3,$Vr3),o($VC,$VD,{58:2357,60:2358,62:2359,63:2360,69:2363,71:2364,68:2365,40:2366,88:2367,90:2368,83:2370,84:2371,85:2372,74:2373,91:2380,22:2381,87:2383,114:2384,95:2385,210:2388,101:2389,103:2390,19:[1,2387],21:[1,2392],65:[1,2361],67:[1,2362],75:[1,2374],76:[1,2375],77:[1,2376],81:[1,2369],92:[1,2377],93:[1,2378],94:[1,2379],97:$V67,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,2382],211:[1,2391]}),o($VH4,$Vv2,{80:1898,188:1899,79:2393,186:$Vu6}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2394,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:1898,188:1899,79:2395,186:$Vu6}),o($VF3,$Vz2,{95:1411,91:2396,97:$VK5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:2397,189:[1,2398]}),{19:$VP3,21:$VQ3,22:627,125:2399,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:2400,189:[1,2401]}),{19:$VP3,21:$VQ3,22:627,125:2402,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,2403]},o($VI3,$VJ1),{96:[1,2405],102:2404,104:[1,2406],105:[1,2407],106:2408,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2409]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:2410,189:[1,2411]}),{19:$VP3,21:$VQ3,22:627,125:2412,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,2413]},{19:[1,2416],21:[1,2419],22:2415,83:2414,210:2417,211:[1,2418]},o($VH4,$Vv2,{80:1936,188:1937,79:2420,186:$Vw6}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2421,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:1936,188:1937,79:2422,186:$Vw6}),o($VF3,$Vz2,{95:1458,91:2423,97:$VL5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:2424,189:[1,2425]}),{19:$VP3,21:$VQ3,22:627,125:2426,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:2427,189:[1,2428]}),{19:$VP3,21:$VQ3,22:627,125:2429,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,2430]},o($VI3,$VJ1),{96:[1,2432],102:2431,104:[1,2433],105:[1,2434],106:2435,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2436]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:2437,189:[1,2438]}),{19:$VP3,21:$VQ3,22:627,125:2439,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,2440]},{19:[1,2443],21:[1,2446],22:2442,83:2441,210:2444,211:[1,2445]},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vy6,$Vn1,{78:2447}),o($Vy6,$V77),o($Vy6,$V87),o($Vy6,$V97),o($Vy6,$Va7),o($Vy6,$Vb7),o($VE6,$Vc7,{53:2448,47:[1,2449]}),o($VG6,$Vd7,{57:2450,49:[1,2451]}),o($VI6,$Ve7),o($VI6,$Vf7,{70:2452,72:2453,74:2454,40:2455,114:2456,75:[1,2457],76:[1,2458],77:[1,2459],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:2460,69:2461,88:2462,90:2463,91:2467,95:2468,92:[1,2464],93:[1,2465],94:[1,2466],97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2470,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:2471}),o($Vl7,$Vs1,{95:1993,91:2472,97:$VK6,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:2473}),o($Vm7,$Vu1,{82:2474}),o($Vm7,$Vu1,{82:2475}),o($VI6,$Vv1,{101:1997,103:1998,87:2476,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:2477}),o($Vq7,$VI1),{115:[1,2478],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,2482],21:[1,2486],22:2480,32:2479,196:2481,210:2483,211:[1,2485],212:[1,2484]},{96:[1,2487]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,2489],102:2488,104:[1,2490],105:[1,2491],106:2492,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2493]},o($Vm7,$Vt),o($Vm7,$Vu),o($Vy6,$Vn1,{78:2494}),o($V_5,$VS5),o($V_5,$VT5),o($V_5,$VU5),o($V16,$VV5),o($V16,$VW5),o($V16,$VX5),o($Vx,$Vg,{42:2495,43:2496,51:2497,55:2498,36:2499,39:$Vy}),{66:[1,2500]},o($V46,$V66),o($V46,$VE1),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:2501}),o($Va1,$V11),o($Va1,$V21),{19:[1,2505],21:[1,2509],22:2503,32:2502,196:2504,210:2506,211:[1,2508],212:[1,2507]},{115:[1,2510],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:2511}),o($Vn2,$Vr1,{89:2512}),o($Vo1,$Vs1,{95:2030,91:2513,97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,2514]},o($Vn2,$VJ1),{66:[1,2515]},o($Vu2,$Vv2,{79:2516,80:2517,188:2518,186:[1,2519]}),o($Vw2,$Vv2,{79:2520,80:2521,188:2522,186:$Vr7}),o($Vm1,$Vz2,{95:1576,91:2524,97:$V76,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:2532,80:2533,188:2534,186:[1,2535]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,2536],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2537,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,2538]},o($VH1,$Vk3),o($Vo1,$VY4),{189:[1,2541],190:2539,191:[1,2540]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2542,199:2543,107:[1,2544]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2547],190:2545,191:[1,2546]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2548,199:2549,107:[1,2550]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,2553],21:[1,2556],22:2552,83:2551,210:2554,211:[1,2555]},{189:[1,2559],190:2557,191:[1,2558]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2560,199:2561,107:[1,2562]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vo1,$VY4),{189:[1,2565],190:2563,191:[1,2564]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2566,199:2567,107:[1,2568]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2571],190:2569,191:[1,2570]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2572,199:2573,107:[1,2574]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,2577],21:[1,2580],22:2576,83:2575,210:2578,211:[1,2579]},{189:[1,2583],190:2581,191:[1,2582]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2584,199:2585,107:[1,2586]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$V86,21:$V96,22:2588,83:2587,210:1644,211:$Va6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$Vb6,21:$Vc6,22:2590,83:2589,210:1670,211:$Vd6},o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$Ve6,21:$Vf6,22:2592,83:2591,210:1696,211:$Vg6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:2593,63:2594,68:2595,40:2596,74:2597,114:2601,75:[1,2598],76:[1,2599],77:[1,2600],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:2602,60:2603,69:2604,88:2605,90:2606,91:2610,95:2611,92:[1,2607],93:[1,2608],94:[1,2609],97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2613,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:2614}),o($Vo1,$Vn1,{78:2615}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:2616}),o($Vm1,$Vs1,{95:2271,91:2617,97:$V27,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:2618}),o($Vt1,$Vu1,{82:2619}),o($Vt1,$Vu1,{82:2620}),o($Vo1,$Vv1,{101:2275,103:2276,87:2621,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:2622}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,2626],21:[1,2630],22:2624,32:2623,196:2625,210:2627,211:[1,2629],212:[1,2628]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:2631}),o($VH1,$VI1),{115:[1,2632],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2633]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,2635],102:2634,104:[1,2636],105:[1,2637],106:2638,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2639]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$VU3),{117:[1,2640]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2641,210:52,211:$Vp},{19:$Vu7,21:$Vv7,22:2643,96:[1,2654],104:[1,2655],105:[1,2656],106:2653,177:2644,187:2642,192:2647,193:2648,194:2649,197:2652,200:[1,2657],201:[1,2658],202:[1,2663],203:[1,2664],204:[1,2665],205:[1,2666],206:[1,2659],207:[1,2660],208:[1,2661],209:[1,2662],210:2646,211:$Vw7},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2667,210:52,211:$Vp},{19:$Vx7,21:$Vy7,22:2669,96:[1,2680],104:[1,2681],105:[1,2682],106:2679,177:2670,187:2668,192:2673,193:2674,194:2675,197:2678,200:[1,2683],201:[1,2684],202:[1,2689],203:[1,2690],204:[1,2691],205:[1,2692],206:[1,2685],207:[1,2686],208:[1,2687],209:[1,2688],210:2672,211:$Vz7},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2693]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2694,210:52,211:$Vp},{19:$VA7,21:$VB7,22:2696,96:[1,2707],104:[1,2708],105:[1,2709],106:2706,177:2697,187:2695,192:2700,193:2701,194:2702,197:2705,200:[1,2710],201:[1,2711],202:[1,2716],203:[1,2717],204:[1,2718],205:[1,2719],206:[1,2712],207:[1,2713],208:[1,2714],209:[1,2715],210:2699,211:$VC7},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$VU3),{117:[1,2720]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2721,210:52,211:$Vp},{19:$VD7,21:$VE7,22:2723,96:[1,2734],104:[1,2735],105:[1,2736],106:2733,177:2724,187:2722,192:2727,193:2728,194:2729,197:2732,200:[1,2737],201:[1,2738],202:[1,2743],203:[1,2744],204:[1,2745],205:[1,2746],206:[1,2739],207:[1,2740],208:[1,2741],209:[1,2742],210:2726,211:$VF7},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2747,210:52,211:$Vp},{19:$VG7,21:$VH7,22:2749,96:[1,2760],104:[1,2761],105:[1,2762],106:2759,177:2750,187:2748,192:2753,193:2754,194:2755,197:2758,200:[1,2763],201:[1,2764],202:[1,2769],203:[1,2770],204:[1,2771],205:[1,2772],206:[1,2765],207:[1,2766],208:[1,2767],209:[1,2768],210:2752,211:$VI7},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2773]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2774,210:52,211:$Vp},{19:$VJ7,21:$VK7,22:2776,96:[1,2787],104:[1,2788],105:[1,2789],106:2786,177:2777,187:2775,192:2780,193:2781,194:2782,197:2785,200:[1,2790],201:[1,2791],202:[1,2796],203:[1,2797],204:[1,2798],205:[1,2799],206:[1,2792],207:[1,2793],208:[1,2794],209:[1,2795],210:2779,211:$VL7},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$Vl6,21:$Vm6,22:2801,83:2800,210:1802,211:$Vn6},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$Vo6,21:$Vp6,22:2803,83:2802,210:1828,211:$Vq6},o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$Vr6,21:$Vs6,22:2805,83:2804,210:1854,211:$Vt6},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VC3,$Vb2),o($VC,$VD,{61:2806,63:2807,68:2808,40:2809,74:2810,114:2814,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,2811],76:[1,2812],77:[1,2813]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:2815,60:2816,69:2817,88:2818,90:2819,91:2823,95:2824,92:[1,2820],93:[1,2821],94:[1,2822],97:$VM7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2826,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:2827}),o($VF3,$Vn1,{78:2828}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:2829}),o($VE3,$Vs1,{95:2385,91:2830,97:$V67,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:2831}),o($VI3,$Vu1,{82:2832}),o($VI3,$Vu1,{82:2833}),o($VF3,$Vv1,{101:2389,103:2390,87:2834,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:2835}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,2839],21:[1,2843],22:2837,32:2836,196:2838,210:2840,211:[1,2842],212:[1,2841]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:2844}),o($VJ3,$VI1),{115:[1,2845],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2846]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,2848],102:2847,104:[1,2849],105:[1,2850],106:2851,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2852]},o($VI3,$Vt),o($VI3,$Vu),o($VC3,$VU3),{117:[1,2853]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:2854,210:52,211:$Vp},{19:$VN7,21:$VO7,22:2856,96:[1,2867],104:[1,2868],105:[1,2869],106:2866,177:2857,187:2855,192:2860,193:2861,194:2862,197:2865,200:[1,2870],201:[1,2871],202:[1,2876],203:[1,2877],204:[1,2878],205:[1,2879],206:[1,2872],207:[1,2873],208:[1,2874],209:[1,2875],210:2859,211:$VP7},o($VH4,$VN4),{19:$Vn,21:$Vo,22:2880,210:52,211:$Vp},{19:$VQ7,21:$VR7,22:2882,96:[1,2893],104:[1,2894],105:[1,2895],106:2892,177:2883,187:2881,192:2886,193:2887,194:2888,197:2891,200:[1,2896],201:[1,2897],202:[1,2902],203:[1,2903],204:[1,2904],205:[1,2905],206:[1,2898],207:[1,2899],208:[1,2900],209:[1,2901],210:2885,211:$VS7},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,2906]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:2907,210:52,211:$Vp},{19:$VT7,21:$VU7,22:2909,96:[1,2920],104:[1,2921],105:[1,2922],106:2919,177:2910,187:2908,192:2913,193:2914,194:2915,197:2918,200:[1,2923],201:[1,2924],202:[1,2929],203:[1,2930],204:[1,2931],205:[1,2932],206:[1,2925],207:[1,2926],208:[1,2927],209:[1,2928],210:2912,211:$VV7},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VC3,$VU3),{117:[1,2933]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:2934,210:52,211:$Vp},{19:$VW7,21:$VX7,22:2936,96:[1,2947],104:[1,2948],105:[1,2949],106:2946,177:2937,187:2935,192:2940,193:2941,194:2942,197:2945,200:[1,2950],201:[1,2951],202:[1,2956],203:[1,2957],204:[1,2958],205:[1,2959],206:[1,2952],207:[1,2953],208:[1,2954],209:[1,2955],210:2939,211:$VY7},o($VH4,$VN4),{19:$Vn,21:$Vo,22:2960,210:52,211:$Vp},{19:$VZ7,21:$V_7,22:2962,96:[1,2973],104:[1,2974],105:[1,2975],106:2972,177:2963,187:2961,192:2966,193:2967,194:2968,197:2971,200:[1,2976],201:[1,2977],202:[1,2982],203:[1,2983],204:[1,2984],205:[1,2985],206:[1,2978],207:[1,2979],208:[1,2980],209:[1,2981],210:2965,211:$V$7},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,2986]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:2987,210:52,211:$Vp},{19:$V08,21:$V18,22:2989,96:[1,3000],104:[1,3001],105:[1,3002],106:2999,177:2990,187:2988,192:2993,193:2994,194:2995,197:2998,200:[1,3003],201:[1,3004],202:[1,3009],203:[1,3010],204:[1,3011],205:[1,3012],206:[1,3005],207:[1,3006],208:[1,3007],209:[1,3008],210:2992,211:$V28},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($V38,$Vv2,{79:3013,80:3014,188:3015,186:$V48}),o($VG6,$V58),o($Vx,$Vg,{51:3017,55:3018,36:3019,39:$Vy}),o($VI6,$V68),o($Vx,$Vg,{55:3020,36:3021,39:$Vy}),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3022],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3026],21:[1,3030],22:3024,32:3023,196:3025,210:3027,211:[1,3029],212:[1,3028]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3031}),o($VI6,$Vs1,{95:2468,91:3032,97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3033]},o($Vb8,$VJ1),{66:[1,3034]},o($Vl7,$Vz2,{95:1993,91:3035,97:$VK6,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3043],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3044,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3045]},o($Vq7,$Vk3),o($V38,$Vv2,{80:3014,188:3015,79:3046,186:$V48}),o($Vd8,$Vz6,{148:3047,149:3048,152:$Ve8,153:$Vf8,154:$Vg8,155:$Vh8}),o($Vi8,$VF6),o($Vj8,$VH6,{52:3053}),o($Vk8,$VJ6,{56:3054}),o($VC,$VD,{59:3055,69:3056,71:3057,72:3058,88:3061,90:3062,83:3064,84:3065,85:3066,74:3067,40:3068,91:3072,22:3073,87:3075,114:3076,95:3080,210:3083,101:3084,103:3085,19:[1,3082],21:[1,3087],65:[1,3059],67:[1,3060],75:[1,3077],76:[1,3078],77:[1,3079],81:[1,3063],92:[1,3069],93:[1,3070],94:[1,3071],97:$Vl8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3074],211:[1,3086]}),o($Vd8,$Vz6,{149:3048,148:3088,152:$Ve8,153:$Vf8,154:$Vg8,155:$Vh8}),o($Vw2,$Vv2,{80:2521,188:2522,79:3089,186:$Vr7}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3090,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:2521,188:2522,79:3091,186:$Vr7}),o($Vo1,$Vz2,{95:2030,91:3092,97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:3093,189:[1,3094]}),{19:$VP3,21:$VQ3,22:627,125:3095,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:3096,189:[1,3097]}),{19:$VP3,21:$VQ3,22:627,125:3098,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,3099]},o($Vt1,$VJ1),{96:[1,3101],102:3100,104:[1,3102],105:[1,3103],106:3104,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3105]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:3106,189:[1,3107]}),{19:$VP3,21:$VQ3,22:627,125:3108,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,3109]},{19:[1,3112],21:[1,3115],22:3111,83:3110,210:3113,211:[1,3114]},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VM6,21:$VN6,22:3117,83:3116,210:2065,211:$VO6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VP6,21:$VQ6,22:3119,83:3118,210:2091,211:$VR6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VS6,21:$VT6,22:3121,83:3120,210:2118,211:$VU6},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VV6,21:$VW6,22:3123,83:3122,210:2145,211:$VX6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VY6,21:$VZ6,22:3125,83:3124,210:2171,211:$V_6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$V$6,21:$V07,22:3127,83:3126,210:2198,211:$V17},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:3128}),o($Va1,$V11),o($Va1,$V21),{19:[1,3132],21:[1,3136],22:3130,32:3129,196:3131,210:3133,211:[1,3135],212:[1,3134]},{115:[1,3137],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:3138}),o($Vn2,$Vr1,{89:3139}),o($Vo1,$Vs1,{95:2611,91:3140,97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,3141]},o($Vn2,$VJ1),{66:[1,3142]},o($Vu2,$Vv2,{79:3143,80:3144,188:3145,186:[1,3146]}),o($Vw2,$Vv2,{79:3147,80:3148,188:3149,186:$Vm8}),o($Vm1,$Vz2,{95:2271,91:3151,97:$V27,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:3159,80:3160,188:3161,186:[1,3162]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3163],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3164,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,3165]},o($VH1,$Vk3),o($Vo1,$VY4),{189:[1,3168],190:3166,191:[1,3167]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3169,199:3170,107:[1,3171]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3174],190:3172,191:[1,3173]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3175,199:3176,107:[1,3177]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3180],21:[1,3183],22:3179,83:3178,210:3181,211:[1,3182]},{189:[1,3186],190:3184,191:[1,3185]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3187,199:3188,107:[1,3189]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vo1,$VY4),{189:[1,3192],190:3190,191:[1,3191]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3193,199:3194,107:[1,3195]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3198],190:3196,191:[1,3197]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3199,199:3200,107:[1,3201]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3204],21:[1,3207],22:3203,83:3202,210:3205,211:[1,3206]},{189:[1,3210],190:3208,191:[1,3209]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3211,199:3212,107:[1,3213]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:3214}),o($VC3,$V11),o($VC3,$V21),{19:[1,3218],21:[1,3222],22:3216,32:3215,196:3217,210:3219,211:[1,3221],212:[1,3220]},{115:[1,3223],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:3224}),o($VF4,$Vr1,{89:3225}),o($VF3,$Vs1,{95:2824,91:3226,97:$VM7,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,3227]},o($VF4,$VJ1),{66:[1,3228]},o($VG4,$Vv2,{79:3229,80:3230,188:3231,186:[1,3232]}),o($VH4,$Vv2,{79:3233,80:3234,188:3235,186:$Vo8}),o($VE3,$Vz2,{95:2385,91:3237,97:$V67,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:3245,80:3246,188:3247,186:[1,3248]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3249],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3250,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,3251]},o($VJ3,$Vk3),o($VF3,$VY4),{189:[1,3254],190:3252,191:[1,3253]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:3255,199:3256,107:[1,3257]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,3260],190:3258,191:[1,3259]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:3261,199:3262,107:[1,3263]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,3266],21:[1,3269],22:3265,83:3264,210:3267,211:[1,3268]},{189:[1,3272],190:3270,191:[1,3271]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:3273,199:3274,107:[1,3275]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($VF3,$VY4),{189:[1,3278],190:3276,191:[1,3277]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:3279,199:3280,107:[1,3281]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,3284],190:3282,191:[1,3283]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:3285,199:3286,107:[1,3287]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,3290],21:[1,3293],22:3289,83:3288,210:3291,211:[1,3292]},{189:[1,3296],190:3294,191:[1,3295]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:3297,199:3298,107:[1,3299]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($Va4,$Vq8),o($Vy6,$VN3),o($Va4,$VO3,{31:3300,189:[1,3301]}),{19:$VP3,21:$VQ3,22:627,125:3302,195:$VR3,210:630,211:$VS3},o($VG6,$Vr8),o($VI6,$VJ6,{56:3303}),o($VC,$VD,{59:3304,69:3305,71:3306,72:3307,88:3310,90:3311,83:3313,84:3314,85:3315,74:3316,40:3317,91:3321,22:3322,87:3324,114:3325,95:3329,210:3332,101:3333,103:3334,19:[1,3331],21:[1,3336],65:[1,3308],67:[1,3309],75:[1,3326],76:[1,3327],77:[1,3328],81:[1,3312],92:[1,3318],93:[1,3319],94:[1,3320],97:$Vs8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3323],211:[1,3335]}),o($VI6,$Vt8),o($VC,$VD,{59:3337,69:3338,71:3339,72:3340,88:3343,90:3344,83:3346,84:3347,85:3348,74:3349,40:3350,91:3354,22:3355,87:3357,114:3358,95:3362,210:3365,101:3366,103:3367,19:[1,3364],21:[1,3369],65:[1,3341],67:[1,3342],75:[1,3359],76:[1,3360],77:[1,3361],81:[1,3345],92:[1,3351],93:[1,3352],94:[1,3353],97:$Vu8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3356],211:[1,3368]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3370,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:2468,91:3371,97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,3372]},o($Vm7,$VJ1),{96:[1,3374],102:3373,104:[1,3375],105:[1,3376],106:3377,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3378]},o($Vm7,$Vg4),{117:[1,3379]},{19:[1,3382],21:[1,3385],22:3381,83:3380,210:3383,211:[1,3384]},o($Va4,$Vw8),o($Vd8,$Vn1,{78:3386}),o($Vd8,$V77),o($Vd8,$V87),o($Vd8,$V97),o($Vd8,$Va7),o($Vd8,$Vb7),o($Vi8,$Vc7,{53:3387,47:[1,3388]}),o($Vj8,$Vd7,{57:3389,49:[1,3390]}),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:3391,72:3392,74:3393,40:3394,114:3395,75:[1,3396],76:[1,3397],77:[1,3398],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:3399,69:3400,88:3401,90:3402,91:3406,95:3407,92:[1,3403],93:[1,3404],94:[1,3405],97:$Vx8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3409,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:3410}),o($Vz8,$Vs1,{95:3080,91:3411,97:$Vl8,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:3412}),o($VA8,$Vu1,{82:3413}),o($VA8,$Vu1,{82:3414}),o($Vk8,$Vv1,{101:3084,103:3085,87:3415,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:3416}),o($VC8,$VI1),{115:[1,3417],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,3421],21:[1,3425],22:3419,32:3418,196:3420,210:3422,211:[1,3424],212:[1,3423]},{96:[1,3426]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,3428],102:3427,104:[1,3429],105:[1,3430],106:3431,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3432]},o($VA8,$Vt),o($VA8,$Vu),o($Vd8,$Vn1,{78:3433}),o($Va1,$VU3),{117:[1,3434]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:3435,210:52,211:$Vp},{19:$VD8,21:$VE8,22:3437,96:[1,3448],104:[1,3449],105:[1,3450],106:3447,177:3438,187:3436,192:3441,193:3442,194:3443,197:3446,200:[1,3451],201:[1,3452],202:[1,3457],203:[1,3458],204:[1,3459],205:[1,3460],206:[1,3453],207:[1,3454],208:[1,3455],209:[1,3456],210:3440,211:$VF8},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:3461,210:52,211:$Vp},{19:$VG8,21:$VH8,22:3463,96:[1,3474],104:[1,3475],105:[1,3476],106:3473,177:3464,187:3462,192:3467,193:3468,194:3469,197:3472,200:[1,3477],201:[1,3478],202:[1,3483],203:[1,3484],204:[1,3485],205:[1,3486],206:[1,3479],207:[1,3480],208:[1,3481],209:[1,3482],210:3466,211:$VI8},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,3487]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:3488,210:52,211:$Vp},{19:$VJ8,21:$VK8,22:3490,96:[1,3501],104:[1,3502],105:[1,3503],106:3500,177:3491,187:3489,192:3494,193:3495,194:3496,197:3499,200:[1,3504],201:[1,3505],202:[1,3510],203:[1,3511],204:[1,3512],205:[1,3513],206:[1,3506],207:[1,3507],208:[1,3508],209:[1,3509],210:3493,211:$VL8},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vw2,$Vv2,{80:3148,188:3149,79:3514,186:$Vm8}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3515,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:3148,188:3149,79:3516,186:$Vm8}),o($Vo1,$Vz2,{95:2611,91:3517,97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:3518,189:[1,3519]}),{19:$VP3,21:$VQ3,22:627,125:3520,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:3521,189:[1,3522]}),{19:$VP3,21:$VQ3,22:627,125:3523,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,3524]},o($Vt1,$VJ1),{96:[1,3526],102:3525,104:[1,3527],105:[1,3528],106:3529,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3530]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:3531,189:[1,3532]}),{19:$VP3,21:$VQ3,22:627,125:3533,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,3534]},{19:[1,3537],21:[1,3540],22:3536,83:3535,210:3538,211:[1,3539]},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$Vu7,21:$Vv7,22:3542,83:3541,210:2646,211:$Vw7},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$Vx7,21:$Vy7,22:3544,83:3543,210:2672,211:$Vz7},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VA7,21:$VB7,22:3546,83:3545,210:2699,211:$VC7},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VD7,21:$VE7,22:3548,83:3547,210:2726,211:$VF7},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VG7,21:$VH7,22:3550,83:3549,210:2752,211:$VI7},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VJ7,21:$VK7,22:3552,83:3551,210:2779,211:$VL7},o($VH4,$Vv2,{80:3234,188:3235,79:3553,186:$Vo8}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3554,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:3234,188:3235,79:3555,186:$Vo8}),o($VF3,$Vz2,{95:2824,91:3556,97:$VM7,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:3557,189:[1,3558]}),{19:$VP3,21:$VQ3,22:627,125:3559,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:3560,189:[1,3561]}),{19:$VP3,21:$VQ3,22:627,125:3562,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,3563]},o($VI3,$VJ1),{96:[1,3565],102:3564,104:[1,3566],105:[1,3567],106:3568,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3569]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:3570,189:[1,3571]}),{19:$VP3,21:$VQ3,22:627,125:3572,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,3573]},{19:[1,3576],21:[1,3579],22:3575,83:3574,210:3577,211:[1,3578]},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$VN7,21:$VO7,22:3581,83:3580,210:2859,211:$VP7},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$VQ7,21:$VR7,22:3583,83:3582,210:2885,211:$VS7},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$VT7,21:$VU7,22:3585,83:3584,210:2912,211:$VV7},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$VW7,21:$VX7,22:3587,83:3586,210:2939,211:$VY7},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$VZ7,21:$V_7,22:3589,83:3588,210:2965,211:$V$7},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$V08,21:$V18,22:3591,83:3590,210:2992,211:$V28},o($V38,$VN4),{19:$Vn,21:$Vo,22:3592,210:52,211:$Vp},{19:$VM8,21:$VN8,22:3594,96:[1,3605],104:[1,3606],105:[1,3607],106:3604,177:3595,187:3593,192:3598,193:3599,194:3600,197:3603,200:[1,3608],201:[1,3609],202:[1,3614],203:[1,3615],204:[1,3616],205:[1,3617],206:[1,3610],207:[1,3611],208:[1,3612],209:[1,3613],210:3597,211:$VO8},o($VG6,$Vd7,{57:3618,49:[1,3619]}),o($VI6,$Ve7),o($VI6,$Vf7,{70:3620,72:3621,74:3622,40:3623,114:3624,75:[1,3625],76:[1,3626],77:[1,3627],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:3628,69:3629,88:3630,90:3631,91:3635,95:3636,92:[1,3632],93:[1,3633],94:[1,3634],97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3638,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:3639}),o($Vl7,$Vs1,{95:3329,91:3640,97:$Vs8,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:3641}),o($Vm7,$Vu1,{82:3642}),o($Vm7,$Vu1,{82:3643}),o($VI6,$Vv1,{101:3333,103:3334,87:3644,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:3645}),o($Vq7,$VI1),{115:[1,3646],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,3650],21:[1,3654],22:3648,32:3647,196:3649,210:3651,211:[1,3653],212:[1,3652]},{96:[1,3655]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,3657],102:3656,104:[1,3658],105:[1,3659],106:3660,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3661]},o($Vm7,$Vt),o($Vm7,$Vu),o($VI6,$Ve7),o($VI6,$Vf7,{70:3662,72:3663,74:3664,40:3665,114:3666,75:[1,3667],76:[1,3668],77:[1,3669],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:3670,69:3671,88:3672,90:3673,91:3677,95:3678,92:[1,3674],93:[1,3675],94:[1,3676],97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3680,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:3681}),o($Vl7,$Vs1,{95:3362,91:3682,97:$Vu8,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:3683}),o($Vm7,$Vu1,{82:3684}),o($Vm7,$Vu1,{82:3685}),o($VI6,$Vv1,{101:3366,103:3367,87:3686,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:3687}),o($Vq7,$VI1),{115:[1,3688],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,3692],21:[1,3696],22:3690,32:3689,196:3691,210:3693,211:[1,3695],212:[1,3694]},{96:[1,3697]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,3699],102:3698,104:[1,3700],105:[1,3701],106:3702,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3703]},o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,3704]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,3705]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),o($VR8,$Vv2,{79:3706,80:3707,188:3708,186:$VS8}),o($Vj8,$V58),o($Vx,$Vg,{51:3710,55:3711,36:3712,39:$Vy}),o($Vk8,$V68),o($Vx,$Vg,{55:3713,36:3714,39:$Vy}),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,3715],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,3719],21:[1,3723],22:3717,32:3716,196:3718,210:3720,211:[1,3722],212:[1,3721]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:3724}),o($Vk8,$Vs1,{95:3407,91:3725,97:$Vx8,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,3726]},o($VT8,$VJ1),{66:[1,3727]},o($Vz8,$Vz2,{95:3080,91:3728,97:$Vl8,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3736],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3737,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,3738]},o($VC8,$Vk3),o($VR8,$Vv2,{80:3707,188:3708,79:3739,186:$VS8}),o($Vo1,$VY4),{189:[1,3742],190:3740,191:[1,3741]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3743,199:3744,107:[1,3745]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3748],190:3746,191:[1,3747]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3749,199:3750,107:[1,3751]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3754],21:[1,3757],22:3753,83:3752,210:3755,211:[1,3756]},{189:[1,3760],190:3758,191:[1,3759]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3761,199:3762,107:[1,3763]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Va1,$VU3),{117:[1,3764]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:3765,210:52,211:$Vp},{19:$VV8,21:$VW8,22:3767,96:[1,3778],104:[1,3779],105:[1,3780],106:3777,177:3768,187:3766,192:3771,193:3772,194:3773,197:3776,200:[1,3781],201:[1,3782],202:[1,3787],203:[1,3788],204:[1,3789],205:[1,3790],206:[1,3783],207:[1,3784],208:[1,3785],209:[1,3786],210:3770,211:$VX8},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:3791,210:52,211:$Vp},{19:$VY8,21:$VZ8,22:3793,96:[1,3804],104:[1,3805],105:[1,3806],106:3803,177:3794,187:3792,192:3797,193:3798,194:3799,197:3802,200:[1,3807],201:[1,3808],202:[1,3813],203:[1,3814],204:[1,3815],205:[1,3816],206:[1,3809],207:[1,3810],208:[1,3811],209:[1,3812],210:3796,211:$V_8},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,3817]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:3818,210:52,211:$Vp},{19:$V$8,21:$V09,22:3820,96:[1,3831],104:[1,3832],105:[1,3833],106:3830,177:3821,187:3819,192:3824,193:3825,194:3826,197:3829,200:[1,3834],201:[1,3835],202:[1,3840],203:[1,3841],204:[1,3842],205:[1,3843],206:[1,3836],207:[1,3837],208:[1,3838],209:[1,3839],210:3823,211:$V19},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($VC3,$VU3),{117:[1,3844]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:3845,210:52,211:$Vp},{19:$V29,21:$V39,22:3847,96:[1,3858],104:[1,3859],105:[1,3860],106:3857,177:3848,187:3846,192:3851,193:3852,194:3853,197:3856,200:[1,3861],201:[1,3862],202:[1,3867],203:[1,3868],204:[1,3869],205:[1,3870],206:[1,3863],207:[1,3864],208:[1,3865],209:[1,3866],210:3850,211:$V49},o($VH4,$VN4),{19:$Vn,21:$Vo,22:3871,210:52,211:$Vp},{19:$V59,21:$V69,22:3873,96:[1,3884],104:[1,3885],105:[1,3886],106:3883,177:3874,187:3872,192:3877,193:3878,194:3879,197:3882,200:[1,3887],201:[1,3888],202:[1,3893],203:[1,3894],204:[1,3895],205:[1,3896],206:[1,3889],207:[1,3890],208:[1,3891],209:[1,3892],210:3876,211:$V79},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,3897]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:3898,210:52,211:$Vp},{19:$V89,21:$V99,22:3900,96:[1,3911],104:[1,3912],105:[1,3913],106:3910,177:3901,187:3899,192:3904,193:3905,194:3906,197:3909,200:[1,3914],201:[1,3915],202:[1,3920],203:[1,3921],204:[1,3922],205:[1,3923],206:[1,3916],207:[1,3917],208:[1,3918],209:[1,3919],210:3903,211:$Va9},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),{189:[1,3926],190:3924,191:[1,3925]},o($Vy6,$VM5),o($Vy6,$VN5),o($Vy6,$VO5),o($Vy6,$Vq),o($Vy6,$Vr),o($Vy6,$Vj4),o($Vy6,$Vk4),o($Vy6,$Vl4),o($Vy6,$Vt),o($Vy6,$Vu),o($Vy6,$Vm4),o($Vy6,$Vn4,{198:3927,199:3928,107:[1,3929]}),o($Vy6,$Vo4),o($Vy6,$Vp4),o($Vy6,$Vq4),o($Vy6,$Vr4),o($Vy6,$Vs4),o($Vy6,$Vt4),o($Vy6,$Vu4),o($Vy6,$Vv4),o($Vy6,$Vw4),o($Vb9,$Vg3),o($Vb9,$Vh3),o($Vb9,$Vi3),o($Vb9,$Vj3),o($VI6,$V68),o($Vx,$Vg,{55:3930,36:3931,39:$Vy}),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3932],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3936],21:[1,3940],22:3934,32:3933,196:3935,210:3937,211:[1,3939],212:[1,3938]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3941}),o($VI6,$Vs1,{95:3636,91:3942,97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3943]},o($Vb8,$VJ1),{66:[1,3944]},o($Vl7,$Vz2,{95:3329,91:3945,97:$Vs8,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3953],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3954,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3955]},o($Vq7,$Vk3),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3956],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3960],21:[1,3964],22:3958,32:3957,196:3959,210:3961,211:[1,3963],212:[1,3962]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3965}),o($VI6,$Vs1,{95:3678,91:3966,97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3967]},o($Vb8,$VJ1),{66:[1,3968]},o($Vl7,$Vz2,{95:3362,91:3969,97:$Vu8,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3977],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3978,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3979]},o($Vq7,$Vk3),o($VI6,$VY4),{19:[1,3982],21:[1,3985],22:3981,83:3980,210:3983,211:[1,3984]},o($V16,$Vq8),o($Vd8,$VN3),o($V16,$VO3,{31:3986,189:[1,3987]}),{19:$VP3,21:$VQ3,22:627,125:3988,195:$VR3,210:630,211:$VS3},o($Vj8,$Vr8),o($Vk8,$VJ6,{56:3989}),o($VC,$VD,{59:3990,69:3991,71:3992,72:3993,88:3996,90:3997,83:3999,84:4000,85:4001,74:4002,40:4003,91:4007,22:4008,87:4010,114:4011,95:4015,210:4018,101:4019,103:4020,19:[1,4017],21:[1,4022],65:[1,3994],67:[1,3995],75:[1,4012],76:[1,4013],77:[1,4014],81:[1,3998],92:[1,4004],93:[1,4005],94:[1,4006],97:$Ve9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4009],211:[1,4021]}),o($Vk8,$Vt8),o($VC,$VD,{59:4023,69:4024,71:4025,72:4026,88:4029,90:4030,83:4032,84:4033,85:4034,74:4035,40:4036,91:4040,22:4041,87:4043,114:4044,95:4048,210:4051,101:4052,103:4053,19:[1,4050],21:[1,4055],65:[1,4027],67:[1,4028],75:[1,4045],76:[1,4046],77:[1,4047],81:[1,4031],92:[1,4037],93:[1,4038],94:[1,4039],97:$Vf9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4042],211:[1,4054]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4056,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:3407,91:4057,97:$Vx8,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4058]},o($VA8,$VJ1),{96:[1,4060],102:4059,104:[1,4061],105:[1,4062],106:4063,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4064]},o($VA8,$Vg4),{117:[1,4065]},{19:[1,4068],21:[1,4071],22:4067,83:4066,210:4069,211:[1,4070]},o($V16,$Vw8),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VD8,21:$VE8,22:4073,83:4072,210:3440,211:$VF8},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VG8,21:$VH8,22:4075,83:4074,210:3466,211:$VI8},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VJ8,21:$VK8,22:4077,83:4076,210:3493,211:$VL8},o($Vo1,$VY4),{189:[1,4080],190:4078,191:[1,4079]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:4081,199:4082,107:[1,4083]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,4086],190:4084,191:[1,4085]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:4087,199:4088,107:[1,4089]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,4092],21:[1,4095],22:4091,83:4090,210:4093,211:[1,4094]},{189:[1,4098],190:4096,191:[1,4097]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:4099,199:4100,107:[1,4101]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($VF3,$VY4),{189:[1,4104],190:4102,191:[1,4103]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:4105,199:4106,107:[1,4107]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,4110],190:4108,191:[1,4109]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:4111,199:4112,107:[1,4113]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,4116],21:[1,4119],22:4115,83:4114,210:4117,211:[1,4118]},{189:[1,4122],190:4120,191:[1,4121]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:4123,199:4124,107:[1,4125]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($V38,$VU1),o($V38,$VV1),o($V38,$VW1),o($Vy6,$Vz5),o($Vy6,$VA5),{19:$VM8,21:$VN8,22:4127,83:4126,210:3597,211:$VO8},o($VI6,$Vt8),o($VC,$VD,{59:4128,69:4129,71:4130,72:4131,88:4134,90:4135,83:4137,84:4138,85:4139,74:4140,40:4141,91:4145,22:4146,87:4148,114:4149,95:4153,210:4156,101:4157,103:4158,19:[1,4155],21:[1,4160],65:[1,4132],67:[1,4133],75:[1,4150],76:[1,4151],77:[1,4152],81:[1,4136],92:[1,4142],93:[1,4143],94:[1,4144],97:$Vg9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4147],211:[1,4159]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4161,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:3636,91:4162,97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4163]},o($Vm7,$VJ1),{96:[1,4165],102:4164,104:[1,4166],105:[1,4167],106:4168,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4169]},o($Vm7,$Vg4),{117:[1,4170]},{19:[1,4173],21:[1,4176],22:4172,83:4171,210:4174,211:[1,4175]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4177,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:3678,91:4178,97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4179]},o($Vm7,$VJ1),{96:[1,4181],102:4180,104:[1,4182],105:[1,4183],106:4184,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4185]},o($Vm7,$Vg4),{117:[1,4186]},{19:[1,4189],21:[1,4192],22:4188,83:4187,210:4190,211:[1,4191]},o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($VR8,$VN4),{19:$Vn,21:$Vo,22:4193,210:52,211:$Vp},{19:$Vh9,21:$Vi9,22:4195,96:[1,4206],104:[1,4207],105:[1,4208],106:4205,177:4196,187:4194,192:4199,193:4200,194:4201,197:4204,200:[1,4209],201:[1,4210],202:[1,4215],203:[1,4216],204:[1,4217],205:[1,4218],206:[1,4211],207:[1,4212],208:[1,4213],209:[1,4214],210:4198,211:$Vj9},o($Vj8,$Vd7,{57:4219,49:[1,4220]}),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4221,72:4222,74:4223,40:4224,114:4225,75:[1,4226],76:[1,4227],77:[1,4228],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4229,69:4230,88:4231,90:4232,91:4236,95:4237,92:[1,4233],93:[1,4234],94:[1,4235],97:$Vk9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4239,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4240}),o($Vz8,$Vs1,{95:4015,91:4241,97:$Ve9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4242}),o($VA8,$Vu1,{82:4243}),o($VA8,$Vu1,{82:4244}),o($Vk8,$Vv1,{101:4019,103:4020,87:4245,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4246}),o($VC8,$VI1),{115:[1,4247],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4251],21:[1,4255],22:4249,32:4248,196:4250,210:4252,211:[1,4254],212:[1,4253]},{96:[1,4256]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4258],102:4257,104:[1,4259],105:[1,4260],106:4261,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4262]},o($VA8,$Vt),o($VA8,$Vu),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4263,72:4264,74:4265,40:4266,114:4267,75:[1,4268],76:[1,4269],77:[1,4270],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4271,69:4272,88:4273,90:4274,91:4278,95:4279,92:[1,4275],93:[1,4276],94:[1,4277],97:$Vl9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4281,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4282}),o($Vz8,$Vs1,{95:4048,91:4283,97:$Vf9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4284}),o($VA8,$Vu1,{82:4285}),o($VA8,$Vu1,{82:4286}),o($Vk8,$Vv1,{101:4052,103:4053,87:4287,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4288}),o($VC8,$VI1),{115:[1,4289],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4293],21:[1,4297],22:4291,32:4290,196:4292,210:4294,211:[1,4296],212:[1,4295]},{96:[1,4298]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4300],102:4299,104:[1,4301],105:[1,4302],106:4303,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4304]},o($VA8,$Vt),o($VA8,$Vu),{117:[1,4305]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4306]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VV8,21:$VW8,22:4308,83:4307,210:3770,211:$VX8},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VY8,21:$VZ8,22:4310,83:4309,210:3796,211:$V_8},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$V$8,21:$V09,22:4312,83:4311,210:3823,211:$V19},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$V29,21:$V39,22:4314,83:4313,210:3850,211:$V49},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$V59,21:$V69,22:4316,83:4315,210:3876,211:$V79},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$V89,21:$V99,22:4318,83:4317,210:3903,211:$Va9},o($Vy6,$V66),o($Vy6,$VE1),o($VI6,$Ve7),o($VI6,$Vf7,{70:4319,72:4320,74:4321,40:4322,114:4323,75:[1,4324],76:[1,4325],77:[1,4326],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:4327,69:4328,88:4329,90:4330,91:4334,95:4335,92:[1,4331],93:[1,4332],94:[1,4333],97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4337,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:4338}),o($Vl7,$Vs1,{95:4153,91:4339,97:$Vg9,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:4340}),o($Vm7,$Vu1,{82:4341}),o($Vm7,$Vu1,{82:4342}),o($VI6,$Vv1,{101:4157,103:4158,87:4343,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:4344}),o($Vq7,$VI1),{115:[1,4345],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,4349],21:[1,4353],22:4347,32:4346,196:4348,210:4350,211:[1,4352],212:[1,4351]},{96:[1,4354]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,4356],102:4355,104:[1,4357],105:[1,4358],106:4359,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4360]},o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,4361]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4362]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),{117:[1,4363]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4364]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),{189:[1,4367],190:4365,191:[1,4366]},o($Vd8,$VM5),o($Vd8,$VN5),o($Vd8,$VO5),o($Vd8,$Vq),o($Vd8,$Vr),o($Vd8,$Vj4),o($Vd8,$Vk4),o($Vd8,$Vl4),o($Vd8,$Vt),o($Vd8,$Vu),o($Vd8,$Vm4),o($Vd8,$Vn4,{198:4368,199:4369,107:[1,4370]}),o($Vd8,$Vo4),o($Vd8,$Vp4),o($Vd8,$Vq4),o($Vd8,$Vr4),o($Vd8,$Vs4),o($Vd8,$Vt4),o($Vd8,$Vu4),o($Vd8,$Vv4),o($Vd8,$Vw4),o($Vn9,$Vg3),o($Vn9,$Vh3),o($Vn9,$Vi3),o($Vn9,$Vj3),o($Vk8,$V68),o($Vx,$Vg,{55:4371,36:4372,39:$Vy}),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4373],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4377],21:[1,4381],22:4375,32:4374,196:4376,210:4378,211:[1,4380],212:[1,4379]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4382}),o($Vk8,$Vs1,{95:4237,91:4383,97:$Vk9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4384]},o($VT8,$VJ1),{66:[1,4385]},o($Vz8,$Vz2,{95:4015,91:4386,97:$Ve9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4394],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4395,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4396]},o($VC8,$Vk3),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4397],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4401],21:[1,4405],22:4399,32:4398,196:4400,210:4402,211:[1,4404],212:[1,4403]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4406}),o($Vk8,$Vs1,{95:4279,91:4407,97:$Vl9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4408]},o($VT8,$VJ1),{66:[1,4409]},o($Vz8,$Vz2,{95:4048,91:4410,97:$Vf9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4418],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4419,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4420]},o($VC8,$Vk3),o($Vk8,$VY4),{19:[1,4423],21:[1,4426],22:4422,83:4421,210:4424,211:[1,4425]},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,4427],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,4431],21:[1,4435],22:4429,32:4428,196:4430,210:4432,211:[1,4434],212:[1,4433]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:4436}),o($VI6,$Vs1,{95:4335,91:4437,97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,4438]},o($Vb8,$VJ1),{66:[1,4439]},o($Vl7,$Vz2,{95:4153,91:4440,97:$Vg9,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4448],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4449,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,4450]},o($Vq7,$Vk3),o($VI6,$VY4),{19:[1,4453],21:[1,4456],22:4452,83:4451,210:4454,211:[1,4455]},o($VI6,$VY4),{19:[1,4459],21:[1,4462],22:4458,83:4457,210:4460,211:[1,4461]},o($VR8,$VU1),o($VR8,$VV1),o($VR8,$VW1),o($Vd8,$Vz5),o($Vd8,$VA5),{19:$Vh9,21:$Vi9,22:4464,83:4463,210:4198,211:$Vj9},o($Vk8,$Vt8),o($VC,$VD,{59:4465,69:4466,71:4467,72:4468,88:4471,90:4472,83:4474,84:4475,85:4476,74:4477,40:4478,91:4482,22:4483,87:4485,114:4486,95:4490,210:4493,101:4494,103:4495,19:[1,4492],21:[1,4497],65:[1,4469],67:[1,4470],75:[1,4487],76:[1,4488],77:[1,4489],81:[1,4473],92:[1,4479],93:[1,4480],94:[1,4481],97:$Vr9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4484],211:[1,4496]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4498,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4237,91:4499,97:$Vk9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4500]},o($VA8,$VJ1),{96:[1,4502],102:4501,104:[1,4503],105:[1,4504],106:4505,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4506]},o($VA8,$Vg4),{117:[1,4507]},{19:[1,4510],21:[1,4513],22:4509,83:4508,210:4511,211:[1,4512]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4514,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4279,91:4515,97:$Vl9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4516]},o($VA8,$VJ1),{96:[1,4518],102:4517,104:[1,4519],105:[1,4520],106:4521,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4522]},o($VA8,$Vg4),{117:[1,4523]},{19:[1,4526],21:[1,4529],22:4525,83:4524,210:4527,211:[1,4528]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4530,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:4335,91:4531,97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4532]},o($Vm7,$VJ1),{96:[1,4534],102:4533,104:[1,4535],105:[1,4536],106:4537,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4538]},o($Vm7,$Vg4),{117:[1,4539]},{19:[1,4542],21:[1,4545],22:4541,83:4540,210:4543,211:[1,4544]},o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($Vd8,$V66),o($Vd8,$VE1),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4546,72:4547,74:4548,40:4549,114:4550,75:[1,4551],76:[1,4552],77:[1,4553],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4554,69:4555,88:4556,90:4557,91:4561,95:4562,92:[1,4558],93:[1,4559],94:[1,4560],97:$Vs9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4564,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4565}),o($Vz8,$Vs1,{95:4490,91:4566,97:$Vr9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4567}),o($VA8,$Vu1,{82:4568}),o($VA8,$Vu1,{82:4569}),o($Vk8,$Vv1,{101:4494,103:4495,87:4570,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4571}),o($VC8,$VI1),{115:[1,4572],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4576],21:[1,4580],22:4574,32:4573,196:4575,210:4577,211:[1,4579],212:[1,4578]},{96:[1,4581]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4583],102:4582,104:[1,4584],105:[1,4585],106:4586,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4587]},o($VA8,$Vt),o($VA8,$Vu),{117:[1,4588]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4589]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),{117:[1,4590]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4591]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),{117:[1,4592]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4593]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4594],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4598],21:[1,4602],22:4596,32:4595,196:4597,210:4599,211:[1,4601],212:[1,4600]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4603}),o($Vk8,$Vs1,{95:4562,91:4604,97:$Vs9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4605]},o($VT8,$VJ1),{66:[1,4606]},o($Vz8,$Vz2,{95:4490,91:4607,97:$Vr9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4615],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4616,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4617]},o($VC8,$Vk3),o($Vk8,$VY4),{19:[1,4620],21:[1,4623],22:4619,83:4618,210:4621,211:[1,4622]},o($Vk8,$VY4),{19:[1,4626],21:[1,4629],22:4625,83:4624,210:4627,211:[1,4628]},o($VI6,$VY4),{19:[1,4632],21:[1,4635],22:4631,83:4630,210:4633,211:[1,4634]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4636,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4562,91:4637,97:$Vs9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4638]},o($VA8,$VJ1),{96:[1,4640],102:4639,104:[1,4641],105:[1,4642],106:4643,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4644]},o($VA8,$Vg4),{117:[1,4645]},{19:[1,4648],21:[1,4651],22:4647,83:4646,210:4649,211:[1,4650]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,4652]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4653]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),o($Vk8,$VY4),{19:[1,4656],21:[1,4659],22:4655,83:4654,210:4657,211:[1,4658]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu)],\ndefaultActions: {6:[2,11],30:[2,1],102:[2,115],103:[2,116],104:[2,117],111:[2,128],112:[2,129],210:[2,248],211:[2,249],212:[2,250],213:[2,251],333:[2,31],361:[2,138],362:[2,142],364:[2,144],569:[2,29],570:[2,33],607:[2,30],1117:[2,142],1119:[2,144]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShEx parser in the Jison parser generator format.\n  */\n\n  var UNBOUNDED = -1;\n\n  var ShExUtil = require(\"@shexjs/core\").Util;\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean',\n      XSD_TRUE =  '\"true\"^^'  + XSD_BOOLEAN,\n      XSD_FALSE = '\"false\"^^' + XSD_BOOLEAN,\n      XSD_PATTERN        = XSD + 'pattern',\n      XSD_MININCLUSIVE   = XSD + 'minInclusive',\n      XSD_MINEXCLUSIVE   = XSD + 'minExclusive',\n      XSD_MAXINCLUSIVE   = XSD + 'maxInclusive',\n      XSD_MAXEXCLUSIVE   = XSD + 'maxExclusive',\n      XSD_LENGTH         = XSD + 'length',\n      XSD_MINLENGTH      = XSD + 'minLength',\n      XSD_MAXLENGTH      = XSD + 'maxLength',\n      XSD_TOTALDIGITS    = XSD + 'totalDigits',\n      XSD_FRACTIONDIGITS = XSD + 'fractionDigits';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  Parser._setBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._base = baseIRI) {\n      Parser._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._baseRoot   = baseIRI[0];\n      Parser._baseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._baseScheme : Parser._baseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._basePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return { value: value, type: type };\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser._sourceMap = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._base = Parser._baseIRI = Parser._baseIRIPath = Parser._baseIRIRoot = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      semactEscapeReplacements = { '\\\\': '\\\\', '%': '%' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return { value: ShExUtil.unescapeText(string, stringEscapeReplacements) };\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, { language: lowercase(lang.substr(1)) });\n  }\n\n  // Translates regular expression escape codes in the string into their textual equivalent\n  function unescapeRegexp (regexp) {\n    var end = regexp.lastIndexOf(\"/\");\n    var s = regexp.substr(1, end-1);\n    var regexpEscapeReplacements = {\n      '.': \"\\\\.\", '\\\\': \"\\\\\\\\\", '?': \"\\\\?\", '*': \"\\\\*\", '+': \"\\\\+\",\n      '{': \"\\\\{\", '}': \"\\\\}\", '(': \"\\\\(\", ')': \"\\\\)\", '|': \"\\\\|\",\n      '^': \"\\\\^\", '$': \"\\\\$\", '[': \"\\\\[\", ']': \"\\\\]\", '/': \"\\\\/\",\n      't': '\\\\t', 'n': '\\\\n', 'r': '\\\\r', '-': \"\\\\-\", '/': '/'\n    };\n    s = ShExUtil.unescapeText(s, regexpEscapeReplacements)\n    var ret = {\n      pattern: s\n    };\n    if (regexp.length > end+1)\n      ret.flags = regexp.substr(end+1);\n    return ret;\n  }\n\n  // Convenience function to return object with p1 key, value p2\n  function keyValObject(key, val) {\n    var ret = {};\n    ret[key] = val;\n    return ret;\n  }\n\n  // Return object with p1 key, p2 string value\n  function unescapeSemanticAction(key, string) {\n    string = string.substring(1, string.length - 2);\n    return {\n      type: \"SemAct\",\n      name: key,\n      code: ShExUtil.unescapeText(string, semactEscapeReplacements)\n    };\n  }\n\n  function error (e, yy) {\n    const hash = {\n      text: yy.lexer.match,\n      // token: this.terminals_[symbol] || symbol,\n      line: yy.lexer.yylineno,\n      loc: yy.lexer.yylloc,\n      // expected: expected\n      pos: yy.lexer.showPosition()\n    }\n    e.hash = hash;\n    if (Parser.recoverable) {\n      Parser.recoverable(e)\n    } else {\n      throw e;\n      Parser.reset();\n    }\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefix, yy) {\n    if (!(prefix in Parser._prefixes))\n      error(new Error('Parse error; unknown prefix \"' + prefix + ':\"'), yy);\n    return Parser._prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape, yy) {\n    if (shape === EmptyShape)\n      shape = { type: \"Shape\" };\n    if (Parser.productions && label in Parser.productions)\n      error(new Error(\"Structural error: \"+label+\" is a triple expression\"), yy);\n    if (!Parser.shapes)\n      Parser.shapes = new Map();\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else {\n      shape.id = label;\n      Parser.shapes[label] = shape;\n    }\n  }\n\n  // Add a production to the map\n  function addProduction (label, production, yy) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(new Error(\"Structural error: \"+label+\" is a shape expression\"), yy);\n    if (!Parser.productions)\n      Parser.productions = new Map();\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function addSourceMap (obj, yy) {\n    if (!Parser._sourceMap)\n      Parser._sourceMap = new Map();\n    let list = Parser._sourceMap.get(obj)\n    if (!list)\n      Parser._sourceMap.set(obj, list = []);\n    list.push(yy.lexer.yylloc);\n    return obj;\n  }\n\n  // shapeJunction judiciously takes a shapeAtom and an optional list of con/disjuncts.\n  // No created Shape{And,Or,Not} will have a `nested` shapeExpr.\n  // Don't nonest arguments to shapeJunction.\n  // shapeAtom emits `nested` so nonest every argument that can be a shapeAtom, i.e.\n  //   shapeAtom, inlineShapeAtom, shapeAtomNoRef\n  //   {,inline}shape{And,Or,Not}\n  //   this does NOT include shapeOrRef or nodeConstraint.\n  function shapeJunction (type, shapeAtom, juncts) {\n    if (juncts.length === 0) {\n      return nonest(shapeAtom);\n    } else if (shapeAtom.type === type && !shapeAtom.nested) {\n      nonest(shapeAtom).shapeExprs = nonest(shapeAtom).shapeExprs.concat(juncts);\n      return shapeAtom;\n    } else {\n      return { type: type, shapeExprs: [nonest(shapeAtom)].concat(juncts) };\n    }\n  }\n\n  // strip out .nested attribute\n  function nonest (shapeAtom) {\n    delete shapeAtom.nested;\n    return shapeAtom;\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 75;\nbreak;\ncase 2:return 76;\nbreak;\ncase 3: yy_.yytext = yy_.yytext.substr(1); return 181; \nbreak;\ncase 4:return 77;\nbreak;\ncase 5:return 211;\nbreak;\ncase 6:return 155;\nbreak;\ncase 7:return 105;\nbreak;\ncase 8:return 104;\nbreak;\ncase 9:return 96;\nbreak;\ncase 10:return 'ANON';\nbreak;\ncase 11:return 19;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 195;\nbreak;\ncase 14:return 97;\nbreak;\ncase 15:return 212;\nbreak;\ncase 16:return 191;\nbreak;\ncase 17:return 207;\nbreak;\ncase 18:return 209;\nbreak;\ncase 19:return 206;\nbreak;\ncase 20:return 208;\nbreak;\ncase 21:return 203;\nbreak;\ncase 22:return 205;\nbreak;\ncase 23:return 202;\nbreak;\ncase 24:return 204;\nbreak;\ncase 25:return 18;\nbreak;\ncase 26:return 20;\nbreak;\ncase 27:return 23;\nbreak;\ncase 28:return 26;\nbreak;\ncase 29:return 35;\nbreak;\ncase 30:return 'IT_VIRTUAL';\nbreak;\ncase 31:return 121;\nbreak;\ncase 32:return 123;\nbreak;\ncase 33:return 81;\nbreak;\ncase 34:return 93;\nbreak;\ncase 35:return 92;\nbreak;\ncase 36:return 94;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 47;\nbreak;\ncase 39:return 39;\nbreak;\ncase 40:return 108;\nbreak;\ncase 41:return 109;\nbreak;\ncase 42:return 110;\nbreak;\ncase 43:return 111;\nbreak;\ncase 44:return 98;\nbreak;\ncase 45:return 99;\nbreak;\ncase 46:return 100;\nbreak;\ncase 47:return 112;\nbreak;\ncase 48:return 113;\nbreak;\ncase 49:return 27;\nbreak;\ncase 50:return 186;\nbreak;\ncase 51:return 115;\nbreak;\ncase 52:return 117;\nbreak;\ncase 53:return 185;\nbreak;\ncase 54:return '||';\nbreak;\ncase 55:return 131;\nbreak;\ncase 56:return 136;\nbreak;\ncase 57:return 65;\nbreak;\ncase 58:return 66;\nbreak;\ncase 59:return 157;\nbreak;\ncase 60:return 159;\nbreak;\ncase 61:return 144;\nbreak;\ncase 62:return '!';\nbreak;\ncase 63:return 107;\nbreak;\ncase 64:return 156;\nbreak;\ncase 65:return 67;\nbreak;\ncase 66:return 174;\nbreak;\ncase 67:return 137;\nbreak;\ncase 68:return 152;\nbreak;\ncase 69:return 153;\nbreak;\ncase 70:return 154;\nbreak;\ncase 71:return 175;\nbreak;\ncase 72:return 189;\nbreak;\ncase 73:return 200;\nbreak;\ncase 74:return 201;\nbreak;\ncase 75:return 7;\nbreak;\ncase 76:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 77:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(\\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\\*)?))?\\}))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:a\\b)/,/^(?:(\\/([^\\u002f\\u005C\\u000A\\u000D]|\\\\[nrt\\\\|.?*+(){}$\\u002D\\u005B\\u005D\\u005E\\/]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:(\\{([^%\\\\]|\\\\[%\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\\}))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Vv][Ii][Rr][Tt][Uu][Aa][Ll]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\\/\\/)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&)/,/^(?:\\|\\|)/,/^(?:\\|)/,/^(?:,)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:!)/,/^(?:\\^\\^)/,/^(?:\\^)/,/^(?:\\.)/,/^(?:~)/,/^(?:;)/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShExJison;\nexports.Parser = ShExJison.Parser;\nexports.parse = function () { return ShExJison.parse.apply(ShExJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 49,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "index": 25,
          "index2": 21,
          "size": 8542,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerId": 25,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 25,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 6,
            "building": 10,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 25,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "./old.js",
              "loc": "14:10-29"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"
        },
        {
          "id": 50,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "index": 27,
          "index2": 25,
          "size": 4792,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerId": 14,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 14,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 34,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "brace-expansion",
              "loc": "10:13-39"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"
        },
        {
          "id": 51,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "index": 28,
          "index2": 23,
          "size": 345,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 50,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 14,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            },
            {
              "id": 50,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 34,
                "building": 4
              }
            }
          ],
          "profile": {
            "factory": 4,
            "building": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 50,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "concat-map",
              "loc": "1:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"
        },
        {
          "id": 52,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "index": 29,
          "index2": 24,
          "size": 1174,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 50,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 14,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            },
            {
              "id": 50,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 34,
                "building": 4
              }
            }
          ],
          "profile": {
            "factory": 4,
            "building": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 50,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "balanced-match",
              "loc": "2:15-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n"
        },
        {
          "id": 53,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "index": 30,
          "index2": 27,
          "size": 753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "47:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
        },
        {
          "id": 54,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/object-assign/index.js",
          "name": "./node_modules/object-assign/index.js",
          "index": 34,
          "index2": 30,
          "size": 2108,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "issuerId": 26,
          "issuerName": "./node_modules/assert/assert.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 26,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "name": "./node_modules/assert/assert.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 78,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 26,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "object-assign",
              "loc": "3:19-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"
        },
        {
          "id": 55,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "index": 36,
          "index2": 34,
          "size": 12002,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./sync.js",
              "loc": "52:15-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"
        },
        {
          "id": 56,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "index": 38,
          "index2": 37,
          "size": 1365,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inflight",
              "loc": "58:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"
        },
        {
          "id": 57,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api sync",
          "name": "../shex-api sync",
          "index": 41,
          "index2": 39,
          "size": 160,
          "built": true,
          "optional": true,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 47,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require context",
              "userRequest": ".",
              "loc": "312:11-24"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2
        },
        {
          "id": 58,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/base64-js/index.js",
          "name": "./node_modules/base64-js/index.js",
          "index": 45,
          "index2": 41,
          "size": 3944,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "base64-js",
              "loc": "11:13-33"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"
        },
        {
          "id": 59,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/ieee754/index.js",
          "name": "./node_modules/ieee754/index.js",
          "index": 46,
          "index2": 42,
          "size": 2064,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "ieee754",
              "loc": "12:14-32"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"
        },
        {
          "id": 60,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/isarray/index.js",
          "name": "./node_modules/isarray/index.js",
          "index": 47,
          "index2": 43,
          "size": 132,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "isarray",
              "loc": "13:14-32"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"
        },
        {
          "id": 61,
          "identifier": "ignored /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib util",
          "name": "util (ignored)",
          "index": 58,
          "index2": 53,
          "size": 15,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "60:16-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5
        },
        {
          "id": 62,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "index": 59,
          "index2": 55,
          "size": 6335,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/buffer_list",
              "loc": "72:17-58"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();"
        },
        {
          "id": 63,
          "identifier": "ignored /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams util",
          "name": "util (ignored)",
          "index": 60,
          "index2": 54,
          "size": 15,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "issuerId": 62,
          "issuerName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            },
            {
              "id": 62,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "name": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "profile": {
                "factory": 41,
                "building": 15,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 62,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "18:16-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6
        },
        {
          "id": 64,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util-deprecate/browser.js",
          "name": "./node_modules/util-deprecate/browser.js",
          "index": 67,
          "index2": 60,
          "size": 1614,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "issuerId": 34,
          "issuerName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 34,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "name": "./node_modules/readable-stream/lib/_stream_writable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 51,
            "building": 3,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "util-deprecate",
              "loc": "60:13-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"
        },
        {
          "id": 65,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/safe-buffer/index.js",
          "name": "./node_modules/safe-buffer/index.js",
          "index": 69,
          "index2": 63,
          "size": 1670,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
          "issuerId": 35,
          "issuerName": "./node_modules/string_decoder/lib/string_decoder.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            },
            {
              "id": 35,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
              "name": "./node_modules/string_decoder/lib/string_decoder.js",
              "profile": {
                "factory": 41,
                "building": 15,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 1,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 35,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
              "module": "./node_modules/string_decoder/lib/string_decoder.js",
              "moduleName": "./node_modules/string_decoder/lib/string_decoder.js",
              "type": "cjs require",
              "userRequest": "safe-buffer",
              "loc": "26:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"
        },
        {
          "id": 66,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "index": 70,
          "index2": 66,
          "size": 5957,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/async_iterator",
              "loc": "1009:42-86"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;"
        },
        {
          "id": 67,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/from-browser.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/from-browser.js",
          "index": 72,
          "index2": 67,
          "size": 101,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/from",
              "loc": "1111:13-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n"
        },
        {
          "id": 68,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
          "name": "./node_modules/readable-stream/lib/_stream_passthrough.js",
          "index": 74,
          "index2": 70,
          "size": 1630,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_passthrough.js",
              "loc": "7:22-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};"
        },
        {
          "id": 69,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "index": 75,
          "index2": 71,
          "size": 2428,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/internal/streams/pipeline.js",
              "loc": "9:19-64"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;"
        },
        {
          "id": 70,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "name": "./node_modules/n3/src/index.js + 7 modules",
          "index": 42,
          "index2": 76,
          "size": 97617,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "n3",
              "loc": "8:8-21"
            }
          ],
          "usedExports": true,
          "providedExports": [
            "Lexer",
            "Parser",
            "Writer",
            "Store",
            "StreamParser",
            "StreamWriter",
            "Util",
            "DataFactory",
            "Term",
            "NamedNode",
            "Literal",
            "BlankNode",
            "Variable",
            "DefaultGraph",
            "Quad",
            "Triple",
            "termFromId",
            "termToId"
          ],
          "optimizationBailout": [
            "ModuleConcatenation bailout: Cannot concat with ./node_modules/n3/src/IRIs.js because of ./node_modules/n3/src/N3Lexer.js",
            "ModuleConcatenation bailout: Cannot concat with ./node_modules/n3/src/N3Lexer.js (<- Module uses injected variables (Buffer))",
            "ModuleConcatenation bailout: Cannot concat with ./node_modules/readable-stream/readable-browser.js (<- Module is not an ECMAScript module)"
          ],
          "depth": 1,
          "modules": [
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "index": 42,
              "index2": 76,
              "size": 659,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "issuerId": 38,
              "issuerName": "./shex-webapp.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                }
              ],
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": 38,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "module": "./shex-webapp.js",
                  "moduleName": "./shex-webapp.js",
                  "type": "cjs require",
                  "userRequest": "n3",
                  "loc": "8:8-21"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "Lexer",
                "Parser",
                "Writer",
                "Store",
                "StreamParser",
                "StreamWriter",
                "Util",
                "DataFactory",
                "Term",
                "NamedNode",
                "Literal",
                "BlankNode",
                "Variable",
                "DefaultGraph",
                "Quad",
                "Triple",
                "termFromId",
                "termToId"
              ],
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./shex-webapp.js (referenced with cjs require)"
              ],
              "depth": 1,
              "source": "import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
              "name": "./node_modules/n3/src/N3Util.js",
              "index": 52,
              "index2": 48,
              "size": 2154,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Util",
                  "loc": "4:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
                  "module": "./node_modules/n3/src/N3DataFactory.js",
                  "moduleName": "./node_modules/n3/src/N3DataFactory.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Util",
                  "loc": "5:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Util",
                  "loc": "7:0-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Util",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Util",
                  "loc": "194:6-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
                  "module": "./node_modules/n3/src/N3DataFactory.js",
                  "moduleName": "./node_modules/n3/src/N3DataFactory.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Util",
                  "loc": "250:9-23"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "isNamedNode",
                "isBlankNode",
                "isLiteral",
                "isVariable",
                "isDefaultGraph",
                "inDefaultGraph",
                "prefix",
                "prefixes"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  var prefixes = Object.create(null);\n  for (var prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      var cache = Object.create(null);\n      prefixes[prefix] = function (local) {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error('Unknown prefix: ' + prefix);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
              "name": "./node_modules/n3/src/N3DataFactory.js",
              "index": 51,
              "index2": 49,
              "size": 10143,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "2:0-81"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
                  "module": "./node_modules/n3/src/N3Parser.js",
                  "moduleName": "./node_modules/n3/src/N3Parser.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "3:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
                  "module": "./node_modules/n3/src/N3Util.js",
                  "moduleName": "./node_modules/n3/src/N3Util.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "3:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "3:0-65"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "6:21-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "9:0-23:25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "19:29-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "26:39-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
                  "module": "./node_modules/n3/src/N3Util.js",
                  "moduleName": "./node_modules/n3/src/N3Util.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "47:23-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "112:29-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "113:29-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "114:29-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "116:62-72"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "205:17-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "221:14-22"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "222:16-24"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "223:13-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "224:12-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "275:14-22"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "276:16-24"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "277:13-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "278:12-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "330:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "331:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "332:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "333:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "394:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "395:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "396:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "397:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "459:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "460:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "461:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "462:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "527:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "528:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "529:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "573:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "574:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "575:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "619:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "620:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "621:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
                  "module": "./node_modules/n3/src/N3Parser.js",
                  "moduleName": "./node_modules/n3/src/N3Parser.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "1041:36-49"
                }
              ],
              "usedExports": [
                "default",
                "Term",
                "NamedNode",
                "Literal",
                "BlankNode",
                "Variable",
                "DefaultGraph",
                "Quad",
                "Triple",
                "termFromId",
                "termToId"
              ],
              "providedExports": [
                "default",
                "Term",
                "NamedNode",
                "Literal",
                "BlankNode",
                "Variable",
                "DefaultGraph",
                "termFromId",
                "termToId",
                "Quad",
                "Triple",
                "escapeQuotes",
                "unescapeQuotes"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    var id = this.id, atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    var id = this.id, dtPos = id.lastIndexOf('\"') + 1, ch;\n    // If \"^\" it follows, return the remaining substring\n    return dtPos < id.length && (ch = id[dtPos]) === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (ch !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super('_:' + name);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super('?' + name);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    var endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return '_:' + term.value;\n  case 'Variable':     return '?' + term.value;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return '\"' + term.value + '\"' +\n    (term.language ? '@' + term.language :\n      (term.datatype && term.datatype.value !== xsd.string ? '^^' + term.datatype.value : ''));\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error('Unexpected termType: ' + term.termType);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this.subject   = subject;\n    this.predicate = predicate;\n    this.object    = object;\n    this.graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this.subject.toJSON(),\n      predicate: this.predicate.toJSON(),\n      object:    this.object.toJSON(),\n      graph:     this.graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this.subject.equals(other.subject)     &&\n                      this.predicate.equals(other.predicate) &&\n                      this.object.equals(other.object)       &&\n                      this.graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal('\"' + value + '\"@' + languageOrDataType.toLowerCase());\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal('\"' + value + '\"') :\n    new Literal('\"' + value + '\"^^' + datatype);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
              "name": "./node_modules/n3/src/N3Parser.js",
              "index": 50,
              "index2": 50,
              "size": 37785,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Parser",
                  "loc": "2:0-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
                  "module": "./node_modules/n3/src/N3StreamParser.js",
                  "moduleName": "./node_modules/n3/src/N3StreamParser.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Parser",
                  "loc": "2:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
                  "module": "./node_modules/n3/src/N3StreamParser.js",
                  "moduleName": "./node_modules/n3/src/N3StreamParser.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Parser",
                  "loc": "12:34-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Parser",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    var format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = function (iri) { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      var fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    var n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? this._graph.id.substr(2) + '.' : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    var context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    var value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      var iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error('Expected entity but got ' + token.type, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    var type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error('Unexpected ' + type, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error('Expected graph but got ' + token.type, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    var empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    var item = null,                      // The item of the list\n        list = null,                      // The list itself\n        previousList = this._subject,     // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1], // The parent containing the current list\n        next = this._readListItem;        // The next function to execute\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      var datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    var next, subject = this._subject, graph = this._graph,\n        inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error('Expected punctuation to follow \"' + this._object.id + '\"', token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      var predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    var next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object.id + '\"', token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n    var prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    var iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    var entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error('Unexpected ' + token.type, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      var stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        var item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    var subject, predicate, object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    var subject = this._blankNode(), predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error('Expected >> to follow \"' + this._object.id + '\"', token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    var contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    var err = new Error(message + ' on line ' + token.line + '.');\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    var self = this;\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : 'b' + blankNodePrefix++ + '_';\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      var quads = [], error;\n      this._callback = function (e, t) { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(function (token) {\n        return self._readCallback = self._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, function (error, token) {\n      if (error !== null)\n        self._callback(error), self._callback = noop;\n      else if (self._readCallback)\n        self._readCallback = self._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  var namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "name": "./node_modules/n3/src/N3Writer.js",
              "index": 53,
              "index2": 51,
              "size": 12785,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Writer",
                  "loc": "3:0-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
                  "module": "./node_modules/n3/src/N3StreamWriter.js",
                  "moduleName": "./node_modules/n3/src/N3StreamWriter.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Writer",
                  "loc": "3:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
                  "module": "./node_modules/n3/src/N3StreamWriter.js",
                  "moduleName": "./node_modules/n3/src/N3StreamWriter.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Writer",
                  "loc": "13:36-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Writer",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      var output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end:   function (done) { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : this._encodeIriOrBlank(graph) + ' {\\n'));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(', ' + this._encodeObject(object), done);\n        // Same subject, different predicate\n        else\n          this._write(';\\n    ' +\n                      this._encodePredicate(this._predicate = predicate) + ' ' +\n                      this._encodeObject(object), done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write((this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject) + ' ' +\n                    this._encodePredicate(this._predicate = predicate) + ' ' +\n                    this._encodeObject(object), done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  this._encodeSubject(subject)   + ' ' +\n            this._encodeIriOrBlank(predicate) + ' ' +\n            this._encodeObject(object) +\n            (graph && graph.value ? ' ' + this._encodeIriOrBlank(graph) + ' .\\n' : ' .\\n');\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(function (t) {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }, this).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : '_:' + entity.value;\n    }\n    // Escape special characters\n    var iri = entity.value;\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    var value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (literal.language)\n      return '\"' + value + '\"@' + literal.language;\n    else if (literal.datatype.value !== xsd.string)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlank(literal.datatype);\n    else\n      return '\"' + value + '\"';\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      var iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      prefixIRIs[iri] = (prefix += ':');\n      this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    var children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm('[ ' + this._encodePredicate(child.predicate) + ' ' +\n                                  this._encodeObject(child.object) + ' ]');\n    // Generate a multi-triple or nested blank node\n    default:\n      var contents = '[';\n      // Write all triples in order\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += ', ' + this._encodeObject(child.object);\n        // Otherwise, write the predicate and the object\n        else {\n          contents += (i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object);\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(contents + '\\n]');\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    var length = elements && elements.length || 0, contents = new Array(length);\n    for (var i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm('(' + contents.join(' ') + ')');\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "index": 54,
              "index2": 73,
              "size": 31411,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Store",
                  "loc": "4:0-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Store",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    var size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    var graphs = this._graphs, subjects, subject;\n    for (var graphKey in graphs)\n      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n        for (var predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    var index1 = index0[key0] || (index0[key0] = {});\n    var index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    var existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    var index1 = index0[key0], index2 = index1[key1], key;\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (key in index2) return;\n    delete index1[key1];\n    for (key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    var tmp, index1, index2, varCount = !key0 + !key1 + !key2,\n        // depending on the number of variables, keys or reverse index are faster\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      var entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          var entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (var l = 0; l < values.length; l++) {\n              var parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              var quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (var key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    var index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    var key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    var index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    var count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    var graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    var uniqueIds = Object.create(null), entities = this._entities;\n    return function (id) {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(entities[id]));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    var graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    var ids = this._ids;\n    var entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    var changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    var self = this;\n    stream.on('data', function (quad) { self.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    var graphItem, ids = this._ids, graphs = this._graphs, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    var self = this;\n    stream.on('data', function (quad) { self.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    return this.remove(this.match(subject, predicate, object, graph));\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var quads = [], graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a stream of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  match(subject, predicate, object, graph) {\n    var stream = new Readable({ objectMode: true });\n\n    // Initialize stream once it is being read\n    stream._read = () => {\n      for (var quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return stream;\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var count = 0, graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(function (quad) {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    var some = false;\n    var every = !this.some(function (quad) {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    var results = [];\n    this.forSubjects(function (s) { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    var results = [];\n    this.forPredicates(function (p) { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    var results = [];\n    this.forObjects(function (o) { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    var results = [];\n    this.forGraphs(function (g) { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (var graph in this._graphs) {\n      this.some(function (quad) {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    var name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = '_:' + suggestedName, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = '_:b' + this._blankNodeIndex++; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    var lists = {}; // has scalar keys so could be a simple Object\n    var onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    var tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    var toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      var items = [];             // the members found as objects of rdf:first quads\n      var malformed = false;      // signals whether the current list is malformed\n      var head;                   // the head of the list (_:b1 in above example)\n      var headPos;                // set to subject or object when head is set\n      var graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      var current = tailQuad.subject;\n      while (current && !malformed) {\n        var objectQuads = this.getQuads(null, null, current, null);\n        var subjectQuads = this.getQuads(current, null, null, null);\n        var i, quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
              "name": "./node_modules/n3/src/N3StreamParser.js",
              "index": 76,
              "index2": 74,
              "size": 1447,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3StreamParser",
                  "loc": "5:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3StreamParser",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    var self = this, parser = new N3Parser(options), onData, onEnd;\n    parser.parse({\n      on: function (event, callback) {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      function (error, quad) { error && self.emit('error', error) || quad && self.push(quad); },\n      // Emit prefixes through the `prefix` event\n      function (prefix, uri) { self.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = function (chunk, encoding, done) { onData(chunk); done(); };\n    this._flush = function (done) { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    var self = this;\n    stream.on('data',  function (chunk) { self.write(chunk); });\n    stream.on('end',   function ()      { self.end(); });\n    stream.on('error', function (error) { self.emit('error', error); });\n    return this;\n  }\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
              "name": "./node_modules/n3/src/N3StreamWriter.js",
              "index": 77,
              "index2": 75,
              "size": 1218,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3StreamWriter",
                  "loc": "6:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3StreamWriter",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8' });\n    this._writableState.objectMode = true;\n\n    // Set up writer with a dummy stream object\n    var self = this;\n    var writer = this._writer = new N3Writer({\n      write: function (quad, encoding, callback) { self.push(quad); callback && callback(); },\n      end: function (callback) { self.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = function (quad, encoding, done) { writer.addQuad(quad, done); };\n    this._flush = function (done) { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    var self = this;\n    stream.on('data',   function (quad)  { self.write(quad); });\n    stream.on('end',    function ()      { self.end(); });\n    stream.on('error',  function (error) { self.emit('error', error); });\n    stream.on('prefix', function (prefix, iri) { self._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n"
            }
          ],
          "filteredModules": 0
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "shex-webapp-webpack",
          "request": "./shex-webapp.js",
          "reasons": []
        }
      ]
    },
    {
      "id": 1,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 932186,
      "names": [
        "shex-webapp-webpack.min"
      ],
      "files": [
        "shex-webapp-webpack.min.js"
      ],
      "hash": "4a697f2a16049a35bc04",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/IRIs.js",
          "name": "./node_modules/n3/src/IRIs.js",
          "index": 49,
          "index2": 46,
          "size": 705,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "issuerId": 12,
          "issuerName": "./node_modules/n3/src/N3Lexer.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 336,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "2:0-32"
            },
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "5:16-26"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "2:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "4:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "4:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./IRIs",
              "loc": "4:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "6:21-31"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "8:21-31"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "700:36-46"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "700:57-67"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "725:44-54"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "733:44-54"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "756:44-54"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1029:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1030:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1031:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1032:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1033:32-42"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1035:19-29"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1036:19-29"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./IRIs",
              "loc": "1037:19-29"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 3,
          "source": "var RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: XSD + 'decimal',\n    boolean: XSD + 'boolean',\n    double:  XSD + 'double',\n    integer: XSD + 'integer',\n    string:  XSD + 'string',\n  },\n  rdf: {\n    type:       RDF + 'type',\n    nil:        RDF + 'nil',\n    first:      RDF + 'first',\n    rest:       RDF + 'rest',\n    langString: RDF + 'langString',\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: SWAP + 'reify#forSome',\n    forAll:  SWAP + 'reify#forAll',\n  },\n  log: {\n    implies: SWAP + 'log#implies',\n  },\n};\n"
        },
        {
          "id": 1,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/process/browser.js",
          "name": "./node_modules/process/browser.js",
          "index": 5,
          "index2": 1,
          "size": 5418,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
              "module": "./node_modules/path-browserify/index.js",
              "moduleName": "./node_modules/path-browserify/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-37"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-34"
            },
            {
              "moduleId": 16,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-37"
            },
            {
              "moduleId": 32,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/destroy.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-43"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-37"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-62"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-71"
            },
            {
              "moduleId": 66,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "type": "cjs require",
              "userRequest": "process",
              "loc": "1:0-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
        },
        {
          "id": 2,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
          "name": "./node_modules/path-browserify/index.js",
          "index": 8,
          "index2": 4,
          "size": 8742,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "6:9-24"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "49:11-26"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "15:11-26"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1179:44-59"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "1824:44-59"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "22:17-32"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path",
              "loc": "10:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"
        },
        {
          "id": 3,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/node-libs-browser/mock/empty.js",
          "name": "./node_modules/node-libs-browser/mock/empty.js",
          "index": 7,
          "index2": 3,
          "size": 0,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "43:9-22"
            },
            {
              "moduleId": 25,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "8:9-22"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1179:17-30"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "1824:17-30"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "24:9-22"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs",
              "loc": "4:9-22"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": ""
        },
        {
          "id": 4,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/errors-browser.js",
          "name": "./node_modules/readable-stream/errors-browser.js",
          "index": 63,
          "index2": 57,
          "size": 4197,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
              "type": "cjs require",
              "userRequest": "../../../errors",
              "loc": "5:33-59"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "../errors",
              "loc": "79:21-41"
            },
            {
              "moduleId": 33,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/state.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/state.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/state.js",
              "type": "cjs require",
              "userRequest": "../../../errors",
              "loc": "3:28-54"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "../errors",
              "loc": "87:21-41"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
              "module": "./node_modules/readable-stream/lib/_stream_transform.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
              "type": "cjs require",
              "userRequest": "../errors",
              "loc": "66:21-41"
            },
            {
              "moduleId": 69,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "type": "cjs require",
              "userRequest": "../../../errors",
              "loc": "16:21-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n"
        },
        {
          "id": 5,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
          "name": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "index": 65,
          "index2": 62,
          "size": 4399,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_duplex.js",
              "loc": "5:17-51"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "107:21-48"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "170:21-48"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "104:21-48"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "230:21-48"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
              "module": "./node_modules/readable-stream/lib/_stream_transform.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
              "type": "cjs require",
              "userRequest": "./_stream_duplex",
              "loc": "72:13-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});"
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "index": 55,
          "index2": 72,
          "size": 488,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/N3Store.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 313,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "readable-stream",
              "loc": "2:0-44"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "readable-stream",
              "loc": "3:0-43"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "readable-stream",
              "loc": "3:0-44"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "readable-stream",
              "loc": "6:44-53"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "readable-stream",
              "loc": "6:44-53"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "readable-stream",
              "loc": "378:21-29"
            }
          ],
          "usedExports": [
            "Readable",
            "Transform"
          ],
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n"
        },
        {
          "id": 7,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/RdfTerm.js",
          "name": "../shex-core/lib/RdfTerm.js",
          "index": 10,
          "index2": 8,
          "size": 10523,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/RdfTerm",
              "loc": "2:14-38"
            },
            {
              "moduleId": 20,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "module": "../shex-core/lib/ShExUtil.js",
              "moduleName": "../shex-core/lib/ShExUtil.js",
              "type": "cjs require",
              "userRequest": "./RdfTerm",
              "loc": "4:14-34"
            },
            {
              "moduleId": 22,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/threaded-val-nerr.js",
              "module": "../shex-core/lib/regex/threaded-val-nerr.js",
              "moduleName": "../shex-core/lib/regex/threaded-val-nerr.js",
              "type": "cjs require",
              "userRequest": "../RdfTerm",
              "loc": "2:14-35"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "./RdfTerm",
              "loc": "31:14-34"
            },
            {
              "moduleId": 46,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/nfax-val-1err.js",
              "module": "../shex-core/lib/regex/nfax-val-1err.js",
              "moduleName": "../shex-core/lib/regex/nfax-val-1err.js",
              "type": "cjs require",
              "userRequest": "../RdfTerm",
              "loc": "2:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/**\n *\n * isIRI, isBlank, getLiteralType, getLiteralValue\n */\n\nvar RdfTerm = (function () {\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  const RdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\n  const XsdString = \"http://www.w3.org/2001/XMLSchema#string\";\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function resolveRelativeIRI (base, iri) {\n\n    if (absoluteIRI.test(iri))\n      return iri\n\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      let m = base.match(schemeAuthority);\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? m[1] : m[0]) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(base.replace(/[^\\/?]*(?:\\?.*)?$/, '') + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function internalTerm (node) { // !!rdfjsTermToInternal\n    switch (node.termType) {\n    case (\"NamedNode\"):\n      return node.value;\n    case (\"BlankNode\"):\n      return \"_:\" + node.value;\n    case (\"Literal\"):\n      return \"\\\"\" + node.value + \"\\\"\" + (\n        node.datatypeString === RdfLangString\n          ? \"@\" + node.language\n          : node.datatypeString === XsdString\n          ? \"\"\n          : \"^^\" + node.datatypeString\n      );\n    default: throw Error(\"unknown RDFJS node type: \" + JSON.stringify(node))\n    }\n  }\n\n  function internalTriple (triple) { // !!rdfjsTripleToInternal\n    return {\n      subject: internalTerm(triple.subject),\n      predicate: internalTerm(triple.predicate),\n      object: internalTerm(triple.object)\n    };\n  }\n\n  function externalTerm (node, factory) { // !!intermalTermToRdfjs\n    if (isIRI(node)) {\n      return factory.namedNode(node);\n    } else if (isBlank(node)) {\n      return factory.blankNode(node.substr(2));\n    } else if (isLiteral(node)) {\n      let dtOrLang = getLiteralLanguage(node) ||\n          (getLiteralType(node) === XsdString\n           ? null // seems to screw up N3.js\n           : factory.namedNode(getLiteralType(node)))\n      return factory.literal(getLiteralValue(node), dtOrLang)\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  function externalTriple (triple, factory) { // !!rename internalTripleToRdjs\n    return factory.quad(\n      externalTerm(triple.subject, factory),\n      externalTerm(triple.predicate, factory),\n      externalTerm(triple.object, factory)\n    );\n  }\n\n  function intermalTermToTurtle (node, base, prefixes) {\n    if (isIRI(node)) {\n      // if (node === RDF_TYPE) // only valid in Turtle predicates\n      //   return \"a\";\n\n      // Escape special characters\n      if (escape.test(node))\n        node = node.replace(escapeAll, characterReplacer);\n      var pref = Object.keys(prefixes).find(pref => node.startsWith(prefixes[pref]));\n      if (pref) {\n        var rest = node.substr(prefixes[pref].length);\n        if (rest.indexOf(\"\\\\\") === -1) // could also say no more than n of these: [...]\n          return pref + \":\" + rest.replace(/([~!$&'()*+,;=/?#@%])/g, '\\\\' + \"$1\");\n      }\n      if (node.startsWith(base)) {\n        return \"<\" + node.substr(base.length) + \">\";\n      } else {\n        return \"<\" + node + \">\";\n      }\n    } else if (isBlank(node)) {\n      return node;\n    } else if (isLiteral(node)) {\n      var value = getLiteralValue(node);\n      var type = getLiteralType(node);\n      var language = getLiteralLanguage(node);\n      // Escape special characters\n      if (escape.test(value))\n        value = value.replace(escapeAll, characterReplacer);\n      // Write the literal, possibly with type or language\n      if (language)\n        return '\"' + value + '\"@' + language;\n      else if (type)\n        return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n      else\n        return '\"' + value + '\"';\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  function isIRI (entity) {\n    if (typeof entity !== 'string')\n      return false;\n    else if (entity.length === 0)\n      return true;\n    else {\n      var firstChar = entity[0];\n      return firstChar !== '\"' && firstChar !== '_';\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  function isLiteral (entity) {\n    return typeof entity === 'string' && entity[0] === '\"';\n  }\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  function isBlank (entity) {\n    return typeof entity === 'string' && entity.substr(0, 2) === '_:';\n  }\n\n  // Tests whether the given entity represents the default graph\n  function isDefaultGraph (entity) {\n    return !entity;\n  }\n\n  // Tests whether the given triple is in the default graph\n  function inDefaultGraph (triple) {\n    return !triple.graph;\n  }\n\n  // Gets the string value of a literal in the N3 library\n  function getLiteralValue (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  }\n\n  // Gets the type of a literal in the N3 library\n  function getLiteralType (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  }\n\n  // Gets the language of a literal in the N3 library\n  function getLiteralLanguage (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  }\n\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n  // Replaces a character by its escaped version\n  function characterReplacer (character) {\n    // Replace a single character by its escaped version\n    var result = escapeReplacements[character];\n    if (result === undefined) {\n      // Replace a single character with its 4-bit unicode escape sequence\n      if (character.length === 1) {\n        result = character.charCodeAt(0).toString(16);\n        result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n      }\n      // Replace a surrogate pair with its 8-bit unicode escape sequence\n      else {\n        result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                  character.charCodeAt(1) + 0x2400).toString(16);\n        result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n      }\n    }\n    return result;\n  }\n\n  return {\n    RdfLangString: RdfLangString,\n    XsdString: XsdString,\n    resolveRelativeIRI: resolveRelativeIRI,\n    isIRI: isIRI,\n    isLiteral: isLiteral,\n    isBlank: isBlank,\n    isDefaultGraph: isDefaultGraph,\n    inDefaultGraph: inDefaultGraph,\n    getLiteralValue: getLiteralValue,\n    getLiteralType: getLiteralType,\n    getLiteralLanguage: getLiteralLanguage,\n    internalTerm: internalTerm,\n    internalTriple: internalTriple,\n    externalTerm: externalTerm,\n    externalTriple: externalTriple,\n    intermalTermToTurtle: intermalTermToTurtle,\n  }\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = RdfTerm; // node environment\n"
        },
        {
          "id": 8,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 33,
          "index2": 29,
          "size": 472,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            },
            {
              "moduleId": 26,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-44"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-44"
            },
            {
              "moduleId": 64,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util-deprecate/browser.js",
              "module": "./node_modules/util-deprecate/browser.js",
              "moduleName": "./node_modules/util-deprecate/browser.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
        },
        {
          "id": 9,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "name": "./node_modules/buffer/index.js",
          "index": 44,
          "index2": 44,
          "size": 48590,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "issuerId": 12,
          "issuerName": "./node_modules/n3/src/N3Lexer.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 336,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "cjs require",
              "userRequest": "Buffer",
              "loc": "1:0-34"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "46:13-30"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "70:13-30"
            },
            {
              "moduleId": 62,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "15:15-32"
            },
            {
              "moduleId": 65,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/safe-buffer/index.js",
              "module": "./node_modules/safe-buffer/index.js",
              "moduleName": "./node_modules/safe-buffer/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"
        },
        {
          "id": 10,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/inherits/inherits_browser.js",
          "name": "./node_modules/inherits/inherits_browser.js",
          "index": 64,
          "index2": 59,
          "size": 753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "46:0-19"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "90:0-19"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "99:0-19"
            },
            {
              "moduleId": 36,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
              "module": "./node_modules/readable-stream/lib/_stream_transform.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "74:0-19"
            },
            {
              "moduleId": 68,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
              "module": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "30:0-19"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
        },
        {
          "id": 11,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "index": 14,
          "index2": 12,
          "size": 19383,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "issuerId": 21,
          "issuerName": "../shex-core/lib/ShExWriter.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 21,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "name": "../shex-core/lib/ShExWriter.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            }
          ],
          "profile": {
            "factory": 61,
            "building": 19,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 21,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "module": "../shex-core/lib/ShExWriter.js",
              "moduleName": "../shex-core/lib/ShExWriter.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "4:11-26"
            },
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "59:11-26"
            },
            {
              "moduleId": 26,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "util/",
              "loc": "73:11-27"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "9:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "index": 43,
          "index2": 47,
          "size": 19875,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Lexer",
              "loc": "1:0-30"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Lexer",
              "loc": "2:0-32"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony export imported specifier",
              "userRequest": "./N3Lexer",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": 70,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
              "module": "./node_modules/n3/src/index.js + 7 modules",
              "moduleName": "./node_modules/n3/src/index.js + 7 modules",
              "type": "harmony import specifier",
              "userRequest": "./N3Lexer",
              "loc": "37:39-46"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module uses injected variables (Buffer)"
          ],
          "depth": 2,
          "source": "// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nvar escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nvar lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nvar invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s()\\[\\]\\{\\}\"'<])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (var key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    var input = this._input, outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      var whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      var line = this._line, type = '', value = '', prefix = '',\n          firstChar = input[0], match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(input + ' ')))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(input + ' '))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(input + ' ')))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      var token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    var err = new Error('Unexpected \"' + issue + '\" on line ' + this._line + '.');\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    var self = this;\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => self._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        var tokens = [], error;\n        this._tokenizeToEnd(function (e, t) { e ? (error = e) : tokens.push(t); }, true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', function (data) {\n        if (self._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (self._pendingBuffer) {\n            data = Buffer.concat([self._pendingBuffer, data]);\n            self._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            self._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            self._input += data;\n            self._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', function () {\n        if (self._input !== null)\n          self._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n"
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "index": 9,
          "index2": 18,
          "size": 419,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/core",
              "loc": "3:23-46"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/core",
              "loc": "5:13-36"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "@shexjs/core",
              "loc": "931:17-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "var ShExCore = {\n  RdfTerm:    require('./lib/RdfTerm'),\n  Util:         require('./lib/ShExUtil'),\n  Validator:    require('./lib/ShExValidator'),\n  Writer:    require('./lib/ShExWriter'),\n  'nfax-val-1err':     require('./lib/regex/nfax-val-1err'),\n  'threaded-val-nerr': require('./lib/regex/threaded-val-nerr')\n};\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExCore;\n\n"
        },
        {
          "id": 14,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "index": 26,
          "index2": 26,
          "size": 25347,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "45:16-36"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "16:16-36"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "minimatch",
              "loc": "6:16-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"
        },
        {
          "id": 15,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/events/events.js",
          "name": "./node_modules/events/events.js",
          "index": 31,
          "index2": 28,
          "size": 14161,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "48:9-26"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "32:9-26"
            },
            {
              "moduleId": 31,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/stream-browser.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
              "type": "cjs require",
              "userRequest": "events",
              "loc": "1:17-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"
        },
        {
          "id": 16,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "index": 35,
          "index2": 32,
          "size": 611,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "51:17-44"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "17:17-44"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "path-is-absolute",
              "loc": "12:17-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"
        },
        {
          "id": 17,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "index": 71,
          "index2": 65,
          "size": 3102,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/internal/streams/end-of-stream.js",
              "loc": "8:19-69"
            },
            {
              "moduleId": 66,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
              "type": "cjs require",
              "userRequest": "./end-of-stream",
              "loc": "7:15-41"
            },
            {
              "moduleId": 69,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
              "type": "cjs require",
              "userRequest": "./end-of-stream",
              "loc": "35:31-57"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;"
        },
        {
          "id": 18,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapSymbols.js",
          "name": "../shape-map/lib/ShapeMapSymbols.js",
          "index": 2,
          "index2": 0,
          "size": 451,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 39,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 39,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 120,
            "building": 142
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 39,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapSymbols",
              "loc": "7:18-50"
            },
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapSymbols",
              "loc": "417:17-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * Status: Early implementation\n *\n * TODO:\n *   testing.\n */\n\nvar ShapeMapSymbols = (function () {\n  return {\n    focus: { term: \"FOCUS\" },\n    start: { term: \"START\" },\n    wildcard: { term: \"WILDCARD\" },\n  }\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapSymbols;\n"
        },
        {
          "id": 19,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/module.js",
          "name": "(webpack)/buildin/module.js",
          "index": 6,
          "index2": 2,
          "size": 497,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "issuerId": 48,
          "issuerName": "../shex-parser/lib/ShExJison.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 48,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "name": "../shex-parser/lib/ShExJison.js",
              "profile": {
                "factory": 113,
                "building": 140,
                "dependencies": 106
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 18,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 41,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
              "module": "../shape-map/lib/ShapeMapJison.js",
              "moduleName": "../shape-map/lib/ShapeMapJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            },
            {
              "moduleId": 48,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
              "module": "../shex-parser/lib/ShExJison.js",
              "moduleName": "../shex-parser/lib/ShExJison.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-69"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
        },
        {
          "id": 20,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "name": "../shex-core/lib/ShExUtil.js",
          "index": 11,
          "index2": 14,
          "size": 85300,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExUtil",
              "loc": "3:16-41"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "./ShExUtil",
              "loc": "32:15-36"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// **ShExUtil** provides ShEx utility functions\n\nvar ShExUtil = (function () {\nvar RdfTerm = require(\"./RdfTerm\");\n// var util = require('util');\nconst Hierarchy = require('hierarchy-closure')\n\nconst SX = {};\nSX._namespace = \"http://www.w3.org/ns/shex#\";\n[\"Schema\", \"@context\", \"imports\", \"startActs\", \"start\", \"shapes\",\n \"ShapeOr\", \"ShapeAnd\", \"shapeExprs\", \"nodeKind\",\n \"NodeConstraint\", \"iri\", \"bnode\", \"nonliteral\", \"literal\", \"datatype\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\", \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\", \"values\",\n \"ShapeNot\", \"shapeExpr\",\n \"Shape\", \"virtual\", \"closed\", \"extra\", \"expression\", \"inherit\", \"semActs\",\n \"ShapeRef\", \"reference\", \"ShapeExternal\",\n \"EachOf\", \"OneOf\", \"expressions\", \"min\", \"max\", \"annotation\",\n \"TripleConstraint\", \"inverse\", \"negated\", \"predicate\", \"valueExpr\",\n \"Inclusion\", \"include\", \"Language\", \"languageTag\",\n \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"stem\",\n \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\", \"exclusion\",\n \"Wildcard\", \"SemAct\", \"name\", \"code\",\n \"Annotation\", \"object\"].forEach(p => {\n  SX[p] = SX._namespace+p;\n});\nconst RDF = {};\nRDF._namespace = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n[\"type\", \"first\", \"rest\", \"nil\"].forEach(p => {\n  RDF[p] = RDF._namespace+p;\n});\nconst XSD = {}\nXSD._namespace = \"http://www.w3.org/2001/XMLSchema#\";\n[\"anyURI\"].forEach(p => {\n  XSD[p] = XSD._namespace+p;\n});\nconst OWL = {}\nOWL._namespace = \"http://www.w3.org/2002/07/owl#\";\n[\"Thing\"].forEach(p => {\n  OWL[p] = OWL._namespace+p;\n});\n\nconst Missed = {}; // singleton\nvar UNBOUNDED = -1;\n\nfunction extend (base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\nvar ShExUtil = {\n\n  SX: SX,\n  RDF: RDF,\n  version: function () {\n    return \"0.5.0\";\n  },\n\n  Visitor: function () {\n    // function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n    var _ShExUtil = this;\n    function visitMap (map, val) {\n      var ret = {};\n      Object.keys(map).forEach(function (item) {\n        ret[item] = val(map[item]);\n      });\n      return ret;\n    }\n    var r = {\n      runtimeError: function (e) {\n        throw e;\n      },\n\n      visitSchema: function (schema) {\n        var ret = { type: \"Schema\" };\n        _ShExUtil._expect(schema, \"type\", \"Schema\");\n        this._maybeSet(schema, ret, \"Schema\",\n                       [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                       [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\"]\n                      );\n        return ret;\n      },\n\n      visitPrefixes: function (prefixes) {\n        return prefixes === undefined ?\n          undefined :\n          visitMap(prefixes, function (val) {\n            return val;\n          });\n      },\n\n      visitIRI: function (i) {\n        return i;\n      },\n\n      visitImports: function (imports) {\n        var _Visitor = this;\n        return imports.map(function (imp) {\n          return _Visitor.visitIRI(imp);\n        });\n      },\n\n      visitStartActs: function (startActs) {\n        var _Visitor = this;\n        return startActs === undefined ?\n          undefined :\n          startActs.map(function (act) {\n            return _Visitor.visitSemAct(act);\n          });\n      },\n      visitSemActs: function (semActs) {\n        var _Visitor = this;\n        if (semActs === undefined)\n          return undefined;\n        var ret = []\n        Object.keys(semActs).forEach(function (label) {\n          ret.push(_Visitor.visitSemAct(semActs[label], label));\n        });\n        return ret;\n      },\n      visitSemAct: function (semAct, label) {\n        var ret = { type: \"SemAct\" };\n        _ShExUtil._expect(semAct, \"type\", \"SemAct\");\n\n        this._maybeSet(semAct, ret, \"SemAct\",\n                       [\"name\", \"code\"]);\n        return ret;\n      },\n\n      visitShapes: function (shapes) {\n        var _Visitor = this;\n        if (shapes === undefined)\n          return undefined;\n        return shapes.map(\n          shapeExpr =>\n            _Visitor.visitShapeExpr(shapeExpr)\n        );\n      },\n\n      visitProductions999: function (productions) { // !! DELETE\n        var _Visitor = this;\n        if (productions === undefined)\n          return undefined;\n        var ret = {}\n        Object.keys(productions).forEach(function (label) {\n          ret[label] = _Visitor.visitExpression(productions[label], label);\n        });\n        return ret;\n      },\n\n      visitShapeExpr: function (expr, label) {\n        if (isShapeRef(expr))\n          return this.visitShapeRef(expr)\n        var r =\n            expr.type === \"Shape\" ? this.visitShape(expr, label) :\n            expr.type === \"NodeConstraint\" ? this.visitNodeConstraint(expr, label) :\n            expr.type === \"ShapeAnd\" ? this.visitShapeAnd(expr, label) :\n            expr.type === \"ShapeOr\" ? this.visitShapeOr(expr, label) :\n            expr.type === \"ShapeNot\" ? this.visitShapeNot(expr, label) :\n            expr.type === \"ShapeExternal\" ? this.visitShapeExternal(expr) :\n            null;// if (expr.type === \"ShapeRef\") r = 0; // console.warn(\"visitShapeExpr:\", r);\n        if (r === null)\n          throw Error(\"unexpected shapeExpr type: \" + expr.type);\n        else\n          return r;\n      },\n\n      // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n      _visitShapeGroup: function (expr, label) {\n        this._testUnknownAttributes(expr, [\"id\", \"shapeExprs\"], expr.type, this.visitShapeNot)\n        var _Visitor = this;\n        var r = { type: expr.type };\n        if (\"id\" in expr)\n          r.id = expr.id;\n        r.shapeExprs = expr.shapeExprs.map(function (nested) {\n          return _Visitor.visitShapeExpr(nested, label);\n        });\n        return r;\n      },\n\n      // _visitShapeNot: visit negated shape\n      visitShapeNot: function (expr, label) {\n        this._testUnknownAttributes(expr, [\"id\", \"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n        var r = { type: expr.type };\n        if (\"id\" in expr)\n          r.id = expr.id;\n        r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, label);\n        return r;\n      },\n\n      // ### `visitNodeConstraint` deep-copies the structure of a shape\n      visitShape: function (shape, label) {\n        var ret = { type: \"Shape\" };\n        _ShExUtil._expect(shape, \"type\", \"Shape\");\n\n        this._maybeSet(shape, ret, \"Shape\",\n                       [ \"id\",\n                         // \"virtual\", \"inherit\", -- futureWork\n                         \"closed\",\n                         \"expression\", \"extra\", \"semActs\", \"annotations\"]);\n        return ret;\n      },\n\n      // ### `visitNodeConstraint` deep-copies the structure of a shape\n      visitNodeConstraint: function (shape, label) {\n        var ret = { type: \"NodeConstraint\" };\n        _ShExUtil._expect(shape, \"type\", \"NodeConstraint\");\n\n        this._maybeSet(shape, ret, \"NodeConstraint\",\n                       [ \"id\",\n                         // \"virtual\", \"inherit\", -- futureWork\n                         \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                         \"reference\", \"minlength\", \"maxlength\",\n                         \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                         \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"]);\n        return ret;\n      },\n\n      visitShapeRef: function (reference) {\n        if (typeof reference !== \"string\") {\n          let ex = Exception(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n          console.warn(ex);\n          throw ex;\n        }\n        return reference;\n      },\n\n      visitShapeExternal: function (expr) {\n        this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n        return extend(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n      },\n\n      // _visitGroup: visit a grouping expression (someOf or eachOf)\n      _visitGroup: function (expr, type) {\n        var _Visitor = this;\n        var r = Object.assign(\n          // pre-declare an id so it sorts to the top\n          \"id\" in expr ? { id: null } : { },\n          { type: expr.type }\n        );\n        r.expressions = expr.expressions.map(function (nested) {\n          return _Visitor.visitExpression(nested);\n        });\n        return this._maybeSet(expr, r, \"expr\",\n                              [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"]);\n      },\n\n      visitTripleConstraint: function (expr) {\n        return this._maybeSet(expr,\n                              Object.assign(\n                                // pre-declare an id so it sorts to the top\n                                \"id\" in expr ? { id: null } : { },\n                                { type: \"TripleConstraint\" }\n                              ),\n                              \"TripleConstraint\",\n                              [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                               \"min\", \"max\", \"annotations\", \"semActs\"])\n      },\n\n      visitExpression: function (expr) {\n        if (typeof expr === \"string\")\n          return this.visitInclusion(expr);\n        var r = expr.type === \"TripleConstraint\" ? this.visitTripleConstraint(expr) :\n          expr.type === \"OneOf\" ? this.visitOneOf(expr) :\n          expr.type === \"EachOf\" ? this.visitEachOf(expr) :\n          null;\n        if (r === null)\n          throw Error(\"unexpected expression type: \" + expr.type);\n        else\n          return r;\n      },\n\n      visitValues: function (values) {\n        var _Visitor = this;\n        return values.map(function (t) {\n          return isTerm(t) || t.type === \"Language\" ?\n            t :\n            _Visitor.visitStemRange(t);\n        });\n      },\n\n      visitStemRange: function (t) {\n        var _Visitor = this; // console.log(Error(t.type).stack);\n        // _ShExUtil._expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n        var stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                _Visitor.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n        var stem;\n        if (isTerm(t)) {\n          _ShExUtil._expect(t.stem, \"type\", \"Wildcard\");\n          stem = { type: t.type, stem: { type: \"Wildcard\" } };\n        } else {\n          stem = { type: t.type, stem: t.stem };\n        }\n        if (t.exclusions) {\n          stem.exclusions = t.exclusions.map(function (c) {\n            return _Visitor.visitExclusion(c);\n          });\n        }\n        return stem;\n      },\n\n      visitExclusion: function (c) {\n        if (!isTerm(c)) {\n          // _ShExUtil._expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      _Visitor.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n          return { type: c.type, stem: c.stem };\n        } else {\n          return c;\n        }\n      },\n\n      visitInclusion: function (inclusion) {\n        if (typeof inclusion !== \"string\") {\n          let ex = Exception(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n          console.warn(ex);\n          throw ex;\n        }\n        return inclusion;\n      },\n\n      _maybeSet: function (obj, ret, context, members, ignore) {\n        var _Visitor = this;\n        this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n        members.forEach(function (member) {\n          var methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n          if (member in obj) {\n            var f = _Visitor[methodName];\n            if (typeof f !== \"function\") {\n              throw Error(methodName + \" not found in Visitor\");\n            }\n            var t = f.call(_Visitor, obj[member]);\n            if (t !== undefined) {\n              ret[member] = t;\n            }\n          }\n        });\n        return ret;\n      },\n      _visitValue: function (v) {\n        return v;\n      },\n      _visitList: function (l) {\n        return l.slice();\n      },\n      _testUnknownAttributes: function (obj, expected, context, captureFrame) {\n        var unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n          return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n        }, []);\n        if (unknownMembers.length > 0) {\n          var e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                        unknownMembers.map(function (p) {\n                          return \"\\\"\" + p + \"\\\"\";\n                        }).join(\",\") +\n                        \" in \" + context + \": \" + JSON.stringify(obj));\n          Error.captureStackTrace(e, captureFrame);\n          throw e;\n        }\n      }\n\n    };\n    r.visitBase = r.visitStart = r.visitVirtual = r.visitClosed = r[\"visit@context\"] = r._visitValue;\n    r.visitInherit = r.visitExtra = r.visitAnnotations = r._visitList;\n    r.visitInverse = r.visitPredicate = r._visitValue;\n    r.visitName = r.visitId = r.visitCode = r.visitMin = r.visitMax = r._visitValue;\n\n    r.visitType = r.visitNodeKind = r.visitDatatype = r.visitPattern = r.visitFlags = r.visitLength = r.visitMinlength = r.visitMaxlength = r.visitMininclusive = r.visitMinexclusive = r.visitMaxinclusive = r.visitMaxexclusive = r.visitTotaldigits = r.visitFractiondigits = r._visitValue;\n    r.visitOneOf = r.visitEachOf = r._visitGroup;\n    r.visitShapeAnd = r.visitShapeOr = r._visitShapeGroup;\n    r.visitInclude = r._visitValue;\n    r.visitValueExpr = r.visitShapeExpr;\n    return r;\n  },\n\n  // tests\n  // console.warn(\"HERE:\", ShExJtoAS({\"type\":\"Schema\",\"shapes\":[{\"id\":\"http://all.example/S1\",\"type\":\"Shape\",\"expression\":\n  //  { \"id\":\"http://all.example/S1e\", \"type\":\"EachOf\",\"expressions\":[ ] },\n  // // { \"id\":\"http://all.example/S1e\",\"type\":\"TripleConstraint\",\"predicate\":\"http://all.example/p1\"},\n  // \"extra\":[\"http://all.example/p3\",\"http://all.example/p1\",\"http://all.example/p2\"]\n  // }]}).shapes['http://all.example/S1']);\n\n  ShExJtoAS: function (schema) {\n    var _ShExUtil = this;\n    schema._prefixes = schema.prefixes || {  };\n    schema._index = this.index(schema);\n    return schema;\n  },\n\n  AStoShExJ: function (schema, abbreviate) {\n    schema[\"@context\"] = schema[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete schema[\"_index\"];\n    delete schema[\"_prefixes\"];\n    return schema;\n  },\n\n  ShExRVisitor: function (knownShapeExprs) {\n    var v = ShExUtil.Visitor();\n    var knownExpressions = {};\n    var oldVisitShapeExpr = v.visitShapeExpr,\n        oldVisitValueExpr = v.visitValueExpr,\n        oldVisitExpression = v.visitExpression;\n    v.keepShapeExpr = oldVisitShapeExpr;\n\n    v.visitShapeExpr = v.visitValueExpr = function (expr, label) {\n      if (typeof expr === \"string\")\n        return expr;\n      if (\"id\" in expr) {\n        if (knownShapeExprs.indexOf(expr.id) !== -1 || Object.keys(expr).length === 1)\n          return expr.id;\n        delete expr.id;\n      }\n      return oldVisitShapeExpr.call(this, expr, label);\n    };\n\n    v.visitExpression = function (expr) {\n      if (typeof expr === \"string\") // shortcut for recursive references e.g. 1Include1 and ../doc/TODO.md\n        return expr;\n      if (\"id\" in expr) {\n        if (expr.id in knownExpressions) {\n          knownExpressions[expr.id].refCount++;\n          return expr.id;\n        }\n      }\n      var ret = oldVisitExpression.call(this, expr);\n      // Everything from RDF has an ID, usually a BNode.\n      knownExpressions[expr.id] = { refCount: 1, expr: ret };\n      return ret;\n    }\n\n    v.cleanIds = function () {\n      for (var k in knownExpressions) {\n        var known = knownExpressions[k];\n        if (known.refCount === 1 && RdfTerm.isBlank(known.expr.id))\n          delete known.expr.id;\n      };\n    }\n\n    return v;\n  },\n\n\n  // tests\n  // var shexr = ShExUtil.ShExRtoShExJ({ \"type\": \"Schema\", \"shapes\": [\n  //   { \"id\": \"http://a.example/S1\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p1\",\n  //       \"valueExpr\": {\n  //         \"type\": \"ShapeAnd\", \"shapeExprs\": [\n  //           { \"type\": \"NodeConstraint\", \"nodeKind\": \"bnode\" },\n  //           { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //             \"expression\": {\n  //               \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  //           //            \"http://a.example/S2\"\n  //         ] } } },\n  //   { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  // ] });\n  // console.warn(\"HERE:\", shexr.shapes[0].expression.valueExpr);\n  // ShExUtil.ShExJtoAS(shexr);\n  // console.warn(\"THERE:\", shexr.shapes[\"http://a.example/S1\"].expression.valueExpr);\n\n\n  ShExRtoShExJ: function (schema) {\n    // compile a list of known shapeExprs\n    var knownShapeExprs = [];\n    if (\"shapes\" in schema)\n      knownShapeExprs = knownShapeExprs.concat(schema.shapes.map(sh => { return sh.id; }));\n\n    // normalize references to those shapeExprs\n    var v = this.ShExRVisitor(knownShapeExprs);\n    if (\"start\" in schema)\n      schema.start = v.visitShapeExpr(schema.start);\n    if (\"shapes\" in schema)\n      schema.shapes = schema.shapes.map(sh => {\n        return v.keepShapeExpr(sh);\n      });\n\n    // remove extraneous BNode IDs\n    v.cleanIds();\n    return schema;\n  },\n\n  valGrep: function (obj, type, f) {\n    var _ShExUtil = this;\n    var ret = [];\n    for (var i in obj) {\n      var o = obj[i];\n      if (typeof o === \"object\") {\n        if (\"type\" in o && o.type === type)\n          ret.push(f(o));\n        ret.push.apply(ret, _ShExUtil.valGrep(o, type, f));\n      }\n    }\n    return ret;\n  },\n\n  n3jsToTurtle: function (res) {\n    function termToLex (node) {\n      return typeof node === \"object\" ? (\"\\\"\" + node.value + \"\\\"\" + (\n        \"type\" in node ? \"^^<\" + node.type + \">\" :\n          \"language\" in node ? \"@\" + node.language :\n          \"\"\n      )) :\n      RdfTerm.isIRI(node) ? \"<\" + node + \">\" :\n      RdfTerm.isBlank(node) ? node :\n      \"???\";\n    }\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  valToN3js: function (res) {\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      var ret = JSON.parse(JSON.stringify(t));\n      if (typeof t.object === \"object\")\n        ret.object = (\"\\\"\" + t.object.value + \"\\\"\" + (\n          \"type\" in t.object ? \"^^\" + t.object.type :\n            \"language\" in t.object ? \"@\" + t.object.language :\n            \"\"\n        ));\n      return ret;\n    });\n  },\n\n  n3jsToTurtle: function (n3js) {\n    function termToLex (node) {\n      if (RdfTerm.isIRI(node))\n        return \"<\" + node + \">\";\n      if (RdfTerm.isBlank(node))\n        return node;\n      var t = RdfTerm.getLiteralType(node);\n      if (t && t !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return \"\\\"\" + RdfTerm.getLiteralValue(node) + \"\\\"\" +\n        \"^^<\" + t + \">\";\n      return node;\n    }\n    return n3js.map(function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  /** create indexes for schema\n   */\n  index: function (schema) {\n    let index = {\n      shapeExprs: {},\n      tripleExprs: {}\n    };\n    let v = ShExUtil.Visitor();\n\n    let oldVisitExpression = v.visitExpression;\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression)\n        index.tripleExprs[expression.id] = expression;\n      return oldVisitExpression.call(v, expression);\n    };\n\n    let oldVisitShapeExpr = v.visitShapeExpr;\n    v.visitShapeExpr = v.visitValueExpr = function (shapeExpr, label) {\n      if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n        index.shapeExprs[shapeExpr.id] = shapeExpr;\n      return oldVisitShapeExpr.call(v, shapeExpr, label);\n    };\n\n    v.visitSchema(schema);\n    return index;\n  },\n\n  /* canonicalize: move all tripleExpression references to their first expression.\n   *\n   */\n  canonicalize: function (schema, trimIRI) {\n    var ret = JSON.parse(JSON.stringify(schema));\n    ret[\"@context\"] = ret[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete ret._prefixes;\n    delete ret._base;\n    let index = ret._index || this.index(schema);\n    delete ret._index;\n    let sourceMap = ret._sourceMap;\n    delete ret._sourceMap;\n    // Don't delete ret.productions as it's part of the AS.\n    var v = ShExUtil.Visitor();\n    var knownExpressions = [];\n    var oldVisitInclusion = v.visitInclusion, oldVisitExpression = v.visitExpression;\n    v.visitInclusion = function (inclusion) {\n      if (knownExpressions.indexOf(inclusion) === -1 &&\n          inclusion in index.tripleExprs) {\n        knownExpressions.push(inclusion)\n        return oldVisitExpression.call(v, index.tripleExprs[inclusion]);\n      }\n      return oldVisitInclusion.call(v, inclusion);\n    };\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression) {\n        if (knownExpressions.indexOf(expression.id) === -1) {\n          knownExpressions.push(expression.id)\n          return oldVisitExpression.call(v, index.tripleExprs[expression.id]);\n        }\n        return expression.id; // Inclusion\n      }\n      return oldVisitExpression.call(v, expression);\n    };\n    if (trimIRI) {\n      v.visitIRI = function (i) {\n        return i.replace(trimIRI, \"\");\n      }\n      if (\"imports\" in ret)\n        ret.imports = v.visitImports(ret.imports);\n    }\n    if (\"shapes\" in ret) {\n      ret.shapes = Object.keys(index.shapeExprs).sort().map(k => {\n        if (\"extra\" in index.shapeExprs[k])\n          index.shapeExprs[k].extra.sort();\n        return v.visitShapeExpr(index.shapeExprs[k]);\n      });\n    }\n    return ret;\n  },\n\n  BiDiClosure: function () {\n    return {\n      needs: {},\n      neededBy: {},\n      inCycle: [],\n      test: function () {\n        function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n        // this.add(1, 2); expect(this.needs, { 1:[2]                     }); expect(this.neededBy, { 2:[1]                     });\n        // this.add(3, 4); expect(this.needs, { 1:[2], 3:[4]              }); expect(this.neededBy, { 2:[1], 4:[3]              });\n        // this.add(2, 3); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1] });\n\n        this.add(2, 3); expect(this.needs, { 2:[3]                     }); expect(this.neededBy, { 3:[2]                     });\n        this.add(1, 2); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(1, 3); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(3, 4); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(6, 7); expect(this.needs, { 6:[7]                    , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6]                    , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 6); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 7); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(7, 8); expect(this.needs, { 5:[6,7,8], 6:[7,8], 7:[8], 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5], 8:[7,6,5], 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(4, 5);\n        expect(this.needs,    { 1:[2,3,4,5,6,7,8], 2:[3,4,5,6,7,8], 3:[4,5,6,7,8], 4:[5,6,7,8], 5:[6,7,8], 6:[7,8], 7:[8] });\n        expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1], 5:[4,3,2,1], 6:[5,4,3,2,1], 7:[6,5,4,3,2,1], 8:[7,6,5,4,3,2,1] });\n      },\n      add: function (needer, needie, negated) {\n        var r = this;\n        if (!(needer in r.needs))\n          r.needs[needer] = [];\n        if (!(needie in r.neededBy))\n          r.neededBy[needie] = [];\n\n        // // [].concat.apply(r.needs[needer], [needie], r.needs[needie]). emitted only last element\n        r.needs[needer] = r.needs[needer].concat([needie], r.needs[needie]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        // // [].concat.apply(r.neededBy[needie], [needer], r.neededBy[needer]). emitted only last element\n        r.neededBy[needie] = r.neededBy[needie].concat([needer], r.neededBy[needer]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n\n        if (needer in this.neededBy) this.neededBy[needer].forEach(function (e) {\n          r.needs[e] = r.needs[e].concat([needie], r.needs[needie]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        });\n\n        if (needie in this.needs) this.needs[needie].forEach(function (e) {\n          r.neededBy[e] = r.neededBy[e].concat([needer], r.neededBy[needer]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; })\n        });\n        // this.neededBy[needie].push(needer);\n\n        if (r.needs[needer].indexOf(needer) !== -1)\n          r.inCycle = r.inCycle.concat(r.needs[needer]);\n      },\n      trim: function () {\n        function _trim (a) {\n          // filter(function (el, ord, l) { return l.indexOf(el) === ord; })\n          for (var i = a.length-1; i > -1; --i)\n            if (a.indexOf(a[i]) < i)\n              a.splice(i, i+1);\n        }\n        for (k in this.needs)\n          _trim(this.needs[k]);\n        for (k in this.neededBy)\n          _trim(this.neededBy[k]);\n      },\n      foundIn: {},\n      addIn: function (tripleExpr, shapeExpr) {\n        this.foundIn[tripleExpr] = shapeExpr;\n      }\n    }\n  },\n  /** @@TODO tests\n   * options:\n   *   no: don't do anything; just report nestable shapes\n   *   transform: function to change shape labels\n   */\n  nestShapes: function (schema, options = {}) {\n    var _ShExUtil = this;\n    const index = schema._index || this.index(schema);\n    if (!('no' in options)) { options.no = false }\n\n    let shapeLabels = Object.keys(index.shapeExprs || [])\n    let shapeReferences = {}\n    shapeLabels.forEach(label => {\n      let shape = index.shapeExprs[label]\n      noteReference(label, null) // just note the shape so we have a complete list at the end\n      shape = _ShExUtil.skipDecl(shape)\n      if (shape.type === 'Shape') {\n        if ('extends' in shape) {\n          shape.extends.forEach(\n            parent => noteReference(parent, shape)\n          )\n        }\n        if ('expression' in shape) {\n          (_ShExUtil.simpleTripleConstraints(shape) || []).forEach(tc => {\n            let target = _ShExUtil.getValueType(tc.valueExpr, true)\n            noteReference(target, {type: 'tc', shapeLabel: label, tc: tc})\n          })\n        }\n      } else if (shape.type === 'NodeConstraint') {\n        // can't have any refs to other shapes\n      } else {\n        throw Error('nestShapes currently only supports Shapes and NodeConstraints')\n      }\n    })\n    let nestables = Object.keys(shapeReferences).filter(\n      label => shapeReferences[label].length === 1\n        && shapeReferences[label][0].type === 'tc' // no inheritance support yet\n        && _ShExUtil.skipDecl(index.shapeExprs[label]).type === 'Shape' // Don't nest e.g. valuesets for now\n    ).filter(\n      nestable => !('noNestPattern' in options)\n        || !nestable.match(RegExp(options.noNestPattern))\n    ).reduce((acc, label) => {\n      acc[label] = {\n        referrer: shapeReferences[label][0].shapeLabel,\n        predicate: shapeReferences[label][0].tc.predicate\n      }\n      return acc\n    }, {})\n    if (!options.no) {\n      let oldToNew = {}\n\n      if (options.rename) {\n      if (!('transform' in options)) {\n        options.transform = (function () {\n          let map = shapeLabels.reduce((acc, k, idx) => {\n            acc[k] = '_:transformed' + idx\n            return acc\n          }, {})\n          return function (id, shapeExpr) {\n            return map[id]\n          }\n        })()\n      }\n      Object.keys(nestables).forEach(oldName => {\n        let shapeExpr = index.shapeExprs[oldName]\n        let newName = options.transform(oldName, shapeExpr)\n        oldToNew[oldName] = newName\n        shapeLabels[shapeLabels.indexOf(oldName)] = newName\n        nestables[newName] = nestables[oldName]\n        nestables[newName].was = oldName\n        delete nestables[oldName]\n        index.shapeExprs[newName] = index.shapeExprs[oldName]\n        delete index.shapeExprs[oldName]\n        if (shapeReferences[oldName].length !== 1) { throw Error('assertion: ' + oldName + ' doesn\\'t have one reference: [' + shapeReferences[oldName] + ']') }\n        let ref = shapeReferences[oldName][0]\n        if (ref.type === 'tc') {\n          if (ref.tc.valueExpr.type === 'ShapeRef') {\n            ref.tc.valueExpr.reference = newName\n          } else {\n            throw Error('assertion: rename not implemented for TripleConstraint expr: ' + ref.tc.valueExpr)\n            // _ShExUtil.setValueType(ref, newName)\n          }\n        } else if (ref.type === 'Shape') {\n          throw Error('assertion: rename not implemented for Shape: ' + ref)\n        } else {\n          throw Error('assertion: ' + ref.type + ' not TripleConstraint or Shape')\n        }\n      })\n\n      Object.keys(nestables).forEach(k => {\n        let n = nestables[k]\n        if (n.referrer in oldToNew) {\n          n.newReferrer = oldToNew[n.referrer]\n        }\n      })\n\n      // Restore old order for more concise diffs.\n      let shapesCopy = {}\n      shapeLabels.forEach(label => shapesCopy[label] = index.shapeExprs[label])\n      index.shapeExprs = shapesCopy\n      } else {\n        const doomed = []\n        const ids = schema.shapes.map(s => s.id)\n        Object.keys(nestables).forEach(oldName => {\n          shapeReferences[oldName][0].tc.valueExpr = index.shapeExprs[oldName].shapeExpr\n          const delme = ids.indexOf(oldName)\n          if (schema.shapes[delme].id !== oldName)\n            throw Error('assertion: found ' + schema.shapes[delme].id + ' instead of ' + oldName)\n          doomed.push(delme)\n          delete index.shapeExprs[oldName]\n        })\n        doomed.sort((l, r) => r - l).forEach(delme => {\n          const id = schema.shapes[delme].id\n          if (!nestables[id])\n            throw Error('deleting unexpected shape ' + id)\n          schema.shapes.splice(delme, 1)\n        })\n      }\n    }\n    // console.dir(nestables)\n    // console.dir(shapeReferences)\n    return nestables\n\n    function noteReference (id, reference) {\n      if (!(id in shapeReferences)) {\n        shapeReferences[id] = []\n      }\n      if (reference) {\n        shapeReferences[id].push(reference)\n      }\n    }\n  },\n\n  /** @@TODO tests\n   *\n   */\n  getPredicateUsage: function (schema, untyped = {}) {\n    var _ShExUtil = this;\n\n    // populate shapeHierarchy\n    let shapeHierarchy = Hierarchy.create()\n    Object.keys(schema.shapes).forEach(label => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[label])\n      if (shapeExpr.type === 'Shape') {\n        (shapeExpr.extends || []).forEach(\n          superShape => shapeHierarchy.add(superShape, label)\n        )\n      }\n    })\n    Object.keys(schema.shapes).forEach(label => {\n      if (!(label in shapeHierarchy.parents))\n        shapeHierarchy.parents[label] = []\n    })\n\n    let predicates = { } // IRI->{ uses: [shapeLabel], commonType: shapeExpr }\n    Object.keys(schema.shapes).forEach(shapeLabel => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[shapeLabel])\n      if (shapeExpr.type === 'Shape') {\n        let tcs = _ShExUtil.simpleTripleConstraints(shapeExpr) || []\n        tcs.forEach(tc => {\n          let newType = _ShExUtil.getValueType(tc.valueExpr)\n          if (!(tc.predicate in predicates)) {\n            predicates[tc.predicate] = {\n              uses: [shapeLabel],\n              commonType: newType,\n              polymorphic: false\n            }\n            if (typeof newType === 'object') {\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                newType,\n                references: []\n              }\n            }\n          } else {\n            predicates[tc.predicate].uses.push(shapeLabel)\n            let curType = predicates[tc.predicate].commonType\n            if (typeof curType === 'object' || curType === null) {\n              // another use of a predicate with no commonType\n              // console.warn(`${shapeLabel} ${tc.predicate}:${newType} uses untypable predicate`)\n              untyped[tc.predicate].references.push({ shapeLabel, newType })\n            } else if (typeof newType === 'object') {\n              // first use of a predicate with no detectable commonType\n              predicates[tc.predicate].commonType = null\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                curType,\n                newType,\n                references: []\n              }\n            } else if (curType === newType) {\n              ; // same type again\n            } else if (shapeHierarchy.parents[curType].indexOf(newType) !== -1) {\n              predicates[tc.predicate].polymorphic = true; // already covered by current commonType\n            } else {\n              let idx = shapeHierarchy.parents[newType].indexOf(curType)\n              if (idx === -1) {\n                let intersection = shapeHierarchy.parents[curType].filter(\n                  lab => -1 !== shapeHierarchy.parents[newType].indexOf(lab)\n                )\n                if (intersection.length === 0) {\n                  untyped[tc.predicate] = {\n                    shapeLabel,\n                    predicate: tc.predicate,\n                    curType,\n                    newType,\n                    references: []\n                  }\n                  // console.warn(`${shapeLabel} ${tc.predicate} : ${newType} isn\\'t related to ${curType}`)\n                  predicates[tc.predicate].commonType = null\n                } else {\n                  predicates[tc.predicate].commonType = intersection[0]\n                  predicates[tc.predicate].polymorphic = true\n                }\n              } else {\n                predicates[tc.predicate].commonType = shapeHierarchy.parents[newType][idx]\n                predicates[tc.predicate].polymorphic = true\n              }\n            }\n          }\n        })\n      }\n    })\n    return predicates\n  },\n\n  /** @@TODO tests\n   *\n   */\n  simpleTripleConstraints: function (shape) {\n    if (!('expression' in shape)) {\n      return []\n    }\n    if (shape.expression.type === 'TripleConstraint') {\n      return [ shape.expression ]\n    }\n    if (shape.expression.type === 'EachOf' &&\n        !(shape.expression.expressions.find(\n          expr => expr.type !== 'TripleConstraint'\n        ))) {\n          return shape.expression.expressions\n        }\n    throw Error('can\\'t (yet) express ' + JSON.stringify(shape))\n  },\n\n  skipDecl: function (shapeExpr) {\n    return shapeExpr.type === 'ShapeDecl' ? shapeExpr.shapeExpr : shapeExpr\n  },\n\n  getValueType: function (valueExpr) {\n    if (typeof valueExpr === 'string') { return valueExpr }\n    if (valueExpr.reference) { return valueExpr.reference }\n    if (valueExpr.nodeKind === 'iri') { return OWL.Thing } // !! push this test to callers\n    if (valueExpr.datatype) { return valueExpr.datatype }\n    // if (valueExpr.extends && valueExpr.extends.length === 1) { return valueExpr.extends[0] }\n    return valueExpr // throw Error('no value type for ' + JSON.stringify(valueExpr))\n  },\n\n  /** getDependencies: find which shappes depend on other shapes by inheritance\n   * or inclusion.\n   * TODO: rewrite in terms of Visitor.\n   */\n  getDependencies: function (schema, ret) {\n    ret = ret || this.BiDiClosure();\n    (schema.shapes || []).forEach(function (shape) {\n      function _walkShapeExpression (shapeExpr, negated) {\n        if (typeof shapeExpr === \"string\") { // ShapeRef\n          ret.add(shape.id, shapeExpr);\n        } else if (shapeExpr.type === \"ShapeOr\" || shapeExpr.type === \"ShapeAnd\") {\n          shapeExpr.shapeExprs.forEach(function (expr) {\n            _walkShapeExpression(expr, negated);\n          });\n        } else if (shapeExpr.type === \"ShapeNot\") {\n          _walkShapeExpression(shapeExpr.shapeExpr, negated ^ 1); // !!! test negation\n        } else if (shapeExpr.type === \"Shape\") {\n          _walkShape(shapeExpr, negated);\n        } else if (shapeExpr.type === \"NodeConstraint\") {\n          // no impact on dependencies\n        } else if (shapeExpr.type === \"ShapeExternal\") {\n        } else\n          throw Error(\"expected Shape{And,Or,Ref,External} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n      }\n      \n      function _walkShape (shape, negated) {\n        function _walkTripleExpression (tripleExpr, negated) {\n          function _exprGroup (exprs, negated) {\n            exprs.forEach(function (nested) {\n              _walkTripleExpression(nested, negated) // ?? negation allowed?\n            });\n          }\n\n          function _walkTripleConstraint (tc, negated) {\n            if (tc.valueExpr)\n              _walkShapeExpression(tc.valueExpr, negated);\n            if (negated && ret.inCycle.indexOf(shape.id) !== -1) // illDefined/negatedRefCycle.err\n              throw Error(\"Structural error: \" + shape.id + \" appears in negated cycle\");\n          }\n\n          if (typeof tripleExpr === \"string\") { // Inclusion\n            ret.add(shape.id, tripleExpr);\n          } else {\n            if (\"id\" in tripleExpr)\n              ret.addIn(tripleExpr.id, shape.id)\n            if (tripleExpr.type === \"TripleConstraint\") {\n              _walkTripleConstraint(tripleExpr, negated);\n            } else if (tripleExpr.type === \"OneOf\" || tripleExpr.type === \"EachOf\") {\n              _exprGroup(tripleExpr.expressions);\n            } else {\n              throw Error(\"expected {TripleConstraint,OneOf,EachOf,Inclusion} in \" + tripleExpr);\n            }\n          }\n        }\n\n        if (shape.inherit && shape.inherit.length > 0)\n          shape.inherit.forEach(function (i) {\n            ret.add(shape.id, i);\n          });\n        if (shape.expression)\n          _walkTripleExpression(shape.expression, negated);\n      }\n      _walkShapeExpression(shape, 0); // 0 means false for bitwise XOR\n    });\n    return ret;\n  },\n\n  /** partition: create subset of a schema with only desired shapes and\n   * their dependencies.\n   *\n   * @schema: input schema\n   * @partition: shape name or array of desired shape names\n   * @deps: (optional) dependency tree from getDependencies.\n   *        map(shapeLabel -> [shapeLabel])\n   */\n  partition: function (schema, includes, deps, cantFind) {\n    const inputIndex = schema._index || this.index(schema)\n    const outputIndex = { shapeExprs: new Map(), tripleExprs: new Map() };\n    includes = includes instanceof Array ? includes : [includes];\n\n    // build dependency tree if not passed one\n    deps = deps || this.getDependencies(schema);\n    cantFind = cantFind || function (what, why) {\n      throw new Error(\"Error: can't find shape \" +\n                      (why ?\n                       why + \" dependency \" + what :\n                       what));\n    };\n    var partition = {};\n    for (var k in schema)\n      partition[k] = k === \"shapes\" ? [] : schema[k];\n    includes.forEach(function (i) {\n      if (i in outputIndex.shapeExprs) {\n        // already got it.\n      } else if (i in inputIndex.shapeExprs) {\n        const adding = inputIndex.shapeExprs[i];\n        partition.shapes.push(adding);\n        outputIndex.shapeExprs[adding.id] = adding;\n        if (i in deps.needs)\n          deps.needs[i].forEach(function (n) {\n            // Turn any needed TE into an SE.\n            if (n in deps.foundIn)\n              n = deps.foundIn[n];\n\n            if (n in outputIndex.shapeExprs) {\n            } else if (n in inputIndex.shapeExprs) {\n              const needed = inputIndex.shapeExprs[n];\n              partition.shapes.push(needed);\n              outputIndex.shapeExprs[needed.id] = needed;\n            } else\n              cantFind(n, i);\n          });\n      } else {\n        cantFind(i, \"supplied\");\n      }\n    });\n    return partition;\n  },\n\n\n  /** @@TODO flatten: return copy of input schema with all shape and value class\n   * references substituted by a copy of their referent.\n   *\n   * @schema: input schema\n   */\n  flatten: function (schema, deps, cantFind) {\n    var v = this.Visitor();\n    return v.visitSchema(schema);\n  },\n\n  // @@ put predicateUsage here\n\n  emptySchema: function () {\n    return {\n      type: \"Schema\"\n    };\n  },\n  merge: function (left, right, overwrite, inPlace) {\n    var ret = inPlace ? left : this.emptySchema();\n\n    function mergeArray (attr) {\n      Object.keys(left[attr] || {}).forEach(function (key) {\n        if (!(attr in ret))\n          ret[attr] = {};\n        ret[attr][key] = left[attr][key];\n      });\n      Object.keys(right[attr] || {}).forEach(function (key) {\n        if (!(attr  in left) || !(key in left[attr]) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = {};\n          ret[attr][key] = right[attr][key];\n        }\n      });\n    }\n\n    function mergeMap (attr) {\n      (left[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr in ret))\n          ret[attr] = new Map();\n        ret[attr].set(key, left[attr].get(key));\n      });\n      (right[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr  in left) || !(left[attr].has(key)) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = new Map();\n          ret[attr].set(key, right[attr].get(key));\n        }\n      });\n    }\n\n    // base\n    if (\"_base\" in left)\n      ret._base = left._base;\n    if (\"_base\" in right)\n      if (!(\"_base\" in left) || overwrite)\n        ret._base = right._base;\n\n    mergeArray(\"_prefixes\");\n\n    mergeMap(\"_sourceMap\");\n\n    if (\"imports\" in right)\n      if (!(\"imports\" in left) || overwrite)\n        ret.imports = right.imports;\n\n    // startActs\n    if (\"startActs\" in left)\n      ret.startActs = left.startActs;\n    if (\"startActs\" in right)\n      if (!(\"startActs\" in left) || overwrite)\n        ret.startActs = right.startActs;\n\n    // start\n    if (\"start\" in left)\n      ret.start = left.start;\n    if (\"start\" in right)\n      if (!(\"start\" in left) || overwrite)\n        ret.start = right.start;\n\n    let lindex = left._index || this.index(left);\n\n    // shapes\n    if (!inPlace)\n      (left.shapes || []).forEach(function (lshape) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(lshape);\n      });\n    (right.shapes || []).forEach(function (rshape) {\n      if (!(\"shapes\"  in left) || !(rshape.id in lindex.shapeExprs) || overwrite) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(rshape)\n      }\n    });\n\n    if (left._index || right._index)\n      ret._index = this.index(ret); // inefficient; could build above\n\n    return ret;\n  },\n\n  absolutizeResults: function (parsed, base) {\n    // !! duplicate of Validation-test.js:84: var referenceResult = parseJSONFile(resultsFile...)\n    function mapFunction (k, obj) {\n      // resolve relative URLs in results file\n      if ([\"shape\", \"reference\", \"node\", \"subject\", \"predicate\", \"object\"].indexOf(k) !== -1 &&\n          RdfTerm.isIRI(obj[k])) {\n        obj[k] = RdfTerm.resolveRelativeIRI(base, obj[k]);\n      }}\n\n    function resolveRelativeURLs (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (typeof obj[k] === \"object\") {\n          resolveRelativeURLs(obj[k]);\n        }\n        if (mapFunction) {\n          mapFunction(k, obj);\n        }\n      });\n    }\n    resolveRelativeURLs(parsed);\n    return parsed;\n  },\n\n  getProofGraph: function (res, db, dataFactory) {\n    function _dive1 (solns) {\n      if (solns.type === \"NodeTest\" || solns.type === \"NodeConstraintTest\") {\n      } else if (solns.type === \"SolutionList\" ||\n          solns.type === \"ShapeAndResults\") {\n        solns.solutions.forEach(s => {\n          if (s.solution) // no .solution for <S> {}\n            _dive1(s.solution);\n        });\n      } else if (solns.type === \"ShapeOrResults\") {\n        _dive1(solns.solution);\n      } else if (solns.type === \"ShapeTest\") {\n        if (\"solution\" in solns)\n          _dive1(solns.solution);\n      } else if (solns.type === \"OneOfSolutions\" ||\n                 solns.type === \"EachOfSolutions\") {\n        solns.solutions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"OneOfSolution\" ||\n                 solns.type === \"EachOfSolution\") {\n        solns.expressions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"TripleConstraintSolutions\") {\n        solns.solutions.map(s => {\n          if (s.type !== \"TestedTriple\")\n            throw Error(\"unexpected result type: \" + s.type);\n          var s2 = s;\n          if (typeof s2.object === \"object\")\n            s2.object = \"\\\"\" + s2.object.value.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\"\n            + (s2.object.language ? (\"@\" + s2.object.language) : \n               s2.object.type ? (\"^^\" + s2.object.type) :\n               \"\");\n          db.addQuad(RdfTerm.externalTriple(s2, dataFactory))\n          if (\"referenced\" in s) {\n            _dive1(s.referenced);\n          }\n        });\n      } else {\n        throw Error(\"unexpected expr type \"+solns.type+\" in \" + JSON.stringify(solns));\n      }\n    }\n    _dive1(res);\n    return db;\n  },\n\n  validateSchema: function (schema) { // obselete, but may need other validations in the future.\n    var _ShExUtil = this;\n    var visitor = this.Visitor();\n    var currentLabel = currentExtra = null;\n    var currentNegated = false;\n    var dependsOn = { };\n    var inTE = false;\n    var oldVisitShape = visitor.visitShape;\n    var negativeDeps = Hierarchy.create();\n    var positiveDeps = Hierarchy.create();\n    let index = schema.index || this.index(schema);\n\n    visitor.visitShape = function (shape, label) {\n      var lastExtra = currentExtra;\n      currentExtra = shape.extra;\n      var ret = oldVisitShape.call(visitor, shape, label);\n      currentExtra = lastExtra;\n      return ret;\n    }\n\n    var oldVisitShapeNot = visitor.visitShapeNot;\n    visitor.visitShapeNot = function (shapeNot, label) {\n      var lastNegated = currentNegated;\n      currentNegated ^= true;\n      var ret = oldVisitShapeNot.call(visitor, shapeNot, label);\n      currentNegated = lastNegated;\n      return ret;\n    }\n\n    var oldVisitTripleConstraint = visitor.visitTripleConstraint;\n    visitor.visitTripleConstraint = function (expr) {\n      var lastNegated = currentNegated;\n      if (currentExtra && currentExtra.indexOf(expr.predicate) !== -1)\n        currentNegated ^= true;\n      inTE = true;\n      var ret = oldVisitTripleConstraint.call(visitor, expr);\n      inTE = false;\n      currentNegated = lastNegated;\n      return ret;\n    };\n\n    var oldVisitShapeRef = visitor.visitShapeRef;\n    visitor.visitShapeRef = function (shapeRef) {\n      if (!(shapeRef in index.shapeExprs))\n        throw firstError(Error(\"Structural error: reference to \" + JSON.stringify(shapeRef) + \" not found in schema shape expressions:\\n\" + dumpKeys(index.shapeExprs) + \".\"), shapeRef);\n      if (!inTE && shapeRef === currentLabel)\n        throw firstError(Error(\"Structural error: circular reference to \" + currentLabel + \".\"), shapeRef);\n      (currentNegated ? negativeDeps : positiveDeps).add(currentLabel, shapeRef)\n      return oldVisitShapeRef.call(visitor, shapeRef);\n    }\n\n    var oldVisitInclusion = visitor.visitInclusion;\n    visitor.visitInclusion = function (inclusion) {\n      var refd;\n      if (!(refd = index.tripleExprs[inclusion]))\n        throw firstError(Error(\"Structural error: included shape \" + inclusion + \" not found in schema triple expressions:\\n\" + dumpKeys(index.tripleExprs) + \".\"), inclusion);\n      // if (refd.type !== \"Shape\")\n      //   throw Error(\"Structural error: \" + inclusion + \" is not a simple shape.\");\n      return oldVisitInclusion.call(visitor, inclusion);\n    };\n\n    (schema.shapes || []).forEach(function (shape) {\n      currentLabel = shape.id;\n      visitor.visitShapeExpr(shape, shape.id);\n    });\n    let circs = Object.keys(negativeDeps.children).filter(\n      k => negativeDeps.children[k].filter(\n        k2 => k2 in negativeDeps.children && negativeDeps.children[k2].indexOf(k) !== -1\n          || k2 in positiveDeps.children && positiveDeps.children[k2].indexOf(k) !== -1\n      ).length > 0\n    );\n    if (circs.length)\n      throw firstError(Error(\"Structural error: circular negative dependencies on \" + circs.join(',') + \".\"), circs[0]);\n\n    function dumpKeys (obj) {\n      return obj ? Object.keys(obj).map(\n        u => u.substr(0, 2) === '_:' ? u : '<' + u + '>'\n      ).join(\"\\n        \") : '- none defined -'\n    }\n\n    function firstError (e, obj) {\n      if (\"_sourceMap\" in schema)\n        e.location = (schema._sourceMap.get(obj) || [undefined])[0];\n      return e;\n    }\n  },\n\n  /** isWellDefined: assert that schema is well-defined.\n   *\n   * @schema: input schema\n   * @@TODO\n   */\n  isWellDefined: function (schema) {\n    this.validateSchema(schema);\n    // var deps = this.getDependencies(schema);\n    return schema;\n  },\n\n  walkVal: function (val, cb) {\n    var _ShExUtil = this;\n    if (val.type === \"NodeTest\") {\n      return null;\n    } else if (val.type === \"ShapeTest\") {\n      return \"solution\" in val ? _ShExUtil.walkVal(val.solution, cb) : null;\n    } else if (val.type === \"ShapeOrResults\") {\n      return _ShExUtil.walkVal(val.solution || val.solutions, cb);\n    } else if (val.type === \"ShapeAndResults\") {\n      return val.solutions.reduce((ret, exp) => {\n        var n = _ShExUtil.walkVal(exp, cb);\n        if (n)\n          Object.keys(n).forEach(k => {\n            if (k in ret)\n              ret[k] = ret[k].concat(n[k]);\n            else\n              ret[k] = n[k];\n          })\n        return ret;\n      }, {});\n    } else if (val.type === \"EachOfSolutions\" || val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        sln.expressions.forEach(exp => {\n          var n = _ShExUtil.walkVal(exp, cb);\n          if (n)\n            Object.keys(n).forEach(k => {\n              if (k in ret)\n                ret[k] = ret[k].concat(n[k]);\n              else\n                ret[k] = n[k];\n            })\n        });\n        return ret;\n      }, {});\n    } else if (val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        Object.assign(ret, _ShExUtil.walkVal(sln, cb));\n        return ret;\n      }, {});\n    } else if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        var ret = {};\n        var vals = [];\n        ret[val.predicate] = vals;\n        val.solutions.forEach(sln => {\n          var toAdd = [];\n          if (chaseList(sln.referenced, toAdd)) {\n            vals = vals.concat(toAdd);\n          } else {\n            var newElt = cb(sln);\n            if (\"referenced\" in sln) {\n              var t = _ShExUtil.walkVal(sln.referenced, cb);\n              if (t)\n                newElt.nested = t;\n            }\n            vals.push(newElt);\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = cb(member);\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.walkVal(member.referenced, cb);\n                if (t)\n                  newElt.nested = t;\n              }\n              vals.push(newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced);\n            }\n          }\n        });\n        return vals.length ? ret : null;\n      } else {\n        return null;\n      }\n    } else if (val.type === \"Recursion\") {\n      return null;\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  /**\n   * Convert val results to a property tree.\n   * @exports\n   * @returns {@code {p1:[{p2: v2},{p3: v3}]}}\n   */\n  valToValues: function (val) {\n    return this.walkVal (val, function (sln) {\n      return { ldterm: sln.object };\n    });\n  },\n\n  valToExtension: function (val, lookfor) {\n    var map = this.walkVal (val, function (sln) {\n      return { extensions: sln.extensions };\n    });\n    function extensions (obj) {\n      var list = [];\n      var crushed = {};\n      function crush (elt) {\n        if (crushed === null)\n          return elt;\n        if (elt.constructor === Array) {\n          crushed = null;\n          return elt;\n        }\n        for (k in elt) {\n          if (k in crushed) {\n            crushed = null\n            return elt;\n          }\n          crushed[k] = elt[k];\n        }\n        return elt;\n      }\n      for (var k in obj) {\n        if (k === \"extensions\") {\n          if (obj[k])\n            list.push(crush(obj[k][lookfor]));\n        } else if (k === \"nested\") {\n          var nested = extensions(obj[k]);\n          if (nested.constructor === Array)\n            nested.forEach(crush);\n          else\n            crush(nested);\n          list = list.concat(nested);\n        } else {\n          list.push(crush(extensions(obj[k])));\n        }\n      }\n      return list.length === 1 ? list[0] :\n        crushed ? crushed :\n        list;\n    }\n    return extensions(map);\n  },\n\n  valuesToSchema: function (values) {\n    // console.log(JSON.stringify(values, null, \"  \"));\n    var v = values;\n    var t = values[RDF.type][0].ldterm;\n    if (t === SX.Schema) {\n      /* Schema { \"@context\":\"http://www.w3.org/ns/shex.jsonld\"\n       *           startActs:[SemAct+]? start:(shapeExpr|labeledShapeExpr)?\n       *           shapes:[labeledShapeExpr+]? }\n       */\n      var ret = {\n        \"@context\": \"http://www.w3.org/ns/shex.jsonld\",\n        type: \"Schema\"\n      }\n      if (SX.startActs in v)\n        ret.startActs = v[SX.startActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      if (SX.imports in v)\n        ret.imports = v[SX.imports].map(e => {\n          return e.ldterm;\n        });\n      if (values[SX.start])\n        ret.start = extend({id: values[SX.start][0].ldterm}, shapeExpr(values[SX.start][0].nested));\n      var shapes = values[SX.shapes];\n      if (shapes) {\n        ret.shapes = shapes.map(v => {\n          return extend({id: v.ldterm}, shapeExpr(v.nested));\n        });\n      }\n      // console.log(ret);\n      return ret;\n    } else {\n      throw Error(\"unknown schema type in \" + JSON.stringify(values));\n    }\n    function findType (v, elts, f) {\n      var t = v[RDF.type][0].ldterm.substr(SX._namespace.length);\n      var elt = elts[t];\n      if (!elt)\n        return Missed;\n      if (elt.nary) {\n        var ret = {\n          type: t,\n        };\n        ret[elt.prop] = v[SX[elt.prop]].map(e => {\n          return valueOf(e);\n        });\n        return ret;\n      } else {\n        var ret = {\n          type: t\n        };\n        if (elt.prop) {\n          ret[elt.prop] = valueOf(v[SX[elt.prop]][0]);\n        }\n        return ret;\n      }\n\n      function valueOf (x) {\n        return elt.expr && \"nested\" in x ? extend({ id: x.ldterm, }, f(x.nested)) : x.ldterm;\n      }\n    }\n    function shapeExpr (v) {\n      // shapeExpr = ShapeOr | ShapeAnd | ShapeNot | NodeConstraint | Shape | ShapeRef | ShapeExternal;\n      var elts = { \"ShapeAnd\"     : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeOr\"      : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeNot\"     : { nary: false, expr: true , prop: \"shapeExpr\"  },\n                   \"ShapeRef\"     : { nary: false, expr: false, prop: \"reference\"  },\n                   \"ShapeExternal\": { nary: false, expr: false, prop: null         } };\n      var ret = findType(v, elts, shapeExpr);\n      if (ret !== Missed)\n        return ret;\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.Shape) {\n        var ret = { type: \"Shape\" };\n        [\"closed\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.extra in v)\n          ret.extra = v[SX.extra].map(e => { return e.ldterm; });\n        if (SX.expression in v) {\n          ret.expression =\n            \"nested\" in v[SX.expression][0] ?\n            extend({id: v[SX.expression][0].ldterm}, tripleExpr(v[SX.expression][0].nested)) :\n            v[SX.expression][0].ldterm;\n        }\n        if (SX.annotation in v)\n          ret.annotations = v[SX.annotation].map(e => {\n            return {\n              type: \"Annotation\",\n              predicate: e.nested[SX.predicate][0].ldterm,\n              object: e.nested[SX.object][0].ldterm\n            };\n          });\n        if (SX.semActs in v)\n          ret.semActs = v[SX.semActs].map(e => {\n            var ret = {\n              type: \"SemAct\",\n              name: e.nested[SX.name][0].ldterm\n            };\n            if (SX.code in e.nested)\n              ret.code = e.nested[SX.code][0].ldterm.value;\n            return ret;\n          });\n        return ret;\n      } else if (t === SX.NodeConstraint) {\n        var ret = { type: \"NodeConstraint\" };\n        if (SX.values in v)\n          ret.values = v[SX.values].map(v1 => { return objectValue(v1); });\n        if (SX.nodeKind in v)\n          ret.nodeKind = v[SX.nodeKind][0].ldterm.substr(SX._namespace.length);\n        [\"length\", \"minlength\", \"maxlength\", \"mininclusive\", \"maxinclusive\", \"minexclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = parseFloat(v[SX[a]][0].ldterm.value);\n        });\n        if (SX.pattern in v)\n          ret.pattern = v[SX.pattern][0].ldterm.value;\n        if (SX.flags in v)\n          ret.flags = v[SX.flags][0].ldterm.value;\n        if (SX.datatype in v)\n          ret.datatype = v[SX.datatype][0].ldterm;\n        return ret;\n      } else {\n        throw Error(\"unknown shapeExpr type in \" + JSON.stringify(v));\n      }\n\n    }\n\n    function objectValue (v, expectString) {\n      if (\"nested\" in v) {\n        var t = v.nested[RDF.type][0].ldterm;\n        if ([SX.IriStem, SX.LiteralStem, SX.LanguageStem].indexOf(t) !== -1) {\n          var ldterm = v.nested[SX.stem][0].ldterm.value;\n          return {\n            type: t.substr(SX._namespace.length),\n            stem: ldterm\n          };\n        } else if ([SX.Language].indexOf(t) !== -1) {\n          return {\n            type: \"Language\",\n            languageTag: v.nested[SX.languageTag][0].ldterm.value\n          };\n        } else if ([SX.IriStemRange, SX.LiteralStemRange, SX.LanguageStemRange].indexOf(t) !== -1) {\n          var st = v.nested[SX.stem][0];\n          var stem = st;\n          if (typeof st === \"object\") {\n            if (typeof st.ldterm === \"object\") {\n              stem = st.ldterm;\n            } else if (st.ldterm.startsWith(\"_:\")) {\n              stem = { type: \"Wildcard\" };\n            }\n          }\n          var ret = {\n            type: t.substr(SX._namespace.length),\n            stem: stem.type !== \"Wildcard\" ? stem.value : stem\n          };\n          if (SX.exclusion in v.nested) {\n            // IriStemRange:\n            // * [{\"ldterm\":\"http://a.example/v1\"},{\"ldterm\":\"http://a.example/v3\"}] <-- no value\n            // * [{\"ldterm\":\"_:b836\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v1\"}}]}},\n            //    {\"ldterm\":\"_:b838\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v3\"}}]}}]\n\n            // LiteralStemRange:\n            // * [{\"ldterm\":{\"value\":\"v1\"}},{\"ldterm\":{\"value\":\"v3\"}}]\n            // * [{\"ldterm\":\"_:b866\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v1\"}}]}},\n            //    {\"ldterm\":\"_:b868\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v3\"}}]}}]\n\n            // LanguageStemRange:\n            // * [{\"ldterm\":{\"value\":\"fr-be\"}},{\"ldterm\":{\"value\":\"fr-ch\"}}]\n            // * [{\"ldterm\":\"_:b851\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-be\"}}]}},\n            //    {\"ldterm\":\"_:b853\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-ch\"}}]}}]\n            ret.exclusions = v.nested[SX.exclusion].map(v1 => {\n              return objectValue(v1, t !== SX.IriStemRange);\n            });\n          }\n          return ret;\n        } else {\n          throw Error(\"unknown objectValue type in \" + JSON.stringify(v));\n        }\n      } else {\n        return expectString ? v.ldterm.value : v.ldterm;\n      }\n    }\n\n    function tripleExpr (v) {\n      // tripleExpr = EachOf | OneOf | TripleConstraint | Inclusion ;\n      var elts = { \"EachOf\"   : { nary: true , expr: true , prop: \"expressions\" },\n                   \"OneOf\"    : { nary: true , expr: true , prop: \"expressions\" },\n                   \"Inclusion\": { nary: false, expr: false, prop: \"include\"     } };\n      var ret = findType(v, elts, tripleExpr);\n      if (ret !== Missed) {\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      }\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.TripleConstraint) {\n        var ret = {\n          type: \"TripleConstraint\",\n          predicate: v[SX.predicate][0].ldterm\n        };\n        [\"inverse\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.valueExpr in v)\n          ret.valueExpr = extend({id: v[SX.valueExpr][0].ldterm}, \"nested\" in v[SX.valueExpr][0] ? shapeExpr(v[SX.valueExpr][0].nested) : {});\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      } else {\n        throw Error(\"unknown tripleExpr type in \" + JSON.stringify(v));\n      }\n    }\n    function minMaxAnnotSemActs (v, ret) {\n      if (SX.min in v)\n        ret.min = parseInt(v[SX.min][0].ldterm.value);\n      if (SX.max in v) {\n        ret.max = parseInt(v[SX.max][0].ldterm.value);\n        if (isNaN(ret.max))\n          ret.max = UNBOUNDED;\n      }\n      if (SX.annotation in v)\n        ret.annotations = v[SX.annotation].map(e => {\n          return {\n            type: \"Annotation\",\n            predicate: e.nested[SX.predicate][0].ldterm,\n            object: e.nested[SX.object][0].ldterm\n          };\n        });\n      if (SX.semActs in v)\n        ret.semActs = v[SX.semActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      return ret;\n    }\n  },\n\n  valToSimple: function (val) {\n    var _ShExUtil = this;\n    function _join (list) {\n      return list.reduce((ret, elt) => {\n        Object.keys(elt).forEach(k => {\n          if (k in ret) {\n            ret[k] = Array.from(new Set(ret[k].concat(elt[k])));\n          } else {\n            ret[k] = elt[k];\n          }\n        });\n        return ret;\n      }, {});\n    }\n    if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        return val.solutions.reduce((ret, sln) => {\n          if (!(\"referenced\" in sln))\n            return {};\n          var toAdd = {};\n          if (chaseList(sln.referenced, toAdd)) {\n            return _join(ret, toAdd);\n          } else {\n            return _join(ret, _ShExUtil.valToSimple(sln.referenced));\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = { ldterm: member.object };\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.valToSimple(member.referenced);\n                if (t)\n                  newElt.nested = t;\n              }\n              toAdd = _join(toAdd, newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced);\n            }\n          }\n        }, []);\n      } else {\n        return [];\n      }\n    } else if ([\"TripleConstraintSolutions\"].indexOf(val.type) !== -1) {\n      return {  };\n    } else if (val.type === \"NodeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return thisNode;\n    } else if (val.type === \"ShapeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return \"solution\" in val ? _join([thisNode].concat(_ShExUtil.valToSimple(val.solution))) : thisNode;\n    } else if (val.type === \"Recursion\") {\n      return {  };\n    } else if (\"solutions\" in val) {\n      // [\"SolutionList\", \"EachOfSolutions\", \"OneOfSolutions\", \"ShapeAndResults\", \"ShapeOrResults\"].indexOf(val.type) !== -1\n      return _join(val.solutions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else if (\"expressions\" in val) {\n      return _join(val.expressions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  simpleToShapeMap: function (x) {\n    return Object.keys(x).reduce((ret, k) => {\n      x[k].forEach(s => {\n        ret.push({node: k, shape: s });\n      });\n      return ret;\n    }, []);\n  },\n\n  absolutizeShapeMap: function (parsed, base) {\n    return parsed.map(elt => {\n      return Object.assign(elt, {\n        node: RdfTerm.resolveRelativeIRI(base, elt.node),\n        shape: RdfTerm.resolveRelativeIRI(base, elt.shape)\n      });\n    });\n  },\n\n  errsToSimple: function (val, node, shape) {\n    var _ShExUtil = this;\n    if (val.type === \"FailureList\") {\n      return val.errors.reduce((ret, e) => {\n        return ret.concat(_ShExUtil.errsToSimple(e));\n      }, []);\n    } else if (val.type === \"Failure\") {\n      return [\"validating \" + val.node + \" as \" + val.shape + \":\"].concat(errorList(val.errors).reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length > 0 ? ret.concat([\"  OR\"]).concat(nested) : nested.map(s => \"  \" + s);\n      }, []));\n    } else if (val.type === \"TypeMismatch\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"validating \" + n3ify(val.triple.object) + \":\"].concat(nested);\n    } else if (val.type === \"ShapeAndFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeOrFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat(\" OR \" + (typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)));\n          }, []) :\n          \" OR \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeNotFailure\") {\n      return [\"Node \" + val.errors.node + \" expected to NOT pass \" + val.errors.shape];\n    } else if (val.type === \"ExcessTripleViolation\") {\n      return [\"validating \" + n3ify(val.triple.object) + \": exceeds cardinality\"];\n    } else if (val.type === \"ClosedShapeViolation\") {\n      return [\"ClosedShapeError: unexpected: {\"].concat(\n        val.unexpectedTriples.map(t => {\n          return \"  \" + t.subject + \" \" + t.predicate + \" \" + n3ify(t.object) + \" .\"\n        })\n      ).concat([\"}\"]);\n    } else if (val.type === \"NodeConstraintViolation\") {\n      var w = require(\"../lib/ShExWriter\")();\n      w._write(w._writeNodeConstraint(val.shapeExpr).join(\"\"));\n      var txt;\n      w.end((err, res) => {\n        txt = res;\n      });\n      return [\"NodeConstraintError: expected to match \" + txt];\n    } else if (val.type === \"MissingProperty\") {\n      return [\"Missing property: \" + val.property];\n    } else if (val.type === \"NegatedProperty\") {\n      return [\"Unexpected property: \" + val.property];\n    } else if (val.constructor === Array) {debugger;\n      return val.reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length ? ret.concat([\"AND\"]).concat(nested) : nested;\n      }, []);\n    } else if (val.type === \"SemActFailure\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"rejected by semantic action:\"].concat(nested);\n    } else if (val.type === \"SemActViolation\") {\n      return [val.message];\n    } else if (val.type === \"BooleanSemActFailure\") {\n      return [\"Failed evaluating \" + val.code + \" on context \" + JSON.stringify(val.ctx)];\n    } else {\n      debugger; // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    function errorList (errors) {\n      return errors.reduce(function (acc, e) {\n        var attrs = Object.keys(e);\n        return acc.concat(\n          (attrs.length === 1 && attrs[0] === \"errors\")\n            ? errorList(e.errors)\n            : e);\n      }, []);\n    }\n  },\n\n  resolveRelativeIRI: RdfTerm.resolveRelativeIRI,\n\n  resolvePrefixedIRI: function (prefixedIri, prefixes) {\n    var colon = prefixedIri.indexOf(\":\");\n    if (colon === -1)\n      return null;\n    var prefix = prefixes[prefixedIri.substr(0, colon)];\n    return prefix === undefined ? null : prefix + prefixedIri.substr(colon+1);\n  },\n\n  parsePassedNode: function (passedValue, meta, deflt, known, reportUnknown) {\n    if (passedValue === undefined || passedValue.length === 0)\n      return known && known(meta.base) ? meta.base : deflt ? deflt() : this.NotSupplied;\n    if (passedValue[0] === \"_\" && passedValue[1] === \":\")\n      return passedValue;\n    if (passedValue[0] === \"\\\"\") {\n      var m = passedValue.match(/^\"((?:[^\"\\\\]|\\\\\")*)\"(?:@(.+)|\\^\\^(?:<(.*)>|([^:]*):(.*)))?$/);\n      if (!m)\n        throw Error(\"malformed literal: \" + passedValue);\n      var lex = m[1], lang = m[2], rel = m[3], pre = m[4], local = m[5];\n      // Turn the literal into an N3.js atom.\n      var quoted = \"\\\"\"+lex+\"\\\"\";\n      if (lang !== undefined)\n        return quoted + \"@\" + lang;\n      if (pre !== undefined) {\n        if (!(pre in meta.prefixes))\n          throw Error(\"error parsing node \"+passedValue+\" no prefix for \\\"\" + pre + \"\\\"\");\n        return quoted + \"^^\" + meta.prefixes[pre] + local;\n      }\n      if (rel !== undefined)\n        return quoted + \"^^\" + RdfTerm.resolveRelativeIRI(meta.base, rel);\n      return quoted;\n    }\n    if (!meta)\n      return known(passedValue) ? passedValue : this.UnknownIRI;\n    var relIRI = passedValue[0] === \"<\" && passedValue[passedValue.length-1] === \">\";\n    if (relIRI)\n      passedValue = passedValue.substr(1, passedValue.length-2);\n    var t = RdfTerm.resolveRelativeIRI(meta.base || \"\", passedValue); // fall back to base-less mode\n    if (known(t))\n      return t;\n    if (!relIRI) {\n      var t2 = this.resolvePrefixedIRI(passedValue, meta.prefixes);\n      if (t2 !== null && known(t2))\n        return t2;\n    }\n    return reportUnknown ? reportUnknown(t) : this.UnknownIRI;\n  },\n\n  executeQueryPromise: function (query, endpoint) {\n    var rows;\n\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    return fetch(queryURL, {\n      headers: {\n        'Accept': 'application/sparql-results+json'\n      }}).then(resp => resp.json()).then(t => {\n        var selects = t.head.vars;\n        return t.results.bindings.map(row => {\n          return selects.map(sel => {\n            var elt = row[sel];\n            switch (elt.type) {\n            case \"uri\": return elt.value;\n            case \"bnode\": return \"_:\" + elt.value;\n            case \"literal\":\n              var datatype = elt.datatype;\n              var lang = elt[\"xml:lang\"];\n              return \"\\\"\" + elt.value + \"\\\"\" + (\n                datatype ? \"^^\" + datatype :\n                  lang ? \"@\" + lang :\n                  \"\");\n            default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n            }\n            return row[sel];\n          })\n        });\n      })// .then(x => new Promise(resolve => setTimeout(() => resolve(x), 1000)));\n  },\n\n  executeQuery: function (query, endpoint) {\n    var rows, t, j;\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", queryURL, false);\n    xhr.setRequestHeader('Accept', 'application/sparql-results+json');\n    xhr.send();\n    // var selectsBlock = query.match(/SELECT\\s*(.*?)\\s*{/)[1];\n    // var selects = selectsBlock.match(/\\?[^\\s?]+/g);\n    var t = JSON.parse(xhr.responseText);\n    var selects = t.head.vars;\n    return t.results.bindings.map(row => {\n      return selects.map(sel => {\n        var elt = row[sel];\n        switch (elt.type) {\n        case \"uri\": return elt.value;\n        case \"bnode\": return \"_:\" + elt.value;\n        case \"literal\":\n          var datatype = elt.datatype;\n          var lang = elt[\"xml:lang\"];\n          return \"\\\"\" + elt.value + \"\\\"\" + (\n            datatype ? \"^^\" + datatype :\n              lang ? \"@\" + lang :\n              \"\");\n        default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n        }\n        return row[sel];\n      })\n    });\n\n/* TO ADD? XML results format parsed with jquery:\n        $(data).find(\"sparql > results > result\").\n          each((_, row) => {\n            rows.push($(row).find(\"binding > *:nth-child(1)\").\n              map((idx, elt) => {\n                elt = $(elt);\n                var text = elt.text();\n                switch (elt.prop(\"tagName\")) {\n                case \"uri\": return text;\n                case \"bnode\": return \"_:\" + text;\n                case \"literal\":\n                  var datatype = elt.attr(\"datatype\");\n                  var lang = elt.attr(\"xml:lang\");\n                  return \"\\\"\" + text + \"\\\"\" + (\n                    datatype ? \"^^\" + datatype :\n                    lang ? \"@\" + lang :\n                      \"\");\n                default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n                }\n              }).get());\n          });\n*/\n  },\n\n  makeN3DB: function (db, queryTracker) {\n\n    function getSubjects () { return db.getSubjects().map(RdfTerm.internalTerm); }\n    function getPredicates () { return db.getPredicates().map(RdfTerm.internalTerm); }\n    function getObjects () { return db.getObjects().map(RdfTerm.internalTerm); }\n    function getQuads () { return db.getQuads.apply(db, arguments).map(RdfTerm.internalTriple); }\n\n    function getNeighborhood (point, shapeLabel/*, shape */) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = db.getQuads(point, null, null, null).map(RdfTerm.internalTriple);\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = db.getQuads(null, null, point, null).map(RdfTerm.internalTriple);\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      // size: db.size,\n      getNeighborhood: getNeighborhood,\n      getSubjects: getSubjects,\n      getPredicates: getPredicates,\n      getObjects: getObjects,\n      getQuads: getQuads,\n      get size() { return db.size; },\n      // getQuads: function (s, p, o, graph, shapeLabel) {\n      //   // console.log(Error(s + p + o).stack)\n      //   if (queryTracker)\n      //     queryTracker.start(!!s, s ? s : o, shapeLabel);\n      //   var quads = db.getQuads(s, p, o, graph)\n      //   if (queryTracker)\n      //     queryTracker.end(quads, new Date() - startTime);\n      //   return quads;\n      // }\n    }\n  },\n  /** emulate N3Store().getQuads() with additional parm.\n   */\n  makeQueryDB: function (endpoint, queryTracker) {\n    var _ShExUtil = this;\n\n    function getQuads(s, p, o, g) {\n      return mapQueryToTriples(\"SELECT \" + [\n        (s?\"\":\"?s\"), (p?\"\":\"?p\"), (o?\"\":\"?o\"),\n        \"{\",\n        (s?s:\"?s\"), (p?p:\"?s\"), (o?o:\"?s\"),\n        \"}\"].join(\" \"), s, o)\n    }\n\n    function mapQueryToTriples (query, s, o) {\n      var rows = _ShExUtil.executeQuery(query, endpoint);\n      var triples = rows.map(row =>  {\n        return s ? {\n          subject: s,\n          predicate: row[0],\n          object: row[1]\n        } : {\n          subject: row[0],\n          predicate: row[1],\n          object: o\n        };\n      });\n      return triples;\n    }\n\n    function getTripleConstraints (tripleExpr) {\n      var visitor = _ShExUtil.Visitor();\n      var ret = {\n        out: [],\n        inc: []\n      };\n      visitor.visitTripleConstraint = function (expr) {\n        ret[expr.inverse ? \"inc\" : \"out\"].push(expr);\n        return expr;\n      };\n\n      if (tripleExpr)\n        visitor.visitExpression(tripleExpr);\n      return ret;\n    }\n\n    function getNeighborhood (point, shapeLabel, shape) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      var tcs = getTripleConstraints(shape.expression);\n      var pz = tcs.out.map(t => t.predicate);\n      pz = pz.filter((p, idx) => pz.lastIndexOf(p) === idx);\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = (tcs.out.length > 0 || shape.closed)\n          ? mapQueryToTriples(\n            shape.closed\n              ? `SELECT ?p ?o { <${point}> ?p ?o }`\n              : \"SELECT ?p ?o {\\n\" +\n              pz.map(\n                p => `  {<${point}> <${p}> ?o BIND(<${p}> AS ?p)}`\n              ).join(\" UNION\\n\") +\n              \"\\n}\",\n            point, null\n          )\n          : [];\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = tcs.inc.length > 0\n          ? mapQueryToTriples(`SELECT ?s ?p { ?s ?p <${point}> }`, null, point)\n          : []\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return  {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      getNeighborhood: getNeighborhood,\n      getQuads: getQuads,\n      getSubjects: function () { return [\"!Query DB can't index subjects\"] },\n      getPredicates: function () { return [\"!Query DB can't index predicates\"] },\n      getObjects: function () { return [\"!Query DB can't index objects\"] },\n      get size() { return undefined; }\n    };\n  },\n\n  NotSupplied: \"-- not supplied --\", UnknownIRI: \"-- not found --\",\n\n  // Expect property p with value v in object o\n  _expect: function (o, p, v) {\n    if (!(p in o))\n      this._error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p);\n    if (arguments.length > 2 && o[p] !== v)\n      this._error(\"expected \"+o[o]+\" to equal .\"+v);\n  },\n\n  _error: function (str) {\n    throw new Error(str);\n  },\n\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  unescapeText: function (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  },\n\n};\n\n\nfunction n3ify (ldterm) {\n  if (typeof ldterm !== \"object\")\n    return ldterm;\n  var ret = \"\\\"\" + ldterm.value + \"\\\"\";\n  if (\"language\" in ldterm)\n    return ret + \"@\" + ldterm.language;\n  if (\"type\" in ldterm)\n    return ret + \"^^\" + ldterm.type;\n  return ret;\n}\n\n// Add the ShExUtil functions to the given object or its prototype\nfunction AddShExUtil(parent, toPrototype) {\n  for (var name in ShExUtil)\n    if (!toPrototype)\n      parent[name] = ShExUtil[name];\n    else\n      parent.prototype[name] = ApplyToThis(ShExUtil[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\nreturn AddShExUtil(AddShExUtil);\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExUtil; // node environment\n"
        },
        {
          "id": 21,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "name": "../shex-core/lib/ShExWriter.js",
          "index": 13,
          "index2": 13,
          "size": 22312,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExWriter",
              "loc": "5:13-40"
            },
            {
              "moduleId": 20,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "module": "../shex-core/lib/ShExUtil.js",
              "moduleName": "../shex-core/lib/ShExUtil.js",
              "type": "cjs require",
              "userRequest": "../lib/ShExWriter",
              "loc": "1914:14-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// **ShExWriter** writes ShEx documents.\n\nvar ShExWriter = (function () {\nvar util = require('util');\nvar UNBOUNDED = -1;\n\n// Matches a literal as represented in memory by the ShEx library\nvar ShExLiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar ESCAPE_1 = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    ESCAPE_g = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    ESCAPE_replacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '/': '\\\\/', '\\t': '\\\\t',\n                            '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\nvar nodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\nvar nonLitNodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\n\n// ## Constructor\nfunction ShExWriter (outputStream, options) {\n  if (!(this instanceof ShExWriter))\n    return new ShExWriter(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._prefixIRIs = Object.create(null);\n  options.prefixes && this.addPrefixes(options.prefixes);\n\n  this._error = options.error || _throwError;\n  this.forceParens = !options.simplifyParentheses; // default to false\n  this._expect = options.lax ? noop : expect;\n}\n\nShExWriter.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n  // ### `_writeSchema` writes the shape to the output stream\n  _writeSchema: function (schema, done) {\n    var _ShExWriter = this;\n    this._expect(schema, \"type\", \"Schema\");\n    _ShExWriter.addPrefixes(schema.prefixes);\n    if (schema.base)\n      _ShExWriter._write(\"BASE \" + this._encodeIriOrBlankNode(schema.base) + \"\\n\");\n\n    if (schema.imports)\n      schema.imports.forEach(function (imp) {\n        _ShExWriter._write(\"IMPORT \" + _ShExWriter._encodeIriOrBlankNode(imp) + \"\\n\");\n      });\n    if (schema.startActs)\n      schema.startActs.forEach(function (act) {\n        _ShExWriter._expect(act, \"type\", \"SemAct\");\n        _ShExWriter._write(\" %\"+\n                           _ShExWriter._encodePredicate(act.name)+\n                           (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n      });\n    if (schema.start)\n      _ShExWriter._write(\"start = \" + _ShExWriter._writeShapeExpr(schema.start, done, true, 0).join('') + \"\\n\")\n    if (\"shapes\" in schema)\n      schema.shapes.forEach(function (shapeExpr) {\n        _ShExWriter._write(\n          _ShExWriter._encodeShapeName(shapeExpr.id, false) +\n            \" \" +\n            _ShExWriter._writeShapeExpr(shapeExpr, done, true, 0).join(\"\")+\"\\n\",\n          done\n        );\n      })\n  },\n\n  _writeShapeExpr: function (shapeExpr, done, forceBraces, parentPrec) {\n    var _ShExWriter = this;\n    var pieces = [];\n    if (typeof shapeExpr === \"string\") // ShapeRef\n      pieces.push(\"@\", _ShExWriter._encodeShapeName(shapeExpr));\n    // !!! []s for precedence!\n    else if (shapeExpr.type === \"ShapeExternal\")\n      pieces.push(\"EXTERNAL\");\n    else if (shapeExpr.type === \"ShapeAnd\") {\n      if (parentPrec >= 3)\n        pieces.push(\"(\");\n      var lastAndElided = false;\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0) { // && !!! grammar rules too weird here\n          /*\n            shapeAtom:\n                  nonLitNodeConstraint shapeOrRef?\n                | shapeDecl nonLitNodeConstraint?\n\n            nonLitInlineNodeConstraint:\n                  nonLiteralKind stringFacet*\n          */\n          function nonLitNodeConstraint (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type !== \"NodeConstraint\"\n              || (\"nodeKind\" in c && c.nodeKind === \"literal\")\n              || \"datatype\" in c\n              || \"values\" in c\n              ? false\n              : true;\n          }\n\n          function shapeOrRef (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\" || c.type === \"ShapeRef\";\n          }\n\n          function shapeDecl (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\";\n          }\n\n          let elideAnd = !lastAndElided\n              && (nonLitNodeConstraint(ord-1) && shapeOrRef(ord)\n                  || shapeDecl(ord-1) && nonLitNodeConstraint(ord))\n          if (!elideAnd) {\n            pieces.push(\" AND \");\n          }\n          lastAndElided = elideAnd;\n        }\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, false, 3));\n      });\n      if (parentPrec >= 3)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      if (parentPrec >= 2)\n        pieces.push(\"(\");\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0)\n          pieces.push(\" OR \");\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, forceBraces, 2));\n      });\n      if (parentPrec >= 2)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      if (parentPrec >= 4)\n        pieces.push(\"(\");\n      pieces.push(\"NOT \");\n      pieces = pieces.concat(_ShExWriter._writeShapeExpr(shapeExpr.shapeExpr, done, forceBraces, 4));\n      if (parentPrec >= 4)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"Shape\") {\n      pieces = pieces.concat(_ShExWriter._writeShape(shapeExpr, done, forceBraces));\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      pieces = pieces.concat(_ShExWriter._writeNodeConstraint(shapeExpr, done, forceBraces));\n    } else\n      throw Error(\"expected Shape{,And,Or,Ref} or NodeConstraint in \" + util.inspect(shapeExpr));\n    return pieces;\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeShape: function (shape, done, forceBraces) {\n    var _ShExWriter = this;\n    try {\n      var pieces = []; // guessing push/join is faster than concat\n      this._expect(shape, \"type\", \"Shape\");\n\n      if (shape.closed) pieces.push(\"CLOSED \");\n\n      // if (shape.inherit && shape.inherit.length > 0) { futureWork\n      //   pieces.push(\"&\");\n      //   shape.inherit.forEach(function (i, ord) {\n      //     if (ord)\n      //       pieces.push(\" \")\n      //     pieces.push(_ShExWriter._encodeShapeName(i, ord > 0));\n      //   });\n      //   pieces.push(\" \");\n      // }\n\n      if (shape.extra && shape.extra.length > 0) {\n        pieces.push(\"EXTRA \");\n        shape.extra.forEach(function (i, ord) {\n          pieces.push(_ShExWriter._encodeShapeName(i, false)+\" \");\n        });\n        pieces.push(\" \");\n      }\n      var empties = [\"values\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\"];\n      pieces.push(\"{\\n\");\n\n      function _writeShapeActions (semActs) {\n        if (!semActs)\n          return;\n\n        semActs.forEach(function (act) {\n          _ShExWriter._expect(act, \"type\", \"SemAct\");\n          pieces.push(\" %\",\n                      _ShExWriter._encodePredicate(act.name),\n                      (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n        });\n      }\n\n      function _writeCardinality (min, max) {\n        if      (min === 0 && max === 1)         pieces.push(\"?\");\n        else if (min === 0 && max === UNBOUNDED) pieces.push(\"*\");\n        else if (min === undefined && max === undefined)                         ;\n        else if (min === 1 && max === UNBOUNDED) pieces.push(\"+\");\n        else\n          pieces.push(\"{\", min, \",\", (max === UNBOUNDED ? \"*\" : max), \"}\"); // by coincidence, both use the same character.\n      }\n\n      function _writeExpression (expr, indent, parentPrecedence) {\n        function _writeExpressionActions (semActs) {\n          if (semActs) {\n\n            semActs.forEach(function (act) {\n              _ShExWriter._expect(act, \"type\", \"SemAct\");\n              pieces.push(\"\\n\"+indent+\"   %\");\n              pieces.push(_ShExWriter._encodeValue(act.name));\n              if (\"code\" in act)\n                pieces.push(\"{\"+escapeCode(act.code)+\"%\"+\"}\");\n              else\n                pieces.push(\"%\");\n            });\n          }\n        }\n\n        function _exprGroup (exprs, separator, precedence, forceParens) {\n          var needsParens = precedence < parentPrecedence || forceParens;\n          if (needsParens) {\n            pieces.push(\"(\");\n          }\n          exprs.forEach(function (nested, ord) {\n            _writeExpression(nested, indent+\"  \", precedence)\n            if (ord < exprs.length - 1)\n              pieces.push(separator);\n          });\n          if (needsParens) {\n            pieces.push(\")\");\n          }\n        }\n\n        if (typeof expr === \"string\") {\n          pieces.push(\"&\");\n          pieces.push(_ShExWriter._encodeShapeName(expr, false));\n        } else {\n\n        if (\"id\" in expr) {\n          pieces.push(\"$\");\n          pieces.push(_ShExWriter._encodeIriOrBlankNode(expr.id, true));\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          if (expr.inverse)\n            pieces.push(\"^\");\n          if (expr.negated)\n            pieces.push(\"!\");\n          pieces.push(indent,\n                      _ShExWriter._encodePredicate(expr.predicate),\n                      \" \");\n\n          if (\"valueExpr\" in expr)\n            pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr.valueExpr, done, true, 0));\n          else\n            pieces.push(\". \");\n\n          _writeCardinality(expr.min, expr.max);\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \"\\n\"+indent+\"| \", 1, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \";\\n\"+indent, 2, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else throw Error(\"unexpected expr type: \" + expr.type);\n        }\n      }\n\n      if (shape.expression) // t: 0, 0Inherit1\n        _writeExpression(shape.expression, \"  \", 0);\n      pieces.push(\"\\n}\");\n      _writeShapeActions(shape.semActs);\n      _ShExWriter._annotations(pieces, shape.annotations, \"  \");\n\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeNodeConstraint: function (v, done) {\n    var _ShExWriter = this;\n    try {\n      _ShExWriter._expect(v, \"type\", \"NodeConstraint\");\n\n      var pieces = [];\n      if (v.nodeKind in nodeKinds)       pieces.push(nodeKinds[v.nodeKind], \" \");\n      else if (v.nodeKind !== undefined) _ShExWriter._error(\"unexpected nodeKind: \" + v.nodeKind); // !!!!\n\n      this._fillNodeConstraint(pieces, v, done);\n      this._annotations(pieces, v.annotations, \"  \");\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n\n  },\n\n  _annotations: function (pieces, annotations, indent) {\n    var _ShExWriter = this;\n    if (annotations) {\n      annotations.forEach(function (a) {\n        _ShExWriter._expect(a, \"type\", \"Annotation\");\n        pieces.push(\"//\\n\"+indent+\"   \");\n        pieces.push(_ShExWriter._encodeValue(a.predicate));\n        pieces.push(\" \");\n        pieces.push(_ShExWriter._encodeValue(a.object));\n      });\n    }\n  },\n\n  _fillNodeConstraint: function (pieces, v, done) {\n    var _ShExWriter = this;\n    if (v.datatype  && v.values  ) _ShExWriter._error(\"found both datatype and values in \"   +expr);\n    if (v.datatype) {\n      pieces.push(_ShExWriter._encodeShapeName(v.datatype));\n    }\n\n    if (v.values) {\n      pieces.push(\"[\");\n\n      v.values.forEach(function (t, ord) {\n        if (ord > 0)\n          pieces.push(\" \");\n\n        if (!isTerm(t)) {\n//          expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                runtimeError(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\");\n          var stemRangeTypes = [\"Language\", \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                runtimeError(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n          if (t.type === \"Language\") {\n            pieces.push(\"@\" + t.languageTag);\n          } else if (!isTerm(t.stem)) {\n            expect(t.stem, \"type\", \"Wildcard\");\n            pieces.push(\".\");\n          } else {\n            pieces.push(langOrLiteral(t, t.stem) + \"~\");\n          }\n          if (t.exclusions) {\n            t.exclusions.forEach(function (c) {\n              pieces.push(\" - \");\n              if (!isTerm(c)) {\n//                expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                pieces.push(langOrLiteral(t, c.stem) + \"~\");\n              } else {\n                pieces.push(langOrLiteral(t, c));\n              }\n            });\n          }\n          function langOrLiteral (t, c) {\n            return [\"LanguageStem\", \"LanguageStemRange\"].indexOf(t.type) !== -1 ? \"@\" + c :\n              [\"LiteralStem\", \"LiteralStemRange\"].indexOf(t.type) !== -1 ? '\"' + c.replace(ESCAPE_g, c) + '\"' :\n              _ShExWriter._encodeValue(c)\n          }\n        } else {\n          pieces.push(_ShExWriter._encodeValue(t));\n        }\n      });\n\n      pieces.push(\"]\");\n    }\n\n    if ('pattern' in v) {\n      var pattern = v.pattern.\n          replace(/\\//g, \"\\\\/\");\n      // if (ESCAPE_1.test(pattern))\n      //   pattern = pattern.replace(ESCAPE_g, characterReplacer);\n      var flags = 'flags' in v ? v.flags : \"\";\n      pieces.push(\"/\" + pattern + \"/\" + flags + \" \");\n    }\n    ['length', 'minlength', 'maxlength',\n     'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive',\n     'totaldigits', 'fractiondigits'\n    ].forEach(function (a) {\n      if (v[a])\n        pieces.push(\" \", a, \" \", v[a]);\n    });\n    return pieces;\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri, trailingSpace) {\n    trailingSpace = trailingSpace ? ' ' : '';\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (ESCAPE_1.test(iri))\n      iri = iri.replace(ESCAPE_g, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]) + trailingSpace;\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (ESCAPE_1.test(value))\n      value = value.replace(ESCAPE_g, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeShapeName` represents a subject\n  _encodeShapeName: function (subject, trailingSpace) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject, trailingSpace);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeValue` represents an object\n  _encodeValue: function (object) {\n    // Represent an IRI or blank node\n    if (typeof object !== \"object\")\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    return this._encodeLiteral(object.value, object.type, object.language);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  writeSchema: function (shape, done) {\n    this._writeSchema(shape, done);\n    this.end(done);\n  },\n\n  // ### `addShape` adds the shape to the output stream\n  addShape: function (shape, name, done) {\n    this._write(\n      _ShExWriter._encodeShapeName(name, false) +\n        \" \" +\n        _ShExWriter._writeShapeExpr(shape, done, true, 0).join(\"\"),\n      done\n    );\n  },\n\n  // ### `addShapes` adds the shapes to the output stream\n  addShapes: function (shapes) {\n    for (var i = 0; i < shapes.length; i++)\n      this.addShape(shapes[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (// @@ /[#\\/]$/.test(iri) && !! what was that?\n          prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Write prefix\n        this._write('PREFIX ' + prefix + ' <' + iri + '>\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = ESCAPE_replacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeCode (code) {\n  return code.replace(/\\\\/g, \"\\\\\\\\\").replace(/%/g, \"\\\\%\")\n}\n\n/** _throwError: overridable function to throw Errors().\n *\n * @param func (optional): function at which to truncate stack trace\n * @param str: error message\n */\nfunction _throwError (func, str) {\n  if (typeof func !== \"function\") {\n    str = func;\n    func = _throwError;\n  }\n  var e = new Error(str);\n  Error.captureStackTrace(e, func);\n  throw e;\n}\n\n// Expect property p with value v in object o\nfunction expect (o, p, v) {\n  if (!(p in o))\n    this._error(expect, \"expected \"+o+\" to have a .\"+p);\n  if (arguments.length > 2 && o[p] !== v)\n    this._error(expect, \"expected \"+o[o]+\" to equal .\"+v);\n}\n\n// The empty function\nfunction noop () {}\n\nreturn ShExWriter;\n})();\n\n// Export the `ShExWriter` class as a whole.\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWriter; // node environment\n"
        },
        {
          "id": 22,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/threaded-val-nerr.js",
          "name": "../shex-core/lib/regex/threaded-val-nerr.js",
          "index": 18,
          "index2": 15,
          "size": 15290,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/regex/threaded-val-nerr",
              "loc": "7:23-63"
            },
            {
              "moduleId": 45,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
              "module": "../shex-core/lib/ShExValidator.js",
              "moduleName": "../shex-core/lib/ShExValidator.js",
              "type": "cjs require",
              "userRequest": "../lib/regex/threaded-val-nerr",
              "loc": "245:48-89"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var ThreadedValNErr = (function () {\nvar RdfTerm = require(\"../RdfTerm\");\nvar UNBOUNDED = -1;\n\nfunction vpEngine (schema, shape, index) {\n    var outerExpression = shape.expression;\n    return {\n      match:match\n    };\n\n    function match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, recurse, direct, semActHandler, checkValueExpr, trace) {\n\n      /*\n       * returns: list of passing or failing threads (no heterogeneous lists)\n       */\n      function validateExpr (expr, thread) {\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return validateExpr(included, thread);\n        }\n\n        var constraintNo = constraintList.indexOf(expr);\n        var min = \"min\" in expr ? expr.min : 1;\n        var max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n\n        function validateRept (type, val) {\n          var repeated = 0, errOut = false;\n          var newThreads = [thread];\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          for (; repeated < max && !errOut; ++repeated) {\n            var inner = [];\n            for (var t = 0; t < newThreads.length; ++t) {\n              var newt = newThreads[t];\n              var sub = val(newt);\n              if (sub.length > 0 && sub[0].errors.length === 0) {\n                sub.forEach(newThread => {\n                  var solutions =\n                      \"expression\" in newt ? newt.expression.solutions : [];\n                  if (\"solution\" in newThread)\n                    solutions = solutions.concat(newThread.solution);\n                  delete newThread.solution;\n                  newThread.expression = extend({\n                    type: type,\n                    solutions: solutions\n                  }, minmax);\n                });\n              }\n              if (sub.length === 0 /* min:0 */ || sub[0].errors.length > 0)\n                return repeated < min ? sub : newThreads;\n              else\n                inner = inner.concat(sub);\n              // newThreads.expressions.push(sub);\n            }\n            newThreads = inner;\n          }\n          if (newThreads.length > 0 && newThreads[0].errors.length === 0 && \"semActs\" in expr) {\n            var passes = [];\n            var failures = [];\n            newThreads.forEach(newThread => {\n              const semActErrors = semActHandler.dispatchAll(expr.semActs, \"???\", newThread)\n              if (semActErrors.length === 0) {\n                passes.push(newThread)\n              } else {\n                [].push.apply(newThread.errors, semActErrors);\n                failures.push(newThread);\n              }\n            });\n            newThreads = passes.length > 0 ? passes : failures;\n          }\n          return newThreads;\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          var negated = \"negated\" in expr && expr.negated || max === 0;\n          if (negated)\n            min = max = Infinity;\n          if (thread.avail[constraintNo] === undefined)\n            thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].slice();\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          var taken = thread.avail[constraintNo].splice(0, min);\n          var passed = negated ? taken.length === 0 : taken.length >= min;\n          var ret = [];\n          var matched = thread.matched;\n          if (passed) {\n            do {\n              ret.push({\n                avail: thread.avail.map(a => { // copy parent thread's avail vector\n                  return a.slice();\n                }), // was: extend({}, thread.avail)\n                errors: thread.errors.slice(),\n                matched: matched.concat({\n                  tNos: taken.slice()\n                }),\n                expression: extend(\n                  {\n                    type: \"TripleConstraintSolutions\",\n                    predicate: expr.predicate,\n                    solutions: taken.map(tripleNo =>  {\n                      return { type: \"halfTestedTriple\", tripleNo: tripleNo, constraintNo: constraintNo };\n                    })\n                    // map(triple => {\n                    //   var t = neighborhood[triple];\n                    //   return {\n                    //     type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: t.object\n                    //   }\n                    // })\n                  },\n                  \"valueExpr\" in expr ? { valueExpr: expr.valueExpr } : {},\n                  \"productionLabel\" in expr ? { productionLabel: expr.productionLabel } : {},\n                  minmax)\n              });\n            } while ((function () {\n              if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                taken.push(thread.avail[constraintNo].shift());\n                return true;\n              } else {\n                return false;\n              }\n            })());\n          } else {\n            var valueExpr = null;\n            if (typeof expr.valueExpr === \"string\") { // ShapeRef\n              valueExpr = expr.valueExpr;\n              if (RdfTerm.isBlank(valueExpr))\n                valueExpr = index.shapeExprs[valueExpr];\n            } else if (expr.valueExpr) {\n              valueExpr = extend({}, expr.valueExpr)\n            }\n            ret.push({\n              avail: thread.avail,\n              errors: thread.errors.concat([\n                extend({\n                  type: negated ? \"NegatedProperty\" : \"MissingProperty\",\n                  property: expr.predicate\n                }, valueExpr ? { valueExpr: valueExpr } : {})\n              ]),\n              matched: matched\n            });\n          }\n\n          return ret;\n        }\n\n        else if (expr.type === \"OneOf\") {\n          return validateRept(\"OneOfSolutions\", (th) => {\n            var accept = null;\n            var matched = [];\n            var failed = [];\n            expr.expressions.forEach(nested => {\n              var thcopy = {\n                avail: th.avail.map(a => { return a.slice(); }),\n                errors: th.errors,\n                matched: th.matched//.slice() ever needed??\n              };\n              var sub = validateExpr(nested, thcopy);\n              if (sub[0].errors.length === 0) {\n                matched = matched.concat(sub);\n                sub.forEach(newThread => {\n                  var expressions =\n                      \"solution\" in thcopy ? thcopy.solution.expressions : [];\n                  if (\"expression\" in newThread) // undefined for no matches on min card:0\n                    expressions = expressions.concat([newThread.expression]);\n                  delete newThread.expression;\n                  newThread.solution = {\n                    type: \"OneOfSolution\",\n                    expressions: expressions\n                  };\n                });\n              } else\n                failed = failed.concat(sub);\n            });\n            return matched.length > 0 ? matched : failed;\n          });\n        }\n\n        else if (expr.type === \"EachOf\") {\n          return validateRept(\"EachOfSolutions\", (th) => {\n            // Iterate through nested expressions, exprThreads starts as [th].\n            return expr.expressions.reduce((exprThreads, nested) => {\n              // Iterate through current thread list composing nextThreads.\n              // Consider e.g.\n              // <S1> { <p1> . | <p2> .; <p3> . } / { <x> <p2> 2; <p3> 3 } (should pass)\n              // <S1> { <p1> .; <p2> . }          / { <s1> <p1> 1 }        (should fail)\n              return exprThreads.reduce((nextThreads, exprThread) => {\n                var sub = validateExpr(nested, exprThread);\n                // Move newThread.expression into a hierarchical solution structure.\n                sub.forEach(newThread => {\n                  if (newThread.errors.length === 0) {\n                    var expressions =\n                        \"solution\" in exprThread ? exprThread.solution.expressions : [];\n                    if (\"expression\" in newThread) // undefined for no matches on min card:0\n                      expressions = expressions.concat([newThread.expression]);\n                    // console.warn(threadMatched(newThread), \" vs \", exprMatched(expressions));\n                    delete newThread.expression;\n                    newThread.solution = {\n                      type: \"EachOfSolution\",\n                      expressions: expressions // exprThread.expression + newThread.expression\n                    };\n                  }\n                });\n                return nextThreads.concat(sub);\n              }, []);\n            }, [th]);\n          });\n        }\n\n        runtimeError(\"unexpected expr type: \" + expr.type);\n      }\n\n      var startingThread = {\n        avail:[],   // triples remaining by constraint number\n        matched:[], // triples matched in this thread\n        errors:[]   // errors encounted\n      };\n      if (!outerExpression)\n        return { }; // vapid match if no expression\n      var ret = validateExpr(outerExpression, startingThread);\n      // console.log(JSON.stringify(ret));\n      // note: don't return if ret.length === 1 because it might fail the unmatchedTriples test.\n      var longerChosen =\n          ret.reduce((ret, elt) => {\n            if (elt.errors.length > 0)\n              return ret;              // early return\n            var unmatchedTriples = {};\n            // Collect triples assigned to some constraint.\n            Object.keys(tripleToConstraintMapping).forEach(k => {\n              if (tripleToConstraintMapping[k] !== undefined)\n                unmatchedTriples[k] = tripleToConstraintMapping[k];\n            });\n            // Removed triples matched in this thread.\n            elt.matched.forEach(m => {\n              m.tNos.forEach(t => {\n                delete unmatchedTriples[t];\n              });\n            });\n            // Remaining triples are unaccounted for.\n            Object.keys(unmatchedTriples).forEach(t => {\n              elt.errors.push({\n                type: \"ExcessTripleViolation\",\n                triple: neighborhood[t],\n                constraint: constraintList[unmatchedTriples[t]]\n              });\n            });\n            return ret !== null ? ret : // keep first solution\n            // Accept thread with no unmatched triples.\n            Object.keys(unmatchedTriples).length > 0 ? null : elt;\n          }, null);\n      return longerChosen !== null ?\n        finish(longerChosen.expression, constraintList,\n               neighborhood, recurse, direct, semActHandler, checkValueExpr) :\n        ret.length > 1 ? {\n          type: \"PossibleErrors\",\n          errors: ret.reduce((all, e) => {\n            return all.concat([e.errors]);\n          }, [])\n        } : ret[0];\n    }\n\n    function finish (fromValidatePoint, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr) {\n      function _dive (solns) {\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n        if (solns.type === \"OneOfSolutions\" ||\n            solns.type === \"EachOfSolutions\") {\n          solns.solutions.forEach(s => {\n            s.expressions.forEach(e => {\n              _dive(e);\n            });\n          });\n        } else if (solns.type === \"TripleConstraintSolutions\") {\n          solns.solutions = solns.solutions.map(x => {\n            if (x.type === \"TestedTriple\") // already done\n              return x; // c.f. validation/3circularRef1_pass-open\n            var t = neighborhood[x.tripleNo];\n            var expr = constraintList[x.constraintNo];\n            var ret = {\n              type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)\n            };\n            function diver (focus, shapeLabel, dive) {\n              var sub = dive(focus, shapeLabel);\n              if (\"errors\" in sub) {\n                // console.dir(sub);\n                var err = {\n                  type: \"ReferenceError\", focus: focus,\n                  shape: shapeLabel\n                };\n                if (typeof shapeLabel === \"string\" && RdfTerm.isBlank(shapeLabel))\n                  err.referencedShape = shape;\n                err.errors = sub;\n                return [err];\n              }\n              if ((\"solution\" in sub || \"solutions\" in sub)&& Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                  sub.type === \"Recursion\")\n                ret.referenced = sub; // !!! needs to aggregate errors and solutions\n              return [];\n            }\n            function diveRecurse (focus, shapeLabel) {\n              return diver(focus, shapeLabel, recurse);\n            }\n            function diveDirect (focus, shapeLabel) {\n              return diver(focus, shapeLabel, direct);\n            }\n            var subErrors = \"valueExpr\" in expr ?\n                checkValueExpr(expr.inverse ? t.subject : t.object, expr.valueExpr, diveRecurse, diveDirect) :\n                [];\n            if (subErrors.length === 0 && \"semActs\" in expr)\n              [].push.apply(subErrors, semActHandler.dispatchAll(expr.semActs, t, ret))\n            if (subErrors.length > 0) {\n              fromValidatePoint.errors = fromValidatePoint.errors || [];\n              fromValidatePoint.errors = fromValidatePoint.errors.concat(subErrors);\n            }\n            return ret;\n          });\n        } else {\n          throw Error(\"unexpected expr type in \" + JSON.stringify(solns));\n        }\n      }\n      if (Object.keys(fromValidatePoint).length > 0) // guard against {}\n        _dive(fromValidatePoint);\n      if (\"semActs\" in shape)\n        fromValidatePoint.semActs = shape.semActs;\n      return fromValidatePoint;\n    }\n  }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\nreturn {\n  name: \"threaded-val-nerr\",\n  description: \"emulation of regular expression engine with error permutations\",\n  compile: vpEngine\n};\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ThreadedValNErr;\n"
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "index": 21,
          "index2": 20,
          "size": 2803,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "5:12-37"
            },
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "@shexjs/parser",
              "loc": "7:19-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "var ShExParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShExJison = require('./lib/ShExJison').Parser; // node environment\n} else {\n  ShExJison = ShExJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, prefixes, schemaOptions) {\n  schemaOptions = schemaOptions || {};\n  // Create a copy of the prefixes\n  var prefixesCopy = {};\n  for (var prefix in prefixes || {})\n    prefixesCopy[prefix] = prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShExJison();\n\n  function runParser () {\n    // ShExJison.base = baseIRI || \"\";\n    // ShExJison.basePath = ShExJison.base.replace(/[^\\/]*$/, '');\n    // ShExJison.baseRoot = ShExJison.base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    ShExJison._prefixes = Object.create(prefixesCopy);\n    ShExJison._imports = [];\n    ShExJison._setBase(baseIRI);\n    ShExJison._setFileName(baseIRI);\n    ShExJison.options = schemaOptions;\n    let errors = [];\n    ShExJison.recoverable = e =>\n      errors.push(e);\n    let ret = null;\n    try {\n      ret = ShExJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      errors.push(e);\n    }\n    ShExJison.reset();\n    errors.forEach(e => {\n      if (\"hash\" in e) {\n        const hash = e.hash;\n        const location = hash.loc;\n        delete hash.loc;\n        Object.assign(e, hash, {location: location});\n      }\n      return e;\n    })\n    if (errors.length == 1) {\n      errors[0].parsed = ret;\n      throw errors[0];\n    } else if (errors.length) {\n      const all = new Error(\"\" + errors.length  + \" parser errors:\\n\" + errors.map(\n        e => contextError(e, parser.yy.lexer)\n      ).join(\"\\n\"));\n      all.errors = errors;\n      all.parsed = ret;\n      throw all;\n    } else {\n      return ret;\n    }\n  }\n  parser.parse = runParser;\n  parser._setBase = function (base) {\n    ShExJison._setBase;\n    baseIRI = base;\n  }\n  parser._setFileName = ShExJison._setFileName;\n  parser._setOptions = function (opts) { ShExJison.options = opts; };\n  parser._resetBlanks = ShExJison._resetBlanks;\n  parser.reset = ShExJison.reset;\n  ShExJison.options = schemaOptions;\n  return parser;\n\n  function contextError (e, lexer) {\n    // use the lexer's pretty-printing\n    var line = e.location.first_line;\n    var col  = e.location.first_column + 1;\n    var posStr = \"pos\" in e.hash ? \"\\n\" + e.hash.pos : \"\"\n    return `${baseIRI}\\n line: ${line}, column: ${col}: ${e.message}${posStr}`;\n  }\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExParser;\n"
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "index": 23,
          "index2": 38,
          "size": 19433,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 47,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require",
              "userRequest": "glob",
              "loc": "308:20-35"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./glob.js",
              "loc": "8:11-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"
        },
        {
          "id": 25,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "index": 24,
          "index2": 22,
          "size": 1308,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "44:9-31"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "fs.realpath",
              "loc": "5:9-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n"
        },
        {
          "id": 26,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "index": 32,
          "index2": 31,
          "size": 15995,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "50:13-30"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "assert",
              "loc": "11:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"
        },
        {
          "id": 27,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "index": 37,
          "index2": 33,
          "size": 6167,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "53:13-35"
            },
            {
              "moduleId": 55,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
              "type": "cjs require",
              "userRequest": "./common.js",
              "loc": "13:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"
        },
        {
          "id": 28,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
          "index": 39,
          "index2": 35,
          "size": 905,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerId": 56,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 56,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 31,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 29,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "wrappy",
              "loc": "1:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"
        },
        {
          "id": 29,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "index": 40,
          "index2": 36,
          "size": 935,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "63:11-26"
            },
            {
              "moduleId": 56,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
              "type": "cjs require",
              "userRequest": "once",
              "loc": "3:11-26"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n"
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "index": 56,
          "index2": 68,
          "size": 35972,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "./_stream_readable",
              "loc": "42:15-44"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_readable.js",
              "loc": "1:27-63"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}"
        },
        {
          "id": 31,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "index": 57,
          "index2": 52,
          "size": 49,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/stream",
              "loc": "42:13-49"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/stream",
              "loc": "66:13-49"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = require('events').EventEmitter;\n"
        },
        {
          "id": 32,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/destroy.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
          "index": 61,
          "index2": 56,
          "size": 3117,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/destroy",
              "loc": "74:18-55"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/destroy",
              "loc": "82:18-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};"
        },
        {
          "id": 33,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/state.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/state.js",
          "index": 62,
          "index2": 58,
          "size": 749,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/state",
              "loc": "76:15-50"
            },
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/state",
              "loc": "84:15-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};"
        },
        {
          "id": 34,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "name": "./node_modules/readable-stream/lib/_stream_writable.js",
          "index": 66,
          "index2": 61,
          "size": 21821,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
              "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
              "type": "cjs require",
              "userRequest": "./_stream_writable",
              "loc": "44:15-44"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_writable.js",
              "loc": "4:19-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};"
        },
        {
          "id": 35,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
          "name": "./node_modules/string_decoder/lib/string_decoder.js",
          "index": 68,
          "index2": 64,
          "size": 9465,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "string_decoder/",
              "loc": "163:40-66"
            },
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "string_decoder/",
              "loc": "325:38-64"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}"
        },
        {
          "id": 36,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
          "name": "./node_modules/readable-stream/lib/_stream_transform.js",
          "index": 73,
          "index2": 69,
          "size": 7947,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_transform.js",
              "loc": "6:20-57"
            },
            {
              "moduleId": 68,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
              "module": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_passthrough.js",
              "type": "cjs require",
              "userRequest": "./_stream_transform",
              "loc": "28:16-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}"
        },
        {
          "id": 37,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/queue-microtask/index.js",
          "name": "./node_modules/queue-microtask/index.js",
          "index": 48,
          "index2": 45,
          "size": 348,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "issuerId": 12,
          "issuerName": "./node_modules/n3/src/N3Lexer.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            }
          ],
          "profile": {
            "factory": 336,
            "building": 33
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony side effect evaluation",
              "userRequest": "queue-microtask",
              "loc": "3:0-45"
            },
            {
              "moduleId": 12,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "module": "./node_modules/n3/src/N3Lexer.js",
              "moduleName": "./node_modules/n3/src/N3Lexer.js",
              "type": "harmony import specifier",
              "userRequest": "queue-microtask",
              "loc": "443:8-22"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n"
        },
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "index": 0,
          "index2": 77,
          "size": 383,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "profile": {
            "factory": 16,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp-webpack"
            },
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./shex-webapp.js",
              "loc": "shex-webapp-webpack.min"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0,
          "source": "ShExWebApp = (function () {\n  let shapeMap = require(\"shape-map\")\n  return Object.assign(require(\"@shexjs/core\"), {\n    Api: require(\"@shexjs/api\"),\n    Parser: require(\"@shexjs/parser\"),\n    ShapeMap: shapeMap,\n    ShapeMapParser: shapeMap.Parser,\n    N3: require(\"n3\")\n  })\n})()\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWebApp;\n"
        },
        {
          "id": 39,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "index": 1,
          "index2": 7,
          "size": 560,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "shape-map",
              "loc": "2:17-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * See README for description.\n */\n\nvar ShapeMap = (function () {\n  const symbols = require(\"./lib/ShapeMapSymbols\")\n\n  // Write the parser object directly into the symbols so the caller shares a\n  // symbol space with ShapeMapJison for e.g. start and focus.\n  symbols.Parser = require(\"./lib/ShapeMapParser\")\n  return symbols\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMap;\n"
        },
        {
          "id": 40,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "name": "../shape-map/lib/ShapeMapParser.js",
          "index": 3,
          "index2": 6,
          "size": 2190,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "issuerId": 39,
          "issuerName": "../shape-map/shape-map.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 39,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 120,
            "building": 142
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 39,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "module": "../shape-map/shape-map.js",
              "moduleName": "../shape-map/shape-map.js",
              "type": "cjs require",
              "userRequest": "./lib/ShapeMapParser",
              "loc": "11:19-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var ShapeMapParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShapeMapJison = require('./ShapeMapJison').Parser; // node environment\n} else {\n  ShapeMapJison = ShapeMapJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, schemaMeta, dataMeta) {\n  // Create a copy of the prefixes\n  var schemaBase = schemaMeta.base;\n  var schemaPrefixesCopy = {};\n  for (var prefix in schemaMeta.prefixes || {})\n    schemaPrefixesCopy[prefix] = schemaMeta.prefixes[prefix];\n  var dataBase = dataMeta.base;\n  var dataPrefixesCopy = {};\n  for (var prefix in dataMeta.prefixes || {})\n    dataPrefixesCopy[prefix] = dataMeta.prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShapeMapJison();\n\n  function runParser () {\n    ShapeMapJison._schemaPrefixes = Object.create(schemaPrefixesCopy);\n    ShapeMapJison._setSchemaBase(schemaBase);\n    ShapeMapJison._dataPrefixes = Object.create(dataPrefixesCopy);\n    ShapeMapJison._setDataBase(dataBase);\n    ShapeMapJison._setFileName(baseIRI);\n    try {\n      return ShapeMapJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      // use the lexer's pretty-printing\n      var lineNo = \"lexer\" in parser.yy ? parser.yy.lexer.yylineno + 1 : 1;\n      var pos = \"lexer\" in parser.yy ? parser.yy.lexer.showPosition() : \"\";\n      var t = Error(`${baseIRI}(${lineNo}): ${e.message}\\n${pos}`);\n      Error.captureStackTrace(t, runParser);\n      parser.reset();\n      throw t;\n    }\n  }\n  parser.parse = runParser;\n  parser._setSchemaBase = function (base) {\n    ShapeMapJison._setSchemaBase;\n    schemaBase = base;\n  }\n  parser._setDataBase = function (base) {\n    ShapeMapJison._setDataBase;\n    dataBase = base;\n  }\n  parser._setFileName = ShapeMapJison._setFileName;\n  parser.reset = ShapeMapJison.reset;\n  return parser;\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShapeMapParser;\n"
        },
        {
          "id": 41,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "name": "../shape-map/lib/ShapeMapJison.js",
          "index": 4,
          "index2": 5,
          "size": 52142,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "issuerId": 40,
          "issuerName": "../shape-map/lib/ShapeMapParser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 39,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
              "name": "../shape-map/shape-map.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 40,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "name": "../shape-map/lib/ShapeMapParser.js",
              "profile": {
                "factory": 120,
                "building": 142
              }
            }
          ],
          "profile": {
            "factory": 115,
            "building": 34,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 40,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
              "module": "../shape-map/lib/ShapeMapParser.js",
              "moduleName": "../shape-map/lib/ShapeMapParser.js",
              "type": "cjs require",
              "userRequest": "./ShapeMapJison",
              "loc": "5:18-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/* parser generated by jison 0.4.16 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShapeMapJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,16],$V2=[1,11],$V3=[1,14],$V4=[1,25],$V5=[1,24],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,28],$Va=[1,26],$Vb=[1,27],$Vc=[1,29],$Vd=[1,12],$Ve=[1,13],$Vf=[1,15],$Vg=[4,9],$Vh=[16,19,20,21],$Vi=[2,25],$Vj=[16,19,20,21,37],$Vk=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],$Vl=[4,9,16,19,20,21,37,43,74,75],$Vm=[4,9,43],$Vn=[29,46,80,81,82],$Vo=[4,9,42,43],$Vp=[1,59],$Vq=[46,79,80,81,82],$Vr=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],$Vs=[1,94],$Vt=[1,85],$Vu=[1,86],$Vv=[1,87],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,93],$VA=[1,95],$VB=[33,48,49,50,53,54,55,56,63],$VC=[4,9,37,65],$VD=[1,99],$VE=[9,37],$VF=[9,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shapeMap\":3,\"EOF\":4,\"pair\":5,\"Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star\":6,\"QGT_COMMA_E_Opt\":7,\"O_QGT_COMMA_E_S_Qpair_E_C\":8,\"GT_COMMA\":9,\"nodeSelector\":10,\"statusAndShape\":11,\"Qreason_E_Opt\":12,\"QjsonAttributes_E_Opt\":13,\"reason\":14,\"jsonAttributes\":15,\"GT_AT\":16,\"Qstatus_E_Opt\":17,\"shapeSelector\":18,\"ATSTART\":19,\"ATPNAME_NS\":20,\"ATPNAME_LN\":21,\"status\":22,\"objectTerm\":23,\"triplePattern\":24,\"IT_SPARQL\":25,\"string\":26,\"nodeIri\":27,\"shapeIri\":28,\"START\":29,\"subjectTerm\":30,\"BLANK_NODE_LABEL\":31,\"literal\":32,\"GT_LCURLEY\":33,\"IT_FOCUS\":34,\"nodePredicate\":35,\"O_QobjectTerm_E_Or_QIT___E_C\":36,\"GT_RCURLEY\":37,\"O_QsubjectTerm_E_Or_QIT___E_C\":38,\"IT__\":39,\"GT_NOT\":40,\"GT_OPT\":41,\"GT_DIVIDE\":42,\"GT_DOLLAR\":43,\"O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C\":44,\"jsonValue\":45,\"APPINFO_COLON\":46,\"APPINFO_SPACE_COLON\":47,\"IT_false\":48,\"IT_null\":49,\"IT_true\":50,\"jsonObject\":51,\"jsonArray\":52,\"INTEGER\":53,\"DECIMAL\":54,\"DOUBLE\":55,\"STRING_LITERAL2\":56,\"Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt\":57,\"O_QGT_COMMA_E_S_QjsonMember_E_C\":58,\"jsonMember\":59,\"Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star\":60,\"O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C\":61,\"STRING_LITERAL2_COLON\":62,\"GT_LBRACKET\":63,\"Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt\":64,\"GT_RBRACKET\":65,\"O_QGT_COMMA_E_S_QjsonValue_E_C\":66,\"Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star\":67,\"O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C\":68,\"rdfLiteral\":69,\"numericLiteral\":70,\"booleanLiteral\":71,\"Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt\":72,\"O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C\":73,\"LANGTAG\":74,\"GT_DTYPE\":75,\"STRING_LITERAL1\":76,\"STRING_LITERAL_LONG1\":77,\"STRING_LITERAL_LONG2\":78,\"IT_a\":79,\"IRIREF\":80,\"PNAME_LN\":81,\"PNAME_NS\":82,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",9:\"GT_COMMA\",16:\"GT_AT\",19:\"ATSTART\",20:\"ATPNAME_NS\",21:\"ATPNAME_LN\",25:\"IT_SPARQL\",29:\"START\",31:\"BLANK_NODE_LABEL\",33:\"GT_LCURLEY\",34:\"IT_FOCUS\",37:\"GT_RCURLEY\",39:\"IT__\",40:\"GT_NOT\",41:\"GT_OPT\",42:\"GT_DIVIDE\",43:\"GT_DOLLAR\",46:\"APPINFO_COLON\",47:\"APPINFO_SPACE_COLON\",48:\"IT_false\",49:\"IT_null\",50:\"IT_true\",53:\"INTEGER\",54:\"DECIMAL\",55:\"DOUBLE\",56:\"STRING_LITERAL2\",62:\"STRING_LITERAL2_COLON\",63:\"GT_LBRACKET\",65:\"GT_RBRACKET\",74:\"LANGTAG\",75:\"GT_DTYPE\",76:\"STRING_LITERAL1\",77:\"STRING_LITERAL_LONG1\",78:\"STRING_LITERAL_LONG2\",79:\"IT_a\",80:\"IRIREF\",81:\"PNAME_LN\",82:\"PNAME_NS\"},\nproductions_: [0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n          return []\n        \nbreak;\ncase 2:\n\n          return [$$[$0-3]].concat($$[$0-2])\n        \nbreak;\ncase 3: case 51: case 59:\nthis.$ = $$[$0];\nbreak;\ncase 4: case 60: case 63:\nthis.$ = [  ];\nbreak;\ncase 5: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 8:\nthis.$ = extend({ node: $$[$0-3] }, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 9: case 11: case 52: case 55: case 74:\nthis.$ = {  };\nbreak;\ncase 13:\nthis.$ = extend({ shape: $$[$0] }, $$[$0-1]);\nbreak;\ncase 14:\nthis.$ = { shape: ShapeMap.start };\nbreak;\ncase 15:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1)) };\n      \nbreak;\ncase 16:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + $$[$0].substr(namePos + 1) };\n      \nbreak;\ncase 17:\nthis.$ = { status: 'conformant' } // defaults to conformant;\nbreak;\ncase 18:\nthis.$ = { status: $$[$0] };\nbreak;\ncase 21:\nthis.$ = { type: \"Extension\", language: \"http://www.w3.org/ns/shex#Extensions-sparql\", lexical: $$[$0][\"@value\"] };\nbreak;\ncase 22:\nthis.$ = { type: \"Extension\", language: $$[$0-1], lexical: $$[$0][\"@value\"] };\nbreak;\ncase 24:\nthis.$ = ShapeMap.start;\nbreak;\ncase 29:\nthis.$ = { type: \"TriplePattern\", subject: ShapeMap.focus, predicate: $$[$0-2], object: $$[$0-1] };\nbreak;\ncase 30:\nthis.$ = { type: \"TriplePattern\", subject: $$[$0-3], predicate: $$[$0-2], object: ShapeMap.focus };\nbreak;\ncase 32: case 34: case 42:\nthis.$ = null;\nbreak;\ncase 35:\nthis.$ = 'nonconformant';\nbreak;\ncase 36:\nthis.$ = 'unknown';\nbreak;\ncase 37:\nthis.$ = { reason: $$[$0] };\nbreak;\ncase 38:\nthis.$ = { appinfo: $$[$0] };\nbreak;\ncase 41:\nthis.$ = false;\nbreak;\ncase 43:\nthis.$ = true;\nbreak;\ncase 46: case 47: case 48:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 49:\nthis.$ = unescapeString($$[$0], 1)[\"@value\"];\nbreak;\ncase 50: case 58:\nthis.$ = $$[$0-1];\nbreak;\ncase 53: case 54: case 71:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 57:\n\n        this.$ = {  };\n        var t = $$[$0-1].substr(0, $$[$0-1].length - 1).trim(); // remove trailing ':' and spaces\n        this.$[unescapeString(t, 1)[\"@value\"]] = $$[$0];\n      \nbreak;\ncase 62:\nthis.$ = [$$[$0-1]].concat($$[$0]);\nbreak;\ncase 68:\nthis.$ = createLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 69:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 70:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE);\nbreak;\ncase 72:\nthis.$ = obj(\"@language\", $$[$0].substr(1).toLowerCase());\nbreak;\ncase 73:\nthis.$ = obj(\"@type\", $$[$0]);\nbreak;\ncase 76:\nthis.$ = createLiteral(\"true\", XSD_BOOLEAN);\nbreak;\ncase 77:\nthis.$ = createLiteral(\"false\", XSD_BOOLEAN);\nbreak;\ncase 78: case 80:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 79: case 81:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 83:\nthis.$ = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nbreak;\ncase 84:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._dataBase === null || absoluteIRI.test(unesc) ? unesc : _resolveDataIRI(unesc)\n      \nbreak;\ncase 85: case 86: case 90:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 87:\n\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\ncase 88:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._schemaBase === null || absoluteIRI.test(unesc) ? unesc : _resolveSchemaIRI(unesc)\n      \nbreak;\ncase 89:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 91:\n\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},{1:[3]},{1:[2,1]},o($Vg,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},o($Vh,[2,19]),o($Vh,[2,20]),{26:36,56:$V9,76:$Va,77:$Vb,78:$Vc},o($Vh,$Vi,{26:37,56:$V9,76:$Va,77:$Vb,78:$Vc}),o($Vj,[2,27]),o($Vj,[2,28]),{27:42,30:40,31:$V1,34:[1,38],38:39,39:[1,41],46:$V3,80:$Vd,81:$Ve,82:$Vf},o($Vk,[2,84]),o($Vk,[2,85]),o($Vk,[2,86]),o($Vk,[2,87]),o([16,19,20,21,37,46,79,80,81,82],[2,26]),o($Vj,[2,65]),o($Vj,[2,66]),o($Vj,[2,67]),o($Vj,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),o($Vj,[2,68]),o($Vj,[2,69]),o($Vj,[2,70]),o($Vj,[2,76]),o($Vj,[2,77]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},o($Vm,[2,9],{12:50,14:51,42:[1,52]}),o($Vn,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),o($Vo,[2,14]),o($Vo,[2,15]),o($Vo,[2,16]),o($Vh,[2,21]),o($Vh,[2,22]),{27:58,35:57,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},{27:58,35:60,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},o($Vq,[2,33]),o($Vq,[2,34]),o([37,46,79,80,81,82],$Vi),o($Vj,[2,71]),o($Vj,[2,75]),o($Vj,[2,72]),{27:61,46:$V3,80:$Vd,81:$Ve,82:$Vf},{4:[1,62]},o($Vg,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vg,[2,11],{13:64,15:65,43:[1,66]}),o($Vm,[2,10]),{26:67,56:$V9,76:$Va,77:$Vb,78:$Vc},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},o($Vn,[2,18]),o($Vn,[2,35]),o($Vn,[2,36]),{23:76,26:20,27:42,30:9,31:$V1,32:10,36:75,39:[1,77],46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vr,[2,82]),o($Vr,[2,83]),{34:[1,78]},o($Vj,[2,73]),{1:[2,2]},o($Vg,[2,3]),o($Vg,[2,8]),o($Vg,[2,12]),{44:79,46:[1,80],47:[1,81]},o($Vm,[2,37]),o($Vo,[2,13]),o($Vo,[2,23]),o($Vo,[2,24]),o($Vo,[2,88]),o($Vo,[2,89]),o($Vo,[2,90]),o($Vo,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:$Vs,45:84,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VB,[2,39]),o($VB,[2,40]),o($Vh,[2,29]),o($Vh,[2,30]),o($Vg,[2,38]),o($VC,[2,41]),o($VC,[2,42]),o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),o($VC,[2,46]),o($VC,[2,47]),o($VC,[2,48]),o($VC,[2,49]),{37:[2,55],57:96,59:98,61:97,62:$VD},{33:$Vs,45:102,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},o($VE,[2,52],{60:104}),{33:$Vs,45:105,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},{65:[1,106]},{65:[2,64]},o($VF,[2,60],{67:107}),o($VC,[2,50]),{9:[1,109],37:[2,54],58:108},o($VE,[2,57]),o($VC,[2,58]),{9:[1,111],65:[2,62],66:110},o($VE,[2,53]),{59:112,62:$VD},o($VF,[2,61]),{33:$Vs,45:113,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VE,[2,51]),o($VF,[2,59])],\ndefaultActions: {2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = new Error();\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShapeMap parser in the Jison parser generator format.\n  */\n\n  var ShapeMap = require(\"./ShapeMapSymbols\");\n\n  // Common namespaces and entities\n  var XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setSchemaBase` sets the base IRI to resolve relative IRIs.\n  Parser._setSchemaBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._schemaBase = baseIRI) {\n      Parser._schemaBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._schemaBaseRoot   = baseIRI[0];\n      Parser._schemaBaseScheme = baseIRI[1];\n    }\n  }\n  Parser._setDataBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._dataBase = baseIRI) {\n      Parser._dataBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._dataBaseRoot   = baseIRI[0];\n      Parser._dataBaseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveSchemaIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveSchemaIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._schemaBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._schemaBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._schemaBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._schemaBaseScheme : Parser._schemaBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._schemaBasePath + iri);\n    }\n    }\n  }\n  function _resolveDataIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._dataBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._dataBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._dataBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._dataBaseScheme : Parser._dataBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._dataBasePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function obj() {\n    var ret = {  };\n    for (var i = 0; i < arguments.length; i+= 2) {\n      ret[arguments[i]] = arguments[i+1];\n    }\n    return ret;\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return obj(\"@value\", value, \"@type\", type );\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser.valueExprDefns = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._schemaBase = Parser._schemaBasePath = Parser._schemaBaseRoot = Parser._schemaBaseIRIScheme = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return obj(\"@value\", unescapeText(string, stringEscapeReplacements));\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, obj(\"@language\", lang.substr(1).toLowerCase()));\n  }\n\n  function error (msg) {\n    Parser.reset();\n    throw new Error(msg);\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefixes, prefix) {\n    if (!(prefix in prefixes))\n      error('Parse error; unknown prefix: ' + prefix);\n    return prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape) {\n    if (Parser.productions && label in Parser.productions)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.shapes)\n      Parser.shapes = {};\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.shapes[label] = shape;\n  }\n\n  // Add a production to the map\n  function addProduction (label, production) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.productions)\n      Parser.productions = {};\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function shapeJunction (type, container, elts) {\n    if (elts.length === 0) {\n      return container;\n    } else if (container.type === type) {\n      container.shapeExprs = container.shapeExprs.concat(elts);\n      return container;\n    } else {\n      return { type: type, shapeExprs: [container].concat(elts) };\n    }\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n\n  // <?INCLUDE from ShExUtil. Factor into `rdf-token` module? ?>\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  function unescapeText (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 47;\nbreak;\ncase 2:return 62;\nbreak;\ncase 3:return 34;\nbreak;\ncase 4:return 29;\nbreak;\ncase 5:return 19;\nbreak;\ncase 6:return 25;\nbreak;\ncase 7:return 21;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 74;\nbreak;\ncase 10:return 81;\nbreak;\ncase 11:return 46;\nbreak;\ncase 12:return 82;\nbreak;\ncase 13:return 55;\nbreak;\ncase 14:return 54;\nbreak;\ncase 15:return 53;\nbreak;\ncase 16:return 80;\nbreak;\ncase 17:return 31;\nbreak;\ncase 18:return 77;\nbreak;\ncase 19:return 78;\nbreak;\ncase 20:return 76;\nbreak;\ncase 21:return 56;\nbreak;\ncase 22:return 79;\nbreak;\ncase 23:return 9;\nbreak;\ncase 24:return 33;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 16;\nbreak;\ncase 27:return 40;\nbreak;\ncase 28:return 41;\nbreak;\ncase 29:return 42;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 75;\nbreak;\ncase 34:return 39;\nbreak;\ncase 35:return 50;\nbreak;\ncase 36:return 48;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 4;\nbreak;\ncase 39:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 40:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(appinfo[\\u0020\\u000A\\u0009]+:))/,/^(?:(\"([^\\u0022\\u005C\\u000A\\u000D]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"[\\u0020\\u000A\\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:a\\b)/,/^(?:,)/,/^(?:\\{)/,/^(?:\\})/,/^(?:@)/,/^(?:!)/,/^(?:\\?)/,/^(?:\\/)/,/^(?:\\$)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^\\^)/,/^(?:_\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShapeMapJison;\nexports.Parser = ShapeMapJison.Parser;\nexports.parse = function () { return ShapeMapJison.parse.apply(ShapeMapJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 42,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/node_modules/hierarchy-closure/hierarchy-closure.js",
          "name": "../shex-core/node_modules/hierarchy-closure/hierarchy-closure.js",
          "index": 12,
          "index2": 9,
          "size": 2546,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "issuerId": 20,
          "issuerName": "../shex-core/lib/ShExUtil.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 20,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "name": "../shex-core/lib/ShExUtil.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            }
          ],
          "profile": {
            "factory": 134,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 20,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
              "module": "../shex-core/lib/ShExUtil.js",
              "moduleName": "../shex-core/lib/ShExUtil.js",
              "type": "cjs require",
              "userRequest": "hierarchy-closure",
              "loc": "6:18-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var HierarchyClosure = (function () {\n  /** create a hierarchy object\n   * This object keeps track of direct children and parents as well as transitive children and parents.\n   */\n  function makeHierarchy () {\n    let roots = {}\n    let parents = {}\n    let children = {}\n    let holders = {}\n    return {\n      add: function (parent, child) {\n        if (// test if this is a novel entry.\n          (parent in children && children[parent].indexOf(child) !== -1)) {\n          return\n        }\n        let target = parent in holders\n          ? getNode(parent)\n          : (roots[parent] = getNode(parent)) // add new parents to roots.\n        let value = getNode(child)\n\n        target[child] = value\n        delete roots[child]\n\n        // // maintain hierarchy (direct and confusing)\n        // children[parent] = children[parent].concat(child, children[child])\n        // children[child].forEach(c => parents[c] = parents[c].concat(parent, parents[parent]))\n        // parents[child] = parents[child].concat(parent, parents[parent])\n        // parents[parent].forEach(p => children[p] = children[p].concat(child, children[child]))\n\n        // maintain hierarchy (generic and confusing)\n        updateClosure(children, parents, child, parent)\n        updateClosure(parents, children, parent, child)\n        function updateClosure (container, members, near, far) {\n          container[far] = container[far].filter(\n            e => /* e !== near && */ container[near].indexOf(e) === -1\n          ).concat(container[near].indexOf(near) === -1 ? [near] : [], container[near])\n          container[near].forEach(\n            n => (members[n] = members[n].filter(\n              e => e !== far && members[far].indexOf(e) === -1\n            ).concat(members[far].indexOf(far) === -1 ? [far] : [], members[far]))\n          )\n        }\n\n        function getNode (node) {\n          if (!(node in holders)) {\n            parents[node] = []\n            children[node] = []\n            holders[node] = {}\n          }\n          return holders[node]\n        }\n      },\n      roots: roots,\n      parents: parents,\n      children: children\n    }\n  }\n\n  function depthFirst (n, f, p) {\n    return Object.keys(n).reduce((ret, k) => {\n      return ret.concat(\n        depthFirst(n[k], f, k),\n        p ? f(k, p) : []) // outer invocation can have null parent\n    }, [])\n  }\n\n  return { create: makeHierarchy, depthFirst }\n})()\n\n/* istanbul ignore next */\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = HierarchyClosure\n}\n"
        },
        {
          "id": 43,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/support/isBufferBrowser.js",
          "name": "./node_modules/util/support/isBufferBrowser.js",
          "index": 15,
          "index2": 10,
          "size": 203,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 11,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 21,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "name": "../shex-core/lib/ShExWriter.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            },
            {
              "id": 11,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 61,
                "building": 19,
                "dependencies": 0
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "./support/isBuffer",
              "loc": "536:19-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"
        },
        {
          "id": 44,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/node_modules/inherits/inherits_browser.js",
          "name": "./node_modules/util/node_modules/inherits/inherits_browser.js",
          "index": 16,
          "index2": 11,
          "size": 672,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "issuerId": 11,
          "issuerName": "./node_modules/util/util.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 21,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
              "name": "../shex-core/lib/ShExWriter.js",
              "profile": {
                "factory": 97,
                "building": 215,
                "dependencies": 42
              }
            },
            {
              "id": 11,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "name": "./node_modules/util/util.js",
              "profile": {
                "factory": 61,
                "building": 19,
                "dependencies": 0
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
              "module": "./node_modules/util/util.js",
              "moduleName": "./node_modules/util/util.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "580:19-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"
        },
        {
          "id": 45,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
          "name": "../shex-core/lib/ShExValidator.js",
          "index": 17,
          "index2": 16,
          "size": 47933,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExValidator",
              "loc": "4:16-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* ShExValidator - javascript module to validate a graph with respect to Shape Expressions\n *\n * Status: 1/2 tested, no known bugs.\n *\n * TODO:\n *   constraint violation reporting.\n */\n\nvar ShExValidator = (function () {\nvar UNBOUNDED = -1;\n\n// interface constants\nvar Start = { term: \"START\" }\nvar InterfaceOptions = {\n  \"or\": {\n    \"oneOf\": \"exactly one disjunct must pass\",\n    \"someOf\": \"one or more disjuncts must pass\",\n    \"firstOf\": \"disjunct evaluation stops after one passes\"\n  },\n  \"partition\": {\n    \"greedy\": \"each triple constraint consumes all triples matching predicate and object\",\n    \"exhaustive\": \"search all mappings of triples to triple constriant\"\n  }\n};\n\nvar VERBOSE = \"VERBOSE\" in process.env;\n// **ShExValidator** provides ShEx utility functions\n\nvar ProgramFlowError = { type: \"ProgramFlowError\", errors: { type: \"UntrackedError\" } };\n\nvar RdfTerm = require(\"./RdfTerm\");\nlet ShExUtil = require(\"./ShExUtil\");\n\nfunction getLexicalValue (term) {\n  return RdfTerm.isIRI(term) ? term :\n    RdfTerm.isLiteral(term) ? RdfTerm.getLiteralValue(term) :\n    term.substr(2); // bnodes start with \"_:\"\n}\n\n\nvar XSD = \"http://www.w3.org/2001/XMLSchema#\";\nvar integerDatatypes = [\n  XSD + \"integer\",\n  XSD + \"nonPositiveInteger\",\n  XSD + \"negativeInteger\",\n  XSD + \"long\",\n  XSD + \"int\",\n  XSD + \"short\",\n  XSD + \"byte\",\n  XSD + \"nonNegativeInteger\",\n  XSD + \"unsignedLong\",\n  XSD + \"unsignedInt\",\n  XSD + \"unsignedShort\",\n  XSD + \"unsignedByte\",\n  XSD + \"positiveInteger\"\n];\n\nvar decimalDatatypes = [\n  XSD + \"decimal\",\n].concat(integerDatatypes);\n\nvar numericDatatypes = [\n  XSD + \"float\",\n  XSD + \"double\"\n].concat(decimalDatatypes);\n\nvar numericParsers = {};\nnumericParsers[XSD + \"integer\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?[0-9]+$/))) {\n    parseError(\"illegal integer value '\" + label + \"'\");\n  }\n  return parseInt(label);\n};\nnumericParsers[XSD + \"decimal\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?(?:[0-9]*\\.[0-9]+|[0-9]+)$/))) { // XSD has no pattern for decimal?\n    parseError(\"illegal decimal value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nconst DECIMAL_REGEX = /^[+\\-]?(?:[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+)(?:[eE][+\\-]?[0-9]+)?$/;\nnumericParsers[XSD + \"float\"  ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) { // XSD has no pattern for float?\n    parseError(\"illegal float value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nnumericParsers[XSD + \"double\" ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) {\n    parseError(\"illegal double value '\" + label + \"'\");\n  }\n  return Number(label);\n};\n\ntestRange = function (value, datatype, parseError) {\n  const ranges = {\n    //    integer            -1 0 1 +1 | \"\" -1.0 +1.0 1e0 NaN INF\n    //    decimal            -1 0 1 +1 -1.0 +1.0 | \"\" 1e0 NaN INF\n    //    float              -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    double             -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    nonPositiveInteger -1 0 +0 -0 | 1 +1 1a a1\n    //    negativeInteger    -1 | 0 +0 -0 1\n    //    long               -1 0 1 +1 |\n    //    int                -1 0 1 +1 |\n    //    short              -32768 0 32767 | -32769 32768\n    //    byte               -128 0 127 | \"\" -129 128\n    //    nonNegativeInteger 0 -0 +0 1 +1 | -1\n    //    unsignedLong       0 1 | -1\n    //    unsignedInt        0 1 | -1\n    //    unsignedShort      0 65535 | -1 65536\n    //    unsignedByte       0 255 | -1 256\n    //    positiveInteger    1 | -1 0\n    //    string             \"\" \"a\" \"0\"\n    //    boolean            true false 0 1 | \"\" TRUE FALSE tRuE fAlSe -1 2 10 01\n    //    dateTime           \"2012-01-02T12:34:56.78Z\" | \"\" \"2012-01-02T\" \"2012-01-02\"\n    integer:            { min: -Infinity           , max: Infinity },\n    decimal:            { min: -Infinity           , max: Infinity },\n    float:              { min: -Infinity           , max: Infinity },\n    double:             { min: -Infinity           , max: Infinity },\n    nonPositiveInteger: { min: -Infinity           , max: 0        },\n    negativeInteger:    { min: -Infinity           , max: -1       },\n    long:               { min: -9223372036854775808, max: 9223372036854775807 },\n    int:                { min: -2147483648         , max: 2147483647 },\n    short:              { min: -32768              , max: 32767    },\n    byte:               { min: -128                , max: 127      },\n    nonNegativeInteger: { min: 0                   , max: Infinity },\n    unsignedLong:       { min: 0                   , max: 18446744073709551615 },\n    unsignedInt:        { min: 0                   , max: 4294967295 },\n    unsignedShort:      { min: 0                   , max: 65535    },\n    unsignedByte:       { min: 0                   , max: 255      },\n    positiveInteger:    { min: 1                   , max: Infinity }\n  }\n  var parms = ranges[datatype.substr(XSD.length)];\n  if (!parms) throw Error(\"unexpected datatype: \" + datatype);\n  if (value < parms.min) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is less than the min:\", parms.min);\n  } else if (value > parms.max) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is greater than the max:\", parms.min);\n  }\n};\n\n/*\nfunction intSubType (spec, label, parseError) {\n  var ret = numericParsers[XSD + \"integer\"](label, parseError);\n  if (\"min\" in spec && ret < spec.min)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be < \" + spec.min);\n  if (\"max\" in spec && ret > spec.max)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be > \" + spec.max);\n  return ret;\n}\n[{type: \"nonPositiveInteger\", max: 0},\n {type: \"negativeInteger\", max: -1},\n {type: \"long\", min: -9223372036854775808, max: 9223372036854775807}, // beyond IEEE double\n {type: \"int\", min: -2147483648, max: 2147483647},\n {type: \"short\", min: -32768, max: 32767},\n {type: \"byte\", min: -128, max: 127},\n {type: \"nonNegativeInteger\", min: 0},\n {type: \"unsignedLong\", min: 0, max: 18446744073709551615},\n {type: \"unsignedInt\", min: 0, max: 4294967295},\n {type: \"unsignedShort\", min: 0, max: 65535},\n {type: \"unsignedByte\", min: 0, max: 255},\n {type: \"positiveInteger\", min: 1}].forEach(function (i) {\n   numericParsers[XSD + i.type ] = function (label, parseError) {\n     return intSubType(i, label, parseError);\n   };\n });\n*/\n\nvar stringTests = {\n  length   : function (v, l) { return v.length === l; },\n  minlength: function (v, l) { return v.length  >= l; },\n  maxlength: function (v, l) { return v.length  <= l; }\n};\n\nvar numericValueTests = {\n  mininclusive  : function (n, m) { return n >= m; },\n  minexclusive  : function (n, m) { return n >  m; },\n  maxinclusive  : function (n, m) { return n <= m; },\n  maxexclusive  : function (n, m) { return n <  m; }\n};\n\nvar decimalLexicalTests = {\n  totaldigits   : function (v, d) {\n    var m = v.match(/[0-9]/g);\n    return m && m.length <= d;\n  },\n  fractiondigits: function (v, d) {\n    var m = v.match(/^[+-]?[0-9]*\\.?([0-9]*)$/);\n    return m && m[1].length <= d;\n  }\n};\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n/* ShExValidator_constructor - construct an object for validating a schema.\n *\n * schema: a structure produced by a ShEx parser or equivalent.\n * options: object with controls for\n *   lax(true): boolean: whine about missing types in schema.\n *   diagnose(false): boolean: makde validate return a structure with errors.\n */\nfunction ShExValidator_constructor(schema, options) {\n  if (!(this instanceof ShExValidator_constructor))\n    return new ShExValidator_constructor(schema, options);\n  let index = schema._index || ShExUtil.index(schema)\n  this.type = \"ShExValidator\";\n  options = options || {};\n  this.options = options;\n  this.options.or = this.options.or || \"someOf\";\n  this.options.partition = this.options.partition || \"exhaustive\";\n  if (!(\"noCache\" in options && options.noCache))\n    this.known = {};\n\n  var _ShExValidator = this;\n  this.schema = schema;\n  this._expect = this.options.lax ? noop : expect; // report errors on missing types.\n  this._optimize = {}; // optimizations:\n    // hasRepeatedGroups: whether there are patterns like (:p1 ., :p2 .)*\n  this.reset = function () {  }; // included in case we need it later.\n  // var regexModule = this.options.regexModule || require(\"../lib/regex/nfax-val-1err\");\n  var regexModule = this.options.regexModule || require(\"../lib/regex/threaded-val-nerr\");\n\n  /* getAST - compile a traditional regular expression abstract syntax tree.\n   * Tested but not used at present.\n   */\n  this.getAST = function () {\n    return {\n      type: \"AST\",\n      shapes: schema.shapes.reduce(function (ret, shape) {\n        ret[shape.id] = {\n          type: \"ASTshape\",\n          expression: _compileShapeToAST(shape.expression, [], _ShExValidator.schema)\n        };\n        return ret;\n      }, {})\n    };\n  };\n\n  /* indexTripleConstraints - compile regular expression and index triple constraints\n   */\n  this.indexTripleConstraints = function (expression) {\n    // list of triple constraints from (:p1 ., (:p2 . | :p3 .))\n    var tripleConstraints = [];\n\n    if (expression)\n      indexTripleConstraints_dive(expression);\n    return tripleConstraints;\n\n    function indexTripleConstraints_dive (expr) {\n      if (typeof expr === \"string\") // Inclusion\n        indexTripleConstraints_dive(index.tripleExprs[expr]);\n\n      else if (expr.type === \"TripleConstraint\")\n        tripleConstraints.push(expr)-1;\n\n      else if (expr.type === \"OneOf\" || expr.type === \"EachOf\")\n        expr.expressions.forEach(function (nested) {\n          indexTripleConstraints_dive(nested);\n        });\n\n      // @@TODO shape.virtual, shape.inherit\n      else\n        runtimeError(\"unexpected expr type: \" + expr.type);\n    };\n  };\n\n  /* emptyTracker - a tracker that does nothing\n   */\n  this.emptyTracker = function () {\n    var noop = x => x;\n    return {\n      recurse: noop,\n      known: noop,\n      enter: function (point, label) { ++this.depth; },\n      exit: function (point, label, ret) { --this.depth; },\n      depth: 0\n    };\n  };\n\n  /* validate - test point in db against the schema for labelOrShape\n   * depth: level of recurssion; for logging.\n   */\n  this.validate = function (db, point, label, tracker, seen) {\n    // default to schema's start shape\n    if (typeof point === \"object\" && \"termType\" in point) {\n      point = RdfTerm.internalTerm(point)\n    }\n    if (typeof point === \"object\") {\n      var shapeMap = point;\n      if (this.options.results === \"api\") {\n        return shapeMap.map(pair => {\n          var time = new Date();\n          var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n          time = new Date() - time;\n          return {\n            node: pair.node,\n            shape: pair.shape,\n            status: \"errors\" in res ? \"nonconformant\" : \"conformant\",\n            appinfo: res,\n            elapsed: time\n          };\n        });\n      }\n      var results = shapeMap.reduce((ret, pair) => {\n        var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n        return \"errors\" in res ?\n          { passes: ret.passes, failures: ret.failures.concat(res) } :\n          { passes: ret.passes.concat(res), failures: ret.failures } ;\n      }, {passes: [], failures: []});\n      if (false && this.options.results === \"api\") {\n        var ret = {};\n        function _add (n, s, r) {\n          if (!(n in ret)) {\n            ret[n] = [{shape: s, result: r}];\n            return;\n          }\n          if (ret[n].filter(p => { return p.shape === s; }))\n            return;\n          ret[n].push({shape: s, results: r});\n        }\n        results.passes.forEach(p => { _add(p.node, p.shape, true); });\n        results.failures.forEach(p => { _add(p.node, p.shape, false); });\n        return ret;\n      }\n      if (results.failures.length) {\n        return results.failures.length !== 1 ?\n          { type: \"FailureList\", errors: results.failures } :\n          results.failures [0];\n      } else {\n        return results.passes.length !== 1 ?\n          { type: \"SolutionList\", solutions: results.passes } :\n          results.passes [0];\n      }\n    }\n\n    var outside = tracker === undefined;\n    // logging stuff\n    if (!tracker)\n      tracker = this.emptyTracker();\n    if (!label || label === Start) {\n      if (!schema.start)\n        runtimeError(\"start production not defined\");\n    }\n\n    var shape = null;\n    if (label == Start) {\n      shape = schema.start;\n    } else if (!(\"shapes\" in this.schema) || this.schema.shapes.length === 0) {\n      runtimeError(\"shape \" + label + \" not found; no shapes in schema\");\n    } else if (label in index.shapeExprs) {\n      shape = index.shapeExprs[label]\n    } else {\n      runtimeError(\"shape \" + label + \" not found in:\\n\" + Object.keys(index.shapeExprs || []).map(s => \"  \" + s).join(\"\\n\"));\n    }\n\n    if (seen === undefined)\n      seen = {};\n    var seenKey = point + \"@\" + (label === Start ? \"_: -start-\" : label);\n    if (seenKey in seen)\n      return tracker.recurse({\n        type: \"Recursion\",\n        node: ldify(point),\n        shape: label\n      });\n    if (\"known\" in this && seenKey in this.known)\n      return tracker.known(this.known[seenKey]);\n    seen[seenKey] = { point: point, shape: label };\n    tracker.enter(point, label);\n    var ret = this._validateShapeExpr(db, point, shape, label, tracker, seen);\n    tracker.exit(point, label, ret);\n    delete seen[seenKey];\n    if (\"known\" in this)\n      this.known[seenKey] = ret;\n    if (\"startActs\" in schema && outside) {\n      ret.startActs = schema.startActs;\n    }\n    return ret;\n  }\n\n  this._validateShapeExpr = function (db, point, shapeExpr, shapeLabel, tracker, seen) {\n    if (point === \"\")\n      throw Error(\"validation needs a valid focus node\");\n    if (typeof shapeExpr === \"string\") { // ShapeRef\n      return this._validateShapeExpr(db, point, index.shapeExprs[shapeExpr], shapeExpr, tracker, seen);\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      var errors = this._errorsMatchingNodeConstraint(point, shapeExpr, null);\n      return errors.length ? {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors.map(function (error) {\n          return {\n            type: \"NodeConstraintViolation\",\n            shapeExpr: shapeExpr,\n            error: error\n          };\n        })\n      } : {\n        type: \"NodeTest\",\n        node: ldify(point),\n        shape: shapeLabel,\n        shapeExpr: shapeExpr\n      };\n    } else if (shapeExpr.type === \"Shape\") {\n      return this._validateShape(db, point, regexModule.compile(schema, shapeExpr, index),\n                                 shapeExpr, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeExternal\") {\n      return this.options.validateExtern(db, point, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      var sub = this._validateShapeExpr(db, point, shapeExpr.shapeExpr, shapeLabel, tracker, seen);\n      if (\"errors\" in sub)\n          return { type: \"ShapeNotResults\", solution: sub };\n        else\n          return { type: \"ShapeNotFailure\", errors: sub };\n    } else if (shapeExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          passes.push(sub);\n      }\n      if (errors.length > 0) {\n        return  { type: \"ShapeAndFailure\", errors: errors};\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else\n      throw Error(\"expected one of Shape{Ref,And,Or} or NodeConstraint, got \" + JSON.stringify(shapeExpr));\n  }\n\n  this._validateShape = function (db, point, regexEngine, shape, shapeLabel, tracker, seen) {\n    var _ShExValidator = this;\n\n    var ret = null;\n    var startAcionStorage = {}; // !!! need test to see this write to results structure.\n    if (\"startActs\" in schema) {\n      const semActErrors = this.semActHandler.dispatchAll(schema.startActs, null, startAcionStorage)\n      if (semActErrors.length)\n        return {\n          type: \"Failure\",\n          node: ldify(point),\n          shape: shapeLabel,\n          errors: semActErrors\n        }; // some semAct aborted !! return real error\n    }\n    // @@ add to tracker: f(\"validating <\" + point + \"> as <\" + shapeLabel + \">\");\n\n    var fromDB  = db.getNeighborhood(point, shapeLabel, shape);\n    var outgoing = indexNeighborhood(fromDB.outgoing.sort(\n      (l, r) => sparqlOrder(l.object, r.object)\n    ));\n    var incoming = indexNeighborhood(fromDB.incoming.sort(\n      (l, r) => sparqlOrder(l.subject, r.subject)\n    ));\n    var outgoingLength = fromDB.outgoing.length;\n    var neighborhood = fromDB.outgoing.concat(fromDB.incoming);\n\n    var constraintList = this.indexTripleConstraints(shape.expression);\n    var tripleList = constraintList.reduce(function (ret, constraint, ord) {\n\n      // subject and object depend on direction of constraint.\n      var searchSubject = constraint.inverse ? null : point;\n      var searchObject = constraint.inverse ? point : null;\n      var index = constraint.inverse ? incoming : outgoing;\n\n      // get triples matching predciate\n      var matchPredicate = index.byPredicate[constraint.predicate] ||\n        []; // empty list when no triple matches that constraint\n\n      function _errorsByShapeLabel (focus, shapeLabel) {\n        var sub = _ShExValidator.validate(db, focus, shapeLabel, tracker, seen);\n        return \"errors\" in sub ? sub.errors : [];\n      }\n      function _errorsByShapeExpr (focus, shapeExpr) {\n        var sub = _ShExValidator._validateShapeExpr(db, focus, shapeExpr, shapeLabel, tracker, seen);\n        return \"errors\" in sub ? sub.errors : [];\n      }\n      // strip to triples matching value constraints (apart from @<someShape>)\n      var matchConstraints = _ShExValidator._triplesMatchingShapeExpr(\n        matchPredicate,\n        constraint.valueExpr,\n        constraint.inverse,\n        /* _ShExValidator.options.partition === \"exhaustive\" ? undefined : */ _errorsByShapeLabel,\n        /* _ShExValidator.options.partition === \"exhaustive\" ? undefined : */ _errorsByShapeExpr\n      );\n\n      matchConstraints.hits.forEach(function (t) {\n        ret.constraintList[neighborhood.indexOf(t)].push(ord);\n      });\n      matchConstraints.misses.forEach(function (t) {\n        ret.misses[neighborhood.indexOf(t.triple)] = {constraintNo: ord, errors: t.errors};\n      });\n      return ret;\n    }, { misses: {}, constraintList:_seq(neighborhood.length).map(function () { return []; }) }); // start with [[],[]...]\n\n    // @@ add to tracker: f(\"constraints by triple: \", JSON.stringify(tripleList.constraintList));\n\n    var extras = []; // triples accounted for by EXTRA\n    var misses = tripleList.constraintList.reduce(function (ret, constraints, ord) {\n      if (constraints.length === 0 &&                       // matches no constraints\n          ord < outgoingLength &&                           // not an incoming triple\n          ord in tripleList.misses) {                       // predicate matched some constraint(s)\n        if (shape.extra !== undefined &&\n            shape.extra.indexOf(neighborhood[ord].predicate) !== -1) {\n          extras.push(ord);\n        } else {                                            // not declared extra\n          ret.push({                                        // so it's a missed triple.\n            tripleNo: ord,\n            constraintNo: tripleList.misses[ord].constraintNo,\n            errors: tripleList.misses[ord].errors\n          });\n        }\n      }\n      return ret;\n    }, []);\n\n    var xp = crossProduct(tripleList.constraintList);\n    var partitionErrors = [];\n    while ((misses.length === 0 || this.options.partition !== \"greedy\") && xp.next() && ret === null) {\n      // caution: early continues\n\n      var usedTriples = []; // [{s1,p1,o1},{s2,p2,o2}] implicated triples -- used for messages\n      var constraintMatchCount = // [2,1,0,1] how many triples matched a constraint\n        _seq(neighborhood.length).map(function () { return 0; });\n      var tripleToConstraintMapping = xp.get(); // [0,1,0,3] mapping from triple to constraint\n\n      // Triples not mapped to triple constraints are not allowed in closed shapes.\n      if (shape.closed) {\n        var unexpectedTriples = neighborhood.slice(0, outgoingLength).filter((t, i) => {\n          return tripleToConstraintMapping[i] === undefined && // didn't match a constraint\n          extras.indexOf(i) === -1; // wasn't in EXTRAs.\n        });\n        if (unexpectedTriples.length > 0) {\n          partitionErrors.push({\n            errors: [\n              {\n                type: \"ClosedShapeViolation\",\n                unexpectedTriples: unexpectedTriples\n              }\n            ]\n          });\n          continue; // closed shape violation.\n        }\n      }\n\n      // Set usedTriples and constraintMatchCount.\n      tripleToConstraintMapping.forEach(function (tpNumber, ord) {\n        if (tpNumber !== undefined) {\n          usedTriples.push(neighborhood[ord]);\n          ++constraintMatchCount[tpNumber];\n        }\n      });\n\n      // Pivot to triples by constraint.\n      function _constraintToTriples () {\n        var cll = constraintList.length;\n        return tripleToConstraintMapping.slice().\n          reduce(function (ret, c, ord) {\n            if (c !== undefined)\n              ret[c].push(ord);\n            return ret;\n          }, _seq(cll).map(function () { return []; }));\n      }\n\n      tripleToConstraintMapping.slice().sort(function (a,b) { return a-b; }).filter(function (i) { // sort constraint numbers\n        return i !== undefined;\n      }).map(function (n) { return n + \" \"; }).join(\"\"); // e.g. 0 0 1 3\n\n      function _recurse (point, shapeLabel) {\n        return _ShExValidator.validate(db, point, shapeLabel, tracker, seen);\n      }\n      function _direct (point, shapeExpr) {\n        return _ShExValidator._validateShapeExpr(db, point, shapeExpr, shapeLabel, tracker, seen);\n      }\n      function _testExpr (term, valueExpr, recurse, direct) {\n        return _ShExValidator._errorsMatchingShapeExpr(term, valueExpr, recurse, direct)\n      }\n      var results = regexEngine.match(db, point, constraintList, _constraintToTriples(), tripleToConstraintMapping, neighborhood, _recurse, _direct, this.semActHandler, _testExpr, null);\n      if (false) {// testing parity between two engines\n        var nfa = require(\"../lib/regex/nfax-val-1err\").compile(schema, shape);\n        var fromNFA = nfa.match(db, point, constraintList, _constraintToTriples(), tripleToConstraintMapping, neighborhood, _recurse, this.semActHandler, _testExpr, null);\n        if (\"errors\" in fromNFA !== \"errors\" in results)\n          { throw Error(JSON.stringify(results) + \" vs \" + JSON.stringify(fromNFA)); }\n      }\n      if (\"errors\" in results) {\n        partitionErrors.push({\n          errors: results.errors\n        });\n        if (_ShExValidator.options.partition !== \"exhaustive\")\n          break;\n        else\n          continue;\n      }\n\n      // @@ add to tracker: f(\"post-regexp \" + usedTriples.join(\" \"));\n\n      var possibleRet = { type: \"ShapeTest\", node: ldify(point), shape: shapeLabel };\n      if (Object.keys(results).length > 0) // only include .solution for non-empty pattern\n        possibleRet.solution = results;\n      if (\"semActs\" in shape) {\n        const semActErrors = this.semActHandler.dispatchAll(shape.semActs, results, possibleRet)\n        if (semActErrors.length) {\n          // some semAct aborted\n          partitionErrors.push({\n            errors: semActErrors\n          });\n          if (_ShExValidator.options.partition !== \"exhaustive\")\n            break;\n          else\n            continue;\n        }\n      }\n      // @@ add to tracker: f(\"final \" + usedTriples.join(\" \"));\n\n      ret = possibleRet;\n      partitionErrors = [];\n      // alts.push(tripleToConstraintMapping);\n    }\n    var missErrors = misses.map(function (miss) {\n      var t = neighborhood[miss.tripleNo];\n      return {\n        type: \"TypeMismatch\",\n        triple: {type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)},\n        constraint: constraintList[miss.constraintNo],\n        errors: miss.errors\n      };\n    });\n    let errors = missErrors.concat(partitionErrors.length === 1 ? partitionErrors[0].errors : partitionErrors);\n    if (errors.length > 0) {\n      ret = {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors\n      };\n    }\n\n    if (VERBOSE) { // remove N3jsTripleToString\n      neighborhood.forEach(function (t) {\n        delete t.toString;\n      });\n    }\n    // @@ add to tracker: f(\"</\" + shapeLabel + \">\");\n    return addShapeAttributes(ret);\n\n    function addShapeAttributes (ret) {\n      if (\"annotations\" in shape)\n        ret.annotations = shape.annotations;\n      return ret;\n    }\n  };\n\n  this._triplesMatchingShapeExpr = function (triples, valueExpr, inverse, recurse, direct) {\n    var _ShExValidator = this;\n    var misses = [];\n    var hits = [];\n    triples.forEach(function (triple) {\n      var value = inverse ? triple.subject : triple.object;\n      var errors = valueExpr === undefined ?\n          [] :\n          _ShExValidator._errorsMatchingShapeExpr(value, valueExpr, recurse, direct);\n      if (errors.length === 0) {\n        hits.push(triple);\n      } else if (hits.indexOf(triple) === -1) {\n        misses.push({triple: triple, errors: errors});\n      }\n    });\n    return { hits: hits, misses: misses };\n  }\n  this._errorsMatchingShapeExpr = function (value, valueExpr, recurse, direct) {\n    var _ShExValidator = this;\n    if (typeof valueExpr === \"string\") { // ShapeRef\n      return recurse ? recurse(value, valueExpr) : [];\n    } else if (valueExpr.type === \"NodeConstraint\") {\n      return this._errorsMatchingNodeConstraint(value, valueExpr, null);\n    } else if (valueExpr.type === \"Shape\") {\n      return direct === undefined ? [] : direct(value, valueExpr);\n    } else if (valueExpr.type === \"ShapeOr\") {\n      var ret = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExprs[i], recurse, direct);\n        if (nested.length === 0)\n          return nested;\n        ret = ret.concat(nested);\n      }\n      return ret;\n    } else if (valueExpr.type === \"ShapeAnd\") {\n      return valueExpr.shapeExprs.reduce(function (ret, nested, iter) {\n        return ret.concat(_ShExValidator._errorsMatchingShapeExpr(value, nested, recurse, direct, true));\n      }, []);\n    } else if (valueExpr.type === \"ShapeNot\") {\n      var ret = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExpr, recurse, direct, true);\n      return ret.length ?\n        [] :\n        [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"];\n    } else {\n      throw Error(\"unknown value expression type '\" + valueExpr.type + \"'\");\n    }\n  };\n\n  /* _errorsMatchingNodeConstraint - return whether the value matches the value\n   * expression without checking shape references.\n   */\n  this._errorsMatchingNodeConstraint = function (value, valueExpr, recurse) {\n    var errors = [];\n    var label = RdfTerm.isLiteral(value) ? RdfTerm.getLiteralValue(value) :\n      RdfTerm.isBlank(value) ? value.substring(2) :\n      value;\n    var dt = RdfTerm.isLiteral(value) ? RdfTerm.getLiteralType(value) : null;\n    var numeric = integerDatatypes.indexOf(dt) !== -1 ? XSD + \"integer\" : numericDatatypes.indexOf(dt) !== -1 ? dt : undefined;\n\n    function validationError () {\n      var errorStr = Array.prototype.join.call(arguments, \"\");\n      errors.push(\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": \" + errorStr);\n      return false;\n    }\n    // if (negated) ;\n    if (false) {\n      // wildcard -- ignore\n    } else {\n      if (\"nodeKind\" in valueExpr) {\n        if ([\"iri\", \"bnode\", \"literal\", \"nonliteral\"].indexOf(valueExpr.nodeKind) === -1) {\n          validationError(\"unknown node kind '\" + valueExpr.nodeKind + \"'\");\n        }\n        if (RdfTerm.isBlank(value)) {\n          if (valueExpr.nodeKind === \"iri\" || valueExpr.nodeKind === \"literal\") {\n            validationError(\"blank node found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (RdfTerm.isLiteral(value)) {\n          if (valueExpr.nodeKind !== \"literal\") {\n            validationError(\"literal found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (valueExpr.nodeKind === \"bnode\" || valueExpr.nodeKind === \"literal\") {\n          validationError(\"iri found when \" + valueExpr.nodeKind + \" expected\");\n        }\n      }\n\n      if (valueExpr.datatype  && valueExpr.values  ) validationError(\"found both datatype and values in \"   +tripleConstraint);\n\n      if (valueExpr.datatype) {\n        if (!RdfTerm.isLiteral(value)) {\n          validationError(\"mismatched datatype: \" + value + \" is not a literal with datatype \" + valueExpr.datatype);\n        }\n        else if (RdfTerm.getLiteralType(value) !== valueExpr.datatype) {\n          validationError(\"mismatched datatype: \" + RdfTerm.getLiteralType(value) + \" !== \" + valueExpr.datatype);\n        }\n        else if (numeric) {\n          testRange(numericParsers[numeric](label, validationError), valueExpr.datatype, validationError);\n        }\n        else if (valueExpr.datatype === XSD + \"boolean\") {\n          if (label !== \"true\" && label !== \"false\" && label !== \"1\" && label !== \"0\")\n            validationError(\"illegal boolean value: \" + label);\n        }\n        else if (valueExpr.datatype === XSD + \"dateTime\") {\n          if (!label.match(/^[+-]?\\d{4}-[01]\\d-[0-3]\\dT[0-5]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?$/))\n            validationError(\"illegal dateTime value: \" + label);\n        }\n      }\n\n      if (valueExpr.values) {\n        if (RdfTerm.isLiteral(value) && valueExpr.values.reduce((ret, v) => {\n          if (ret) return true;\n          var ld = ldify(value);\n          if (v.type === \"Language\") {\n            return v.languageTag === ld.language; // @@ use equals/normalizeTest\n          }\n          if (!(typeof v === \"object\" && \"value\" in v))\n            return false;\n          return v.value === ld.value &&\n            v.type === ld.type &&\n            v.language === ld.language;\n        }, false)) {\n          // literal match\n        } else if (valueExpr.values.indexOf(value) !== -1) {\n          // trivial match\n        } else {\n          if (!(valueExpr.values.some(function (valueConstraint) {\n            if (typeof valueConstraint === \"object\" && !(\"value\" in valueConstraint)) { // isTerm me -- strike \"value\" in\n              if (!(\"type\" in valueConstraint))\n                runtimeError(\"expected \"+JSON.stringify(valueConstraint)+\" to have a 'type' attribute.\");\n              var stemRangeTypes = [\n                \"Language\",\n                \"IriStem\",      \"LiteralStem\",      \"LanguageStem\",\n                \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"\n              ];\n              if (stemRangeTypes.indexOf(valueConstraint.type) === -1)\n                runtimeError(\"expected type attribute '\"+valueConstraint.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n\n              /* expect N3.js literals with {Literal,Language}StemRange\n               *       or non-literals with IriStemRange\n               */\n              function normalizedTest (val, ref, func) {\n                if (RdfTerm.isLiteral(val)) {\n                  if ([\"LiteralStem\", \"LiteralStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(RdfTerm.getLiteralValue(val), ref);\n                  } else if ([\"LanguageStem\", \"LanguageStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(RdfTerm.getLiteralLanguage(val) || null, ref);\n                  } else {\n                    return validationError(\"literal \" + val + \" not comparable with non-literal \" + ref);\n                  }\n                } else {\n                  if ([\"IriStem\", \"IriStemRange\"].indexOf(valueConstraint.type) === -1) {\n                    return validationError(\"nonliteral \" + val + \" not comparable with literal \" + JSON.stringify(ref));\n                  } else {\n                    return func(val, ref);\n                  }\n                }\n              }\n              function startsWith (val, ref) {\n                return normalizedTest(val, ref, (l, r) => {\n                  return (valueConstraint.type === \"LanguageStem\" ||\n                          valueConstraint.type === \"LanguageStemRange\") ?\n                    // rfc4647 basic filtering\n                    l !== null && (l === r || r === \"\" || l[r.length] === \"-\") :\n                    // simple substring\n                    l.startsWith(r);\n                });\n              }\n              function equals (val, ref) {\n                return normalizedTest(val, ref, (l, r) => { return l === r; });\n              }\n\n              if (!isTerm(valueConstraint.stem)) {\n                expect(valueConstraint.stem, \"type\", \"Wildcard\");\n                // match whatever but check exclusions below\n              } else {\n                if (!(startsWith(value, valueConstraint.stem))) {\n                  return false;\n                }\n              }\n              if (valueConstraint.exclusions) {\n                return !valueConstraint.exclusions.some(function (c) {\n                  if (!isTerm(c)) {\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                    return startsWith(value, c.stem);\n                  } else {\n                    return equals(value, c);\n                  }\n                });\n              }\n              return true;\n            } else {\n              // ignore -- would have caught it above\n            }\n          }))) {\n            validationError(\"value \" + value + \" not found in set \" + JSON.stringify(valueExpr.values));\n          }\n        }\n      }\n    }\n\n    if (\"pattern\" in valueExpr) {\n      var regexp = \"flags\" in valueExpr ?\n\t  new RegExp(valueExpr.pattern, valueExpr.flags) :\n\t  new RegExp(valueExpr.pattern);\n      if (!(getLexicalValue(value).match(regexp)))\n        validationError(\"value \" + getLexicalValue(value) + \" did not match pattern \" + valueExpr.pattern);\n    }\n\n    Object.keys(stringTests).forEach(function (test) {\n      if (test in valueExpr && !stringTests[test](label, valueExpr[test])) {\n        validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n      }\n    });\n\n    Object.keys(numericValueTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric) {\n          if (!numericValueTests[test](numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n\n    Object.keys(decimalLexicalTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric === XSD + \"integer\" || numeric === XSD + \"decimal\") {\n          if (!decimalLexicalTests[test](\"\"+numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n    return errors;\n  };\n\n  this.semActHandler = {\n    handlers: { },\n    results: { },\n    /**\n     * Store a semantic action handler.\n     *\n     * @param {string} name - semantic action's URL.\n     * @param {object} handler - handler function.\n     *\n     * The handler object has a dispatch function is invoked with:\n     * @param {string} code - text of the semantic action.\n     * @param {object} ctx - matched triple or results subset.\n     * @param {object} extensionStorage - place where the extension writes into the result structure.\n     * @return {bool} false if the extension failed or did not accept the ctx object.\n     */\n    register: function (name, handler) {\n      this.handlers[name] = handler;\n    },\n    /**\n     * Calls all semantic actions, allowing each to write to resultsArtifact.\n     *\n     * @param {array} semActs - list of semantic actions to invoke.\n     * @return {bool} false if any result was false.\n     */\n    dispatchAll: function (semActs, ctx, resultsArtifact) {\n      var _semActHanlder = this;\n      return semActs.reduce(function (ret, semAct) {\n        if (ret.length === 0 && semAct.name in _semActHanlder.handlers) {\n          var code = \"code\" in semAct ? semAct.code : _ShExValidator.options.semActs[semAct.name];\n          var existing = \"extensions\" in resultsArtifact && semAct.name in resultsArtifact.extensions;\n          var extensionStorage = existing ? resultsArtifact.extensions[semAct.name] : {};\n          const response = _semActHanlder.handlers[semAct.name].dispatch(code, ctx, extensionStorage); debugger\n          if (typeof response === 'boolean') {\n            if (!response)\n              ret.push({ type: \"SemActFailure\", errors: [{ type: \"BooleanSemActFailure\", code: code, ctx }] })\n          } else if (typeof response === 'object' && response.constructor === Array) {\n            if (response.length > 0)\n              ret.push({ type: \"SemActFailure\", errors: response })\n          } else {\n            throw Error(\"unsupported response from semantic action handler: \" + JSON.stringify(response))\n          }\n          if (!existing && Object.keys(extensionStorage).length > 0) {\n            if (!(\"extensions\" in resultsArtifact))\n              resultsArtifact.extensions = {};\n            resultsArtifact.extensions[semAct.name] = extensionStorage;\n          }\n          return ret;\n        }\n        return ret;\n      }, []);\n    }\n  };\n}\n\n/* _compileShapeToAST - compile a shape expression to an abstract syntax tree.\n *\n * currently tested but not used.\n */\nfunction _compileShapeToAST (expression, tripleConstraints, schema) {\n\n  function Epsilon () {\n    this.type = \"Epsilon\";\n  }\n\n  function TripleConstraint (ordinal, predicate, inverse, negated, valueExpr) {\n    this.type = \"TripleConstraint\";\n    // this.ordinal = ordinal; @@ does 1card25\n    this.inverse = !!inverse;\n    this.negated = !!negated;\n    this.predicate = predicate;\n    if (valueExpr !== undefined)\n      this.valueExpr = valueExpr;\n  }\n\n  function Choice (disjuncts) {\n    this.type = \"Choice\";\n    this.disjuncts = disjuncts;\n  }\n\n  function EachOf (conjuncts) {\n    this.type = \"EachOf\";\n    this.conjuncts = conjuncts;\n  }\n\n  function SemActs (expression, semActs) {\n    this.type = \"SemActs\";\n    this.expression = expression;\n    this.semActs = semActs;\n  }\n\n  function KleeneStar (expression) {\n    this.type = \"KleeneStar\";\n    this.expression = expression;\n  }\n\n  function _compileExpression (expr, schema) {\n    var repeated, container;\n\n    /* _repeat: map expr with a min and max cardinality to a corresponding AST with Groups and Stars.\n       expr 1 1 => expr\n       expr 0 1 => Choice(expr, Eps)\n       expr 0 3 => Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps)\n       expr 2 5 => EachOf(expr, expr, Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps))\n       expr 0 * => KleeneStar(expr)\n       expr 1 * => EachOf(expr, KleeneStar(expr))\n       expr 2 * => EachOf(expr, expr, KleeneStar(expr))\n\n       @@TODO: favor Plus over Star if Epsilon not in expr.\n    */\n    function _repeat (expr, min, max) {\n      if (min === undefined) { min = 1; }\n      if (max === undefined) { max = 1; }\n\n      if (min === 1 && max === 1) { return expr; }\n\n      var opts = max === UNBOUNDED ?\n        new KleeneStar(expr) :\n        _seq(max - min).reduce(function (ret, elt, ord) {\n          return ord === 0 ?\n            new Choice([expr, new Epsilon]) :\n            new Choice([new EachOf([expr, ret]), new Epsilon]);\n        }, undefined);\n\n      var reqd = min !== 0 ?\n        new EachOf(_seq(min).map(function (ret) {\n          return expr; // @@ something with ret\n        }).concat(opts)) : opts;\n      return reqd;\n    }\n\n    if (typeof expr === \"string\") { // Inclusion\n      var included = schema._index.tripleExprs[expr].expression;\n      return _compileExpression(included, schema);\n    }\n\n    else if (expr.type === \"TripleConstraint\") {\n      // predicate, inverse, negated, valueExpr, annotations, semActs, min, max\n      var valueExpr = \"valueExprRef\" in expr ?\n        schema.valueExprDefns[expr.valueExprRef] :\n        expr.valueExpr;\n      var ordinal = tripleConstraints.push(expr)-1;\n      var tp = new TripleConstraint(ordinal, expr.predicate, expr.inverse, expr.negated, valueExpr);\n      repeated = _repeat(tp, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"OneOf\") {\n      container = new Choice(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"EachOf\") {\n      container = new EachOf(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else throw Error(\"unexpected expr type: \" + expr.type);\n  }\n\n  return expression ? _compileExpression(expression, schema) : new Epsilon();\n}\n\n// http://stackoverflow.com/questions/9422386/lazy-cartesian-product-of-arrays-arbitrary-nested-loops\nfunction crossProduct(sets) {\n  var n = sets.length, carets = [], args = null;\n\n  function init() {\n    args = [];\n    for (var i = 0; i < n; i++) {\n      carets[i] = 0;\n      args[i] = sets[i][0];\n    }\n  }\n\n  function next() {\n\n    // special case: crossProduct([]).next().next() returns false.\n    if (args !== null && args.length === 0)\n      return false;\n\n    if (args === null) {\n      init();\n      return true;\n    }\n    var i = n - 1;\n    carets[i]++;\n    if (carets[i] < sets[i].length) {\n      args[i] = sets[i][carets[i]];\n      return true;\n    }\n    while (carets[i] >= sets[i].length) {\n      if (i == 0) {\n        return false;\n      }\n      carets[i] = 0;\n      args[i] = sets[i][0];\n      carets[--i]++;\n    }\n    args[i] = sets[i][carets[i]];\n    return true;\n  }\n\n  return {\n    next: next,\n    do: function (block, _context) { // old API\n      return block.apply(_context, args);\n    },\n    // new API because\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments#Description\n    // cautions about functions over arguments.\n    get: function () { return args; }\n  };\n}\n\n/* N3jsTripleToString - simple toString function to make N3.js's triples\n * printable.\n */\nvar N3jsTripleToString = function () {\n  function fmt (n) {\n    return RdfTerm.isLiteral(n) ?\n      [ \"http://www.w3.org/2001/XMLSchema#integer\",\n        \"http://www.w3.org/2001/XMLSchema#float\",\n        \"http://www.w3.org/2001/XMLSchema#double\"\n      ].indexOf(RdfTerm.getLiteralType(n)) !== -1 ?\n      parseInt(RdfTerm.getLiteralValue(n)) :\n      n :\n    RdfTerm.isBlank(n) ?\n      n :\n      \"<\" + n + \">\";\n  }\n  return fmt(this.subject) + \" \" + fmt(this.predicate) + \" \" + fmt(this.object) + \" .\";\n};\n\n/* indexNeighborhood - index triples by predicate\n * returns: {\n *     byPredicate: Object: mapping from predicate to triples containing that\n *                  predicate.\n *\n *     candidates: [[1,3], [0,2]]: mapping from triple to the triple constraints\n *                 it matches.  It is initialized to []. Mappings that remain an\n *                 empty set indicate a triple which didn't matching anything in\n *                 the shape.\n *\n *     misses: list to recieve value constraint failures.\n *   }\n */\nfunction indexNeighborhood (triples) {\n  return {\n    byPredicate: triples.reduce(function (ret, t) {\n      var p = t.predicate;\n      if (!(p in ret))\n        ret[p] = [];\n      ret[p].push(t);\n\n      // If in VERBOSE mode, add a nice toString to N3.js's triple objects.\n      if (VERBOSE)\n        t.toString = N3jsTripleToString;\n\n      return ret;\n    }, {}),\n    candidates: _seq(triples.length).map(function () {\n      return [];\n    }),\n    misses: []\n  };\n}\n\n/* sparqlOrder - sort triples by subject following SPARQL partial ordering.\n */\nfunction sparqlOrder (l, r) {\n  var [lprec, rprec] = [l, r].map(\n    x => RdfTerm.isBlank(x) ? 1 : RdfTerm.isLiteral(x) ? 2 : 3\n  );\n  return lprec === rprec ? l.localeCompare(r) : lprec - rprec;\n}\n\n/* Return a list of n \"\"s.\n *\n * Note that Array(n) on its own returns a \"sparse array\" so Array(n).map(f)\n * never calls f.\n */\nfunction _seq (n) {\n  return n === 0 ?\n    [] :\n    Array(n).join(\" \").split(/ /); // hahaha, javascript, you suck.\n}\n\n/* Expect property p with value v in object o\n */\nfunction expect (o, p, v) {\n  if (!(p in o))\n    runtimeError(\"expected \"+JSON.stringify(o)+\" to have a '\"+p+\"' attribute.\");\n  if (arguments.length > 2 && o[p] !== v)\n    runtimeError(\"expected \"+p+\" attribute '\"+o[p]+\"' to equal '\"+v+\"'.\");\n}\n\nfunction noop () {  }\n\nfunction runtimeError () {\n  var errorStr = Array.prototype.join.call(arguments, \"\");\n  var e = new Error(errorStr);\n  Error.captureStackTrace(e, runtimeError);\n  throw e;\n}\n\n  return {\n    construct: ShExValidator_constructor,\n    start: Start,\n    options: InterfaceOptions\n  };\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExValidator;\n"
        },
        {
          "id": 46,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/nfax-val-1err.js",
          "name": "../shex-core/lib/regex/nfax-val-1err.js",
          "index": 19,
          "index2": 17,
          "size": 20104,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "issuerId": 13,
          "issuerName": "../shex-core/shex-core.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 13,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "name": "../shex-core/shex-core.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
              "module": "../shex-core/shex-core.js",
              "moduleName": "../shex-core/shex-core.js",
              "type": "cjs require",
              "userRequest": "./lib/regex/nfax-val-1err",
              "loc": "6:23-59"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "var NFAXVal1Err = (function () {\n  var RdfTerm = require(\"../RdfTerm\");\n\n  var Split = \"<span class='keyword' title='Split'>|</span>\";\n  var Rept  = \"<span class='keyword' title='Repeat'>×</span>\";\n  var Match = \"<span class='keyword' title='Match'>␃</span>\";\n  /* compileNFA - compile regular expression and index triple constraints\n   */\n  var UNBOUNDED = -1;\n\n  function compileNFA (schema, shape, index) {\n    var expression = shape.expression;\n    return NFA();\n\n    function NFA () {\n      // wrapper for states, startNo and matchstate\n      var states = [];\n      var matchstate = State_make(Match, []);\n      var startNo = matchstate;\n      var stack = [];\n      var pair;\n      if (expression) {\n        var pair = walkExpr(expression, []);\n        patch(pair.tail, matchstate);\n        startNo = pair.start;\n      }\n      var ret = {\n        algorithm: \"rbenx\",\n        end: matchstate,\n        states: states,\n        start: startNo,\n        match: rbenx_match\n      }\n      matchstate = states = startNo = null;\n      return ret;\n\n      function walkExpr (expr, stack) {\n        var s, starts;\n        var lastTail;\n        function maybeAddRept (start, tail) {\n          if ((expr.min == undefined || expr.min === 1) &&\n              (expr.max == undefined || expr.max === 1))\n            return {start: start, tail: tail}\n          s = State_make(Rept, [start]);\n          states[s].expr = expr;\n          // cache min/max in normalized form for simplicity of comparison.\n          states[s].min = \"min\" in expr ? expr.min : 1;\n          states[s].max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n          patch(tail, s);\n          return {start: s, tail: [s]}\n        }\n\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return walkExpr(included, stack);\n        }\n\n        else if (expr.type === \"TripleConstraint\") {\n          s = State_make(expr, []);\n          states[s].stack = stack;\n          return {start: s, tail: [s]};\n          // maybeAddRept(s, [s]);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          lastTail = [];\n          starts = [];\n          expr.expressions.forEach(function (nested, ord) {\n            pair = walkExpr(nested, stack.concat({c:expr, e:ord}));\n            starts.push(pair.start);\n            lastTail = lastTail.concat(pair.tail);\n          });\n          s = State_make(Split, starts);\n          states[s].expr = expr;\n          return maybeAddRept(s, lastTail);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          expr.expressions.forEach(function (nested, ord) {\n            pair = walkExpr(nested, stack.concat({c:expr, e:ord}));\n            if (ord === 0)\n              s = pair.start;\n            else\n              patch(lastTail, pair.start);\n            lastTail = pair.tail;\n          });\n          return maybeAddRept(s, lastTail);\n        }\n\n        throw Error(\"unexpected expr type: \" + expr.type);\n      };\n\n      function State_make (c, outs, negated) {\n        var ret = states.length;\n        states.push({c:c, outs:outs});\n        if (negated)\n          states[ret].negated = true; // only include if true for brevity\n        return ret;\n      }\n\n      function patch (l, target) {\n        l.forEach(elt => {\n          states[elt].outs.push(target);\n        });\n      }\n    }\n\n\n    function nfaToString () {\n      var known = {OneOf: [], EachOf: []};\n      function dumpTripleConstraint (tc) {\n        return \"<\" + tc.predicate + \">\";\n      }\n      function card (obj) {\n        var x = \"\";\n        if (\"min\" in obj) x += obj.min;\n        if (\"max\" in obj) x += \",\" + obj.max;\n        return x ? \"{\" + x + \"}\" : \"\";\n      }\n      function junct (j) {\n        var id = known[j.type].indexOf(j);\n        if (id === -1)\n          id = known[j.type].push(j)-1;\n        return j.type + id; // + card(j);\n      }\n      function dumpStackElt (elt) {\n        return junct(elt.c) + \".\" + elt.e + (\"i\" in elt ? \"[\" + elt.i + \"]\" : \"\");\n      }\n      function dumpStack (stack) {\n        return stack.map(elt => { return dumpStackElt(elt); }).join(\"/\");\n      }\n      function dumpNFA (states, startNo) {\n        return states.map((s, i) => {\n          return (i === startNo ? s.c === Match ? \".\" : \"S\" : s.c === Match ? \"E\" : \" \") + i + \" \" + (\n            s.c === Split ? (\"Split-\" + junct(s.expr)) :\n              s.c === Rept ? (\"Rept-\" + junct(s.expr)) :\n              s.c === Match ? \"Match\" :\n              dumpTripleConstraint(s.c)\n          ) + card(s) + \"→\" + s.outs.join(\" | \") + (\"stack\" in s ? dumpStack(s.stack) : \"\");\n        }).join(\"\\n\");\n      }\n      function dumpMatched (matched) {\n        return matched.map(m => {\n          return dumpTripleConstraint(m.c) + \"[\" + m.triples.join(\",\") + \"]\" + dumpStack(m.stack);\n        }).join(\",\");\n      }\n      function dumpThread (thread) {\n        return \"S\" + thread.state + \":\" + Object.keys(thread.repeats).map(k => {\n          return k + \"×\" + thread.repeats[k];\n        }).join(\",\") + \" \" + dumpMatched(thread.matched);\n      }\n      function dumpThreadList (list) {\n        return \"[[\" + list.map(thread => { return dumpThread(thread); }).join(\"\\n  \") + \"]]\";\n      }\n      return {\n        nfa: dumpNFA,\n        stack: dumpStack,\n        stackElt: dumpStackElt,\n        thread: dumpThread,\n        threadList: dumpThreadList\n      };\n    }\n\n    function rbenx_match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, recurse, direct, semActHandler, checkValueExpr, trace) {\n      var rbenx = this;\n      var clist = [], nlist = []; // list of {state:state number, repeats:stateNo->repetitionCount}\n\n      function localExpect (list) {\n        return list.map(st => {\n          var s = rbenx.states[st.state]; // simpler threads are a list of states.\n          return renderAtom(s.c, s.negated);\n        });\n      }\n\n      if (rbenx.states.length === 1)\n        return matchedToResult([], constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr);\n\n      var chosen = null;\n      // var dump = nfaToString();\n      // console.log(dump.nfa(this.states, this.start));\n      addstate(rbenx, clist, this.start, {repeats:{}, avail:[], matched:[], stack:[], errors:[]});\n      while (clist.length) {\n        nlist = [];\n        if (trace)\n          trace.push({threads:[]});\n        for (var threadno = 0; threadno < clist.length; ++threadno) {\n          var thread = clist[threadno];\n          if (thread.state === rbenx.end)\n            continue;\n          var state = rbenx.states[thread.state];\n          var nlistlen = nlist.length;\n          var constraintNo = constraintList.indexOf(state.c);\n          // may be Accept!\n            var min = \"min\" in state.c ? state.c.min : 1;\n            var max = \"max\" in state.c ? state.c.max === UNBOUNDED ? Infinity : state.c.max : 1;\n            if (\"negated\" in state.c && state.c.negated)\n              min = max = 0;\n            if (thread.avail[constraintNo] === undefined)\n              thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].slice();\n            var taken = thread.avail[constraintNo].splice(0, max);\n            if (taken.length >= min) {\n              do {\n                addStates(rbenx, nlist, thread, taken);\n              } while ((function () {\n                if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                  taken.push(thread.avail[constraintNo].shift());\n                  return true; // stay in look to take more.\n                } else {\n                  return false; // no more to take or we're already at max\n                }\n              })());\n          }\n          if (trace)\n            trace[trace.length-1].threads.push({\n              state: clist[threadno].state,\n              to:nlist.slice(nlistlen).map(x => {\n                return stateString(x.state, x.repeats);\n              })\n            });\n        }\n        // console.log(dump.threadList(nlist));\n        if (nlist.length === 0 && chosen === null)\n          return reportError(localExpect(clist, rbenx.states));\n        var t = clist;\n        clist = nlist;\n        nlist = t;\n        var longerChosen = clist.reduce((ret, elt) => {\n          var matchedAll =\n              elt.matched.reduce((ret, m) => {\n                return ret + m.triples.length; // count matched triples\n              }, 0) === tripleToConstraintMapping.reduce((ret, t) => {\n                return t === undefined ? ret : ret + 1; // count expected\n              }, 0);\n          return ret !== null ? ret : (elt.state === rbenx.end && matchedAll) ? elt : null;\n        }, null)\n        if (longerChosen)\n          chosen = longerChosen;\n        // if (longerChosen !== null)\n        //   console.log(JSON.stringify(matchedToResult(longerChosen.matched)));\n      }\n      if (chosen === null)\n        return reportError();\n      function reportError () { return {\n        type: \"Failure\",\n        node: node,\n        errors: localExpect(clist, rbenx.states)\n      } }\n      function localExpect () {\n        return clist.map(t => {\n          var c = rbenx.states[t.state].c;\n          // if (c === Match)\n          //   return { type: \"EndState999\" };\n          var valueExpr = null;\n          if (typeof c.valueExpr === \"string\") { // ShapeRef\n            valueExpr = c.valueExpr;\n            if (RdfTerm.isBlank(valueExpr))\n              valueExpr = schema.shapes[valueExpr];\n          } else if (c.valueExpr) {\n            valueExpr = extend({}, c.valueExpr)\n          }\n          return extend({\n            type: state.c.negated ? \"NegatedProperty\" :\n              t.state === rbenx.end ? \"ExcessTripleViolation\" :\n              \"MissingProperty\",\n            property: state.c.predicate\n          }, valueExpr ? { valueExpr: valueExpr } : {});\n        });\n      }\n      // console.log(\"chosen:\", dump.thread(chosen));\n      return \"errors\" in chosen.matched ?\n        chosen.matched :\n        matchedToResult(chosen.matched, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr);\n    }\n\n    function addStates (rbenx, nlist, thread, taken) {\n      var state = rbenx.states[thread.state];\n      // find the exprs that require repetition\n      var exprs = rbenx.states.map(x => { return x.c === Rept ? x.expr : null; });\n      var newStack = state.stack.map(e => {\n        var i = thread.repeats[exprs.indexOf(e.c)];\n        if (i === undefined)\n          i = 0; // expr has no repeats\n        else\n          i = i-1;\n        return { c:e.c, e:e.e, i:i };\n      });\n      var withIndexes = {\n        c: state.c,\n        triples: taken,\n        stack: newStack\n      };\n      thread.matched = thread.matched.concat(withIndexes);\n      state.outs.forEach(o => { // single out if NFA includes epsilons\n        addstate(rbenx, nlist, o, thread);\n      });\n    }\n\n    function addstate (rbenx, list, stateNo, thread, seen) {\n      seen = seen || [];\n      var seenkey = stateString(stateNo, thread.repeats);\n      if (seen.indexOf(seenkey) !== -1)\n        return;\n      seen.push(seenkey);\n\n      var s = rbenx.states[stateNo];\n      if (s.c === Split) {\n        return s.outs.reduce((ret, o, idx) => {\n          return ret.concat(addstate(rbenx, list, o, thread, seen));\n        }, []);\n        // } else if (s.c.type === \"OneOf\" || s.c.type === \"EachOf\") { // don't need Rept\n      } else if (s.c === Rept) {\n        var ret = [];\n        // matched = [matched].concat(\"Rept\" + s.expr);\n        if (!(stateNo in thread.repeats))\n          thread.repeats[stateNo] = 0;\n        var repetitions = thread.repeats[stateNo];\n        // add(r < s.min ? outs[0] : r >= s.min && < s.max ? outs[0], outs[1] : outs[1])\n        if (repetitions < s.max)\n          ret = ret.concat(addstate(rbenx, list, s.outs[0], incrmRepeat(thread, stateNo), seen)); // outs[0] to repeat\n        if (repetitions >= s.min && repetitions <= s.max)\n          ret = ret.concat(addstate(rbenx, list, s.outs[1], resetRepeat(thread, stateNo), seen)); // outs[1] when done\n        return ret;\n      } else {\n        // if (stateNo !== rbenx.end || !thread.avail.reduce((r2, avail) => { faster if we trim early??\n        //   return r2 || avail.length > 0;\n        // }, false))\n        return [list.push({ // return [new list element index]\n          state:stateNo,\n          repeats:thread.repeats,\n          avail:thread.avail.map(a => { // copy parent thread's avail vector\n            return a.slice();\n          }),\n          stack:thread.stack,\n          matched:thread.matched,\n          errors: thread.errors\n        }) - 1];\n      }\n    }\n\n    function resetRepeat (thread, repeatedState) {\n      var trimmedRepeats = Object.keys(thread.repeats).reduce((r, k) => {\n        if (parseInt(k) !== repeatedState) // ugh, hash keys are strings\n          r[k] = thread.repeats[k];\n        return r;\n      }, {});\n      return {state:thread.state/*???*/, repeats:trimmedRepeats, matched:thread.matched, avail:thread.avail.slice(), stack:thread.stack};\n    }\n\n    function incrmRepeat (thread, repeatedState) {\n      var incrmedRepeats = Object.keys(thread.repeats).reduce((r, k) => {\n        r[k] = parseInt(k) == repeatedState ? thread.repeats[k] + 1 : thread.repeats[k];\n        return r;\n      }, {});\n      return {state:thread.state/*???*/, repeats:incrmedRepeats, matched:thread.matched, avail:thread.avail.slice(), stack:thread.stack};\n    }\n\n    function stateString (state, repeats) {\n      var rs = Object.keys(repeats).map(rpt => {\n        return rpt+\":\"+repeats[rpt];\n      }).join(\",\");\n      return rs.length ? state + \"-\" + rs : \"\"+state;\n    }\n\n    function matchedToResult (matched, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr) {\n      var last = [];\n      var errors = [];\n      var skips = [];\n      var ret = matched.reduce((out, m) => {\n        var mis = 0;\n        var ptr = out, t;\n        while (mis < last.length &&\n               m.stack[mis].c === last[mis].c && // constraint\n               m.stack[mis].i === last[mis].i && // iteration number\n               m.stack[mis].e === last[mis].e) { // (dis|con)junction number\n            ptr = ptr.solutions[last[mis].i].expressions[last[mis].e];\n          ++mis;\n        }\n        while (mis < m.stack.length) {\n          if (mis >= last.length) {\n            last.push({});\n          }\n          if (m.stack[mis].c !== last[mis].c) {\n            t = [];\n            ptr.type = m.stack[mis].c.type === \"EachOf\" ? \"EachOfSolutions\" : \"OneOfSolutions\", ptr.solutions = t;\n            if (\"min\" in m.stack[mis].c)\n              ptr.min = m.stack[mis].c.min;\n            if (\"max\" in m.stack[mis].c)\n              ptr.max = m.stack[mis].c.max;\n            if (\"annotations\" in m.stack[mis].c)\n              ptr.annotations = m.stack[mis].c.annotations;\n            if (\"semActs\" in m.stack[mis].c)\n              ptr.semActs = m.stack[mis].c.semActs;\n            ptr = t;\n            last[mis].i = null;\n            // !!! on the way out to call after valueExpr test\n            if (\"semActs\" in m.stack[mis].c) {\n              const errors = semActHandler.dispatchAll(m.stack[mis].c.semActs, \"???\", ptr);\n              if (errors.length)\n                throw errors;\n            }\n            if (ret && \"semActs\" in expr) { ret.semActs = expr.semActs; }\n          } else {\n            ptr = ptr.solutions;\n          }\n          if (m.stack[mis].i !== last[mis].i) {\n            t = [];\n            ptr[m.stack[mis].i] = {\n              type:m.stack[mis].c.type === \"EachOf\" ? \"EachOfSolution\" : \"OneOfSolution\",\n              expressions: t};\n            ptr = t;\n            last[mis].e = null;\n          } else {\n            ptr = ptr[last[mis].i].expressions;\n          }\n          if (m.stack[mis].e !== last[mis].e) {\n            t = {};\n            ptr[m.stack[mis].e] = t;\n            if (m.stack[mis].e > 0 && ptr[m.stack[mis].e-1] === undefined && skips.indexOf(ptr) === -1)\n              skips.push(ptr);\n            ptr = t;\n            last.length = mis + 1; // chop off last so we create everything underneath\n          } else {\n            throw \"how'd we get here?\"\n            ptr = ptr[last[mis].e];\n          }\n          ++mis;\n        }\n        ptr.type = \"TripleConstraintSolutions\";\n        if (\"min\" in m.c)\n          ptr.min = m.c.min;\n        if (\"max\" in m.c)\n          ptr.max = m.c.max;\n        ptr.predicate = m.c.predicate;\n        if (\"valueExpr\" in m.c)\n          ptr.valueExpr = m.c.valueExpr;\n        if (\"productionLabel\" in m.c)\n          ptr.productionLabel = m.c.productionLabel;\n        ptr.solutions = m.triples.map(tno => {\n          var triple = neighborhood[tno];\n          var ret = {\n            type: \"TestedTriple\",\n            subject: triple.subject,\n            predicate: triple.predicate,\n            object: ldify(triple.object)\n          };\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n          function diver (focus, shape, dive) {\n            var sub = dive(focus, shape);\n            if (\"errors\" in sub) {\n              // console.dir(sub);\n              var err = {\n                type: \"ReferenceError\", focus: focus,\n                shape: shape, errors: sub\n              };\n              if (typeof shapeLabel === \"string\" && RdfTerm.isBlank(shapeLabel))\n                err.referencedShape = shape;\n              return [err];\n            }\n            if ((\"solution\" in sub || \"solutions\" in sub) && Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                sub.type === \"Recursion\")\n              ret.referenced = sub; // !!! needs to aggregate errors and solutions\n            return [];\n          }\n          function diveRecurse (focus, shapeLabel) {\n            return diver(focus, shapeLabel, recurse);\n          }\n          function diveDirect (focus, shapeLabel) {\n            return diver(focus, shapeLabel, direct);\n          }\n          if (\"valueExpr\" in ptr)\n            errors = errors.concat(checkValueExpr(ptr.inverse ? triple.subject : triple.object, ptr.valueExpr, diveRecurse, diveDirect));\n\n          if (errors.length === 0 && \"semActs\" in m.c)\n            [].push.apply(errors, semActHandler.dispatchAll(m.c.semActs, triple, ret));\n          return ret;\n        })\n        if (\"annotations\" in m.c)\n          ptr.annotations = m.c.annotations;\n        if (\"semActs\" in m.c)\n          ptr.semActs = m.c.semActs;\n        last = m.stack.slice();\n        return out;\n      }, {});\n\n      if (errors.length)\n        return {\n          type: \"SemActFailure\",\n          errors: errors\n        };\n\n      // Clear out the nulls for the expressions with min:0 and no matches.\n      // <S> { (:p .; :q .)?; :r . } \\ { <s> :r 1 } -> i:0, e:1 resulting in null at e=0\n      // Maybe we want these nulls in expressions[] to make it clear that there are holes?\n      skips.forEach(skip => {\n        for (var exprNo = 0; exprNo < skip.length; ++exprNo)\n          if (skip[exprNo] === null || skip[exprNo] === undefined)\n            skip.splice(exprNo--, 1);\n      });\n\n      if (\"semActs\" in shape)\n        ret.semActs = shape.semActs;\n      return ret;\n    }\n  }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n// ## Exports\n\nreturn exports = {\n  name: \"nfax-val-1err\",\n  description: \"simple regular expression engine with n out states\",\n  compile: compileNFA\n};\n\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = NFAXVal1Err;\n"
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "index": 20,
          "index2": 40,
          "size": 10480,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "@shexjs/api",
              "loc": "4:9-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "// **ShExLoader** return promise to load ShExC, ShExJ and N3 (Turtle) files.\n\nvar ShExApi = function (config) {\n\n  var ShEx = require(\"@shexjs/core\");\n  var ShExUtil = ShEx.Util;\n  var ShExParser = require(\"@shexjs/parser\");\n\n  const api = { load: LoadPromise, loadExtensions: LoadExtensions, GET: GET, loadShExImports_NotUsed: loadShExImports_NotUsed };\n  return api\n  \n  async function GET (url, mediaType) {\n    var m;\n    return (m = url.match(\"^data:([^,]+),(.*)$\"))\n      ? Promise.resolve({text: m[2], url: m[0]}) // Read from data: URL\n      : (url.match(\"^(blob:)?[a-z]+://.\"))\n      ? myHttpRequest(url, mediaType) // whatever fetch handles\n      : (() => { throw Error(`Don't know how to fetch ${url}`) })()\n\n    async function myHttpRequest(url, mediaType) {\n      if (typeof config.fetch !== \"function\")\n        throw Error(`Unable to fetch ${url} with fetch=${config.fetch}`)\n      let resp\n      try {\n        resp = await config.fetch(url, {\n          headers: {\n            'Accept': 'text/shex,text/turtle,*/*'\n          }\n        })\n      } catch (e) {\n        // DNS failure\n        // no route to host\n        // connection refused\n        throw Error(`GET <${url}> network failure: ${e.message}`)\n      }\n      if (!resp.ok)\n        throw Error(`GET <${url}> failed: ${resp.status} ${resp.statusText}`)\n      const text = await resp.text()\n      return {text, url}\n    }\n  }\n\n  function loadList (src, metaList, mediaType, parserWrapper, target, options, loadImports) {\n    return src.map(\n      async p =>\n        typeof p === \"object\" ? mergeSchema(p) : await loadParseMergeSchema(p)\n    )\n\n    async function mergeSchema (obj) {\n      var meta = addMeta(obj.url, mediaType)\n      try {\n        ShExUtil.merge(target, obj.schema, true, true)\n        meta._prefixes = target._prefixes || {}\n        meta.base = target._base\n        loadImports(obj.schema)\n        return [mediaType, obj.url]\n      } catch (e) {\n        var e2 = Error(\"error merging schema object \" + obj.schema + \": \" + e)\n        e2.stack = e.stack\n        throw e2\n      }\n    }\n\n    async function loadParseMergeSchema (p) {\n      return api.GET(p, mediaType).then(function (loaded) {\n        return parserWrapper(loaded.text, mediaType, loaded.url, target,\n                             addMeta(loaded.url, mediaType), options, loadImports)\n      })\n    }\n\n    function addMeta (url, mediaType) {\n      var meta = {\n        mediaType: mediaType,\n        url: url,\n        base: url,\n        prefixes: {}\n      }\n      metaList.push(meta)\n      return meta\n    }\n  }\n\n  /* LoadPromise - load shex and json files into a single Schema and turtle into\n   * a graph (Data).\n   */\n  async function LoadPromise (shex, json, turtle, jsonld, schemaOptions = {}, dataOptions = {}) {\n    var returns = {\n      schema: ShExUtil.emptySchema(),\n      data: new config.rdfjs.Store(),\n      schemaMeta: [],\n      dataMeta: []\n    }\n    var promises = []\n    var schemasSeen = shex.concat(json).map(p => {\n      // might be already loaded objects with a url property.\n      return typeof p === \"object\" ? p.url : p\n    })\n    var transform = null\n    if (schemaOptions && \"iriTransform\" in schemaOptions) {\n      transform = schemaOptions.iriTransform\n      delete schemaOptions.iriTransform\n    }\n\n    var allLoaded = DynamicPromise()\n    function loadImports (schema) {\n      if (!(\"imports\" in schema))\n        return schema\n      if (schemaOptions.keepImports) {\n        return schema\n      }\n      var ret = Object.assign({}, schema)\n      var imports = ret.imports\n      delete ret.imports\n      schema.imports.map(function (i) {\n        return transform ? transform(i) : i\n      }).filter(function (i) {\n        return schemasSeen.indexOf(i) === -1\n      }).map(i => {\n        schemasSeen.push(i)\n        allLoaded.add(api.GET(i).then(function (loaded) {\n          var meta = {\n            // mediaType: mediaType,\n            url: loaded.url,\n            base: loaded.url,\n            prefixes: {}\n          }\n          // metaList.push(meta)\n          return parseShExC(loaded.text, \"text/shex\", loaded.url,\n                            returns.schema, meta, schemaOptions, loadImports)\n        })); // addAfter would be after invoking schema.\n      })\n      return ret\n    }\n\n    // gather all the potentially remote inputs\n    promises = promises.\n      concat(loadList(shex, returns.schemaMeta, \"text/shex\",\n                      parseShExC, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(json, returns.schemaMeta, \"text/json\",\n                      parseShExJ, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(turtle, returns.dataMeta, \"text/turtle\",\n                      parseTurtle, returns.data, dataOptions)).\n      concat(loadList(jsonld, returns.dataMeta, \"application/ld+json\",\n                      parseJSONLD, returns.data, dataOptions))\n    return allLoaded.all(promises).then(function (resources) {\n      if (returns.schemaMeta.length > 0)\n        ShExUtil.isWellDefined(returns.schema)\n      return returns\n    })\n  }\n\n  function DynamicPromise () {\n    var promises = []\n    var results = []\n    var completedPromises = 0\n    var resolveSelf, rejectSelf\n    var self = new Promise(function (resolve, reject) {\n      resolveSelf = resolve; rejectSelf = reject\n    })\n    self.all = function (pz) {\n      pz.forEach(function (promise, index) {\n        promises.push(promise)\n        addThen(promise, index)\n      })\n      return self\n    }\n    self.add = function (promise) {\n      promises.push(promise)\n      addThen(promise, promises.length - 1)\n      return self\n    }\n    return self\n\n    function addThen (promise, index) {\n      promise.then(function (value) {\n        results[index] = value\n        ++completedPromises\n        if(completedPromises === promises.length) {\n          resolveSelf(results)\n        }\n      }).catch(function (error) {\n        rejectSelf(error)\n      })\n    }\n  }\n\n  function parseShExC (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    var parser = schemaOptions && \"parser\" in schemaOptions ?\n        schemaOptions.parser :\n        ShExParser.construct(url, {}, schemaOptions)\n    try {\n      var s = parser.parse(text)\n      // !! horrible hack until I set a variable to know if there's a BASE.\n      if (s.base === url) delete s.base\n      meta.prefixes = s._prefixes || {}\n      meta.base = s._base || meta.base\n      ShExUtil.merge(schema, loadImports(s), false, true)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      e.message = \"error parsing ShEx \" + url + \": \" + e.message\n      return Promise.reject(e)\n    }\n  }\n\n  function loadShExImports_NotUsed (from, parser, transform) {\n    var schemasSeen = [from]\n    var ret = { type: \"Schema\" }\n    return api.GET(from).then(load999Imports).then(function () {\n      ShExUtil.isWellDefined(ret)\n      return ret\n    })\n    function load999Imports (loaded) {\n      var schema = parser.parse(loaded.text)\n      var imports = schema.imports\n      delete schema.imports\n      ShExUtil.merge(ret, schema, false, true)\n      if (imports) {\n        var rest = imports\n            .map(function (i) {\n              return transform ? transform(i) : i\n            }).\n            filter(function (i) {\n              return schemasSeen.indexOf(i) === -1\n            })\n        return Promise.all(rest.map(i => {\n          schemasSeen.push(i)\n          return api.GET(i).then(load999Imports)\n        })).then(a => {\n          return null\n        })\n      } else {\n        return null\n      }\n    }\n  }\n\n  function parseShExJ (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    try {\n      var s = ShExUtil.ShExJtoAS(JSON.parse(text))\n      ShExUtil.merge(schema, s, true, true)\n      meta.prefixes = schema._prefixes\n      meta.base = schema.base\n      loadImports(s)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      var e2 = Error(\"error parsing JSON \" + url + \": \" + e)\n      // e2.stack = e.stack\n      return Promise.reject(e2)\n    }\n  }\n\n  function parseTurtle (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"}).\n        parse(text,\n              function (error, triple, prefixes) {\n                if (prefixes) {\n                  meta.prefixes = prefixes\n                  // data.addPrefixes(prefixes)\n                }\n                if (error) {\n                  reject(\"error parsing \" + url + \": \" + error)\n                } else if (triple) {\n                  data.addQuad(triple)\n                } else {\n                  meta.base = this._base\n                  resolve([mediaType, url])\n                }\n              })\n    })\n  }\n\n  /* parseTurtle999 - a variant of parseTurtle with no callback.\n   * so, which is \"better\"?\n   */\n  function parseTurtle999 (text, mediaType, url, data, meta, dataOptions) {\n    try {\n      var p = new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"})\n      var triples = p.parse(text)\n      meta.prefixes = p._prefixes\n      meta.base = p._base\n      data.addPrefixes(p._prefixes)\n      data.addTriples(triples)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      return Promise.reject(Error(\"error parsing \" + url + \": \" + e))\n    }\n  }\n\n  function parseJSONLD (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      var struct = JSON.parse(text)\n      config.jsonld.toRDF(struct, {format: \"application/nquads\", base: url}, function (lderr, nquads) {\n        if (lderr) {\n          reject(\"error parsing JSON-ld \" + url + \": \" + lderr)\n        } else {\n          meta.prefixes = {}; // @@ take from @context?\n          meta.base = url;    // @@ take from @context.base? (or vocab?)\n          resolve(parseTurtle(nquads, mediaType, url, data, meta))\n        }\n      })\n    })\n  }\n\n  function LoadExtensions (globs) {\n    return globs.reduce(\n      (list, glob) =>\n        list.concat(require(\"glob\").glob.sync(glob))\n      , []).\n      reduce(function (ret, path) {\n        try {\n\t  var t = require(path)\n\t  ret[t.url] = t\n\t  return ret\n        } catch (e) {\n\t  console.warn(\"ShEx extension \\\"\" + moduleDir + \"\\\" not loadable: \" + e)\n\t  return ret\n        }\n      }, {})\n  }\n\n}\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExApi\n"
        },
        {
          "id": 48,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "index": 22,
          "index2": 19,
          "size": 222161,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "issuerId": 23,
          "issuerName": "../shex-parser/shex-parser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 23,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "name": "../shex-parser/shex-parser.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 113,
            "building": 140,
            "dependencies": 106
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 23,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
              "module": "../shex-parser/shex-parser.js",
              "moduleName": "../shex-parser/shex-parser.js",
              "type": "cjs require",
              "userRequest": "./lib/ShExJison",
              "loc": "5:14-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShExJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[7,18,19,20,21,23,26,189,211,212],$V1=[1,25],$V2=[1,29],$V3=[1,24],$V4=[1,28],$V5=[1,27],$V6=[2,12],$V7=[2,13],$V8=[2,14],$V9=[7,18,19,20,21,23,26,211,212],$Va=[1,35],$Vb=[1,38],$Vc=[1,37],$Vd=[2,18],$Ve=[2,19],$Vf=[19,21,65,67,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vg=[2,57],$Vh=[1,47],$Vi=[1,48],$Vj=[1,49],$Vk=[19,21,35,39,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vl=[2,234],$Vm=[2,235],$Vn=[1,51],$Vo=[1,54],$Vp=[1,53],$Vq=[2,256],$Vr=[2,257],$Vs=[2,260],$Vt=[2,258],$Vu=[2,259],$Vv=[2,15],$Vw=[2,17],$Vx=[19,21,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vy=[1,72],$Vz=[2,26],$VA=[2,27],$VB=[2,28],$VC=[115,121,123,185,215],$VD=[2,135],$VE=[1,98],$VF=[1,106],$VG=[1,84],$VH=[1,89],$VI=[1,90],$VJ=[1,91],$VK=[1,97],$VL=[1,102],$VM=[1,103],$VN=[1,104],$VO=[1,107],$VP=[1,108],$VQ=[1,109],$VR=[1,110],$VS=[1,111],$VT=[1,112],$VU=[1,94],$VV=[1,105],$VW=[2,58],$VX=[1,114],$VY=[1,115],$VZ=[1,116],$V_=[1,122],$V$=[1,123],$V01=[47,49],$V11=[2,87],$V21=[2,88],$V31=[189,191],$V41=[1,138],$V51=[1,141],$V61=[1,140],$V71=[2,16],$V81=[7,18,19,20,21,23,26,47,211,212],$V91=[2,43],$Va1=[7,18,19,20,21,23,26,47,49,211,212],$Vb1=[2,50],$Vc1=[2,32],$Vd1=[2,65],$Ve1=[2,70],$Vf1=[2,67],$Vg1=[1,175],$Vh1=[1,176],$Vi1=[1,177],$Vj1=[1,180],$Vk1=[1,183],$Vl1=[2,73],$Vm1=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,186,189,211,212,215],$Vn1=[2,91],$Vo1=[7,18,19,20,21,23,26,47,49,186,189,211,212],$Vp1=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,186,189,211,212],$Vq1=[7,18,19,20,21,23,26,47,49,75,76,77,97,98,99,100,115,121,123,185,186,189,211,212,215],$Vr1=[2,104],$Vs1=[2,103],$Vt1=[7,18,19,20,21,23,26,47,49,97,98,99,100,108,109,110,111,112,113,186,189,211,212],$Vu1=[2,98],$Vv1=[2,97],$Vw1=[1,198],$Vx1=[1,200],$Vy1=[1,202],$Vz1=[1,201],$VA1=[2,108],$VB1=[2,109],$VC1=[2,110],$VD1=[2,106],$VE1=[2,233],$VF1=[19,21,67,77,96,104,105,159,181,200,201,202,203,204,205,206,207,208,209,211],$VG1=[2,179],$VH1=[7,18,19,20,21,23,26,47,49,108,109,110,111,112,113,186,189,211,212],$VI1=[2,100],$VJ1=[2,114],$VK1=[1,210],$VL1=[1,211],$VM1=[1,212],$VN1=[1,213],$VO1=[96,104,105,202,203,204,205],$VP1=[2,31],$VQ1=[2,35],$VR1=[2,38],$VS1=[2,41],$VT1=[2,89],$VU1=[2,225],$VV1=[2,226],$VW1=[2,227],$VX1=[1,261],$VY1=[1,266],$VZ1=[1,247],$V_1=[1,252],$V$1=[1,253],$V02=[1,254],$V12=[1,260],$V22=[1,257],$V32=[1,265],$V42=[1,268],$V52=[1,269],$V62=[1,270],$V72=[1,276],$V82=[1,277],$V92=[2,20],$Va2=[2,49],$Vb2=[2,56],$Vc2=[2,61],$Vd2=[2,64],$Ve2=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,211,212],$Vf2=[2,83],$Vg2=[2,84],$Vh2=[2,29],$Vi2=[2,33],$Vj2=[2,69],$Vk2=[2,66],$Vl2=[2,71],$Vm2=[2,68],$Vn2=[7,18,19,20,21,23,26,47,49,97,98,99,100,186,189,211,212],$Vo2=[1,322],$Vp2=[1,330],$Vq2=[1,331],$Vr2=[1,332],$Vs2=[1,338],$Vt2=[1,339],$Vu2=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,189,211,212,215],$Vv2=[2,223],$Vw2=[7,18,19,20,21,23,26,47,49,189,211,212],$Vx2=[1,347],$Vy2=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,189,211,212],$Vz2=[2,102],$VA2=[2,107],$VB2=[2,94],$VC2=[1,357],$VD2=[2,95],$VE2=[2,96],$VF2=[2,101],$VG2=[19,21,65,156,195,211],$VH2=[2,163],$VI2=[2,137],$VJ2=[1,372],$VK2=[1,371],$VL2=[1,377],$VM2=[1,381],$VN2=[1,380],$VO2=[1,379],$VP2=[1,386],$VQ2=[1,389],$VR2=[1,385],$VS2=[1,388],$VT2=[19,21,211,212],$VU2=[1,400],$VV2=[1,406],$VW2=[1,395],$VX2=[1,399],$VY2=[1,409],$VZ2=[1,410],$V_2=[1,411],$V$2=[1,398],$V03=[1,412],$V13=[1,413],$V23=[1,418],$V33=[1,419],$V43=[1,420],$V53=[1,421],$V63=[1,414],$V73=[1,415],$V83=[1,416],$V93=[1,417],$Va3=[1,405],$Vb3=[2,113],$Vc3=[2,118],$Vd3=[2,120],$Ve3=[2,121],$Vf3=[2,122],$Vg3=[2,248],$Vh3=[2,249],$Vi3=[2,250],$Vj3=[2,251],$Vk3=[2,119],$Vl3=[2,30],$Vm3=[2,39],$Vn3=[2,36],$Vo3=[2,42],$Vp3=[2,37],$Vq3=[1,453],$Vr3=[2,40],$Vs3=[1,489],$Vt3=[1,522],$Vu3=[1,523],$Vv3=[1,524],$Vw3=[1,527],$Vx3=[2,44],$Vy3=[2,51],$Vz3=[2,60],$VA3=[2,62],$VB3=[2,72],$VC3=[47,49,66],$VD3=[1,587],$VE3=[47,49,66,75,76,77,115,121,123,185,186,189,215],$VF3=[47,49,66,186,189],$VG3=[47,49,66,92,93,94,97,98,99,100,186,189],$VH3=[47,49,66,75,76,77,97,98,99,100,115,121,123,185,186,189,215],$VI3=[47,49,66,97,98,99,100,108,109,110,111,112,113,186,189],$VJ3=[47,49,66,108,109,110,111,112,113,186,189],$VK3=[47,66],$VL3=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,211,212,215],$VM3=[2,93],$VN3=[2,92],$VO3=[2,222],$VP3=[1,629],$VQ3=[1,632],$VR3=[1,628],$VS3=[1,631],$VT3=[2,90],$VU3=[2,130],$VV3=[2,105],$VW3=[2,99],$VX3=[2,111],$VY3=[2,112],$VZ3=[2,142],$V_3=[2,143],$V$3=[1,649],$V04=[2,144],$V14=[117,131],$V24=[2,149],$V34=[2,150],$V44=[2,152],$V54=[1,652],$V64=[1,653],$V74=[19,21,195,211],$V84=[2,171],$V94=[1,661],$Va4=[117,131,136,137],$Vb4=[2,161],$Vc4=[19,21,115,121,123,185,211,212,215],$Vd4=[19,21,115,121,123,185,195,211,215],$Ve4=[2,231],$Vf4=[2,232],$Vg4=[2,178],$Vh4=[1,696],$Vi4=[19,21,67,77,96,104,105,159,174,181,200,201,202,203,204,205,206,207,208,209,211],$Vj4=[2,228],$Vk4=[2,229],$Vl4=[2,230],$Vm4=[2,241],$Vn4=[2,244],$Vo4=[2,238],$Vp4=[2,239],$Vq4=[2,240],$Vr4=[2,246],$Vs4=[2,247],$Vt4=[2,252],$Vu4=[2,253],$Vv4=[2,254],$Vw4=[2,255],$Vx4=[19,21,67,77,96,104,105,107,159,174,181,200,201,202,203,204,205,206,207,208,209,211],$Vy4=[1,728],$Vz4=[1,775],$VA4=[1,830],$VB4=[1,840],$VC4=[1,876],$VD4=[1,912],$VE4=[2,63],$VF4=[47,49,66,97,98,99,100,186,189],$VG4=[47,49,66,75,76,77,115,121,123,185,189,215],$VH4=[47,49,66,189],$VI4=[1,934],$VJ4=[47,49,66,92,93,94,97,98,99,100,189],$VK4=[1,944],$VL4=[1,981],$VM4=[1,1017],$VN4=[2,224],$VO4=[1,1028],$VP4=[1,1034],$VQ4=[1,1033],$VR4=[19,21,96,104,105,200,201,202,203,204,205,206,207,208,209,211],$VS4=[1,1054],$VT4=[1,1060],$VU4=[1,1059],$VV4=[1,1080],$VW4=[1,1086],$VX4=[1,1085],$VY4=[2,131],$VZ4=[2,145],$V_4=[2,147],$V$4=[2,151],$V05=[2,153],$V15=[2,154],$V25=[2,158],$V35=[2,160],$V45=[2,165],$V55=[2,166],$V65=[1,1112],$V75=[1,1115],$V85=[1,1111],$V95=[1,1114],$Va5=[1,1125],$Vb5=[2,218],$Vc5=[2,236],$Vd5=[2,237],$Ve5=[1,1127],$Vf5=[1,1129],$Vg5=[1,1131],$Vh5=[19,21,67,77,96,104,105,159,175,181,200,201,202,203,204,205,206,207,208,209,211],$Vi5=[1,1135],$Vj5=[1,1141],$Vk5=[1,1144],$Vl5=[1,1145],$Vm5=[1,1146],$Vn5=[1,1134],$Vo5=[1,1147],$Vp5=[1,1148],$Vq5=[1,1153],$Vr5=[1,1154],$Vs5=[1,1155],$Vt5=[1,1156],$Vu5=[1,1149],$Vv5=[1,1150],$Vw5=[1,1151],$Vx5=[1,1152],$Vy5=[1,1140],$Vz5=[2,242],$VA5=[2,245],$VB5=[2,123],$VC5=[1,1186],$VD5=[1,1192],$VE5=[1,1224],$VF5=[1,1230],$VG5=[1,1289],$VH5=[1,1336],$VI5=[47,49,66,75,76,77,115,121,123,185,215],$VJ5=[47,49,66,92,93,94,97,98,99,100],$VK5=[1,1412],$VL5=[1,1459],$VM5=[2,219],$VN5=[2,220],$VO5=[2,221],$VP5=[7,18,19,20,21,23,26,47,49,75,76,77,107,115,121,123,185,186,189,211,212,215],$VQ5=[7,18,19,20,21,23,26,47,49,107,186,189,211,212],$VR5=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,107,186,189,211,212],$VS5=[2,148],$VT5=[2,146],$VU5=[2,155],$VV5=[2,159],$VW5=[2,156],$VX5=[2,157],$VY5=[19,21,39,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$VZ5=[1,1519],$V_5=[66,131],$V$5=[1,1522],$V06=[1,1523],$V16=[66,131,136,137],$V26=[2,201],$V36=[1,1539],$V46=[19,21,67,77,96,104,105,159,174,175,181,200,201,202,203,204,205,206,207,208,209,211],$V56=[19,21,67,77,96,104,105,107,159,174,175,181,200,201,202,203,204,205,206,207,208,209,211],$V66=[2,243],$V76=[1,1577],$V86=[1,1643],$V96=[1,1649],$Va6=[1,1648],$Vb6=[1,1669],$Vc6=[1,1675],$Vd6=[1,1674],$Ve6=[1,1695],$Vf6=[1,1701],$Vg6=[1,1700],$Vh6=[1,1742],$Vi6=[1,1748],$Vj6=[1,1780],$Vk6=[1,1786],$Vl6=[1,1801],$Vm6=[1,1807],$Vn6=[1,1806],$Vo6=[1,1827],$Vp6=[1,1833],$Vq6=[1,1832],$Vr6=[1,1853],$Vs6=[1,1859],$Vt6=[1,1858],$Vu6=[1,1900],$Vv6=[1,1906],$Vw6=[1,1938],$Vx6=[1,1944],$Vy6=[117,131,136,137,186,189],$Vz6=[2,168],$VA6=[1,1962],$VB6=[1,1963],$VC6=[1,1964],$VD6=[1,1965],$VE6=[117,131,136,137,152,153,154,155,186,189],$VF6=[2,34],$VG6=[47,117,131,136,137,152,153,154,155,186,189],$VH6=[2,47],$VI6=[47,49,117,131,136,137,152,153,154,155,186,189],$VJ6=[2,54],$VK6=[1,1994],$VL6=[1,2031],$VM6=[1,2064],$VN6=[1,2070],$VO6=[1,2069],$VP6=[1,2090],$VQ6=[1,2096],$VR6=[1,2095],$VS6=[1,2117],$VT6=[1,2123],$VU6=[1,2122],$VV6=[1,2144],$VW6=[1,2150],$VX6=[1,2149],$VY6=[1,2170],$VZ6=[1,2176],$V_6=[1,2175],$V$6=[1,2197],$V07=[1,2203],$V17=[1,2202],$V27=[1,2272],$V37=[47,49,66,75,76,77,107,115,121,123,185,186,189,215],$V47=[47,49,66,107,186,189],$V57=[47,49,66,92,93,94,97,98,99,100,107,186,189],$V67=[1,2386],$V77=[2,169],$V87=[2,173],$V97=[2,174],$Va7=[2,175],$Vb7=[2,176],$Vc7=[2,45],$Vd7=[2,52],$Ve7=[2,59],$Vf7=[2,79],$Vg7=[2,75],$Vh7=[2,81],$Vi7=[1,2469],$Vj7=[2,78],$Vk7=[47,49,75,76,77,97,98,99,100,115,117,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vl7=[47,49,75,76,77,115,117,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vm7=[47,49,97,98,99,100,108,109,110,111,112,113,117,131,136,137,152,153,154,155,186,189],$Vn7=[47,49,92,93,94,97,98,99,100,117,131,136,137,152,153,154,155,186,189],$Vo7=[2,85],$Vp7=[2,86],$Vq7=[47,49,108,109,110,111,112,113,117,131,136,137,152,153,154,155,186,189],$Vr7=[1,2523],$Vs7=[1,2529],$Vt7=[1,2612],$Vu7=[1,2645],$Vv7=[1,2651],$Vw7=[1,2650],$Vx7=[1,2671],$Vy7=[1,2677],$Vz7=[1,2676],$VA7=[1,2698],$VB7=[1,2704],$VC7=[1,2703],$VD7=[1,2725],$VE7=[1,2731],$VF7=[1,2730],$VG7=[1,2751],$VH7=[1,2757],$VI7=[1,2756],$VJ7=[1,2778],$VK7=[1,2784],$VL7=[1,2783],$VM7=[1,2825],$VN7=[1,2858],$VO7=[1,2864],$VP7=[1,2863],$VQ7=[1,2884],$VR7=[1,2890],$VS7=[1,2889],$VT7=[1,2911],$VU7=[1,2917],$VV7=[1,2916],$VW7=[1,2938],$VX7=[1,2944],$VY7=[1,2943],$VZ7=[1,2964],$V_7=[1,2970],$V$7=[1,2969],$V08=[1,2991],$V18=[1,2997],$V28=[1,2996],$V38=[117,131,136,137,189],$V48=[1,3016],$V58=[2,48],$V68=[2,55],$V78=[2,74],$V88=[2,80],$V98=[2,76],$Va8=[2,82],$Vb8=[47,49,97,98,99,100,117,131,136,137,152,153,154,155,186,189],$Vc8=[1,3040],$Vd8=[66,131,136,137,186,189],$Ve8=[1,3049],$Vf8=[1,3050],$Vg8=[1,3051],$Vh8=[1,3052],$Vi8=[66,131,136,137,152,153,154,155,186,189],$Vj8=[47,66,131,136,137,152,153,154,155,186,189],$Vk8=[47,49,66,131,136,137,152,153,154,155,186,189],$Vl8=[1,3081],$Vm8=[1,3150],$Vn8=[1,3156],$Vo8=[1,3236],$Vp8=[1,3242],$Vq8=[2,170],$Vr8=[2,46],$Vs8=[1,3330],$Vt8=[2,53],$Vu8=[1,3363],$Vv8=[2,77],$Vw8=[2,167],$Vx8=[1,3408],$Vy8=[47,49,66,75,76,77,97,98,99,100,115,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vz8=[47,49,66,75,76,77,115,121,123,131,136,137,152,153,154,155,185,186,189,215],$VA8=[47,49,66,97,98,99,100,108,109,110,111,112,113,131,136,137,152,153,154,155,186,189],$VB8=[47,49,66,92,93,94,97,98,99,100,131,136,137,152,153,154,155,186,189],$VC8=[47,49,66,108,109,110,111,112,113,131,136,137,152,153,154,155,186,189],$VD8=[1,3439],$VE8=[1,3445],$VF8=[1,3444],$VG8=[1,3465],$VH8=[1,3471],$VI8=[1,3470],$VJ8=[1,3492],$VK8=[1,3498],$VL8=[1,3497],$VM8=[1,3596],$VN8=[1,3602],$VO8=[1,3601],$VP8=[1,3637],$VQ8=[1,3679],$VR8=[66,131,136,137,189],$VS8=[1,3709],$VT8=[47,49,66,97,98,99,100,131,136,137,152,153,154,155,186,189],$VU8=[1,3733],$VV8=[1,3769],$VW8=[1,3775],$VX8=[1,3774],$VY8=[1,3795],$VZ8=[1,3801],$V_8=[1,3800],$V$8=[1,3822],$V09=[1,3828],$V19=[1,3827],$V29=[1,3849],$V39=[1,3855],$V49=[1,3854],$V59=[1,3875],$V69=[1,3881],$V79=[1,3880],$V89=[1,3902],$V99=[1,3908],$Va9=[1,3907],$Vb9=[107,117,131,136,137,186,189],$Vc9=[1,3950],$Vd9=[1,3974],$Ve9=[1,4016],$Vf9=[1,4049],$Vg9=[1,4154],$Vh9=[1,4197],$Vi9=[1,4203],$Vj9=[1,4202],$Vk9=[1,4238],$Vl9=[1,4280],$Vm9=[1,4336],$Vn9=[66,107,131,136,137,186,189],$Vo9=[1,4391],$Vp9=[1,4415],$Vq9=[1,4445],$Vr9=[1,4491],$Vs9=[1,4563],$Vt9=[1,4612];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shexDoc\":3,\"initParser\":4,\"Qdirective_E_Star\":5,\"Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt\":6,\"EOF\":7,\"directive\":8,\"O_QnotStartAction_E_Or_QstartActions_E_C\":9,\"notStartAction\":10,\"startActions\":11,\"Qstatement_E_Star\":12,\"statement\":13,\"O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C\":14,\"baseDecl\":15,\"prefixDecl\":16,\"importDecl\":17,\"IT_BASE\":18,\"IRIREF\":19,\"IT_PREFIX\":20,\"PNAME_NS\":21,\"iri\":22,\"IT_IMPORT\":23,\"start\":24,\"shapeExprDecl\":25,\"IT_start\":26,\"=\":27,\"shapeAnd\":28,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star\":29,\"QcodeDecl_E_Plus\":30,\"codeDecl\":31,\"shapeExprLabel\":32,\"O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C\":33,\"shapeExpression\":34,\"IT_EXTERNAL\":35,\"QIT_NOT_E_Opt\":36,\"shapeAtomNoRef\":37,\"QshapeOr_E_Opt\":38,\"IT_NOT\":39,\"shapeRef\":40,\"shapeOr\":41,\"inlineShapeExpression\":42,\"inlineShapeOr\":43,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus\":44,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus\":45,\"O_QIT_OR_E_S_QshapeAnd_E_C\":46,\"IT_OR\":47,\"O_QIT_AND_E_S_QshapeNot_E_C\":48,\"IT_AND\":49,\"shapeNot\":50,\"inlineShapeAnd\":51,\"Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star\":52,\"O_QIT_OR_E_S_QinlineShapeAnd_E_C\":53,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star\":54,\"inlineShapeNot\":55,\"Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star\":56,\"O_QIT_AND_E_S_QinlineShapeNot_E_C\":57,\"shapeAtom\":58,\"inlineShapeAtom\":59,\"nonLitNodeConstraint\":60,\"QshapeOrRef_E_Opt\":61,\"litNodeConstraint\":62,\"shapeOrRef\":63,\"QnonLitNodeConstraint_E_Opt\":64,\"(\":65,\")\":66,\".\":67,\"shapeDefinition\":68,\"nonLitInlineNodeConstraint\":69,\"QinlineShapeOrRef_E_Opt\":70,\"litInlineNodeConstraint\":71,\"inlineShapeOrRef\":72,\"QnonLitInlineNodeConstraint_E_Opt\":73,\"inlineShapeDefinition\":74,\"ATPNAME_LN\":75,\"ATPNAME_NS\":76,\"@\":77,\"Qannotation_E_Star\":78,\"semanticActions\":79,\"annotation\":80,\"IT_LITERAL\":81,\"QxsFacet_E_Star\":82,\"datatype\":83,\"valueSet\":84,\"QnumericFacet_E_Plus\":85,\"xsFacet\":86,\"numericFacet\":87,\"nonLiteralKind\":88,\"QstringFacet_E_Star\":89,\"QstringFacet_E_Plus\":90,\"stringFacet\":91,\"IT_IRI\":92,\"IT_BNODE\":93,\"IT_NONLITERAL\":94,\"stringLength\":95,\"INTEGER\":96,\"REGEXP\":97,\"IT_LENGTH\":98,\"IT_MINLENGTH\":99,\"IT_MAXLENGTH\":100,\"numericRange\":101,\"rawNumeric\":102,\"numericLength\":103,\"DECIMAL\":104,\"DOUBLE\":105,\"string\":106,\"^^\":107,\"IT_MININCLUSIVE\":108,\"IT_MINEXCLUSIVE\":109,\"IT_MAXINCLUSIVE\":110,\"IT_MAXEXCLUSIVE\":111,\"IT_TOTALDIGITS\":112,\"IT_FRACTIONDIGITS\":113,\"Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star\":114,\"{\":115,\"QtripleExpression_E_Opt\":116,\"}\":117,\"O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C\":118,\"extension\":119,\"extraPropertySet\":120,\"IT_CLOSED\":121,\"tripleExpression\":122,\"IT_EXTRA\":123,\"Qpredicate_E_Plus\":124,\"predicate\":125,\"oneOfTripleExpr\":126,\"groupTripleExpr\":127,\"multiElementOneOf\":128,\"Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus\":129,\"O_QGT_PIPE_E_S_QgroupTripleExpr_E_C\":130,\"|\":131,\"singleElementGroup\":132,\"multiElementGroup\":133,\"unaryTripleExpr\":134,\"QGT_SEMI_E_Opt\":135,\",\":136,\";\":137,\"Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus\":138,\"O_QGT_SEMI_E_S_QunaryTripleExpr_E_C\":139,\"Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt\":140,\"O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C\":141,\"include\":142,\"O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C\":143,\"$\":144,\"tripleExprLabel\":145,\"tripleConstraint\":146,\"bracketedTripleExpr\":147,\"Qcardinality_E_Opt\":148,\"cardinality\":149,\"QsenseFlags_E_Opt\":150,\"senseFlags\":151,\"*\":152,\"+\":153,\"?\":154,\"REPEAT_RANGE\":155,\"^\":156,\"[\":157,\"QvalueSetValue_E_Star\":158,\"]\":159,\"valueSetValue\":160,\"iriRange\":161,\"literalRange\":162,\"languageRange\":163,\"O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C\":164,\"QiriExclusion_E_Plus\":165,\"iriExclusion\":166,\"QliteralExclusion_E_Plus\":167,\"literalExclusion\":168,\"QlanguageExclusion_E_Plus\":169,\"languageExclusion\":170,\"Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt\":171,\"QiriExclusion_E_Star\":172,\"O_QGT_TILDE_E_S_QiriExclusion_E_Star_C\":173,\"~\":174,\"-\":175,\"QGT_TILDE_E_Opt\":176,\"literal\":177,\"Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt\":178,\"QliteralExclusion_E_Star\":179,\"O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C\":180,\"LANGTAG\":181,\"Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt\":182,\"O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C\":183,\"QlanguageExclusion_E_Star\":184,\"&\":185,\"//\":186,\"O_Qiri_E_Or_Qliteral_E_C\":187,\"QcodeDecl_E_Star\":188,\"%\":189,\"O_QCODE_E_Or_QGT_MODULO_E_C\":190,\"CODE\":191,\"rdfLiteral\":192,\"numericLiteral\":193,\"booleanLiteral\":194,\"a\":195,\"blankNode\":196,\"langString\":197,\"Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt\":198,\"O_QGT_DTYPE_E_S_Qdatatype_E_C\":199,\"IT_true\":200,\"IT_false\":201,\"STRING_LITERAL1\":202,\"STRING_LITERAL_LONG1\":203,\"STRING_LITERAL2\":204,\"STRING_LITERAL_LONG2\":205,\"LANG_STRING_LITERAL1\":206,\"LANG_STRING_LITERAL_LONG1\":207,\"LANG_STRING_LITERAL2\":208,\"LANG_STRING_LITERAL_LONG2\":209,\"prefixedName\":210,\"PNAME_LN\":211,\"BLANK_NODE_LABEL\":212,\"O_QIT_EXTENDS_E_Or_QGT_AMP_E_C\":213,\"QshapeExprLabel_E_Plus\":214,\"IT_EXTENDS\":215,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",7:\"EOF\",18:\"IT_BASE\",19:\"IRIREF\",20:\"IT_PREFIX\",21:\"PNAME_NS\",23:\"IT_IMPORT\",26:\"IT_start\",27:\"=\",35:\"IT_EXTERNAL\",39:\"IT_NOT\",47:\"IT_OR\",49:\"IT_AND\",65:\"(\",66:\")\",67:\".\",75:\"ATPNAME_LN\",76:\"ATPNAME_NS\",77:\"@\",81:\"IT_LITERAL\",92:\"IT_IRI\",93:\"IT_BNODE\",94:\"IT_NONLITERAL\",96:\"INTEGER\",97:\"REGEXP\",98:\"IT_LENGTH\",99:\"IT_MINLENGTH\",100:\"IT_MAXLENGTH\",104:\"DECIMAL\",105:\"DOUBLE\",107:\"^^\",108:\"IT_MININCLUSIVE\",109:\"IT_MINEXCLUSIVE\",110:\"IT_MAXINCLUSIVE\",111:\"IT_MAXEXCLUSIVE\",112:\"IT_TOTALDIGITS\",113:\"IT_FRACTIONDIGITS\",115:\"{\",117:\"}\",121:\"IT_CLOSED\",123:\"IT_EXTRA\",131:\"|\",136:\",\",137:\";\",144:\"$\",152:\"*\",153:\"+\",154:\"?\",155:\"REPEAT_RANGE\",156:\"^\",157:\"[\",159:\"]\",174:\"~\",175:\"-\",181:\"LANGTAG\",185:\"&\",186:\"//\",189:\"%\",191:\"CODE\",195:\"a\",200:\"IT_true\",201:\"IT_false\",202:\"STRING_LITERAL1\",203:\"STRING_LITERAL_LONG1\",204:\"STRING_LITERAL2\",205:\"STRING_LITERAL_LONG2\",206:\"LANG_STRING_LITERAL1\",207:\"LANG_STRING_LITERAL_LONG1\",208:\"LANG_STRING_LITERAL2\",209:\"LANG_STRING_LITERAL_LONG2\",211:\"PNAME_LN\",212:\"BLANK_NODE_LABEL\",215:\"IT_EXTENDS\"},\nproductions_: [0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[10,1],[10,1],[24,4],[11,1],[30,1],[30,2],[13,1],[13,1],[25,2],[33,1],[33,1],[34,3],[34,3],[34,2],[38,0],[38,1],[42,1],[41,1],[41,2],[46,2],[44,1],[44,2],[48,2],[45,1],[45,2],[29,0],[29,2],[43,2],[53,2],[52,0],[52,2],[28,2],[54,0],[54,2],[51,2],[57,2],[56,0],[56,2],[50,2],[36,0],[36,1],[55,2],[58,2],[58,1],[58,2],[58,3],[58,1],[61,0],[61,1],[64,0],[64,1],[37,2],[37,1],[37,2],[37,3],[37,1],[59,2],[59,1],[59,2],[59,3],[59,1],[70,0],[70,1],[73,0],[73,1],[63,1],[63,1],[72,1],[72,1],[40,1],[40,1],[40,2],[62,3],[78,0],[78,2],[60,3],[71,2],[71,2],[71,2],[71,1],[82,0],[82,2],[85,1],[85,2],[69,2],[69,1],[89,0],[89,2],[90,1],[90,2],[88,1],[88,1],[88,1],[86,1],[86,1],[91,2],[91,1],[95,1],[95,1],[95,1],[87,2],[87,2],[102,1],[102,1],[102,1],[102,3],[101,1],[101,1],[101,1],[101,1],[103,1],[103,1],[68,3],[74,4],[118,1],[118,1],[118,1],[114,0],[114,2],[116,0],[116,1],[120,2],[124,1],[124,2],[122,1],[126,1],[126,1],[128,2],[130,2],[129,1],[129,2],[127,1],[127,1],[132,2],[135,0],[135,1],[135,1],[133,3],[139,2],[139,2],[138,1],[138,2],[134,2],[134,1],[143,2],[140,0],[140,1],[141,1],[141,1],[147,6],[148,0],[148,1],[146,6],[150,0],[150,1],[149,1],[149,1],[149,1],[149,1],[151,1],[84,3],[158,0],[158,2],[160,1],[160,1],[160,1],[160,2],[165,1],[165,2],[167,1],[167,2],[169,1],[169,2],[164,1],[164,1],[164,1],[161,2],[172,0],[172,2],[173,2],[171,0],[171,1],[166,3],[176,0],[176,1],[162,2],[179,0],[179,2],[180,2],[178,0],[178,1],[168,3],[163,2],[163,2],[184,0],[184,2],[183,2],[182,0],[182,1],[170,3],[142,2],[80,3],[187,1],[187,1],[79,1],[188,0],[188,2],[31,3],[190,1],[190,1],[177,1],[177,1],[177,1],[125,1],[125,1],[83,1],[32,1],[32,1],[145,1],[145,1],[193,1],[193,1],[193,1],[192,1],[192,2],[199,2],[198,0],[198,1],[194,1],[194,1],[106,1],[106,1],[106,1],[106,1],[197,1],[197,1],[197,1],[197,1],[22,1],[22,1],[210,1],[210,1],[196,1],[119,2],[213,1],[213,1],[214,1],[214,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n        let imports = Object.keys(Parser._imports).length ? { imports: Parser._imports } : {}\n        var startObj = Parser.start ? { start: Parser.start } : {};\n        var startActs = Parser.startActs ? { startActs: Parser.startActs } : {};\n        let shapes = Parser.shapes ? { shapes: Object.values(Parser.shapes) } : {};\n        var shexj = Object.assign(\n          { type: \"Schema\" }, imports, startActs, startObj, shapes\n        )\n        if (Parser.options.index) {\n          if (Parser._base !== null)\n            shexj._base = Parser._base;\n          shexj._prefixes = Parser._prefixes;\n          shexj._index = {\n            shapeExprs: Parser.shapes || new Map(),\n            tripleExprs: Parser.productions || new Map()\n          };\n          shexj._sourceMap = Parser._sourceMap;\n        }\n        return shexj;\n      \nbreak;\ncase 2:\n yy.parser.yy = { lexer: yy.lexer} ; \nbreak;\ncase 15:\n // t: @@\n        Parser._setBase(Parser._base === null ||\n                    absoluteIRI.test($$[$0].slice(1, -1)) ? $$[$0].slice(1, -1) : _resolveIRI($$[$0].slice(1, -1)));\n      \nbreak;\ncase 16:\n // t: ShExParser-test.js/with pre-defined prefixes\n        Parser._prefixes[$$[$0-1].slice(0, -1)] = $$[$0];\n      \nbreak;\ncase 17:\n // t: @@\n        Parser._imports.push($$[$0]);\n      \nbreak;\ncase 20:\n\n        if (Parser.start)\n          error(new Error(\"Parse error: start already defined\"), yy);\n        Parser.start = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]); // t: startInline\n      \nbreak;\ncase 21:\n\n        Parser.startActs = $$[$0]; // t: startCode1\n      \nbreak;\ncase 22:\nthis.$ = [$$[$0]] // t: startCode1;\nbreak;\ncase 23:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: startCode3;\nbreak;\ncase 26:\n // t: 1dot 1val1vsMinusiri3??\n        addShape($$[$0-1],  $$[$0], yy);\n      \nbreak;\ncase 27:\n\n        this.$ = nonest($$[$0]);\n      \nbreak;\ncase 28:\nthis.$ = { type: \"ShapeExternal\" };\nbreak;\ncase 29:\n\n        if ($$[$0-2])\n          $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) }; // t:@@\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 30:\n\n        $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) } // !!! opt\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 31:\n\n        $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n        delete $$[$0].needsAtom;\n        this.$ = $$[$0]; // { type: \"ShapeOr\", \"shapeExprs\": [$$[$0-1]].concat($$[$0]) };\n      \nbreak;\ncase 32: case 227: case 244:\nthis.$ = null;\nbreak;\ncase 33: case 37: case 40: case 46: case 53: case 184: case 243:\nthis.$ = $$[$0];\nbreak;\ncase 35:\n // returns a ShapeOr\n        var disjuncts = $$[$0].map(nonest);\n        this.$ = { type: \"ShapeOr\", shapeExprs: disjuncts, needsAtom: disjuncts }; // t: @@\n      \nbreak;\ncase 36:\n // returns a ShapeAnd\n        // $$[$0-1] could have implicit conjuncts and explicit nested ANDs (will have .nested: true)\n        $$[$0-1].filter(c => c.type === \"ShapeAnd\").length === $$[$0-1].length\n        var and = {\n          type: \"ShapeAnd\",\n          shapeExprs: $$[$0-1].reduce(\n            (acc, elt) =>\n              acc.concat(elt.type === 'ShapeAnd' && !elt.nested ? elt.shapeExprs : nonest(elt)), []\n          )\n        };\n        this.$ = $$[$0].length > 0 ? { type: \"ShapeOr\", shapeExprs: [and].concat($$[$0].map(nonest)) } : and; // t: @@\n        this.$.needsAtom = and.shapeExprs;\n      \nbreak;\ncase 38: case 41:\nthis.$ = [$$[$0]];\nbreak;\ncase 39: case 42: case 44: case 48: case 51: case 55:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 43: case 47: case 50: case 54:\nthis.$ = [];\nbreak;\ncase 45:\nthis.$ = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]);\nbreak;\ncase 49: case 52:\nthis.$ = shapeJunction(\"ShapeAnd\", $$[$0-1], $$[$0]) // t: @@;\nbreak;\ncase 56:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t:@@ */ : $$[$0];\nbreak;\ncase 57:\nthis.$ = false;\nbreak;\ncase 58:\nthis.$ = true;\nbreak;\ncase 59:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t: 1NOTNOTdot, 1NOTNOTIRI, 1NOTNOTvs */ : $$[$0];\nbreak;\ncase 60: case 69: case 74:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1];\nbreak;\ncase 62:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t: 1dotRef1 */ : $$[$0-1] // t:@@;\nbreak;\ncase 63: case 72: case 77:\nthis.$ = Object.assign($$[$0-1], {nested: true}) // t: 1val1vsMinusiri3;\nbreak;\ncase 64: case 73: case 78:\nthis.$ = EmptyShape // t: 1dot;\nbreak;\ncase 71:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t:@@ */ : $$[$0-1]\t // t: 1dotRef1 -- use _QnonLitNodeConstraint_E_Opt like below?;\nbreak;\ncase 76:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1] // t: !! look to 1dotRef1;\nbreak;\ncase 87:\n // t: 1dotRefLNex@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1), yy); // ShapeRef\n      \nbreak;\ncase 88:\n // t: 1dotRefNS1@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy), yy); // ShapeRef\n      \nbreak;\ncase 89:\nthis.$ = addSourceMap($$[$0], yy) // ShapeRef // t: 1dotRef1, 1dotRefSpaceLNex, 1dotRefSpaceNS1;\nbreak;\ncase 90: case 93:\n // t: !!\n        this.$ = $$[$0-2]\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !!\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !!\n      \nbreak;\ncase 91:\nthis.$ = [] // t: 1dot, 1dotAnnot3;\nbreak;\ncase 92:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotAnnot3;\nbreak;\ncase 94:\nthis.$ = extend({ type: \"NodeConstraint\", nodeKind: \"literal\" }, $$[$0]) // t: 1literalPattern;\nbreak;\ncase 95:\n\n        if (numericDatatypes.indexOf($$[$0-1]) === -1)\n          numericFacets.forEach(function (facet) {\n            if (facet in $$[$0])\n              error(new Error(\"Parse error: facet \" + facet + \" not allowed for unknown datatype \" + $$[$0-1]), yy);\n          });\n        this.$ = extend({ type: \"NodeConstraint\", datatype: $$[$0-1] }, $$[$0]) // t: 1datatype\n      \nbreak;\ncase 96:\nthis.$ = { type: \"NodeConstraint\", values: $$[$0-1] } // t: 1val1IRIREF;\nbreak;\ncase 97:\nthis.$ = extend({ type: \"NodeConstraint\"}, $$[$0]);\nbreak;\ncase 98:\nthis.$ = {} // t: 1literalPattern;\nbreak;\ncase 99:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: 1literalLength\n      \nbreak;\ncase 101: case 107:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: !! look to 1literalLength\n      \nbreak;\ncase 102:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0-1], $$[$0] ? $$[$0] : {}) // t: 1iriPattern;\nbreak;\ncase 103:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0]) // t: @@;\nbreak;\ncase 104:\nthis.$ = {};\nbreak;\ncase 105:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0])\n      \nbreak;\ncase 108:\nthis.$ = { nodeKind: \"iri\" } // t: 1iriPattern;\nbreak;\ncase 109:\nthis.$ = { nodeKind: \"bnode\" } // t: 1bnodeLength;\nbreak;\ncase 110:\nthis.$ = { nodeKind: \"nonliteral\" } // t: 1nonliteralLength;\nbreak;\ncase 113:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalLength;\nbreak;\ncase 114:\nthis.$ = unescapeRegexp($$[$0]) // t: 1literalPattern;\nbreak;\ncase 115:\nthis.$ = \"length\" // t: 1literalLength;\nbreak;\ncase 116:\nthis.$ = \"minlength\" // t: 1literalMinlength;\nbreak;\ncase 117:\nthis.$ = \"maxlength\" // t: 1literalMaxlength;\nbreak;\ncase 118:\nthis.$ = keyValObject($$[$0-1], $$[$0]) // t: 1literalMininclusive;\nbreak;\ncase 119:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalTotaldigits;\nbreak;\ncase 120:\nthis.$ = parseInt($$[$0], 10);\nbreak;\ncase 121: case 122:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 123:\n // ## deprecated\n        if ($$[$0] === XSD_DECIMAL || $$[$0] === XSD_FLOAT || $$[$0] === XSD_DOUBLE)\n          this.$ = parseFloat($$[$0-2].value);\n        else if (numericDatatypes.indexOf($$[$0]) !== -1)\n          this.$ = parseInt($$[$0-2].value)\n        else\n          error(new Error(\"Parse error: numeric range facet expected numeric datatype instead of \" + $$[$0]), yy);\n      \nbreak;\ncase 124:\nthis.$ = \"mininclusive\" // t: 1literalMininclusive;\nbreak;\ncase 125:\nthis.$ = \"minexclusive\" // t: 1literalMinexclusive;\nbreak;\ncase 126:\nthis.$ = \"maxinclusive\" // t: 1literalMaxinclusive;\nbreak;\ncase 127:\nthis.$ = \"maxexclusive\" // t: 1literalMaxexclusive;\nbreak;\ncase 128:\nthis.$ = \"totaldigits\" // t: 1literalTotaldigits;\nbreak;\ncase 129:\nthis.$ = \"fractiondigits\" // t: 1literalFractiondigits;\nbreak;\ncase 130:\n // t: 1dotInherit3\n        this.$ = $$[$0-2] === EmptyShape ? { type: \"Shape\" } : $$[$0-2]; // t: 0\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !! look to open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !! look to open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 131:\n // t: 1dotInherit3\n        var exprObj = $$[$0-1] ? { expression: $$[$0-1] } : EmptyObject; // t: 0, 0Inherit1\n        this.$ = (exprObj === EmptyObject && $$[$0-3] === EmptyObject) ?\n\t  EmptyShape :\n\t  extend({ type: \"Shape\" }, exprObj, $$[$0-3]);\n      \nbreak;\ncase 132:\nthis.$ = [ \"inherit\", $$[$0] ] // t: 1dotInherit1;\nbreak;\ncase 133:\nthis.$ = [ \"extra\", $$[$0] ] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 134:\nthis.$ = [ \"closed\", true ] // t: 1dotClosed;\nbreak;\ncase 135:\nthis.$ = EmptyObject;\nbreak;\ncase 136:\n\n        if ($$[$0-1] === EmptyObject)\n          $$[$0-1] = {};\n        if ($$[$0][0] === \"closed\")\n          $$[$0-1][\"closed\"] = true; // t: 1dotClosed\n        else if ($$[$0][0] in $$[$0-1])\n          $$[$0-1][$$[$0][0]] = unionAll($$[$0-1][$$[$0][0]], $$[$0][1]); // t: 1dotInherit3, 3groupdot3Extra, 3groupdotExtra3\n        else\n          $$[$0-1][$$[$0][0]] = $$[$0][1]; // t: 1dotInherit1\n        this.$ = $$[$0-1];\n      \nbreak;\ncase 139:\nthis.$ = $$[$0] // t: 1dotExtra1, 3groupdot3Extra;\nbreak;\ncase 140:\nthis.$ = [$$[$0]] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 141:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 3groupdotExtra3;\nbreak;\ncase 145:\nthis.$ = { type: \"OneOf\", expressions: unionAll([$$[$0-1]], $$[$0]) } // t: 2oneOfdot;\nbreak;\ncase 146:\nthis.$ = $$[$0] // t: 2oneOfdot;\nbreak;\ncase 147:\nthis.$ = [$$[$0]] // t: 2oneOfdot;\nbreak;\ncase 148:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2oneOfdot;\nbreak;\ncase 151:\nthis.$ = $$[$0-1];\nbreak;\ncase 155:\nthis.$ = { type: \"EachOf\", expressions: unionAll([$$[$0-2]], $$[$0-1]) } // t: 2groupOfdot;\nbreak;\ncase 156:\nthis.$ = $$[$0] // ## deprecated // t: 2groupOfdot;\nbreak;\ncase 157:\nthis.$ = $$[$0] // t: 2groupOfdot;\nbreak;\ncase 158:\nthis.$ = [$$[$0]] // t: 2groupOfdot;\nbreak;\ncase 159:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2groupOfdot;\nbreak;\ncase 160:\n\n        if ($$[$0-1]) {\n          this.$ = extend({ id: $$[$0-1] }, $$[$0]);\n          addProduction($$[$0-1],  this.$, yy);\n        } else {\n          this.$ = $$[$0]\n        }\n      \nbreak;\ncase 162:\nthis.$ = addSourceMap($$[$0], yy);\nbreak;\ncase 167:\n\n        // t: open1dotOr1dot, !openopen1dotcloseCode1closeCode2\n        this.$ = $$[$0-4];\n        // Copy all of the new attributes into the encapsulated shape.\n        if (\"min\" in $$[$0-2]) { this.$.min = $$[$0-2].min; } // t: open3groupdotclosecard23Annot3Code2\n        if (\"max\" in $$[$0-2]) { this.$.max = $$[$0-2].max; } // t: open3groupdotclosecard23Annot3Code2\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = \"semActs\" in $$[$0-4] ? $$[$0-4].semActs.concat($$[$0].semActs) : $$[$0].semActs; } // t: open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 168:\nthis.$ = {} // t: 1dot;\nbreak;\ncase 170:\n\n        // $$[$0]: t: 1dotCode1\n\tif ($$[$0-3] !== EmptyShape && false) {\n\t  var t = blank();\n\t  addShape(t, $$[$0-3], yy);\n\t  $$[$0-3] = t; // ShapeRef\n\t}\n        // %6: t: 1inversedotCode1\n        this.$ = extend({ type: \"TripleConstraint\" }, $$[$0-5] ? $$[$0-5] : {}, { predicate: $$[$0-4] }, ($$[$0-3] === EmptyShape ? {} : { valueExpr: $$[$0-3] }), $$[$0-2], $$[$0]); // t: 1dot // t: 1inversedot\n        if ($$[$0-1].length)\n          this.$[\"annotations\"] = $$[$0-1]; // t: 1dotAnnot3 // t: 1inversedotAnnot3\n      \nbreak;\ncase 173:\nthis.$ = { min:0, max:UNBOUNDED } // t: 1cardStar;\nbreak;\ncase 174:\nthis.$ = { min:1, max:UNBOUNDED } // t: 1cardPlus;\nbreak;\ncase 175:\nthis.$ = { min:0, max:1 } // t: 1cardOpt;\nbreak;\ncase 176:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-2);\n        var nums = $$[$0].match(/(\\d+)/g);\n        this.$ = { min: parseInt(nums[0], 10) }; // t: 1card2blank, 1card2Star\n        if (nums.length === 2)\n            this.$[\"max\"] = parseInt(nums[1], 10); // t: 1card23\n        else if ($$[$0].indexOf(',') === -1) // t: 1card2\n            this.$[\"max\"] = parseInt(nums[0], 10);\n        else\n            this.$[\"max\"] = UNBOUNDED;\n      \nbreak;\ncase 177:\nthis.$ = { inverse: true } // t: 1inversedot;\nbreak;\ncase 178:\nthis.$ = $$[$0-1] // t: 1val1IRIREF;\nbreak;\ncase 179:\nthis.$ = [] // t: 1val1IRIREF;\nbreak;\ncase 180:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1IRIREF;\nbreak;\ncase 185:\nthis.$ = [$$[$0]] // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 186:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 187:\nthis.$ = [$$[$0]] // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 188:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 189:\nthis.$ = [$$[$0]] // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 190:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 191:\nthis.$ = { type: \"IriStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 192:\nthis.$ = { type: \"LiteralStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 193:\nthis.$ = { type: \"LanguageStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 194:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1iriStem, 1val1iriStemMinusiri3\n            type: $$[$0].length ? \"IriStemRange\" : \"IriStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1iriStemMinusiri3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1IRIREF, 1AvalA\n        }\n      \nbreak;\ncase 195:\nthis.$ = [] // t: 1val1iriStem, 1val1iriStemMinusiri3;\nbreak;\ncase 196:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1iriStemMinusiri3;\nbreak;\ncase 197:\nthis.$ = $$[$0] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 200:\nthis.$ = $$[$0] ? { type: \"IriStem\", stem: $$[$0-1] } /* t: 1val1iriStemMinusiriStem3 */ : $$[$0-1] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 203:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1literalStemMinusliteralStem3, 1val1literalStem\n            type: $$[$0].length ? \"LiteralStemRange\" : \"LiteralStem\",\n            stem: $$[$0-1].value\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1literalStemMinusliteral3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1LITERAL\n        }\n      \nbreak;\ncase 204:\nthis.$ = [] // t: 1val1literalStem, 1val1literalStemMinusliteral3;\nbreak;\ncase 205:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 206:\nthis.$ = $$[$0] // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 209:\nthis.$ = $$[$0] ? { type: \"LiteralStem\", stem: $$[$0-1].value } /* t: 1val1literalStemMinusliteral3 */ : $$[$0-1].value // t: 1val1literalStemMinusliteralStem3;\nbreak;\ncase 210:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1languageStemMinuslanguage3 1val1languageStemMinuslanguageStem3 : 1val1languageStem\n            type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1languageStemMinuslanguage3, 1val1languageStemMinuslanguageStem3\n        } else {\n          this.$ = { type: \"Language\", languageTag: $$[$0-1] }; // t: 1val1language\n        }\n      \nbreak;\ncase 211:\n\n        this.$ = {  // t: @@\n          type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n          stem: \"\"\n        };\n        if ($$[$0].length)\n          this.$[\"exclusions\"] = $$[$0]; // t: @@\n      \nbreak;\ncase 212:\nthis.$ = [] // t: 1val1languageStem, 1val1languageStemMinuslanguage3;\nbreak;\ncase 213:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 214:\nthis.$ = $$[$0] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 217:\nthis.$ = $$[$0] ? { type: \"LanguageStem\", stem: $$[$0-1] } /* t: 1val1languageStemMinuslanguageStem3 */ : $$[$0-1] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 218:\nthis.$ = addSourceMap($$[$0], yy) // Inclusion // t: 2groupInclude1;\nbreak;\ncase 219:\nthis.$ = { type: \"Annotation\", predicate: $$[$0-1], object: $$[$0] } // t: 1dotAnnotIRIREF;\nbreak;\ncase 222:\nthis.$ = $$[$0].length ? { semActs: $$[$0] } : null // t: 1dotCode1/2oneOfDot;\nbreak;\ncase 223:\nthis.$ = [] // t: 1dot, 1dotCode1;\nbreak;\ncase 224:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotCode1;\nbreak;\ncase 225:\nthis.$ = $$[$0] ? unescapeSemanticAction($$[$0-1], $$[$0]) /* t: 1dotCode1 */ : { type: \"SemAct\", name: $$[$0-1] } // t: 1dotNoCode1;\nbreak;\ncase 232:\nthis.$ = RDF_TYPE // t: 1AvalA;\nbreak;\ncase 238:\nthis.$ = createLiteral($$[$0], XSD_INTEGER) // t: 1val1INTEGER;\nbreak;\ncase 239:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL) // t: 1val1DECIMAL;\nbreak;\ncase 240:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE) // t: 1val1DOUBLE;\nbreak;\ncase 242:\nthis.$ = $$[$0] ? extend($$[$0-1], { type: $$[$0] }) : $$[$0-1] // t: 1val1Datatype;\nbreak;\ncase 246:\nthis.$ = { value: \"true\", type: XSD_BOOLEAN } // t: 1val1true;\nbreak;\ncase 247:\nthis.$ = { value: \"false\", type: XSD_BOOLEAN } // t: 1val1false;\nbreak;\ncase 248:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL2;\nbreak;\ncase 249:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL1;\nbreak;\ncase 250:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL_LONG2;\nbreak;\ncase 251:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG1;\nbreak;\ncase 252:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: @@;\nbreak;\ncase 253:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: @@;\nbreak;\ncase 254:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: 1val1LANGTAG;\nbreak;\ncase 255:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG2_with_LANGTAG;\nbreak;\ncase 256:\n // t: 1dot\n        var unesc = ShExUtil.unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._base === null || absoluteIRI.test(unesc) ? unesc : _resolveIRI(unesc)\n      \nbreak;\ncase 258:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + ShExUtil.unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n      \nbreak;\ncase 259:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n        this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n      \nbreak;\ncase 261:\nthis.$ = $$[$0] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 264:\nthis.$ = [$$[$0]] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 265:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotInherit3;\nbreak;\n}\n},\ntable: [o($V0,[2,2],{3:1,4:2}),{1:[3]},o($V0,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:10,10:14,11:15,14:6,15:7,16:8,17:9,18:[1,11],19:$V1,20:[1,12],21:$V2,22:22,23:[1,13],24:16,25:17,26:[1,19],30:18,31:21,32:20,189:$V3,196:23,210:26,211:$V4,212:$V5},{7:[1,30]},o($V0,[2,4]),{7:[2,11]},o($V0,$V6),o($V0,$V7),o($V0,$V8),o($V9,[2,7],{12:31}),{19:[1,32]},{21:[1,33]},{19:$Va,21:$Vb,22:34,210:36,211:$Vc},o($V9,[2,5]),o($V9,[2,6]),o($V9,$Vd),o($V9,$Ve),o($V9,[2,21],{31:39,189:$V3}),{27:[1,40]},o($Vf,$Vg,{33:41,34:42,36:44,40:46,35:[1,43],39:[1,45],75:$Vh,76:$Vi,77:$Vj}),o($V0,[2,22]),o($Vk,$Vl),o($Vk,$Vm),{19:$Vn,21:$Vo,22:50,210:52,211:$Vp},o($Vk,$Vq),o($Vk,$Vr),o($Vk,$Vs),o($Vk,$Vt),o($Vk,$Vu),{1:[2,1]},{7:[2,9],8:56,10:57,13:55,15:58,16:59,17:60,18:[1,63],19:$V1,20:[1,64],21:$V2,22:22,23:[1,65],24:61,25:62,26:[1,66],32:67,196:23,210:26,211:$V4,212:$V5},o($V0,$Vv),{19:$Va,21:$Vb,22:68,210:36,211:$Vc},o($V0,$Vw),o($V0,$Vq),o($V0,$Vr),o($V0,$Vt),o($V0,$Vu),o($V0,[2,23]),o($Vx,$Vg,{28:69,50:70,36:71,39:$Vy}),o($V9,$Vz),o($V9,$VA),o($V9,$VB),o($VC,$VD,{37:73,60:74,62:75,68:76,69:79,71:80,74:81,88:82,90:83,83:85,84:86,85:87,114:88,91:92,22:93,87:95,95:96,210:99,101:100,103:101,19:$VE,21:$VF,65:[1,77],67:[1,78],81:$VG,92:$VH,93:$VI,94:$VJ,97:$VK,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$VU,211:$VV}),o($Vf,$VW,{40:113,75:$VX,76:$VY,77:$VZ}),{41:117,44:118,45:119,46:120,47:$V_,48:121,49:$V$},o($V01,$V11),o($V01,$V21),{19:[1,127],21:[1,131],22:125,32:124,196:126,210:128,211:[1,130],212:[1,129]},{189:[1,134],190:132,191:[1,133]},o($V31,$Vq),o($V31,$Vr),o($V31,$Vt),o($V31,$Vu),o($V9,[2,8]),o($V9,[2,24]),o($V9,[2,25]),o($V9,$V6),o($V9,$V7),o($V9,$V8),o($V9,$Vd),o($V9,$Ve),{19:[1,135]},{21:[1,136]},{19:$V41,21:$V51,22:137,210:139,211:$V61},{27:[1,142]},o($Vf,$Vg,{33:143,34:144,36:146,40:148,35:[1,145],39:[1,147],75:$Vh,76:$Vi,77:$Vj}),o($V0,$V71),o($V81,$V91,{29:149}),o($Va1,$Vb1,{54:150}),o($VC,$VD,{69:79,71:80,74:81,88:82,90:83,83:85,84:86,85:87,114:88,91:92,22:93,87:95,95:96,210:99,101:100,103:101,58:151,60:152,62:153,63:154,68:157,40:158,19:$VE,21:$VF,65:[1,155],67:[1,156],75:[1,159],76:[1,160],77:[1,161],81:$VG,92:$VH,93:$VI,94:$VJ,97:$VK,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$VU,211:$VV}),o($Vx,$VW),o($V9,$Vc1,{44:118,45:119,46:120,48:121,38:162,41:163,47:$V_,49:$V$}),o($Va1,$Vd1,{61:164,63:165,68:166,40:167,74:168,114:169,75:$VX,76:$VY,77:$VZ,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Ve1),o($Va1,$Vf1,{64:170,60:171,69:172,88:173,90:174,91:178,95:179,92:$Vg1,93:$Vh1,94:$Vi1,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{34:181,36:182,40:184,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vl1),o($Vm1,$Vn1,{78:185}),o($Vo1,$Vn1,{78:186}),o($Vp1,$Vn1,{78:187}),o($Vq1,$Vr1,{89:188}),o($Vm1,$Vs1,{95:96,91:189,97:$VK,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:190}),o($Vt1,$Vu1,{82:191}),o($Vt1,$Vu1,{82:192}),o($Vo1,$Vv1,{101:100,103:101,87:193,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,194],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:203}),o($VH1,$VI1),{96:[1,204]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,206],102:205,104:[1,207],105:[1,208],106:209,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,214]},{96:[2,115]},{96:[2,116]},{96:[2,117]},o($Vt1,$Vt),o($Vt1,$Vu),o($VO1,[2,124]),o($VO1,[2,125]),o($VO1,[2,126]),o($VO1,[2,127]),{96:[2,128]},{96:[2,129]},o($V9,$Vc1,{44:118,45:119,46:120,48:121,41:163,38:215,47:$V_,49:$V$}),o($Va1,$V11),o($Va1,$V21),{19:[1,219],21:[1,223],22:217,32:216,196:218,210:220,211:[1,222],212:[1,221]},o($V9,$VP1),o($V9,$VQ1,{46:224,47:$V_}),o($V81,$V91,{29:225,48:226,49:$V$}),o($V81,$VR1),o($Va1,$VS1),o($Vx,$Vg,{28:227,50:228,36:229,39:$Vy}),o($Vx,$Vg,{50:230,36:231,39:$Vy}),o($V01,$VT1),o($V01,$Vl),o($V01,$Vm),o($V01,$Vq),o($V01,$Vr),o($V01,$Vs),o($V01,$Vt),o($V01,$Vu),o($V0,$VU1),o($V0,$VV1),o($V0,$VW1),o($V9,$Vv),{19:$V41,21:$V51,22:232,210:139,211:$V61},o($V9,$Vw),o($V9,$Vq),o($V9,$Vr),o($V9,$Vt),o($V9,$Vu),o($Vx,$Vg,{28:233,50:234,36:235,39:$Vy}),o($V9,$Vz),o($V9,$VA),o($V9,$VB),o($VC,$VD,{37:236,60:237,62:238,68:239,69:242,71:243,74:244,88:245,90:246,83:248,84:249,85:250,114:251,91:255,22:256,87:258,95:259,210:262,101:263,103:264,19:$VX1,21:$VY1,65:[1,240],67:[1,241],81:$VZ1,92:$V_1,93:$V$1,94:$V02,97:$V12,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$V22,211:$V32}),o($Vf,$VW,{40:267,75:$V42,76:$V52,77:$V62}),{41:271,44:272,45:273,46:274,47:$V72,48:275,49:$V82},o($V9,$V92,{46:278,47:$V_}),o($V81,$Va2,{48:279,49:$V$}),o($Va1,$Vb2),o($Va1,$Vd1,{63:165,68:166,40:167,74:168,114:169,61:280,75:$VX,76:$VY,77:$VZ,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{60:171,69:172,88:173,90:174,91:178,95:179,64:281,92:$Vg1,93:$Vh1,94:$Vi1,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:282,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Ve2,$V11),o($Ve2,$V21),{19:[1,286],21:[1,290],22:284,32:283,196:285,210:287,211:[1,289],212:[1,288]},o($V9,$Vh2),o($V9,$Vi2),o($Va1,$Vj2),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:291}),{115:[1,292],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$Vl2),o($Va1,$Vm2),o($Vo1,$Vn1,{78:293}),o($Vn2,$Vr1,{89:294}),o($Vo1,$Vs1,{95:179,91:295,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,296]},o($Vn2,$VJ1),{66:[1,297]},o($VC,$VD,{37:298,60:299,62:300,68:301,69:304,71:305,74:306,88:307,90:308,83:310,84:311,85:312,114:313,91:317,22:318,87:320,95:321,210:324,101:325,103:326,19:[1,323],21:[1,328],65:[1,302],67:[1,303],81:[1,309],92:[1,314],93:[1,315],94:[1,316],97:$Vo2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,319],211:[1,327]}),o($Vf,$VW,{40:329,75:$Vp2,76:$Vq2,77:$Vr2}),{41:333,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2},o($Vu2,$Vv2,{79:340,80:341,188:342,186:[1,343]}),o($Vw2,$Vv2,{79:344,80:345,188:346,186:$Vx2}),o($Vy2,$Vv2,{79:348,80:349,188:350,186:[1,351]}),o($Vm1,$Vz2,{95:96,91:352,97:$VK,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($VG2,$VH2,{116:360,122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,117:$VI2,144:$VJ2,185:$VK2}),o($VC,[2,136]),o($VC,[2,132]),o($VC,[2,133]),o($VC,[2,134]),{19:$VL2,21:$VM2,22:375,32:374,196:376,210:378,211:$VN2,212:$VO2,214:373},{19:$VP2,21:$VQ2,22:384,124:382,125:383,195:$VR2,210:387,211:$VS2},o($VT2,[2,262]),o($VT2,[2,263]),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,390],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,422]},{107:$Vg3},{107:$Vh3},{107:$Vi3},{107:$Vj3},o($VH1,$Vk3),o($V9,$Vl3),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($V81,$Vm3),o($V9,$Vn3,{46:278,47:$V_}),o($Va1,$Vo3),o($V81,$Vp3),o($Va1,$Vb1,{54:423}),o($VC,$VD,{58:424,60:425,62:426,63:427,69:430,71:431,68:432,40:433,88:434,90:435,83:437,84:438,85:439,74:440,91:447,22:448,87:450,114:451,95:452,210:455,101:456,103:457,19:[1,454],21:[1,459],65:[1,428],67:[1,429],75:[1,441],76:[1,442],77:[1,443],81:[1,436],92:[1,444],93:[1,445],94:[1,446],97:$Vq3,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,449],211:[1,458]}),o($Va1,$Vr3),o($VC,$VD,{58:460,60:461,62:462,63:463,69:466,71:467,68:468,40:469,88:470,90:471,83:473,84:474,85:475,74:476,91:483,22:484,87:486,114:487,95:488,210:491,101:492,103:493,19:[1,490],21:[1,495],65:[1,464],67:[1,465],75:[1,477],76:[1,478],77:[1,479],81:[1,472],92:[1,480],93:[1,481],94:[1,482],97:$Vs3,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,485],211:[1,494]}),o($V9,$V71),o($V81,$V91,{29:496}),o($Va1,$Vb1,{54:497}),o($VC,$VD,{69:242,71:243,74:244,88:245,90:246,83:248,84:249,85:250,114:251,91:255,22:256,87:258,95:259,210:262,101:263,103:264,58:498,60:499,62:500,63:501,68:504,40:505,19:$VX1,21:$VY1,65:[1,502],67:[1,503],75:[1,506],76:[1,507],77:[1,508],81:$VZ1,92:$V_1,93:$V$1,94:$V02,97:$V12,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$V22,211:$V32}),o($V9,$Vc1,{44:272,45:273,46:274,48:275,38:509,41:510,47:$V72,49:$V82}),o($Va1,$Vd1,{61:511,63:512,68:513,40:514,74:515,114:516,75:$V42,76:$V52,77:$V62,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Ve1),o($Va1,$Vf1,{64:517,60:518,69:519,88:520,90:521,91:525,95:526,92:$Vt3,93:$Vu3,94:$Vv3,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:528,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vl1),o($Vm1,$Vn1,{78:529}),o($Vo1,$Vn1,{78:530}),o($Vp1,$Vn1,{78:531}),o($Vq1,$Vr1,{89:532}),o($Vm1,$Vs1,{95:259,91:533,97:$V12,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:534}),o($Vt1,$Vu1,{82:535}),o($Vt1,$Vu1,{82:536}),o($Vo1,$Vv1,{101:263,103:264,87:537,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,538],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:539}),o($VH1,$VI1),{96:[1,540]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,542],102:541,104:[1,543],105:[1,544],106:545,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,546]},o($Vt1,$Vt),o($Vt1,$Vu),o($V9,$Vc1,{44:272,45:273,46:274,48:275,41:510,38:547,47:$V72,49:$V82}),o($Va1,$V11),o($Va1,$V21),{19:[1,551],21:[1,555],22:549,32:548,196:550,210:552,211:[1,554],212:[1,553]},o($V9,$VP1),o($V9,$VQ1,{46:556,47:$V72}),o($V81,$V91,{29:557,48:558,49:$V82}),o($V81,$VR1),o($Va1,$VS1),o($Vx,$Vg,{28:559,50:560,36:561,39:$Vy}),o($Vx,$Vg,{50:562,36:563,39:$Vy}),o($V81,$Vx3),o($Va1,$Vy3),o($Va1,$Vz3),o($Va1,$VA3),{66:[1,564]},o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),o($Vw2,$Vv2,{80:345,188:346,79:565,186:$Vx2}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:566,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:345,188:346,79:567,186:$Vx2}),o($Vo1,$Vz2,{95:179,91:568,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VB3),{38:569,41:570,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2,66:$Vc1},o($VC,$VD,{61:571,63:572,68:573,40:574,74:575,114:576,47:$Vd1,49:$Vd1,66:$Vd1,75:$Vp2,76:$Vq2,77:$Vr2}),o($VC3,$Ve1),o($VC3,$Vf1,{64:577,60:578,69:579,88:580,90:581,91:585,95:586,92:[1,582],93:[1,583],94:[1,584],97:$VD3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:588,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vl1),o($VE3,$Vn1,{78:589}),o($VF3,$Vn1,{78:590}),o($VG3,$Vn1,{78:591}),o($VH3,$Vr1,{89:592}),o($VE3,$Vs1,{95:321,91:593,97:$Vo2,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:594}),o($VI3,$Vu1,{82:595}),o($VI3,$Vu1,{82:596}),o($VF3,$Vv1,{101:325,103:326,87:597,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,598],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:599}),o($VJ3,$VI1),{96:[1,600]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,602],102:601,104:[1,603],105:[1,604],106:605,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,606]},o($VI3,$Vt),o($VI3,$Vu),{38:607,41:570,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2,66:$Vc1},o($VC3,$V11),o($VC3,$V21),{19:[1,611],21:[1,615],22:609,32:608,196:610,210:612,211:[1,614],212:[1,613]},{66:$VP1},{46:616,47:$Vs2,66:$VQ1},o($VK3,$V91,{29:617,48:618,49:$Vt2}),o($VK3,$VR1),o($VC3,$VS1),o($Vx,$Vg,{28:619,50:620,36:621,39:$Vy}),o($Vx,$Vg,{50:622,36:623,39:$Vy}),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:624,189:[1,625]}),{19:$VP3,21:$VQ3,22:627,125:626,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:633,189:[1,634]}),{19:$VP3,21:$VQ3,22:627,125:635,195:$VR3,210:630,211:$VS3},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:636,189:[1,637]}),{19:$VP3,21:$VQ3,22:627,125:638,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,639]},o($Vt1,$VJ1),{96:[1,641],102:640,104:[1,642],105:[1,643],106:644,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,645]},{117:[1,646]},{117:[2,138]},{117:$VZ3},{117:$V_3,129:647,130:648,131:$V$3},{117:$V04},o($V14,$V24),o($V14,$V34),o($V14,$V44,{135:650,138:651,139:654,136:$V54,137:$V64}),o($V74,$V84,{141:655,146:656,147:657,150:658,151:660,65:[1,659],156:$V94}),o($Va4,$Vb4),o($VG2,[2,164]),{19:[1,665],21:[1,669],22:663,145:662,196:664,210:666,211:[1,668],212:[1,667]},{19:[1,673],21:[1,677],22:671,145:670,196:672,210:674,211:[1,676],212:[1,675]},o($VC,[2,261],{22:375,196:376,210:378,32:678,19:$VL2,21:$VM2,211:$VN2,212:$VO2}),o($Vc4,[2,264]),o($Vc4,$Vl),o($Vc4,$Vm),o($Vc4,$Vq),o($Vc4,$Vr),o($Vc4,$Vs),o($Vc4,$Vt),o($Vc4,$Vu),o($VC,[2,139],{22:384,210:387,125:679,19:$VP2,21:$VQ2,195:$VR2,211:$VS2}),o($Vd4,[2,140]),o($Vd4,$Ve4),o($Vd4,$Vf4),o($Vd4,$Vq),o($Vd4,$Vr),o($Vd4,$Vt),o($Vd4,$Vu),o($Vt1,$Vg4),o($VF1,[2,180]),o($VF1,[2,181]),o($VF1,[2,182]),o($VF1,[2,183]),{164:680,165:681,166:684,167:682,168:685,169:683,170:686,175:[1,687]},o($VF1,[2,198],{171:688,173:689,174:[1,690]}),o($VF1,[2,207],{178:691,180:692,174:[1,693]}),o($VF1,[2,215],{182:694,183:695,174:$Vh4}),{174:$Vh4,183:697},o($Vi4,$Vq),o($Vi4,$Vr),o($Vi4,$Vj4),o($Vi4,$Vk4),o($Vi4,$Vl4),o($Vi4,$Vt),o($Vi4,$Vu),o($Vi4,$Vm4),o($Vi4,$Vn4,{198:698,199:699,107:[1,700]}),o($Vi4,$Vo4),o($Vi4,$Vp4),o($Vi4,$Vq4),o($Vi4,$Vr4),o($Vi4,$Vs4),o($Vi4,$Vt4),o($Vi4,$Vu4),o($Vi4,$Vv4),o($Vi4,$Vw4),o($Vx4,$Vg3),o($Vx4,$Vh3),o($Vx4,$Vi3),o($Vx4,$Vj3),{19:[1,703],21:[1,706],22:702,83:701,210:704,211:[1,705]},o($V81,$Va2,{48:707,49:[1,708]}),o($Va1,$Vb2),o($Va1,$Vd1,{61:709,63:710,68:711,40:712,74:713,114:717,75:[1,714],76:[1,715],77:[1,716],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:718,60:719,69:720,88:721,90:722,91:726,95:727,92:[1,723],93:[1,724],94:[1,725],97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:729,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:730}),o($Vo1,$Vn1,{78:731}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:732}),o($Vm1,$Vs1,{95:452,91:733,97:$Vq3,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:734}),o($Vt1,$Vu1,{82:735}),o($Vt1,$Vu1,{82:736}),o($Vo1,$Vv1,{101:456,103:457,87:737,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:738}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,742],21:[1,746],22:740,32:739,196:741,210:743,211:[1,745],212:[1,744]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:747}),o($VH1,$VI1),{115:[1,748],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,749]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,751],102:750,104:[1,752],105:[1,753],106:754,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,755]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:756,63:757,68:758,40:759,74:760,114:764,75:[1,761],76:[1,762],77:[1,763],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:765,60:766,69:767,88:768,90:769,91:773,95:774,92:[1,770],93:[1,771],94:[1,772],97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:776,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:777}),o($Vo1,$Vn1,{78:778}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:779}),o($Vm1,$Vs1,{95:488,91:780,97:$Vs3,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:781}),o($Vt1,$Vu1,{82:782}),o($Vt1,$Vu1,{82:783}),o($Vo1,$Vv1,{101:492,103:493,87:784,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:785}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,789],21:[1,793],22:787,32:786,196:788,210:790,211:[1,792],212:[1,791]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:794}),o($VH1,$VI1),{115:[1,795],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,796]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,798],102:797,104:[1,799],105:[1,800],106:801,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,802]},o($Vt1,$Vt),o($Vt1,$Vu),o($V9,$V92,{46:803,47:$V72}),o($V81,$Va2,{48:804,49:$V82}),o($Va1,$Vb2),o($Va1,$Vd1,{63:512,68:513,40:514,74:515,114:516,61:805,75:$V42,76:$V52,77:$V62,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{60:518,69:519,88:520,90:521,91:525,95:526,64:806,92:$Vt3,93:$Vu3,94:$Vv3,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:807,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Ve2,$V11),o($Ve2,$V21),{19:[1,811],21:[1,815],22:809,32:808,196:810,210:812,211:[1,814],212:[1,813]},o($V9,$Vh2),o($V9,$Vi2),o($Va1,$Vj2),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:816}),{115:[1,817],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$Vl2),o($Va1,$Vm2),o($Vo1,$Vn1,{78:818}),o($Vn2,$Vr1,{89:819}),o($Vo1,$Vs1,{95:526,91:820,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,821]},o($Vn2,$VJ1),{66:[1,822]},o($Vu2,$Vv2,{79:823,80:824,188:825,186:[1,826]}),o($Vw2,$Vv2,{79:827,80:828,188:829,186:$VA4}),o($Vy2,$Vv2,{79:831,80:832,188:833,186:[1,834]}),o($Vm1,$Vz2,{95:259,91:835,97:$V12,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:843,117:$VI2,144:$VJ2,185:$VK2}),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,844],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,845]},o($VH1,$Vk3),o($V9,$Vl3),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($V81,$Vm3),o($V9,$Vn3,{46:803,47:$V72}),o($Va1,$Vo3),o($V81,$Vp3),o($Va1,$Vb1,{54:846}),o($VC,$VD,{58:847,60:848,62:849,63:850,69:853,71:854,68:855,40:856,88:857,90:858,83:860,84:861,85:862,74:863,91:870,22:871,87:873,114:874,95:875,210:878,101:879,103:880,19:[1,877],21:[1,882],65:[1,851],67:[1,852],75:[1,864],76:[1,865],77:[1,866],81:[1,859],92:[1,867],93:[1,868],94:[1,869],97:$VC4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,872],211:[1,881]}),o($Va1,$Vr3),o($VC,$VD,{58:883,60:884,62:885,63:886,69:889,71:890,68:891,40:892,88:893,90:894,83:896,84:897,85:898,74:899,91:906,22:907,87:909,114:910,95:911,210:914,101:915,103:916,19:[1,913],21:[1,918],65:[1,887],67:[1,888],75:[1,900],76:[1,901],77:[1,902],81:[1,895],92:[1,903],93:[1,904],94:[1,905],97:$VD4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,908],211:[1,917]}),o($Va1,$VE4),o($Va1,$VU3),{117:[1,919]},o($Va1,$VM3),o($Vn2,$VV3),{66:$Vh2},{66:$Vi2},o($VC3,$Vj2),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:920}),{115:[1,921],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$Vl2),o($VC3,$Vm2),o($VF3,$Vn1,{78:922}),o($VF4,$Vr1,{89:923}),o($VF3,$Vs1,{95:586,91:924,97:$VD3,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,925]},o($VF4,$VJ1),{66:[1,926]},o($VG4,$Vv2,{79:927,80:928,188:929,186:[1,930]}),o($VH4,$Vv2,{79:931,80:932,188:933,186:$VI4}),o($VJ4,$Vv2,{79:935,80:936,188:937,186:[1,938]}),o($VE3,$Vz2,{95:321,91:939,97:$Vo2,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:947,117:$VI2,144:$VJ2,185:$VK2}),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,948],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,949]},o($VJ3,$Vk3),{66:$Vl3},o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VK3,$Vm3),{46:950,47:$Vs2,66:$Vn3},o($VC3,$Vo3),o($VK3,$Vp3),o($VC3,$Vb1,{54:951}),o($VC,$VD,{58:952,60:953,62:954,63:955,69:958,71:959,68:960,40:961,88:962,90:963,83:965,84:966,85:967,74:968,91:975,22:976,87:978,114:979,95:980,210:983,101:984,103:985,19:[1,982],21:[1,987],65:[1,956],67:[1,957],75:[1,969],76:[1,970],77:[1,971],81:[1,964],92:[1,972],93:[1,973],94:[1,974],97:$VL4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,977],211:[1,986]}),o($VC3,$Vr3),o($VC,$VD,{58:988,60:989,62:990,63:991,69:994,71:995,68:996,40:997,88:998,90:999,83:1001,84:1002,85:1003,74:1004,91:1011,22:1012,87:1014,114:1015,95:1016,210:1019,101:1020,103:1021,19:[1,1018],21:[1,1023],65:[1,992],67:[1,993],75:[1,1005],76:[1,1006],77:[1,1007],81:[1,1000],92:[1,1008],93:[1,1009],94:[1,1010],97:$VM4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1013],211:[1,1022]}),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:1024,210:52,211:$Vp},{19:$VO4,21:$VP4,22:1026,96:[1,1037],104:[1,1038],105:[1,1039],106:1036,177:1027,187:1025,192:1030,193:1031,194:1032,197:1035,200:[1,1040],201:[1,1041],202:[1,1046],203:[1,1047],204:[1,1048],205:[1,1049],206:[1,1042],207:[1,1043],208:[1,1044],209:[1,1045],210:1029,211:$VQ4},o($VR4,$Ve4),o($VR4,$Vf4),o($VR4,$Vq),o($VR4,$Vr),o($VR4,$Vt),o($VR4,$Vu),o($Vw2,$VN4),{19:$Vn,21:$Vo,22:1050,210:52,211:$Vp},{19:$VS4,21:$VT4,22:1052,96:[1,1063],104:[1,1064],105:[1,1065],106:1062,177:1053,187:1051,192:1056,193:1057,194:1058,197:1061,200:[1,1066],201:[1,1067],202:[1,1072],203:[1,1073],204:[1,1074],205:[1,1075],206:[1,1068],207:[1,1069],208:[1,1070],209:[1,1071],210:1055,211:$VU4},o($Vy2,$VN4),{19:$Vn,21:$Vo,22:1076,210:52,211:$Vp},{19:$VV4,21:$VW4,22:1078,96:[1,1089],104:[1,1090],105:[1,1091],106:1088,177:1079,187:1077,192:1082,193:1083,194:1084,197:1087,200:[1,1092],201:[1,1093],202:[1,1098],203:[1,1099],204:[1,1100],205:[1,1101],206:[1,1094],207:[1,1095],208:[1,1096],209:[1,1097],210:1081,211:$VX4},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,1102]},o($Vt1,$Vk3),o($Vp1,$VY4),{117:$VZ4,130:1103,131:$V$3},o($V14,$V_4),o($VG2,$VH2,{132:365,133:366,134:367,140:368,142:369,143:370,127:1104,144:$VJ2,185:$VK2}),o($V14,$V$4),o($V14,$V44,{135:1105,139:1106,136:$V54,137:$V64}),o($VG2,$VH2,{140:368,142:369,143:370,134:1107,117:$V05,131:$V05,144:$VJ2,185:$VK2}),o($VG2,$VH2,{140:368,142:369,143:370,134:1108,117:$V15,131:$V15,144:$VJ2,185:$VK2}),o($Va4,$V25),o($Va4,$V35),o($Va4,$V45),o($Va4,$V55),{19:$V65,21:$V75,22:1110,125:1109,195:$V85,210:1113,211:$V95},o($VG2,$VH2,{143:370,122:1116,126:1117,127:1118,128:1119,132:1120,133:1121,134:1122,140:1123,142:1124,144:$VJ2,185:$Va5}),o($V74,[2,172]),o($V74,[2,177]),o($Va4,$Vb5),o($Va4,$Vc5),o($Va4,$Vd5),o($Va4,$Vq),o($Va4,$Vr),o($Va4,$Vs),o($Va4,$Vt),o($Va4,$Vu),o($VG2,[2,162]),o($VG2,$Vc5),o($VG2,$Vd5),o($VG2,$Vq),o($VG2,$Vr),o($VG2,$Vs),o($VG2,$Vt),o($VG2,$Vu),o($Vc4,[2,265]),o($Vd4,[2,141]),o($VF1,[2,184]),o($VF1,[2,191],{166:1126,175:$Ve5}),o($VF1,[2,192],{168:1128,175:$Vf5}),o($VF1,[2,193],{170:1130,175:$Vg5}),o($Vh5,[2,185]),o($Vh5,[2,187]),o($Vh5,[2,189]),{19:$Vi5,21:$Vj5,22:1132,96:$Vk5,104:$Vl5,105:$Vm5,106:1143,177:1133,181:$Vn5,192:1137,193:1138,194:1139,197:1142,200:$Vo5,201:$Vp5,202:$Vq5,203:$Vr5,204:$Vs5,205:$Vt5,206:$Vu5,207:$Vv5,208:$Vw5,209:$Vx5,210:1136,211:$Vy5},o($VF1,[2,194]),o($VF1,[2,199]),o($Vh5,[2,195],{172:1157}),o($VF1,[2,203]),o($VF1,[2,208]),o($Vh5,[2,204],{179:1158}),o($VF1,[2,210]),o($VF1,[2,216]),o($Vh5,[2,212],{184:1159}),o($VF1,[2,211]),o($Vi4,$Vz5),o($Vi4,$VA5),{19:$VU2,21:$VV2,22:1161,83:1160,210:401,211:$Va3},o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$Vy3),o($Vx,$Vg,{50:1162,36:1163,39:$Vy}),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1164}),o($Va1,$V11),o($Va1,$V21),{19:[1,1168],21:[1,1172],22:1166,32:1165,196:1167,210:1169,211:[1,1171],212:[1,1170]},{115:[1,1173],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1174}),o($Vn2,$Vr1,{89:1175}),o($Vo1,$Vs1,{95:727,91:1176,97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1177]},o($Vn2,$VJ1),{66:[1,1178]},o($Vu2,$Vv2,{79:1179,80:1180,188:1181,186:[1,1182]}),o($Vw2,$Vv2,{79:1183,80:1184,188:1185,186:$VC5}),o($Vm1,$Vz2,{95:452,91:1187,97:$Vq3,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1195,80:1196,188:1197,186:[1,1198]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1199],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1200,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1201]},o($VH1,$Vk3),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1202}),o($Va1,$V11),o($Va1,$V21),{19:[1,1206],21:[1,1210],22:1204,32:1203,196:1205,210:1207,211:[1,1209],212:[1,1208]},{115:[1,1211],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1212}),o($Vn2,$Vr1,{89:1213}),o($Vo1,$Vs1,{95:774,91:1214,97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1215]},o($Vn2,$VJ1),{66:[1,1216]},o($Vu2,$Vv2,{79:1217,80:1218,188:1219,186:[1,1220]}),o($Vw2,$Vv2,{79:1221,80:1222,188:1223,186:$VE5}),o($Vm1,$Vz2,{95:488,91:1225,97:$Vs3,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1233,80:1234,188:1235,186:[1,1236]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1237],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1238,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1239]},o($VH1,$Vk3),o($V81,$Vx3),o($Va1,$Vy3),o($Va1,$Vz3),o($Va1,$VA3),{66:[1,1240]},o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),o($Vw2,$Vv2,{80:828,188:829,79:1241,186:$VA4}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1242,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:828,188:829,79:1243,186:$VA4}),o($Vo1,$Vz2,{95:526,91:1244,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VB3),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1245,189:[1,1246]}),{19:$VP3,21:$VQ3,22:627,125:1247,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1248,189:[1,1249]}),{19:$VP3,21:$VQ3,22:627,125:1250,195:$VR3,210:630,211:$VS3},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1251,189:[1,1252]}),{19:$VP3,21:$VQ3,22:627,125:1253,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1254]},o($Vt1,$VJ1),{96:[1,1256],102:1255,104:[1,1257],105:[1,1258],106:1259,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1260]},{117:[1,1261]},o($Vt1,$Vg4),{19:[1,1264],21:[1,1267],22:1263,83:1262,210:1265,211:[1,1266]},o($V81,$Va2,{48:1268,49:[1,1269]}),o($Va1,$Vb2),o($Va1,$Vd1,{61:1270,63:1271,68:1272,40:1273,74:1274,114:1278,75:[1,1275],76:[1,1276],77:[1,1277],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:1279,60:1280,69:1281,88:1282,90:1283,91:1287,95:1288,92:[1,1284],93:[1,1285],94:[1,1286],97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1290,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:1291}),o($Vo1,$Vn1,{78:1292}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:1293}),o($Vm1,$Vs1,{95:875,91:1294,97:$VC4,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:1295}),o($Vt1,$Vu1,{82:1296}),o($Vt1,$Vu1,{82:1297}),o($Vo1,$Vv1,{101:879,103:880,87:1298,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:1299}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,1303],21:[1,1307],22:1301,32:1300,196:1302,210:1304,211:[1,1306],212:[1,1305]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:1308}),o($VH1,$VI1),{115:[1,1309],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1310]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,1312],102:1311,104:[1,1313],105:[1,1314],106:1315,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1316]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:1317,63:1318,68:1319,40:1320,74:1321,114:1325,75:[1,1322],76:[1,1323],77:[1,1324],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:1326,60:1327,69:1328,88:1329,90:1330,91:1334,95:1335,92:[1,1331],93:[1,1332],94:[1,1333],97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1337,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:1338}),o($Vo1,$Vn1,{78:1339}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:1340}),o($Vm1,$Vs1,{95:911,91:1341,97:$VD4,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:1342}),o($Vt1,$Vu1,{82:1343}),o($Vt1,$Vu1,{82:1344}),o($Vo1,$Vv1,{101:915,103:916,87:1345,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:1346}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,1350],21:[1,1354],22:1348,32:1347,196:1349,210:1351,211:[1,1353],212:[1,1352]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:1355}),o($VH1,$VI1),{115:[1,1356],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1357]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,1359],102:1358,104:[1,1360],105:[1,1361],106:1362,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1363]},o($Vt1,$Vt),o($Vt1,$Vu),o($Vo1,$VY4),o($VH4,$Vv2,{80:932,188:933,79:1364,186:$VI4}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1365,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:932,188:933,79:1366,186:$VI4}),o($VF3,$Vz2,{95:586,91:1367,97:$VD3,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VB3),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:1368,189:[1,1369]}),{19:$VP3,21:$VQ3,22:627,125:1370,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:1371,189:[1,1372]}),{19:$VP3,21:$VQ3,22:627,125:1373,195:$VR3,210:630,211:$VS3},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:1374,189:[1,1375]}),{19:$VP3,21:$VQ3,22:627,125:1376,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,1377]},o($VI3,$VJ1),{96:[1,1379],102:1378,104:[1,1380],105:[1,1381],106:1382,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1383]},{117:[1,1384]},o($VI3,$Vg4),{19:[1,1387],21:[1,1390],22:1386,83:1385,210:1388,211:[1,1389]},o($VK3,$Vx3),o($VK3,$Va2,{48:1391,49:[1,1392]}),o($VC3,$Vb2),o($VC,$VD,{61:1393,63:1394,68:1395,40:1396,74:1397,114:1401,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,1398],76:[1,1399],77:[1,1400]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:1402,60:1403,69:1404,88:1405,90:1406,91:1410,95:1411,92:[1,1407],93:[1,1408],94:[1,1409],97:$VK5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1413,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:1414}),o($VF3,$Vn1,{78:1415}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:1416}),o($VE3,$Vs1,{95:980,91:1417,97:$VL4,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:1418}),o($VI3,$Vu1,{82:1419}),o($VI3,$Vu1,{82:1420}),o($VF3,$Vv1,{101:984,103:985,87:1421,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:1422}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,1426],21:[1,1430],22:1424,32:1423,196:1425,210:1427,211:[1,1429],212:[1,1428]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:1431}),o($VJ3,$VI1),{115:[1,1432],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1433]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,1435],102:1434,104:[1,1436],105:[1,1437],106:1438,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1439]},o($VI3,$Vt),o($VI3,$Vu),o($VC3,$Vb2),o($VC,$VD,{61:1440,63:1441,68:1442,40:1443,74:1444,114:1448,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,1445],76:[1,1446],77:[1,1447]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:1449,60:1450,69:1451,88:1452,90:1453,91:1457,95:1458,92:[1,1454],93:[1,1455],94:[1,1456],97:$VL5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1460,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:1461}),o($VF3,$Vn1,{78:1462}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:1463}),o($VE3,$Vs1,{95:1016,91:1464,97:$VM4,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:1465}),o($VI3,$Vu1,{82:1466}),o($VI3,$Vu1,{82:1467}),o($VF3,$Vv1,{101:1020,103:1021,87:1468,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:1469}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,1473],21:[1,1477],22:1471,32:1470,196:1472,210:1474,211:[1,1476],212:[1,1475]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:1478}),o($VJ3,$VI1),{115:[1,1479],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1480]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,1482],102:1481,104:[1,1483],105:[1,1484],106:1485,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1486]},o($VI3,$Vt),o($VI3,$Vu),{189:[1,1489],190:1487,191:[1,1488]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:1490,199:1491,107:[1,1492]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,1495],190:1493,191:[1,1494]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:1496,199:1497,107:[1,1498]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{189:[1,1501],190:1499,191:[1,1500]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:1502,199:1503,107:[1,1504]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),{19:[1,1507],21:[1,1510],22:1506,83:1505,210:1508,211:[1,1509]},o($V14,$VS5),o($V14,$VT5),o($V14,$VU5),o($Va4,$VV5),o($Va4,$VW5),o($Va4,$VX5),o($Vx,$Vg,{42:1511,43:1512,51:1513,55:1514,36:1515,39:$Vy}),o($VY5,$Ve4),o($VY5,$Vf4),o($VY5,$Vq),o($VY5,$Vr),o($VY5,$Vt),o($VY5,$Vu),{66:[1,1516]},{66:$VZ3},{66:$V_3,129:1517,130:1518,131:$VZ5},{66:$V04},o($V_5,$V24),o($V_5,$V34),o($V_5,$V44,{135:1520,138:1521,139:1524,136:$V$5,137:$V06}),o($V74,$V84,{151:660,141:1525,146:1526,147:1527,150:1528,65:[1,1529],156:$V94}),o($V16,$Vb4),{19:[1,1533],21:[1,1537],22:1531,145:1530,196:1532,210:1534,211:[1,1536],212:[1,1535]},o($Vh5,[2,186]),{19:$Vi5,21:$Vj5,22:1132,210:1136,211:$Vy5},o($Vh5,[2,188]),{96:$Vk5,104:$Vl5,105:$Vm5,106:1143,177:1133,192:1137,193:1138,194:1139,197:1142,200:$Vo5,201:$Vp5,202:$Vq5,203:$Vr5,204:$Vs5,205:$Vt5,206:$Vu5,207:$Vv5,208:$Vw5,209:$Vx5},o($Vh5,[2,190]),{181:$Vn5},o($Vh5,$V26,{176:1538,174:$V36}),o($Vh5,$V26,{176:1540,174:$V36}),o($Vh5,$V26,{176:1541,174:$V36}),o($V46,$Vq),o($V46,$Vr),o($V46,$Vj4),o($V46,$Vk4),o($V46,$Vl4),o($V46,$Vt),o($V46,$Vu),o($V46,$Vm4),o($V46,$Vn4,{198:1542,199:1543,107:[1,1544]}),o($V46,$Vo4),o($V46,$Vp4),o($V46,$Vq4),o($V46,$Vr4),o($V46,$Vs4),o($V46,$Vt4),o($V46,$Vu4),o($V46,$Vv4),o($V46,$Vw4),o($V56,$Vg3),o($V56,$Vh3),o($V56,$Vi3),o($V56,$Vj3),o($VF1,[2,197],{166:1545,175:$Ve5}),o($VF1,[2,206],{168:1546,175:$Vf5}),o($VF1,[2,214],{170:1547,175:$Vg5}),o($Vi4,$V66),o($Vi4,$VE1),o($Va1,$Vr3),o($VC,$VD,{58:1548,60:1549,62:1550,63:1551,69:1554,71:1555,68:1556,40:1557,88:1558,90:1559,83:1561,84:1562,85:1563,74:1564,91:1571,22:1572,87:1574,114:1575,95:1576,210:1579,101:1580,103:1581,19:[1,1578],21:[1,1583],65:[1,1552],67:[1,1553],75:[1,1565],76:[1,1566],77:[1,1567],81:[1,1560],92:[1,1568],93:[1,1569],94:[1,1570],97:$V76,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1573],211:[1,1582]}),o($Vw2,$Vv2,{80:1184,188:1185,79:1584,186:$VC5}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1585,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1184,188:1185,79:1586,186:$VC5}),o($Vo1,$Vz2,{95:727,91:1587,97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1588,189:[1,1589]}),{19:$VP3,21:$VQ3,22:627,125:1590,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1591,189:[1,1592]}),{19:$VP3,21:$VQ3,22:627,125:1593,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1594]},o($Vt1,$VJ1),{96:[1,1596],102:1595,104:[1,1597],105:[1,1598],106:1599,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1600]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1601,189:[1,1602]}),{19:$VP3,21:$VQ3,22:627,125:1603,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,1604]},{19:[1,1607],21:[1,1610],22:1606,83:1605,210:1608,211:[1,1609]},o($Vw2,$Vv2,{80:1222,188:1223,79:1611,186:$VE5}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1612,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1222,188:1223,79:1613,186:$VE5}),o($Vo1,$Vz2,{95:774,91:1614,97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1615,189:[1,1616]}),{19:$VP3,21:$VQ3,22:627,125:1617,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1618,189:[1,1619]}),{19:$VP3,21:$VQ3,22:627,125:1620,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1621]},o($Vt1,$VJ1),{96:[1,1623],102:1622,104:[1,1624],105:[1,1625],106:1626,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1627]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1628,189:[1,1629]}),{19:$VP3,21:$VQ3,22:627,125:1630,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,1631]},{19:[1,1634],21:[1,1637],22:1633,83:1632,210:1635,211:[1,1636]},o($Va1,$VE4),o($Va1,$VU3),{117:[1,1638]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:1639,210:52,211:$Vp},{19:$V86,21:$V96,22:1641,96:[1,1652],104:[1,1653],105:[1,1654],106:1651,177:1642,187:1640,192:1645,193:1646,194:1647,197:1650,200:[1,1655],201:[1,1656],202:[1,1661],203:[1,1662],204:[1,1663],205:[1,1664],206:[1,1657],207:[1,1658],208:[1,1659],209:[1,1660],210:1644,211:$Va6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:1665,210:52,211:$Vp},{19:$Vb6,21:$Vc6,22:1667,96:[1,1678],104:[1,1679],105:[1,1680],106:1677,177:1668,187:1666,192:1671,193:1672,194:1673,197:1676,200:[1,1681],201:[1,1682],202:[1,1687],203:[1,1688],204:[1,1689],205:[1,1690],206:[1,1683],207:[1,1684],208:[1,1685],209:[1,1686],210:1670,211:$Vd6},o($Vy2,$VN4),{19:$Vn,21:$Vo,22:1691,210:52,211:$Vp},{19:$Ve6,21:$Vf6,22:1693,96:[1,1704],104:[1,1705],105:[1,1706],106:1703,177:1694,187:1692,192:1697,193:1698,194:1699,197:1702,200:[1,1707],201:[1,1708],202:[1,1713],203:[1,1714],204:[1,1715],205:[1,1716],206:[1,1709],207:[1,1710],208:[1,1711],209:[1,1712],210:1696,211:$Vg6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,1717]},o($Vt1,$Vk3),o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$Vy3),o($Vx,$Vg,{50:1718,36:1719,39:$Vy}),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1720}),o($Va1,$V11),o($Va1,$V21),{19:[1,1724],21:[1,1728],22:1722,32:1721,196:1723,210:1725,211:[1,1727],212:[1,1726]},{115:[1,1729],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1730}),o($Vn2,$Vr1,{89:1731}),o($Vo1,$Vs1,{95:1288,91:1732,97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1733]},o($Vn2,$VJ1),{66:[1,1734]},o($Vu2,$Vv2,{79:1735,80:1736,188:1737,186:[1,1738]}),o($Vw2,$Vv2,{79:1739,80:1740,188:1741,186:$Vh6}),o($Vm1,$Vz2,{95:875,91:1743,97:$VC4,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1751,80:1752,188:1753,186:[1,1754]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1755],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1756,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1757]},o($VH1,$Vk3),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1758}),o($Va1,$V11),o($Va1,$V21),{19:[1,1762],21:[1,1766],22:1760,32:1759,196:1761,210:1763,211:[1,1765],212:[1,1764]},{115:[1,1767],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1768}),o($Vn2,$Vr1,{89:1769}),o($Vo1,$Vs1,{95:1335,91:1770,97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1771]},o($Vn2,$VJ1),{66:[1,1772]},o($Vu2,$Vv2,{79:1773,80:1774,188:1775,186:[1,1776]}),o($Vw2,$Vv2,{79:1777,80:1778,188:1779,186:$Vj6}),o($Vm1,$Vz2,{95:911,91:1781,97:$VD4,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1789,80:1790,188:1791,186:[1,1792]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1793],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1794,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1795]},o($VH1,$Vk3),o($VC3,$VU3),{117:[1,1796]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:1797,210:52,211:$Vp},{19:$Vl6,21:$Vm6,22:1799,96:[1,1810],104:[1,1811],105:[1,1812],106:1809,177:1800,187:1798,192:1803,193:1804,194:1805,197:1808,200:[1,1813],201:[1,1814],202:[1,1819],203:[1,1820],204:[1,1821],205:[1,1822],206:[1,1815],207:[1,1816],208:[1,1817],209:[1,1818],210:1802,211:$Vn6},o($VH4,$VN4),{19:$Vn,21:$Vo,22:1823,210:52,211:$Vp},{19:$Vo6,21:$Vp6,22:1825,96:[1,1836],104:[1,1837],105:[1,1838],106:1835,177:1826,187:1824,192:1829,193:1830,194:1831,197:1834,200:[1,1839],201:[1,1840],202:[1,1845],203:[1,1846],204:[1,1847],205:[1,1848],206:[1,1841],207:[1,1842],208:[1,1843],209:[1,1844],210:1828,211:$Vq6},o($VJ4,$VN4),{19:$Vn,21:$Vo,22:1849,210:52,211:$Vp},{19:$Vr6,21:$Vs6,22:1851,96:[1,1862],104:[1,1863],105:[1,1864],106:1861,177:1852,187:1850,192:1855,193:1856,194:1857,197:1860,200:[1,1865],201:[1,1866],202:[1,1871],203:[1,1872],204:[1,1873],205:[1,1874],206:[1,1867],207:[1,1868],208:[1,1869],209:[1,1870],210:1854,211:$Vt6},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,1875]},o($VI3,$Vk3),o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VC3,$Vy3),o($Vx,$Vg,{50:1876,36:1877,39:$Vy}),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:1878}),o($VC3,$V11),o($VC3,$V21),{19:[1,1882],21:[1,1886],22:1880,32:1879,196:1881,210:1883,211:[1,1885],212:[1,1884]},{115:[1,1887],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:1888}),o($VF4,$Vr1,{89:1889}),o($VF3,$Vs1,{95:1411,91:1890,97:$VK5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,1891]},o($VF4,$VJ1),{66:[1,1892]},o($VG4,$Vv2,{79:1893,80:1894,188:1895,186:[1,1896]}),o($VH4,$Vv2,{79:1897,80:1898,188:1899,186:$Vu6}),o($VE3,$Vz2,{95:980,91:1901,97:$VL4,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:1909,80:1910,188:1911,186:[1,1912]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1913],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1914,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,1915]},o($VJ3,$Vk3),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:1916}),o($VC3,$V11),o($VC3,$V21),{19:[1,1920],21:[1,1924],22:1918,32:1917,196:1919,210:1921,211:[1,1923],212:[1,1922]},{115:[1,1925],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:1926}),o($VF4,$Vr1,{89:1927}),o($VF3,$Vs1,{95:1458,91:1928,97:$VL5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,1929]},o($VF4,$VJ1),{66:[1,1930]},o($VG4,$Vv2,{79:1931,80:1932,188:1933,186:[1,1934]}),o($VH4,$Vv2,{79:1935,80:1936,188:1937,186:$Vw6}),o($VE3,$Vz2,{95:1016,91:1939,97:$VM4,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:1947,80:1948,188:1949,186:[1,1950]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1951],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1952,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,1953]},o($VJ3,$Vk3),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VO4,21:$VP4,22:1955,83:1954,210:1029,211:$VQ4},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VS4,21:$VT4,22:1957,83:1956,210:1055,211:$VU4},o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VV4,21:$VW4,22:1959,83:1958,210:1081,211:$VX4},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy6,$Vz6,{148:1960,149:1961,152:$VA6,153:$VB6,154:$VC6,155:$VD6}),o($VE6,$VF6),o($VG6,$VH6,{52:1966}),o($VI6,$VJ6,{56:1967}),o($VC,$VD,{59:1968,69:1969,71:1970,72:1971,88:1974,90:1975,83:1977,84:1978,85:1979,74:1980,40:1981,91:1985,22:1986,87:1988,114:1989,95:1993,210:1996,101:1997,103:1998,19:[1,1995],21:[1,2000],65:[1,1972],67:[1,1973],75:[1,1990],76:[1,1991],77:[1,1992],81:[1,1976],92:[1,1982],93:[1,1983],94:[1,1984],97:$VK6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1987],211:[1,1999]}),o($Vy6,$Vz6,{149:1961,148:2001,152:$VA6,153:$VB6,154:$VC6,155:$VD6}),{66:$VZ4,130:2002,131:$VZ5},o($V_5,$V_4),o($VG2,$VH2,{143:370,132:1120,133:1121,134:1122,140:1123,142:1124,127:2003,144:$VJ2,185:$Va5}),o($V_5,$V$4),o($V_5,$V44,{135:2004,139:2005,136:$V$5,137:$V06}),o($VG2,$VH2,{143:370,140:1123,142:1124,134:2006,66:$V05,131:$V05,144:$VJ2,185:$Va5}),o($VG2,$VH2,{143:370,140:1123,142:1124,134:2007,66:$V15,131:$V15,144:$VJ2,185:$Va5}),o($V16,$V25),o($V16,$V35),o($V16,$V45),o($V16,$V55),{19:$V65,21:$V75,22:1110,125:2008,195:$V85,210:1113,211:$V95},o($VG2,$VH2,{143:370,126:1117,127:1118,128:1119,132:1120,133:1121,134:1122,140:1123,142:1124,122:2009,144:$VJ2,185:$Va5}),o($V16,$Vb5),o($V16,$Vc5),o($V16,$Vd5),o($V16,$Vq),o($V16,$Vr),o($V16,$Vs),o($V16,$Vt),o($V16,$Vu),o($Vh5,[2,200]),o($Vh5,[2,202]),o($Vh5,[2,209]),o($Vh5,[2,217]),o($V46,$Vz5),o($V46,$VA5),{19:$Vi5,21:$Vj5,22:2011,83:2010,210:1136,211:$Vy5},o($Vh5,[2,196]),o($Vh5,[2,205]),o($Vh5,[2,213]),o($Va1,$Vb2),o($Va1,$Vd1,{61:2012,63:2013,68:2014,40:2015,74:2016,114:2020,75:[1,2017],76:[1,2018],77:[1,2019],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:2021,60:2022,69:2023,88:2024,90:2025,91:2029,95:2030,92:[1,2026],93:[1,2027],94:[1,2028],97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2032,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:2033}),o($Vo1,$Vn1,{78:2034}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:2035}),o($Vm1,$Vs1,{95:1576,91:2036,97:$V76,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:2037}),o($Vt1,$Vu1,{82:2038}),o($Vt1,$Vu1,{82:2039}),o($Vo1,$Vv1,{101:1580,103:1581,87:2040,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:2041}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,2045],21:[1,2049],22:2043,32:2042,196:2044,210:2046,211:[1,2048],212:[1,2047]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:2050}),o($VH1,$VI1),{115:[1,2051],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2052]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,2054],102:2053,104:[1,2055],105:[1,2056],106:2057,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2058]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$VU3),{117:[1,2059]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2060,210:52,211:$Vp},{19:$VM6,21:$VN6,22:2062,96:[1,2073],104:[1,2074],105:[1,2075],106:2072,177:2063,187:2061,192:2066,193:2067,194:2068,197:2071,200:[1,2076],201:[1,2077],202:[1,2082],203:[1,2083],204:[1,2084],205:[1,2085],206:[1,2078],207:[1,2079],208:[1,2080],209:[1,2081],210:2065,211:$VO6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2086,210:52,211:$Vp},{19:$VP6,21:$VQ6,22:2088,96:[1,2099],104:[1,2100],105:[1,2101],106:2098,177:2089,187:2087,192:2092,193:2093,194:2094,197:2097,200:[1,2102],201:[1,2103],202:[1,2108],203:[1,2109],204:[1,2110],205:[1,2111],206:[1,2104],207:[1,2105],208:[1,2106],209:[1,2107],210:2091,211:$VR6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2112]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2113,210:52,211:$Vp},{19:$VS6,21:$VT6,22:2115,96:[1,2126],104:[1,2127],105:[1,2128],106:2125,177:2116,187:2114,192:2119,193:2120,194:2121,197:2124,200:[1,2129],201:[1,2130],202:[1,2135],203:[1,2136],204:[1,2137],205:[1,2138],206:[1,2131],207:[1,2132],208:[1,2133],209:[1,2134],210:2118,211:$VU6},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$VU3),{117:[1,2139]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2140,210:52,211:$Vp},{19:$VV6,21:$VW6,22:2142,96:[1,2153],104:[1,2154],105:[1,2155],106:2152,177:2143,187:2141,192:2146,193:2147,194:2148,197:2151,200:[1,2156],201:[1,2157],202:[1,2162],203:[1,2163],204:[1,2164],205:[1,2165],206:[1,2158],207:[1,2159],208:[1,2160],209:[1,2161],210:2145,211:$VX6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2166,210:52,211:$Vp},{19:$VY6,21:$VZ6,22:2168,96:[1,2179],104:[1,2180],105:[1,2181],106:2178,177:2169,187:2167,192:2172,193:2173,194:2174,197:2177,200:[1,2182],201:[1,2183],202:[1,2188],203:[1,2189],204:[1,2190],205:[1,2191],206:[1,2184],207:[1,2185],208:[1,2186],209:[1,2187],210:2171,211:$V_6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2192]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2193,210:52,211:$Vp},{19:$V$6,21:$V07,22:2195,96:[1,2206],104:[1,2207],105:[1,2208],106:2205,177:2196,187:2194,192:2199,193:2200,194:2201,197:2204,200:[1,2209],201:[1,2210],202:[1,2215],203:[1,2216],204:[1,2217],205:[1,2218],206:[1,2211],207:[1,2212],208:[1,2213],209:[1,2214],210:2198,211:$V17},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vo1,$VY4),{189:[1,2221],190:2219,191:[1,2220]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2222,199:2223,107:[1,2224]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2227],190:2225,191:[1,2226]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2228,199:2229,107:[1,2230]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{189:[1,2233],190:2231,191:[1,2232]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2234,199:2235,107:[1,2236]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),{19:[1,2239],21:[1,2242],22:2238,83:2237,210:2240,211:[1,2241]},o($Va1,$Vr3),o($VC,$VD,{58:2243,60:2244,62:2245,63:2246,69:2249,71:2250,68:2251,40:2252,88:2253,90:2254,83:2256,84:2257,85:2258,74:2259,91:2266,22:2267,87:2269,114:2270,95:2271,210:2274,101:2275,103:2276,19:[1,2273],21:[1,2278],65:[1,2247],67:[1,2248],75:[1,2260],76:[1,2261],77:[1,2262],81:[1,2255],92:[1,2263],93:[1,2264],94:[1,2265],97:$V27,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,2268],211:[1,2277]}),o($Vw2,$Vv2,{80:1740,188:1741,79:2279,186:$Vh6}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2280,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1740,188:1741,79:2281,186:$Vh6}),o($Vo1,$Vz2,{95:1288,91:2282,97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:2283,189:[1,2284]}),{19:$VP3,21:$VQ3,22:627,125:2285,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:2286,189:[1,2287]}),{19:$VP3,21:$VQ3,22:627,125:2288,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,2289]},o($Vt1,$VJ1),{96:[1,2291],102:2290,104:[1,2292],105:[1,2293],106:2294,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2295]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:2296,189:[1,2297]}),{19:$VP3,21:$VQ3,22:627,125:2298,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,2299]},{19:[1,2302],21:[1,2305],22:2301,83:2300,210:2303,211:[1,2304]},o($Vw2,$Vv2,{80:1778,188:1779,79:2306,186:$Vj6}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2307,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1778,188:1779,79:2308,186:$Vj6}),o($Vo1,$Vz2,{95:1335,91:2309,97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:2310,189:[1,2311]}),{19:$VP3,21:$VQ3,22:627,125:2312,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:2313,189:[1,2314]}),{19:$VP3,21:$VQ3,22:627,125:2315,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,2316]},o($Vt1,$VJ1),{96:[1,2318],102:2317,104:[1,2319],105:[1,2320],106:2321,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2322]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:2323,189:[1,2324]}),{19:$VP3,21:$VQ3,22:627,125:2325,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,2326]},{19:[1,2329],21:[1,2332],22:2328,83:2327,210:2330,211:[1,2331]},o($VF3,$VY4),{189:[1,2335],190:2333,191:[1,2334]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:2336,199:2337,107:[1,2338]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,2341],190:2339,191:[1,2340]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:2342,199:2343,107:[1,2344]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{189:[1,2347],190:2345,191:[1,2346]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:2348,199:2349,107:[1,2350]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),{19:[1,2353],21:[1,2356],22:2352,83:2351,210:2354,211:[1,2355]},o($VC3,$Vr3),o($VC,$VD,{58:2357,60:2358,62:2359,63:2360,69:2363,71:2364,68:2365,40:2366,88:2367,90:2368,83:2370,84:2371,85:2372,74:2373,91:2380,22:2381,87:2383,114:2384,95:2385,210:2388,101:2389,103:2390,19:[1,2387],21:[1,2392],65:[1,2361],67:[1,2362],75:[1,2374],76:[1,2375],77:[1,2376],81:[1,2369],92:[1,2377],93:[1,2378],94:[1,2379],97:$V67,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,2382],211:[1,2391]}),o($VH4,$Vv2,{80:1898,188:1899,79:2393,186:$Vu6}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2394,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:1898,188:1899,79:2395,186:$Vu6}),o($VF3,$Vz2,{95:1411,91:2396,97:$VK5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:2397,189:[1,2398]}),{19:$VP3,21:$VQ3,22:627,125:2399,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:2400,189:[1,2401]}),{19:$VP3,21:$VQ3,22:627,125:2402,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,2403]},o($VI3,$VJ1),{96:[1,2405],102:2404,104:[1,2406],105:[1,2407],106:2408,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2409]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:2410,189:[1,2411]}),{19:$VP3,21:$VQ3,22:627,125:2412,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,2413]},{19:[1,2416],21:[1,2419],22:2415,83:2414,210:2417,211:[1,2418]},o($VH4,$Vv2,{80:1936,188:1937,79:2420,186:$Vw6}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2421,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:1936,188:1937,79:2422,186:$Vw6}),o($VF3,$Vz2,{95:1458,91:2423,97:$VL5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:2424,189:[1,2425]}),{19:$VP3,21:$VQ3,22:627,125:2426,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:2427,189:[1,2428]}),{19:$VP3,21:$VQ3,22:627,125:2429,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,2430]},o($VI3,$VJ1),{96:[1,2432],102:2431,104:[1,2433],105:[1,2434],106:2435,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2436]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:2437,189:[1,2438]}),{19:$VP3,21:$VQ3,22:627,125:2439,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,2440]},{19:[1,2443],21:[1,2446],22:2442,83:2441,210:2444,211:[1,2445]},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vy6,$Vn1,{78:2447}),o($Vy6,$V77),o($Vy6,$V87),o($Vy6,$V97),o($Vy6,$Va7),o($Vy6,$Vb7),o($VE6,$Vc7,{53:2448,47:[1,2449]}),o($VG6,$Vd7,{57:2450,49:[1,2451]}),o($VI6,$Ve7),o($VI6,$Vf7,{70:2452,72:2453,74:2454,40:2455,114:2456,75:[1,2457],76:[1,2458],77:[1,2459],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:2460,69:2461,88:2462,90:2463,91:2467,95:2468,92:[1,2464],93:[1,2465],94:[1,2466],97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2470,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:2471}),o($Vl7,$Vs1,{95:1993,91:2472,97:$VK6,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:2473}),o($Vm7,$Vu1,{82:2474}),o($Vm7,$Vu1,{82:2475}),o($VI6,$Vv1,{101:1997,103:1998,87:2476,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:2477}),o($Vq7,$VI1),{115:[1,2478],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,2482],21:[1,2486],22:2480,32:2479,196:2481,210:2483,211:[1,2485],212:[1,2484]},{96:[1,2487]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,2489],102:2488,104:[1,2490],105:[1,2491],106:2492,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2493]},o($Vm7,$Vt),o($Vm7,$Vu),o($Vy6,$Vn1,{78:2494}),o($V_5,$VS5),o($V_5,$VT5),o($V_5,$VU5),o($V16,$VV5),o($V16,$VW5),o($V16,$VX5),o($Vx,$Vg,{42:2495,43:2496,51:2497,55:2498,36:2499,39:$Vy}),{66:[1,2500]},o($V46,$V66),o($V46,$VE1),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:2501}),o($Va1,$V11),o($Va1,$V21),{19:[1,2505],21:[1,2509],22:2503,32:2502,196:2504,210:2506,211:[1,2508],212:[1,2507]},{115:[1,2510],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:2511}),o($Vn2,$Vr1,{89:2512}),o($Vo1,$Vs1,{95:2030,91:2513,97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,2514]},o($Vn2,$VJ1),{66:[1,2515]},o($Vu2,$Vv2,{79:2516,80:2517,188:2518,186:[1,2519]}),o($Vw2,$Vv2,{79:2520,80:2521,188:2522,186:$Vr7}),o($Vm1,$Vz2,{95:1576,91:2524,97:$V76,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:2532,80:2533,188:2534,186:[1,2535]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,2536],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2537,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,2538]},o($VH1,$Vk3),o($Vo1,$VY4),{189:[1,2541],190:2539,191:[1,2540]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2542,199:2543,107:[1,2544]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2547],190:2545,191:[1,2546]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2548,199:2549,107:[1,2550]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,2553],21:[1,2556],22:2552,83:2551,210:2554,211:[1,2555]},{189:[1,2559],190:2557,191:[1,2558]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2560,199:2561,107:[1,2562]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vo1,$VY4),{189:[1,2565],190:2563,191:[1,2564]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2566,199:2567,107:[1,2568]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2571],190:2569,191:[1,2570]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2572,199:2573,107:[1,2574]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,2577],21:[1,2580],22:2576,83:2575,210:2578,211:[1,2579]},{189:[1,2583],190:2581,191:[1,2582]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2584,199:2585,107:[1,2586]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$V86,21:$V96,22:2588,83:2587,210:1644,211:$Va6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$Vb6,21:$Vc6,22:2590,83:2589,210:1670,211:$Vd6},o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$Ve6,21:$Vf6,22:2592,83:2591,210:1696,211:$Vg6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:2593,63:2594,68:2595,40:2596,74:2597,114:2601,75:[1,2598],76:[1,2599],77:[1,2600],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:2602,60:2603,69:2604,88:2605,90:2606,91:2610,95:2611,92:[1,2607],93:[1,2608],94:[1,2609],97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2613,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:2614}),o($Vo1,$Vn1,{78:2615}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:2616}),o($Vm1,$Vs1,{95:2271,91:2617,97:$V27,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:2618}),o($Vt1,$Vu1,{82:2619}),o($Vt1,$Vu1,{82:2620}),o($Vo1,$Vv1,{101:2275,103:2276,87:2621,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:2622}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,2626],21:[1,2630],22:2624,32:2623,196:2625,210:2627,211:[1,2629],212:[1,2628]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:2631}),o($VH1,$VI1),{115:[1,2632],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2633]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,2635],102:2634,104:[1,2636],105:[1,2637],106:2638,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2639]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$VU3),{117:[1,2640]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2641,210:52,211:$Vp},{19:$Vu7,21:$Vv7,22:2643,96:[1,2654],104:[1,2655],105:[1,2656],106:2653,177:2644,187:2642,192:2647,193:2648,194:2649,197:2652,200:[1,2657],201:[1,2658],202:[1,2663],203:[1,2664],204:[1,2665],205:[1,2666],206:[1,2659],207:[1,2660],208:[1,2661],209:[1,2662],210:2646,211:$Vw7},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2667,210:52,211:$Vp},{19:$Vx7,21:$Vy7,22:2669,96:[1,2680],104:[1,2681],105:[1,2682],106:2679,177:2670,187:2668,192:2673,193:2674,194:2675,197:2678,200:[1,2683],201:[1,2684],202:[1,2689],203:[1,2690],204:[1,2691],205:[1,2692],206:[1,2685],207:[1,2686],208:[1,2687],209:[1,2688],210:2672,211:$Vz7},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2693]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2694,210:52,211:$Vp},{19:$VA7,21:$VB7,22:2696,96:[1,2707],104:[1,2708],105:[1,2709],106:2706,177:2697,187:2695,192:2700,193:2701,194:2702,197:2705,200:[1,2710],201:[1,2711],202:[1,2716],203:[1,2717],204:[1,2718],205:[1,2719],206:[1,2712],207:[1,2713],208:[1,2714],209:[1,2715],210:2699,211:$VC7},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$VU3),{117:[1,2720]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2721,210:52,211:$Vp},{19:$VD7,21:$VE7,22:2723,96:[1,2734],104:[1,2735],105:[1,2736],106:2733,177:2724,187:2722,192:2727,193:2728,194:2729,197:2732,200:[1,2737],201:[1,2738],202:[1,2743],203:[1,2744],204:[1,2745],205:[1,2746],206:[1,2739],207:[1,2740],208:[1,2741],209:[1,2742],210:2726,211:$VF7},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2747,210:52,211:$Vp},{19:$VG7,21:$VH7,22:2749,96:[1,2760],104:[1,2761],105:[1,2762],106:2759,177:2750,187:2748,192:2753,193:2754,194:2755,197:2758,200:[1,2763],201:[1,2764],202:[1,2769],203:[1,2770],204:[1,2771],205:[1,2772],206:[1,2765],207:[1,2766],208:[1,2767],209:[1,2768],210:2752,211:$VI7},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2773]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2774,210:52,211:$Vp},{19:$VJ7,21:$VK7,22:2776,96:[1,2787],104:[1,2788],105:[1,2789],106:2786,177:2777,187:2775,192:2780,193:2781,194:2782,197:2785,200:[1,2790],201:[1,2791],202:[1,2796],203:[1,2797],204:[1,2798],205:[1,2799],206:[1,2792],207:[1,2793],208:[1,2794],209:[1,2795],210:2779,211:$VL7},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$Vl6,21:$Vm6,22:2801,83:2800,210:1802,211:$Vn6},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$Vo6,21:$Vp6,22:2803,83:2802,210:1828,211:$Vq6},o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$Vr6,21:$Vs6,22:2805,83:2804,210:1854,211:$Vt6},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VC3,$Vb2),o($VC,$VD,{61:2806,63:2807,68:2808,40:2809,74:2810,114:2814,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,2811],76:[1,2812],77:[1,2813]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:2815,60:2816,69:2817,88:2818,90:2819,91:2823,95:2824,92:[1,2820],93:[1,2821],94:[1,2822],97:$VM7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2826,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:2827}),o($VF3,$Vn1,{78:2828}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:2829}),o($VE3,$Vs1,{95:2385,91:2830,97:$V67,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:2831}),o($VI3,$Vu1,{82:2832}),o($VI3,$Vu1,{82:2833}),o($VF3,$Vv1,{101:2389,103:2390,87:2834,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:2835}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,2839],21:[1,2843],22:2837,32:2836,196:2838,210:2840,211:[1,2842],212:[1,2841]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:2844}),o($VJ3,$VI1),{115:[1,2845],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2846]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,2848],102:2847,104:[1,2849],105:[1,2850],106:2851,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2852]},o($VI3,$Vt),o($VI3,$Vu),o($VC3,$VU3),{117:[1,2853]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:2854,210:52,211:$Vp},{19:$VN7,21:$VO7,22:2856,96:[1,2867],104:[1,2868],105:[1,2869],106:2866,177:2857,187:2855,192:2860,193:2861,194:2862,197:2865,200:[1,2870],201:[1,2871],202:[1,2876],203:[1,2877],204:[1,2878],205:[1,2879],206:[1,2872],207:[1,2873],208:[1,2874],209:[1,2875],210:2859,211:$VP7},o($VH4,$VN4),{19:$Vn,21:$Vo,22:2880,210:52,211:$Vp},{19:$VQ7,21:$VR7,22:2882,96:[1,2893],104:[1,2894],105:[1,2895],106:2892,177:2883,187:2881,192:2886,193:2887,194:2888,197:2891,200:[1,2896],201:[1,2897],202:[1,2902],203:[1,2903],204:[1,2904],205:[1,2905],206:[1,2898],207:[1,2899],208:[1,2900],209:[1,2901],210:2885,211:$VS7},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,2906]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:2907,210:52,211:$Vp},{19:$VT7,21:$VU7,22:2909,96:[1,2920],104:[1,2921],105:[1,2922],106:2919,177:2910,187:2908,192:2913,193:2914,194:2915,197:2918,200:[1,2923],201:[1,2924],202:[1,2929],203:[1,2930],204:[1,2931],205:[1,2932],206:[1,2925],207:[1,2926],208:[1,2927],209:[1,2928],210:2912,211:$VV7},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VC3,$VU3),{117:[1,2933]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:2934,210:52,211:$Vp},{19:$VW7,21:$VX7,22:2936,96:[1,2947],104:[1,2948],105:[1,2949],106:2946,177:2937,187:2935,192:2940,193:2941,194:2942,197:2945,200:[1,2950],201:[1,2951],202:[1,2956],203:[1,2957],204:[1,2958],205:[1,2959],206:[1,2952],207:[1,2953],208:[1,2954],209:[1,2955],210:2939,211:$VY7},o($VH4,$VN4),{19:$Vn,21:$Vo,22:2960,210:52,211:$Vp},{19:$VZ7,21:$V_7,22:2962,96:[1,2973],104:[1,2974],105:[1,2975],106:2972,177:2963,187:2961,192:2966,193:2967,194:2968,197:2971,200:[1,2976],201:[1,2977],202:[1,2982],203:[1,2983],204:[1,2984],205:[1,2985],206:[1,2978],207:[1,2979],208:[1,2980],209:[1,2981],210:2965,211:$V$7},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,2986]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:2987,210:52,211:$Vp},{19:$V08,21:$V18,22:2989,96:[1,3000],104:[1,3001],105:[1,3002],106:2999,177:2990,187:2988,192:2993,193:2994,194:2995,197:2998,200:[1,3003],201:[1,3004],202:[1,3009],203:[1,3010],204:[1,3011],205:[1,3012],206:[1,3005],207:[1,3006],208:[1,3007],209:[1,3008],210:2992,211:$V28},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($V38,$Vv2,{79:3013,80:3014,188:3015,186:$V48}),o($VG6,$V58),o($Vx,$Vg,{51:3017,55:3018,36:3019,39:$Vy}),o($VI6,$V68),o($Vx,$Vg,{55:3020,36:3021,39:$Vy}),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3022],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3026],21:[1,3030],22:3024,32:3023,196:3025,210:3027,211:[1,3029],212:[1,3028]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3031}),o($VI6,$Vs1,{95:2468,91:3032,97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3033]},o($Vb8,$VJ1),{66:[1,3034]},o($Vl7,$Vz2,{95:1993,91:3035,97:$VK6,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3043],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3044,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3045]},o($Vq7,$Vk3),o($V38,$Vv2,{80:3014,188:3015,79:3046,186:$V48}),o($Vd8,$Vz6,{148:3047,149:3048,152:$Ve8,153:$Vf8,154:$Vg8,155:$Vh8}),o($Vi8,$VF6),o($Vj8,$VH6,{52:3053}),o($Vk8,$VJ6,{56:3054}),o($VC,$VD,{59:3055,69:3056,71:3057,72:3058,88:3061,90:3062,83:3064,84:3065,85:3066,74:3067,40:3068,91:3072,22:3073,87:3075,114:3076,95:3080,210:3083,101:3084,103:3085,19:[1,3082],21:[1,3087],65:[1,3059],67:[1,3060],75:[1,3077],76:[1,3078],77:[1,3079],81:[1,3063],92:[1,3069],93:[1,3070],94:[1,3071],97:$Vl8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3074],211:[1,3086]}),o($Vd8,$Vz6,{149:3048,148:3088,152:$Ve8,153:$Vf8,154:$Vg8,155:$Vh8}),o($Vw2,$Vv2,{80:2521,188:2522,79:3089,186:$Vr7}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3090,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:2521,188:2522,79:3091,186:$Vr7}),o($Vo1,$Vz2,{95:2030,91:3092,97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:3093,189:[1,3094]}),{19:$VP3,21:$VQ3,22:627,125:3095,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:3096,189:[1,3097]}),{19:$VP3,21:$VQ3,22:627,125:3098,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,3099]},o($Vt1,$VJ1),{96:[1,3101],102:3100,104:[1,3102],105:[1,3103],106:3104,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3105]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:3106,189:[1,3107]}),{19:$VP3,21:$VQ3,22:627,125:3108,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,3109]},{19:[1,3112],21:[1,3115],22:3111,83:3110,210:3113,211:[1,3114]},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VM6,21:$VN6,22:3117,83:3116,210:2065,211:$VO6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VP6,21:$VQ6,22:3119,83:3118,210:2091,211:$VR6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VS6,21:$VT6,22:3121,83:3120,210:2118,211:$VU6},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VV6,21:$VW6,22:3123,83:3122,210:2145,211:$VX6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VY6,21:$VZ6,22:3125,83:3124,210:2171,211:$V_6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$V$6,21:$V07,22:3127,83:3126,210:2198,211:$V17},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:3128}),o($Va1,$V11),o($Va1,$V21),{19:[1,3132],21:[1,3136],22:3130,32:3129,196:3131,210:3133,211:[1,3135],212:[1,3134]},{115:[1,3137],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:3138}),o($Vn2,$Vr1,{89:3139}),o($Vo1,$Vs1,{95:2611,91:3140,97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,3141]},o($Vn2,$VJ1),{66:[1,3142]},o($Vu2,$Vv2,{79:3143,80:3144,188:3145,186:[1,3146]}),o($Vw2,$Vv2,{79:3147,80:3148,188:3149,186:$Vm8}),o($Vm1,$Vz2,{95:2271,91:3151,97:$V27,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:3159,80:3160,188:3161,186:[1,3162]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3163],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3164,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,3165]},o($VH1,$Vk3),o($Vo1,$VY4),{189:[1,3168],190:3166,191:[1,3167]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3169,199:3170,107:[1,3171]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3174],190:3172,191:[1,3173]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3175,199:3176,107:[1,3177]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3180],21:[1,3183],22:3179,83:3178,210:3181,211:[1,3182]},{189:[1,3186],190:3184,191:[1,3185]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3187,199:3188,107:[1,3189]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vo1,$VY4),{189:[1,3192],190:3190,191:[1,3191]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3193,199:3194,107:[1,3195]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3198],190:3196,191:[1,3197]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3199,199:3200,107:[1,3201]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3204],21:[1,3207],22:3203,83:3202,210:3205,211:[1,3206]},{189:[1,3210],190:3208,191:[1,3209]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3211,199:3212,107:[1,3213]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:3214}),o($VC3,$V11),o($VC3,$V21),{19:[1,3218],21:[1,3222],22:3216,32:3215,196:3217,210:3219,211:[1,3221],212:[1,3220]},{115:[1,3223],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:3224}),o($VF4,$Vr1,{89:3225}),o($VF3,$Vs1,{95:2824,91:3226,97:$VM7,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,3227]},o($VF4,$VJ1),{66:[1,3228]},o($VG4,$Vv2,{79:3229,80:3230,188:3231,186:[1,3232]}),o($VH4,$Vv2,{79:3233,80:3234,188:3235,186:$Vo8}),o($VE3,$Vz2,{95:2385,91:3237,97:$V67,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:3245,80:3246,188:3247,186:[1,3248]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3249],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3250,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,3251]},o($VJ3,$Vk3),o($VF3,$VY4),{189:[1,3254],190:3252,191:[1,3253]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:3255,199:3256,107:[1,3257]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,3260],190:3258,191:[1,3259]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:3261,199:3262,107:[1,3263]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,3266],21:[1,3269],22:3265,83:3264,210:3267,211:[1,3268]},{189:[1,3272],190:3270,191:[1,3271]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:3273,199:3274,107:[1,3275]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($VF3,$VY4),{189:[1,3278],190:3276,191:[1,3277]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:3279,199:3280,107:[1,3281]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,3284],190:3282,191:[1,3283]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:3285,199:3286,107:[1,3287]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,3290],21:[1,3293],22:3289,83:3288,210:3291,211:[1,3292]},{189:[1,3296],190:3294,191:[1,3295]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:3297,199:3298,107:[1,3299]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($Va4,$Vq8),o($Vy6,$VN3),o($Va4,$VO3,{31:3300,189:[1,3301]}),{19:$VP3,21:$VQ3,22:627,125:3302,195:$VR3,210:630,211:$VS3},o($VG6,$Vr8),o($VI6,$VJ6,{56:3303}),o($VC,$VD,{59:3304,69:3305,71:3306,72:3307,88:3310,90:3311,83:3313,84:3314,85:3315,74:3316,40:3317,91:3321,22:3322,87:3324,114:3325,95:3329,210:3332,101:3333,103:3334,19:[1,3331],21:[1,3336],65:[1,3308],67:[1,3309],75:[1,3326],76:[1,3327],77:[1,3328],81:[1,3312],92:[1,3318],93:[1,3319],94:[1,3320],97:$Vs8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3323],211:[1,3335]}),o($VI6,$Vt8),o($VC,$VD,{59:3337,69:3338,71:3339,72:3340,88:3343,90:3344,83:3346,84:3347,85:3348,74:3349,40:3350,91:3354,22:3355,87:3357,114:3358,95:3362,210:3365,101:3366,103:3367,19:[1,3364],21:[1,3369],65:[1,3341],67:[1,3342],75:[1,3359],76:[1,3360],77:[1,3361],81:[1,3345],92:[1,3351],93:[1,3352],94:[1,3353],97:$Vu8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3356],211:[1,3368]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3370,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:2468,91:3371,97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,3372]},o($Vm7,$VJ1),{96:[1,3374],102:3373,104:[1,3375],105:[1,3376],106:3377,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3378]},o($Vm7,$Vg4),{117:[1,3379]},{19:[1,3382],21:[1,3385],22:3381,83:3380,210:3383,211:[1,3384]},o($Va4,$Vw8),o($Vd8,$Vn1,{78:3386}),o($Vd8,$V77),o($Vd8,$V87),o($Vd8,$V97),o($Vd8,$Va7),o($Vd8,$Vb7),o($Vi8,$Vc7,{53:3387,47:[1,3388]}),o($Vj8,$Vd7,{57:3389,49:[1,3390]}),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:3391,72:3392,74:3393,40:3394,114:3395,75:[1,3396],76:[1,3397],77:[1,3398],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:3399,69:3400,88:3401,90:3402,91:3406,95:3407,92:[1,3403],93:[1,3404],94:[1,3405],97:$Vx8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3409,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:3410}),o($Vz8,$Vs1,{95:3080,91:3411,97:$Vl8,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:3412}),o($VA8,$Vu1,{82:3413}),o($VA8,$Vu1,{82:3414}),o($Vk8,$Vv1,{101:3084,103:3085,87:3415,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:3416}),o($VC8,$VI1),{115:[1,3417],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,3421],21:[1,3425],22:3419,32:3418,196:3420,210:3422,211:[1,3424],212:[1,3423]},{96:[1,3426]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,3428],102:3427,104:[1,3429],105:[1,3430],106:3431,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3432]},o($VA8,$Vt),o($VA8,$Vu),o($Vd8,$Vn1,{78:3433}),o($Va1,$VU3),{117:[1,3434]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:3435,210:52,211:$Vp},{19:$VD8,21:$VE8,22:3437,96:[1,3448],104:[1,3449],105:[1,3450],106:3447,177:3438,187:3436,192:3441,193:3442,194:3443,197:3446,200:[1,3451],201:[1,3452],202:[1,3457],203:[1,3458],204:[1,3459],205:[1,3460],206:[1,3453],207:[1,3454],208:[1,3455],209:[1,3456],210:3440,211:$VF8},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:3461,210:52,211:$Vp},{19:$VG8,21:$VH8,22:3463,96:[1,3474],104:[1,3475],105:[1,3476],106:3473,177:3464,187:3462,192:3467,193:3468,194:3469,197:3472,200:[1,3477],201:[1,3478],202:[1,3483],203:[1,3484],204:[1,3485],205:[1,3486],206:[1,3479],207:[1,3480],208:[1,3481],209:[1,3482],210:3466,211:$VI8},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,3487]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:3488,210:52,211:$Vp},{19:$VJ8,21:$VK8,22:3490,96:[1,3501],104:[1,3502],105:[1,3503],106:3500,177:3491,187:3489,192:3494,193:3495,194:3496,197:3499,200:[1,3504],201:[1,3505],202:[1,3510],203:[1,3511],204:[1,3512],205:[1,3513],206:[1,3506],207:[1,3507],208:[1,3508],209:[1,3509],210:3493,211:$VL8},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vw2,$Vv2,{80:3148,188:3149,79:3514,186:$Vm8}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3515,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:3148,188:3149,79:3516,186:$Vm8}),o($Vo1,$Vz2,{95:2611,91:3517,97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:3518,189:[1,3519]}),{19:$VP3,21:$VQ3,22:627,125:3520,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:3521,189:[1,3522]}),{19:$VP3,21:$VQ3,22:627,125:3523,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,3524]},o($Vt1,$VJ1),{96:[1,3526],102:3525,104:[1,3527],105:[1,3528],106:3529,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3530]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:3531,189:[1,3532]}),{19:$VP3,21:$VQ3,22:627,125:3533,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,3534]},{19:[1,3537],21:[1,3540],22:3536,83:3535,210:3538,211:[1,3539]},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$Vu7,21:$Vv7,22:3542,83:3541,210:2646,211:$Vw7},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$Vx7,21:$Vy7,22:3544,83:3543,210:2672,211:$Vz7},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VA7,21:$VB7,22:3546,83:3545,210:2699,211:$VC7},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VD7,21:$VE7,22:3548,83:3547,210:2726,211:$VF7},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VG7,21:$VH7,22:3550,83:3549,210:2752,211:$VI7},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VJ7,21:$VK7,22:3552,83:3551,210:2779,211:$VL7},o($VH4,$Vv2,{80:3234,188:3235,79:3553,186:$Vo8}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3554,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:3234,188:3235,79:3555,186:$Vo8}),o($VF3,$Vz2,{95:2824,91:3556,97:$VM7,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:3557,189:[1,3558]}),{19:$VP3,21:$VQ3,22:627,125:3559,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:3560,189:[1,3561]}),{19:$VP3,21:$VQ3,22:627,125:3562,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,3563]},o($VI3,$VJ1),{96:[1,3565],102:3564,104:[1,3566],105:[1,3567],106:3568,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3569]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:3570,189:[1,3571]}),{19:$VP3,21:$VQ3,22:627,125:3572,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,3573]},{19:[1,3576],21:[1,3579],22:3575,83:3574,210:3577,211:[1,3578]},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$VN7,21:$VO7,22:3581,83:3580,210:2859,211:$VP7},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$VQ7,21:$VR7,22:3583,83:3582,210:2885,211:$VS7},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$VT7,21:$VU7,22:3585,83:3584,210:2912,211:$VV7},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$VW7,21:$VX7,22:3587,83:3586,210:2939,211:$VY7},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$VZ7,21:$V_7,22:3589,83:3588,210:2965,211:$V$7},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$V08,21:$V18,22:3591,83:3590,210:2992,211:$V28},o($V38,$VN4),{19:$Vn,21:$Vo,22:3592,210:52,211:$Vp},{19:$VM8,21:$VN8,22:3594,96:[1,3605],104:[1,3606],105:[1,3607],106:3604,177:3595,187:3593,192:3598,193:3599,194:3600,197:3603,200:[1,3608],201:[1,3609],202:[1,3614],203:[1,3615],204:[1,3616],205:[1,3617],206:[1,3610],207:[1,3611],208:[1,3612],209:[1,3613],210:3597,211:$VO8},o($VG6,$Vd7,{57:3618,49:[1,3619]}),o($VI6,$Ve7),o($VI6,$Vf7,{70:3620,72:3621,74:3622,40:3623,114:3624,75:[1,3625],76:[1,3626],77:[1,3627],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:3628,69:3629,88:3630,90:3631,91:3635,95:3636,92:[1,3632],93:[1,3633],94:[1,3634],97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3638,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:3639}),o($Vl7,$Vs1,{95:3329,91:3640,97:$Vs8,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:3641}),o($Vm7,$Vu1,{82:3642}),o($Vm7,$Vu1,{82:3643}),o($VI6,$Vv1,{101:3333,103:3334,87:3644,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:3645}),o($Vq7,$VI1),{115:[1,3646],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,3650],21:[1,3654],22:3648,32:3647,196:3649,210:3651,211:[1,3653],212:[1,3652]},{96:[1,3655]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,3657],102:3656,104:[1,3658],105:[1,3659],106:3660,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3661]},o($Vm7,$Vt),o($Vm7,$Vu),o($VI6,$Ve7),o($VI6,$Vf7,{70:3662,72:3663,74:3664,40:3665,114:3666,75:[1,3667],76:[1,3668],77:[1,3669],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:3670,69:3671,88:3672,90:3673,91:3677,95:3678,92:[1,3674],93:[1,3675],94:[1,3676],97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3680,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:3681}),o($Vl7,$Vs1,{95:3362,91:3682,97:$Vu8,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:3683}),o($Vm7,$Vu1,{82:3684}),o($Vm7,$Vu1,{82:3685}),o($VI6,$Vv1,{101:3366,103:3367,87:3686,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:3687}),o($Vq7,$VI1),{115:[1,3688],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,3692],21:[1,3696],22:3690,32:3689,196:3691,210:3693,211:[1,3695],212:[1,3694]},{96:[1,3697]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,3699],102:3698,104:[1,3700],105:[1,3701],106:3702,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3703]},o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,3704]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,3705]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),o($VR8,$Vv2,{79:3706,80:3707,188:3708,186:$VS8}),o($Vj8,$V58),o($Vx,$Vg,{51:3710,55:3711,36:3712,39:$Vy}),o($Vk8,$V68),o($Vx,$Vg,{55:3713,36:3714,39:$Vy}),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,3715],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,3719],21:[1,3723],22:3717,32:3716,196:3718,210:3720,211:[1,3722],212:[1,3721]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:3724}),o($Vk8,$Vs1,{95:3407,91:3725,97:$Vx8,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,3726]},o($VT8,$VJ1),{66:[1,3727]},o($Vz8,$Vz2,{95:3080,91:3728,97:$Vl8,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3736],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3737,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,3738]},o($VC8,$Vk3),o($VR8,$Vv2,{80:3707,188:3708,79:3739,186:$VS8}),o($Vo1,$VY4),{189:[1,3742],190:3740,191:[1,3741]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3743,199:3744,107:[1,3745]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3748],190:3746,191:[1,3747]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3749,199:3750,107:[1,3751]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3754],21:[1,3757],22:3753,83:3752,210:3755,211:[1,3756]},{189:[1,3760],190:3758,191:[1,3759]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3761,199:3762,107:[1,3763]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Va1,$VU3),{117:[1,3764]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:3765,210:52,211:$Vp},{19:$VV8,21:$VW8,22:3767,96:[1,3778],104:[1,3779],105:[1,3780],106:3777,177:3768,187:3766,192:3771,193:3772,194:3773,197:3776,200:[1,3781],201:[1,3782],202:[1,3787],203:[1,3788],204:[1,3789],205:[1,3790],206:[1,3783],207:[1,3784],208:[1,3785],209:[1,3786],210:3770,211:$VX8},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:3791,210:52,211:$Vp},{19:$VY8,21:$VZ8,22:3793,96:[1,3804],104:[1,3805],105:[1,3806],106:3803,177:3794,187:3792,192:3797,193:3798,194:3799,197:3802,200:[1,3807],201:[1,3808],202:[1,3813],203:[1,3814],204:[1,3815],205:[1,3816],206:[1,3809],207:[1,3810],208:[1,3811],209:[1,3812],210:3796,211:$V_8},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,3817]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:3818,210:52,211:$Vp},{19:$V$8,21:$V09,22:3820,96:[1,3831],104:[1,3832],105:[1,3833],106:3830,177:3821,187:3819,192:3824,193:3825,194:3826,197:3829,200:[1,3834],201:[1,3835],202:[1,3840],203:[1,3841],204:[1,3842],205:[1,3843],206:[1,3836],207:[1,3837],208:[1,3838],209:[1,3839],210:3823,211:$V19},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($VC3,$VU3),{117:[1,3844]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:3845,210:52,211:$Vp},{19:$V29,21:$V39,22:3847,96:[1,3858],104:[1,3859],105:[1,3860],106:3857,177:3848,187:3846,192:3851,193:3852,194:3853,197:3856,200:[1,3861],201:[1,3862],202:[1,3867],203:[1,3868],204:[1,3869],205:[1,3870],206:[1,3863],207:[1,3864],208:[1,3865],209:[1,3866],210:3850,211:$V49},o($VH4,$VN4),{19:$Vn,21:$Vo,22:3871,210:52,211:$Vp},{19:$V59,21:$V69,22:3873,96:[1,3884],104:[1,3885],105:[1,3886],106:3883,177:3874,187:3872,192:3877,193:3878,194:3879,197:3882,200:[1,3887],201:[1,3888],202:[1,3893],203:[1,3894],204:[1,3895],205:[1,3896],206:[1,3889],207:[1,3890],208:[1,3891],209:[1,3892],210:3876,211:$V79},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,3897]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:3898,210:52,211:$Vp},{19:$V89,21:$V99,22:3900,96:[1,3911],104:[1,3912],105:[1,3913],106:3910,177:3901,187:3899,192:3904,193:3905,194:3906,197:3909,200:[1,3914],201:[1,3915],202:[1,3920],203:[1,3921],204:[1,3922],205:[1,3923],206:[1,3916],207:[1,3917],208:[1,3918],209:[1,3919],210:3903,211:$Va9},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),{189:[1,3926],190:3924,191:[1,3925]},o($Vy6,$VM5),o($Vy6,$VN5),o($Vy6,$VO5),o($Vy6,$Vq),o($Vy6,$Vr),o($Vy6,$Vj4),o($Vy6,$Vk4),o($Vy6,$Vl4),o($Vy6,$Vt),o($Vy6,$Vu),o($Vy6,$Vm4),o($Vy6,$Vn4,{198:3927,199:3928,107:[1,3929]}),o($Vy6,$Vo4),o($Vy6,$Vp4),o($Vy6,$Vq4),o($Vy6,$Vr4),o($Vy6,$Vs4),o($Vy6,$Vt4),o($Vy6,$Vu4),o($Vy6,$Vv4),o($Vy6,$Vw4),o($Vb9,$Vg3),o($Vb9,$Vh3),o($Vb9,$Vi3),o($Vb9,$Vj3),o($VI6,$V68),o($Vx,$Vg,{55:3930,36:3931,39:$Vy}),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3932],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3936],21:[1,3940],22:3934,32:3933,196:3935,210:3937,211:[1,3939],212:[1,3938]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3941}),o($VI6,$Vs1,{95:3636,91:3942,97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3943]},o($Vb8,$VJ1),{66:[1,3944]},o($Vl7,$Vz2,{95:3329,91:3945,97:$Vs8,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3953],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3954,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3955]},o($Vq7,$Vk3),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3956],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3960],21:[1,3964],22:3958,32:3957,196:3959,210:3961,211:[1,3963],212:[1,3962]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3965}),o($VI6,$Vs1,{95:3678,91:3966,97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3967]},o($Vb8,$VJ1),{66:[1,3968]},o($Vl7,$Vz2,{95:3362,91:3969,97:$Vu8,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3977],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3978,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3979]},o($Vq7,$Vk3),o($VI6,$VY4),{19:[1,3982],21:[1,3985],22:3981,83:3980,210:3983,211:[1,3984]},o($V16,$Vq8),o($Vd8,$VN3),o($V16,$VO3,{31:3986,189:[1,3987]}),{19:$VP3,21:$VQ3,22:627,125:3988,195:$VR3,210:630,211:$VS3},o($Vj8,$Vr8),o($Vk8,$VJ6,{56:3989}),o($VC,$VD,{59:3990,69:3991,71:3992,72:3993,88:3996,90:3997,83:3999,84:4000,85:4001,74:4002,40:4003,91:4007,22:4008,87:4010,114:4011,95:4015,210:4018,101:4019,103:4020,19:[1,4017],21:[1,4022],65:[1,3994],67:[1,3995],75:[1,4012],76:[1,4013],77:[1,4014],81:[1,3998],92:[1,4004],93:[1,4005],94:[1,4006],97:$Ve9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4009],211:[1,4021]}),o($Vk8,$Vt8),o($VC,$VD,{59:4023,69:4024,71:4025,72:4026,88:4029,90:4030,83:4032,84:4033,85:4034,74:4035,40:4036,91:4040,22:4041,87:4043,114:4044,95:4048,210:4051,101:4052,103:4053,19:[1,4050],21:[1,4055],65:[1,4027],67:[1,4028],75:[1,4045],76:[1,4046],77:[1,4047],81:[1,4031],92:[1,4037],93:[1,4038],94:[1,4039],97:$Vf9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4042],211:[1,4054]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4056,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:3407,91:4057,97:$Vx8,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4058]},o($VA8,$VJ1),{96:[1,4060],102:4059,104:[1,4061],105:[1,4062],106:4063,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4064]},o($VA8,$Vg4),{117:[1,4065]},{19:[1,4068],21:[1,4071],22:4067,83:4066,210:4069,211:[1,4070]},o($V16,$Vw8),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VD8,21:$VE8,22:4073,83:4072,210:3440,211:$VF8},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VG8,21:$VH8,22:4075,83:4074,210:3466,211:$VI8},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VJ8,21:$VK8,22:4077,83:4076,210:3493,211:$VL8},o($Vo1,$VY4),{189:[1,4080],190:4078,191:[1,4079]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:4081,199:4082,107:[1,4083]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,4086],190:4084,191:[1,4085]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:4087,199:4088,107:[1,4089]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,4092],21:[1,4095],22:4091,83:4090,210:4093,211:[1,4094]},{189:[1,4098],190:4096,191:[1,4097]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:4099,199:4100,107:[1,4101]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($VF3,$VY4),{189:[1,4104],190:4102,191:[1,4103]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:4105,199:4106,107:[1,4107]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,4110],190:4108,191:[1,4109]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:4111,199:4112,107:[1,4113]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,4116],21:[1,4119],22:4115,83:4114,210:4117,211:[1,4118]},{189:[1,4122],190:4120,191:[1,4121]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:4123,199:4124,107:[1,4125]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($V38,$VU1),o($V38,$VV1),o($V38,$VW1),o($Vy6,$Vz5),o($Vy6,$VA5),{19:$VM8,21:$VN8,22:4127,83:4126,210:3597,211:$VO8},o($VI6,$Vt8),o($VC,$VD,{59:4128,69:4129,71:4130,72:4131,88:4134,90:4135,83:4137,84:4138,85:4139,74:4140,40:4141,91:4145,22:4146,87:4148,114:4149,95:4153,210:4156,101:4157,103:4158,19:[1,4155],21:[1,4160],65:[1,4132],67:[1,4133],75:[1,4150],76:[1,4151],77:[1,4152],81:[1,4136],92:[1,4142],93:[1,4143],94:[1,4144],97:$Vg9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4147],211:[1,4159]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4161,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:3636,91:4162,97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4163]},o($Vm7,$VJ1),{96:[1,4165],102:4164,104:[1,4166],105:[1,4167],106:4168,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4169]},o($Vm7,$Vg4),{117:[1,4170]},{19:[1,4173],21:[1,4176],22:4172,83:4171,210:4174,211:[1,4175]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4177,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:3678,91:4178,97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4179]},o($Vm7,$VJ1),{96:[1,4181],102:4180,104:[1,4182],105:[1,4183],106:4184,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4185]},o($Vm7,$Vg4),{117:[1,4186]},{19:[1,4189],21:[1,4192],22:4188,83:4187,210:4190,211:[1,4191]},o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($VR8,$VN4),{19:$Vn,21:$Vo,22:4193,210:52,211:$Vp},{19:$Vh9,21:$Vi9,22:4195,96:[1,4206],104:[1,4207],105:[1,4208],106:4205,177:4196,187:4194,192:4199,193:4200,194:4201,197:4204,200:[1,4209],201:[1,4210],202:[1,4215],203:[1,4216],204:[1,4217],205:[1,4218],206:[1,4211],207:[1,4212],208:[1,4213],209:[1,4214],210:4198,211:$Vj9},o($Vj8,$Vd7,{57:4219,49:[1,4220]}),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4221,72:4222,74:4223,40:4224,114:4225,75:[1,4226],76:[1,4227],77:[1,4228],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4229,69:4230,88:4231,90:4232,91:4236,95:4237,92:[1,4233],93:[1,4234],94:[1,4235],97:$Vk9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4239,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4240}),o($Vz8,$Vs1,{95:4015,91:4241,97:$Ve9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4242}),o($VA8,$Vu1,{82:4243}),o($VA8,$Vu1,{82:4244}),o($Vk8,$Vv1,{101:4019,103:4020,87:4245,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4246}),o($VC8,$VI1),{115:[1,4247],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4251],21:[1,4255],22:4249,32:4248,196:4250,210:4252,211:[1,4254],212:[1,4253]},{96:[1,4256]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4258],102:4257,104:[1,4259],105:[1,4260],106:4261,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4262]},o($VA8,$Vt),o($VA8,$Vu),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4263,72:4264,74:4265,40:4266,114:4267,75:[1,4268],76:[1,4269],77:[1,4270],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4271,69:4272,88:4273,90:4274,91:4278,95:4279,92:[1,4275],93:[1,4276],94:[1,4277],97:$Vl9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4281,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4282}),o($Vz8,$Vs1,{95:4048,91:4283,97:$Vf9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4284}),o($VA8,$Vu1,{82:4285}),o($VA8,$Vu1,{82:4286}),o($Vk8,$Vv1,{101:4052,103:4053,87:4287,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4288}),o($VC8,$VI1),{115:[1,4289],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4293],21:[1,4297],22:4291,32:4290,196:4292,210:4294,211:[1,4296],212:[1,4295]},{96:[1,4298]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4300],102:4299,104:[1,4301],105:[1,4302],106:4303,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4304]},o($VA8,$Vt),o($VA8,$Vu),{117:[1,4305]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4306]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VV8,21:$VW8,22:4308,83:4307,210:3770,211:$VX8},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VY8,21:$VZ8,22:4310,83:4309,210:3796,211:$V_8},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$V$8,21:$V09,22:4312,83:4311,210:3823,211:$V19},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$V29,21:$V39,22:4314,83:4313,210:3850,211:$V49},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$V59,21:$V69,22:4316,83:4315,210:3876,211:$V79},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$V89,21:$V99,22:4318,83:4317,210:3903,211:$Va9},o($Vy6,$V66),o($Vy6,$VE1),o($VI6,$Ve7),o($VI6,$Vf7,{70:4319,72:4320,74:4321,40:4322,114:4323,75:[1,4324],76:[1,4325],77:[1,4326],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:4327,69:4328,88:4329,90:4330,91:4334,95:4335,92:[1,4331],93:[1,4332],94:[1,4333],97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4337,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:4338}),o($Vl7,$Vs1,{95:4153,91:4339,97:$Vg9,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:4340}),o($Vm7,$Vu1,{82:4341}),o($Vm7,$Vu1,{82:4342}),o($VI6,$Vv1,{101:4157,103:4158,87:4343,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:4344}),o($Vq7,$VI1),{115:[1,4345],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,4349],21:[1,4353],22:4347,32:4346,196:4348,210:4350,211:[1,4352],212:[1,4351]},{96:[1,4354]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,4356],102:4355,104:[1,4357],105:[1,4358],106:4359,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4360]},o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,4361]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4362]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),{117:[1,4363]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4364]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),{189:[1,4367],190:4365,191:[1,4366]},o($Vd8,$VM5),o($Vd8,$VN5),o($Vd8,$VO5),o($Vd8,$Vq),o($Vd8,$Vr),o($Vd8,$Vj4),o($Vd8,$Vk4),o($Vd8,$Vl4),o($Vd8,$Vt),o($Vd8,$Vu),o($Vd8,$Vm4),o($Vd8,$Vn4,{198:4368,199:4369,107:[1,4370]}),o($Vd8,$Vo4),o($Vd8,$Vp4),o($Vd8,$Vq4),o($Vd8,$Vr4),o($Vd8,$Vs4),o($Vd8,$Vt4),o($Vd8,$Vu4),o($Vd8,$Vv4),o($Vd8,$Vw4),o($Vn9,$Vg3),o($Vn9,$Vh3),o($Vn9,$Vi3),o($Vn9,$Vj3),o($Vk8,$V68),o($Vx,$Vg,{55:4371,36:4372,39:$Vy}),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4373],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4377],21:[1,4381],22:4375,32:4374,196:4376,210:4378,211:[1,4380],212:[1,4379]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4382}),o($Vk8,$Vs1,{95:4237,91:4383,97:$Vk9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4384]},o($VT8,$VJ1),{66:[1,4385]},o($Vz8,$Vz2,{95:4015,91:4386,97:$Ve9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4394],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4395,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4396]},o($VC8,$Vk3),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4397],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4401],21:[1,4405],22:4399,32:4398,196:4400,210:4402,211:[1,4404],212:[1,4403]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4406}),o($Vk8,$Vs1,{95:4279,91:4407,97:$Vl9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4408]},o($VT8,$VJ1),{66:[1,4409]},o($Vz8,$Vz2,{95:4048,91:4410,97:$Vf9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4418],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4419,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4420]},o($VC8,$Vk3),o($Vk8,$VY4),{19:[1,4423],21:[1,4426],22:4422,83:4421,210:4424,211:[1,4425]},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,4427],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,4431],21:[1,4435],22:4429,32:4428,196:4430,210:4432,211:[1,4434],212:[1,4433]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:4436}),o($VI6,$Vs1,{95:4335,91:4437,97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,4438]},o($Vb8,$VJ1),{66:[1,4439]},o($Vl7,$Vz2,{95:4153,91:4440,97:$Vg9,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4448],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4449,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,4450]},o($Vq7,$Vk3),o($VI6,$VY4),{19:[1,4453],21:[1,4456],22:4452,83:4451,210:4454,211:[1,4455]},o($VI6,$VY4),{19:[1,4459],21:[1,4462],22:4458,83:4457,210:4460,211:[1,4461]},o($VR8,$VU1),o($VR8,$VV1),o($VR8,$VW1),o($Vd8,$Vz5),o($Vd8,$VA5),{19:$Vh9,21:$Vi9,22:4464,83:4463,210:4198,211:$Vj9},o($Vk8,$Vt8),o($VC,$VD,{59:4465,69:4466,71:4467,72:4468,88:4471,90:4472,83:4474,84:4475,85:4476,74:4477,40:4478,91:4482,22:4483,87:4485,114:4486,95:4490,210:4493,101:4494,103:4495,19:[1,4492],21:[1,4497],65:[1,4469],67:[1,4470],75:[1,4487],76:[1,4488],77:[1,4489],81:[1,4473],92:[1,4479],93:[1,4480],94:[1,4481],97:$Vr9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4484],211:[1,4496]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4498,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4237,91:4499,97:$Vk9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4500]},o($VA8,$VJ1),{96:[1,4502],102:4501,104:[1,4503],105:[1,4504],106:4505,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4506]},o($VA8,$Vg4),{117:[1,4507]},{19:[1,4510],21:[1,4513],22:4509,83:4508,210:4511,211:[1,4512]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4514,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4279,91:4515,97:$Vl9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4516]},o($VA8,$VJ1),{96:[1,4518],102:4517,104:[1,4519],105:[1,4520],106:4521,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4522]},o($VA8,$Vg4),{117:[1,4523]},{19:[1,4526],21:[1,4529],22:4525,83:4524,210:4527,211:[1,4528]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4530,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:4335,91:4531,97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4532]},o($Vm7,$VJ1),{96:[1,4534],102:4533,104:[1,4535],105:[1,4536],106:4537,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4538]},o($Vm7,$Vg4),{117:[1,4539]},{19:[1,4542],21:[1,4545],22:4541,83:4540,210:4543,211:[1,4544]},o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($Vd8,$V66),o($Vd8,$VE1),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4546,72:4547,74:4548,40:4549,114:4550,75:[1,4551],76:[1,4552],77:[1,4553],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4554,69:4555,88:4556,90:4557,91:4561,95:4562,92:[1,4558],93:[1,4559],94:[1,4560],97:$Vs9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4564,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4565}),o($Vz8,$Vs1,{95:4490,91:4566,97:$Vr9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4567}),o($VA8,$Vu1,{82:4568}),o($VA8,$Vu1,{82:4569}),o($Vk8,$Vv1,{101:4494,103:4495,87:4570,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4571}),o($VC8,$VI1),{115:[1,4572],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4576],21:[1,4580],22:4574,32:4573,196:4575,210:4577,211:[1,4579],212:[1,4578]},{96:[1,4581]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4583],102:4582,104:[1,4584],105:[1,4585],106:4586,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4587]},o($VA8,$Vt),o($VA8,$Vu),{117:[1,4588]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4589]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),{117:[1,4590]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4591]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),{117:[1,4592]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4593]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4594],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4598],21:[1,4602],22:4596,32:4595,196:4597,210:4599,211:[1,4601],212:[1,4600]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4603}),o($Vk8,$Vs1,{95:4562,91:4604,97:$Vs9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4605]},o($VT8,$VJ1),{66:[1,4606]},o($Vz8,$Vz2,{95:4490,91:4607,97:$Vr9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4615],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4616,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4617]},o($VC8,$Vk3),o($Vk8,$VY4),{19:[1,4620],21:[1,4623],22:4619,83:4618,210:4621,211:[1,4622]},o($Vk8,$VY4),{19:[1,4626],21:[1,4629],22:4625,83:4624,210:4627,211:[1,4628]},o($VI6,$VY4),{19:[1,4632],21:[1,4635],22:4631,83:4630,210:4633,211:[1,4634]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4636,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4562,91:4637,97:$Vs9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4638]},o($VA8,$VJ1),{96:[1,4640],102:4639,104:[1,4641],105:[1,4642],106:4643,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4644]},o($VA8,$Vg4),{117:[1,4645]},{19:[1,4648],21:[1,4651],22:4647,83:4646,210:4649,211:[1,4650]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,4652]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4653]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),o($Vk8,$VY4),{19:[1,4656],21:[1,4659],22:4655,83:4654,210:4657,211:[1,4658]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu)],\ndefaultActions: {6:[2,11],30:[2,1],102:[2,115],103:[2,116],104:[2,117],111:[2,128],112:[2,129],210:[2,248],211:[2,249],212:[2,250],213:[2,251],333:[2,31],361:[2,138],362:[2,142],364:[2,144],569:[2,29],570:[2,33],607:[2,30],1117:[2,142],1119:[2,144]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShEx parser in the Jison parser generator format.\n  */\n\n  var UNBOUNDED = -1;\n\n  var ShExUtil = require(\"@shexjs/core\").Util;\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean',\n      XSD_TRUE =  '\"true\"^^'  + XSD_BOOLEAN,\n      XSD_FALSE = '\"false\"^^' + XSD_BOOLEAN,\n      XSD_PATTERN        = XSD + 'pattern',\n      XSD_MININCLUSIVE   = XSD + 'minInclusive',\n      XSD_MINEXCLUSIVE   = XSD + 'minExclusive',\n      XSD_MAXINCLUSIVE   = XSD + 'maxInclusive',\n      XSD_MAXEXCLUSIVE   = XSD + 'maxExclusive',\n      XSD_LENGTH         = XSD + 'length',\n      XSD_MINLENGTH      = XSD + 'minLength',\n      XSD_MAXLENGTH      = XSD + 'maxLength',\n      XSD_TOTALDIGITS    = XSD + 'totalDigits',\n      XSD_FRACTIONDIGITS = XSD + 'fractionDigits';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  Parser._setBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._base = baseIRI) {\n      Parser._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._baseRoot   = baseIRI[0];\n      Parser._baseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._baseScheme : Parser._baseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._basePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return { value: value, type: type };\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser._sourceMap = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._base = Parser._baseIRI = Parser._baseIRIPath = Parser._baseIRIRoot = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      semactEscapeReplacements = { '\\\\': '\\\\', '%': '%' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return { value: ShExUtil.unescapeText(string, stringEscapeReplacements) };\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, { language: lowercase(lang.substr(1)) });\n  }\n\n  // Translates regular expression escape codes in the string into their textual equivalent\n  function unescapeRegexp (regexp) {\n    var end = regexp.lastIndexOf(\"/\");\n    var s = regexp.substr(1, end-1);\n    var regexpEscapeReplacements = {\n      '.': \"\\\\.\", '\\\\': \"\\\\\\\\\", '?': \"\\\\?\", '*': \"\\\\*\", '+': \"\\\\+\",\n      '{': \"\\\\{\", '}': \"\\\\}\", '(': \"\\\\(\", ')': \"\\\\)\", '|': \"\\\\|\",\n      '^': \"\\\\^\", '$': \"\\\\$\", '[': \"\\\\[\", ']': \"\\\\]\", '/': \"\\\\/\",\n      't': '\\\\t', 'n': '\\\\n', 'r': '\\\\r', '-': \"\\\\-\", '/': '/'\n    };\n    s = ShExUtil.unescapeText(s, regexpEscapeReplacements)\n    var ret = {\n      pattern: s\n    };\n    if (regexp.length > end+1)\n      ret.flags = regexp.substr(end+1);\n    return ret;\n  }\n\n  // Convenience function to return object with p1 key, value p2\n  function keyValObject(key, val) {\n    var ret = {};\n    ret[key] = val;\n    return ret;\n  }\n\n  // Return object with p1 key, p2 string value\n  function unescapeSemanticAction(key, string) {\n    string = string.substring(1, string.length - 2);\n    return {\n      type: \"SemAct\",\n      name: key,\n      code: ShExUtil.unescapeText(string, semactEscapeReplacements)\n    };\n  }\n\n  function error (e, yy) {\n    const hash = {\n      text: yy.lexer.match,\n      // token: this.terminals_[symbol] || symbol,\n      line: yy.lexer.yylineno,\n      loc: yy.lexer.yylloc,\n      // expected: expected\n      pos: yy.lexer.showPosition()\n    }\n    e.hash = hash;\n    if (Parser.recoverable) {\n      Parser.recoverable(e)\n    } else {\n      throw e;\n      Parser.reset();\n    }\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefix, yy) {\n    if (!(prefix in Parser._prefixes))\n      error(new Error('Parse error; unknown prefix \"' + prefix + ':\"'), yy);\n    return Parser._prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape, yy) {\n    if (shape === EmptyShape)\n      shape = { type: \"Shape\" };\n    if (Parser.productions && label in Parser.productions)\n      error(new Error(\"Structural error: \"+label+\" is a triple expression\"), yy);\n    if (!Parser.shapes)\n      Parser.shapes = new Map();\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else {\n      shape.id = label;\n      Parser.shapes[label] = shape;\n    }\n  }\n\n  // Add a production to the map\n  function addProduction (label, production, yy) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(new Error(\"Structural error: \"+label+\" is a shape expression\"), yy);\n    if (!Parser.productions)\n      Parser.productions = new Map();\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function addSourceMap (obj, yy) {\n    if (!Parser._sourceMap)\n      Parser._sourceMap = new Map();\n    let list = Parser._sourceMap.get(obj)\n    if (!list)\n      Parser._sourceMap.set(obj, list = []);\n    list.push(yy.lexer.yylloc);\n    return obj;\n  }\n\n  // shapeJunction judiciously takes a shapeAtom and an optional list of con/disjuncts.\n  // No created Shape{And,Or,Not} will have a `nested` shapeExpr.\n  // Don't nonest arguments to shapeJunction.\n  // shapeAtom emits `nested` so nonest every argument that can be a shapeAtom, i.e.\n  //   shapeAtom, inlineShapeAtom, shapeAtomNoRef\n  //   {,inline}shape{And,Or,Not}\n  //   this does NOT include shapeOrRef or nodeConstraint.\n  function shapeJunction (type, shapeAtom, juncts) {\n    if (juncts.length === 0) {\n      return nonest(shapeAtom);\n    } else if (shapeAtom.type === type && !shapeAtom.nested) {\n      nonest(shapeAtom).shapeExprs = nonest(shapeAtom).shapeExprs.concat(juncts);\n      return shapeAtom;\n    } else {\n      return { type: type, shapeExprs: [nonest(shapeAtom)].concat(juncts) };\n    }\n  }\n\n  // strip out .nested attribute\n  function nonest (shapeAtom) {\n    delete shapeAtom.nested;\n    return shapeAtom;\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 75;\nbreak;\ncase 2:return 76;\nbreak;\ncase 3: yy_.yytext = yy_.yytext.substr(1); return 181; \nbreak;\ncase 4:return 77;\nbreak;\ncase 5:return 211;\nbreak;\ncase 6:return 155;\nbreak;\ncase 7:return 105;\nbreak;\ncase 8:return 104;\nbreak;\ncase 9:return 96;\nbreak;\ncase 10:return 'ANON';\nbreak;\ncase 11:return 19;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 195;\nbreak;\ncase 14:return 97;\nbreak;\ncase 15:return 212;\nbreak;\ncase 16:return 191;\nbreak;\ncase 17:return 207;\nbreak;\ncase 18:return 209;\nbreak;\ncase 19:return 206;\nbreak;\ncase 20:return 208;\nbreak;\ncase 21:return 203;\nbreak;\ncase 22:return 205;\nbreak;\ncase 23:return 202;\nbreak;\ncase 24:return 204;\nbreak;\ncase 25:return 18;\nbreak;\ncase 26:return 20;\nbreak;\ncase 27:return 23;\nbreak;\ncase 28:return 26;\nbreak;\ncase 29:return 35;\nbreak;\ncase 30:return 'IT_VIRTUAL';\nbreak;\ncase 31:return 121;\nbreak;\ncase 32:return 123;\nbreak;\ncase 33:return 81;\nbreak;\ncase 34:return 93;\nbreak;\ncase 35:return 92;\nbreak;\ncase 36:return 94;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 47;\nbreak;\ncase 39:return 39;\nbreak;\ncase 40:return 108;\nbreak;\ncase 41:return 109;\nbreak;\ncase 42:return 110;\nbreak;\ncase 43:return 111;\nbreak;\ncase 44:return 98;\nbreak;\ncase 45:return 99;\nbreak;\ncase 46:return 100;\nbreak;\ncase 47:return 112;\nbreak;\ncase 48:return 113;\nbreak;\ncase 49:return 27;\nbreak;\ncase 50:return 186;\nbreak;\ncase 51:return 115;\nbreak;\ncase 52:return 117;\nbreak;\ncase 53:return 185;\nbreak;\ncase 54:return '||';\nbreak;\ncase 55:return 131;\nbreak;\ncase 56:return 136;\nbreak;\ncase 57:return 65;\nbreak;\ncase 58:return 66;\nbreak;\ncase 59:return 157;\nbreak;\ncase 60:return 159;\nbreak;\ncase 61:return 144;\nbreak;\ncase 62:return '!';\nbreak;\ncase 63:return 107;\nbreak;\ncase 64:return 156;\nbreak;\ncase 65:return 67;\nbreak;\ncase 66:return 174;\nbreak;\ncase 67:return 137;\nbreak;\ncase 68:return 152;\nbreak;\ncase 69:return 153;\nbreak;\ncase 70:return 154;\nbreak;\ncase 71:return 175;\nbreak;\ncase 72:return 189;\nbreak;\ncase 73:return 200;\nbreak;\ncase 74:return 201;\nbreak;\ncase 75:return 7;\nbreak;\ncase 76:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 77:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(\\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\\*)?))?\\}))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:a\\b)/,/^(?:(\\/([^\\u002f\\u005C\\u000A\\u000D]|\\\\[nrt\\\\|.?*+(){}$\\u002D\\u005B\\u005D\\u005E\\/]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:(\\{([^%\\\\]|\\\\[%\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\\}))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Vv][Ii][Rr][Tt][Uu][Aa][Ll]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\\/\\/)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&)/,/^(?:\\|\\|)/,/^(?:\\|)/,/^(?:,)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:!)/,/^(?:\\^\\^)/,/^(?:\\^)/,/^(?:\\.)/,/^(?:~)/,/^(?:;)/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShExJison;\nexports.Parser = ShExJison.Parser;\nexports.parse = function () { return ShExJison.parse.apply(ShExJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
        },
        {
          "id": 49,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "index": 25,
          "index2": 21,
          "size": 8542,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerId": 25,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 25,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 6,
            "building": 10,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 25,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
              "type": "cjs require",
              "userRequest": "./old.js",
              "loc": "14:10-29"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"
        },
        {
          "id": 50,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "index": 27,
          "index2": 25,
          "size": 4792,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerId": 14,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 14,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 34,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "type": "cjs require",
              "userRequest": "brace-expansion",
              "loc": "10:13-39"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"
        },
        {
          "id": 51,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
          "index": 28,
          "index2": 23,
          "size": 345,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 50,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 14,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            },
            {
              "id": 50,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 34,
                "building": 4
              }
            }
          ],
          "profile": {
            "factory": 4,
            "building": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 50,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "concat-map",
              "loc": "1:16-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"
        },
        {
          "id": 52,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
          "index": 29,
          "index2": 24,
          "size": 1174,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerId": 50,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 14,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            },
            {
              "id": 50,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "profile": {
                "factory": 34,
                "building": 4
              }
            }
          ],
          "profile": {
            "factory": 4,
            "building": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 50,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
              "type": "cjs require",
              "userRequest": "balanced-match",
              "loc": "2:15-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n"
        },
        {
          "id": 53,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
          "index": 30,
          "index2": 27,
          "size": 753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inherits",
              "loc": "47:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
        },
        {
          "id": 54,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/object-assign/index.js",
          "name": "./node_modules/object-assign/index.js",
          "index": 34,
          "index2": 30,
          "size": 2108,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "issuerId": 26,
          "issuerName": "./node_modules/assert/assert.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            },
            {
              "id": 26,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "name": "./node_modules/assert/assert.js",
              "profile": {
                "factory": 118,
                "building": 7,
                "dependencies": 71
              }
            }
          ],
          "profile": {
            "factory": 78,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 26,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
              "module": "./node_modules/assert/assert.js",
              "moduleName": "./node_modules/assert/assert.js",
              "type": "cjs require",
              "userRequest": "object-assign",
              "loc": "3:19-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"
        },
        {
          "id": 55,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "index": 36,
          "index2": 34,
          "size": 12002,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "./sync.js",
              "loc": "52:15-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"
        },
        {
          "id": 56,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "index": 38,
          "index2": 37,
          "size": 1365,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerId": 24,
          "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 24,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "profile": {
                "factory": 319,
                "building": 30,
                "dependencies": 4
              }
            }
          ],
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 24,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
              "type": "cjs require",
              "userRequest": "inflight",
              "loc": "58:15-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"
        },
        {
          "id": 57,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api sync",
          "name": "../shex-api sync",
          "index": 41,
          "index2": 39,
          "size": 160,
          "built": true,
          "optional": true,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "issuerId": 47,
          "issuerName": "../shex-api/shex-api.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": 47,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "name": "../shex-api/shex-api.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 47,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
              "module": "../shex-api/shex-api.js",
              "moduleName": "../shex-api/shex-api.js",
              "type": "cjs require context",
              "userRequest": ".",
              "loc": "312:11-24"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2
        },
        {
          "id": 58,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/base64-js/index.js",
          "name": "./node_modules/base64-js/index.js",
          "index": 45,
          "index2": 41,
          "size": 3944,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "base64-js",
              "loc": "11:13-33"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"
        },
        {
          "id": 59,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/ieee754/index.js",
          "name": "./node_modules/ieee754/index.js",
          "index": 46,
          "index2": 42,
          "size": 2064,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "ieee754",
              "loc": "12:14-32"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"
        },
        {
          "id": 60,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/isarray/index.js",
          "name": "./node_modules/isarray/index.js",
          "index": 47,
          "index2": 43,
          "size": 132,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "issuerId": 9,
          "issuerName": "./node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": 12,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
              "name": "./node_modules/n3/src/N3Lexer.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 9,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "name": "./node_modules/buffer/index.js",
              "profile": {
                "factory": 336,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 82,
            "building": 31
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
              "module": "./node_modules/buffer/index.js",
              "moduleName": "./node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "isarray",
              "loc": "13:14-32"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"
        },
        {
          "id": 61,
          "identifier": "ignored /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib util",
          "name": "util (ignored)",
          "index": 58,
          "index2": 53,
          "size": 15,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "60:16-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5
        },
        {
          "id": 62,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "index": 59,
          "index2": 55,
          "size": 6335,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/buffer_list",
              "loc": "72:17-58"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();"
        },
        {
          "id": 63,
          "identifier": "ignored /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams util",
          "name": "util (ignored)",
          "index": 60,
          "index2": 54,
          "size": 15,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "issuerId": 62,
          "issuerName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            },
            {
              "id": 62,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "name": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "profile": {
                "factory": 41,
                "building": 15,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 0,
            "building": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 62,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "module": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "moduleName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
              "type": "cjs require",
              "userRequest": "util",
              "loc": "18:16-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6
        },
        {
          "id": 64,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util-deprecate/browser.js",
          "name": "./node_modules/util-deprecate/browser.js",
          "index": 67,
          "index2": 60,
          "size": 1614,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "issuerId": 34,
          "issuerName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 34,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "name": "./node_modules/readable-stream/lib/_stream_writable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 51,
            "building": 3,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
              "module": "./node_modules/readable-stream/lib/_stream_writable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
              "type": "cjs require",
              "userRequest": "util-deprecate",
              "loc": "60:13-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"
        },
        {
          "id": 65,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/safe-buffer/index.js",
          "name": "./node_modules/safe-buffer/index.js",
          "index": 69,
          "index2": 63,
          "size": 1670,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
          "issuerId": 35,
          "issuerName": "./node_modules/string_decoder/lib/string_decoder.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            },
            {
              "id": 35,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
              "name": "./node_modules/string_decoder/lib/string_decoder.js",
              "profile": {
                "factory": 41,
                "building": 15,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 1,
            "dependencies": 0
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 35,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
              "module": "./node_modules/string_decoder/lib/string_decoder.js",
              "moduleName": "./node_modules/string_decoder/lib/string_decoder.js",
              "type": "cjs require",
              "userRequest": "safe-buffer",
              "loc": "26:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"
        },
        {
          "id": 66,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "index": 70,
          "index2": 66,
          "size": 5957,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/async_iterator",
              "loc": "1009:42-86"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;"
        },
        {
          "id": 67,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/from-browser.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/from-browser.js",
          "index": 72,
          "index2": 67,
          "size": 101,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "issuerId": 30,
          "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            },
            {
              "id": 30,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "name": "./node_modules/readable-stream/lib/_stream_readable.js",
              "profile": {
                "factory": 15,
                "building": 29,
                "dependencies": 35
              }
            }
          ],
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 30,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
              "module": "./node_modules/readable-stream/lib/_stream_readable.js",
              "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
              "type": "cjs require",
              "userRequest": "./internal/streams/from",
              "loc": "1111:13-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n"
        },
        {
          "id": 68,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
          "name": "./node_modules/readable-stream/lib/_stream_passthrough.js",
          "index": 74,
          "index2": 70,
          "size": 1630,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/_stream_passthrough.js",
              "loc": "7:22-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};"
        },
        {
          "id": 69,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "index": 75,
          "index2": 71,
          "size": 2428,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "issuerId": 6,
          "issuerName": "./node_modules/readable-stream/readable-browser.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              }
            },
            {
              "id": 6,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "name": "./node_modules/readable-stream/readable-browser.js",
              "profile": {
                "factory": 313,
                "building": 33
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 6,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
              "module": "./node_modules/readable-stream/readable-browser.js",
              "moduleName": "./node_modules/readable-stream/readable-browser.js",
              "type": "cjs require",
              "userRequest": "./lib/internal/streams/pipeline.js",
              "loc": "9:19-64"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;"
        },
        {
          "id": 70,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "name": "./node_modules/n3/src/index.js + 7 modules",
          "index": 42,
          "index2": 76,
          "size": 97617,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0,
            1
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "n3",
              "loc": "8:8-21"
            }
          ],
          "usedExports": true,
          "providedExports": [
            "Lexer",
            "Parser",
            "Writer",
            "Store",
            "StreamParser",
            "StreamWriter",
            "Util",
            "DataFactory",
            "Term",
            "NamedNode",
            "Literal",
            "BlankNode",
            "Variable",
            "DefaultGraph",
            "Quad",
            "Triple",
            "termFromId",
            "termToId"
          ],
          "optimizationBailout": [
            "ModuleConcatenation bailout: Cannot concat with ./node_modules/n3/src/IRIs.js because of ./node_modules/n3/src/N3Lexer.js",
            "ModuleConcatenation bailout: Cannot concat with ./node_modules/n3/src/N3Lexer.js (<- Module uses injected variables (Buffer))",
            "ModuleConcatenation bailout: Cannot concat with ./node_modules/readable-stream/readable-browser.js (<- Module is not an ECMAScript module)"
          ],
          "depth": 1,
          "modules": [
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "index": 42,
              "index2": 76,
              "size": 659,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "issuerId": 38,
              "issuerName": "./shex-webapp.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                }
              ],
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": 38,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "module": "./shex-webapp.js",
                  "moduleName": "./shex-webapp.js",
                  "type": "cjs require",
                  "userRequest": "n3",
                  "loc": "8:8-21"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "Lexer",
                "Parser",
                "Writer",
                "Store",
                "StreamParser",
                "StreamWriter",
                "Util",
                "DataFactory",
                "Term",
                "NamedNode",
                "Literal",
                "BlankNode",
                "Variable",
                "DefaultGraph",
                "Quad",
                "Triple",
                "termFromId",
                "termToId"
              ],
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./shex-webapp.js (referenced with cjs require)"
              ],
              "depth": 1,
              "source": "import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
              "name": "./node_modules/n3/src/N3Util.js",
              "index": 52,
              "index2": 48,
              "size": 2154,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Util",
                  "loc": "4:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
                  "module": "./node_modules/n3/src/N3DataFactory.js",
                  "moduleName": "./node_modules/n3/src/N3DataFactory.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Util",
                  "loc": "5:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Util",
                  "loc": "7:0-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Util",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Util",
                  "loc": "194:6-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
                  "module": "./node_modules/n3/src/N3DataFactory.js",
                  "moduleName": "./node_modules/n3/src/N3DataFactory.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Util",
                  "loc": "250:9-23"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "isNamedNode",
                "isBlankNode",
                "isLiteral",
                "isVariable",
                "isDefaultGraph",
                "inDefaultGraph",
                "prefix",
                "prefixes"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  var prefixes = Object.create(null);\n  for (var prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      var cache = Object.create(null);\n      prefixes[prefix] = function (local) {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error('Unknown prefix: ' + prefix);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
              "name": "./node_modules/n3/src/N3DataFactory.js",
              "index": 51,
              "index2": 49,
              "size": 10143,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "2:0-81"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
                  "module": "./node_modules/n3/src/N3Parser.js",
                  "moduleName": "./node_modules/n3/src/N3Parser.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "3:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
                  "module": "./node_modules/n3/src/N3Util.js",
                  "moduleName": "./node_modules/n3/src/N3Util.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "3:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "3:0-65"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "6:21-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3DataFactory",
                  "loc": "9:0-23:25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
                  "module": "./node_modules/n3/src/N3Writer.js",
                  "moduleName": "./node_modules/n3/src/N3Writer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "19:29-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "25:0-47:2"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "26:39-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
                  "module": "./node_modules/n3/src/N3Util.js",
                  "moduleName": "./node_modules/n3/src/N3Util.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "47:23-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "112:29-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "113:29-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "114:29-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "116:62-72"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "205:17-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "221:14-22"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "222:16-24"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "223:13-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "224:12-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "275:14-22"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "276:16-24"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "277:13-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "278:12-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "330:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "331:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "332:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "333:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "394:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "395:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "396:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "397:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "459:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "460:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "461:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "462:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "527:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "528:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "529:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "573:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "574:23-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "575:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "619:25-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "620:29-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
                  "module": "./node_modules/n3/src/N3Store.js",
                  "moduleName": "./node_modules/n3/src/N3Store.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "621:21-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
                  "module": "./node_modules/n3/src/N3Parser.js",
                  "moduleName": "./node_modules/n3/src/N3Parser.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3DataFactory",
                  "loc": "1041:36-49"
                }
              ],
              "usedExports": [
                "default",
                "Term",
                "NamedNode",
                "Literal",
                "BlankNode",
                "Variable",
                "DefaultGraph",
                "Quad",
                "Triple",
                "termFromId",
                "termToId"
              ],
              "providedExports": [
                "default",
                "Term",
                "NamedNode",
                "Literal",
                "BlankNode",
                "Variable",
                "DefaultGraph",
                "termFromId",
                "termToId",
                "Quad",
                "Triple",
                "escapeQuotes",
                "unescapeQuotes"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    var id = this.id, atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    var id = this.id, dtPos = id.lastIndexOf('\"') + 1, ch;\n    // If \"^\" it follows, return the remaining substring\n    return dtPos < id.length && (ch = id[dtPos]) === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (ch !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super('_:' + name);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super('?' + name);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    var endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return '_:' + term.value;\n  case 'Variable':     return '?' + term.value;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return '\"' + term.value + '\"' +\n    (term.language ? '@' + term.language :\n      (term.datatype && term.datatype.value !== xsd.string ? '^^' + term.datatype.value : ''));\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error('Unexpected termType: ' + term.termType);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this.subject   = subject;\n    this.predicate = predicate;\n    this.object    = object;\n    this.graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this.subject.toJSON(),\n      predicate: this.predicate.toJSON(),\n      object:    this.object.toJSON(),\n      graph:     this.graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this.subject.equals(other.subject)     &&\n                      this.predicate.equals(other.predicate) &&\n                      this.object.equals(other.object)       &&\n                      this.graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal('\"' + value + '\"@' + languageOrDataType.toLowerCase());\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal('\"' + value + '\"') :\n    new Literal('\"' + value + '\"^^' + datatype);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
              "name": "./node_modules/n3/src/N3Parser.js",
              "index": 50,
              "index2": 50,
              "size": 37785,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Parser",
                  "loc": "2:0-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
                  "module": "./node_modules/n3/src/N3StreamParser.js",
                  "moduleName": "./node_modules/n3/src/N3StreamParser.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Parser",
                  "loc": "2:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
                  "module": "./node_modules/n3/src/N3StreamParser.js",
                  "moduleName": "./node_modules/n3/src/N3StreamParser.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Parser",
                  "loc": "12:34-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Parser",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    var format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = function (iri) { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      var fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    var n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? this._graph.id.substr(2) + '.' : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    var context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    var value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      var iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error('Expected entity but got ' + token.type, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    var type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error('Unexpected ' + type, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error('Expected graph but got ' + token.type, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    var empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    var item = null,                      // The item of the list\n        list = null,                      // The list itself\n        previousList = this._subject,     // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1], // The parent containing the current list\n        next = this._readListItem;        // The next function to execute\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      var datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    var next, subject = this._subject, graph = this._graph,\n        inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error('Expected punctuation to follow \"' + this._object.id + '\"', token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      var predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    var next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object.id + '\"', token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n    var prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    var iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    var entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error('Unexpected ' + token.type, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      var stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        var item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    var subject, predicate, object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    var subject = this._blankNode(), predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error('Expected >> to follow \"' + this._object.id + '\"', token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    var contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    var err = new Error(message + ' on line ' + token.line + '.');\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    var self = this;\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : 'b' + blankNodePrefix++ + '_';\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      var quads = [], error;\n      this._callback = function (e, t) { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(function (token) {\n        return self._readCallback = self._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, function (error, token) {\n      if (error !== null)\n        self._callback(error), self._callback = noop;\n      else if (self._readCallback)\n        self._readCallback = self._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  var namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "name": "./node_modules/n3/src/N3Writer.js",
              "index": 53,
              "index2": 51,
              "size": 12785,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Writer",
                  "loc": "3:0-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
                  "module": "./node_modules/n3/src/N3StreamWriter.js",
                  "moduleName": "./node_modules/n3/src/N3StreamWriter.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Writer",
                  "loc": "3:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
                  "module": "./node_modules/n3/src/N3StreamWriter.js",
                  "moduleName": "./node_modules/n3/src/N3StreamWriter.js",
                  "type": "harmony import specifier",
                  "userRequest": "./N3Writer",
                  "loc": "13:36-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Writer",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      var output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end:   function (done) { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : this._encodeIriOrBlank(graph) + ' {\\n'));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(', ' + this._encodeObject(object), done);\n        // Same subject, different predicate\n        else\n          this._write(';\\n    ' +\n                      this._encodePredicate(this._predicate = predicate) + ' ' +\n                      this._encodeObject(object), done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write((this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject) + ' ' +\n                    this._encodePredicate(this._predicate = predicate) + ' ' +\n                    this._encodeObject(object), done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  this._encodeSubject(subject)   + ' ' +\n            this._encodeIriOrBlank(predicate) + ' ' +\n            this._encodeObject(object) +\n            (graph && graph.value ? ' ' + this._encodeIriOrBlank(graph) + ' .\\n' : ' .\\n');\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(function (t) {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }, this).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : '_:' + entity.value;\n    }\n    // Escape special characters\n    var iri = entity.value;\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    var value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (literal.language)\n      return '\"' + value + '\"@' + literal.language;\n    else if (literal.datatype.value !== xsd.string)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlank(literal.datatype);\n    else\n      return '\"' + value + '\"';\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      var iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      prefixIRIs[iri] = (prefix += ':');\n      this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    var children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm('[ ' + this._encodePredicate(child.predicate) + ' ' +\n                                  this._encodeObject(child.object) + ' ]');\n    // Generate a multi-triple or nested blank node\n    default:\n      var contents = '[';\n      // Write all triples in order\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += ', ' + this._encodeObject(child.object);\n        // Otherwise, write the predicate and the object\n        else {\n          contents += (i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object);\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(contents + '\\n]');\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    var length = elements && elements.length || 0, contents = new Array(length);\n    for (var i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm('(' + contents.join(' ') + ')');\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "name": "./node_modules/n3/src/N3Store.js",
              "index": 54,
              "index2": 73,
              "size": 31411,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3Store",
                  "loc": "4:0-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3Store",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    var size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    var graphs = this._graphs, subjects, subject;\n    for (var graphKey in graphs)\n      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n        for (var predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    var index1 = index0[key0] || (index0[key0] = {});\n    var index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    var existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    var index1 = index0[key0], index2 = index1[key1], key;\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (key in index2) return;\n    delete index1[key1];\n    for (key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    var tmp, index1, index2, varCount = !key0 + !key1 + !key2,\n        // depending on the number of variables, keys or reverse index are faster\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      var entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          var entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (var l = 0; l < values.length; l++) {\n              var parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              var quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (var key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    var index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    var key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    var index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    var count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    var graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    var uniqueIds = Object.create(null), entities = this._entities;\n    return function (id) {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(entities[id]));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    var graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    var ids = this._ids;\n    var entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    var changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    var self = this;\n    stream.on('data', function (quad) { self.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    var graphItem, ids = this._ids, graphs = this._graphs, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    var self = this;\n    stream.on('data', function (quad) { self.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    return this.remove(this.match(subject, predicate, object, graph));\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var quads = [], graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a stream of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  match(subject, predicate, object, graph) {\n    var stream = new Readable({ objectMode: true });\n\n    // Initialize stream once it is being read\n    stream._read = () => {\n      for (var quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return stream;\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var count = 0, graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(function (quad) {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    var some = false;\n    var every = !this.some(function (quad) {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    var results = [];\n    this.forSubjects(function (s) { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    var results = [];\n    this.forPredicates(function (p) { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    var results = [];\n    this.forObjects(function (o) { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    var results = [];\n    this.forGraphs(function (g) { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (var graph in this._graphs) {\n      this.some(function (quad) {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    var name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = '_:' + suggestedName, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = '_:b' + this._blankNodeIndex++; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    var lists = {}; // has scalar keys so could be a simple Object\n    var onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    var tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    var toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      var items = [];             // the members found as objects of rdf:first quads\n      var malformed = false;      // signals whether the current list is malformed\n      var head;                   // the head of the list (_:b1 in above example)\n      var headPos;                // set to subject or object when head is set\n      var graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      var current = tailQuad.subject;\n      while (current && !malformed) {\n        var objectQuads = this.getQuads(null, null, current, null);\n        var subjectQuads = this.getQuads(current, null, null, null);\n        var i, quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
              "name": "./node_modules/n3/src/N3StreamParser.js",
              "index": 76,
              "index2": 74,
              "size": 1447,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3StreamParser",
                  "loc": "5:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3StreamParser",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    var self = this, parser = new N3Parser(options), onData, onEnd;\n    parser.parse({\n      on: function (event, callback) {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      function (error, quad) { error && self.emit('error', error) || quad && self.push(quad); },\n      // Emit prefixes through the `prefix` event\n      function (prefix, uri) { self.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = function (chunk, encoding, done) { onData(chunk); done(); };\n    this._flush = function (done) { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    var self = this;\n    stream.on('data',  function (chunk) { self.write(chunk); });\n    stream.on('end',   function ()      { self.end(); });\n    stream.on('error', function (error) { self.emit('error', error); });\n    return this;\n  }\n}\n"
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
              "name": "./node_modules/n3/src/N3StreamWriter.js",
              "index": 77,
              "index2": 75,
              "size": 1218,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [],
              "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "issuerId": null,
              "issuerName": "./node_modules/n3/src/index.js",
              "issuerPath": [
                {
                  "id": 38,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
                  "name": "./shex-webapp.js",
                  "profile": {
                    "factory": 16,
                    "building": 11
                  }
                },
                {
                  "id": null,
                  "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "name": "./node_modules/n3/src/index.js",
                  "profile": {
                    "factory": 14,
                    "building": 31,
                    "dependencies": 245
                  }
                }
              ],
              "profile": {
                "factory": 38,
                "building": 86,
                "dependencies": 294
              },
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./N3StreamWriter",
                  "loc": "6:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
                  "module": "./node_modules/n3/src/index.js",
                  "moduleName": "./node_modules/n3/src/index.js",
                  "type": "harmony export imported specifier",
                  "userRequest": "./N3StreamWriter",
                  "loc": "25:0-47:2"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [],
              "depth": 2,
              "source": "// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8' });\n    this._writableState.objectMode = true;\n\n    // Set up writer with a dummy stream object\n    var self = this;\n    var writer = this._writer = new N3Writer({\n      write: function (quad, encoding, callback) { self.push(quad); callback && callback(); },\n      end: function (callback) { self.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = function (quad, encoding, done) { writer.addQuad(quad, done); };\n    this._flush = function (done) { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    var self = this;\n    stream.on('data',   function (quad)  { self.write(quad); });\n    stream.on('end',    function ()      { self.end(); });\n    stream.on('error',  function (error) { self.emit('error', error); });\n    stream.on('prefix', function (prefix, iri) { self._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n"
            }
          ],
          "filteredModules": 0
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "shex-webapp-webpack.min",
          "request": "./shex-webapp.js",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/IRIs.js",
      "name": "./node_modules/n3/src/IRIs.js",
      "index": 49,
      "index2": 46,
      "size": 705,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
      "issuerId": 12,
      "issuerName": "./node_modules/n3/src/N3Lexer.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        }
      ],
      "profile": {
        "factory": 336,
        "building": 33
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 12,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "module": "./node_modules/n3/src/N3Lexer.js",
          "moduleName": "./node_modules/n3/src/N3Lexer.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./IRIs",
          "loc": "2:0-32"
        },
        {
          "moduleId": 12,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "module": "./node_modules/n3/src/N3Lexer.js",
          "moduleName": "./node_modules/n3/src/N3Lexer.js",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "5:16-26"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "./IRIs",
          "loc": "2:0-32"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "./IRIs",
          "loc": "4:0-32"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "./IRIs",
          "loc": "4:0-32"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "./IRIs",
          "loc": "4:0-32"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "6:21-31"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "8:21-31"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "700:36-46"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "700:57-67"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "725:44-54"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "733:44-54"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "756:44-54"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1029:32-42"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1030:32-42"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1031:32-42"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1032:32-42"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1033:32-42"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1035:19-29"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1036:19-29"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./IRIs",
          "loc": "1037:19-29"
        }
      ],
      "usedExports": [
        "default"
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 3,
      "source": "var RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: XSD + 'decimal',\n    boolean: XSD + 'boolean',\n    double:  XSD + 'double',\n    integer: XSD + 'integer',\n    string:  XSD + 'string',\n  },\n  rdf: {\n    type:       RDF + 'type',\n    nil:        RDF + 'nil',\n    first:      RDF + 'first',\n    rest:       RDF + 'rest',\n    langString: RDF + 'langString',\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: SWAP + 'reify#forSome',\n    forAll:  SWAP + 'reify#forAll',\n  },\n  log: {\n    implies: SWAP + 'log#implies',\n  },\n};\n"
    },
    {
      "id": 1,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/process/browser.js",
      "name": "./node_modules/process/browser.js",
      "index": 5,
      "index2": 1,
      "size": 5418,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 48,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 48,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 113,
            "building": 140,
            "dependencies": 106
          }
        }
      ],
      "profile": {
        "factory": 115,
        "building": 18,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
          "module": "./node_modules/path-browserify/index.js",
          "moduleName": "./node_modules/path-browserify/index.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-34"
        },
        {
          "moduleId": 5,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
          "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-37"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "module": "./node_modules/util/util.js",
          "moduleName": "./node_modules/util/util.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-34"
        },
        {
          "moduleId": 16,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-37"
        },
        {
          "moduleId": 32,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/destroy.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-43"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-37"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-62"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
          "module": "../shex-core/lib/ShExValidator.js",
          "moduleName": "../shex-core/lib/ShExValidator.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-62"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-62"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 56,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-71"
        },
        {
          "moduleId": 66,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "type": "cjs require",
          "userRequest": "process",
          "loc": "1:0-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"
    },
    {
      "id": 2,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/path-browserify/index.js",
      "name": "./node_modules/path-browserify/index.js",
      "index": 8,
      "index2": 4,
      "size": 8742,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 48,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 48,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 113,
            "building": 140,
            "dependencies": 106
          }
        }
      ],
      "profile": {
        "factory": 115,
        "building": 18,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "6:9-24"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "49:11-26"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "15:11-26"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "1179:44-59"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "1824:44-59"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "22:17-32"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "path",
          "loc": "10:11-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"
    },
    {
      "id": 3,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/node-libs-browser/mock/empty.js",
      "name": "./node_modules/node-libs-browser/mock/empty.js",
      "index": 7,
      "index2": 3,
      "size": 0,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 48,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 48,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 113,
            "building": 140,
            "dependencies": 106
          }
        }
      ],
      "profile": {
        "factory": 115,
        "building": 18,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "43:9-22"
        },
        {
          "moduleId": 25,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "8:9-22"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "1179:17-30"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "1824:17-30"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "24:9-22"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "fs",
          "loc": "4:9-22"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": ""
    },
    {
      "id": 4,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/errors-browser.js",
      "name": "./node_modules/readable-stream/errors-browser.js",
      "index": 63,
      "index2": 57,
      "size": 4197,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 17,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
          "type": "cjs require",
          "userRequest": "../../../errors",
          "loc": "5:33-59"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "../errors",
          "loc": "79:21-41"
        },
        {
          "moduleId": 33,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/state.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/state.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/state.js",
          "type": "cjs require",
          "userRequest": "../../../errors",
          "loc": "3:28-54"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "../errors",
          "loc": "87:21-41"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
          "module": "./node_modules/readable-stream/lib/_stream_transform.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
          "type": "cjs require",
          "userRequest": "../errors",
          "loc": "66:21-41"
        },
        {
          "moduleId": 69,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "type": "cjs require",
          "userRequest": "../../../errors",
          "loc": "16:21-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n"
    },
    {
      "id": 5,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
      "name": "./node_modules/readable-stream/lib/_stream_duplex.js",
      "index": 65,
      "index2": 62,
      "size": 4399,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/_stream_duplex.js",
          "loc": "5:17-51"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./_stream_duplex",
          "loc": "107:21-48"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./_stream_duplex",
          "loc": "170:21-48"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "./_stream_duplex",
          "loc": "104:21-48"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "./_stream_duplex",
          "loc": "230:21-48"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
          "module": "./node_modules/readable-stream/lib/_stream_transform.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
          "type": "cjs require",
          "userRequest": "./_stream_duplex",
          "loc": "72:13-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});"
    },
    {
      "id": 6,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "name": "./node_modules/readable-stream/readable-browser.js",
      "index": 55,
      "index2": 72,
      "size": 488,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
      "issuerId": null,
      "issuerName": "./node_modules/n3/src/N3Store.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        }
      ],
      "profile": {
        "factory": 313,
        "building": 33
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "readable-stream",
          "loc": "2:0-44"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "readable-stream",
          "loc": "3:0-43"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "readable-stream",
          "loc": "3:0-44"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "readable-stream",
          "loc": "6:44-53"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "readable-stream",
          "loc": "6:44-53"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "readable-stream",
          "loc": "378:21-29"
        }
      ],
      "usedExports": [
        "Readable",
        "Transform"
      ],
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n"
    },
    {
      "id": 7,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/RdfTerm.js",
      "name": "../shex-core/lib/RdfTerm.js",
      "index": 10,
      "index2": 8,
      "size": 10523,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "issuerId": 13,
      "issuerName": "../shex-core/shex-core.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 215,
        "dependencies": 42
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "module": "../shex-core/shex-core.js",
          "moduleName": "../shex-core/shex-core.js",
          "type": "cjs require",
          "userRequest": "./lib/RdfTerm",
          "loc": "2:14-38"
        },
        {
          "moduleId": 20,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "module": "../shex-core/lib/ShExUtil.js",
          "moduleName": "../shex-core/lib/ShExUtil.js",
          "type": "cjs require",
          "userRequest": "./RdfTerm",
          "loc": "4:14-34"
        },
        {
          "moduleId": 22,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/threaded-val-nerr.js",
          "module": "../shex-core/lib/regex/threaded-val-nerr.js",
          "moduleName": "../shex-core/lib/regex/threaded-val-nerr.js",
          "type": "cjs require",
          "userRequest": "../RdfTerm",
          "loc": "2:14-35"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
          "module": "../shex-core/lib/ShExValidator.js",
          "moduleName": "../shex-core/lib/ShExValidator.js",
          "type": "cjs require",
          "userRequest": "./RdfTerm",
          "loc": "31:14-34"
        },
        {
          "moduleId": 46,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/nfax-val-1err.js",
          "module": "../shex-core/lib/regex/nfax-val-1err.js",
          "moduleName": "../shex-core/lib/regex/nfax-val-1err.js",
          "type": "cjs require",
          "userRequest": "../RdfTerm",
          "loc": "2:16-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "/**\n *\n * isIRI, isBlank, getLiteralType, getLiteralValue\n */\n\nvar RdfTerm = (function () {\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  const RdfLangString = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\";\n  const XsdString = \"http://www.w3.org/2001/XMLSchema#string\";\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function resolveRelativeIRI (base, iri) {\n\n    if (absoluteIRI.test(iri))\n      return iri\n\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      let m = base.match(schemeAuthority);\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? m[1] : m[0]) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(base.replace(/[^\\/?]*(?:\\?.*)?$/, '') + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function internalTerm (node) { // !!rdfjsTermToInternal\n    switch (node.termType) {\n    case (\"NamedNode\"):\n      return node.value;\n    case (\"BlankNode\"):\n      return \"_:\" + node.value;\n    case (\"Literal\"):\n      return \"\\\"\" + node.value + \"\\\"\" + (\n        node.datatypeString === RdfLangString\n          ? \"@\" + node.language\n          : node.datatypeString === XsdString\n          ? \"\"\n          : \"^^\" + node.datatypeString\n      );\n    default: throw Error(\"unknown RDFJS node type: \" + JSON.stringify(node))\n    }\n  }\n\n  function internalTriple (triple) { // !!rdfjsTripleToInternal\n    return {\n      subject: internalTerm(triple.subject),\n      predicate: internalTerm(triple.predicate),\n      object: internalTerm(triple.object)\n    };\n  }\n\n  function externalTerm (node, factory) { // !!intermalTermToRdfjs\n    if (isIRI(node)) {\n      return factory.namedNode(node);\n    } else if (isBlank(node)) {\n      return factory.blankNode(node.substr(2));\n    } else if (isLiteral(node)) {\n      let dtOrLang = getLiteralLanguage(node) ||\n          (getLiteralType(node) === XsdString\n           ? null // seems to screw up N3.js\n           : factory.namedNode(getLiteralType(node)))\n      return factory.literal(getLiteralValue(node), dtOrLang)\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  function externalTriple (triple, factory) { // !!rename internalTripleToRdjs\n    return factory.quad(\n      externalTerm(triple.subject, factory),\n      externalTerm(triple.predicate, factory),\n      externalTerm(triple.object, factory)\n    );\n  }\n\n  function intermalTermToTurtle (node, base, prefixes) {\n    if (isIRI(node)) {\n      // if (node === RDF_TYPE) // only valid in Turtle predicates\n      //   return \"a\";\n\n      // Escape special characters\n      if (escape.test(node))\n        node = node.replace(escapeAll, characterReplacer);\n      var pref = Object.keys(prefixes).find(pref => node.startsWith(prefixes[pref]));\n      if (pref) {\n        var rest = node.substr(prefixes[pref].length);\n        if (rest.indexOf(\"\\\\\") === -1) // could also say no more than n of these: [...]\n          return pref + \":\" + rest.replace(/([~!$&'()*+,;=/?#@%])/g, '\\\\' + \"$1\");\n      }\n      if (node.startsWith(base)) {\n        return \"<\" + node.substr(base.length) + \">\";\n      } else {\n        return \"<\" + node + \">\";\n      }\n    } else if (isBlank(node)) {\n      return node;\n    } else if (isLiteral(node)) {\n      var value = getLiteralValue(node);\n      var type = getLiteralType(node);\n      var language = getLiteralLanguage(node);\n      // Escape special characters\n      if (escape.test(value))\n        value = value.replace(escapeAll, characterReplacer);\n      // Write the literal, possibly with type or language\n      if (language)\n        return '\"' + value + '\"@' + language;\n      else if (type)\n        return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n      else\n        return '\"' + value + '\"';\n    } else {\n      throw Error(\"Unknown internal term type: \" + JSON.stringify(node));\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents an IRI in the N3 library\n  function isIRI (entity) {\n    if (typeof entity !== 'string')\n      return false;\n    else if (entity.length === 0)\n      return true;\n    else {\n      var firstChar = entity[0];\n      return firstChar !== '\"' && firstChar !== '_';\n    }\n  }\n\n  // Tests whether the given entity (triple object) represents a literal in the N3 library\n  function isLiteral (entity) {\n    return typeof entity === 'string' && entity[0] === '\"';\n  }\n\n  // Tests whether the given entity (triple object) represents a blank node in the N3 library\n  function isBlank (entity) {\n    return typeof entity === 'string' && entity.substr(0, 2) === '_:';\n  }\n\n  // Tests whether the given entity represents the default graph\n  function isDefaultGraph (entity) {\n    return !entity;\n  }\n\n  // Tests whether the given triple is in the default graph\n  function inDefaultGraph (triple) {\n    return !triple.graph;\n  }\n\n  // Gets the string value of a literal in the N3 library\n  function getLiteralValue (literal) {\n    var match = /^\"([^]*)\"/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1];\n  }\n\n  // Gets the type of a literal in the N3 library\n  function getLiteralType (literal) {\n    var match = /^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] || (match[2] ? RdfLangString : XsdString);\n  }\n\n  // Gets the language of a literal in the N3 library\n  function getLiteralLanguage (literal) {\n    var match = /^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$/.exec(literal);\n    if (!match)\n      throw new Error(literal + ' is not a literal');\n    return match[1] ? match[1].toLowerCase() : '';\n  }\n\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapeReplacements = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n  // Replaces a character by its escaped version\n  function characterReplacer (character) {\n    // Replace a single character by its escaped version\n    var result = escapeReplacements[character];\n    if (result === undefined) {\n      // Replace a single character with its 4-bit unicode escape sequence\n      if (character.length === 1) {\n        result = character.charCodeAt(0).toString(16);\n        result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n      }\n      // Replace a surrogate pair with its 8-bit unicode escape sequence\n      else {\n        result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                  character.charCodeAt(1) + 0x2400).toString(16);\n        result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n      }\n    }\n    return result;\n  }\n\n  return {\n    RdfLangString: RdfLangString,\n    XsdString: XsdString,\n    resolveRelativeIRI: resolveRelativeIRI,\n    isIRI: isIRI,\n    isLiteral: isLiteral,\n    isBlank: isBlank,\n    isDefaultGraph: isDefaultGraph,\n    inDefaultGraph: inDefaultGraph,\n    getLiteralValue: getLiteralValue,\n    getLiteralType: getLiteralType,\n    getLiteralLanguage: getLiteralLanguage,\n    internalTerm: internalTerm,\n    internalTriple: internalTriple,\n    externalTerm: externalTerm,\n    externalTriple: externalTriple,\n    intermalTermToTurtle: intermalTermToTurtle,\n  }\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = RdfTerm; // node environment\n"
    },
    {
      "id": 8,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/global.js",
      "name": "(webpack)/buildin/global.js",
      "index": 33,
      "index2": 29,
      "size": 472,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
      "issuerId": 9,
      "issuerName": "./node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 9,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "name": "./node_modules/buffer/index.js",
          "profile": {
            "factory": 336,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 82,
        "building": 31
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "module": "./node_modules/buffer/index.js",
          "moduleName": "./node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-41"
        },
        {
          "moduleId": 26,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "module": "./node_modules/assert/assert.js",
          "moduleName": "./node_modules/assert/assert.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-41"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-44"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-44"
        },
        {
          "moduleId": 64,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util-deprecate/browser.js",
          "module": "./node_modules/util-deprecate/browser.js",
          "moduleName": "./node_modules/util-deprecate/browser.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
    },
    {
      "id": 9,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
      "name": "./node_modules/buffer/index.js",
      "index": 44,
      "index2": 44,
      "size": 48590,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
      "issuerId": 12,
      "issuerName": "./node_modules/n3/src/N3Lexer.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        }
      ],
      "profile": {
        "factory": 336,
        "building": 33
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 12,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "module": "./node_modules/n3/src/N3Lexer.js",
          "moduleName": "./node_modules/n3/src/N3Lexer.js",
          "type": "cjs require",
          "userRequest": "Buffer",
          "loc": "1:0-34"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "46:13-30"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "70:13-30"
        },
        {
          "moduleId": 62,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "15:15-32"
        },
        {
          "moduleId": 65,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/safe-buffer/index.js",
          "module": "./node_modules/safe-buffer/index.js",
          "moduleName": "./node_modules/safe-buffer/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"
    },
    {
      "id": 10,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/inherits/inherits_browser.js",
      "name": "./node_modules/inherits/inherits_browser.js",
      "index": 64,
      "index2": 59,
      "size": 753,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
          "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "46:0-19"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "90:0-19"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "99:0-19"
        },
        {
          "moduleId": 36,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
          "module": "./node_modules/readable-stream/lib/_stream_transform.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_transform.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "74:0-19"
        },
        {
          "moduleId": 68,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
          "module": "./node_modules/readable-stream/lib/_stream_passthrough.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_passthrough.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "30:0-19"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
    },
    {
      "id": 11,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
      "name": "./node_modules/util/util.js",
      "index": 14,
      "index2": 12,
      "size": 19383,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
      "issuerId": 21,
      "issuerName": "../shex-core/lib/ShExWriter.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 21,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "name": "../shex-core/lib/ShExWriter.js",
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          }
        }
      ],
      "profile": {
        "factory": 61,
        "building": 19,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 21,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "module": "../shex-core/lib/ShExWriter.js",
          "moduleName": "../shex-core/lib/ShExWriter.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "4:11-26"
        },
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "59:11-26"
        },
        {
          "moduleId": 26,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "module": "./node_modules/assert/assert.js",
          "moduleName": "./node_modules/assert/assert.js",
          "type": "cjs require",
          "userRequest": "util/",
          "loc": "73:11-27"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "9:11-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"
    },
    {
      "id": 12,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
      "name": "./node_modules/n3/src/N3Lexer.js",
      "index": 43,
      "index2": 47,
      "size": 19875,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
      "issuerId": null,
      "issuerName": "./node_modules/n3/src/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 38,
        "building": 86,
        "dependencies": 294
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "./N3Lexer",
          "loc": "1:0-30"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony side effect evaluation",
          "userRequest": "./N3Lexer",
          "loc": "2:0-32"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony export imported specifier",
          "userRequest": "./N3Lexer",
          "loc": "25:0-47:2"
        },
        {
          "moduleId": 70,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
          "module": "./node_modules/n3/src/index.js + 7 modules",
          "moduleName": "./node_modules/n3/src/index.js + 7 modules",
          "type": "harmony import specifier",
          "userRequest": "./N3Lexer",
          "loc": "37:39-46"
        }
      ],
      "usedExports": [
        "default"
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module uses injected variables (Buffer)"
      ],
      "depth": 2,
      "source": "// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nvar escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nvar illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nvar lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nvar invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s()\\[\\]\\{\\}\"'<])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (var key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    var input = this._input, outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      var whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      var line = this._line, type = '', value = '', prefix = '',\n          firstChar = input[0], match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(input + ' ')))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(input + ' '))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(input + ' ')))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      var token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    var err = new Error('Unexpected \"' + issue + '\" on line ' + this._line + '.');\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    var self = this;\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = input;\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => self._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        var tokens = [], error;\n        this._tokenizeToEnd(function (e, t) { e ? (error = e) : tokens.push(t); }, true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._input = '';\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', function (data) {\n        if (self._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (self._pendingBuffer) {\n            data = Buffer.concat([self._pendingBuffer, data]);\n            self._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            self._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            self._input += data;\n            self._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', function () {\n        if (self._input !== null)\n          self._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n"
    },
    {
      "id": 13,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "name": "../shex-core/shex-core.js",
      "index": 9,
      "index2": 18,
      "size": 419,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 38,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        }
      ],
      "profile": {
        "factory": 14,
        "building": 31,
        "dependencies": 245
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/core",
          "loc": "3:23-46"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require",
          "userRequest": "@shexjs/core",
          "loc": "5:13-36"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "@shexjs/core",
          "loc": "931:17-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "var ShExCore = {\n  RdfTerm:    require('./lib/RdfTerm'),\n  Util:         require('./lib/ShExUtil'),\n  Validator:    require('./lib/ShExValidator'),\n  Writer:    require('./lib/ShExWriter'),\n  'nfax-val-1err':     require('./lib/regex/nfax-val-1err'),\n  'threaded-val-nerr': require('./lib/regex/threaded-val-nerr')\n};\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExCore;\n\n"
    },
    {
      "id": 14,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "index": 26,
      "index2": 26,
      "size": 25347,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "minimatch",
          "loc": "45:16-36"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "minimatch",
          "loc": "16:16-36"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "minimatch",
          "loc": "6:16-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"
    },
    {
      "id": 15,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/events/events.js",
      "name": "./node_modules/events/events.js",
      "index": 31,
      "index2": 28,
      "size": 14161,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "events",
          "loc": "48:9-26"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "events",
          "loc": "32:9-26"
        },
        {
          "moduleId": 31,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
          "type": "cjs require",
          "userRequest": "events",
          "loc": "1:17-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n"
    },
    {
      "id": 16,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/path-is-absolute/index.js",
      "index": 35,
      "index2": 32,
      "size": 611,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "path-is-absolute",
          "loc": "51:17-44"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
          "type": "cjs require",
          "userRequest": "path-is-absolute",
          "loc": "17:17-44"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "path-is-absolute",
          "loc": "12:17-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n"
    },
    {
      "id": 17,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js",
      "index": 71,
      "index2": 65,
      "size": 3102,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/internal/streams/end-of-stream.js",
          "loc": "8:19-69"
        },
        {
          "moduleId": 66,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
          "type": "cjs require",
          "userRequest": "./end-of-stream",
          "loc": "7:15-41"
        },
        {
          "moduleId": 69,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
          "type": "cjs require",
          "userRequest": "./end-of-stream",
          "loc": "35:31-57"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;"
    },
    {
      "id": 18,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapSymbols.js",
      "name": "../shape-map/lib/ShapeMapSymbols.js",
      "index": 2,
      "index2": 0,
      "size": 451,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
      "issuerId": 39,
      "issuerName": "../shape-map/shape-map.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 39,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 120,
        "building": 142
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 39,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "module": "../shape-map/shape-map.js",
          "moduleName": "../shape-map/shape-map.js",
          "type": "cjs require",
          "userRequest": "./lib/ShapeMapSymbols",
          "loc": "7:18-50"
        },
        {
          "moduleId": 41,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "./ShapeMapSymbols",
          "loc": "417:17-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * Status: Early implementation\n *\n * TODO:\n *   testing.\n */\n\nvar ShapeMapSymbols = (function () {\n  return {\n    focus: { term: \"FOCUS\" },\n    start: { term: \"START\" },\n    wildcard: { term: \"WILDCARD\" },\n  }\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMapSymbols;\n"
    },
    {
      "id": 19,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/webpack/buildin/module.js",
      "name": "(webpack)/buildin/module.js",
      "index": 6,
      "index2": 2,
      "size": 497,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "issuerId": 48,
      "issuerName": "../shex-parser/lib/ShExJison.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 48,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "name": "../shex-parser/lib/ShExJison.js",
          "profile": {
            "factory": 113,
            "building": 140,
            "dependencies": 106
          }
        }
      ],
      "profile": {
        "factory": 115,
        "building": 18,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 41,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
          "module": "../shape-map/lib/ShapeMapJison.js",
          "moduleName": "../shape-map/lib/ShapeMapJison.js",
          "type": "cjs require",
          "userRequest": "module",
          "loc": "1:0-69"
        },
        {
          "moduleId": 48,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
          "module": "../shex-parser/lib/ShExJison.js",
          "moduleName": "../shex-parser/lib/ShExJison.js",
          "type": "cjs require",
          "userRequest": "module",
          "loc": "1:0-69"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
    },
    {
      "id": 20,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
      "name": "../shex-core/lib/ShExUtil.js",
      "index": 11,
      "index2": 14,
      "size": 85300,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "issuerId": 13,
      "issuerName": "../shex-core/shex-core.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 215,
        "dependencies": 42
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "module": "../shex-core/shex-core.js",
          "moduleName": "../shex-core/shex-core.js",
          "type": "cjs require",
          "userRequest": "./lib/ShExUtil",
          "loc": "3:16-41"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
          "module": "../shex-core/lib/ShExValidator.js",
          "moduleName": "../shex-core/lib/ShExValidator.js",
          "type": "cjs require",
          "userRequest": "./ShExUtil",
          "loc": "32:15-36"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "// **ShExUtil** provides ShEx utility functions\n\nvar ShExUtil = (function () {\nvar RdfTerm = require(\"./RdfTerm\");\n// var util = require('util');\nconst Hierarchy = require('hierarchy-closure')\n\nconst SX = {};\nSX._namespace = \"http://www.w3.org/ns/shex#\";\n[\"Schema\", \"@context\", \"imports\", \"startActs\", \"start\", \"shapes\",\n \"ShapeOr\", \"ShapeAnd\", \"shapeExprs\", \"nodeKind\",\n \"NodeConstraint\", \"iri\", \"bnode\", \"nonliteral\", \"literal\", \"datatype\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\", \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\", \"values\",\n \"ShapeNot\", \"shapeExpr\",\n \"Shape\", \"virtual\", \"closed\", \"extra\", \"expression\", \"inherit\", \"semActs\",\n \"ShapeRef\", \"reference\", \"ShapeExternal\",\n \"EachOf\", \"OneOf\", \"expressions\", \"min\", \"max\", \"annotation\",\n \"TripleConstraint\", \"inverse\", \"negated\", \"predicate\", \"valueExpr\",\n \"Inclusion\", \"include\", \"Language\", \"languageTag\",\n \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"stem\",\n \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\", \"exclusion\",\n \"Wildcard\", \"SemAct\", \"name\", \"code\",\n \"Annotation\", \"object\"].forEach(p => {\n  SX[p] = SX._namespace+p;\n});\nconst RDF = {};\nRDF._namespace = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n[\"type\", \"first\", \"rest\", \"nil\"].forEach(p => {\n  RDF[p] = RDF._namespace+p;\n});\nconst XSD = {}\nXSD._namespace = \"http://www.w3.org/2001/XMLSchema#\";\n[\"anyURI\"].forEach(p => {\n  XSD[p] = XSD._namespace+p;\n});\nconst OWL = {}\nOWL._namespace = \"http://www.w3.org/2002/07/owl#\";\n[\"Thing\"].forEach(p => {\n  OWL[p] = OWL._namespace+p;\n});\n\nconst Missed = {}; // singleton\nvar UNBOUNDED = -1;\n\nfunction extend (base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n  function isShapeRef (expr) {\n    return typeof expr === \"string\" // test for JSON-LD @ID\n  }\n  let isInclusion = isShapeRef;\n\nvar ShExUtil = {\n\n  SX: SX,\n  RDF: RDF,\n  version: function () {\n    return \"0.5.0\";\n  },\n\n  Visitor: function () {\n    // function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n    var _ShExUtil = this;\n    function visitMap (map, val) {\n      var ret = {};\n      Object.keys(map).forEach(function (item) {\n        ret[item] = val(map[item]);\n      });\n      return ret;\n    }\n    var r = {\n      runtimeError: function (e) {\n        throw e;\n      },\n\n      visitSchema: function (schema) {\n        var ret = { type: \"Schema\" };\n        _ShExUtil._expect(schema, \"type\", \"Schema\");\n        this._maybeSet(schema, ret, \"Schema\",\n                       [\"@context\", \"prefixes\", \"base\", \"imports\", \"startActs\", \"start\", \"shapes\"],\n                       [\"_base\", \"_prefixes\", \"_index\", \"_sourceMap\"]\n                      );\n        return ret;\n      },\n\n      visitPrefixes: function (prefixes) {\n        return prefixes === undefined ?\n          undefined :\n          visitMap(prefixes, function (val) {\n            return val;\n          });\n      },\n\n      visitIRI: function (i) {\n        return i;\n      },\n\n      visitImports: function (imports) {\n        var _Visitor = this;\n        return imports.map(function (imp) {\n          return _Visitor.visitIRI(imp);\n        });\n      },\n\n      visitStartActs: function (startActs) {\n        var _Visitor = this;\n        return startActs === undefined ?\n          undefined :\n          startActs.map(function (act) {\n            return _Visitor.visitSemAct(act);\n          });\n      },\n      visitSemActs: function (semActs) {\n        var _Visitor = this;\n        if (semActs === undefined)\n          return undefined;\n        var ret = []\n        Object.keys(semActs).forEach(function (label) {\n          ret.push(_Visitor.visitSemAct(semActs[label], label));\n        });\n        return ret;\n      },\n      visitSemAct: function (semAct, label) {\n        var ret = { type: \"SemAct\" };\n        _ShExUtil._expect(semAct, \"type\", \"SemAct\");\n\n        this._maybeSet(semAct, ret, \"SemAct\",\n                       [\"name\", \"code\"]);\n        return ret;\n      },\n\n      visitShapes: function (shapes) {\n        var _Visitor = this;\n        if (shapes === undefined)\n          return undefined;\n        return shapes.map(\n          shapeExpr =>\n            _Visitor.visitShapeExpr(shapeExpr)\n        );\n      },\n\n      visitProductions999: function (productions) { // !! DELETE\n        var _Visitor = this;\n        if (productions === undefined)\n          return undefined;\n        var ret = {}\n        Object.keys(productions).forEach(function (label) {\n          ret[label] = _Visitor.visitExpression(productions[label], label);\n        });\n        return ret;\n      },\n\n      visitShapeExpr: function (expr, label) {\n        if (isShapeRef(expr))\n          return this.visitShapeRef(expr)\n        var r =\n            expr.type === \"Shape\" ? this.visitShape(expr, label) :\n            expr.type === \"NodeConstraint\" ? this.visitNodeConstraint(expr, label) :\n            expr.type === \"ShapeAnd\" ? this.visitShapeAnd(expr, label) :\n            expr.type === \"ShapeOr\" ? this.visitShapeOr(expr, label) :\n            expr.type === \"ShapeNot\" ? this.visitShapeNot(expr, label) :\n            expr.type === \"ShapeExternal\" ? this.visitShapeExternal(expr) :\n            null;// if (expr.type === \"ShapeRef\") r = 0; // console.warn(\"visitShapeExpr:\", r);\n        if (r === null)\n          throw Error(\"unexpected shapeExpr type: \" + expr.type);\n        else\n          return r;\n      },\n\n      // _visitShapeGroup: visit a grouping expression (shapeAnd, shapeOr)\n      _visitShapeGroup: function (expr, label) {\n        this._testUnknownAttributes(expr, [\"id\", \"shapeExprs\"], expr.type, this.visitShapeNot)\n        var _Visitor = this;\n        var r = { type: expr.type };\n        if (\"id\" in expr)\n          r.id = expr.id;\n        r.shapeExprs = expr.shapeExprs.map(function (nested) {\n          return _Visitor.visitShapeExpr(nested, label);\n        });\n        return r;\n      },\n\n      // _visitShapeNot: visit negated shape\n      visitShapeNot: function (expr, label) {\n        this._testUnknownAttributes(expr, [\"id\", \"shapeExpr\"], \"ShapeNot\", this.visitShapeNot)\n        var r = { type: expr.type };\n        if (\"id\" in expr)\n          r.id = expr.id;\n        r.shapeExpr = this.visitShapeExpr(expr.shapeExpr, label);\n        return r;\n      },\n\n      // ### `visitNodeConstraint` deep-copies the structure of a shape\n      visitShape: function (shape, label) {\n        var ret = { type: \"Shape\" };\n        _ShExUtil._expect(shape, \"type\", \"Shape\");\n\n        this._maybeSet(shape, ret, \"Shape\",\n                       [ \"id\",\n                         // \"virtual\", \"inherit\", -- futureWork\n                         \"closed\",\n                         \"expression\", \"extra\", \"semActs\", \"annotations\"]);\n        return ret;\n      },\n\n      // ### `visitNodeConstraint` deep-copies the structure of a shape\n      visitNodeConstraint: function (shape, label) {\n        var ret = { type: \"NodeConstraint\" };\n        _ShExUtil._expect(shape, \"type\", \"NodeConstraint\");\n\n        this._maybeSet(shape, ret, \"NodeConstraint\",\n                       [ \"id\",\n                         // \"virtual\", \"inherit\", -- futureWork\n                         \"nodeKind\", \"datatype\", \"pattern\", \"flags\", \"length\",\n                         \"reference\", \"minlength\", \"maxlength\",\n                         \"mininclusive\", \"minexclusive\", \"maxinclusive\", \"maxexclusive\",\n                         \"totaldigits\", \"fractiondigits\", \"values\", \"annotations\", \"semActs\"]);\n        return ret;\n      },\n\n      visitShapeRef: function (reference) {\n        if (typeof reference !== \"string\") {\n          let ex = Exception(\"visitShapeRef expected a string, not \" + JSON.stringify(reference));\n          console.warn(ex);\n          throw ex;\n        }\n        return reference;\n      },\n\n      visitShapeExternal: function (expr) {\n        this._testUnknownAttributes(expr, [\"id\"], \"ShapeExternal\", this.visitShapeNot)\n        return extend(\"id\" in expr ? { id: expr.id } : {}, { type: \"ShapeExternal\" });\n      },\n\n      // _visitGroup: visit a grouping expression (someOf or eachOf)\n      _visitGroup: function (expr, type) {\n        var _Visitor = this;\n        var r = Object.assign(\n          // pre-declare an id so it sorts to the top\n          \"id\" in expr ? { id: null } : { },\n          { type: expr.type }\n        );\n        r.expressions = expr.expressions.map(function (nested) {\n          return _Visitor.visitExpression(nested);\n        });\n        return this._maybeSet(expr, r, \"expr\",\n                              [\"id\", \"min\", \"max\", \"annotations\", \"semActs\"], [\"expressions\"]);\n      },\n\n      visitTripleConstraint: function (expr) {\n        return this._maybeSet(expr,\n                              Object.assign(\n                                // pre-declare an id so it sorts to the top\n                                \"id\" in expr ? { id: null } : { },\n                                { type: \"TripleConstraint\" }\n                              ),\n                              \"TripleConstraint\",\n                              [\"id\", \"inverse\", \"predicate\", \"valueExpr\",\n                               \"min\", \"max\", \"annotations\", \"semActs\"])\n      },\n\n      visitExpression: function (expr) {\n        if (typeof expr === \"string\")\n          return this.visitInclusion(expr);\n        var r = expr.type === \"TripleConstraint\" ? this.visitTripleConstraint(expr) :\n          expr.type === \"OneOf\" ? this.visitOneOf(expr) :\n          expr.type === \"EachOf\" ? this.visitEachOf(expr) :\n          null;\n        if (r === null)\n          throw Error(\"unexpected expression type: \" + expr.type);\n        else\n          return r;\n      },\n\n      visitValues: function (values) {\n        var _Visitor = this;\n        return values.map(function (t) {\n          return isTerm(t) || t.type === \"Language\" ?\n            t :\n            _Visitor.visitStemRange(t);\n        });\n      },\n\n      visitStemRange: function (t) {\n        var _Visitor = this; // console.log(Error(t.type).stack);\n        // _ShExUtil._expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\"));\n        var stemRangeTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                _Visitor.runtimeError(Error(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\"));\n        var stem;\n        if (isTerm(t)) {\n          _ShExUtil._expect(t.stem, \"type\", \"Wildcard\");\n          stem = { type: t.type, stem: { type: \"Wildcard\" } };\n        } else {\n          stem = { type: t.type, stem: t.stem };\n        }\n        if (t.exclusions) {\n          stem.exclusions = t.exclusions.map(function (c) {\n            return _Visitor.visitExclusion(c);\n          });\n        }\n        return stem;\n      },\n\n      visitExclusion: function (c) {\n        if (!isTerm(c)) {\n          // _ShExUtil._expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      _Visitor.runtimeError(Error(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\"));\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      _Visitor.runtimeError(Error(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\"));\n          return { type: c.type, stem: c.stem };\n        } else {\n          return c;\n        }\n      },\n\n      visitInclusion: function (inclusion) {\n        if (typeof inclusion !== \"string\") {\n          let ex = Exception(\"visitInclusion expected a string, not \" + JSON.stringify(inclusion));\n          console.warn(ex);\n          throw ex;\n        }\n        return inclusion;\n      },\n\n      _maybeSet: function (obj, ret, context, members, ignore) {\n        var _Visitor = this;\n        this._testUnknownAttributes(obj, ignore ? members.concat(ignore) : members, context, this._maybeSet)\n        members.forEach(function (member) {\n          var methodName = \"visit\" + member.charAt(0).toUpperCase() + member.slice(1);\n          if (member in obj) {\n            var f = _Visitor[methodName];\n            if (typeof f !== \"function\") {\n              throw Error(methodName + \" not found in Visitor\");\n            }\n            var t = f.call(_Visitor, obj[member]);\n            if (t !== undefined) {\n              ret[member] = t;\n            }\n          }\n        });\n        return ret;\n      },\n      _visitValue: function (v) {\n        return v;\n      },\n      _visitList: function (l) {\n        return l.slice();\n      },\n      _testUnknownAttributes: function (obj, expected, context, captureFrame) {\n        var unknownMembers = Object.keys(obj).reduce(function (ret, k) {\n          return k !== \"type\" && expected.indexOf(k) === -1 ? ret.concat(k) : ret;\n        }, []);\n        if (unknownMembers.length > 0) {\n          var e = Error(\"unknown propert\" + (unknownMembers.length > 1 ? \"ies\" : \"y\") + \": \" +\n                        unknownMembers.map(function (p) {\n                          return \"\\\"\" + p + \"\\\"\";\n                        }).join(\",\") +\n                        \" in \" + context + \": \" + JSON.stringify(obj));\n          Error.captureStackTrace(e, captureFrame);\n          throw e;\n        }\n      }\n\n    };\n    r.visitBase = r.visitStart = r.visitVirtual = r.visitClosed = r[\"visit@context\"] = r._visitValue;\n    r.visitInherit = r.visitExtra = r.visitAnnotations = r._visitList;\n    r.visitInverse = r.visitPredicate = r._visitValue;\n    r.visitName = r.visitId = r.visitCode = r.visitMin = r.visitMax = r._visitValue;\n\n    r.visitType = r.visitNodeKind = r.visitDatatype = r.visitPattern = r.visitFlags = r.visitLength = r.visitMinlength = r.visitMaxlength = r.visitMininclusive = r.visitMinexclusive = r.visitMaxinclusive = r.visitMaxexclusive = r.visitTotaldigits = r.visitFractiondigits = r._visitValue;\n    r.visitOneOf = r.visitEachOf = r._visitGroup;\n    r.visitShapeAnd = r.visitShapeOr = r._visitShapeGroup;\n    r.visitInclude = r._visitValue;\n    r.visitValueExpr = r.visitShapeExpr;\n    return r;\n  },\n\n  // tests\n  // console.warn(\"HERE:\", ShExJtoAS({\"type\":\"Schema\",\"shapes\":[{\"id\":\"http://all.example/S1\",\"type\":\"Shape\",\"expression\":\n  //  { \"id\":\"http://all.example/S1e\", \"type\":\"EachOf\",\"expressions\":[ ] },\n  // // { \"id\":\"http://all.example/S1e\",\"type\":\"TripleConstraint\",\"predicate\":\"http://all.example/p1\"},\n  // \"extra\":[\"http://all.example/p3\",\"http://all.example/p1\",\"http://all.example/p2\"]\n  // }]}).shapes['http://all.example/S1']);\n\n  ShExJtoAS: function (schema) {\n    var _ShExUtil = this;\n    schema._prefixes = schema.prefixes || {  };\n    schema._index = this.index(schema);\n    return schema;\n  },\n\n  AStoShExJ: function (schema, abbreviate) {\n    schema[\"@context\"] = schema[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete schema[\"_index\"];\n    delete schema[\"_prefixes\"];\n    return schema;\n  },\n\n  ShExRVisitor: function (knownShapeExprs) {\n    var v = ShExUtil.Visitor();\n    var knownExpressions = {};\n    var oldVisitShapeExpr = v.visitShapeExpr,\n        oldVisitValueExpr = v.visitValueExpr,\n        oldVisitExpression = v.visitExpression;\n    v.keepShapeExpr = oldVisitShapeExpr;\n\n    v.visitShapeExpr = v.visitValueExpr = function (expr, label) {\n      if (typeof expr === \"string\")\n        return expr;\n      if (\"id\" in expr) {\n        if (knownShapeExprs.indexOf(expr.id) !== -1 || Object.keys(expr).length === 1)\n          return expr.id;\n        delete expr.id;\n      }\n      return oldVisitShapeExpr.call(this, expr, label);\n    };\n\n    v.visitExpression = function (expr) {\n      if (typeof expr === \"string\") // shortcut for recursive references e.g. 1Include1 and ../doc/TODO.md\n        return expr;\n      if (\"id\" in expr) {\n        if (expr.id in knownExpressions) {\n          knownExpressions[expr.id].refCount++;\n          return expr.id;\n        }\n      }\n      var ret = oldVisitExpression.call(this, expr);\n      // Everything from RDF has an ID, usually a BNode.\n      knownExpressions[expr.id] = { refCount: 1, expr: ret };\n      return ret;\n    }\n\n    v.cleanIds = function () {\n      for (var k in knownExpressions) {\n        var known = knownExpressions[k];\n        if (known.refCount === 1 && RdfTerm.isBlank(known.expr.id))\n          delete known.expr.id;\n      };\n    }\n\n    return v;\n  },\n\n\n  // tests\n  // var shexr = ShExUtil.ShExRtoShExJ({ \"type\": \"Schema\", \"shapes\": [\n  //   { \"id\": \"http://a.example/S1\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p1\",\n  //       \"valueExpr\": {\n  //         \"type\": \"ShapeAnd\", \"shapeExprs\": [\n  //           { \"type\": \"NodeConstraint\", \"nodeKind\": \"bnode\" },\n  //           { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //             \"expression\": {\n  //               \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  //           //            \"http://a.example/S2\"\n  //         ] } } },\n  //   { \"id\": \"http://a.example/S2\", \"type\": \"Shape\",\n  //     \"expression\": {\n  //       \"type\": \"TripleConstraint\", \"predicate\": \"http://a.example/p2\" } }\n  // ] });\n  // console.warn(\"HERE:\", shexr.shapes[0].expression.valueExpr);\n  // ShExUtil.ShExJtoAS(shexr);\n  // console.warn(\"THERE:\", shexr.shapes[\"http://a.example/S1\"].expression.valueExpr);\n\n\n  ShExRtoShExJ: function (schema) {\n    // compile a list of known shapeExprs\n    var knownShapeExprs = [];\n    if (\"shapes\" in schema)\n      knownShapeExprs = knownShapeExprs.concat(schema.shapes.map(sh => { return sh.id; }));\n\n    // normalize references to those shapeExprs\n    var v = this.ShExRVisitor(knownShapeExprs);\n    if (\"start\" in schema)\n      schema.start = v.visitShapeExpr(schema.start);\n    if (\"shapes\" in schema)\n      schema.shapes = schema.shapes.map(sh => {\n        return v.keepShapeExpr(sh);\n      });\n\n    // remove extraneous BNode IDs\n    v.cleanIds();\n    return schema;\n  },\n\n  valGrep: function (obj, type, f) {\n    var _ShExUtil = this;\n    var ret = [];\n    for (var i in obj) {\n      var o = obj[i];\n      if (typeof o === \"object\") {\n        if (\"type\" in o && o.type === type)\n          ret.push(f(o));\n        ret.push.apply(ret, _ShExUtil.valGrep(o, type, f));\n      }\n    }\n    return ret;\n  },\n\n  n3jsToTurtle: function (res) {\n    function termToLex (node) {\n      return typeof node === \"object\" ? (\"\\\"\" + node.value + \"\\\"\" + (\n        \"type\" in node ? \"^^<\" + node.type + \">\" :\n          \"language\" in node ? \"@\" + node.language :\n          \"\"\n      )) :\n      RdfTerm.isIRI(node) ? \"<\" + node + \">\" :\n      RdfTerm.isBlank(node) ? node :\n      \"???\";\n    }\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  valToN3js: function (res) {\n    return this.valGrep(res, \"TestedTriple\", function (t) {\n      var ret = JSON.parse(JSON.stringify(t));\n      if (typeof t.object === \"object\")\n        ret.object = (\"\\\"\" + t.object.value + \"\\\"\" + (\n          \"type\" in t.object ? \"^^\" + t.object.type :\n            \"language\" in t.object ? \"@\" + t.object.language :\n            \"\"\n        ));\n      return ret;\n    });\n  },\n\n  n3jsToTurtle: function (n3js) {\n    function termToLex (node) {\n      if (RdfTerm.isIRI(node))\n        return \"<\" + node + \">\";\n      if (RdfTerm.isBlank(node))\n        return node;\n      var t = RdfTerm.getLiteralType(node);\n      if (t && t !== \"http://www.w3.org/2001/XMLSchema#string\")\n        return \"\\\"\" + RdfTerm.getLiteralValue(node) + \"\\\"\" +\n        \"^^<\" + t + \">\";\n      return node;\n    }\n    return n3js.map(function (t) {\n      return [\"subject\", \"predicate\", \"object\"].map(k => {\n        return termToLex(t[k]);\n      }).join(\" \")+\" .\";\n    });\n  },\n\n  /** create indexes for schema\n   */\n  index: function (schema) {\n    let index = {\n      shapeExprs: {},\n      tripleExprs: {}\n    };\n    let v = ShExUtil.Visitor();\n\n    let oldVisitExpression = v.visitExpression;\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression)\n        index.tripleExprs[expression.id] = expression;\n      return oldVisitExpression.call(v, expression);\n    };\n\n    let oldVisitShapeExpr = v.visitShapeExpr;\n    v.visitShapeExpr = v.visitValueExpr = function (shapeExpr, label) {\n      if (typeof shapeExpr === \"object\" && \"id\" in shapeExpr)\n        index.shapeExprs[shapeExpr.id] = shapeExpr;\n      return oldVisitShapeExpr.call(v, shapeExpr, label);\n    };\n\n    v.visitSchema(schema);\n    return index;\n  },\n\n  /* canonicalize: move all tripleExpression references to their first expression.\n   *\n   */\n  canonicalize: function (schema, trimIRI) {\n    var ret = JSON.parse(JSON.stringify(schema));\n    ret[\"@context\"] = ret[\"@context\"] || \"http://www.w3.org/ns/shex.jsonld\";\n    delete ret._prefixes;\n    delete ret._base;\n    let index = ret._index || this.index(schema);\n    delete ret._index;\n    let sourceMap = ret._sourceMap;\n    delete ret._sourceMap;\n    // Don't delete ret.productions as it's part of the AS.\n    var v = ShExUtil.Visitor();\n    var knownExpressions = [];\n    var oldVisitInclusion = v.visitInclusion, oldVisitExpression = v.visitExpression;\n    v.visitInclusion = function (inclusion) {\n      if (knownExpressions.indexOf(inclusion) === -1 &&\n          inclusion in index.tripleExprs) {\n        knownExpressions.push(inclusion)\n        return oldVisitExpression.call(v, index.tripleExprs[inclusion]);\n      }\n      return oldVisitInclusion.call(v, inclusion);\n    };\n    v.visitExpression = function (expression) {\n      if (typeof expression === \"object\" && \"id\" in expression) {\n        if (knownExpressions.indexOf(expression.id) === -1) {\n          knownExpressions.push(expression.id)\n          return oldVisitExpression.call(v, index.tripleExprs[expression.id]);\n        }\n        return expression.id; // Inclusion\n      }\n      return oldVisitExpression.call(v, expression);\n    };\n    if (trimIRI) {\n      v.visitIRI = function (i) {\n        return i.replace(trimIRI, \"\");\n      }\n      if (\"imports\" in ret)\n        ret.imports = v.visitImports(ret.imports);\n    }\n    if (\"shapes\" in ret) {\n      ret.shapes = Object.keys(index.shapeExprs).sort().map(k => {\n        if (\"extra\" in index.shapeExprs[k])\n          index.shapeExprs[k].extra.sort();\n        return v.visitShapeExpr(index.shapeExprs[k]);\n      });\n    }\n    return ret;\n  },\n\n  BiDiClosure: function () {\n    return {\n      needs: {},\n      neededBy: {},\n      inCycle: [],\n      test: function () {\n        function expect (l, r) { var ls = JSON.stringify(l), rs = JSON.stringify(r); if (ls !== rs) throw Error(ls+\" !== \"+rs); }\n        // this.add(1, 2); expect(this.needs, { 1:[2]                     }); expect(this.neededBy, { 2:[1]                     });\n        // this.add(3, 4); expect(this.needs, { 1:[2], 3:[4]              }); expect(this.neededBy, { 2:[1], 4:[3]              });\n        // this.add(2, 3); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1] });\n\n        this.add(2, 3); expect(this.needs, { 2:[3]                     }); expect(this.neededBy, { 3:[2]                     });\n        this.add(1, 2); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(1, 3); expect(this.needs, { 1:[2,3], 2:[3]            }); expect(this.neededBy, { 3:[2,1], 2:[1]            });\n        this.add(3, 4); expect(this.needs, { 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(6, 7); expect(this.needs, { 6:[7]                    , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6]                    , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 6); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(5, 7); expect(this.needs, { 5:[6,7], 6:[7]           , 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5]           , 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(7, 8); expect(this.needs, { 5:[6,7,8], 6:[7,8], 7:[8], 1:[2,3,4], 2:[3,4], 3:[4] }); expect(this.neededBy, { 7:[6,5], 6:[5], 8:[7,6,5], 3:[2,1], 2:[1], 4:[3,2,1] });\n        this.add(4, 5);\n        expect(this.needs,    { 1:[2,3,4,5,6,7,8], 2:[3,4,5,6,7,8], 3:[4,5,6,7,8], 4:[5,6,7,8], 5:[6,7,8], 6:[7,8], 7:[8] });\n        expect(this.neededBy, { 2:[1], 3:[2,1], 4:[3,2,1], 5:[4,3,2,1], 6:[5,4,3,2,1], 7:[6,5,4,3,2,1], 8:[7,6,5,4,3,2,1] });\n      },\n      add: function (needer, needie, negated) {\n        var r = this;\n        if (!(needer in r.needs))\n          r.needs[needer] = [];\n        if (!(needie in r.neededBy))\n          r.neededBy[needie] = [];\n\n        // // [].concat.apply(r.needs[needer], [needie], r.needs[needie]). emitted only last element\n        r.needs[needer] = r.needs[needer].concat([needie], r.needs[needie]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        // // [].concat.apply(r.neededBy[needie], [needer], r.neededBy[needer]). emitted only last element\n        r.neededBy[needie] = r.neededBy[needie].concat([needer], r.neededBy[needer]).\n          filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n\n        if (needer in this.neededBy) this.neededBy[needer].forEach(function (e) {\n          r.needs[e] = r.needs[e].concat([needie], r.needs[needie]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; });\n        });\n\n        if (needie in this.needs) this.needs[needie].forEach(function (e) {\n          r.neededBy[e] = r.neededBy[e].concat([needer], r.neededBy[needer]).\n            filter(function (el, ord, l) { return el !== undefined && l.indexOf(el) === ord; })\n        });\n        // this.neededBy[needie].push(needer);\n\n        if (r.needs[needer].indexOf(needer) !== -1)\n          r.inCycle = r.inCycle.concat(r.needs[needer]);\n      },\n      trim: function () {\n        function _trim (a) {\n          // filter(function (el, ord, l) { return l.indexOf(el) === ord; })\n          for (var i = a.length-1; i > -1; --i)\n            if (a.indexOf(a[i]) < i)\n              a.splice(i, i+1);\n        }\n        for (k in this.needs)\n          _trim(this.needs[k]);\n        for (k in this.neededBy)\n          _trim(this.neededBy[k]);\n      },\n      foundIn: {},\n      addIn: function (tripleExpr, shapeExpr) {\n        this.foundIn[tripleExpr] = shapeExpr;\n      }\n    }\n  },\n  /** @@TODO tests\n   * options:\n   *   no: don't do anything; just report nestable shapes\n   *   transform: function to change shape labels\n   */\n  nestShapes: function (schema, options = {}) {\n    var _ShExUtil = this;\n    const index = schema._index || this.index(schema);\n    if (!('no' in options)) { options.no = false }\n\n    let shapeLabels = Object.keys(index.shapeExprs || [])\n    let shapeReferences = {}\n    shapeLabels.forEach(label => {\n      let shape = index.shapeExprs[label]\n      noteReference(label, null) // just note the shape so we have a complete list at the end\n      shape = _ShExUtil.skipDecl(shape)\n      if (shape.type === 'Shape') {\n        if ('extends' in shape) {\n          shape.extends.forEach(\n            parent => noteReference(parent, shape)\n          )\n        }\n        if ('expression' in shape) {\n          (_ShExUtil.simpleTripleConstraints(shape) || []).forEach(tc => {\n            let target = _ShExUtil.getValueType(tc.valueExpr, true)\n            noteReference(target, {type: 'tc', shapeLabel: label, tc: tc})\n          })\n        }\n      } else if (shape.type === 'NodeConstraint') {\n        // can't have any refs to other shapes\n      } else {\n        throw Error('nestShapes currently only supports Shapes and NodeConstraints')\n      }\n    })\n    let nestables = Object.keys(shapeReferences).filter(\n      label => shapeReferences[label].length === 1\n        && shapeReferences[label][0].type === 'tc' // no inheritance support yet\n        && _ShExUtil.skipDecl(index.shapeExprs[label]).type === 'Shape' // Don't nest e.g. valuesets for now\n    ).filter(\n      nestable => !('noNestPattern' in options)\n        || !nestable.match(RegExp(options.noNestPattern))\n    ).reduce((acc, label) => {\n      acc[label] = {\n        referrer: shapeReferences[label][0].shapeLabel,\n        predicate: shapeReferences[label][0].tc.predicate\n      }\n      return acc\n    }, {})\n    if (!options.no) {\n      let oldToNew = {}\n\n      if (options.rename) {\n      if (!('transform' in options)) {\n        options.transform = (function () {\n          let map = shapeLabels.reduce((acc, k, idx) => {\n            acc[k] = '_:transformed' + idx\n            return acc\n          }, {})\n          return function (id, shapeExpr) {\n            return map[id]\n          }\n        })()\n      }\n      Object.keys(nestables).forEach(oldName => {\n        let shapeExpr = index.shapeExprs[oldName]\n        let newName = options.transform(oldName, shapeExpr)\n        oldToNew[oldName] = newName\n        shapeLabels[shapeLabels.indexOf(oldName)] = newName\n        nestables[newName] = nestables[oldName]\n        nestables[newName].was = oldName\n        delete nestables[oldName]\n        index.shapeExprs[newName] = index.shapeExprs[oldName]\n        delete index.shapeExprs[oldName]\n        if (shapeReferences[oldName].length !== 1) { throw Error('assertion: ' + oldName + ' doesn\\'t have one reference: [' + shapeReferences[oldName] + ']') }\n        let ref = shapeReferences[oldName][0]\n        if (ref.type === 'tc') {\n          if (ref.tc.valueExpr.type === 'ShapeRef') {\n            ref.tc.valueExpr.reference = newName\n          } else {\n            throw Error('assertion: rename not implemented for TripleConstraint expr: ' + ref.tc.valueExpr)\n            // _ShExUtil.setValueType(ref, newName)\n          }\n        } else if (ref.type === 'Shape') {\n          throw Error('assertion: rename not implemented for Shape: ' + ref)\n        } else {\n          throw Error('assertion: ' + ref.type + ' not TripleConstraint or Shape')\n        }\n      })\n\n      Object.keys(nestables).forEach(k => {\n        let n = nestables[k]\n        if (n.referrer in oldToNew) {\n          n.newReferrer = oldToNew[n.referrer]\n        }\n      })\n\n      // Restore old order for more concise diffs.\n      let shapesCopy = {}\n      shapeLabels.forEach(label => shapesCopy[label] = index.shapeExprs[label])\n      index.shapeExprs = shapesCopy\n      } else {\n        const doomed = []\n        const ids = schema.shapes.map(s => s.id)\n        Object.keys(nestables).forEach(oldName => {\n          shapeReferences[oldName][0].tc.valueExpr = index.shapeExprs[oldName].shapeExpr\n          const delme = ids.indexOf(oldName)\n          if (schema.shapes[delme].id !== oldName)\n            throw Error('assertion: found ' + schema.shapes[delme].id + ' instead of ' + oldName)\n          doomed.push(delme)\n          delete index.shapeExprs[oldName]\n        })\n        doomed.sort((l, r) => r - l).forEach(delme => {\n          const id = schema.shapes[delme].id\n          if (!nestables[id])\n            throw Error('deleting unexpected shape ' + id)\n          schema.shapes.splice(delme, 1)\n        })\n      }\n    }\n    // console.dir(nestables)\n    // console.dir(shapeReferences)\n    return nestables\n\n    function noteReference (id, reference) {\n      if (!(id in shapeReferences)) {\n        shapeReferences[id] = []\n      }\n      if (reference) {\n        shapeReferences[id].push(reference)\n      }\n    }\n  },\n\n  /** @@TODO tests\n   *\n   */\n  getPredicateUsage: function (schema, untyped = {}) {\n    var _ShExUtil = this;\n\n    // populate shapeHierarchy\n    let shapeHierarchy = Hierarchy.create()\n    Object.keys(schema.shapes).forEach(label => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[label])\n      if (shapeExpr.type === 'Shape') {\n        (shapeExpr.extends || []).forEach(\n          superShape => shapeHierarchy.add(superShape, label)\n        )\n      }\n    })\n    Object.keys(schema.shapes).forEach(label => {\n      if (!(label in shapeHierarchy.parents))\n        shapeHierarchy.parents[label] = []\n    })\n\n    let predicates = { } // IRI->{ uses: [shapeLabel], commonType: shapeExpr }\n    Object.keys(schema.shapes).forEach(shapeLabel => {\n      let shapeExpr = _ShExUtil.skipDecl(schema.shapes[shapeLabel])\n      if (shapeExpr.type === 'Shape') {\n        let tcs = _ShExUtil.simpleTripleConstraints(shapeExpr) || []\n        tcs.forEach(tc => {\n          let newType = _ShExUtil.getValueType(tc.valueExpr)\n          if (!(tc.predicate in predicates)) {\n            predicates[tc.predicate] = {\n              uses: [shapeLabel],\n              commonType: newType,\n              polymorphic: false\n            }\n            if (typeof newType === 'object') {\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                newType,\n                references: []\n              }\n            }\n          } else {\n            predicates[tc.predicate].uses.push(shapeLabel)\n            let curType = predicates[tc.predicate].commonType\n            if (typeof curType === 'object' || curType === null) {\n              // another use of a predicate with no commonType\n              // console.warn(`${shapeLabel} ${tc.predicate}:${newType} uses untypable predicate`)\n              untyped[tc.predicate].references.push({ shapeLabel, newType })\n            } else if (typeof newType === 'object') {\n              // first use of a predicate with no detectable commonType\n              predicates[tc.predicate].commonType = null\n              untyped[tc.predicate] = {\n                shapeLabel,\n                predicate: tc.predicate,\n                curType,\n                newType,\n                references: []\n              }\n            } else if (curType === newType) {\n              ; // same type again\n            } else if (shapeHierarchy.parents[curType].indexOf(newType) !== -1) {\n              predicates[tc.predicate].polymorphic = true; // already covered by current commonType\n            } else {\n              let idx = shapeHierarchy.parents[newType].indexOf(curType)\n              if (idx === -1) {\n                let intersection = shapeHierarchy.parents[curType].filter(\n                  lab => -1 !== shapeHierarchy.parents[newType].indexOf(lab)\n                )\n                if (intersection.length === 0) {\n                  untyped[tc.predicate] = {\n                    shapeLabel,\n                    predicate: tc.predicate,\n                    curType,\n                    newType,\n                    references: []\n                  }\n                  // console.warn(`${shapeLabel} ${tc.predicate} : ${newType} isn\\'t related to ${curType}`)\n                  predicates[tc.predicate].commonType = null\n                } else {\n                  predicates[tc.predicate].commonType = intersection[0]\n                  predicates[tc.predicate].polymorphic = true\n                }\n              } else {\n                predicates[tc.predicate].commonType = shapeHierarchy.parents[newType][idx]\n                predicates[tc.predicate].polymorphic = true\n              }\n            }\n          }\n        })\n      }\n    })\n    return predicates\n  },\n\n  /** @@TODO tests\n   *\n   */\n  simpleTripleConstraints: function (shape) {\n    if (!('expression' in shape)) {\n      return []\n    }\n    if (shape.expression.type === 'TripleConstraint') {\n      return [ shape.expression ]\n    }\n    if (shape.expression.type === 'EachOf' &&\n        !(shape.expression.expressions.find(\n          expr => expr.type !== 'TripleConstraint'\n        ))) {\n          return shape.expression.expressions\n        }\n    throw Error('can\\'t (yet) express ' + JSON.stringify(shape))\n  },\n\n  skipDecl: function (shapeExpr) {\n    return shapeExpr.type === 'ShapeDecl' ? shapeExpr.shapeExpr : shapeExpr\n  },\n\n  getValueType: function (valueExpr) {\n    if (typeof valueExpr === 'string') { return valueExpr }\n    if (valueExpr.reference) { return valueExpr.reference }\n    if (valueExpr.nodeKind === 'iri') { return OWL.Thing } // !! push this test to callers\n    if (valueExpr.datatype) { return valueExpr.datatype }\n    // if (valueExpr.extends && valueExpr.extends.length === 1) { return valueExpr.extends[0] }\n    return valueExpr // throw Error('no value type for ' + JSON.stringify(valueExpr))\n  },\n\n  /** getDependencies: find which shappes depend on other shapes by inheritance\n   * or inclusion.\n   * TODO: rewrite in terms of Visitor.\n   */\n  getDependencies: function (schema, ret) {\n    ret = ret || this.BiDiClosure();\n    (schema.shapes || []).forEach(function (shape) {\n      function _walkShapeExpression (shapeExpr, negated) {\n        if (typeof shapeExpr === \"string\") { // ShapeRef\n          ret.add(shape.id, shapeExpr);\n        } else if (shapeExpr.type === \"ShapeOr\" || shapeExpr.type === \"ShapeAnd\") {\n          shapeExpr.shapeExprs.forEach(function (expr) {\n            _walkShapeExpression(expr, negated);\n          });\n        } else if (shapeExpr.type === \"ShapeNot\") {\n          _walkShapeExpression(shapeExpr.shapeExpr, negated ^ 1); // !!! test negation\n        } else if (shapeExpr.type === \"Shape\") {\n          _walkShape(shapeExpr, negated);\n        } else if (shapeExpr.type === \"NodeConstraint\") {\n          // no impact on dependencies\n        } else if (shapeExpr.type === \"ShapeExternal\") {\n        } else\n          throw Error(\"expected Shape{And,Or,Ref,External} or NodeConstraint in \" + JSON.stringify(shapeExpr));\n      }\n      \n      function _walkShape (shape, negated) {\n        function _walkTripleExpression (tripleExpr, negated) {\n          function _exprGroup (exprs, negated) {\n            exprs.forEach(function (nested) {\n              _walkTripleExpression(nested, negated) // ?? negation allowed?\n            });\n          }\n\n          function _walkTripleConstraint (tc, negated) {\n            if (tc.valueExpr)\n              _walkShapeExpression(tc.valueExpr, negated);\n            if (negated && ret.inCycle.indexOf(shape.id) !== -1) // illDefined/negatedRefCycle.err\n              throw Error(\"Structural error: \" + shape.id + \" appears in negated cycle\");\n          }\n\n          if (typeof tripleExpr === \"string\") { // Inclusion\n            ret.add(shape.id, tripleExpr);\n          } else {\n            if (\"id\" in tripleExpr)\n              ret.addIn(tripleExpr.id, shape.id)\n            if (tripleExpr.type === \"TripleConstraint\") {\n              _walkTripleConstraint(tripleExpr, negated);\n            } else if (tripleExpr.type === \"OneOf\" || tripleExpr.type === \"EachOf\") {\n              _exprGroup(tripleExpr.expressions);\n            } else {\n              throw Error(\"expected {TripleConstraint,OneOf,EachOf,Inclusion} in \" + tripleExpr);\n            }\n          }\n        }\n\n        if (shape.inherit && shape.inherit.length > 0)\n          shape.inherit.forEach(function (i) {\n            ret.add(shape.id, i);\n          });\n        if (shape.expression)\n          _walkTripleExpression(shape.expression, negated);\n      }\n      _walkShapeExpression(shape, 0); // 0 means false for bitwise XOR\n    });\n    return ret;\n  },\n\n  /** partition: create subset of a schema with only desired shapes and\n   * their dependencies.\n   *\n   * @schema: input schema\n   * @partition: shape name or array of desired shape names\n   * @deps: (optional) dependency tree from getDependencies.\n   *        map(shapeLabel -> [shapeLabel])\n   */\n  partition: function (schema, includes, deps, cantFind) {\n    const inputIndex = schema._index || this.index(schema)\n    const outputIndex = { shapeExprs: new Map(), tripleExprs: new Map() };\n    includes = includes instanceof Array ? includes : [includes];\n\n    // build dependency tree if not passed one\n    deps = deps || this.getDependencies(schema);\n    cantFind = cantFind || function (what, why) {\n      throw new Error(\"Error: can't find shape \" +\n                      (why ?\n                       why + \" dependency \" + what :\n                       what));\n    };\n    var partition = {};\n    for (var k in schema)\n      partition[k] = k === \"shapes\" ? [] : schema[k];\n    includes.forEach(function (i) {\n      if (i in outputIndex.shapeExprs) {\n        // already got it.\n      } else if (i in inputIndex.shapeExprs) {\n        const adding = inputIndex.shapeExprs[i];\n        partition.shapes.push(adding);\n        outputIndex.shapeExprs[adding.id] = adding;\n        if (i in deps.needs)\n          deps.needs[i].forEach(function (n) {\n            // Turn any needed TE into an SE.\n            if (n in deps.foundIn)\n              n = deps.foundIn[n];\n\n            if (n in outputIndex.shapeExprs) {\n            } else if (n in inputIndex.shapeExprs) {\n              const needed = inputIndex.shapeExprs[n];\n              partition.shapes.push(needed);\n              outputIndex.shapeExprs[needed.id] = needed;\n            } else\n              cantFind(n, i);\n          });\n      } else {\n        cantFind(i, \"supplied\");\n      }\n    });\n    return partition;\n  },\n\n\n  /** @@TODO flatten: return copy of input schema with all shape and value class\n   * references substituted by a copy of their referent.\n   *\n   * @schema: input schema\n   */\n  flatten: function (schema, deps, cantFind) {\n    var v = this.Visitor();\n    return v.visitSchema(schema);\n  },\n\n  // @@ put predicateUsage here\n\n  emptySchema: function () {\n    return {\n      type: \"Schema\"\n    };\n  },\n  merge: function (left, right, overwrite, inPlace) {\n    var ret = inPlace ? left : this.emptySchema();\n\n    function mergeArray (attr) {\n      Object.keys(left[attr] || {}).forEach(function (key) {\n        if (!(attr in ret))\n          ret[attr] = {};\n        ret[attr][key] = left[attr][key];\n      });\n      Object.keys(right[attr] || {}).forEach(function (key) {\n        if (!(attr  in left) || !(key in left[attr]) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = {};\n          ret[attr][key] = right[attr][key];\n        }\n      });\n    }\n\n    function mergeMap (attr) {\n      (left[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr in ret))\n          ret[attr] = new Map();\n        ret[attr].set(key, left[attr].get(key));\n      });\n      (right[attr] || new Map()).forEach(function (value, key, map) {\n        if (!(attr  in left) || !(left[attr].has(key)) || overwrite) {\n          if (!(attr in ret))\n            ret[attr] = new Map();\n          ret[attr].set(key, right[attr].get(key));\n        }\n      });\n    }\n\n    // base\n    if (\"_base\" in left)\n      ret._base = left._base;\n    if (\"_base\" in right)\n      if (!(\"_base\" in left) || overwrite)\n        ret._base = right._base;\n\n    mergeArray(\"_prefixes\");\n\n    mergeMap(\"_sourceMap\");\n\n    if (\"imports\" in right)\n      if (!(\"imports\" in left) || overwrite)\n        ret.imports = right.imports;\n\n    // startActs\n    if (\"startActs\" in left)\n      ret.startActs = left.startActs;\n    if (\"startActs\" in right)\n      if (!(\"startActs\" in left) || overwrite)\n        ret.startActs = right.startActs;\n\n    // start\n    if (\"start\" in left)\n      ret.start = left.start;\n    if (\"start\" in right)\n      if (!(\"start\" in left) || overwrite)\n        ret.start = right.start;\n\n    let lindex = left._index || this.index(left);\n\n    // shapes\n    if (!inPlace)\n      (left.shapes || []).forEach(function (lshape) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(lshape);\n      });\n    (right.shapes || []).forEach(function (rshape) {\n      if (!(\"shapes\"  in left) || !(rshape.id in lindex.shapeExprs) || overwrite) {\n        if (!(\"shapes\" in ret))\n          ret.shapes = [];\n        ret.shapes.push(rshape)\n      }\n    });\n\n    if (left._index || right._index)\n      ret._index = this.index(ret); // inefficient; could build above\n\n    return ret;\n  },\n\n  absolutizeResults: function (parsed, base) {\n    // !! duplicate of Validation-test.js:84: var referenceResult = parseJSONFile(resultsFile...)\n    function mapFunction (k, obj) {\n      // resolve relative URLs in results file\n      if ([\"shape\", \"reference\", \"node\", \"subject\", \"predicate\", \"object\"].indexOf(k) !== -1 &&\n          RdfTerm.isIRI(obj[k])) {\n        obj[k] = RdfTerm.resolveRelativeIRI(base, obj[k]);\n      }}\n\n    function resolveRelativeURLs (obj) {\n      Object.keys(obj).forEach(function (k) {\n        if (typeof obj[k] === \"object\") {\n          resolveRelativeURLs(obj[k]);\n        }\n        if (mapFunction) {\n          mapFunction(k, obj);\n        }\n      });\n    }\n    resolveRelativeURLs(parsed);\n    return parsed;\n  },\n\n  getProofGraph: function (res, db, dataFactory) {\n    function _dive1 (solns) {\n      if (solns.type === \"NodeTest\" || solns.type === \"NodeConstraintTest\") {\n      } else if (solns.type === \"SolutionList\" ||\n          solns.type === \"ShapeAndResults\") {\n        solns.solutions.forEach(s => {\n          if (s.solution) // no .solution for <S> {}\n            _dive1(s.solution);\n        });\n      } else if (solns.type === \"ShapeOrResults\") {\n        _dive1(solns.solution);\n      } else if (solns.type === \"ShapeTest\") {\n        if (\"solution\" in solns)\n          _dive1(solns.solution);\n      } else if (solns.type === \"OneOfSolutions\" ||\n                 solns.type === \"EachOfSolutions\") {\n        solns.solutions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"OneOfSolution\" ||\n                 solns.type === \"EachOfSolution\") {\n        solns.expressions.forEach(s => {\n          _dive1(s);\n        });\n      } else if (solns.type === \"TripleConstraintSolutions\") {\n        solns.solutions.map(s => {\n          if (s.type !== \"TestedTriple\")\n            throw Error(\"unexpected result type: \" + s.type);\n          var s2 = s;\n          if (typeof s2.object === \"object\")\n            s2.object = \"\\\"\" + s2.object.value.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\"\n            + (s2.object.language ? (\"@\" + s2.object.language) : \n               s2.object.type ? (\"^^\" + s2.object.type) :\n               \"\");\n          db.addQuad(RdfTerm.externalTriple(s2, dataFactory))\n          if (\"referenced\" in s) {\n            _dive1(s.referenced);\n          }\n        });\n      } else {\n        throw Error(\"unexpected expr type \"+solns.type+\" in \" + JSON.stringify(solns));\n      }\n    }\n    _dive1(res);\n    return db;\n  },\n\n  validateSchema: function (schema) { // obselete, but may need other validations in the future.\n    var _ShExUtil = this;\n    var visitor = this.Visitor();\n    var currentLabel = currentExtra = null;\n    var currentNegated = false;\n    var dependsOn = { };\n    var inTE = false;\n    var oldVisitShape = visitor.visitShape;\n    var negativeDeps = Hierarchy.create();\n    var positiveDeps = Hierarchy.create();\n    let index = schema.index || this.index(schema);\n\n    visitor.visitShape = function (shape, label) {\n      var lastExtra = currentExtra;\n      currentExtra = shape.extra;\n      var ret = oldVisitShape.call(visitor, shape, label);\n      currentExtra = lastExtra;\n      return ret;\n    }\n\n    var oldVisitShapeNot = visitor.visitShapeNot;\n    visitor.visitShapeNot = function (shapeNot, label) {\n      var lastNegated = currentNegated;\n      currentNegated ^= true;\n      var ret = oldVisitShapeNot.call(visitor, shapeNot, label);\n      currentNegated = lastNegated;\n      return ret;\n    }\n\n    var oldVisitTripleConstraint = visitor.visitTripleConstraint;\n    visitor.visitTripleConstraint = function (expr) {\n      var lastNegated = currentNegated;\n      if (currentExtra && currentExtra.indexOf(expr.predicate) !== -1)\n        currentNegated ^= true;\n      inTE = true;\n      var ret = oldVisitTripleConstraint.call(visitor, expr);\n      inTE = false;\n      currentNegated = lastNegated;\n      return ret;\n    };\n\n    var oldVisitShapeRef = visitor.visitShapeRef;\n    visitor.visitShapeRef = function (shapeRef) {\n      if (!(shapeRef in index.shapeExprs))\n        throw firstError(Error(\"Structural error: reference to \" + JSON.stringify(shapeRef) + \" not found in schema shape expressions:\\n\" + dumpKeys(index.shapeExprs) + \".\"), shapeRef);\n      if (!inTE && shapeRef === currentLabel)\n        throw firstError(Error(\"Structural error: circular reference to \" + currentLabel + \".\"), shapeRef);\n      (currentNegated ? negativeDeps : positiveDeps).add(currentLabel, shapeRef)\n      return oldVisitShapeRef.call(visitor, shapeRef);\n    }\n\n    var oldVisitInclusion = visitor.visitInclusion;\n    visitor.visitInclusion = function (inclusion) {\n      var refd;\n      if (!(refd = index.tripleExprs[inclusion]))\n        throw firstError(Error(\"Structural error: included shape \" + inclusion + \" not found in schema triple expressions:\\n\" + dumpKeys(index.tripleExprs) + \".\"), inclusion);\n      // if (refd.type !== \"Shape\")\n      //   throw Error(\"Structural error: \" + inclusion + \" is not a simple shape.\");\n      return oldVisitInclusion.call(visitor, inclusion);\n    };\n\n    (schema.shapes || []).forEach(function (shape) {\n      currentLabel = shape.id;\n      visitor.visitShapeExpr(shape, shape.id);\n    });\n    let circs = Object.keys(negativeDeps.children).filter(\n      k => negativeDeps.children[k].filter(\n        k2 => k2 in negativeDeps.children && negativeDeps.children[k2].indexOf(k) !== -1\n          || k2 in positiveDeps.children && positiveDeps.children[k2].indexOf(k) !== -1\n      ).length > 0\n    );\n    if (circs.length)\n      throw firstError(Error(\"Structural error: circular negative dependencies on \" + circs.join(',') + \".\"), circs[0]);\n\n    function dumpKeys (obj) {\n      return obj ? Object.keys(obj).map(\n        u => u.substr(0, 2) === '_:' ? u : '<' + u + '>'\n      ).join(\"\\n        \") : '- none defined -'\n    }\n\n    function firstError (e, obj) {\n      if (\"_sourceMap\" in schema)\n        e.location = (schema._sourceMap.get(obj) || [undefined])[0];\n      return e;\n    }\n  },\n\n  /** isWellDefined: assert that schema is well-defined.\n   *\n   * @schema: input schema\n   * @@TODO\n   */\n  isWellDefined: function (schema) {\n    this.validateSchema(schema);\n    // var deps = this.getDependencies(schema);\n    return schema;\n  },\n\n  walkVal: function (val, cb) {\n    var _ShExUtil = this;\n    if (val.type === \"NodeTest\") {\n      return null;\n    } else if (val.type === \"ShapeTest\") {\n      return \"solution\" in val ? _ShExUtil.walkVal(val.solution, cb) : null;\n    } else if (val.type === \"ShapeOrResults\") {\n      return _ShExUtil.walkVal(val.solution || val.solutions, cb);\n    } else if (val.type === \"ShapeAndResults\") {\n      return val.solutions.reduce((ret, exp) => {\n        var n = _ShExUtil.walkVal(exp, cb);\n        if (n)\n          Object.keys(n).forEach(k => {\n            if (k in ret)\n              ret[k] = ret[k].concat(n[k]);\n            else\n              ret[k] = n[k];\n          })\n        return ret;\n      }, {});\n    } else if (val.type === \"EachOfSolutions\" || val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        sln.expressions.forEach(exp => {\n          var n = _ShExUtil.walkVal(exp, cb);\n          if (n)\n            Object.keys(n).forEach(k => {\n              if (k in ret)\n                ret[k] = ret[k].concat(n[k]);\n              else\n                ret[k] = n[k];\n            })\n        });\n        return ret;\n      }, {});\n    } else if (val.type === \"OneOfSolutions\") {\n      return val.solutions.reduce((ret, sln) => {\n        Object.assign(ret, _ShExUtil.walkVal(sln, cb));\n        return ret;\n      }, {});\n    } else if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        var ret = {};\n        var vals = [];\n        ret[val.predicate] = vals;\n        val.solutions.forEach(sln => {\n          var toAdd = [];\n          if (chaseList(sln.referenced, toAdd)) {\n            vals = vals.concat(toAdd);\n          } else {\n            var newElt = cb(sln);\n            if (\"referenced\" in sln) {\n              var t = _ShExUtil.walkVal(sln.referenced, cb);\n              if (t)\n                newElt.nested = t;\n            }\n            vals.push(newElt);\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = cb(member);\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.walkVal(member.referenced, cb);\n                if (t)\n                  newElt.nested = t;\n              }\n              vals.push(newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced);\n            }\n          }\n        });\n        return vals.length ? ret : null;\n      } else {\n        return null;\n      }\n    } else if (val.type === \"Recursion\") {\n      return null;\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  /**\n   * Convert val results to a property tree.\n   * @exports\n   * @returns {@code {p1:[{p2: v2},{p3: v3}]}}\n   */\n  valToValues: function (val) {\n    return this.walkVal (val, function (sln) {\n      return { ldterm: sln.object };\n    });\n  },\n\n  valToExtension: function (val, lookfor) {\n    var map = this.walkVal (val, function (sln) {\n      return { extensions: sln.extensions };\n    });\n    function extensions (obj) {\n      var list = [];\n      var crushed = {};\n      function crush (elt) {\n        if (crushed === null)\n          return elt;\n        if (elt.constructor === Array) {\n          crushed = null;\n          return elt;\n        }\n        for (k in elt) {\n          if (k in crushed) {\n            crushed = null\n            return elt;\n          }\n          crushed[k] = elt[k];\n        }\n        return elt;\n      }\n      for (var k in obj) {\n        if (k === \"extensions\") {\n          if (obj[k])\n            list.push(crush(obj[k][lookfor]));\n        } else if (k === \"nested\") {\n          var nested = extensions(obj[k]);\n          if (nested.constructor === Array)\n            nested.forEach(crush);\n          else\n            crush(nested);\n          list = list.concat(nested);\n        } else {\n          list.push(crush(extensions(obj[k])));\n        }\n      }\n      return list.length === 1 ? list[0] :\n        crushed ? crushed :\n        list;\n    }\n    return extensions(map);\n  },\n\n  valuesToSchema: function (values) {\n    // console.log(JSON.stringify(values, null, \"  \"));\n    var v = values;\n    var t = values[RDF.type][0].ldterm;\n    if (t === SX.Schema) {\n      /* Schema { \"@context\":\"http://www.w3.org/ns/shex.jsonld\"\n       *           startActs:[SemAct+]? start:(shapeExpr|labeledShapeExpr)?\n       *           shapes:[labeledShapeExpr+]? }\n       */\n      var ret = {\n        \"@context\": \"http://www.w3.org/ns/shex.jsonld\",\n        type: \"Schema\"\n      }\n      if (SX.startActs in v)\n        ret.startActs = v[SX.startActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      if (SX.imports in v)\n        ret.imports = v[SX.imports].map(e => {\n          return e.ldterm;\n        });\n      if (values[SX.start])\n        ret.start = extend({id: values[SX.start][0].ldterm}, shapeExpr(values[SX.start][0].nested));\n      var shapes = values[SX.shapes];\n      if (shapes) {\n        ret.shapes = shapes.map(v => {\n          return extend({id: v.ldterm}, shapeExpr(v.nested));\n        });\n      }\n      // console.log(ret);\n      return ret;\n    } else {\n      throw Error(\"unknown schema type in \" + JSON.stringify(values));\n    }\n    function findType (v, elts, f) {\n      var t = v[RDF.type][0].ldterm.substr(SX._namespace.length);\n      var elt = elts[t];\n      if (!elt)\n        return Missed;\n      if (elt.nary) {\n        var ret = {\n          type: t,\n        };\n        ret[elt.prop] = v[SX[elt.prop]].map(e => {\n          return valueOf(e);\n        });\n        return ret;\n      } else {\n        var ret = {\n          type: t\n        };\n        if (elt.prop) {\n          ret[elt.prop] = valueOf(v[SX[elt.prop]][0]);\n        }\n        return ret;\n      }\n\n      function valueOf (x) {\n        return elt.expr && \"nested\" in x ? extend({ id: x.ldterm, }, f(x.nested)) : x.ldterm;\n      }\n    }\n    function shapeExpr (v) {\n      // shapeExpr = ShapeOr | ShapeAnd | ShapeNot | NodeConstraint | Shape | ShapeRef | ShapeExternal;\n      var elts = { \"ShapeAnd\"     : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeOr\"      : { nary: true , expr: true , prop: \"shapeExprs\" },\n                   \"ShapeNot\"     : { nary: false, expr: true , prop: \"shapeExpr\"  },\n                   \"ShapeRef\"     : { nary: false, expr: false, prop: \"reference\"  },\n                   \"ShapeExternal\": { nary: false, expr: false, prop: null         } };\n      var ret = findType(v, elts, shapeExpr);\n      if (ret !== Missed)\n        return ret;\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.Shape) {\n        var ret = { type: \"Shape\" };\n        [\"closed\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.extra in v)\n          ret.extra = v[SX.extra].map(e => { return e.ldterm; });\n        if (SX.expression in v) {\n          ret.expression =\n            \"nested\" in v[SX.expression][0] ?\n            extend({id: v[SX.expression][0].ldterm}, tripleExpr(v[SX.expression][0].nested)) :\n            v[SX.expression][0].ldterm;\n        }\n        if (SX.annotation in v)\n          ret.annotations = v[SX.annotation].map(e => {\n            return {\n              type: \"Annotation\",\n              predicate: e.nested[SX.predicate][0].ldterm,\n              object: e.nested[SX.object][0].ldterm\n            };\n          });\n        if (SX.semActs in v)\n          ret.semActs = v[SX.semActs].map(e => {\n            var ret = {\n              type: \"SemAct\",\n              name: e.nested[SX.name][0].ldterm\n            };\n            if (SX.code in e.nested)\n              ret.code = e.nested[SX.code][0].ldterm.value;\n            return ret;\n          });\n        return ret;\n      } else if (t === SX.NodeConstraint) {\n        var ret = { type: \"NodeConstraint\" };\n        if (SX.values in v)\n          ret.values = v[SX.values].map(v1 => { return objectValue(v1); });\n        if (SX.nodeKind in v)\n          ret.nodeKind = v[SX.nodeKind][0].ldterm.substr(SX._namespace.length);\n        [\"length\", \"minlength\", \"maxlength\", \"mininclusive\", \"maxinclusive\", \"minexclusive\", \"maxexclusive\", \"totaldigits\", \"fractiondigits\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = parseFloat(v[SX[a]][0].ldterm.value);\n        });\n        if (SX.pattern in v)\n          ret.pattern = v[SX.pattern][0].ldterm.value;\n        if (SX.flags in v)\n          ret.flags = v[SX.flags][0].ldterm.value;\n        if (SX.datatype in v)\n          ret.datatype = v[SX.datatype][0].ldterm;\n        return ret;\n      } else {\n        throw Error(\"unknown shapeExpr type in \" + JSON.stringify(v));\n      }\n\n    }\n\n    function objectValue (v, expectString) {\n      if (\"nested\" in v) {\n        var t = v.nested[RDF.type][0].ldterm;\n        if ([SX.IriStem, SX.LiteralStem, SX.LanguageStem].indexOf(t) !== -1) {\n          var ldterm = v.nested[SX.stem][0].ldterm.value;\n          return {\n            type: t.substr(SX._namespace.length),\n            stem: ldterm\n          };\n        } else if ([SX.Language].indexOf(t) !== -1) {\n          return {\n            type: \"Language\",\n            languageTag: v.nested[SX.languageTag][0].ldterm.value\n          };\n        } else if ([SX.IriStemRange, SX.LiteralStemRange, SX.LanguageStemRange].indexOf(t) !== -1) {\n          var st = v.nested[SX.stem][0];\n          var stem = st;\n          if (typeof st === \"object\") {\n            if (typeof st.ldterm === \"object\") {\n              stem = st.ldterm;\n            } else if (st.ldterm.startsWith(\"_:\")) {\n              stem = { type: \"Wildcard\" };\n            }\n          }\n          var ret = {\n            type: t.substr(SX._namespace.length),\n            stem: stem.type !== \"Wildcard\" ? stem.value : stem\n          };\n          if (SX.exclusion in v.nested) {\n            // IriStemRange:\n            // * [{\"ldterm\":\"http://a.example/v1\"},{\"ldterm\":\"http://a.example/v3\"}] <-- no value\n            // * [{\"ldterm\":\"_:b836\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v1\"}}]}},\n            //    {\"ldterm\":\"_:b838\",\"nested\":{a:[{\"ldterm\":sx:IriStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"http://a.example/v3\"}}]}}]\n\n            // LiteralStemRange:\n            // * [{\"ldterm\":{\"value\":\"v1\"}},{\"ldterm\":{\"value\":\"v3\"}}]\n            // * [{\"ldterm\":\"_:b866\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v1\"}}]}},\n            //    {\"ldterm\":\"_:b868\",\"nested\":{a:[{\"ldterm\":sx:LiteralStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"v3\"}}]}}]\n\n            // LanguageStemRange:\n            // * [{\"ldterm\":{\"value\":\"fr-be\"}},{\"ldterm\":{\"value\":\"fr-ch\"}}]\n            // * [{\"ldterm\":\"_:b851\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-be\"}}]}},\n            //    {\"ldterm\":\"_:b853\",\"nested\":{a:[{\"ldterm\":sx:LanguageStem}],\n            //                                 sx:stem:[{\"ldterm\":{\"value\":\"fr-ch\"}}]}}]\n            ret.exclusions = v.nested[SX.exclusion].map(v1 => {\n              return objectValue(v1, t !== SX.IriStemRange);\n            });\n          }\n          return ret;\n        } else {\n          throw Error(\"unknown objectValue type in \" + JSON.stringify(v));\n        }\n      } else {\n        return expectString ? v.ldterm.value : v.ldterm;\n      }\n    }\n\n    function tripleExpr (v) {\n      // tripleExpr = EachOf | OneOf | TripleConstraint | Inclusion ;\n      var elts = { \"EachOf\"   : { nary: true , expr: true , prop: \"expressions\" },\n                   \"OneOf\"    : { nary: true , expr: true , prop: \"expressions\" },\n                   \"Inclusion\": { nary: false, expr: false, prop: \"include\"     } };\n      var ret = findType(v, elts, tripleExpr);\n      if (ret !== Missed) {\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      }\n\n      var t = v[RDF.type][0].ldterm;\n      if (t === SX.TripleConstraint) {\n        var ret = {\n          type: \"TripleConstraint\",\n          predicate: v[SX.predicate][0].ldterm\n        };\n        [\"inverse\"].forEach(a => {\n          if (SX[a] in v)\n            ret[a] = !!v[SX[a]][0].ldterm.value;\n        });\n        if (SX.valueExpr in v)\n          ret.valueExpr = extend({id: v[SX.valueExpr][0].ldterm}, \"nested\" in v[SX.valueExpr][0] ? shapeExpr(v[SX.valueExpr][0].nested) : {});\n        minMaxAnnotSemActs(v, ret);\n        return ret;\n      } else {\n        throw Error(\"unknown tripleExpr type in \" + JSON.stringify(v));\n      }\n    }\n    function minMaxAnnotSemActs (v, ret) {\n      if (SX.min in v)\n        ret.min = parseInt(v[SX.min][0].ldterm.value);\n      if (SX.max in v) {\n        ret.max = parseInt(v[SX.max][0].ldterm.value);\n        if (isNaN(ret.max))\n          ret.max = UNBOUNDED;\n      }\n      if (SX.annotation in v)\n        ret.annotations = v[SX.annotation].map(e => {\n          return {\n            type: \"Annotation\",\n            predicate: e.nested[SX.predicate][0].ldterm,\n            object: e.nested[SX.object][0].ldterm\n          };\n        });\n      if (SX.semActs in v)\n        ret.semActs = v[SX.semActs].map(e => {\n          var ret = {\n            type: \"SemAct\",\n            name: e.nested[SX.name][0].ldterm\n          };\n          if (SX.code in e.nested)\n            ret.code = e.nested[SX.code][0].ldterm.value;\n          return ret;\n        });\n      return ret;\n    }\n  },\n\n  valToSimple: function (val) {\n    var _ShExUtil = this;\n    function _join (list) {\n      return list.reduce((ret, elt) => {\n        Object.keys(elt).forEach(k => {\n          if (k in ret) {\n            ret[k] = Array.from(new Set(ret[k].concat(elt[k])));\n          } else {\n            ret[k] = elt[k];\n          }\n        });\n        return ret;\n      }, {});\n    }\n    if (val.type === \"TripleConstraintSolutions\") {\n      if (\"solutions\" in val) {\n        return val.solutions.reduce((ret, sln) => {\n          if (!(\"referenced\" in sln))\n            return {};\n          var toAdd = {};\n          if (chaseList(sln.referenced, toAdd)) {\n            return _join(ret, toAdd);\n          } else {\n            return _join(ret, _ShExUtil.valToSimple(sln.referenced));\n          }\n          function chaseList (li) {\n            if (!li) return false;\n            if (li.node === RDF.nil) return true;\n            if (\"solution\" in li && \"solutions\" in li.solution &&\n                li.solution.solutions.length === 1 &&\n                \"expressions\" in li.solution.solutions[0] &&\n                li.solution.solutions[0].expressions.length === 2 &&\n                \"predicate\" in li.solution.solutions[0].expressions[0] &&\n                li.solution.solutions[0].expressions[0].predicate === RDF.first &&\n                li.solution.solutions[0].expressions[1].predicate === RDF.rest) {\n              var expressions = li.solution.solutions[0].expressions;\n              var ent = expressions[0];\n              var rest = expressions[1].solutions[0];\n              var member = ent.solutions[0];\n              var newElt = { ldterm: member.object };\n              if (\"referenced\" in member) {\n                var t = _ShExUtil.valToSimple(member.referenced);\n                if (t)\n                  newElt.nested = t;\n              }\n              toAdd = _join(toAdd, newElt);\n              return rest.object === RDF.nil ?\n                true :\n                chaseList(rest.referenced);\n            }\n          }\n        }, []);\n      } else {\n        return [];\n      }\n    } else if ([\"TripleConstraintSolutions\"].indexOf(val.type) !== -1) {\n      return {  };\n    } else if (val.type === \"NodeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return thisNode;\n    } else if (val.type === \"ShapeTest\") {\n      var thisNode = {  };\n      thisNode[n3ify(val.node)] = [val.shape];\n      return \"solution\" in val ? _join([thisNode].concat(_ShExUtil.valToSimple(val.solution))) : thisNode;\n    } else if (val.type === \"Recursion\") {\n      return {  };\n    } else if (\"solutions\" in val) {\n      // [\"SolutionList\", \"EachOfSolutions\", \"OneOfSolutions\", \"ShapeAndResults\", \"ShapeOrResults\"].indexOf(val.type) !== -1\n      return _join(val.solutions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else if (\"expressions\" in val) {\n      return _join(val.expressions.map(sln => {\n        return _ShExUtil.valToSimple(sln);\n      }));\n    } else {\n      // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    return val;\n  },\n\n  simpleToShapeMap: function (x) {\n    return Object.keys(x).reduce((ret, k) => {\n      x[k].forEach(s => {\n        ret.push({node: k, shape: s });\n      });\n      return ret;\n    }, []);\n  },\n\n  absolutizeShapeMap: function (parsed, base) {\n    return parsed.map(elt => {\n      return Object.assign(elt, {\n        node: RdfTerm.resolveRelativeIRI(base, elt.node),\n        shape: RdfTerm.resolveRelativeIRI(base, elt.shape)\n      });\n    });\n  },\n\n  errsToSimple: function (val, node, shape) {\n    var _ShExUtil = this;\n    if (val.type === \"FailureList\") {\n      return val.errors.reduce((ret, e) => {\n        return ret.concat(_ShExUtil.errsToSimple(e));\n      }, []);\n    } else if (val.type === \"Failure\") {\n      return [\"validating \" + val.node + \" as \" + val.shape + \":\"].concat(errorList(val.errors).reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length > 0 ? ret.concat([\"  OR\"]).concat(nested) : nested.map(s => \"  \" + s);\n      }, []));\n    } else if (val.type === \"TypeMismatch\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"validating \" + n3ify(val.triple.object) + \":\"].concat(nested);\n    } else if (val.type === \"ShapeAndFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeOrFailure\") {\n      return val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat(\" OR \" + (typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)));\n          }, []) :\n          \" OR \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n    } else if (val.type === \"ShapeNotFailure\") {\n      return [\"Node \" + val.errors.node + \" expected to NOT pass \" + val.errors.shape];\n    } else if (val.type === \"ExcessTripleViolation\") {\n      return [\"validating \" + n3ify(val.triple.object) + \": exceeds cardinality\"];\n    } else if (val.type === \"ClosedShapeViolation\") {\n      return [\"ClosedShapeError: unexpected: {\"].concat(\n        val.unexpectedTriples.map(t => {\n          return \"  \" + t.subject + \" \" + t.predicate + \" \" + n3ify(t.object) + \" .\"\n        })\n      ).concat([\"}\"]);\n    } else if (val.type === \"NodeConstraintViolation\") {\n      var w = require(\"../lib/ShExWriter\")();\n      w._write(w._writeNodeConstraint(val.shapeExpr).join(\"\"));\n      var txt;\n      w.end((err, res) => {\n        txt = res;\n      });\n      return [\"NodeConstraintError: expected to match \" + txt];\n    } else if (val.type === \"MissingProperty\") {\n      return [\"Missing property: \" + val.property];\n    } else if (val.type === \"NegatedProperty\") {\n      return [\"Unexpected property: \" + val.property];\n    } else if (val.constructor === Array) {debugger;\n      return val.reduce((ret, e) => {\n        var nested = _ShExUtil.errsToSimple(e).map(s => \"  \" + s);\n        return ret.length ? ret.concat([\"AND\"]).concat(nested) : nested;\n      }, []);\n    } else if (val.type === \"SemActFailure\") {\n      var nested = val.errors.constructor === Array ?\n          val.errors.reduce((ret, e) => {\n            return ret.concat((typeof e === \"string\" ? [e] : _ShExUtil.errsToSimple(e)).map(s => \"  \" + s));\n          }, []) :\n          \"  \" + (typeof e === \"string\" ? [val.errors] : _ShExUtil.errsToSimple(val.errors));\n      return [\"rejected by semantic action:\"].concat(nested);\n    } else if (val.type === \"SemActViolation\") {\n      return [val.message];\n    } else if (val.type === \"BooleanSemActFailure\") {\n      return [\"Failed evaluating \" + val.code + \" on context \" + JSON.stringify(val.ctx)];\n    } else {\n      debugger; // console.log(val);\n      throw Error(\"unknown shapeExpression type in \" + JSON.stringify(val));\n    }\n    function errorList (errors) {\n      return errors.reduce(function (acc, e) {\n        var attrs = Object.keys(e);\n        return acc.concat(\n          (attrs.length === 1 && attrs[0] === \"errors\")\n            ? errorList(e.errors)\n            : e);\n      }, []);\n    }\n  },\n\n  resolveRelativeIRI: RdfTerm.resolveRelativeIRI,\n\n  resolvePrefixedIRI: function (prefixedIri, prefixes) {\n    var colon = prefixedIri.indexOf(\":\");\n    if (colon === -1)\n      return null;\n    var prefix = prefixes[prefixedIri.substr(0, colon)];\n    return prefix === undefined ? null : prefix + prefixedIri.substr(colon+1);\n  },\n\n  parsePassedNode: function (passedValue, meta, deflt, known, reportUnknown) {\n    if (passedValue === undefined || passedValue.length === 0)\n      return known && known(meta.base) ? meta.base : deflt ? deflt() : this.NotSupplied;\n    if (passedValue[0] === \"_\" && passedValue[1] === \":\")\n      return passedValue;\n    if (passedValue[0] === \"\\\"\") {\n      var m = passedValue.match(/^\"((?:[^\"\\\\]|\\\\\")*)\"(?:@(.+)|\\^\\^(?:<(.*)>|([^:]*):(.*)))?$/);\n      if (!m)\n        throw Error(\"malformed literal: \" + passedValue);\n      var lex = m[1], lang = m[2], rel = m[3], pre = m[4], local = m[5];\n      // Turn the literal into an N3.js atom.\n      var quoted = \"\\\"\"+lex+\"\\\"\";\n      if (lang !== undefined)\n        return quoted + \"@\" + lang;\n      if (pre !== undefined) {\n        if (!(pre in meta.prefixes))\n          throw Error(\"error parsing node \"+passedValue+\" no prefix for \\\"\" + pre + \"\\\"\");\n        return quoted + \"^^\" + meta.prefixes[pre] + local;\n      }\n      if (rel !== undefined)\n        return quoted + \"^^\" + RdfTerm.resolveRelativeIRI(meta.base, rel);\n      return quoted;\n    }\n    if (!meta)\n      return known(passedValue) ? passedValue : this.UnknownIRI;\n    var relIRI = passedValue[0] === \"<\" && passedValue[passedValue.length-1] === \">\";\n    if (relIRI)\n      passedValue = passedValue.substr(1, passedValue.length-2);\n    var t = RdfTerm.resolveRelativeIRI(meta.base || \"\", passedValue); // fall back to base-less mode\n    if (known(t))\n      return t;\n    if (!relIRI) {\n      var t2 = this.resolvePrefixedIRI(passedValue, meta.prefixes);\n      if (t2 !== null && known(t2))\n        return t2;\n    }\n    return reportUnknown ? reportUnknown(t) : this.UnknownIRI;\n  },\n\n  executeQueryPromise: function (query, endpoint) {\n    var rows;\n\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    return fetch(queryURL, {\n      headers: {\n        'Accept': 'application/sparql-results+json'\n      }}).then(resp => resp.json()).then(t => {\n        var selects = t.head.vars;\n        return t.results.bindings.map(row => {\n          return selects.map(sel => {\n            var elt = row[sel];\n            switch (elt.type) {\n            case \"uri\": return elt.value;\n            case \"bnode\": return \"_:\" + elt.value;\n            case \"literal\":\n              var datatype = elt.datatype;\n              var lang = elt[\"xml:lang\"];\n              return \"\\\"\" + elt.value + \"\\\"\" + (\n                datatype ? \"^^\" + datatype :\n                  lang ? \"@\" + lang :\n                  \"\");\n            default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n            }\n            return row[sel];\n          })\n        });\n      })// .then(x => new Promise(resolve => setTimeout(() => resolve(x), 1000)));\n  },\n\n  executeQuery: function (query, endpoint) {\n    var rows, t, j;\n    var queryURL = endpoint + \"?query=\" + encodeURIComponent(query);\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", queryURL, false);\n    xhr.setRequestHeader('Accept', 'application/sparql-results+json');\n    xhr.send();\n    // var selectsBlock = query.match(/SELECT\\s*(.*?)\\s*{/)[1];\n    // var selects = selectsBlock.match(/\\?[^\\s?]+/g);\n    var t = JSON.parse(xhr.responseText);\n    var selects = t.head.vars;\n    return t.results.bindings.map(row => {\n      return selects.map(sel => {\n        var elt = row[sel];\n        switch (elt.type) {\n        case \"uri\": return elt.value;\n        case \"bnode\": return \"_:\" + elt.value;\n        case \"literal\":\n          var datatype = elt.datatype;\n          var lang = elt[\"xml:lang\"];\n          return \"\\\"\" + elt.value + \"\\\"\" + (\n            datatype ? \"^^\" + datatype :\n              lang ? \"@\" + lang :\n              \"\");\n        default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n        }\n        return row[sel];\n      })\n    });\n\n/* TO ADD? XML results format parsed with jquery:\n        $(data).find(\"sparql > results > result\").\n          each((_, row) => {\n            rows.push($(row).find(\"binding > *:nth-child(1)\").\n              map((idx, elt) => {\n                elt = $(elt);\n                var text = elt.text();\n                switch (elt.prop(\"tagName\")) {\n                case \"uri\": return text;\n                case \"bnode\": return \"_:\" + text;\n                case \"literal\":\n                  var datatype = elt.attr(\"datatype\");\n                  var lang = elt.attr(\"xml:lang\");\n                  return \"\\\"\" + text + \"\\\"\" + (\n                    datatype ? \"^^\" + datatype :\n                    lang ? \"@\" + lang :\n                      \"\");\n                default: throw \"unknown XML results type: \" + elt.prop(\"tagName\");\n                }\n              }).get());\n          });\n*/\n  },\n\n  makeN3DB: function (db, queryTracker) {\n\n    function getSubjects () { return db.getSubjects().map(RdfTerm.internalTerm); }\n    function getPredicates () { return db.getPredicates().map(RdfTerm.internalTerm); }\n    function getObjects () { return db.getObjects().map(RdfTerm.internalTerm); }\n    function getQuads () { return db.getQuads.apply(db, arguments).map(RdfTerm.internalTriple); }\n\n    function getNeighborhood (point, shapeLabel/*, shape */) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = db.getQuads(point, null, null, null).map(RdfTerm.internalTriple);\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = db.getQuads(null, null, point, null).map(RdfTerm.internalTriple);\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      // size: db.size,\n      getNeighborhood: getNeighborhood,\n      getSubjects: getSubjects,\n      getPredicates: getPredicates,\n      getObjects: getObjects,\n      getQuads: getQuads,\n      get size() { return db.size; },\n      // getQuads: function (s, p, o, graph, shapeLabel) {\n      //   // console.log(Error(s + p + o).stack)\n      //   if (queryTracker)\n      //     queryTracker.start(!!s, s ? s : o, shapeLabel);\n      //   var quads = db.getQuads(s, p, o, graph)\n      //   if (queryTracker)\n      //     queryTracker.end(quads, new Date() - startTime);\n      //   return quads;\n      // }\n    }\n  },\n  /** emulate N3Store().getQuads() with additional parm.\n   */\n  makeQueryDB: function (endpoint, queryTracker) {\n    var _ShExUtil = this;\n\n    function getQuads(s, p, o, g) {\n      return mapQueryToTriples(\"SELECT \" + [\n        (s?\"\":\"?s\"), (p?\"\":\"?p\"), (o?\"\":\"?o\"),\n        \"{\",\n        (s?s:\"?s\"), (p?p:\"?s\"), (o?o:\"?s\"),\n        \"}\"].join(\" \"), s, o)\n    }\n\n    function mapQueryToTriples (query, s, o) {\n      var rows = _ShExUtil.executeQuery(query, endpoint);\n      var triples = rows.map(row =>  {\n        return s ? {\n          subject: s,\n          predicate: row[0],\n          object: row[1]\n        } : {\n          subject: row[0],\n          predicate: row[1],\n          object: o\n        };\n      });\n      return triples;\n    }\n\n    function getTripleConstraints (tripleExpr) {\n      var visitor = _ShExUtil.Visitor();\n      var ret = {\n        out: [],\n        inc: []\n      };\n      visitor.visitTripleConstraint = function (expr) {\n        ret[expr.inverse ? \"inc\" : \"out\"].push(expr);\n        return expr;\n      };\n\n      if (tripleExpr)\n        visitor.visitExpression(tripleExpr);\n      return ret;\n    }\n\n    function getNeighborhood (point, shapeLabel, shape) {\n      // I'm guessing a local DB doesn't benefit from shape optimization.\n      var startTime;\n      var tcs = getTripleConstraints(shape.expression);\n      var pz = tcs.out.map(t => t.predicate);\n      pz = pz.filter((p, idx) => pz.lastIndexOf(p) === idx);\n      if (queryTracker) {\n        startTime = new Date();\n        queryTracker.start(false, point, shapeLabel);\n      }\n      var outgoing = (tcs.out.length > 0 || shape.closed)\n          ? mapQueryToTriples(\n            shape.closed\n              ? `SELECT ?p ?o { <${point}> ?p ?o }`\n              : \"SELECT ?p ?o {\\n\" +\n              pz.map(\n                p => `  {<${point}> <${p}> ?o BIND(<${p}> AS ?p)}`\n              ).join(\" UNION\\n\") +\n              \"\\n}\",\n            point, null\n          )\n          : [];\n      if (queryTracker) {\n        var time = new Date();\n        queryTracker.end(outgoing, time - startTime);\n        startTime = time;\n      }\n      if (queryTracker) {\n        queryTracker.start(true, point, shapeLabel);\n      }\n      var incoming = tcs.inc.length > 0\n          ? mapQueryToTriples(`SELECT ?s ?p { ?s ?p <${point}> }`, null, point)\n          : []\n      if (queryTracker) {\n        queryTracker.end(incoming, new Date() - startTime);\n      }\n      return  {\n        outgoing: outgoing,\n        incoming: incoming\n      };\n    }\n\n    return {\n      getNeighborhood: getNeighborhood,\n      getQuads: getQuads,\n      getSubjects: function () { return [\"!Query DB can't index subjects\"] },\n      getPredicates: function () { return [\"!Query DB can't index predicates\"] },\n      getObjects: function () { return [\"!Query DB can't index objects\"] },\n      get size() { return undefined; }\n    };\n  },\n\n  NotSupplied: \"-- not supplied --\", UnknownIRI: \"-- not found --\",\n\n  // Expect property p with value v in object o\n  _expect: function (o, p, v) {\n    if (!(p in o))\n      this._error(\"expected \"+JSON.stringify(o)+\" to have a .\"+p);\n    if (arguments.length > 2 && o[p] !== v)\n      this._error(\"expected \"+o[o]+\" to equal .\"+v);\n  },\n\n  _error: function (str) {\n    throw new Error(str);\n  },\n\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  unescapeText: function (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  },\n\n};\n\n\nfunction n3ify (ldterm) {\n  if (typeof ldterm !== \"object\")\n    return ldterm;\n  var ret = \"\\\"\" + ldterm.value + \"\\\"\";\n  if (\"language\" in ldterm)\n    return ret + \"@\" + ldterm.language;\n  if (\"type\" in ldterm)\n    return ret + \"^^\" + ldterm.type;\n  return ret;\n}\n\n// Add the ShExUtil functions to the given object or its prototype\nfunction AddShExUtil(parent, toPrototype) {\n  for (var name in ShExUtil)\n    if (!toPrototype)\n      parent[name] = ShExUtil[name];\n    else\n      parent.prototype[name] = ApplyToThis(ShExUtil[name]);\n\n  return parent;\n}\n\n// Returns a function that applies `f` to the `this` object\nfunction ApplyToThis(f) {\n  return function (a) { return f(this, a); };\n}\n\nreturn AddShExUtil(AddShExUtil);\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExUtil; // node environment\n"
    },
    {
      "id": 21,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
      "name": "../shex-core/lib/ShExWriter.js",
      "index": 13,
      "index2": 13,
      "size": 22312,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "issuerId": 13,
      "issuerName": "../shex-core/shex-core.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 215,
        "dependencies": 42
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "module": "../shex-core/shex-core.js",
          "moduleName": "../shex-core/shex-core.js",
          "type": "cjs require",
          "userRequest": "./lib/ShExWriter",
          "loc": "5:13-40"
        },
        {
          "moduleId": 20,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "module": "../shex-core/lib/ShExUtil.js",
          "moduleName": "../shex-core/lib/ShExUtil.js",
          "type": "cjs require",
          "userRequest": "../lib/ShExWriter",
          "loc": "1914:14-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "// **ShExWriter** writes ShEx documents.\n\nvar ShExWriter = (function () {\nvar util = require('util');\nvar UNBOUNDED = -1;\n\n// Matches a literal as represented in memory by the ShEx library\nvar ShExLiteralMatcher = /^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$/i;\n\n// rdf:type predicate (for 'a' abbreviation)\nvar RDF_PREFIX = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    RDF_TYPE   = RDF_PREFIX + 'type';\n\n// Characters in literals that require escaping\nvar ESCAPE_1 = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    ESCAPE_g = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    ESCAPE_replacements = { '\\\\': '\\\\\\\\', '\"': '\\\\\"', '/': '\\\\/', '\\t': '\\\\t',\n                            '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f' };\n\nvar nodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\nvar nonLitNodeKinds = {\n  'iri': \"IRI\",\n  'bnode': \"BNODE\",\n  'literal': \"LITERAL\",\n  'nonliteral': \"NONLITERAL\"\n};\n\n// ## Constructor\nfunction ShExWriter (outputStream, options) {\n  if (!(this instanceof ShExWriter))\n    return new ShExWriter(outputStream, options);\n\n  // Shift arguments if the first argument is not a stream\n  if (outputStream && typeof outputStream.write !== 'function')\n    options = outputStream, outputStream = null;\n  options = options || {};\n\n  // If no output stream given, send the output as string through the end callback\n  if (!outputStream) {\n    var output = '';\n    this._outputStream = {\n      write: function (chunk, encoding, done) { output += chunk; done && done(); },\n      end:   function (done) { done && done(null, output); },\n    };\n    this._endStream = true;\n  }\n  else {\n    this._outputStream = outputStream;\n    this._endStream = options.end === undefined ? true : !!options.end;\n  }\n\n  // Initialize writer, depending on the format\n  this._prefixIRIs = Object.create(null);\n  options.prefixes && this.addPrefixes(options.prefixes);\n\n  this._error = options.error || _throwError;\n  this.forceParens = !options.simplifyParentheses; // default to false\n  this._expect = options.lax ? noop : expect;\n}\n\nShExWriter.prototype = {\n  // ## Private methods\n\n  // ### `_write` writes the argument to the output stream\n  _write: function (string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  },\n\n  // ### `_writeSchema` writes the shape to the output stream\n  _writeSchema: function (schema, done) {\n    var _ShExWriter = this;\n    this._expect(schema, \"type\", \"Schema\");\n    _ShExWriter.addPrefixes(schema.prefixes);\n    if (schema.base)\n      _ShExWriter._write(\"BASE \" + this._encodeIriOrBlankNode(schema.base) + \"\\n\");\n\n    if (schema.imports)\n      schema.imports.forEach(function (imp) {\n        _ShExWriter._write(\"IMPORT \" + _ShExWriter._encodeIriOrBlankNode(imp) + \"\\n\");\n      });\n    if (schema.startActs)\n      schema.startActs.forEach(function (act) {\n        _ShExWriter._expect(act, \"type\", \"SemAct\");\n        _ShExWriter._write(\" %\"+\n                           _ShExWriter._encodePredicate(act.name)+\n                           (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n      });\n    if (schema.start)\n      _ShExWriter._write(\"start = \" + _ShExWriter._writeShapeExpr(schema.start, done, true, 0).join('') + \"\\n\")\n    if (\"shapes\" in schema)\n      schema.shapes.forEach(function (shapeExpr) {\n        _ShExWriter._write(\n          _ShExWriter._encodeShapeName(shapeExpr.id, false) +\n            \" \" +\n            _ShExWriter._writeShapeExpr(shapeExpr, done, true, 0).join(\"\")+\"\\n\",\n          done\n        );\n      })\n  },\n\n  _writeShapeExpr: function (shapeExpr, done, forceBraces, parentPrec) {\n    var _ShExWriter = this;\n    var pieces = [];\n    if (typeof shapeExpr === \"string\") // ShapeRef\n      pieces.push(\"@\", _ShExWriter._encodeShapeName(shapeExpr));\n    // !!! []s for precedence!\n    else if (shapeExpr.type === \"ShapeExternal\")\n      pieces.push(\"EXTERNAL\");\n    else if (shapeExpr.type === \"ShapeAnd\") {\n      if (parentPrec >= 3)\n        pieces.push(\"(\");\n      var lastAndElided = false;\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0) { // && !!! grammar rules too weird here\n          /*\n            shapeAtom:\n                  nonLitNodeConstraint shapeOrRef?\n                | shapeDecl nonLitNodeConstraint?\n\n            nonLitInlineNodeConstraint:\n                  nonLiteralKind stringFacet*\n          */\n          function nonLitNodeConstraint (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type !== \"NodeConstraint\"\n              || (\"nodeKind\" in c && c.nodeKind === \"literal\")\n              || \"datatype\" in c\n              || \"values\" in c\n              ? false\n              : true;\n          }\n\n          function shapeOrRef (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\" || c.type === \"ShapeRef\";\n          }\n\n          function shapeDecl (idx) {\n            let c = shapeExpr.shapeExprs[idx];\n            return c.type === \"Shape\";\n          }\n\n          let elideAnd = !lastAndElided\n              && (nonLitNodeConstraint(ord-1) && shapeOrRef(ord)\n                  || shapeDecl(ord-1) && nonLitNodeConstraint(ord))\n          if (!elideAnd) {\n            pieces.push(\" AND \");\n          }\n          lastAndElided = elideAnd;\n        }\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, false, 3));\n      });\n      if (parentPrec >= 3)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      if (parentPrec >= 2)\n        pieces.push(\"(\");\n      shapeExpr.shapeExprs.forEach(function (expr, ord) {\n        if (ord > 0)\n          pieces.push(\" OR \");\n        pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr, done, forceBraces, 2));\n      });\n      if (parentPrec >= 2)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      if (parentPrec >= 4)\n        pieces.push(\"(\");\n      pieces.push(\"NOT \");\n      pieces = pieces.concat(_ShExWriter._writeShapeExpr(shapeExpr.shapeExpr, done, forceBraces, 4));\n      if (parentPrec >= 4)\n        pieces.push(\")\");\n    } else if (shapeExpr.type === \"Shape\") {\n      pieces = pieces.concat(_ShExWriter._writeShape(shapeExpr, done, forceBraces));\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      pieces = pieces.concat(_ShExWriter._writeNodeConstraint(shapeExpr, done, forceBraces));\n    } else\n      throw Error(\"expected Shape{,And,Or,Ref} or NodeConstraint in \" + util.inspect(shapeExpr));\n    return pieces;\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeShape: function (shape, done, forceBraces) {\n    var _ShExWriter = this;\n    try {\n      var pieces = []; // guessing push/join is faster than concat\n      this._expect(shape, \"type\", \"Shape\");\n\n      if (shape.closed) pieces.push(\"CLOSED \");\n\n      // if (shape.inherit && shape.inherit.length > 0) { futureWork\n      //   pieces.push(\"&\");\n      //   shape.inherit.forEach(function (i, ord) {\n      //     if (ord)\n      //       pieces.push(\" \")\n      //     pieces.push(_ShExWriter._encodeShapeName(i, ord > 0));\n      //   });\n      //   pieces.push(\" \");\n      // }\n\n      if (shape.extra && shape.extra.length > 0) {\n        pieces.push(\"EXTRA \");\n        shape.extra.forEach(function (i, ord) {\n          pieces.push(_ShExWriter._encodeShapeName(i, false)+\" \");\n        });\n        pieces.push(\" \");\n      }\n      var empties = [\"values\", \"length\", \"minlength\", \"maxlength\", \"pattern\", \"flags\"];\n      pieces.push(\"{\\n\");\n\n      function _writeShapeActions (semActs) {\n        if (!semActs)\n          return;\n\n        semActs.forEach(function (act) {\n          _ShExWriter._expect(act, \"type\", \"SemAct\");\n          pieces.push(\" %\",\n                      _ShExWriter._encodePredicate(act.name),\n                      (\"code\" in act ? \"{\"+escapeCode(act.code)+\"%\"+\"}\" : \"%\"));\n        });\n      }\n\n      function _writeCardinality (min, max) {\n        if      (min === 0 && max === 1)         pieces.push(\"?\");\n        else if (min === 0 && max === UNBOUNDED) pieces.push(\"*\");\n        else if (min === undefined && max === undefined)                         ;\n        else if (min === 1 && max === UNBOUNDED) pieces.push(\"+\");\n        else\n          pieces.push(\"{\", min, \",\", (max === UNBOUNDED ? \"*\" : max), \"}\"); // by coincidence, both use the same character.\n      }\n\n      function _writeExpression (expr, indent, parentPrecedence) {\n        function _writeExpressionActions (semActs) {\n          if (semActs) {\n\n            semActs.forEach(function (act) {\n              _ShExWriter._expect(act, \"type\", \"SemAct\");\n              pieces.push(\"\\n\"+indent+\"   %\");\n              pieces.push(_ShExWriter._encodeValue(act.name));\n              if (\"code\" in act)\n                pieces.push(\"{\"+escapeCode(act.code)+\"%\"+\"}\");\n              else\n                pieces.push(\"%\");\n            });\n          }\n        }\n\n        function _exprGroup (exprs, separator, precedence, forceParens) {\n          var needsParens = precedence < parentPrecedence || forceParens;\n          if (needsParens) {\n            pieces.push(\"(\");\n          }\n          exprs.forEach(function (nested, ord) {\n            _writeExpression(nested, indent+\"  \", precedence)\n            if (ord < exprs.length - 1)\n              pieces.push(separator);\n          });\n          if (needsParens) {\n            pieces.push(\")\");\n          }\n        }\n\n        if (typeof expr === \"string\") {\n          pieces.push(\"&\");\n          pieces.push(_ShExWriter._encodeShapeName(expr, false));\n        } else {\n\n        if (\"id\" in expr) {\n          pieces.push(\"$\");\n          pieces.push(_ShExWriter._encodeIriOrBlankNode(expr.id, true));\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          if (expr.inverse)\n            pieces.push(\"^\");\n          if (expr.negated)\n            pieces.push(\"!\");\n          pieces.push(indent,\n                      _ShExWriter._encodePredicate(expr.predicate),\n                      \" \");\n\n          if (\"valueExpr\" in expr)\n            pieces = pieces.concat(_ShExWriter._writeShapeExpr(expr.valueExpr, done, true, 0));\n          else\n            pieces.push(\". \");\n\n          _writeCardinality(expr.min, expr.max);\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \"\\n\"+indent+\"| \", 1, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          var needsParens = \"id\" in expr || \"min\" in expr || \"max\" in expr || \"annotations\" in expr || \"semActs\" in expr;\n          _exprGroup(expr.expressions, \";\\n\"+indent, 2, needsParens || _ShExWriter.forceParens);\n          _writeCardinality(expr.min, expr.max); // t: open1dotclosecardOpt\n          _ShExWriter._annotations(pieces, expr.annotations, indent);\n          _writeExpressionActions(expr.semActs);\n        }\n\n        else throw Error(\"unexpected expr type: \" + expr.type);\n        }\n      }\n\n      if (shape.expression) // t: 0, 0Inherit1\n        _writeExpression(shape.expression, \"  \", 0);\n      pieces.push(\"\\n}\");\n      _writeShapeActions(shape.semActs);\n      _ShExWriter._annotations(pieces, shape.annotations, \"  \");\n\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n  },\n\n  // ### `_writeShape` writes the shape to the output stream\n  _writeNodeConstraint: function (v, done) {\n    var _ShExWriter = this;\n    try {\n      _ShExWriter._expect(v, \"type\", \"NodeConstraint\");\n\n      var pieces = [];\n      if (v.nodeKind in nodeKinds)       pieces.push(nodeKinds[v.nodeKind], \" \");\n      else if (v.nodeKind !== undefined) _ShExWriter._error(\"unexpected nodeKind: \" + v.nodeKind); // !!!!\n\n      this._fillNodeConstraint(pieces, v, done);\n      this._annotations(pieces, v.annotations, \"  \");\n      return pieces;\n    }\n    catch (error) { done && done(error); }\n\n  },\n\n  _annotations: function (pieces, annotations, indent) {\n    var _ShExWriter = this;\n    if (annotations) {\n      annotations.forEach(function (a) {\n        _ShExWriter._expect(a, \"type\", \"Annotation\");\n        pieces.push(\"//\\n\"+indent+\"   \");\n        pieces.push(_ShExWriter._encodeValue(a.predicate));\n        pieces.push(\" \");\n        pieces.push(_ShExWriter._encodeValue(a.object));\n      });\n    }\n  },\n\n  _fillNodeConstraint: function (pieces, v, done) {\n    var _ShExWriter = this;\n    if (v.datatype  && v.values  ) _ShExWriter._error(\"found both datatype and values in \"   +expr);\n    if (v.datatype) {\n      pieces.push(_ShExWriter._encodeShapeName(v.datatype));\n    }\n\n    if (v.values) {\n      pieces.push(\"[\");\n\n      v.values.forEach(function (t, ord) {\n        if (ord > 0)\n          pieces.push(\" \");\n\n        if (!isTerm(t)) {\n//          expect(t, \"type\", \"IriStemRange\");\n              if (!(\"type\" in t))\n                runtimeError(\"expected \"+JSON.stringify(t)+\" to have a 'type' attribute.\");\n          var stemRangeTypes = [\"Language\", \"IriStem\", \"LiteralStem\", \"LanguageStem\", \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"];\n              if (stemRangeTypes.indexOf(t.type) === -1)\n                runtimeError(\"expected type attribute '\"+t.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n          if (t.type === \"Language\") {\n            pieces.push(\"@\" + t.languageTag);\n          } else if (!isTerm(t.stem)) {\n            expect(t.stem, \"type\", \"Wildcard\");\n            pieces.push(\".\");\n          } else {\n            pieces.push(langOrLiteral(t, t.stem) + \"~\");\n          }\n          if (t.exclusions) {\n            t.exclusions.forEach(function (c) {\n              pieces.push(\" - \");\n              if (!isTerm(c)) {\n//                expect(c, \"type\", \"IriStem\");\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                pieces.push(langOrLiteral(t, c.stem) + \"~\");\n              } else {\n                pieces.push(langOrLiteral(t, c));\n              }\n            });\n          }\n          function langOrLiteral (t, c) {\n            return [\"LanguageStem\", \"LanguageStemRange\"].indexOf(t.type) !== -1 ? \"@\" + c :\n              [\"LiteralStem\", \"LiteralStemRange\"].indexOf(t.type) !== -1 ? '\"' + c.replace(ESCAPE_g, c) + '\"' :\n              _ShExWriter._encodeValue(c)\n          }\n        } else {\n          pieces.push(_ShExWriter._encodeValue(t));\n        }\n      });\n\n      pieces.push(\"]\");\n    }\n\n    if ('pattern' in v) {\n      var pattern = v.pattern.\n          replace(/\\//g, \"\\\\/\");\n      // if (ESCAPE_1.test(pattern))\n      //   pattern = pattern.replace(ESCAPE_g, characterReplacer);\n      var flags = 'flags' in v ? v.flags : \"\";\n      pieces.push(\"/\" + pattern + \"/\" + flags + \" \");\n    }\n    ['length', 'minlength', 'maxlength',\n     'mininclusive', 'minexclusive', 'maxinclusive', 'maxexclusive',\n     'totaldigits', 'fractiondigits'\n    ].forEach(function (a) {\n      if (v[a])\n        pieces.push(\" \", a, \" \", v[a]);\n    });\n    return pieces;\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n  },\n\n  // ### `_encodeIriOrBlankNode` represents an IRI or blank node\n  _encodeIriOrBlankNode: function (iri, trailingSpace) {\n    trailingSpace = trailingSpace ? ' ' : '';\n    // A blank node is represented as-is\n    if (iri[0] === '_' && iri[1] === ':') return iri;\n    // Escape special characters\n    if (ESCAPE_1.test(iri))\n      iri = iri.replace(ESCAPE_g, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]) + trailingSpace;\n  },\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral: function (value, type, language) {\n    // Escape special characters\n    if (ESCAPE_1.test(value))\n      value = value.replace(ESCAPE_g, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (language)\n      return '\"' + value + '\"@' + language;\n    else if (type)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlankNode(type);\n    else\n      return '\"' + value + '\"';\n  },\n\n  // ### `_encodeShapeName` represents a subject\n  _encodeShapeName: function (subject, trailingSpace) {\n    if (subject[0] === '\"')\n      throw new Error('A literal as subject is not allowed: ' + subject);\n    return this._encodeIriOrBlankNode(subject, trailingSpace);\n  },\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate: function (predicate) {\n    if (predicate[0] === '\"')\n      throw new Error('A literal as predicate is not allowed: ' + predicate);\n    return predicate === RDF_TYPE ? 'a' : this._encodeIriOrBlankNode(predicate);\n  },\n\n  // ### `_encodeValue` represents an object\n  _encodeValue: function (object) {\n    // Represent an IRI or blank node\n    if (typeof object !== \"object\")\n      return this._encodeIriOrBlankNode(object);\n    // Represent a literal\n    return this._encodeLiteral(object.value, object.type, object.language);\n  },\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite: function () {\n    throw new Error('Cannot write because the writer has been closed.');\n  },\n\n  writeSchema: function (shape, done) {\n    this._writeSchema(shape, done);\n    this.end(done);\n  },\n\n  // ### `addShape` adds the shape to the output stream\n  addShape: function (shape, name, done) {\n    this._write(\n      _ShExWriter._encodeShapeName(name, false) +\n        \" \" +\n        _ShExWriter._writeShapeExpr(shape, done, true, 0).join(\"\"),\n      done\n    );\n  },\n\n  // ### `addShapes` adds the shapes to the output stream\n  addShapes: function (shapes) {\n    for (var i = 0; i < shapes.length; i++)\n      this.addShape(shapes[i]);\n  },\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix: function (prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  },\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes: function (prefixes, done) {\n    // Add all useful prefixes\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      // Verify whether the prefix can be used and does not exist yet\n      var iri = prefixes[prefix];\n      if (// @@ /[#\\/]$/.test(iri) && !! what was that?\n          prefixIRIs[iri] !== (prefix += ':')) {\n        hasPrefixes = true;\n        prefixIRIs[iri] = prefix;\n        // Write prefix\n        this._write('PREFIX ' + prefix + ' <' + iri + '>\\n');\n      }\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  },\n\n  // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n  _prefixRegex: /$0^/,\n\n  // ### `end` signals the end of the output stream\n  end: function (done) {\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  },\n};\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = ESCAPE_replacements[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeCode (code) {\n  return code.replace(/\\\\/g, \"\\\\\\\\\").replace(/%/g, \"\\\\%\")\n}\n\n/** _throwError: overridable function to throw Errors().\n *\n * @param func (optional): function at which to truncate stack trace\n * @param str: error message\n */\nfunction _throwError (func, str) {\n  if (typeof func !== \"function\") {\n    str = func;\n    func = _throwError;\n  }\n  var e = new Error(str);\n  Error.captureStackTrace(e, func);\n  throw e;\n}\n\n// Expect property p with value v in object o\nfunction expect (o, p, v) {\n  if (!(p in o))\n    this._error(expect, \"expected \"+o+\" to have a .\"+p);\n  if (arguments.length > 2 && o[p] !== v)\n    this._error(expect, \"expected \"+o[o]+\" to equal .\"+v);\n}\n\n// The empty function\nfunction noop () {}\n\nreturn ShExWriter;\n})();\n\n// Export the `ShExWriter` class as a whole.\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWriter; // node environment\n"
    },
    {
      "id": 22,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/threaded-val-nerr.js",
      "name": "../shex-core/lib/regex/threaded-val-nerr.js",
      "index": 18,
      "index2": 15,
      "size": 15290,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "issuerId": 13,
      "issuerName": "../shex-core/shex-core.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 215,
        "dependencies": 42
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "module": "../shex-core/shex-core.js",
          "moduleName": "../shex-core/shex-core.js",
          "type": "cjs require",
          "userRequest": "./lib/regex/threaded-val-nerr",
          "loc": "7:23-63"
        },
        {
          "moduleId": 45,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
          "module": "../shex-core/lib/ShExValidator.js",
          "moduleName": "../shex-core/lib/ShExValidator.js",
          "type": "cjs require",
          "userRequest": "../lib/regex/threaded-val-nerr",
          "loc": "245:48-89"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "var ThreadedValNErr = (function () {\nvar RdfTerm = require(\"../RdfTerm\");\nvar UNBOUNDED = -1;\n\nfunction vpEngine (schema, shape, index) {\n    var outerExpression = shape.expression;\n    return {\n      match:match\n    };\n\n    function match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, recurse, direct, semActHandler, checkValueExpr, trace) {\n\n      /*\n       * returns: list of passing or failing threads (no heterogeneous lists)\n       */\n      function validateExpr (expr, thread) {\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return validateExpr(included, thread);\n        }\n\n        var constraintNo = constraintList.indexOf(expr);\n        var min = \"min\" in expr ? expr.min : 1;\n        var max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n\n        function validateRept (type, val) {\n          var repeated = 0, errOut = false;\n          var newThreads = [thread];\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          for (; repeated < max && !errOut; ++repeated) {\n            var inner = [];\n            for (var t = 0; t < newThreads.length; ++t) {\n              var newt = newThreads[t];\n              var sub = val(newt);\n              if (sub.length > 0 && sub[0].errors.length === 0) {\n                sub.forEach(newThread => {\n                  var solutions =\n                      \"expression\" in newt ? newt.expression.solutions : [];\n                  if (\"solution\" in newThread)\n                    solutions = solutions.concat(newThread.solution);\n                  delete newThread.solution;\n                  newThread.expression = extend({\n                    type: type,\n                    solutions: solutions\n                  }, minmax);\n                });\n              }\n              if (sub.length === 0 /* min:0 */ || sub[0].errors.length > 0)\n                return repeated < min ? sub : newThreads;\n              else\n                inner = inner.concat(sub);\n              // newThreads.expressions.push(sub);\n            }\n            newThreads = inner;\n          }\n          if (newThreads.length > 0 && newThreads[0].errors.length === 0 && \"semActs\" in expr) {\n            var passes = [];\n            var failures = [];\n            newThreads.forEach(newThread => {\n              const semActErrors = semActHandler.dispatchAll(expr.semActs, \"???\", newThread)\n              if (semActErrors.length === 0) {\n                passes.push(newThread)\n              } else {\n                [].push.apply(newThread.errors, semActErrors);\n                failures.push(newThread);\n              }\n            });\n            newThreads = passes.length > 0 ? passes : failures;\n          }\n          return newThreads;\n        }\n\n        if (expr.type === \"TripleConstraint\") {\n          var negated = \"negated\" in expr && expr.negated || max === 0;\n          if (negated)\n            min = max = Infinity;\n          if (thread.avail[constraintNo] === undefined)\n            thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].slice();\n          var minmax = {  };\n          if (\"min\" in expr && expr.min !== 1 || \"max\" in expr && expr.max !== 1) {\n            minmax.min = expr.min;\n            minmax.max = expr.max;\n          }\n          if (\"semActs\" in expr)\n            minmax.semActs = expr.semActs;\n          if (\"annotations\" in expr)\n            minmax.annotations = expr.annotations;\n          var taken = thread.avail[constraintNo].splice(0, min);\n          var passed = negated ? taken.length === 0 : taken.length >= min;\n          var ret = [];\n          var matched = thread.matched;\n          if (passed) {\n            do {\n              ret.push({\n                avail: thread.avail.map(a => { // copy parent thread's avail vector\n                  return a.slice();\n                }), // was: extend({}, thread.avail)\n                errors: thread.errors.slice(),\n                matched: matched.concat({\n                  tNos: taken.slice()\n                }),\n                expression: extend(\n                  {\n                    type: \"TripleConstraintSolutions\",\n                    predicate: expr.predicate,\n                    solutions: taken.map(tripleNo =>  {\n                      return { type: \"halfTestedTriple\", tripleNo: tripleNo, constraintNo: constraintNo };\n                    })\n                    // map(triple => {\n                    //   var t = neighborhood[triple];\n                    //   return {\n                    //     type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: t.object\n                    //   }\n                    // })\n                  },\n                  \"valueExpr\" in expr ? { valueExpr: expr.valueExpr } : {},\n                  \"productionLabel\" in expr ? { productionLabel: expr.productionLabel } : {},\n                  minmax)\n              });\n            } while ((function () {\n              if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                taken.push(thread.avail[constraintNo].shift());\n                return true;\n              } else {\n                return false;\n              }\n            })());\n          } else {\n            var valueExpr = null;\n            if (typeof expr.valueExpr === \"string\") { // ShapeRef\n              valueExpr = expr.valueExpr;\n              if (RdfTerm.isBlank(valueExpr))\n                valueExpr = index.shapeExprs[valueExpr];\n            } else if (expr.valueExpr) {\n              valueExpr = extend({}, expr.valueExpr)\n            }\n            ret.push({\n              avail: thread.avail,\n              errors: thread.errors.concat([\n                extend({\n                  type: negated ? \"NegatedProperty\" : \"MissingProperty\",\n                  property: expr.predicate\n                }, valueExpr ? { valueExpr: valueExpr } : {})\n              ]),\n              matched: matched\n            });\n          }\n\n          return ret;\n        }\n\n        else if (expr.type === \"OneOf\") {\n          return validateRept(\"OneOfSolutions\", (th) => {\n            var accept = null;\n            var matched = [];\n            var failed = [];\n            expr.expressions.forEach(nested => {\n              var thcopy = {\n                avail: th.avail.map(a => { return a.slice(); }),\n                errors: th.errors,\n                matched: th.matched//.slice() ever needed??\n              };\n              var sub = validateExpr(nested, thcopy);\n              if (sub[0].errors.length === 0) {\n                matched = matched.concat(sub);\n                sub.forEach(newThread => {\n                  var expressions =\n                      \"solution\" in thcopy ? thcopy.solution.expressions : [];\n                  if (\"expression\" in newThread) // undefined for no matches on min card:0\n                    expressions = expressions.concat([newThread.expression]);\n                  delete newThread.expression;\n                  newThread.solution = {\n                    type: \"OneOfSolution\",\n                    expressions: expressions\n                  };\n                });\n              } else\n                failed = failed.concat(sub);\n            });\n            return matched.length > 0 ? matched : failed;\n          });\n        }\n\n        else if (expr.type === \"EachOf\") {\n          return validateRept(\"EachOfSolutions\", (th) => {\n            // Iterate through nested expressions, exprThreads starts as [th].\n            return expr.expressions.reduce((exprThreads, nested) => {\n              // Iterate through current thread list composing nextThreads.\n              // Consider e.g.\n              // <S1> { <p1> . | <p2> .; <p3> . } / { <x> <p2> 2; <p3> 3 } (should pass)\n              // <S1> { <p1> .; <p2> . }          / { <s1> <p1> 1 }        (should fail)\n              return exprThreads.reduce((nextThreads, exprThread) => {\n                var sub = validateExpr(nested, exprThread);\n                // Move newThread.expression into a hierarchical solution structure.\n                sub.forEach(newThread => {\n                  if (newThread.errors.length === 0) {\n                    var expressions =\n                        \"solution\" in exprThread ? exprThread.solution.expressions : [];\n                    if (\"expression\" in newThread) // undefined for no matches on min card:0\n                      expressions = expressions.concat([newThread.expression]);\n                    // console.warn(threadMatched(newThread), \" vs \", exprMatched(expressions));\n                    delete newThread.expression;\n                    newThread.solution = {\n                      type: \"EachOfSolution\",\n                      expressions: expressions // exprThread.expression + newThread.expression\n                    };\n                  }\n                });\n                return nextThreads.concat(sub);\n              }, []);\n            }, [th]);\n          });\n        }\n\n        runtimeError(\"unexpected expr type: \" + expr.type);\n      }\n\n      var startingThread = {\n        avail:[],   // triples remaining by constraint number\n        matched:[], // triples matched in this thread\n        errors:[]   // errors encounted\n      };\n      if (!outerExpression)\n        return { }; // vapid match if no expression\n      var ret = validateExpr(outerExpression, startingThread);\n      // console.log(JSON.stringify(ret));\n      // note: don't return if ret.length === 1 because it might fail the unmatchedTriples test.\n      var longerChosen =\n          ret.reduce((ret, elt) => {\n            if (elt.errors.length > 0)\n              return ret;              // early return\n            var unmatchedTriples = {};\n            // Collect triples assigned to some constraint.\n            Object.keys(tripleToConstraintMapping).forEach(k => {\n              if (tripleToConstraintMapping[k] !== undefined)\n                unmatchedTriples[k] = tripleToConstraintMapping[k];\n            });\n            // Removed triples matched in this thread.\n            elt.matched.forEach(m => {\n              m.tNos.forEach(t => {\n                delete unmatchedTriples[t];\n              });\n            });\n            // Remaining triples are unaccounted for.\n            Object.keys(unmatchedTriples).forEach(t => {\n              elt.errors.push({\n                type: \"ExcessTripleViolation\",\n                triple: neighborhood[t],\n                constraint: constraintList[unmatchedTriples[t]]\n              });\n            });\n            return ret !== null ? ret : // keep first solution\n            // Accept thread with no unmatched triples.\n            Object.keys(unmatchedTriples).length > 0 ? null : elt;\n          }, null);\n      return longerChosen !== null ?\n        finish(longerChosen.expression, constraintList,\n               neighborhood, recurse, direct, semActHandler, checkValueExpr) :\n        ret.length > 1 ? {\n          type: \"PossibleErrors\",\n          errors: ret.reduce((all, e) => {\n            return all.concat([e.errors]);\n          }, [])\n        } : ret[0];\n    }\n\n    function finish (fromValidatePoint, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr) {\n      function _dive (solns) {\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n        if (solns.type === \"OneOfSolutions\" ||\n            solns.type === \"EachOfSolutions\") {\n          solns.solutions.forEach(s => {\n            s.expressions.forEach(e => {\n              _dive(e);\n            });\n          });\n        } else if (solns.type === \"TripleConstraintSolutions\") {\n          solns.solutions = solns.solutions.map(x => {\n            if (x.type === \"TestedTriple\") // already done\n              return x; // c.f. validation/3circularRef1_pass-open\n            var t = neighborhood[x.tripleNo];\n            var expr = constraintList[x.constraintNo];\n            var ret = {\n              type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)\n            };\n            function diver (focus, shapeLabel, dive) {\n              var sub = dive(focus, shapeLabel);\n              if (\"errors\" in sub) {\n                // console.dir(sub);\n                var err = {\n                  type: \"ReferenceError\", focus: focus,\n                  shape: shapeLabel\n                };\n                if (typeof shapeLabel === \"string\" && RdfTerm.isBlank(shapeLabel))\n                  err.referencedShape = shape;\n                err.errors = sub;\n                return [err];\n              }\n              if ((\"solution\" in sub || \"solutions\" in sub)&& Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                  sub.type === \"Recursion\")\n                ret.referenced = sub; // !!! needs to aggregate errors and solutions\n              return [];\n            }\n            function diveRecurse (focus, shapeLabel) {\n              return diver(focus, shapeLabel, recurse);\n            }\n            function diveDirect (focus, shapeLabel) {\n              return diver(focus, shapeLabel, direct);\n            }\n            var subErrors = \"valueExpr\" in expr ?\n                checkValueExpr(expr.inverse ? t.subject : t.object, expr.valueExpr, diveRecurse, diveDirect) :\n                [];\n            if (subErrors.length === 0 && \"semActs\" in expr)\n              [].push.apply(subErrors, semActHandler.dispatchAll(expr.semActs, t, ret))\n            if (subErrors.length > 0) {\n              fromValidatePoint.errors = fromValidatePoint.errors || [];\n              fromValidatePoint.errors = fromValidatePoint.errors.concat(subErrors);\n            }\n            return ret;\n          });\n        } else {\n          throw Error(\"unexpected expr type in \" + JSON.stringify(solns));\n        }\n      }\n      if (Object.keys(fromValidatePoint).length > 0) // guard against {}\n        _dive(fromValidatePoint);\n      if (\"semActs\" in shape)\n        fromValidatePoint.semActs = shape.semActs;\n      return fromValidatePoint;\n    }\n  }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\nreturn {\n  name: \"threaded-val-nerr\",\n  description: \"emulation of regular expression engine with error permutations\",\n  compile: vpEngine\n};\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ThreadedValNErr;\n"
    },
    {
      "id": 23,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
      "name": "../shex-parser/shex-parser.js",
      "index": 21,
      "index2": 20,
      "size": 2803,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 38,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        }
      ],
      "profile": {
        "factory": 14,
        "building": 31,
        "dependencies": 245
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/parser",
          "loc": "5:12-37"
        },
        {
          "moduleId": 47,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require",
          "userRequest": "@shexjs/parser",
          "loc": "7:19-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "var ShExParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShExJison = require('./lib/ShExJison').Parser; // node environment\n} else {\n  ShExJison = ShExJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, prefixes, schemaOptions) {\n  schemaOptions = schemaOptions || {};\n  // Create a copy of the prefixes\n  var prefixesCopy = {};\n  for (var prefix in prefixes || {})\n    prefixesCopy[prefix] = prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShExJison();\n\n  function runParser () {\n    // ShExJison.base = baseIRI || \"\";\n    // ShExJison.basePath = ShExJison.base.replace(/[^\\/]*$/, '');\n    // ShExJison.baseRoot = ShExJison.base.match(/^(?:[a-z]+:\\/*)?[^\\/]*/)[0];\n    ShExJison._prefixes = Object.create(prefixesCopy);\n    ShExJison._imports = [];\n    ShExJison._setBase(baseIRI);\n    ShExJison._setFileName(baseIRI);\n    ShExJison.options = schemaOptions;\n    let errors = [];\n    ShExJison.recoverable = e =>\n      errors.push(e);\n    let ret = null;\n    try {\n      ret = ShExJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      errors.push(e);\n    }\n    ShExJison.reset();\n    errors.forEach(e => {\n      if (\"hash\" in e) {\n        const hash = e.hash;\n        const location = hash.loc;\n        delete hash.loc;\n        Object.assign(e, hash, {location: location});\n      }\n      return e;\n    })\n    if (errors.length == 1) {\n      errors[0].parsed = ret;\n      throw errors[0];\n    } else if (errors.length) {\n      const all = new Error(\"\" + errors.length  + \" parser errors:\\n\" + errors.map(\n        e => contextError(e, parser.yy.lexer)\n      ).join(\"\\n\"));\n      all.errors = errors;\n      all.parsed = ret;\n      throw all;\n    } else {\n      return ret;\n    }\n  }\n  parser.parse = runParser;\n  parser._setBase = function (base) {\n    ShExJison._setBase;\n    baseIRI = base;\n  }\n  parser._setFileName = ShExJison._setFileName;\n  parser._setOptions = function (opts) { ShExJison.options = opts; };\n  parser._resetBlanks = ShExJison._resetBlanks;\n  parser.reset = ShExJison.reset;\n  ShExJison.options = schemaOptions;\n  return parser;\n\n  function contextError (e, lexer) {\n    // use the lexer's pretty-printing\n    var line = e.location.first_line;\n    var col  = e.location.first_column + 1;\n    var posStr = \"pos\" in e.hash ? \"\\n\" + e.hash.pos : \"\"\n    return `${baseIRI}\\n line: ${line}, column: ${col}: ${e.message}${posStr}`;\n  }\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExParser;\n"
    },
    {
      "id": 24,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "index": 23,
      "index2": 38,
      "size": 19433,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
      "issuerId": 47,
      "issuerName": "../shex-api/shex-api.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 319,
        "building": 30,
        "dependencies": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require",
          "userRequest": "glob",
          "loc": "308:20-35"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "./glob.js",
          "loc": "8:11-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n"
    },
    {
      "id": 25,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "index": 24,
      "index2": 22,
      "size": 1308,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "fs.realpath",
          "loc": "44:9-31"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "fs.realpath",
          "loc": "5:9-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n"
    },
    {
      "id": 26,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
      "name": "./node_modules/assert/assert.js",
      "index": 32,
      "index2": 31,
      "size": 15995,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "assert",
          "loc": "50:13-30"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "assert",
          "loc": "11:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n"
    },
    {
      "id": 27,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/common.js",
      "index": 37,
      "index2": 33,
      "size": 6167,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "./common.js",
          "loc": "53:13-35"
        },
        {
          "moduleId": 55,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
          "type": "cjs require",
          "userRequest": "./common.js",
          "loc": "13:13-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"
    },
    {
      "id": 28,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/wrappy/wrappy.js",
      "index": 39,
      "index2": 35,
      "size": 905,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "issuerId": 56,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        },
        {
          "id": 56,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          }
        }
      ],
      "profile": {
        "factory": 31,
        "building": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 29,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
          "type": "cjs require",
          "userRequest": "wrappy",
          "loc": "1:13-30"
        },
        {
          "moduleId": 56,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "type": "cjs require",
          "userRequest": "wrappy",
          "loc": "1:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n"
    },
    {
      "id": 29,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/once/once.js",
      "index": 40,
      "index2": 36,
      "size": 935,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "once",
          "loc": "63:11-26"
        },
        {
          "moduleId": 56,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
          "type": "cjs require",
          "userRequest": "once",
          "loc": "3:11-26"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n"
    },
    {
      "id": 30,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "name": "./node_modules/readable-stream/lib/_stream_readable.js",
      "index": 56,
      "index2": 68,
      "size": 35972,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
          "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "type": "cjs require",
          "userRequest": "./_stream_readable",
          "loc": "42:15-44"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/_stream_readable.js",
          "loc": "1:27-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}"
    },
    {
      "id": 31,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/stream-browser.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/stream-browser.js",
      "index": 57,
      "index2": 52,
      "size": 49,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/stream",
          "loc": "42:13-49"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/stream",
          "loc": "66:13-49"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "module.exports = require('events').EventEmitter;\n"
    },
    {
      "id": 32,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/destroy.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/destroy.js",
      "index": 61,
      "index2": 56,
      "size": 3117,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/destroy",
          "loc": "74:18-55"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/destroy",
          "loc": "82:18-55"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};"
    },
    {
      "id": 33,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/state.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/state.js",
      "index": 62,
      "index2": 58,
      "size": 749,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/state",
          "loc": "76:15-50"
        },
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/state",
          "loc": "84:15-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};"
    },
    {
      "id": 34,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
      "name": "./node_modules/readable-stream/lib/_stream_writable.js",
      "index": 66,
      "index2": 61,
      "size": 21821,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_duplex.js",
          "module": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_duplex.js",
          "type": "cjs require",
          "userRequest": "./_stream_writable",
          "loc": "44:15-44"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/_stream_writable.js",
          "loc": "4:19-55"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};"
    },
    {
      "id": 35,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
      "name": "./node_modules/string_decoder/lib/string_decoder.js",
      "index": 68,
      "index2": 64,
      "size": 9465,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "string_decoder/",
          "loc": "163:40-66"
        },
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "string_decoder/",
          "loc": "325:38-64"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}"
    },
    {
      "id": 36,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_transform.js",
      "name": "./node_modules/readable-stream/lib/_stream_transform.js",
      "index": 73,
      "index2": 69,
      "size": 7947,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/_stream_transform.js",
          "loc": "6:20-57"
        },
        {
          "moduleId": 68,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
          "module": "./node_modules/readable-stream/lib/_stream_passthrough.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_passthrough.js",
          "type": "cjs require",
          "userRequest": "./_stream_transform",
          "loc": "28:16-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}"
    },
    {
      "id": 37,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/queue-microtask/index.js",
      "name": "./node_modules/queue-microtask/index.js",
      "index": 48,
      "index2": 45,
      "size": 348,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
      "issuerId": 12,
      "issuerName": "./node_modules/n3/src/N3Lexer.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        }
      ],
      "profile": {
        "factory": 336,
        "building": 33
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 12,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "module": "./node_modules/n3/src/N3Lexer.js",
          "moduleName": "./node_modules/n3/src/N3Lexer.js",
          "type": "harmony side effect evaluation",
          "userRequest": "queue-microtask",
          "loc": "3:0-45"
        },
        {
          "moduleId": 12,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "module": "./node_modules/n3/src/N3Lexer.js",
          "moduleName": "./node_modules/n3/src/N3Lexer.js",
          "type": "harmony import specifier",
          "userRequest": "queue-microtask",
          "loc": "443:8-22"
        }
      ],
      "usedExports": [
        "default"
      ],
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n"
    },
    {
      "id": 38,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "name": "./shex-webapp.js",
      "index": 0,
      "index2": 77,
      "size": 383,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "issuerPath": null,
      "profile": {
        "factory": 16,
        "building": 11
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "single entry",
          "userRequest": "./shex-webapp.js",
          "loc": "shex-webapp-webpack"
        },
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "single entry",
          "userRequest": "./shex-webapp.js",
          "loc": "shex-webapp-webpack.min"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 0,
      "source": "ShExWebApp = (function () {\n  let shapeMap = require(\"shape-map\")\n  return Object.assign(require(\"@shexjs/core\"), {\n    Api: require(\"@shexjs/api\"),\n    Parser: require(\"@shexjs/parser\"),\n    ShapeMap: shapeMap,\n    ShapeMapParser: shapeMap.Parser,\n    N3: require(\"n3\")\n  })\n})()\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShExWebApp;\n"
    },
    {
      "id": 39,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
      "name": "../shape-map/shape-map.js",
      "index": 1,
      "index2": 7,
      "size": 560,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 38,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        }
      ],
      "profile": {
        "factory": 14,
        "building": 31,
        "dependencies": 245
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "shape-map",
          "loc": "2:17-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "/* ShapeMap - javascript module to associate RDF nodes with labeled shapes.\n *\n * See README for description.\n */\n\nvar ShapeMap = (function () {\n  const symbols = require(\"./lib/ShapeMapSymbols\")\n\n  // Write the parser object directly into the symbols so the caller shares a\n  // symbol space with ShapeMapJison for e.g. start and focus.\n  symbols.Parser = require(\"./lib/ShapeMapParser\")\n  return symbols\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShapeMap;\n"
    },
    {
      "id": 40,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
      "name": "../shape-map/lib/ShapeMapParser.js",
      "index": 3,
      "index2": 6,
      "size": 2190,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
      "issuerId": 39,
      "issuerName": "../shape-map/shape-map.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 39,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 120,
        "building": 142
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 39,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "module": "../shape-map/shape-map.js",
          "moduleName": "../shape-map/shape-map.js",
          "type": "cjs require",
          "userRequest": "./lib/ShapeMapParser",
          "loc": "11:19-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "var ShapeMapParser = (function () {\n\n// stolen as much as possible from SPARQL.js\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  ShapeMapJison = require('./ShapeMapJison').Parser; // node environment\n} else {\n  ShapeMapJison = ShapeMapJison.Parser; // browser environment\n}\n\n// Creates a ShEx parser with the given pre-defined prefixes\nvar prepareParser = function (baseIRI, schemaMeta, dataMeta) {\n  // Create a copy of the prefixes\n  var schemaBase = schemaMeta.base;\n  var schemaPrefixesCopy = {};\n  for (var prefix in schemaMeta.prefixes || {})\n    schemaPrefixesCopy[prefix] = schemaMeta.prefixes[prefix];\n  var dataBase = dataMeta.base;\n  var dataPrefixesCopy = {};\n  for (var prefix in dataMeta.prefixes || {})\n    dataPrefixesCopy[prefix] = dataMeta.prefixes[prefix];\n\n  // Create a new parser with the given prefixes\n  // (Workaround for https://github.com/zaach/jison/issues/241)\n  var parser = new ShapeMapJison();\n\n  function runParser () {\n    ShapeMapJison._schemaPrefixes = Object.create(schemaPrefixesCopy);\n    ShapeMapJison._setSchemaBase(schemaBase);\n    ShapeMapJison._dataPrefixes = Object.create(dataPrefixesCopy);\n    ShapeMapJison._setDataBase(dataBase);\n    ShapeMapJison._setFileName(baseIRI);\n    try {\n      return ShapeMapJison.prototype.parse.apply(parser, arguments);\n    } catch (e) {\n      // use the lexer's pretty-printing\n      var lineNo = \"lexer\" in parser.yy ? parser.yy.lexer.yylineno + 1 : 1;\n      var pos = \"lexer\" in parser.yy ? parser.yy.lexer.showPosition() : \"\";\n      var t = Error(`${baseIRI}(${lineNo}): ${e.message}\\n${pos}`);\n      Error.captureStackTrace(t, runParser);\n      parser.reset();\n      throw t;\n    }\n  }\n  parser.parse = runParser;\n  parser._setSchemaBase = function (base) {\n    ShapeMapJison._setSchemaBase;\n    schemaBase = base;\n  }\n  parser._setDataBase = function (base) {\n    ShapeMapJison._setDataBase;\n    dataBase = base;\n  }\n  parser._setFileName = ShapeMapJison._setFileName;\n  parser.reset = ShapeMapJison.reset;\n  return parser;\n}\n\nreturn {\n  construct: prepareParser\n};\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined')\n  module.exports = ShapeMapParser;\n"
    },
    {
      "id": 41,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapJison.js",
      "name": "../shape-map/lib/ShapeMapJison.js",
      "index": 4,
      "index2": 5,
      "size": 52142,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
      "issuerId": 40,
      "issuerName": "../shape-map/lib/ShapeMapParser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 39,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/shape-map.js",
          "name": "../shape-map/shape-map.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 40,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "name": "../shape-map/lib/ShapeMapParser.js",
          "profile": {
            "factory": 120,
            "building": 142
          }
        }
      ],
      "profile": {
        "factory": 115,
        "building": 34,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 40,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shape-map/lib/ShapeMapParser.js",
          "module": "../shape-map/lib/ShapeMapParser.js",
          "moduleName": "../shape-map/lib/ShapeMapParser.js",
          "type": "cjs require",
          "userRequest": "./ShapeMapJison",
          "loc": "5:18-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "/* parser generated by jison 0.4.16 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShapeMapJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,16],$V2=[1,11],$V3=[1,14],$V4=[1,25],$V5=[1,24],$V6=[1,21],$V7=[1,22],$V8=[1,23],$V9=[1,28],$Va=[1,26],$Vb=[1,27],$Vc=[1,29],$Vd=[1,12],$Ve=[1,13],$Vf=[1,15],$Vg=[4,9],$Vh=[16,19,20,21],$Vi=[2,25],$Vj=[16,19,20,21,37],$Vk=[16,19,20,21,31,34,37,39,46,48,50,53,54,55,56,76,77,78,79,80,81,82],$Vl=[4,9,16,19,20,21,37,43,74,75],$Vm=[4,9,43],$Vn=[29,46,80,81,82],$Vo=[4,9,42,43],$Vp=[1,59],$Vq=[46,79,80,81,82],$Vr=[31,34,39,46,48,50,53,54,55,56,76,77,78,80,81,82],$Vs=[1,94],$Vt=[1,85],$Vu=[1,86],$Vv=[1,87],$Vw=[1,90],$Vx=[1,91],$Vy=[1,92],$Vz=[1,93],$VA=[1,95],$VB=[33,48,49,50,53,54,55,56,63],$VC=[4,9,37,65],$VD=[1,99],$VE=[9,37],$VF=[9,65];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shapeMap\":3,\"EOF\":4,\"pair\":5,\"Q_O_QGT_COMMA_E_S_Qpair_E_C_E_Star\":6,\"QGT_COMMA_E_Opt\":7,\"O_QGT_COMMA_E_S_Qpair_E_C\":8,\"GT_COMMA\":9,\"nodeSelector\":10,\"statusAndShape\":11,\"Qreason_E_Opt\":12,\"QjsonAttributes_E_Opt\":13,\"reason\":14,\"jsonAttributes\":15,\"GT_AT\":16,\"Qstatus_E_Opt\":17,\"shapeSelector\":18,\"ATSTART\":19,\"ATPNAME_NS\":20,\"ATPNAME_LN\":21,\"status\":22,\"objectTerm\":23,\"triplePattern\":24,\"IT_SPARQL\":25,\"string\":26,\"nodeIri\":27,\"shapeIri\":28,\"START\":29,\"subjectTerm\":30,\"BLANK_NODE_LABEL\":31,\"literal\":32,\"GT_LCURLEY\":33,\"IT_FOCUS\":34,\"nodePredicate\":35,\"O_QobjectTerm_E_Or_QIT___E_C\":36,\"GT_RCURLEY\":37,\"O_QsubjectTerm_E_Or_QIT___E_C\":38,\"IT__\":39,\"GT_NOT\":40,\"GT_OPT\":41,\"GT_DIVIDE\":42,\"GT_DOLLAR\":43,\"O_QAPPINFO_COLON_E_Or_QAPPINFO_SPACE_COLON_E_C\":44,\"jsonValue\":45,\"APPINFO_COLON\":46,\"APPINFO_SPACE_COLON\":47,\"IT_false\":48,\"IT_null\":49,\"IT_true\":50,\"jsonObject\":51,\"jsonArray\":52,\"INTEGER\":53,\"DECIMAL\":54,\"DOUBLE\":55,\"STRING_LITERAL2\":56,\"Q_O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C_E_Opt\":57,\"O_QGT_COMMA_E_S_QjsonMember_E_C\":58,\"jsonMember\":59,\"Q_O_QGT_COMMA_E_S_QjsonMember_E_C_E_Star\":60,\"O_QjsonMember_E_S_QGT_COMMA_E_S_QjsonMember_E_Star_C\":61,\"STRING_LITERAL2_COLON\":62,\"GT_LBRACKET\":63,\"Q_O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C_E_Opt\":64,\"GT_RBRACKET\":65,\"O_QGT_COMMA_E_S_QjsonValue_E_C\":66,\"Q_O_QGT_COMMA_E_S_QjsonValue_E_C_E_Star\":67,\"O_QjsonValue_E_S_QGT_COMMA_E_S_QjsonValue_E_Star_C\":68,\"rdfLiteral\":69,\"numericLiteral\":70,\"booleanLiteral\":71,\"Q_O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C_E_Opt\":72,\"O_QLANGTAG_E_Or_QGT_DTYPE_E_S_QnodeIri_E_C\":73,\"LANGTAG\":74,\"GT_DTYPE\":75,\"STRING_LITERAL1\":76,\"STRING_LITERAL_LONG1\":77,\"STRING_LITERAL_LONG2\":78,\"IT_a\":79,\"IRIREF\":80,\"PNAME_LN\":81,\"PNAME_NS\":82,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",9:\"GT_COMMA\",16:\"GT_AT\",19:\"ATSTART\",20:\"ATPNAME_NS\",21:\"ATPNAME_LN\",25:\"IT_SPARQL\",29:\"START\",31:\"BLANK_NODE_LABEL\",33:\"GT_LCURLEY\",34:\"IT_FOCUS\",37:\"GT_RCURLEY\",39:\"IT__\",40:\"GT_NOT\",41:\"GT_OPT\",42:\"GT_DIVIDE\",43:\"GT_DOLLAR\",46:\"APPINFO_COLON\",47:\"APPINFO_SPACE_COLON\",48:\"IT_false\",49:\"IT_null\",50:\"IT_true\",53:\"INTEGER\",54:\"DECIMAL\",55:\"DOUBLE\",56:\"STRING_LITERAL2\",62:\"STRING_LITERAL2_COLON\",63:\"GT_LBRACKET\",65:\"GT_RBRACKET\",74:\"LANGTAG\",75:\"GT_DTYPE\",76:\"STRING_LITERAL1\",77:\"STRING_LITERAL_LONG1\",78:\"STRING_LITERAL_LONG2\",79:\"IT_a\",80:\"IRIREF\",81:\"PNAME_LN\",82:\"PNAME_NS\"},\nproductions_: [0,[3,1],[3,4],[8,2],[6,0],[6,2],[7,0],[7,1],[5,4],[12,0],[12,1],[13,0],[13,1],[11,3],[11,1],[11,1],[11,1],[17,0],[17,1],[10,1],[10,1],[10,2],[10,2],[18,1],[18,1],[30,1],[30,1],[23,1],[23,1],[24,5],[24,5],[36,1],[36,1],[38,1],[38,1],[22,1],[22,1],[14,2],[15,3],[44,1],[44,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[51,3],[58,2],[60,0],[60,2],[61,2],[57,0],[57,1],[59,2],[52,3],[66,2],[67,0],[67,2],[68,2],[64,0],[64,1],[32,1],[32,1],[32,1],[70,1],[70,1],[70,1],[69,2],[73,1],[73,2],[72,0],[72,1],[71,1],[71,1],[26,1],[26,1],[26,1],[26,1],[35,1],[35,1],[27,1],[27,1],[27,1],[27,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n          return []\n        \nbreak;\ncase 2:\n\n          return [$$[$0-3]].concat($$[$0-2])\n        \nbreak;\ncase 3: case 51: case 59:\nthis.$ = $$[$0];\nbreak;\ncase 4: case 60: case 63:\nthis.$ = [  ];\nbreak;\ncase 5: case 61:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 8:\nthis.$ = extend({ node: $$[$0-3] }, $$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 9: case 11: case 52: case 55: case 74:\nthis.$ = {  };\nbreak;\ncase 13:\nthis.$ = extend({ shape: $$[$0] }, $$[$0-1]);\nbreak;\ncase 14:\nthis.$ = { shape: ShapeMap.start };\nbreak;\ncase 15:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1)) };\n      \nbreak;\ncase 16:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = { shape: expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + $$[$0].substr(namePos + 1) };\n      \nbreak;\ncase 17:\nthis.$ = { status: 'conformant' } // defaults to conformant;\nbreak;\ncase 18:\nthis.$ = { status: $$[$0] };\nbreak;\ncase 21:\nthis.$ = { type: \"Extension\", language: \"http://www.w3.org/ns/shex#Extensions-sparql\", lexical: $$[$0][\"@value\"] };\nbreak;\ncase 22:\nthis.$ = { type: \"Extension\", language: $$[$0-1], lexical: $$[$0][\"@value\"] };\nbreak;\ncase 24:\nthis.$ = ShapeMap.start;\nbreak;\ncase 29:\nthis.$ = { type: \"TriplePattern\", subject: ShapeMap.focus, predicate: $$[$0-2], object: $$[$0-1] };\nbreak;\ncase 30:\nthis.$ = { type: \"TriplePattern\", subject: $$[$0-3], predicate: $$[$0-2], object: ShapeMap.focus };\nbreak;\ncase 32: case 34: case 42:\nthis.$ = null;\nbreak;\ncase 35:\nthis.$ = 'nonconformant';\nbreak;\ncase 36:\nthis.$ = 'unknown';\nbreak;\ncase 37:\nthis.$ = { reason: $$[$0] };\nbreak;\ncase 38:\nthis.$ = { appinfo: $$[$0] };\nbreak;\ncase 41:\nthis.$ = false;\nbreak;\ncase 43:\nthis.$ = true;\nbreak;\ncase 46: case 47: case 48:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 49:\nthis.$ = unescapeString($$[$0], 1)[\"@value\"];\nbreak;\ncase 50: case 58:\nthis.$ = $$[$0-1];\nbreak;\ncase 53: case 54: case 71:\nthis.$ = extend($$[$0-1], $$[$0]);\nbreak;\ncase 57:\n\n        this.$ = {  };\n        var t = $$[$0-1].substr(0, $$[$0-1].length - 1).trim(); // remove trailing ':' and spaces\n        this.$[unescapeString(t, 1)[\"@value\"]] = $$[$0];\n      \nbreak;\ncase 62:\nthis.$ = [$$[$0-1]].concat($$[$0]);\nbreak;\ncase 68:\nthis.$ = createLiteral($$[$0], XSD_INTEGER);\nbreak;\ncase 69:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL);\nbreak;\ncase 70:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE);\nbreak;\ncase 72:\nthis.$ = obj(\"@language\", $$[$0].substr(1).toLowerCase());\nbreak;\ncase 73:\nthis.$ = obj(\"@type\", $$[$0]);\nbreak;\ncase 76:\nthis.$ = createLiteral(\"true\", XSD_BOOLEAN);\nbreak;\ncase 77:\nthis.$ = createLiteral(\"false\", XSD_BOOLEAN);\nbreak;\ncase 78: case 80:\nthis.$ = unescapeString($$[$0], 1);\nbreak;\ncase 79: case 81:\nthis.$ = unescapeString($$[$0], 3);\nbreak;\ncase 83:\nthis.$ = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nbreak;\ncase 84:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._dataBase === null || absoluteIRI.test(unesc) ? unesc : _resolveDataIRI(unesc)\n      \nbreak;\ncase 85: case 86: case 90:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 87:\n\n        this.$ = expandPrefix(Parser._dataPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\ncase 88:\n\n        var unesc = unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._schemaBase === null || absoluteIRI.test(unesc) ? unesc : _resolveSchemaIRI(unesc)\n      \nbreak;\ncase 89:\n\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, namePos)) + unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n    \nbreak;\ncase 91:\n\n        this.$ = expandPrefix(Parser._schemaPrefixes, $$[$0].substr(0, $$[$0].length - 1));\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},{1:[3]},{1:[2,1]},o($Vg,[2,4],{6:30}),{11:31,16:[1,32],19:[1,33],20:[1,34],21:[1,35]},o($Vh,[2,19]),o($Vh,[2,20]),{26:36,56:$V9,76:$Va,77:$Vb,78:$Vc},o($Vh,$Vi,{26:37,56:$V9,76:$Va,77:$Vb,78:$Vc}),o($Vj,[2,27]),o($Vj,[2,28]),{27:42,30:40,31:$V1,34:[1,38],38:39,39:[1,41],46:$V3,80:$Vd,81:$Ve,82:$Vf},o($Vk,[2,84]),o($Vk,[2,85]),o($Vk,[2,86]),o($Vk,[2,87]),o([16,19,20,21,37,46,79,80,81,82],[2,26]),o($Vj,[2,65]),o($Vj,[2,66]),o($Vj,[2,67]),o($Vj,[2,74],{72:43,73:44,74:[1,45],75:[1,46]}),o($Vj,[2,68]),o($Vj,[2,69]),o($Vj,[2,70]),o($Vj,[2,76]),o($Vj,[2,77]),o($Vl,[2,78]),o($Vl,[2,79]),o($Vl,[2,80]),o($Vl,[2,81]),{4:[2,6],7:47,8:48,9:[1,49]},o($Vm,[2,9],{12:50,14:51,42:[1,52]}),o($Vn,[2,17],{17:53,22:54,40:[1,55],41:[1,56]}),o($Vo,[2,14]),o($Vo,[2,15]),o($Vo,[2,16]),o($Vh,[2,21]),o($Vh,[2,22]),{27:58,35:57,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},{27:58,35:60,46:$V3,79:$Vp,80:$Vd,81:$Ve,82:$Vf},o($Vq,[2,33]),o($Vq,[2,34]),o([37,46,79,80,81,82],$Vi),o($Vj,[2,71]),o($Vj,[2,75]),o($Vj,[2,72]),{27:61,46:$V3,80:$Vd,81:$Ve,82:$Vf},{4:[1,62]},o($Vg,[2,5]),{4:[2,7],5:63,10:4,23:5,24:6,25:$V0,26:20,27:8,30:9,31:$V1,32:10,33:$V2,46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vg,[2,11],{13:64,15:65,43:[1,66]}),o($Vm,[2,10]),{26:67,56:$V9,76:$Va,77:$Vb,78:$Vc},{18:68,28:69,29:[1,70],46:[1,73],80:[1,71],81:[1,72],82:[1,74]},o($Vn,[2,18]),o($Vn,[2,35]),o($Vn,[2,36]),{23:76,26:20,27:42,30:9,31:$V1,32:10,36:75,39:[1,77],46:$V3,48:$V4,50:$V5,53:$V6,54:$V7,55:$V8,56:$V9,69:17,70:18,71:19,76:$Va,77:$Vb,78:$Vc,80:$Vd,81:$Ve,82:$Vf},o($Vr,[2,82]),o($Vr,[2,83]),{34:[1,78]},o($Vj,[2,73]),{1:[2,2]},o($Vg,[2,3]),o($Vg,[2,8]),o($Vg,[2,12]),{44:79,46:[1,80],47:[1,81]},o($Vm,[2,37]),o($Vo,[2,13]),o($Vo,[2,23]),o($Vo,[2,24]),o($Vo,[2,88]),o($Vo,[2,89]),o($Vo,[2,90]),o($Vo,[2,91]),{37:[1,82]},{37:[2,31]},{37:[2,32]},{37:[1,83]},{33:$Vs,45:84,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VB,[2,39]),o($VB,[2,40]),o($Vh,[2,29]),o($Vh,[2,30]),o($Vg,[2,38]),o($VC,[2,41]),o($VC,[2,42]),o($VC,[2,43]),o($VC,[2,44]),o($VC,[2,45]),o($VC,[2,46]),o($VC,[2,47]),o($VC,[2,48]),o($VC,[2,49]),{37:[2,55],57:96,59:98,61:97,62:$VD},{33:$Vs,45:102,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA,64:100,65:[2,63],68:101},{37:[1,103]},{37:[2,56]},o($VE,[2,52],{60:104}),{33:$Vs,45:105,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},{65:[1,106]},{65:[2,64]},o($VF,[2,60],{67:107}),o($VC,[2,50]),{9:[1,109],37:[2,54],58:108},o($VE,[2,57]),o($VC,[2,58]),{9:[1,111],65:[2,62],66:110},o($VE,[2,53]),{59:112,62:$VD},o($VF,[2,61]),{33:$Vs,45:113,48:$Vt,49:$Vu,50:$Vv,51:88,52:89,53:$Vw,54:$Vx,55:$Vy,56:$Vz,63:$VA},o($VE,[2,51]),o($VF,[2,59])],\ndefaultActions: {2:[2,1],62:[2,2],76:[2,31],77:[2,32],97:[2,56],101:[2,64]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = new Error();\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShapeMap parser in the Jison parser generator format.\n  */\n\n  var ShapeMap = require(\"./ShapeMapSymbols\");\n\n  // Common namespaces and entities\n  var XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setSchemaBase` sets the base IRI to resolve relative IRIs.\n  Parser._setSchemaBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._schemaBase = baseIRI) {\n      Parser._schemaBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._schemaBaseRoot   = baseIRI[0];\n      Parser._schemaBaseScheme = baseIRI[1];\n    }\n  }\n  Parser._setDataBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._dataBase = baseIRI) {\n      Parser._dataBasePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._dataBaseRoot   = baseIRI[0];\n      Parser._dataBaseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveSchemaIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveSchemaIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._schemaBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._schemaBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._schemaBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._schemaBaseScheme : Parser._schemaBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._schemaBasePath + iri);\n    }\n    }\n  }\n  function _resolveDataIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._dataBase;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._dataBase + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._dataBase.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._dataBaseScheme : Parser._dataBaseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._dataBasePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  function obj() {\n    var ret = {  };\n    for (var i = 0; i < arguments.length; i+= 2) {\n      ret[arguments[i]] = arguments[i+1];\n    }\n    return ret;\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return obj(\"@value\", value, \"@type\", type );\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser.valueExprDefns = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._schemaBase = Parser._schemaBasePath = Parser._schemaBaseRoot = Parser._schemaBaseIRIScheme = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return obj(\"@value\", unescapeText(string, stringEscapeReplacements));\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, obj(\"@language\", lang.substr(1).toLowerCase()));\n  }\n\n  function error (msg) {\n    Parser.reset();\n    throw new Error(msg);\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefixes, prefix) {\n    if (!(prefix in prefixes))\n      error('Parse error; unknown prefix: ' + prefix);\n    return prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape) {\n    if (Parser.productions && label in Parser.productions)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.shapes)\n      Parser.shapes = {};\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.shapes[label] = shape;\n  }\n\n  // Add a production to the map\n  function addProduction (label, production) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(\"Structural error: \"+label+\" is a shape\");\n    if (!Parser.productions)\n      Parser.productions = {};\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(\"Parse error: \"+label+\" already defined\");\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function shapeJunction (type, container, elts) {\n    if (elts.length === 0) {\n      return container;\n    } else if (container.type === type) {\n      container.shapeExprs = container.shapeExprs.concat(elts);\n      return container;\n    } else {\n      return { type: type, shapeExprs: [container].concat(elts) };\n    }\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n\n  // <?INCLUDE from ShExUtil. Factor into `rdf-token` module? ?>\n  /**\n   * unescape numerics and allowed single-character escapes.\n   * throws: if there are any unallowed sequences\n   */\n  function unescapeText (string, replacements) {\n    var regex = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\(.)/g;\n    try {\n      string = string.replace(regex, function (sequence, unicode4, unicode8, escapedChar) {\n        var charCode;\n        if (unicode4) {\n          charCode = parseInt(unicode4, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          return String.fromCharCode(charCode);\n        }\n        else if (unicode8) {\n          charCode = parseInt(unicode8, 16);\n          if (isNaN(charCode)) throw new Error(); // can never happen (regex), but helps performance\n          if (charCode < 0xFFFF) return String.fromCharCode(charCode);\n          return String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n        }\n        else {\n          var replacement = replacements[escapedChar];\n          if (!replacement) throw new Error(\"no replacement found for '\" + escapedChar + \"'\");\n          return replacement;\n        }\n      });\n      return string;\n    }\n    catch (error) { console.warn(error); return ''; }\n  }\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 47;\nbreak;\ncase 2:return 62;\nbreak;\ncase 3:return 34;\nbreak;\ncase 4:return 29;\nbreak;\ncase 5:return 19;\nbreak;\ncase 6:return 25;\nbreak;\ncase 7:return 21;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 74;\nbreak;\ncase 10:return 81;\nbreak;\ncase 11:return 46;\nbreak;\ncase 12:return 82;\nbreak;\ncase 13:return 55;\nbreak;\ncase 14:return 54;\nbreak;\ncase 15:return 53;\nbreak;\ncase 16:return 80;\nbreak;\ncase 17:return 31;\nbreak;\ncase 18:return 77;\nbreak;\ncase 19:return 78;\nbreak;\ncase 20:return 76;\nbreak;\ncase 21:return 56;\nbreak;\ncase 22:return 79;\nbreak;\ncase 23:return 9;\nbreak;\ncase 24:return 33;\nbreak;\ncase 25:return 37;\nbreak;\ncase 26:return 16;\nbreak;\ncase 27:return 40;\nbreak;\ncase 28:return 41;\nbreak;\ncase 29:return 42;\nbreak;\ncase 30:return 43;\nbreak;\ncase 31:return 63;\nbreak;\ncase 32:return 65;\nbreak;\ncase 33:return 75;\nbreak;\ncase 34:return 39;\nbreak;\ncase 35:return 50;\nbreak;\ncase 36:return 48;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 4;\nbreak;\ncase 39:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 40:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(appinfo[\\u0020\\u000A\\u0009]+:))/,/^(?:(\"([^\\u0022\\u005C\\u000A\\u000D]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"[\\u0020\\u000A\\u0009]*:))/,/^(?:([Ff][Oo][Cc][Uu][Ss]))/,/^(?:([Ss][Tt][Aa][Rr][Tt]))/,/^(?:(@[Ss][Tt][Aa][Rr][Tt]))/,/^(?:([Ss][Pp][Aa][Rr][Qq][Ll]))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(appinfo:))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:a\\b)/,/^(?:,)/,/^(?:\\{)/,/^(?:\\})/,/^(?:@)/,/^(?:!)/,/^(?:\\?)/,/^(?:\\/)/,/^(?:\\$)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^\\^)/,/^(?:_\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShapeMapJison;\nexports.Parser = ShapeMapJison.Parser;\nexports.parse = function () { return ShapeMapJison.parse.apply(ShapeMapJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
    },
    {
      "id": 42,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/node_modules/hierarchy-closure/hierarchy-closure.js",
      "name": "../shex-core/node_modules/hierarchy-closure/hierarchy-closure.js",
      "index": 12,
      "index2": 9,
      "size": 2546,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
      "issuerId": 20,
      "issuerName": "../shex-core/lib/ShExUtil.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 20,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "name": "../shex-core/lib/ShExUtil.js",
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          }
        }
      ],
      "profile": {
        "factory": 134,
        "building": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 20,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExUtil.js",
          "module": "../shex-core/lib/ShExUtil.js",
          "moduleName": "../shex-core/lib/ShExUtil.js",
          "type": "cjs require",
          "userRequest": "hierarchy-closure",
          "loc": "6:18-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "var HierarchyClosure = (function () {\n  /** create a hierarchy object\n   * This object keeps track of direct children and parents as well as transitive children and parents.\n   */\n  function makeHierarchy () {\n    let roots = {}\n    let parents = {}\n    let children = {}\n    let holders = {}\n    return {\n      add: function (parent, child) {\n        if (// test if this is a novel entry.\n          (parent in children && children[parent].indexOf(child) !== -1)) {\n          return\n        }\n        let target = parent in holders\n          ? getNode(parent)\n          : (roots[parent] = getNode(parent)) // add new parents to roots.\n        let value = getNode(child)\n\n        target[child] = value\n        delete roots[child]\n\n        // // maintain hierarchy (direct and confusing)\n        // children[parent] = children[parent].concat(child, children[child])\n        // children[child].forEach(c => parents[c] = parents[c].concat(parent, parents[parent]))\n        // parents[child] = parents[child].concat(parent, parents[parent])\n        // parents[parent].forEach(p => children[p] = children[p].concat(child, children[child]))\n\n        // maintain hierarchy (generic and confusing)\n        updateClosure(children, parents, child, parent)\n        updateClosure(parents, children, parent, child)\n        function updateClosure (container, members, near, far) {\n          container[far] = container[far].filter(\n            e => /* e !== near && */ container[near].indexOf(e) === -1\n          ).concat(container[near].indexOf(near) === -1 ? [near] : [], container[near])\n          container[near].forEach(\n            n => (members[n] = members[n].filter(\n              e => e !== far && members[far].indexOf(e) === -1\n            ).concat(members[far].indexOf(far) === -1 ? [far] : [], members[far]))\n          )\n        }\n\n        function getNode (node) {\n          if (!(node in holders)) {\n            parents[node] = []\n            children[node] = []\n            holders[node] = {}\n          }\n          return holders[node]\n        }\n      },\n      roots: roots,\n      parents: parents,\n      children: children\n    }\n  }\n\n  function depthFirst (n, f, p) {\n    return Object.keys(n).reduce((ret, k) => {\n      return ret.concat(\n        depthFirst(n[k], f, k),\n        p ? f(k, p) : []) // outer invocation can have null parent\n    }, [])\n  }\n\n  return { create: makeHierarchy, depthFirst }\n})()\n\n/* istanbul ignore next */\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = HierarchyClosure\n}\n"
    },
    {
      "id": 43,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/support/isBufferBrowser.js",
      "name": "./node_modules/util/support/isBufferBrowser.js",
      "index": 15,
      "index2": 10,
      "size": 203,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
      "issuerId": 11,
      "issuerName": "./node_modules/util/util.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 21,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "name": "../shex-core/lib/ShExWriter.js",
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          }
        },
        {
          "id": 11,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "profile": {
            "factory": 61,
            "building": 19,
            "dependencies": 0
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 11,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "module": "./node_modules/util/util.js",
          "moduleName": "./node_modules/util/util.js",
          "type": "cjs require",
          "userRequest": "./support/isBuffer",
          "loc": "536:19-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}"
    },
    {
      "id": 44,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/node_modules/inherits/inherits_browser.js",
      "name": "./node_modules/util/node_modules/inherits/inherits_browser.js",
      "index": 16,
      "index2": 11,
      "size": 672,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
      "issuerId": 11,
      "issuerName": "./node_modules/util/util.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 21,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExWriter.js",
          "name": "../shex-core/lib/ShExWriter.js",
          "profile": {
            "factory": 97,
            "building": 215,
            "dependencies": 42
          }
        },
        {
          "id": 11,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "name": "./node_modules/util/util.js",
          "profile": {
            "factory": 61,
            "building": 19,
            "dependencies": 0
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 11,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util/util.js",
          "module": "./node_modules/util/util.js",
          "moduleName": "./node_modules/util/util.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "580:19-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n"
    },
    {
      "id": 45,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/ShExValidator.js",
      "name": "../shex-core/lib/ShExValidator.js",
      "index": 17,
      "index2": 16,
      "size": 47933,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "issuerId": 13,
      "issuerName": "../shex-core/shex-core.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 215,
        "dependencies": 42
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "module": "../shex-core/shex-core.js",
          "moduleName": "../shex-core/shex-core.js",
          "type": "cjs require",
          "userRequest": "./lib/ShExValidator",
          "loc": "4:16-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "/* ShExValidator - javascript module to validate a graph with respect to Shape Expressions\n *\n * Status: 1/2 tested, no known bugs.\n *\n * TODO:\n *   constraint violation reporting.\n */\n\nvar ShExValidator = (function () {\nvar UNBOUNDED = -1;\n\n// interface constants\nvar Start = { term: \"START\" }\nvar InterfaceOptions = {\n  \"or\": {\n    \"oneOf\": \"exactly one disjunct must pass\",\n    \"someOf\": \"one or more disjuncts must pass\",\n    \"firstOf\": \"disjunct evaluation stops after one passes\"\n  },\n  \"partition\": {\n    \"greedy\": \"each triple constraint consumes all triples matching predicate and object\",\n    \"exhaustive\": \"search all mappings of triples to triple constriant\"\n  }\n};\n\nvar VERBOSE = \"VERBOSE\" in process.env;\n// **ShExValidator** provides ShEx utility functions\n\nvar ProgramFlowError = { type: \"ProgramFlowError\", errors: { type: \"UntrackedError\" } };\n\nvar RdfTerm = require(\"./RdfTerm\");\nlet ShExUtil = require(\"./ShExUtil\");\n\nfunction getLexicalValue (term) {\n  return RdfTerm.isIRI(term) ? term :\n    RdfTerm.isLiteral(term) ? RdfTerm.getLiteralValue(term) :\n    term.substr(2); // bnodes start with \"_:\"\n}\n\n\nvar XSD = \"http://www.w3.org/2001/XMLSchema#\";\nvar integerDatatypes = [\n  XSD + \"integer\",\n  XSD + \"nonPositiveInteger\",\n  XSD + \"negativeInteger\",\n  XSD + \"long\",\n  XSD + \"int\",\n  XSD + \"short\",\n  XSD + \"byte\",\n  XSD + \"nonNegativeInteger\",\n  XSD + \"unsignedLong\",\n  XSD + \"unsignedInt\",\n  XSD + \"unsignedShort\",\n  XSD + \"unsignedByte\",\n  XSD + \"positiveInteger\"\n];\n\nvar decimalDatatypes = [\n  XSD + \"decimal\",\n].concat(integerDatatypes);\n\nvar numericDatatypes = [\n  XSD + \"float\",\n  XSD + \"double\"\n].concat(decimalDatatypes);\n\nvar numericParsers = {};\nnumericParsers[XSD + \"integer\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?[0-9]+$/))) {\n    parseError(\"illegal integer value '\" + label + \"'\");\n  }\n  return parseInt(label);\n};\nnumericParsers[XSD + \"decimal\"] = function (label, parseError) {\n  if (!(label.match(/^[+-]?(?:[0-9]*\\.[0-9]+|[0-9]+)$/))) { // XSD has no pattern for decimal?\n    parseError(\"illegal decimal value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nconst DECIMAL_REGEX = /^[+\\-]?(?:[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+)(?:[eE][+\\-]?[0-9]+)?$/;\nnumericParsers[XSD + \"float\"  ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) { // XSD has no pattern for float?\n    parseError(\"illegal float value '\" + label + \"'\");\n  }\n  return parseFloat(label);\n};\nnumericParsers[XSD + \"double\" ] = function (label, parseError) {\n  if (label === \"NaN\") return NaN;\n  if (label === \"INF\") return Infinity;\n  if (label === \"-INF\") return -Infinity;\n  if (!(label.match(DECIMAL_REGEX))) {\n    parseError(\"illegal double value '\" + label + \"'\");\n  }\n  return Number(label);\n};\n\ntestRange = function (value, datatype, parseError) {\n  const ranges = {\n    //    integer            -1 0 1 +1 | \"\" -1.0 +1.0 1e0 NaN INF\n    //    decimal            -1 0 1 +1 -1.0 +1.0 | \"\" 1e0 NaN INF\n    //    float              -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    double             -1 0 1 +1 -1.0 +1.0 1e0 1E0 NaN INF -INF | \"\" +INF\n    //    nonPositiveInteger -1 0 +0 -0 | 1 +1 1a a1\n    //    negativeInteger    -1 | 0 +0 -0 1\n    //    long               -1 0 1 +1 |\n    //    int                -1 0 1 +1 |\n    //    short              -32768 0 32767 | -32769 32768\n    //    byte               -128 0 127 | \"\" -129 128\n    //    nonNegativeInteger 0 -0 +0 1 +1 | -1\n    //    unsignedLong       0 1 | -1\n    //    unsignedInt        0 1 | -1\n    //    unsignedShort      0 65535 | -1 65536\n    //    unsignedByte       0 255 | -1 256\n    //    positiveInteger    1 | -1 0\n    //    string             \"\" \"a\" \"0\"\n    //    boolean            true false 0 1 | \"\" TRUE FALSE tRuE fAlSe -1 2 10 01\n    //    dateTime           \"2012-01-02T12:34:56.78Z\" | \"\" \"2012-01-02T\" \"2012-01-02\"\n    integer:            { min: -Infinity           , max: Infinity },\n    decimal:            { min: -Infinity           , max: Infinity },\n    float:              { min: -Infinity           , max: Infinity },\n    double:             { min: -Infinity           , max: Infinity },\n    nonPositiveInteger: { min: -Infinity           , max: 0        },\n    negativeInteger:    { min: -Infinity           , max: -1       },\n    long:               { min: -9223372036854775808, max: 9223372036854775807 },\n    int:                { min: -2147483648         , max: 2147483647 },\n    short:              { min: -32768              , max: 32767    },\n    byte:               { min: -128                , max: 127      },\n    nonNegativeInteger: { min: 0                   , max: Infinity },\n    unsignedLong:       { min: 0                   , max: 18446744073709551615 },\n    unsignedInt:        { min: 0                   , max: 4294967295 },\n    unsignedShort:      { min: 0                   , max: 65535    },\n    unsignedByte:       { min: 0                   , max: 255      },\n    positiveInteger:    { min: 1                   , max: Infinity }\n  }\n  var parms = ranges[datatype.substr(XSD.length)];\n  if (!parms) throw Error(\"unexpected datatype: \" + datatype);\n  if (value < parms.min) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is less than the min:\", parms.min);\n  } else if (value > parms.max) {\n    parseError(\"\\\"\" + value + \"\\\"^^<\" + datatype + \"> is greater than the max:\", parms.min);\n  }\n};\n\n/*\nfunction intSubType (spec, label, parseError) {\n  var ret = numericParsers[XSD + \"integer\"](label, parseError);\n  if (\"min\" in spec && ret < spec.min)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be < \" + spec.min);\n  if (\"max\" in spec && ret > spec.max)\n    parseError(\"illegal \" + XSD + spec.type + \" value '\" + label + \"' should not be > \" + spec.max);\n  return ret;\n}\n[{type: \"nonPositiveInteger\", max: 0},\n {type: \"negativeInteger\", max: -1},\n {type: \"long\", min: -9223372036854775808, max: 9223372036854775807}, // beyond IEEE double\n {type: \"int\", min: -2147483648, max: 2147483647},\n {type: \"short\", min: -32768, max: 32767},\n {type: \"byte\", min: -128, max: 127},\n {type: \"nonNegativeInteger\", min: 0},\n {type: \"unsignedLong\", min: 0, max: 18446744073709551615},\n {type: \"unsignedInt\", min: 0, max: 4294967295},\n {type: \"unsignedShort\", min: 0, max: 65535},\n {type: \"unsignedByte\", min: 0, max: 255},\n {type: \"positiveInteger\", min: 1}].forEach(function (i) {\n   numericParsers[XSD + i.type ] = function (label, parseError) {\n     return intSubType(i, label, parseError);\n   };\n });\n*/\n\nvar stringTests = {\n  length   : function (v, l) { return v.length === l; },\n  minlength: function (v, l) { return v.length  >= l; },\n  maxlength: function (v, l) { return v.length  <= l; }\n};\n\nvar numericValueTests = {\n  mininclusive  : function (n, m) { return n >= m; },\n  minexclusive  : function (n, m) { return n >  m; },\n  maxinclusive  : function (n, m) { return n <= m; },\n  maxexclusive  : function (n, m) { return n <  m; }\n};\n\nvar decimalLexicalTests = {\n  totaldigits   : function (v, d) {\n    var m = v.match(/[0-9]/g);\n    return m && m.length <= d;\n  },\n  fractiondigits: function (v, d) {\n    var m = v.match(/^[+-]?[0-9]*\\.?([0-9]*)$/);\n    return m && m[1].length <= d;\n  }\n};\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n\n    function isTerm (t) {\n      return typeof t !== \"object\" || \"value\" in t && Object.keys(t).reduce((r, k) => {\n        return r === false ? r : [\"value\", \"type\", \"language\"].indexOf(k) !== -1;\n      }, true);\n    }\n\n/* ShExValidator_constructor - construct an object for validating a schema.\n *\n * schema: a structure produced by a ShEx parser or equivalent.\n * options: object with controls for\n *   lax(true): boolean: whine about missing types in schema.\n *   diagnose(false): boolean: makde validate return a structure with errors.\n */\nfunction ShExValidator_constructor(schema, options) {\n  if (!(this instanceof ShExValidator_constructor))\n    return new ShExValidator_constructor(schema, options);\n  let index = schema._index || ShExUtil.index(schema)\n  this.type = \"ShExValidator\";\n  options = options || {};\n  this.options = options;\n  this.options.or = this.options.or || \"someOf\";\n  this.options.partition = this.options.partition || \"exhaustive\";\n  if (!(\"noCache\" in options && options.noCache))\n    this.known = {};\n\n  var _ShExValidator = this;\n  this.schema = schema;\n  this._expect = this.options.lax ? noop : expect; // report errors on missing types.\n  this._optimize = {}; // optimizations:\n    // hasRepeatedGroups: whether there are patterns like (:p1 ., :p2 .)*\n  this.reset = function () {  }; // included in case we need it later.\n  // var regexModule = this.options.regexModule || require(\"../lib/regex/nfax-val-1err\");\n  var regexModule = this.options.regexModule || require(\"../lib/regex/threaded-val-nerr\");\n\n  /* getAST - compile a traditional regular expression abstract syntax tree.\n   * Tested but not used at present.\n   */\n  this.getAST = function () {\n    return {\n      type: \"AST\",\n      shapes: schema.shapes.reduce(function (ret, shape) {\n        ret[shape.id] = {\n          type: \"ASTshape\",\n          expression: _compileShapeToAST(shape.expression, [], _ShExValidator.schema)\n        };\n        return ret;\n      }, {})\n    };\n  };\n\n  /* indexTripleConstraints - compile regular expression and index triple constraints\n   */\n  this.indexTripleConstraints = function (expression) {\n    // list of triple constraints from (:p1 ., (:p2 . | :p3 .))\n    var tripleConstraints = [];\n\n    if (expression)\n      indexTripleConstraints_dive(expression);\n    return tripleConstraints;\n\n    function indexTripleConstraints_dive (expr) {\n      if (typeof expr === \"string\") // Inclusion\n        indexTripleConstraints_dive(index.tripleExprs[expr]);\n\n      else if (expr.type === \"TripleConstraint\")\n        tripleConstraints.push(expr)-1;\n\n      else if (expr.type === \"OneOf\" || expr.type === \"EachOf\")\n        expr.expressions.forEach(function (nested) {\n          indexTripleConstraints_dive(nested);\n        });\n\n      // @@TODO shape.virtual, shape.inherit\n      else\n        runtimeError(\"unexpected expr type: \" + expr.type);\n    };\n  };\n\n  /* emptyTracker - a tracker that does nothing\n   */\n  this.emptyTracker = function () {\n    var noop = x => x;\n    return {\n      recurse: noop,\n      known: noop,\n      enter: function (point, label) { ++this.depth; },\n      exit: function (point, label, ret) { --this.depth; },\n      depth: 0\n    };\n  };\n\n  /* validate - test point in db against the schema for labelOrShape\n   * depth: level of recurssion; for logging.\n   */\n  this.validate = function (db, point, label, tracker, seen) {\n    // default to schema's start shape\n    if (typeof point === \"object\" && \"termType\" in point) {\n      point = RdfTerm.internalTerm(point)\n    }\n    if (typeof point === \"object\") {\n      var shapeMap = point;\n      if (this.options.results === \"api\") {\n        return shapeMap.map(pair => {\n          var time = new Date();\n          var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n          time = new Date() - time;\n          return {\n            node: pair.node,\n            shape: pair.shape,\n            status: \"errors\" in res ? \"nonconformant\" : \"conformant\",\n            appinfo: res,\n            elapsed: time\n          };\n        });\n      }\n      var results = shapeMap.reduce((ret, pair) => {\n        var res = this.validate(db, pair.node, pair.shape, label, tracker); // really tracker and seen\n        return \"errors\" in res ?\n          { passes: ret.passes, failures: ret.failures.concat(res) } :\n          { passes: ret.passes.concat(res), failures: ret.failures } ;\n      }, {passes: [], failures: []});\n      if (false && this.options.results === \"api\") {\n        var ret = {};\n        function _add (n, s, r) {\n          if (!(n in ret)) {\n            ret[n] = [{shape: s, result: r}];\n            return;\n          }\n          if (ret[n].filter(p => { return p.shape === s; }))\n            return;\n          ret[n].push({shape: s, results: r});\n        }\n        results.passes.forEach(p => { _add(p.node, p.shape, true); });\n        results.failures.forEach(p => { _add(p.node, p.shape, false); });\n        return ret;\n      }\n      if (results.failures.length) {\n        return results.failures.length !== 1 ?\n          { type: \"FailureList\", errors: results.failures } :\n          results.failures [0];\n      } else {\n        return results.passes.length !== 1 ?\n          { type: \"SolutionList\", solutions: results.passes } :\n          results.passes [0];\n      }\n    }\n\n    var outside = tracker === undefined;\n    // logging stuff\n    if (!tracker)\n      tracker = this.emptyTracker();\n    if (!label || label === Start) {\n      if (!schema.start)\n        runtimeError(\"start production not defined\");\n    }\n\n    var shape = null;\n    if (label == Start) {\n      shape = schema.start;\n    } else if (!(\"shapes\" in this.schema) || this.schema.shapes.length === 0) {\n      runtimeError(\"shape \" + label + \" not found; no shapes in schema\");\n    } else if (label in index.shapeExprs) {\n      shape = index.shapeExprs[label]\n    } else {\n      runtimeError(\"shape \" + label + \" not found in:\\n\" + Object.keys(index.shapeExprs || []).map(s => \"  \" + s).join(\"\\n\"));\n    }\n\n    if (seen === undefined)\n      seen = {};\n    var seenKey = point + \"@\" + (label === Start ? \"_: -start-\" : label);\n    if (seenKey in seen)\n      return tracker.recurse({\n        type: \"Recursion\",\n        node: ldify(point),\n        shape: label\n      });\n    if (\"known\" in this && seenKey in this.known)\n      return tracker.known(this.known[seenKey]);\n    seen[seenKey] = { point: point, shape: label };\n    tracker.enter(point, label);\n    var ret = this._validateShapeExpr(db, point, shape, label, tracker, seen);\n    tracker.exit(point, label, ret);\n    delete seen[seenKey];\n    if (\"known\" in this)\n      this.known[seenKey] = ret;\n    if (\"startActs\" in schema && outside) {\n      ret.startActs = schema.startActs;\n    }\n    return ret;\n  }\n\n  this._validateShapeExpr = function (db, point, shapeExpr, shapeLabel, tracker, seen) {\n    if (point === \"\")\n      throw Error(\"validation needs a valid focus node\");\n    if (typeof shapeExpr === \"string\") { // ShapeRef\n      return this._validateShapeExpr(db, point, index.shapeExprs[shapeExpr], shapeExpr, tracker, seen);\n    } else if (shapeExpr.type === \"NodeConstraint\") {\n      var errors = this._errorsMatchingNodeConstraint(point, shapeExpr, null);\n      return errors.length ? {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors.map(function (error) {\n          return {\n            type: \"NodeConstraintViolation\",\n            shapeExpr: shapeExpr,\n            error: error\n          };\n        })\n      } : {\n        type: \"NodeTest\",\n        node: ldify(point),\n        shape: shapeLabel,\n        shapeExpr: shapeExpr\n      };\n    } else if (shapeExpr.type === \"Shape\") {\n      return this._validateShape(db, point, regexModule.compile(schema, shapeExpr, index),\n                                 shapeExpr, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeExternal\") {\n      return this.options.validateExtern(db, point, shapeLabel, tracker, seen);\n    } else if (shapeExpr.type === \"ShapeOr\") {\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          return { type: \"ShapeOrResults\", solution: sub };\n      }\n      return { type: \"ShapeOrFailure\", errors: errors };\n    } else if (shapeExpr.type === \"ShapeNot\") {\n      var sub = this._validateShapeExpr(db, point, shapeExpr.shapeExpr, shapeLabel, tracker, seen);\n      if (\"errors\" in sub)\n          return { type: \"ShapeNotResults\", solution: sub };\n        else\n          return { type: \"ShapeNotFailure\", errors: sub };\n    } else if (shapeExpr.type === \"ShapeAnd\") {\n      var passes = [];\n      var errors = [];\n      for (var i = 0; i < shapeExpr.shapeExprs.length; ++i) {\n        var nested = shapeExpr.shapeExprs[i];\n        var sub = this._validateShapeExpr(db, point, nested, shapeLabel, tracker, seen);\n        if (\"errors\" in sub)\n          errors.push(sub);\n        else\n          passes.push(sub);\n      }\n      if (errors.length > 0) {\n        return  { type: \"ShapeAndFailure\", errors: errors};\n      }\n      return { type: \"ShapeAndResults\", solutions: passes };\n    } else\n      throw Error(\"expected one of Shape{Ref,And,Or} or NodeConstraint, got \" + JSON.stringify(shapeExpr));\n  }\n\n  this._validateShape = function (db, point, regexEngine, shape, shapeLabel, tracker, seen) {\n    var _ShExValidator = this;\n\n    var ret = null;\n    var startAcionStorage = {}; // !!! need test to see this write to results structure.\n    if (\"startActs\" in schema) {\n      const semActErrors = this.semActHandler.dispatchAll(schema.startActs, null, startAcionStorage)\n      if (semActErrors.length)\n        return {\n          type: \"Failure\",\n          node: ldify(point),\n          shape: shapeLabel,\n          errors: semActErrors\n        }; // some semAct aborted !! return real error\n    }\n    // @@ add to tracker: f(\"validating <\" + point + \"> as <\" + shapeLabel + \">\");\n\n    var fromDB  = db.getNeighborhood(point, shapeLabel, shape);\n    var outgoing = indexNeighborhood(fromDB.outgoing.sort(\n      (l, r) => sparqlOrder(l.object, r.object)\n    ));\n    var incoming = indexNeighborhood(fromDB.incoming.sort(\n      (l, r) => sparqlOrder(l.subject, r.subject)\n    ));\n    var outgoingLength = fromDB.outgoing.length;\n    var neighborhood = fromDB.outgoing.concat(fromDB.incoming);\n\n    var constraintList = this.indexTripleConstraints(shape.expression);\n    var tripleList = constraintList.reduce(function (ret, constraint, ord) {\n\n      // subject and object depend on direction of constraint.\n      var searchSubject = constraint.inverse ? null : point;\n      var searchObject = constraint.inverse ? point : null;\n      var index = constraint.inverse ? incoming : outgoing;\n\n      // get triples matching predciate\n      var matchPredicate = index.byPredicate[constraint.predicate] ||\n        []; // empty list when no triple matches that constraint\n\n      function _errorsByShapeLabel (focus, shapeLabel) {\n        var sub = _ShExValidator.validate(db, focus, shapeLabel, tracker, seen);\n        return \"errors\" in sub ? sub.errors : [];\n      }\n      function _errorsByShapeExpr (focus, shapeExpr) {\n        var sub = _ShExValidator._validateShapeExpr(db, focus, shapeExpr, shapeLabel, tracker, seen);\n        return \"errors\" in sub ? sub.errors : [];\n      }\n      // strip to triples matching value constraints (apart from @<someShape>)\n      var matchConstraints = _ShExValidator._triplesMatchingShapeExpr(\n        matchPredicate,\n        constraint.valueExpr,\n        constraint.inverse,\n        /* _ShExValidator.options.partition === \"exhaustive\" ? undefined : */ _errorsByShapeLabel,\n        /* _ShExValidator.options.partition === \"exhaustive\" ? undefined : */ _errorsByShapeExpr\n      );\n\n      matchConstraints.hits.forEach(function (t) {\n        ret.constraintList[neighborhood.indexOf(t)].push(ord);\n      });\n      matchConstraints.misses.forEach(function (t) {\n        ret.misses[neighborhood.indexOf(t.triple)] = {constraintNo: ord, errors: t.errors};\n      });\n      return ret;\n    }, { misses: {}, constraintList:_seq(neighborhood.length).map(function () { return []; }) }); // start with [[],[]...]\n\n    // @@ add to tracker: f(\"constraints by triple: \", JSON.stringify(tripleList.constraintList));\n\n    var extras = []; // triples accounted for by EXTRA\n    var misses = tripleList.constraintList.reduce(function (ret, constraints, ord) {\n      if (constraints.length === 0 &&                       // matches no constraints\n          ord < outgoingLength &&                           // not an incoming triple\n          ord in tripleList.misses) {                       // predicate matched some constraint(s)\n        if (shape.extra !== undefined &&\n            shape.extra.indexOf(neighborhood[ord].predicate) !== -1) {\n          extras.push(ord);\n        } else {                                            // not declared extra\n          ret.push({                                        // so it's a missed triple.\n            tripleNo: ord,\n            constraintNo: tripleList.misses[ord].constraintNo,\n            errors: tripleList.misses[ord].errors\n          });\n        }\n      }\n      return ret;\n    }, []);\n\n    var xp = crossProduct(tripleList.constraintList);\n    var partitionErrors = [];\n    while ((misses.length === 0 || this.options.partition !== \"greedy\") && xp.next() && ret === null) {\n      // caution: early continues\n\n      var usedTriples = []; // [{s1,p1,o1},{s2,p2,o2}] implicated triples -- used for messages\n      var constraintMatchCount = // [2,1,0,1] how many triples matched a constraint\n        _seq(neighborhood.length).map(function () { return 0; });\n      var tripleToConstraintMapping = xp.get(); // [0,1,0,3] mapping from triple to constraint\n\n      // Triples not mapped to triple constraints are not allowed in closed shapes.\n      if (shape.closed) {\n        var unexpectedTriples = neighborhood.slice(0, outgoingLength).filter((t, i) => {\n          return tripleToConstraintMapping[i] === undefined && // didn't match a constraint\n          extras.indexOf(i) === -1; // wasn't in EXTRAs.\n        });\n        if (unexpectedTriples.length > 0) {\n          partitionErrors.push({\n            errors: [\n              {\n                type: \"ClosedShapeViolation\",\n                unexpectedTriples: unexpectedTriples\n              }\n            ]\n          });\n          continue; // closed shape violation.\n        }\n      }\n\n      // Set usedTriples and constraintMatchCount.\n      tripleToConstraintMapping.forEach(function (tpNumber, ord) {\n        if (tpNumber !== undefined) {\n          usedTriples.push(neighborhood[ord]);\n          ++constraintMatchCount[tpNumber];\n        }\n      });\n\n      // Pivot to triples by constraint.\n      function _constraintToTriples () {\n        var cll = constraintList.length;\n        return tripleToConstraintMapping.slice().\n          reduce(function (ret, c, ord) {\n            if (c !== undefined)\n              ret[c].push(ord);\n            return ret;\n          }, _seq(cll).map(function () { return []; }));\n      }\n\n      tripleToConstraintMapping.slice().sort(function (a,b) { return a-b; }).filter(function (i) { // sort constraint numbers\n        return i !== undefined;\n      }).map(function (n) { return n + \" \"; }).join(\"\"); // e.g. 0 0 1 3\n\n      function _recurse (point, shapeLabel) {\n        return _ShExValidator.validate(db, point, shapeLabel, tracker, seen);\n      }\n      function _direct (point, shapeExpr) {\n        return _ShExValidator._validateShapeExpr(db, point, shapeExpr, shapeLabel, tracker, seen);\n      }\n      function _testExpr (term, valueExpr, recurse, direct) {\n        return _ShExValidator._errorsMatchingShapeExpr(term, valueExpr, recurse, direct)\n      }\n      var results = regexEngine.match(db, point, constraintList, _constraintToTriples(), tripleToConstraintMapping, neighborhood, _recurse, _direct, this.semActHandler, _testExpr, null);\n      if (false) {// testing parity between two engines\n        var nfa = require(\"../lib/regex/nfax-val-1err\").compile(schema, shape);\n        var fromNFA = nfa.match(db, point, constraintList, _constraintToTriples(), tripleToConstraintMapping, neighborhood, _recurse, this.semActHandler, _testExpr, null);\n        if (\"errors\" in fromNFA !== \"errors\" in results)\n          { throw Error(JSON.stringify(results) + \" vs \" + JSON.stringify(fromNFA)); }\n      }\n      if (\"errors\" in results) {\n        partitionErrors.push({\n          errors: results.errors\n        });\n        if (_ShExValidator.options.partition !== \"exhaustive\")\n          break;\n        else\n          continue;\n      }\n\n      // @@ add to tracker: f(\"post-regexp \" + usedTriples.join(\" \"));\n\n      var possibleRet = { type: \"ShapeTest\", node: ldify(point), shape: shapeLabel };\n      if (Object.keys(results).length > 0) // only include .solution for non-empty pattern\n        possibleRet.solution = results;\n      if (\"semActs\" in shape) {\n        const semActErrors = this.semActHandler.dispatchAll(shape.semActs, results, possibleRet)\n        if (semActErrors.length) {\n          // some semAct aborted\n          partitionErrors.push({\n            errors: semActErrors\n          });\n          if (_ShExValidator.options.partition !== \"exhaustive\")\n            break;\n          else\n            continue;\n        }\n      }\n      // @@ add to tracker: f(\"final \" + usedTriples.join(\" \"));\n\n      ret = possibleRet;\n      partitionErrors = [];\n      // alts.push(tripleToConstraintMapping);\n    }\n    var missErrors = misses.map(function (miss) {\n      var t = neighborhood[miss.tripleNo];\n      return {\n        type: \"TypeMismatch\",\n        triple: {type: \"TestedTriple\", subject: t.subject, predicate: t.predicate, object: ldify(t.object)},\n        constraint: constraintList[miss.constraintNo],\n        errors: miss.errors\n      };\n    });\n    let errors = missErrors.concat(partitionErrors.length === 1 ? partitionErrors[0].errors : partitionErrors);\n    if (errors.length > 0) {\n      ret = {\n        type: \"Failure\",\n        node: ldify(point),\n        shape: shapeLabel,\n        errors: errors\n      };\n    }\n\n    if (VERBOSE) { // remove N3jsTripleToString\n      neighborhood.forEach(function (t) {\n        delete t.toString;\n      });\n    }\n    // @@ add to tracker: f(\"</\" + shapeLabel + \">\");\n    return addShapeAttributes(ret);\n\n    function addShapeAttributes (ret) {\n      if (\"annotations\" in shape)\n        ret.annotations = shape.annotations;\n      return ret;\n    }\n  };\n\n  this._triplesMatchingShapeExpr = function (triples, valueExpr, inverse, recurse, direct) {\n    var _ShExValidator = this;\n    var misses = [];\n    var hits = [];\n    triples.forEach(function (triple) {\n      var value = inverse ? triple.subject : triple.object;\n      var errors = valueExpr === undefined ?\n          [] :\n          _ShExValidator._errorsMatchingShapeExpr(value, valueExpr, recurse, direct);\n      if (errors.length === 0) {\n        hits.push(triple);\n      } else if (hits.indexOf(triple) === -1) {\n        misses.push({triple: triple, errors: errors});\n      }\n    });\n    return { hits: hits, misses: misses };\n  }\n  this._errorsMatchingShapeExpr = function (value, valueExpr, recurse, direct) {\n    var _ShExValidator = this;\n    if (typeof valueExpr === \"string\") { // ShapeRef\n      return recurse ? recurse(value, valueExpr) : [];\n    } else if (valueExpr.type === \"NodeConstraint\") {\n      return this._errorsMatchingNodeConstraint(value, valueExpr, null);\n    } else if (valueExpr.type === \"Shape\") {\n      return direct === undefined ? [] : direct(value, valueExpr);\n    } else if (valueExpr.type === \"ShapeOr\") {\n      var ret = [];\n      for (var i = 0; i < valueExpr.shapeExprs.length; ++i) {\n        var nested = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExprs[i], recurse, direct);\n        if (nested.length === 0)\n          return nested;\n        ret = ret.concat(nested);\n      }\n      return ret;\n    } else if (valueExpr.type === \"ShapeAnd\") {\n      return valueExpr.shapeExprs.reduce(function (ret, nested, iter) {\n        return ret.concat(_ShExValidator._errorsMatchingShapeExpr(value, nested, recurse, direct, true));\n      }, []);\n    } else if (valueExpr.type === \"ShapeNot\") {\n      var ret = _ShExValidator._errorsMatchingShapeExpr(value, valueExpr.shapeExpr, recurse, direct, true);\n      return ret.length ?\n        [] :\n        [\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": expected NOT to pass\"];\n    } else {\n      throw Error(\"unknown value expression type '\" + valueExpr.type + \"'\");\n    }\n  };\n\n  /* _errorsMatchingNodeConstraint - return whether the value matches the value\n   * expression without checking shape references.\n   */\n  this._errorsMatchingNodeConstraint = function (value, valueExpr, recurse) {\n    var errors = [];\n    var label = RdfTerm.isLiteral(value) ? RdfTerm.getLiteralValue(value) :\n      RdfTerm.isBlank(value) ? value.substring(2) :\n      value;\n    var dt = RdfTerm.isLiteral(value) ? RdfTerm.getLiteralType(value) : null;\n    var numeric = integerDatatypes.indexOf(dt) !== -1 ? XSD + \"integer\" : numericDatatypes.indexOf(dt) !== -1 ? dt : undefined;\n\n    function validationError () {\n      var errorStr = Array.prototype.join.call(arguments, \"\");\n      errors.push(\"Error validating \" + value + \" as \" + JSON.stringify(valueExpr) + \": \" + errorStr);\n      return false;\n    }\n    // if (negated) ;\n    if (false) {\n      // wildcard -- ignore\n    } else {\n      if (\"nodeKind\" in valueExpr) {\n        if ([\"iri\", \"bnode\", \"literal\", \"nonliteral\"].indexOf(valueExpr.nodeKind) === -1) {\n          validationError(\"unknown node kind '\" + valueExpr.nodeKind + \"'\");\n        }\n        if (RdfTerm.isBlank(value)) {\n          if (valueExpr.nodeKind === \"iri\" || valueExpr.nodeKind === \"literal\") {\n            validationError(\"blank node found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (RdfTerm.isLiteral(value)) {\n          if (valueExpr.nodeKind !== \"literal\") {\n            validationError(\"literal found when \" + valueExpr.nodeKind + \" expected\");\n          }\n        } else if (valueExpr.nodeKind === \"bnode\" || valueExpr.nodeKind === \"literal\") {\n          validationError(\"iri found when \" + valueExpr.nodeKind + \" expected\");\n        }\n      }\n\n      if (valueExpr.datatype  && valueExpr.values  ) validationError(\"found both datatype and values in \"   +tripleConstraint);\n\n      if (valueExpr.datatype) {\n        if (!RdfTerm.isLiteral(value)) {\n          validationError(\"mismatched datatype: \" + value + \" is not a literal with datatype \" + valueExpr.datatype);\n        }\n        else if (RdfTerm.getLiteralType(value) !== valueExpr.datatype) {\n          validationError(\"mismatched datatype: \" + RdfTerm.getLiteralType(value) + \" !== \" + valueExpr.datatype);\n        }\n        else if (numeric) {\n          testRange(numericParsers[numeric](label, validationError), valueExpr.datatype, validationError);\n        }\n        else if (valueExpr.datatype === XSD + \"boolean\") {\n          if (label !== \"true\" && label !== \"false\" && label !== \"1\" && label !== \"0\")\n            validationError(\"illegal boolean value: \" + label);\n        }\n        else if (valueExpr.datatype === XSD + \"dateTime\") {\n          if (!label.match(/^[+-]?\\d{4}-[01]\\d-[0-3]\\dT[0-5]\\d:[0-5]\\d:[0-5]\\d(\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?$/))\n            validationError(\"illegal dateTime value: \" + label);\n        }\n      }\n\n      if (valueExpr.values) {\n        if (RdfTerm.isLiteral(value) && valueExpr.values.reduce((ret, v) => {\n          if (ret) return true;\n          var ld = ldify(value);\n          if (v.type === \"Language\") {\n            return v.languageTag === ld.language; // @@ use equals/normalizeTest\n          }\n          if (!(typeof v === \"object\" && \"value\" in v))\n            return false;\n          return v.value === ld.value &&\n            v.type === ld.type &&\n            v.language === ld.language;\n        }, false)) {\n          // literal match\n        } else if (valueExpr.values.indexOf(value) !== -1) {\n          // trivial match\n        } else {\n          if (!(valueExpr.values.some(function (valueConstraint) {\n            if (typeof valueConstraint === \"object\" && !(\"value\" in valueConstraint)) { // isTerm me -- strike \"value\" in\n              if (!(\"type\" in valueConstraint))\n                runtimeError(\"expected \"+JSON.stringify(valueConstraint)+\" to have a 'type' attribute.\");\n              var stemRangeTypes = [\n                \"Language\",\n                \"IriStem\",      \"LiteralStem\",      \"LanguageStem\",\n                \"IriStemRange\", \"LiteralStemRange\", \"LanguageStemRange\"\n              ];\n              if (stemRangeTypes.indexOf(valueConstraint.type) === -1)\n                runtimeError(\"expected type attribute '\"+valueConstraint.type+\"' to be in '\"+stemRangeTypes+\"'.\");\n\n              /* expect N3.js literals with {Literal,Language}StemRange\n               *       or non-literals with IriStemRange\n               */\n              function normalizedTest (val, ref, func) {\n                if (RdfTerm.isLiteral(val)) {\n                  if ([\"LiteralStem\", \"LiteralStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(RdfTerm.getLiteralValue(val), ref);\n                  } else if ([\"LanguageStem\", \"LanguageStemRange\"].indexOf(valueConstraint.type) !== -1) {\n                    return func(RdfTerm.getLiteralLanguage(val) || null, ref);\n                  } else {\n                    return validationError(\"literal \" + val + \" not comparable with non-literal \" + ref);\n                  }\n                } else {\n                  if ([\"IriStem\", \"IriStemRange\"].indexOf(valueConstraint.type) === -1) {\n                    return validationError(\"nonliteral \" + val + \" not comparable with literal \" + JSON.stringify(ref));\n                  } else {\n                    return func(val, ref);\n                  }\n                }\n              }\n              function startsWith (val, ref) {\n                return normalizedTest(val, ref, (l, r) => {\n                  return (valueConstraint.type === \"LanguageStem\" ||\n                          valueConstraint.type === \"LanguageStemRange\") ?\n                    // rfc4647 basic filtering\n                    l !== null && (l === r || r === \"\" || l[r.length] === \"-\") :\n                    // simple substring\n                    l.startsWith(r);\n                });\n              }\n              function equals (val, ref) {\n                return normalizedTest(val, ref, (l, r) => { return l === r; });\n              }\n\n              if (!isTerm(valueConstraint.stem)) {\n                expect(valueConstraint.stem, \"type\", \"Wildcard\");\n                // match whatever but check exclusions below\n              } else {\n                if (!(startsWith(value, valueConstraint.stem))) {\n                  return false;\n                }\n              }\n              if (valueConstraint.exclusions) {\n                return !valueConstraint.exclusions.some(function (c) {\n                  if (!isTerm(c)) {\n                    if (!(\"type\" in c))\n                      runtimeError(\"expected \"+JSON.stringify(c)+\" to have a 'type' attribute.\");\n                    var stemTypes = [\"IriStem\", \"LiteralStem\", \"LanguageStem\"];\n                    if (stemTypes.indexOf(c.type) === -1)\n                      runtimeError(\"expected type attribute '\"+c.type+\"' to be in '\"+stemTypes+\"'.\");\n                    return startsWith(value, c.stem);\n                  } else {\n                    return equals(value, c);\n                  }\n                });\n              }\n              return true;\n            } else {\n              // ignore -- would have caught it above\n            }\n          }))) {\n            validationError(\"value \" + value + \" not found in set \" + JSON.stringify(valueExpr.values));\n          }\n        }\n      }\n    }\n\n    if (\"pattern\" in valueExpr) {\n      var regexp = \"flags\" in valueExpr ?\n\t  new RegExp(valueExpr.pattern, valueExpr.flags) :\n\t  new RegExp(valueExpr.pattern);\n      if (!(getLexicalValue(value).match(regexp)))\n        validationError(\"value \" + getLexicalValue(value) + \" did not match pattern \" + valueExpr.pattern);\n    }\n\n    Object.keys(stringTests).forEach(function (test) {\n      if (test in valueExpr && !stringTests[test](label, valueExpr[test])) {\n        validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n      }\n    });\n\n    Object.keys(numericValueTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric) {\n          if (!numericValueTests[test](numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n\n    Object.keys(decimalLexicalTests).forEach(function (test) {\n      if (test in valueExpr) {\n        if (numeric === XSD + \"integer\" || numeric === XSD + \"decimal\") {\n          if (!decimalLexicalTests[test](\"\"+numericParsers[numeric](label, validationError), valueExpr[test])) {\n            validationError(\"facet violation: expected \" + test + \" of \" + valueExpr[test] + \" but got \" + value);\n          }\n        } else {\n          validationError(\"facet violation: numeric facet \" + test + \" can't apply to \" + value);\n        }\n      }\n    });\n    return errors;\n  };\n\n  this.semActHandler = {\n    handlers: { },\n    results: { },\n    /**\n     * Store a semantic action handler.\n     *\n     * @param {string} name - semantic action's URL.\n     * @param {object} handler - handler function.\n     *\n     * The handler object has a dispatch function is invoked with:\n     * @param {string} code - text of the semantic action.\n     * @param {object} ctx - matched triple or results subset.\n     * @param {object} extensionStorage - place where the extension writes into the result structure.\n     * @return {bool} false if the extension failed or did not accept the ctx object.\n     */\n    register: function (name, handler) {\n      this.handlers[name] = handler;\n    },\n    /**\n     * Calls all semantic actions, allowing each to write to resultsArtifact.\n     *\n     * @param {array} semActs - list of semantic actions to invoke.\n     * @return {bool} false if any result was false.\n     */\n    dispatchAll: function (semActs, ctx, resultsArtifact) {\n      var _semActHanlder = this;\n      return semActs.reduce(function (ret, semAct) {\n        if (ret.length === 0 && semAct.name in _semActHanlder.handlers) {\n          var code = \"code\" in semAct ? semAct.code : _ShExValidator.options.semActs[semAct.name];\n          var existing = \"extensions\" in resultsArtifact && semAct.name in resultsArtifact.extensions;\n          var extensionStorage = existing ? resultsArtifact.extensions[semAct.name] : {};\n          const response = _semActHanlder.handlers[semAct.name].dispatch(code, ctx, extensionStorage); debugger\n          if (typeof response === 'boolean') {\n            if (!response)\n              ret.push({ type: \"SemActFailure\", errors: [{ type: \"BooleanSemActFailure\", code: code, ctx }] })\n          } else if (typeof response === 'object' && response.constructor === Array) {\n            if (response.length > 0)\n              ret.push({ type: \"SemActFailure\", errors: response })\n          } else {\n            throw Error(\"unsupported response from semantic action handler: \" + JSON.stringify(response))\n          }\n          if (!existing && Object.keys(extensionStorage).length > 0) {\n            if (!(\"extensions\" in resultsArtifact))\n              resultsArtifact.extensions = {};\n            resultsArtifact.extensions[semAct.name] = extensionStorage;\n          }\n          return ret;\n        }\n        return ret;\n      }, []);\n    }\n  };\n}\n\n/* _compileShapeToAST - compile a shape expression to an abstract syntax tree.\n *\n * currently tested but not used.\n */\nfunction _compileShapeToAST (expression, tripleConstraints, schema) {\n\n  function Epsilon () {\n    this.type = \"Epsilon\";\n  }\n\n  function TripleConstraint (ordinal, predicate, inverse, negated, valueExpr) {\n    this.type = \"TripleConstraint\";\n    // this.ordinal = ordinal; @@ does 1card25\n    this.inverse = !!inverse;\n    this.negated = !!negated;\n    this.predicate = predicate;\n    if (valueExpr !== undefined)\n      this.valueExpr = valueExpr;\n  }\n\n  function Choice (disjuncts) {\n    this.type = \"Choice\";\n    this.disjuncts = disjuncts;\n  }\n\n  function EachOf (conjuncts) {\n    this.type = \"EachOf\";\n    this.conjuncts = conjuncts;\n  }\n\n  function SemActs (expression, semActs) {\n    this.type = \"SemActs\";\n    this.expression = expression;\n    this.semActs = semActs;\n  }\n\n  function KleeneStar (expression) {\n    this.type = \"KleeneStar\";\n    this.expression = expression;\n  }\n\n  function _compileExpression (expr, schema) {\n    var repeated, container;\n\n    /* _repeat: map expr with a min and max cardinality to a corresponding AST with Groups and Stars.\n       expr 1 1 => expr\n       expr 0 1 => Choice(expr, Eps)\n       expr 0 3 => Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps)\n       expr 2 5 => EachOf(expr, expr, Choice(EachOf(expr, Choice(EachOf(expr, Choice(expr, EPS)), Eps)), Eps))\n       expr 0 * => KleeneStar(expr)\n       expr 1 * => EachOf(expr, KleeneStar(expr))\n       expr 2 * => EachOf(expr, expr, KleeneStar(expr))\n\n       @@TODO: favor Plus over Star if Epsilon not in expr.\n    */\n    function _repeat (expr, min, max) {\n      if (min === undefined) { min = 1; }\n      if (max === undefined) { max = 1; }\n\n      if (min === 1 && max === 1) { return expr; }\n\n      var opts = max === UNBOUNDED ?\n        new KleeneStar(expr) :\n        _seq(max - min).reduce(function (ret, elt, ord) {\n          return ord === 0 ?\n            new Choice([expr, new Epsilon]) :\n            new Choice([new EachOf([expr, ret]), new Epsilon]);\n        }, undefined);\n\n      var reqd = min !== 0 ?\n        new EachOf(_seq(min).map(function (ret) {\n          return expr; // @@ something with ret\n        }).concat(opts)) : opts;\n      return reqd;\n    }\n\n    if (typeof expr === \"string\") { // Inclusion\n      var included = schema._index.tripleExprs[expr].expression;\n      return _compileExpression(included, schema);\n    }\n\n    else if (expr.type === \"TripleConstraint\") {\n      // predicate, inverse, negated, valueExpr, annotations, semActs, min, max\n      var valueExpr = \"valueExprRef\" in expr ?\n        schema.valueExprDefns[expr.valueExprRef] :\n        expr.valueExpr;\n      var ordinal = tripleConstraints.push(expr)-1;\n      var tp = new TripleConstraint(ordinal, expr.predicate, expr.inverse, expr.negated, valueExpr);\n      repeated = _repeat(tp, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"OneOf\") {\n      container = new Choice(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else if (expr.type === \"EachOf\") {\n      container = new EachOf(expr.expressions.map(function (e) {\n        return _compileExpression(e, schema);\n      }));\n      repeated = _repeat(container, expr.min, expr.max);\n      return expr.semActs ? new SemActs(repeated, expr.semActs) : repeated;\n    }\n\n    else throw Error(\"unexpected expr type: \" + expr.type);\n  }\n\n  return expression ? _compileExpression(expression, schema) : new Epsilon();\n}\n\n// http://stackoverflow.com/questions/9422386/lazy-cartesian-product-of-arrays-arbitrary-nested-loops\nfunction crossProduct(sets) {\n  var n = sets.length, carets = [], args = null;\n\n  function init() {\n    args = [];\n    for (var i = 0; i < n; i++) {\n      carets[i] = 0;\n      args[i] = sets[i][0];\n    }\n  }\n\n  function next() {\n\n    // special case: crossProduct([]).next().next() returns false.\n    if (args !== null && args.length === 0)\n      return false;\n\n    if (args === null) {\n      init();\n      return true;\n    }\n    var i = n - 1;\n    carets[i]++;\n    if (carets[i] < sets[i].length) {\n      args[i] = sets[i][carets[i]];\n      return true;\n    }\n    while (carets[i] >= sets[i].length) {\n      if (i == 0) {\n        return false;\n      }\n      carets[i] = 0;\n      args[i] = sets[i][0];\n      carets[--i]++;\n    }\n    args[i] = sets[i][carets[i]];\n    return true;\n  }\n\n  return {\n    next: next,\n    do: function (block, _context) { // old API\n      return block.apply(_context, args);\n    },\n    // new API because\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments#Description\n    // cautions about functions over arguments.\n    get: function () { return args; }\n  };\n}\n\n/* N3jsTripleToString - simple toString function to make N3.js's triples\n * printable.\n */\nvar N3jsTripleToString = function () {\n  function fmt (n) {\n    return RdfTerm.isLiteral(n) ?\n      [ \"http://www.w3.org/2001/XMLSchema#integer\",\n        \"http://www.w3.org/2001/XMLSchema#float\",\n        \"http://www.w3.org/2001/XMLSchema#double\"\n      ].indexOf(RdfTerm.getLiteralType(n)) !== -1 ?\n      parseInt(RdfTerm.getLiteralValue(n)) :\n      n :\n    RdfTerm.isBlank(n) ?\n      n :\n      \"<\" + n + \">\";\n  }\n  return fmt(this.subject) + \" \" + fmt(this.predicate) + \" \" + fmt(this.object) + \" .\";\n};\n\n/* indexNeighborhood - index triples by predicate\n * returns: {\n *     byPredicate: Object: mapping from predicate to triples containing that\n *                  predicate.\n *\n *     candidates: [[1,3], [0,2]]: mapping from triple to the triple constraints\n *                 it matches.  It is initialized to []. Mappings that remain an\n *                 empty set indicate a triple which didn't matching anything in\n *                 the shape.\n *\n *     misses: list to recieve value constraint failures.\n *   }\n */\nfunction indexNeighborhood (triples) {\n  return {\n    byPredicate: triples.reduce(function (ret, t) {\n      var p = t.predicate;\n      if (!(p in ret))\n        ret[p] = [];\n      ret[p].push(t);\n\n      // If in VERBOSE mode, add a nice toString to N3.js's triple objects.\n      if (VERBOSE)\n        t.toString = N3jsTripleToString;\n\n      return ret;\n    }, {}),\n    candidates: _seq(triples.length).map(function () {\n      return [];\n    }),\n    misses: []\n  };\n}\n\n/* sparqlOrder - sort triples by subject following SPARQL partial ordering.\n */\nfunction sparqlOrder (l, r) {\n  var [lprec, rprec] = [l, r].map(\n    x => RdfTerm.isBlank(x) ? 1 : RdfTerm.isLiteral(x) ? 2 : 3\n  );\n  return lprec === rprec ? l.localeCompare(r) : lprec - rprec;\n}\n\n/* Return a list of n \"\"s.\n *\n * Note that Array(n) on its own returns a \"sparse array\" so Array(n).map(f)\n * never calls f.\n */\nfunction _seq (n) {\n  return n === 0 ?\n    [] :\n    Array(n).join(\" \").split(/ /); // hahaha, javascript, you suck.\n}\n\n/* Expect property p with value v in object o\n */\nfunction expect (o, p, v) {\n  if (!(p in o))\n    runtimeError(\"expected \"+JSON.stringify(o)+\" to have a '\"+p+\"' attribute.\");\n  if (arguments.length > 2 && o[p] !== v)\n    runtimeError(\"expected \"+p+\" attribute '\"+o[p]+\"' to equal '\"+v+\"'.\");\n}\n\nfunction noop () {  }\n\nfunction runtimeError () {\n  var errorStr = Array.prototype.join.call(arguments, \"\");\n  var e = new Error(errorStr);\n  Error.captureStackTrace(e, runtimeError);\n  throw e;\n}\n\n  return {\n    construct: ShExValidator_constructor,\n    start: Start,\n    options: InterfaceOptions\n  };\n})();\n\n// Export the `ShExValidator` class as a whole.\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExValidator;\n"
    },
    {
      "id": 46,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/lib/regex/nfax-val-1err.js",
      "name": "../shex-core/lib/regex/nfax-val-1err.js",
      "index": 19,
      "index2": 17,
      "size": 20104,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
      "issuerId": 13,
      "issuerName": "../shex-core/shex-core.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 13,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "name": "../shex-core/shex-core.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 97,
        "building": 215,
        "dependencies": 42
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-core/shex-core.js",
          "module": "../shex-core/shex-core.js",
          "moduleName": "../shex-core/shex-core.js",
          "type": "cjs require",
          "userRequest": "./lib/regex/nfax-val-1err",
          "loc": "6:23-59"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "var NFAXVal1Err = (function () {\n  var RdfTerm = require(\"../RdfTerm\");\n\n  var Split = \"<span class='keyword' title='Split'>|</span>\";\n  var Rept  = \"<span class='keyword' title='Repeat'>×</span>\";\n  var Match = \"<span class='keyword' title='Match'>␃</span>\";\n  /* compileNFA - compile regular expression and index triple constraints\n   */\n  var UNBOUNDED = -1;\n\n  function compileNFA (schema, shape, index) {\n    var expression = shape.expression;\n    return NFA();\n\n    function NFA () {\n      // wrapper for states, startNo and matchstate\n      var states = [];\n      var matchstate = State_make(Match, []);\n      var startNo = matchstate;\n      var stack = [];\n      var pair;\n      if (expression) {\n        var pair = walkExpr(expression, []);\n        patch(pair.tail, matchstate);\n        startNo = pair.start;\n      }\n      var ret = {\n        algorithm: \"rbenx\",\n        end: matchstate,\n        states: states,\n        start: startNo,\n        match: rbenx_match\n      }\n      matchstate = states = startNo = null;\n      return ret;\n\n      function walkExpr (expr, stack) {\n        var s, starts;\n        var lastTail;\n        function maybeAddRept (start, tail) {\n          if ((expr.min == undefined || expr.min === 1) &&\n              (expr.max == undefined || expr.max === 1))\n            return {start: start, tail: tail}\n          s = State_make(Rept, [start]);\n          states[s].expr = expr;\n          // cache min/max in normalized form for simplicity of comparison.\n          states[s].min = \"min\" in expr ? expr.min : 1;\n          states[s].max = \"max\" in expr ? expr.max === UNBOUNDED ? Infinity : expr.max : 1;\n          patch(tail, s);\n          return {start: s, tail: [s]}\n        }\n\n        if (typeof expr === \"string\") { // Inclusion\n          var included = index.tripleExprs[expr];\n          return walkExpr(included, stack);\n        }\n\n        else if (expr.type === \"TripleConstraint\") {\n          s = State_make(expr, []);\n          states[s].stack = stack;\n          return {start: s, tail: [s]};\n          // maybeAddRept(s, [s]);\n        }\n\n        else if (expr.type === \"OneOf\") {\n          lastTail = [];\n          starts = [];\n          expr.expressions.forEach(function (nested, ord) {\n            pair = walkExpr(nested, stack.concat({c:expr, e:ord}));\n            starts.push(pair.start);\n            lastTail = lastTail.concat(pair.tail);\n          });\n          s = State_make(Split, starts);\n          states[s].expr = expr;\n          return maybeAddRept(s, lastTail);\n        }\n\n        else if (expr.type === \"EachOf\") {\n          expr.expressions.forEach(function (nested, ord) {\n            pair = walkExpr(nested, stack.concat({c:expr, e:ord}));\n            if (ord === 0)\n              s = pair.start;\n            else\n              patch(lastTail, pair.start);\n            lastTail = pair.tail;\n          });\n          return maybeAddRept(s, lastTail);\n        }\n\n        throw Error(\"unexpected expr type: \" + expr.type);\n      };\n\n      function State_make (c, outs, negated) {\n        var ret = states.length;\n        states.push({c:c, outs:outs});\n        if (negated)\n          states[ret].negated = true; // only include if true for brevity\n        return ret;\n      }\n\n      function patch (l, target) {\n        l.forEach(elt => {\n          states[elt].outs.push(target);\n        });\n      }\n    }\n\n\n    function nfaToString () {\n      var known = {OneOf: [], EachOf: []};\n      function dumpTripleConstraint (tc) {\n        return \"<\" + tc.predicate + \">\";\n      }\n      function card (obj) {\n        var x = \"\";\n        if (\"min\" in obj) x += obj.min;\n        if (\"max\" in obj) x += \",\" + obj.max;\n        return x ? \"{\" + x + \"}\" : \"\";\n      }\n      function junct (j) {\n        var id = known[j.type].indexOf(j);\n        if (id === -1)\n          id = known[j.type].push(j)-1;\n        return j.type + id; // + card(j);\n      }\n      function dumpStackElt (elt) {\n        return junct(elt.c) + \".\" + elt.e + (\"i\" in elt ? \"[\" + elt.i + \"]\" : \"\");\n      }\n      function dumpStack (stack) {\n        return stack.map(elt => { return dumpStackElt(elt); }).join(\"/\");\n      }\n      function dumpNFA (states, startNo) {\n        return states.map((s, i) => {\n          return (i === startNo ? s.c === Match ? \".\" : \"S\" : s.c === Match ? \"E\" : \" \") + i + \" \" + (\n            s.c === Split ? (\"Split-\" + junct(s.expr)) :\n              s.c === Rept ? (\"Rept-\" + junct(s.expr)) :\n              s.c === Match ? \"Match\" :\n              dumpTripleConstraint(s.c)\n          ) + card(s) + \"→\" + s.outs.join(\" | \") + (\"stack\" in s ? dumpStack(s.stack) : \"\");\n        }).join(\"\\n\");\n      }\n      function dumpMatched (matched) {\n        return matched.map(m => {\n          return dumpTripleConstraint(m.c) + \"[\" + m.triples.join(\",\") + \"]\" + dumpStack(m.stack);\n        }).join(\",\");\n      }\n      function dumpThread (thread) {\n        return \"S\" + thread.state + \":\" + Object.keys(thread.repeats).map(k => {\n          return k + \"×\" + thread.repeats[k];\n        }).join(\",\") + \" \" + dumpMatched(thread.matched);\n      }\n      function dumpThreadList (list) {\n        return \"[[\" + list.map(thread => { return dumpThread(thread); }).join(\"\\n  \") + \"]]\";\n      }\n      return {\n        nfa: dumpNFA,\n        stack: dumpStack,\n        stackElt: dumpStackElt,\n        thread: dumpThread,\n        threadList: dumpThreadList\n      };\n    }\n\n    function rbenx_match (graph, node, constraintList, constraintToTripleMapping, tripleToConstraintMapping, neighborhood, recurse, direct, semActHandler, checkValueExpr, trace) {\n      var rbenx = this;\n      var clist = [], nlist = []; // list of {state:state number, repeats:stateNo->repetitionCount}\n\n      function localExpect (list) {\n        return list.map(st => {\n          var s = rbenx.states[st.state]; // simpler threads are a list of states.\n          return renderAtom(s.c, s.negated);\n        });\n      }\n\n      if (rbenx.states.length === 1)\n        return matchedToResult([], constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr);\n\n      var chosen = null;\n      // var dump = nfaToString();\n      // console.log(dump.nfa(this.states, this.start));\n      addstate(rbenx, clist, this.start, {repeats:{}, avail:[], matched:[], stack:[], errors:[]});\n      while (clist.length) {\n        nlist = [];\n        if (trace)\n          trace.push({threads:[]});\n        for (var threadno = 0; threadno < clist.length; ++threadno) {\n          var thread = clist[threadno];\n          if (thread.state === rbenx.end)\n            continue;\n          var state = rbenx.states[thread.state];\n          var nlistlen = nlist.length;\n          var constraintNo = constraintList.indexOf(state.c);\n          // may be Accept!\n            var min = \"min\" in state.c ? state.c.min : 1;\n            var max = \"max\" in state.c ? state.c.max === UNBOUNDED ? Infinity : state.c.max : 1;\n            if (\"negated\" in state.c && state.c.negated)\n              min = max = 0;\n            if (thread.avail[constraintNo] === undefined)\n              thread.avail[constraintNo] = constraintToTripleMapping[constraintNo].slice();\n            var taken = thread.avail[constraintNo].splice(0, max);\n            if (taken.length >= min) {\n              do {\n                addStates(rbenx, nlist, thread, taken);\n              } while ((function () {\n                if (thread.avail[constraintNo].length > 0 && taken.length < max) {\n                  taken.push(thread.avail[constraintNo].shift());\n                  return true; // stay in look to take more.\n                } else {\n                  return false; // no more to take or we're already at max\n                }\n              })());\n          }\n          if (trace)\n            trace[trace.length-1].threads.push({\n              state: clist[threadno].state,\n              to:nlist.slice(nlistlen).map(x => {\n                return stateString(x.state, x.repeats);\n              })\n            });\n        }\n        // console.log(dump.threadList(nlist));\n        if (nlist.length === 0 && chosen === null)\n          return reportError(localExpect(clist, rbenx.states));\n        var t = clist;\n        clist = nlist;\n        nlist = t;\n        var longerChosen = clist.reduce((ret, elt) => {\n          var matchedAll =\n              elt.matched.reduce((ret, m) => {\n                return ret + m.triples.length; // count matched triples\n              }, 0) === tripleToConstraintMapping.reduce((ret, t) => {\n                return t === undefined ? ret : ret + 1; // count expected\n              }, 0);\n          return ret !== null ? ret : (elt.state === rbenx.end && matchedAll) ? elt : null;\n        }, null)\n        if (longerChosen)\n          chosen = longerChosen;\n        // if (longerChosen !== null)\n        //   console.log(JSON.stringify(matchedToResult(longerChosen.matched)));\n      }\n      if (chosen === null)\n        return reportError();\n      function reportError () { return {\n        type: \"Failure\",\n        node: node,\n        errors: localExpect(clist, rbenx.states)\n      } }\n      function localExpect () {\n        return clist.map(t => {\n          var c = rbenx.states[t.state].c;\n          // if (c === Match)\n          //   return { type: \"EndState999\" };\n          var valueExpr = null;\n          if (typeof c.valueExpr === \"string\") { // ShapeRef\n            valueExpr = c.valueExpr;\n            if (RdfTerm.isBlank(valueExpr))\n              valueExpr = schema.shapes[valueExpr];\n          } else if (c.valueExpr) {\n            valueExpr = extend({}, c.valueExpr)\n          }\n          return extend({\n            type: state.c.negated ? \"NegatedProperty\" :\n              t.state === rbenx.end ? \"ExcessTripleViolation\" :\n              \"MissingProperty\",\n            property: state.c.predicate\n          }, valueExpr ? { valueExpr: valueExpr } : {});\n        });\n      }\n      // console.log(\"chosen:\", dump.thread(chosen));\n      return \"errors\" in chosen.matched ?\n        chosen.matched :\n        matchedToResult(chosen.matched, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr);\n    }\n\n    function addStates (rbenx, nlist, thread, taken) {\n      var state = rbenx.states[thread.state];\n      // find the exprs that require repetition\n      var exprs = rbenx.states.map(x => { return x.c === Rept ? x.expr : null; });\n      var newStack = state.stack.map(e => {\n        var i = thread.repeats[exprs.indexOf(e.c)];\n        if (i === undefined)\n          i = 0; // expr has no repeats\n        else\n          i = i-1;\n        return { c:e.c, e:e.e, i:i };\n      });\n      var withIndexes = {\n        c: state.c,\n        triples: taken,\n        stack: newStack\n      };\n      thread.matched = thread.matched.concat(withIndexes);\n      state.outs.forEach(o => { // single out if NFA includes epsilons\n        addstate(rbenx, nlist, o, thread);\n      });\n    }\n\n    function addstate (rbenx, list, stateNo, thread, seen) {\n      seen = seen || [];\n      var seenkey = stateString(stateNo, thread.repeats);\n      if (seen.indexOf(seenkey) !== -1)\n        return;\n      seen.push(seenkey);\n\n      var s = rbenx.states[stateNo];\n      if (s.c === Split) {\n        return s.outs.reduce((ret, o, idx) => {\n          return ret.concat(addstate(rbenx, list, o, thread, seen));\n        }, []);\n        // } else if (s.c.type === \"OneOf\" || s.c.type === \"EachOf\") { // don't need Rept\n      } else if (s.c === Rept) {\n        var ret = [];\n        // matched = [matched].concat(\"Rept\" + s.expr);\n        if (!(stateNo in thread.repeats))\n          thread.repeats[stateNo] = 0;\n        var repetitions = thread.repeats[stateNo];\n        // add(r < s.min ? outs[0] : r >= s.min && < s.max ? outs[0], outs[1] : outs[1])\n        if (repetitions < s.max)\n          ret = ret.concat(addstate(rbenx, list, s.outs[0], incrmRepeat(thread, stateNo), seen)); // outs[0] to repeat\n        if (repetitions >= s.min && repetitions <= s.max)\n          ret = ret.concat(addstate(rbenx, list, s.outs[1], resetRepeat(thread, stateNo), seen)); // outs[1] when done\n        return ret;\n      } else {\n        // if (stateNo !== rbenx.end || !thread.avail.reduce((r2, avail) => { faster if we trim early??\n        //   return r2 || avail.length > 0;\n        // }, false))\n        return [list.push({ // return [new list element index]\n          state:stateNo,\n          repeats:thread.repeats,\n          avail:thread.avail.map(a => { // copy parent thread's avail vector\n            return a.slice();\n          }),\n          stack:thread.stack,\n          matched:thread.matched,\n          errors: thread.errors\n        }) - 1];\n      }\n    }\n\n    function resetRepeat (thread, repeatedState) {\n      var trimmedRepeats = Object.keys(thread.repeats).reduce((r, k) => {\n        if (parseInt(k) !== repeatedState) // ugh, hash keys are strings\n          r[k] = thread.repeats[k];\n        return r;\n      }, {});\n      return {state:thread.state/*???*/, repeats:trimmedRepeats, matched:thread.matched, avail:thread.avail.slice(), stack:thread.stack};\n    }\n\n    function incrmRepeat (thread, repeatedState) {\n      var incrmedRepeats = Object.keys(thread.repeats).reduce((r, k) => {\n        r[k] = parseInt(k) == repeatedState ? thread.repeats[k] + 1 : thread.repeats[k];\n        return r;\n      }, {});\n      return {state:thread.state/*???*/, repeats:incrmedRepeats, matched:thread.matched, avail:thread.avail.slice(), stack:thread.stack};\n    }\n\n    function stateString (state, repeats) {\n      var rs = Object.keys(repeats).map(rpt => {\n        return rpt+\":\"+repeats[rpt];\n      }).join(\",\");\n      return rs.length ? state + \"-\" + rs : \"\"+state;\n    }\n\n    function matchedToResult (matched, constraintList, neighborhood, recurse, direct, semActHandler, checkValueExpr) {\n      var last = [];\n      var errors = [];\n      var skips = [];\n      var ret = matched.reduce((out, m) => {\n        var mis = 0;\n        var ptr = out, t;\n        while (mis < last.length &&\n               m.stack[mis].c === last[mis].c && // constraint\n               m.stack[mis].i === last[mis].i && // iteration number\n               m.stack[mis].e === last[mis].e) { // (dis|con)junction number\n            ptr = ptr.solutions[last[mis].i].expressions[last[mis].e];\n          ++mis;\n        }\n        while (mis < m.stack.length) {\n          if (mis >= last.length) {\n            last.push({});\n          }\n          if (m.stack[mis].c !== last[mis].c) {\n            t = [];\n            ptr.type = m.stack[mis].c.type === \"EachOf\" ? \"EachOfSolutions\" : \"OneOfSolutions\", ptr.solutions = t;\n            if (\"min\" in m.stack[mis].c)\n              ptr.min = m.stack[mis].c.min;\n            if (\"max\" in m.stack[mis].c)\n              ptr.max = m.stack[mis].c.max;\n            if (\"annotations\" in m.stack[mis].c)\n              ptr.annotations = m.stack[mis].c.annotations;\n            if (\"semActs\" in m.stack[mis].c)\n              ptr.semActs = m.stack[mis].c.semActs;\n            ptr = t;\n            last[mis].i = null;\n            // !!! on the way out to call after valueExpr test\n            if (\"semActs\" in m.stack[mis].c) {\n              const errors = semActHandler.dispatchAll(m.stack[mis].c.semActs, \"???\", ptr);\n              if (errors.length)\n                throw errors;\n            }\n            if (ret && \"semActs\" in expr) { ret.semActs = expr.semActs; }\n          } else {\n            ptr = ptr.solutions;\n          }\n          if (m.stack[mis].i !== last[mis].i) {\n            t = [];\n            ptr[m.stack[mis].i] = {\n              type:m.stack[mis].c.type === \"EachOf\" ? \"EachOfSolution\" : \"OneOfSolution\",\n              expressions: t};\n            ptr = t;\n            last[mis].e = null;\n          } else {\n            ptr = ptr[last[mis].i].expressions;\n          }\n          if (m.stack[mis].e !== last[mis].e) {\n            t = {};\n            ptr[m.stack[mis].e] = t;\n            if (m.stack[mis].e > 0 && ptr[m.stack[mis].e-1] === undefined && skips.indexOf(ptr) === -1)\n              skips.push(ptr);\n            ptr = t;\n            last.length = mis + 1; // chop off last so we create everything underneath\n          } else {\n            throw \"how'd we get here?\"\n            ptr = ptr[last[mis].e];\n          }\n          ++mis;\n        }\n        ptr.type = \"TripleConstraintSolutions\";\n        if (\"min\" in m.c)\n          ptr.min = m.c.min;\n        if (\"max\" in m.c)\n          ptr.max = m.c.max;\n        ptr.predicate = m.c.predicate;\n        if (\"valueExpr\" in m.c)\n          ptr.valueExpr = m.c.valueExpr;\n        if (\"productionLabel\" in m.c)\n          ptr.productionLabel = m.c.productionLabel;\n        ptr.solutions = m.triples.map(tno => {\n          var triple = neighborhood[tno];\n          var ret = {\n            type: \"TestedTriple\",\n            subject: triple.subject,\n            predicate: triple.predicate,\n            object: ldify(triple.object)\n          };\n\n        function ldify (term) {\n          if (term[0] !== \"\\\"\")\n            return term;\n          var ret = { value: RdfTerm.getLiteralValue(term) };\n          var dt = RdfTerm.getLiteralType(term);\n          if (dt &&\n              dt !== \"http://www.w3.org/2001/XMLSchema#string\" &&\n              dt !== \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\")\n            ret.type = dt;\n          var lang = RdfTerm.getLiteralLanguage(term)\n          if (lang)\n            ret.language = lang;\n          return ret;\n        }\n          function diver (focus, shape, dive) {\n            var sub = dive(focus, shape);\n            if (\"errors\" in sub) {\n              // console.dir(sub);\n              var err = {\n                type: \"ReferenceError\", focus: focus,\n                shape: shape, errors: sub\n              };\n              if (typeof shapeLabel === \"string\" && RdfTerm.isBlank(shapeLabel))\n                err.referencedShape = shape;\n              return [err];\n            }\n            if ((\"solution\" in sub || \"solutions\" in sub) && Object.keys(sub.solution || sub.solutions).length !== 0 ||\n                sub.type === \"Recursion\")\n              ret.referenced = sub; // !!! needs to aggregate errors and solutions\n            return [];\n          }\n          function diveRecurse (focus, shapeLabel) {\n            return diver(focus, shapeLabel, recurse);\n          }\n          function diveDirect (focus, shapeLabel) {\n            return diver(focus, shapeLabel, direct);\n          }\n          if (\"valueExpr\" in ptr)\n            errors = errors.concat(checkValueExpr(ptr.inverse ? triple.subject : triple.object, ptr.valueExpr, diveRecurse, diveDirect));\n\n          if (errors.length === 0 && \"semActs\" in m.c)\n            [].push.apply(errors, semActHandler.dispatchAll(m.c.semActs, triple, ret));\n          return ret;\n        })\n        if (\"annotations\" in m.c)\n          ptr.annotations = m.c.annotations;\n        if (\"semActs\" in m.c)\n          ptr.semActs = m.c.semActs;\n        last = m.stack.slice();\n        return out;\n      }, {});\n\n      if (errors.length)\n        return {\n          type: \"SemActFailure\",\n          errors: errors\n        };\n\n      // Clear out the nulls for the expressions with min:0 and no matches.\n      // <S> { (:p .; :q .)?; :r . } \\ { <s> :r 1 } -> i:0, e:1 resulting in null at e=0\n      // Maybe we want these nulls in expressions[] to make it clear that there are holes?\n      skips.forEach(skip => {\n        for (var exprNo = 0; exprNo < skip.length; ++exprNo)\n          if (skip[exprNo] === null || skip[exprNo] === undefined)\n            skip.splice(exprNo--, 1);\n      });\n\n      if (\"semActs\" in shape)\n        ret.semActs = shape.semActs;\n      return ret;\n    }\n  }\n\nfunction extend(base) {\n  if (!base) base = {};\n  for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n    for (var name in arg)\n      base[name] = arg[name];\n  return base;\n}\n\n// ## Exports\n\nreturn exports = {\n  name: \"nfax-val-1err\",\n  description: \"simple regular expression engine with n out states\",\n  compile: compileNFA\n};\n\n})();\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = NFAXVal1Err;\n"
    },
    {
      "id": 47,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
      "name": "../shex-api/shex-api.js",
      "index": 20,
      "index2": 40,
      "size": 10480,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
      "issuerId": 38,
      "issuerName": "./shex-webapp.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        }
      ],
      "profile": {
        "factory": 14,
        "building": 31,
        "dependencies": 245
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "@shexjs/api",
          "loc": "4:9-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "// **ShExLoader** return promise to load ShExC, ShExJ and N3 (Turtle) files.\n\nvar ShExApi = function (config) {\n\n  var ShEx = require(\"@shexjs/core\");\n  var ShExUtil = ShEx.Util;\n  var ShExParser = require(\"@shexjs/parser\");\n\n  const api = { load: LoadPromise, loadExtensions: LoadExtensions, GET: GET, loadShExImports_NotUsed: loadShExImports_NotUsed };\n  return api\n  \n  async function GET (url, mediaType) {\n    var m;\n    return (m = url.match(\"^data:([^,]+),(.*)$\"))\n      ? Promise.resolve({text: m[2], url: m[0]}) // Read from data: URL\n      : (url.match(\"^(blob:)?[a-z]+://.\"))\n      ? myHttpRequest(url, mediaType) // whatever fetch handles\n      : (() => { throw Error(`Don't know how to fetch ${url}`) })()\n\n    async function myHttpRequest(url, mediaType) {\n      if (typeof config.fetch !== \"function\")\n        throw Error(`Unable to fetch ${url} with fetch=${config.fetch}`)\n      let resp\n      try {\n        resp = await config.fetch(url, {\n          headers: {\n            'Accept': 'text/shex,text/turtle,*/*'\n          }\n        })\n      } catch (e) {\n        // DNS failure\n        // no route to host\n        // connection refused\n        throw Error(`GET <${url}> network failure: ${e.message}`)\n      }\n      if (!resp.ok)\n        throw Error(`GET <${url}> failed: ${resp.status} ${resp.statusText}`)\n      const text = await resp.text()\n      return {text, url}\n    }\n  }\n\n  function loadList (src, metaList, mediaType, parserWrapper, target, options, loadImports) {\n    return src.map(\n      async p =>\n        typeof p === \"object\" ? mergeSchema(p) : await loadParseMergeSchema(p)\n    )\n\n    async function mergeSchema (obj) {\n      var meta = addMeta(obj.url, mediaType)\n      try {\n        ShExUtil.merge(target, obj.schema, true, true)\n        meta._prefixes = target._prefixes || {}\n        meta.base = target._base\n        loadImports(obj.schema)\n        return [mediaType, obj.url]\n      } catch (e) {\n        var e2 = Error(\"error merging schema object \" + obj.schema + \": \" + e)\n        e2.stack = e.stack\n        throw e2\n      }\n    }\n\n    async function loadParseMergeSchema (p) {\n      return api.GET(p, mediaType).then(function (loaded) {\n        return parserWrapper(loaded.text, mediaType, loaded.url, target,\n                             addMeta(loaded.url, mediaType), options, loadImports)\n      })\n    }\n\n    function addMeta (url, mediaType) {\n      var meta = {\n        mediaType: mediaType,\n        url: url,\n        base: url,\n        prefixes: {}\n      }\n      metaList.push(meta)\n      return meta\n    }\n  }\n\n  /* LoadPromise - load shex and json files into a single Schema and turtle into\n   * a graph (Data).\n   */\n  async function LoadPromise (shex, json, turtle, jsonld, schemaOptions = {}, dataOptions = {}) {\n    var returns = {\n      schema: ShExUtil.emptySchema(),\n      data: new config.rdfjs.Store(),\n      schemaMeta: [],\n      dataMeta: []\n    }\n    var promises = []\n    var schemasSeen = shex.concat(json).map(p => {\n      // might be already loaded objects with a url property.\n      return typeof p === \"object\" ? p.url : p\n    })\n    var transform = null\n    if (schemaOptions && \"iriTransform\" in schemaOptions) {\n      transform = schemaOptions.iriTransform\n      delete schemaOptions.iriTransform\n    }\n\n    var allLoaded = DynamicPromise()\n    function loadImports (schema) {\n      if (!(\"imports\" in schema))\n        return schema\n      if (schemaOptions.keepImports) {\n        return schema\n      }\n      var ret = Object.assign({}, schema)\n      var imports = ret.imports\n      delete ret.imports\n      schema.imports.map(function (i) {\n        return transform ? transform(i) : i\n      }).filter(function (i) {\n        return schemasSeen.indexOf(i) === -1\n      }).map(i => {\n        schemasSeen.push(i)\n        allLoaded.add(api.GET(i).then(function (loaded) {\n          var meta = {\n            // mediaType: mediaType,\n            url: loaded.url,\n            base: loaded.url,\n            prefixes: {}\n          }\n          // metaList.push(meta)\n          return parseShExC(loaded.text, \"text/shex\", loaded.url,\n                            returns.schema, meta, schemaOptions, loadImports)\n        })); // addAfter would be after invoking schema.\n      })\n      return ret\n    }\n\n    // gather all the potentially remote inputs\n    promises = promises.\n      concat(loadList(shex, returns.schemaMeta, \"text/shex\",\n                      parseShExC, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(json, returns.schemaMeta, \"text/json\",\n                      parseShExJ, returns.schema, schemaOptions, loadImports)).\n      concat(loadList(turtle, returns.dataMeta, \"text/turtle\",\n                      parseTurtle, returns.data, dataOptions)).\n      concat(loadList(jsonld, returns.dataMeta, \"application/ld+json\",\n                      parseJSONLD, returns.data, dataOptions))\n    return allLoaded.all(promises).then(function (resources) {\n      if (returns.schemaMeta.length > 0)\n        ShExUtil.isWellDefined(returns.schema)\n      return returns\n    })\n  }\n\n  function DynamicPromise () {\n    var promises = []\n    var results = []\n    var completedPromises = 0\n    var resolveSelf, rejectSelf\n    var self = new Promise(function (resolve, reject) {\n      resolveSelf = resolve; rejectSelf = reject\n    })\n    self.all = function (pz) {\n      pz.forEach(function (promise, index) {\n        promises.push(promise)\n        addThen(promise, index)\n      })\n      return self\n    }\n    self.add = function (promise) {\n      promises.push(promise)\n      addThen(promise, promises.length - 1)\n      return self\n    }\n    return self\n\n    function addThen (promise, index) {\n      promise.then(function (value) {\n        results[index] = value\n        ++completedPromises\n        if(completedPromises === promises.length) {\n          resolveSelf(results)\n        }\n      }).catch(function (error) {\n        rejectSelf(error)\n      })\n    }\n  }\n\n  function parseShExC (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    var parser = schemaOptions && \"parser\" in schemaOptions ?\n        schemaOptions.parser :\n        ShExParser.construct(url, {}, schemaOptions)\n    try {\n      var s = parser.parse(text)\n      // !! horrible hack until I set a variable to know if there's a BASE.\n      if (s.base === url) delete s.base\n      meta.prefixes = s._prefixes || {}\n      meta.base = s._base || meta.base\n      ShExUtil.merge(schema, loadImports(s), false, true)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      e.message = \"error parsing ShEx \" + url + \": \" + e.message\n      return Promise.reject(e)\n    }\n  }\n\n  function loadShExImports_NotUsed (from, parser, transform) {\n    var schemasSeen = [from]\n    var ret = { type: \"Schema\" }\n    return api.GET(from).then(load999Imports).then(function () {\n      ShExUtil.isWellDefined(ret)\n      return ret\n    })\n    function load999Imports (loaded) {\n      var schema = parser.parse(loaded.text)\n      var imports = schema.imports\n      delete schema.imports\n      ShExUtil.merge(ret, schema, false, true)\n      if (imports) {\n        var rest = imports\n            .map(function (i) {\n              return transform ? transform(i) : i\n            }).\n            filter(function (i) {\n              return schemasSeen.indexOf(i) === -1\n            })\n        return Promise.all(rest.map(i => {\n          schemasSeen.push(i)\n          return api.GET(i).then(load999Imports)\n        })).then(a => {\n          return null\n        })\n      } else {\n        return null\n      }\n    }\n  }\n\n  function parseShExJ (text, mediaType, url, schema, meta, schemaOptions, loadImports) {\n    try {\n      var s = ShExUtil.ShExJtoAS(JSON.parse(text))\n      ShExUtil.merge(schema, s, true, true)\n      meta.prefixes = schema._prefixes\n      meta.base = schema.base\n      loadImports(s)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      var e2 = Error(\"error parsing JSON \" + url + \": \" + e)\n      // e2.stack = e.stack\n      return Promise.reject(e2)\n    }\n  }\n\n  function parseTurtle (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"}).\n        parse(text,\n              function (error, triple, prefixes) {\n                if (prefixes) {\n                  meta.prefixes = prefixes\n                  // data.addPrefixes(prefixes)\n                }\n                if (error) {\n                  reject(\"error parsing \" + url + \": \" + error)\n                } else if (triple) {\n                  data.addQuad(triple)\n                } else {\n                  meta.base = this._base\n                  resolve([mediaType, url])\n                }\n              })\n    })\n  }\n\n  /* parseTurtle999 - a variant of parseTurtle with no callback.\n   * so, which is \"better\"?\n   */\n  function parseTurtle999 (text, mediaType, url, data, meta, dataOptions) {\n    try {\n      var p = new config.rdfjs.Parser({baseIRI: url, blankNodePrefix: \"\", format: \"text/turtle\"})\n      var triples = p.parse(text)\n      meta.prefixes = p._prefixes\n      meta.base = p._base\n      data.addPrefixes(p._prefixes)\n      data.addTriples(triples)\n      return Promise.resolve([mediaType, url])\n    } catch (e) {\n      return Promise.reject(Error(\"error parsing \" + url + \": \" + e))\n    }\n  }\n\n  function parseJSONLD (text, mediaType, url, data, meta, dataOptions) {\n    return new Promise(function (resolve, reject) {\n      var struct = JSON.parse(text)\n      config.jsonld.toRDF(struct, {format: \"application/nquads\", base: url}, function (lderr, nquads) {\n        if (lderr) {\n          reject(\"error parsing JSON-ld \" + url + \": \" + lderr)\n        } else {\n          meta.prefixes = {}; // @@ take from @context?\n          meta.base = url;    // @@ take from @context.base? (or vocab?)\n          resolve(parseTurtle(nquads, mediaType, url, data, meta))\n        }\n      })\n    })\n  }\n\n  function LoadExtensions (globs) {\n    return globs.reduce(\n      (list, glob) =>\n        list.concat(require(\"glob\").glob.sync(glob))\n      , []).\n      reduce(function (ret, path) {\n        try {\n\t  var t = require(path)\n\t  ret[t.url] = t\n\t  return ret\n        } catch (e) {\n\t  console.warn(\"ShEx extension \\\"\" + moduleDir + \"\\\" not loadable: \" + e)\n\t  return ret\n        }\n      }, {})\n  }\n\n}\n\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\")\n  module.exports = ShExApi\n"
    },
    {
      "id": 48,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/lib/ShExJison.js",
      "name": "../shex-parser/lib/ShExJison.js",
      "index": 22,
      "index2": 19,
      "size": 222161,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
      "issuerId": 23,
      "issuerName": "../shex-parser/shex-parser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 23,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "name": "../shex-parser/shex-parser.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 113,
        "building": 140,
        "dependencies": 106
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 23,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-parser/shex-parser.js",
          "module": "../shex-parser/shex-parser.js",
          "moduleName": "../shex-parser/shex-parser.js",
          "type": "cjs require",
          "userRequest": "./lib/ShExJison",
          "loc": "5:14-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ShExJison = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[7,18,19,20,21,23,26,189,211,212],$V1=[1,25],$V2=[1,29],$V3=[1,24],$V4=[1,28],$V5=[1,27],$V6=[2,12],$V7=[2,13],$V8=[2,14],$V9=[7,18,19,20,21,23,26,211,212],$Va=[1,35],$Vb=[1,38],$Vc=[1,37],$Vd=[2,18],$Ve=[2,19],$Vf=[19,21,65,67,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vg=[2,57],$Vh=[1,47],$Vi=[1,48],$Vj=[1,49],$Vk=[19,21,35,39,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vl=[2,234],$Vm=[2,235],$Vn=[1,51],$Vo=[1,54],$Vp=[1,53],$Vq=[2,256],$Vr=[2,257],$Vs=[2,260],$Vt=[2,258],$Vu=[2,259],$Vv=[2,15],$Vw=[2,17],$Vx=[19,21,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$Vy=[1,72],$Vz=[2,26],$VA=[2,27],$VB=[2,28],$VC=[115,121,123,185,215],$VD=[2,135],$VE=[1,98],$VF=[1,106],$VG=[1,84],$VH=[1,89],$VI=[1,90],$VJ=[1,91],$VK=[1,97],$VL=[1,102],$VM=[1,103],$VN=[1,104],$VO=[1,107],$VP=[1,108],$VQ=[1,109],$VR=[1,110],$VS=[1,111],$VT=[1,112],$VU=[1,94],$VV=[1,105],$VW=[2,58],$VX=[1,114],$VY=[1,115],$VZ=[1,116],$V_=[1,122],$V$=[1,123],$V01=[47,49],$V11=[2,87],$V21=[2,88],$V31=[189,191],$V41=[1,138],$V51=[1,141],$V61=[1,140],$V71=[2,16],$V81=[7,18,19,20,21,23,26,47,211,212],$V91=[2,43],$Va1=[7,18,19,20,21,23,26,47,49,211,212],$Vb1=[2,50],$Vc1=[2,32],$Vd1=[2,65],$Ve1=[2,70],$Vf1=[2,67],$Vg1=[1,175],$Vh1=[1,176],$Vi1=[1,177],$Vj1=[1,180],$Vk1=[1,183],$Vl1=[2,73],$Vm1=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,186,189,211,212,215],$Vn1=[2,91],$Vo1=[7,18,19,20,21,23,26,47,49,186,189,211,212],$Vp1=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,186,189,211,212],$Vq1=[7,18,19,20,21,23,26,47,49,75,76,77,97,98,99,100,115,121,123,185,186,189,211,212,215],$Vr1=[2,104],$Vs1=[2,103],$Vt1=[7,18,19,20,21,23,26,47,49,97,98,99,100,108,109,110,111,112,113,186,189,211,212],$Vu1=[2,98],$Vv1=[2,97],$Vw1=[1,198],$Vx1=[1,200],$Vy1=[1,202],$Vz1=[1,201],$VA1=[2,108],$VB1=[2,109],$VC1=[2,110],$VD1=[2,106],$VE1=[2,233],$VF1=[19,21,67,77,96,104,105,159,181,200,201,202,203,204,205,206,207,208,209,211],$VG1=[2,179],$VH1=[7,18,19,20,21,23,26,47,49,108,109,110,111,112,113,186,189,211,212],$VI1=[2,100],$VJ1=[2,114],$VK1=[1,210],$VL1=[1,211],$VM1=[1,212],$VN1=[1,213],$VO1=[96,104,105,202,203,204,205],$VP1=[2,31],$VQ1=[2,35],$VR1=[2,38],$VS1=[2,41],$VT1=[2,89],$VU1=[2,225],$VV1=[2,226],$VW1=[2,227],$VX1=[1,261],$VY1=[1,266],$VZ1=[1,247],$V_1=[1,252],$V$1=[1,253],$V02=[1,254],$V12=[1,260],$V22=[1,257],$V32=[1,265],$V42=[1,268],$V52=[1,269],$V62=[1,270],$V72=[1,276],$V82=[1,277],$V92=[2,20],$Va2=[2,49],$Vb2=[2,56],$Vc2=[2,61],$Vd2=[2,64],$Ve2=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,211,212],$Vf2=[2,83],$Vg2=[2,84],$Vh2=[2,29],$Vi2=[2,33],$Vj2=[2,69],$Vk2=[2,66],$Vl2=[2,71],$Vm2=[2,68],$Vn2=[7,18,19,20,21,23,26,47,49,97,98,99,100,186,189,211,212],$Vo2=[1,322],$Vp2=[1,330],$Vq2=[1,331],$Vr2=[1,332],$Vs2=[1,338],$Vt2=[1,339],$Vu2=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,189,211,212,215],$Vv2=[2,223],$Vw2=[7,18,19,20,21,23,26,47,49,189,211,212],$Vx2=[1,347],$Vy2=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,189,211,212],$Vz2=[2,102],$VA2=[2,107],$VB2=[2,94],$VC2=[1,357],$VD2=[2,95],$VE2=[2,96],$VF2=[2,101],$VG2=[19,21,65,156,195,211],$VH2=[2,163],$VI2=[2,137],$VJ2=[1,372],$VK2=[1,371],$VL2=[1,377],$VM2=[1,381],$VN2=[1,380],$VO2=[1,379],$VP2=[1,386],$VQ2=[1,389],$VR2=[1,385],$VS2=[1,388],$VT2=[19,21,211,212],$VU2=[1,400],$VV2=[1,406],$VW2=[1,395],$VX2=[1,399],$VY2=[1,409],$VZ2=[1,410],$V_2=[1,411],$V$2=[1,398],$V03=[1,412],$V13=[1,413],$V23=[1,418],$V33=[1,419],$V43=[1,420],$V53=[1,421],$V63=[1,414],$V73=[1,415],$V83=[1,416],$V93=[1,417],$Va3=[1,405],$Vb3=[2,113],$Vc3=[2,118],$Vd3=[2,120],$Ve3=[2,121],$Vf3=[2,122],$Vg3=[2,248],$Vh3=[2,249],$Vi3=[2,250],$Vj3=[2,251],$Vk3=[2,119],$Vl3=[2,30],$Vm3=[2,39],$Vn3=[2,36],$Vo3=[2,42],$Vp3=[2,37],$Vq3=[1,453],$Vr3=[2,40],$Vs3=[1,489],$Vt3=[1,522],$Vu3=[1,523],$Vv3=[1,524],$Vw3=[1,527],$Vx3=[2,44],$Vy3=[2,51],$Vz3=[2,60],$VA3=[2,62],$VB3=[2,72],$VC3=[47,49,66],$VD3=[1,587],$VE3=[47,49,66,75,76,77,115,121,123,185,186,189,215],$VF3=[47,49,66,186,189],$VG3=[47,49,66,92,93,94,97,98,99,100,186,189],$VH3=[47,49,66,75,76,77,97,98,99,100,115,121,123,185,186,189,215],$VI3=[47,49,66,97,98,99,100,108,109,110,111,112,113,186,189],$VJ3=[47,49,66,108,109,110,111,112,113,186,189],$VK3=[47,66],$VL3=[7,18,19,20,21,23,26,47,49,75,76,77,115,121,123,185,211,212,215],$VM3=[2,93],$VN3=[2,92],$VO3=[2,222],$VP3=[1,629],$VQ3=[1,632],$VR3=[1,628],$VS3=[1,631],$VT3=[2,90],$VU3=[2,130],$VV3=[2,105],$VW3=[2,99],$VX3=[2,111],$VY3=[2,112],$VZ3=[2,142],$V_3=[2,143],$V$3=[1,649],$V04=[2,144],$V14=[117,131],$V24=[2,149],$V34=[2,150],$V44=[2,152],$V54=[1,652],$V64=[1,653],$V74=[19,21,195,211],$V84=[2,171],$V94=[1,661],$Va4=[117,131,136,137],$Vb4=[2,161],$Vc4=[19,21,115,121,123,185,211,212,215],$Vd4=[19,21,115,121,123,185,195,211,215],$Ve4=[2,231],$Vf4=[2,232],$Vg4=[2,178],$Vh4=[1,696],$Vi4=[19,21,67,77,96,104,105,159,174,181,200,201,202,203,204,205,206,207,208,209,211],$Vj4=[2,228],$Vk4=[2,229],$Vl4=[2,230],$Vm4=[2,241],$Vn4=[2,244],$Vo4=[2,238],$Vp4=[2,239],$Vq4=[2,240],$Vr4=[2,246],$Vs4=[2,247],$Vt4=[2,252],$Vu4=[2,253],$Vv4=[2,254],$Vw4=[2,255],$Vx4=[19,21,67,77,96,104,105,107,159,174,181,200,201,202,203,204,205,206,207,208,209,211],$Vy4=[1,728],$Vz4=[1,775],$VA4=[1,830],$VB4=[1,840],$VC4=[1,876],$VD4=[1,912],$VE4=[2,63],$VF4=[47,49,66,97,98,99,100,186,189],$VG4=[47,49,66,75,76,77,115,121,123,185,189,215],$VH4=[47,49,66,189],$VI4=[1,934],$VJ4=[47,49,66,92,93,94,97,98,99,100,189],$VK4=[1,944],$VL4=[1,981],$VM4=[1,1017],$VN4=[2,224],$VO4=[1,1028],$VP4=[1,1034],$VQ4=[1,1033],$VR4=[19,21,96,104,105,200,201,202,203,204,205,206,207,208,209,211],$VS4=[1,1054],$VT4=[1,1060],$VU4=[1,1059],$VV4=[1,1080],$VW4=[1,1086],$VX4=[1,1085],$VY4=[2,131],$VZ4=[2,145],$V_4=[2,147],$V$4=[2,151],$V05=[2,153],$V15=[2,154],$V25=[2,158],$V35=[2,160],$V45=[2,165],$V55=[2,166],$V65=[1,1112],$V75=[1,1115],$V85=[1,1111],$V95=[1,1114],$Va5=[1,1125],$Vb5=[2,218],$Vc5=[2,236],$Vd5=[2,237],$Ve5=[1,1127],$Vf5=[1,1129],$Vg5=[1,1131],$Vh5=[19,21,67,77,96,104,105,159,175,181,200,201,202,203,204,205,206,207,208,209,211],$Vi5=[1,1135],$Vj5=[1,1141],$Vk5=[1,1144],$Vl5=[1,1145],$Vm5=[1,1146],$Vn5=[1,1134],$Vo5=[1,1147],$Vp5=[1,1148],$Vq5=[1,1153],$Vr5=[1,1154],$Vs5=[1,1155],$Vt5=[1,1156],$Vu5=[1,1149],$Vv5=[1,1150],$Vw5=[1,1151],$Vx5=[1,1152],$Vy5=[1,1140],$Vz5=[2,242],$VA5=[2,245],$VB5=[2,123],$VC5=[1,1186],$VD5=[1,1192],$VE5=[1,1224],$VF5=[1,1230],$VG5=[1,1289],$VH5=[1,1336],$VI5=[47,49,66,75,76,77,115,121,123,185,215],$VJ5=[47,49,66,92,93,94,97,98,99,100],$VK5=[1,1412],$VL5=[1,1459],$VM5=[2,219],$VN5=[2,220],$VO5=[2,221],$VP5=[7,18,19,20,21,23,26,47,49,75,76,77,107,115,121,123,185,186,189,211,212,215],$VQ5=[7,18,19,20,21,23,26,47,49,107,186,189,211,212],$VR5=[7,18,19,20,21,23,26,47,49,92,93,94,97,98,99,100,107,186,189,211,212],$VS5=[2,148],$VT5=[2,146],$VU5=[2,155],$VV5=[2,159],$VW5=[2,156],$VX5=[2,157],$VY5=[19,21,39,65,67,75,76,77,81,92,93,94,97,98,99,100,108,109,110,111,112,113,115,121,123,157,185,211,215],$VZ5=[1,1519],$V_5=[66,131],$V$5=[1,1522],$V06=[1,1523],$V16=[66,131,136,137],$V26=[2,201],$V36=[1,1539],$V46=[19,21,67,77,96,104,105,159,174,175,181,200,201,202,203,204,205,206,207,208,209,211],$V56=[19,21,67,77,96,104,105,107,159,174,175,181,200,201,202,203,204,205,206,207,208,209,211],$V66=[2,243],$V76=[1,1577],$V86=[1,1643],$V96=[1,1649],$Va6=[1,1648],$Vb6=[1,1669],$Vc6=[1,1675],$Vd6=[1,1674],$Ve6=[1,1695],$Vf6=[1,1701],$Vg6=[1,1700],$Vh6=[1,1742],$Vi6=[1,1748],$Vj6=[1,1780],$Vk6=[1,1786],$Vl6=[1,1801],$Vm6=[1,1807],$Vn6=[1,1806],$Vo6=[1,1827],$Vp6=[1,1833],$Vq6=[1,1832],$Vr6=[1,1853],$Vs6=[1,1859],$Vt6=[1,1858],$Vu6=[1,1900],$Vv6=[1,1906],$Vw6=[1,1938],$Vx6=[1,1944],$Vy6=[117,131,136,137,186,189],$Vz6=[2,168],$VA6=[1,1962],$VB6=[1,1963],$VC6=[1,1964],$VD6=[1,1965],$VE6=[117,131,136,137,152,153,154,155,186,189],$VF6=[2,34],$VG6=[47,117,131,136,137,152,153,154,155,186,189],$VH6=[2,47],$VI6=[47,49,117,131,136,137,152,153,154,155,186,189],$VJ6=[2,54],$VK6=[1,1994],$VL6=[1,2031],$VM6=[1,2064],$VN6=[1,2070],$VO6=[1,2069],$VP6=[1,2090],$VQ6=[1,2096],$VR6=[1,2095],$VS6=[1,2117],$VT6=[1,2123],$VU6=[1,2122],$VV6=[1,2144],$VW6=[1,2150],$VX6=[1,2149],$VY6=[1,2170],$VZ6=[1,2176],$V_6=[1,2175],$V$6=[1,2197],$V07=[1,2203],$V17=[1,2202],$V27=[1,2272],$V37=[47,49,66,75,76,77,107,115,121,123,185,186,189,215],$V47=[47,49,66,107,186,189],$V57=[47,49,66,92,93,94,97,98,99,100,107,186,189],$V67=[1,2386],$V77=[2,169],$V87=[2,173],$V97=[2,174],$Va7=[2,175],$Vb7=[2,176],$Vc7=[2,45],$Vd7=[2,52],$Ve7=[2,59],$Vf7=[2,79],$Vg7=[2,75],$Vh7=[2,81],$Vi7=[1,2469],$Vj7=[2,78],$Vk7=[47,49,75,76,77,97,98,99,100,115,117,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vl7=[47,49,75,76,77,115,117,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vm7=[47,49,97,98,99,100,108,109,110,111,112,113,117,131,136,137,152,153,154,155,186,189],$Vn7=[47,49,92,93,94,97,98,99,100,117,131,136,137,152,153,154,155,186,189],$Vo7=[2,85],$Vp7=[2,86],$Vq7=[47,49,108,109,110,111,112,113,117,131,136,137,152,153,154,155,186,189],$Vr7=[1,2523],$Vs7=[1,2529],$Vt7=[1,2612],$Vu7=[1,2645],$Vv7=[1,2651],$Vw7=[1,2650],$Vx7=[1,2671],$Vy7=[1,2677],$Vz7=[1,2676],$VA7=[1,2698],$VB7=[1,2704],$VC7=[1,2703],$VD7=[1,2725],$VE7=[1,2731],$VF7=[1,2730],$VG7=[1,2751],$VH7=[1,2757],$VI7=[1,2756],$VJ7=[1,2778],$VK7=[1,2784],$VL7=[1,2783],$VM7=[1,2825],$VN7=[1,2858],$VO7=[1,2864],$VP7=[1,2863],$VQ7=[1,2884],$VR7=[1,2890],$VS7=[1,2889],$VT7=[1,2911],$VU7=[1,2917],$VV7=[1,2916],$VW7=[1,2938],$VX7=[1,2944],$VY7=[1,2943],$VZ7=[1,2964],$V_7=[1,2970],$V$7=[1,2969],$V08=[1,2991],$V18=[1,2997],$V28=[1,2996],$V38=[117,131,136,137,189],$V48=[1,3016],$V58=[2,48],$V68=[2,55],$V78=[2,74],$V88=[2,80],$V98=[2,76],$Va8=[2,82],$Vb8=[47,49,97,98,99,100,117,131,136,137,152,153,154,155,186,189],$Vc8=[1,3040],$Vd8=[66,131,136,137,186,189],$Ve8=[1,3049],$Vf8=[1,3050],$Vg8=[1,3051],$Vh8=[1,3052],$Vi8=[66,131,136,137,152,153,154,155,186,189],$Vj8=[47,66,131,136,137,152,153,154,155,186,189],$Vk8=[47,49,66,131,136,137,152,153,154,155,186,189],$Vl8=[1,3081],$Vm8=[1,3150],$Vn8=[1,3156],$Vo8=[1,3236],$Vp8=[1,3242],$Vq8=[2,170],$Vr8=[2,46],$Vs8=[1,3330],$Vt8=[2,53],$Vu8=[1,3363],$Vv8=[2,77],$Vw8=[2,167],$Vx8=[1,3408],$Vy8=[47,49,66,75,76,77,97,98,99,100,115,121,123,131,136,137,152,153,154,155,185,186,189,215],$Vz8=[47,49,66,75,76,77,115,121,123,131,136,137,152,153,154,155,185,186,189,215],$VA8=[47,49,66,97,98,99,100,108,109,110,111,112,113,131,136,137,152,153,154,155,186,189],$VB8=[47,49,66,92,93,94,97,98,99,100,131,136,137,152,153,154,155,186,189],$VC8=[47,49,66,108,109,110,111,112,113,131,136,137,152,153,154,155,186,189],$VD8=[1,3439],$VE8=[1,3445],$VF8=[1,3444],$VG8=[1,3465],$VH8=[1,3471],$VI8=[1,3470],$VJ8=[1,3492],$VK8=[1,3498],$VL8=[1,3497],$VM8=[1,3596],$VN8=[1,3602],$VO8=[1,3601],$VP8=[1,3637],$VQ8=[1,3679],$VR8=[66,131,136,137,189],$VS8=[1,3709],$VT8=[47,49,66,97,98,99,100,131,136,137,152,153,154,155,186,189],$VU8=[1,3733],$VV8=[1,3769],$VW8=[1,3775],$VX8=[1,3774],$VY8=[1,3795],$VZ8=[1,3801],$V_8=[1,3800],$V$8=[1,3822],$V09=[1,3828],$V19=[1,3827],$V29=[1,3849],$V39=[1,3855],$V49=[1,3854],$V59=[1,3875],$V69=[1,3881],$V79=[1,3880],$V89=[1,3902],$V99=[1,3908],$Va9=[1,3907],$Vb9=[107,117,131,136,137,186,189],$Vc9=[1,3950],$Vd9=[1,3974],$Ve9=[1,4016],$Vf9=[1,4049],$Vg9=[1,4154],$Vh9=[1,4197],$Vi9=[1,4203],$Vj9=[1,4202],$Vk9=[1,4238],$Vl9=[1,4280],$Vm9=[1,4336],$Vn9=[66,107,131,136,137,186,189],$Vo9=[1,4391],$Vp9=[1,4415],$Vq9=[1,4445],$Vr9=[1,4491],$Vs9=[1,4563],$Vt9=[1,4612];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"shexDoc\":3,\"initParser\":4,\"Qdirective_E_Star\":5,\"Q_O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C_E_Opt\":6,\"EOF\":7,\"directive\":8,\"O_QnotStartAction_E_Or_QstartActions_E_C\":9,\"notStartAction\":10,\"startActions\":11,\"Qstatement_E_Star\":12,\"statement\":13,\"O_QnotStartAction_E_Or_QstartActions_E_S_Qstatement_E_Star_C\":14,\"baseDecl\":15,\"prefixDecl\":16,\"importDecl\":17,\"IT_BASE\":18,\"IRIREF\":19,\"IT_PREFIX\":20,\"PNAME_NS\":21,\"iri\":22,\"IT_IMPORT\":23,\"start\":24,\"shapeExprDecl\":25,\"IT_start\":26,\"=\":27,\"shapeAnd\":28,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Star\":29,\"QcodeDecl_E_Plus\":30,\"codeDecl\":31,\"shapeExprLabel\":32,\"O_QshapeExpression_E_Or_QIT_EXTERNAL_E_C\":33,\"shapeExpression\":34,\"IT_EXTERNAL\":35,\"QIT_NOT_E_Opt\":36,\"shapeAtomNoRef\":37,\"QshapeOr_E_Opt\":38,\"IT_NOT\":39,\"shapeRef\":40,\"shapeOr\":41,\"inlineShapeExpression\":42,\"inlineShapeOr\":43,\"Q_O_QIT_OR_E_S_QshapeAnd_E_C_E_Plus\":44,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Plus\":45,\"O_QIT_OR_E_S_QshapeAnd_E_C\":46,\"IT_OR\":47,\"O_QIT_AND_E_S_QshapeNot_E_C\":48,\"IT_AND\":49,\"shapeNot\":50,\"inlineShapeAnd\":51,\"Q_O_QIT_OR_E_S_QinlineShapeAnd_E_C_E_Star\":52,\"O_QIT_OR_E_S_QinlineShapeAnd_E_C\":53,\"Q_O_QIT_AND_E_S_QshapeNot_E_C_E_Star\":54,\"inlineShapeNot\":55,\"Q_O_QIT_AND_E_S_QinlineShapeNot_E_C_E_Star\":56,\"O_QIT_AND_E_S_QinlineShapeNot_E_C\":57,\"shapeAtom\":58,\"inlineShapeAtom\":59,\"nonLitNodeConstraint\":60,\"QshapeOrRef_E_Opt\":61,\"litNodeConstraint\":62,\"shapeOrRef\":63,\"QnonLitNodeConstraint_E_Opt\":64,\"(\":65,\")\":66,\".\":67,\"shapeDefinition\":68,\"nonLitInlineNodeConstraint\":69,\"QinlineShapeOrRef_E_Opt\":70,\"litInlineNodeConstraint\":71,\"inlineShapeOrRef\":72,\"QnonLitInlineNodeConstraint_E_Opt\":73,\"inlineShapeDefinition\":74,\"ATPNAME_LN\":75,\"ATPNAME_NS\":76,\"@\":77,\"Qannotation_E_Star\":78,\"semanticActions\":79,\"annotation\":80,\"IT_LITERAL\":81,\"QxsFacet_E_Star\":82,\"datatype\":83,\"valueSet\":84,\"QnumericFacet_E_Plus\":85,\"xsFacet\":86,\"numericFacet\":87,\"nonLiteralKind\":88,\"QstringFacet_E_Star\":89,\"QstringFacet_E_Plus\":90,\"stringFacet\":91,\"IT_IRI\":92,\"IT_BNODE\":93,\"IT_NONLITERAL\":94,\"stringLength\":95,\"INTEGER\":96,\"REGEXP\":97,\"IT_LENGTH\":98,\"IT_MINLENGTH\":99,\"IT_MAXLENGTH\":100,\"numericRange\":101,\"rawNumeric\":102,\"numericLength\":103,\"DECIMAL\":104,\"DOUBLE\":105,\"string\":106,\"^^\":107,\"IT_MININCLUSIVE\":108,\"IT_MINEXCLUSIVE\":109,\"IT_MAXINCLUSIVE\":110,\"IT_MAXEXCLUSIVE\":111,\"IT_TOTALDIGITS\":112,\"IT_FRACTIONDIGITS\":113,\"Q_O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C_E_Star\":114,\"{\":115,\"QtripleExpression_E_Opt\":116,\"}\":117,\"O_Qextension_E_Or_QextraPropertySet_E_Or_QIT_CLOSED_E_C\":118,\"extension\":119,\"extraPropertySet\":120,\"IT_CLOSED\":121,\"tripleExpression\":122,\"IT_EXTRA\":123,\"Qpredicate_E_Plus\":124,\"predicate\":125,\"oneOfTripleExpr\":126,\"groupTripleExpr\":127,\"multiElementOneOf\":128,\"Q_O_QGT_PIPE_E_S_QgroupTripleExpr_E_C_E_Plus\":129,\"O_QGT_PIPE_E_S_QgroupTripleExpr_E_C\":130,\"|\":131,\"singleElementGroup\":132,\"multiElementGroup\":133,\"unaryTripleExpr\":134,\"QGT_SEMI_E_Opt\":135,\",\":136,\";\":137,\"Q_O_QGT_SEMI_E_S_QunaryTripleExpr_E_C_E_Plus\":138,\"O_QGT_SEMI_E_S_QunaryTripleExpr_E_C\":139,\"Q_O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C_E_Opt\":140,\"O_QtripleConstraint_E_Or_QbracketedTripleExpr_E_C\":141,\"include\":142,\"O_QGT_DOLLAR_E_S_QtripleExprLabel_E_C\":143,\"$\":144,\"tripleExprLabel\":145,\"tripleConstraint\":146,\"bracketedTripleExpr\":147,\"Qcardinality_E_Opt\":148,\"cardinality\":149,\"QsenseFlags_E_Opt\":150,\"senseFlags\":151,\"*\":152,\"+\":153,\"?\":154,\"REPEAT_RANGE\":155,\"^\":156,\"[\":157,\"QvalueSetValue_E_Star\":158,\"]\":159,\"valueSetValue\":160,\"iriRange\":161,\"literalRange\":162,\"languageRange\":163,\"O_QiriExclusion_E_Plus_Or_QliteralExclusion_E_Plus_Or_QlanguageExclusion_E_Plus_C\":164,\"QiriExclusion_E_Plus\":165,\"iriExclusion\":166,\"QliteralExclusion_E_Plus\":167,\"literalExclusion\":168,\"QlanguageExclusion_E_Plus\":169,\"languageExclusion\":170,\"Q_O_QGT_TILDE_E_S_QiriExclusion_E_Star_C_E_Opt\":171,\"QiriExclusion_E_Star\":172,\"O_QGT_TILDE_E_S_QiriExclusion_E_Star_C\":173,\"~\":174,\"-\":175,\"QGT_TILDE_E_Opt\":176,\"literal\":177,\"Q_O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C_E_Opt\":178,\"QliteralExclusion_E_Star\":179,\"O_QGT_TILDE_E_S_QliteralExclusion_E_Star_C\":180,\"LANGTAG\":181,\"Q_O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C_E_Opt\":182,\"O_QGT_TILDE_E_S_QlanguageExclusion_E_Star_C\":183,\"QlanguageExclusion_E_Star\":184,\"&\":185,\"//\":186,\"O_Qiri_E_Or_Qliteral_E_C\":187,\"QcodeDecl_E_Star\":188,\"%\":189,\"O_QCODE_E_Or_QGT_MODULO_E_C\":190,\"CODE\":191,\"rdfLiteral\":192,\"numericLiteral\":193,\"booleanLiteral\":194,\"a\":195,\"blankNode\":196,\"langString\":197,\"Q_O_QGT_DTYPE_E_S_Qdatatype_E_C_E_Opt\":198,\"O_QGT_DTYPE_E_S_Qdatatype_E_C\":199,\"IT_true\":200,\"IT_false\":201,\"STRING_LITERAL1\":202,\"STRING_LITERAL_LONG1\":203,\"STRING_LITERAL2\":204,\"STRING_LITERAL_LONG2\":205,\"LANG_STRING_LITERAL1\":206,\"LANG_STRING_LITERAL_LONG1\":207,\"LANG_STRING_LITERAL2\":208,\"LANG_STRING_LITERAL_LONG2\":209,\"prefixedName\":210,\"PNAME_LN\":211,\"BLANK_NODE_LABEL\":212,\"O_QIT_EXTENDS_E_Or_QGT_AMP_E_C\":213,\"QshapeExprLabel_E_Plus\":214,\"IT_EXTENDS\":215,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",7:\"EOF\",18:\"IT_BASE\",19:\"IRIREF\",20:\"IT_PREFIX\",21:\"PNAME_NS\",23:\"IT_IMPORT\",26:\"IT_start\",27:\"=\",35:\"IT_EXTERNAL\",39:\"IT_NOT\",47:\"IT_OR\",49:\"IT_AND\",65:\"(\",66:\")\",67:\".\",75:\"ATPNAME_LN\",76:\"ATPNAME_NS\",77:\"@\",81:\"IT_LITERAL\",92:\"IT_IRI\",93:\"IT_BNODE\",94:\"IT_NONLITERAL\",96:\"INTEGER\",97:\"REGEXP\",98:\"IT_LENGTH\",99:\"IT_MINLENGTH\",100:\"IT_MAXLENGTH\",104:\"DECIMAL\",105:\"DOUBLE\",107:\"^^\",108:\"IT_MININCLUSIVE\",109:\"IT_MINEXCLUSIVE\",110:\"IT_MAXINCLUSIVE\",111:\"IT_MAXEXCLUSIVE\",112:\"IT_TOTALDIGITS\",113:\"IT_FRACTIONDIGITS\",115:\"{\",117:\"}\",121:\"IT_CLOSED\",123:\"IT_EXTRA\",131:\"|\",136:\",\",137:\";\",144:\"$\",152:\"*\",153:\"+\",154:\"?\",155:\"REPEAT_RANGE\",156:\"^\",157:\"[\",159:\"]\",174:\"~\",175:\"-\",181:\"LANGTAG\",185:\"&\",186:\"//\",189:\"%\",191:\"CODE\",195:\"a\",200:\"IT_true\",201:\"IT_false\",202:\"STRING_LITERAL1\",203:\"STRING_LITERAL_LONG1\",204:\"STRING_LITERAL2\",205:\"STRING_LITERAL_LONG2\",206:\"LANG_STRING_LITERAL1\",207:\"LANG_STRING_LITERAL_LONG1\",208:\"LANG_STRING_LITERAL2\",209:\"LANG_STRING_LITERAL_LONG2\",211:\"PNAME_LN\",212:\"BLANK_NODE_LABEL\",215:\"IT_EXTENDS\"},\nproductions_: [0,[3,4],[4,0],[5,0],[5,2],[9,1],[9,1],[12,0],[12,2],[14,2],[6,0],[6,1],[8,1],[8,1],[8,1],[15,2],[16,3],[17,2],[10,1],[10,1],[24,4],[11,1],[30,1],[30,2],[13,1],[13,1],[25,2],[33,1],[33,1],[34,3],[34,3],[34,2],[38,0],[38,1],[42,1],[41,1],[41,2],[46,2],[44,1],[44,2],[48,2],[45,1],[45,2],[29,0],[29,2],[43,2],[53,2],[52,0],[52,2],[28,2],[54,0],[54,2],[51,2],[57,2],[56,0],[56,2],[50,2],[36,0],[36,1],[55,2],[58,2],[58,1],[58,2],[58,3],[58,1],[61,0],[61,1],[64,0],[64,1],[37,2],[37,1],[37,2],[37,3],[37,1],[59,2],[59,1],[59,2],[59,3],[59,1],[70,0],[70,1],[73,0],[73,1],[63,1],[63,1],[72,1],[72,1],[40,1],[40,1],[40,2],[62,3],[78,0],[78,2],[60,3],[71,2],[71,2],[71,2],[71,1],[82,0],[82,2],[85,1],[85,2],[69,2],[69,1],[89,0],[89,2],[90,1],[90,2],[88,1],[88,1],[88,1],[86,1],[86,1],[91,2],[91,1],[95,1],[95,1],[95,1],[87,2],[87,2],[102,1],[102,1],[102,1],[102,3],[101,1],[101,1],[101,1],[101,1],[103,1],[103,1],[68,3],[74,4],[118,1],[118,1],[118,1],[114,0],[114,2],[116,0],[116,1],[120,2],[124,1],[124,2],[122,1],[126,1],[126,1],[128,2],[130,2],[129,1],[129,2],[127,1],[127,1],[132,2],[135,0],[135,1],[135,1],[133,3],[139,2],[139,2],[138,1],[138,2],[134,2],[134,1],[143,2],[140,0],[140,1],[141,1],[141,1],[147,6],[148,0],[148,1],[146,6],[150,0],[150,1],[149,1],[149,1],[149,1],[149,1],[151,1],[84,3],[158,0],[158,2],[160,1],[160,1],[160,1],[160,2],[165,1],[165,2],[167,1],[167,2],[169,1],[169,2],[164,1],[164,1],[164,1],[161,2],[172,0],[172,2],[173,2],[171,0],[171,1],[166,3],[176,0],[176,1],[162,2],[179,0],[179,2],[180,2],[178,0],[178,1],[168,3],[163,2],[163,2],[184,0],[184,2],[183,2],[182,0],[182,1],[170,3],[142,2],[80,3],[187,1],[187,1],[79,1],[188,0],[188,2],[31,3],[190,1],[190,1],[177,1],[177,1],[177,1],[125,1],[125,1],[83,1],[32,1],[32,1],[145,1],[145,1],[193,1],[193,1],[193,1],[192,1],[192,2],[199,2],[198,0],[198,1],[194,1],[194,1],[106,1],[106,1],[106,1],[106,1],[197,1],[197,1],[197,1],[197,1],[22,1],[22,1],[210,1],[210,1],[196,1],[119,2],[213,1],[213,1],[214,1],[214,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n        let imports = Object.keys(Parser._imports).length ? { imports: Parser._imports } : {}\n        var startObj = Parser.start ? { start: Parser.start } : {};\n        var startActs = Parser.startActs ? { startActs: Parser.startActs } : {};\n        let shapes = Parser.shapes ? { shapes: Object.values(Parser.shapes) } : {};\n        var shexj = Object.assign(\n          { type: \"Schema\" }, imports, startActs, startObj, shapes\n        )\n        if (Parser.options.index) {\n          if (Parser._base !== null)\n            shexj._base = Parser._base;\n          shexj._prefixes = Parser._prefixes;\n          shexj._index = {\n            shapeExprs: Parser.shapes || new Map(),\n            tripleExprs: Parser.productions || new Map()\n          };\n          shexj._sourceMap = Parser._sourceMap;\n        }\n        return shexj;\n      \nbreak;\ncase 2:\n yy.parser.yy = { lexer: yy.lexer} ; \nbreak;\ncase 15:\n // t: @@\n        Parser._setBase(Parser._base === null ||\n                    absoluteIRI.test($$[$0].slice(1, -1)) ? $$[$0].slice(1, -1) : _resolveIRI($$[$0].slice(1, -1)));\n      \nbreak;\ncase 16:\n // t: ShExParser-test.js/with pre-defined prefixes\n        Parser._prefixes[$$[$0-1].slice(0, -1)] = $$[$0];\n      \nbreak;\ncase 17:\n // t: @@\n        Parser._imports.push($$[$0]);\n      \nbreak;\ncase 20:\n\n        if (Parser.start)\n          error(new Error(\"Parse error: start already defined\"), yy);\n        Parser.start = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]); // t: startInline\n      \nbreak;\ncase 21:\n\n        Parser.startActs = $$[$0]; // t: startCode1\n      \nbreak;\ncase 22:\nthis.$ = [$$[$0]] // t: startCode1;\nbreak;\ncase 23:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: startCode3;\nbreak;\ncase 26:\n // t: 1dot 1val1vsMinusiri3??\n        addShape($$[$0-1],  $$[$0], yy);\n      \nbreak;\ncase 27:\n\n        this.$ = nonest($$[$0]);\n      \nbreak;\ncase 28:\nthis.$ = { type: \"ShapeExternal\" };\nbreak;\ncase 29:\n\n        if ($$[$0-2])\n          $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) }; // t:@@\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 30:\n\n        $$[$0-1] = { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0-1]) } // !!! opt\n        if ($$[$0]) { // If there were disjuncts,\n          //           shapeOr will have $$[$0].set needsAtom.\n          //           Prepend $$[$0].needsAtom with $$[$0-1].\n          //           Note that $$[$0] may be a ShapeOr or a ShapeAnd.\n          $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n          delete $$[$0].needsAtom;\n          this.$ = $$[$0];\n        } else {\n          this.$ = $$[$0-1];\n        }\n      \nbreak;\ncase 31:\n\n        $$[$0].needsAtom.unshift(nonest($$[$0-1]));\n        delete $$[$0].needsAtom;\n        this.$ = $$[$0]; // { type: \"ShapeOr\", \"shapeExprs\": [$$[$0-1]].concat($$[$0]) };\n      \nbreak;\ncase 32: case 227: case 244:\nthis.$ = null;\nbreak;\ncase 33: case 37: case 40: case 46: case 53: case 184: case 243:\nthis.$ = $$[$0];\nbreak;\ncase 35:\n // returns a ShapeOr\n        var disjuncts = $$[$0].map(nonest);\n        this.$ = { type: \"ShapeOr\", shapeExprs: disjuncts, needsAtom: disjuncts }; // t: @@\n      \nbreak;\ncase 36:\n // returns a ShapeAnd\n        // $$[$0-1] could have implicit conjuncts and explicit nested ANDs (will have .nested: true)\n        $$[$0-1].filter(c => c.type === \"ShapeAnd\").length === $$[$0-1].length\n        var and = {\n          type: \"ShapeAnd\",\n          shapeExprs: $$[$0-1].reduce(\n            (acc, elt) =>\n              acc.concat(elt.type === 'ShapeAnd' && !elt.nested ? elt.shapeExprs : nonest(elt)), []\n          )\n        };\n        this.$ = $$[$0].length > 0 ? { type: \"ShapeOr\", shapeExprs: [and].concat($$[$0].map(nonest)) } : and; // t: @@\n        this.$.needsAtom = and.shapeExprs;\n      \nbreak;\ncase 38: case 41:\nthis.$ = [$$[$0]];\nbreak;\ncase 39: case 42: case 44: case 48: case 51: case 55:\nthis.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 43: case 47: case 50: case 54:\nthis.$ = [];\nbreak;\ncase 45:\nthis.$ = shapeJunction(\"ShapeOr\", $$[$0-1], $$[$0]);\nbreak;\ncase 49: case 52:\nthis.$ = shapeJunction(\"ShapeAnd\", $$[$0-1], $$[$0]) // t: @@;\nbreak;\ncase 56:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t:@@ */ : $$[$0];\nbreak;\ncase 57:\nthis.$ = false;\nbreak;\ncase 58:\nthis.$ = true;\nbreak;\ncase 59:\nthis.$ = $$[$0-1] ? { type: \"ShapeNot\", \"shapeExpr\": nonest($$[$0]) } /* t: 1NOTNOTdot, 1NOTNOTIRI, 1NOTNOTvs */ : $$[$0];\nbreak;\ncase 60: case 69: case 74:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1];\nbreak;\ncase 62:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t: 1dotRef1 */ : $$[$0-1] // t:@@;\nbreak;\ncase 63: case 72: case 77:\nthis.$ = Object.assign($$[$0-1], {nested: true}) // t: 1val1vsMinusiri3;\nbreak;\ncase 64: case 73: case 78:\nthis.$ = EmptyShape // t: 1dot;\nbreak;\ncase 71:\nthis.$ = $$[$0] ? shapeJunction(\"ShapeAnd\", $$[$0-1], [$$[$0]]) /* t:@@ */ : $$[$0-1]\t // t: 1dotRef1 -- use _QnonLitNodeConstraint_E_Opt like below?;\nbreak;\ncase 76:\nthis.$ = $$[$0] ? { type: \"ShapeAnd\", shapeExprs: [ extend({ type: \"NodeConstraint\" }, $$[$0-1]), $$[$0] ] } : $$[$0-1] // t: !! look to 1dotRef1;\nbreak;\ncase 87:\n // t: 1dotRefLNex@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        var namePos = $$[$0].indexOf(':');\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, namePos), yy) + $$[$0].substr(namePos + 1), yy); // ShapeRef\n      \nbreak;\ncase 88:\n // t: 1dotRefNS1@@\n        $$[$0] = $$[$0].substr(1, $$[$0].length-1);\n        this.$ = addSourceMap(expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy), yy); // ShapeRef\n      \nbreak;\ncase 89:\nthis.$ = addSourceMap($$[$0], yy) // ShapeRef // t: 1dotRef1, 1dotRefSpaceLNex, 1dotRefSpaceNS1;\nbreak;\ncase 90: case 93:\n // t: !!\n        this.$ = $$[$0-2]\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !!\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !!\n      \nbreak;\ncase 91:\nthis.$ = [] // t: 1dot, 1dotAnnot3;\nbreak;\ncase 92:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotAnnot3;\nbreak;\ncase 94:\nthis.$ = extend({ type: \"NodeConstraint\", nodeKind: \"literal\" }, $$[$0]) // t: 1literalPattern;\nbreak;\ncase 95:\n\n        if (numericDatatypes.indexOf($$[$0-1]) === -1)\n          numericFacets.forEach(function (facet) {\n            if (facet in $$[$0])\n              error(new Error(\"Parse error: facet \" + facet + \" not allowed for unknown datatype \" + $$[$0-1]), yy);\n          });\n        this.$ = extend({ type: \"NodeConstraint\", datatype: $$[$0-1] }, $$[$0]) // t: 1datatype\n      \nbreak;\ncase 96:\nthis.$ = { type: \"NodeConstraint\", values: $$[$0-1] } // t: 1val1IRIREF;\nbreak;\ncase 97:\nthis.$ = extend({ type: \"NodeConstraint\"}, $$[$0]);\nbreak;\ncase 98:\nthis.$ = {} // t: 1literalPattern;\nbreak;\ncase 99:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: 1literalLength\n      \nbreak;\ncase 101: case 107:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0]) // t: !! look to 1literalLength\n      \nbreak;\ncase 102:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0-1], $$[$0] ? $$[$0] : {}) // t: 1iriPattern;\nbreak;\ncase 103:\nthis.$ = extend({ type: \"NodeConstraint\" }, $$[$0]) // t: @@;\nbreak;\ncase 104:\nthis.$ = {};\nbreak;\ncase 105:\n\n        if (Object.keys($$[$0-1]).indexOf(Object.keys($$[$0])[0]) !== -1) {\n          error(new Error(\"Parse error: facet \"+Object.keys($$[$0])[0]+\" defined multiple times\"), yy);\n        }\n        this.$ = extend($$[$0-1], $$[$0])\n      \nbreak;\ncase 108:\nthis.$ = { nodeKind: \"iri\" } // t: 1iriPattern;\nbreak;\ncase 109:\nthis.$ = { nodeKind: \"bnode\" } // t: 1bnodeLength;\nbreak;\ncase 110:\nthis.$ = { nodeKind: \"nonliteral\" } // t: 1nonliteralLength;\nbreak;\ncase 113:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalLength;\nbreak;\ncase 114:\nthis.$ = unescapeRegexp($$[$0]) // t: 1literalPattern;\nbreak;\ncase 115:\nthis.$ = \"length\" // t: 1literalLength;\nbreak;\ncase 116:\nthis.$ = \"minlength\" // t: 1literalMinlength;\nbreak;\ncase 117:\nthis.$ = \"maxlength\" // t: 1literalMaxlength;\nbreak;\ncase 118:\nthis.$ = keyValObject($$[$0-1], $$[$0]) // t: 1literalMininclusive;\nbreak;\ncase 119:\nthis.$ = keyValObject($$[$0-1], parseInt($$[$0], 10)) // t: 1literalTotaldigits;\nbreak;\ncase 120:\nthis.$ = parseInt($$[$0], 10);\nbreak;\ncase 121: case 122:\nthis.$ = parseFloat($$[$0]);\nbreak;\ncase 123:\n // ## deprecated\n        if ($$[$0] === XSD_DECIMAL || $$[$0] === XSD_FLOAT || $$[$0] === XSD_DOUBLE)\n          this.$ = parseFloat($$[$0-2].value);\n        else if (numericDatatypes.indexOf($$[$0]) !== -1)\n          this.$ = parseInt($$[$0-2].value)\n        else\n          error(new Error(\"Parse error: numeric range facet expected numeric datatype instead of \" + $$[$0]), yy);\n      \nbreak;\ncase 124:\nthis.$ = \"mininclusive\" // t: 1literalMininclusive;\nbreak;\ncase 125:\nthis.$ = \"minexclusive\" // t: 1literalMinexclusive;\nbreak;\ncase 126:\nthis.$ = \"maxinclusive\" // t: 1literalMaxinclusive;\nbreak;\ncase 127:\nthis.$ = \"maxexclusive\" // t: 1literalMaxexclusive;\nbreak;\ncase 128:\nthis.$ = \"totaldigits\" // t: 1literalTotaldigits;\nbreak;\ncase 129:\nthis.$ = \"fractiondigits\" // t: 1literalFractiondigits;\nbreak;\ncase 130:\n // t: 1dotInherit3\n        this.$ = $$[$0-2] === EmptyShape ? { type: \"Shape\" } : $$[$0-2]; // t: 0\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: !! look to open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = $$[$0].semActs; } // t: !! look to open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 131:\n // t: 1dotInherit3\n        var exprObj = $$[$0-1] ? { expression: $$[$0-1] } : EmptyObject; // t: 0, 0Inherit1\n        this.$ = (exprObj === EmptyObject && $$[$0-3] === EmptyObject) ?\n\t  EmptyShape :\n\t  extend({ type: \"Shape\" }, exprObj, $$[$0-3]);\n      \nbreak;\ncase 132:\nthis.$ = [ \"inherit\", $$[$0] ] // t: 1dotInherit1;\nbreak;\ncase 133:\nthis.$ = [ \"extra\", $$[$0] ] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 134:\nthis.$ = [ \"closed\", true ] // t: 1dotClosed;\nbreak;\ncase 135:\nthis.$ = EmptyObject;\nbreak;\ncase 136:\n\n        if ($$[$0-1] === EmptyObject)\n          $$[$0-1] = {};\n        if ($$[$0][0] === \"closed\")\n          $$[$0-1][\"closed\"] = true; // t: 1dotClosed\n        else if ($$[$0][0] in $$[$0-1])\n          $$[$0-1][$$[$0][0]] = unionAll($$[$0-1][$$[$0][0]], $$[$0][1]); // t: 1dotInherit3, 3groupdot3Extra, 3groupdotExtra3\n        else\n          $$[$0-1][$$[$0][0]] = $$[$0][1]; // t: 1dotInherit1\n        this.$ = $$[$0-1];\n      \nbreak;\ncase 139:\nthis.$ = $$[$0] // t: 1dotExtra1, 3groupdot3Extra;\nbreak;\ncase 140:\nthis.$ = [$$[$0]] // t: 1dotExtra1, 3groupdot3Extra, 3groupdotExtra3;\nbreak;\ncase 141:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 3groupdotExtra3;\nbreak;\ncase 145:\nthis.$ = { type: \"OneOf\", expressions: unionAll([$$[$0-1]], $$[$0]) } // t: 2oneOfdot;\nbreak;\ncase 146:\nthis.$ = $$[$0] // t: 2oneOfdot;\nbreak;\ncase 147:\nthis.$ = [$$[$0]] // t: 2oneOfdot;\nbreak;\ncase 148:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2oneOfdot;\nbreak;\ncase 151:\nthis.$ = $$[$0-1];\nbreak;\ncase 155:\nthis.$ = { type: \"EachOf\", expressions: unionAll([$$[$0-2]], $$[$0-1]) } // t: 2groupOfdot;\nbreak;\ncase 156:\nthis.$ = $$[$0] // ## deprecated // t: 2groupOfdot;\nbreak;\ncase 157:\nthis.$ = $$[$0] // t: 2groupOfdot;\nbreak;\ncase 158:\nthis.$ = [$$[$0]] // t: 2groupOfdot;\nbreak;\ncase 159:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 2groupOfdot;\nbreak;\ncase 160:\n\n        if ($$[$0-1]) {\n          this.$ = extend({ id: $$[$0-1] }, $$[$0]);\n          addProduction($$[$0-1],  this.$, yy);\n        } else {\n          this.$ = $$[$0]\n        }\n      \nbreak;\ncase 162:\nthis.$ = addSourceMap($$[$0], yy);\nbreak;\ncase 167:\n\n        // t: open1dotOr1dot, !openopen1dotcloseCode1closeCode2\n        this.$ = $$[$0-4];\n        // Copy all of the new attributes into the encapsulated shape.\n        if (\"min\" in $$[$0-2]) { this.$.min = $$[$0-2].min; } // t: open3groupdotclosecard23Annot3Code2\n        if (\"max\" in $$[$0-2]) { this.$.max = $$[$0-2].max; } // t: open3groupdotclosecard23Annot3Code2\n        if ($$[$0-1].length) { this.$.annotations = $$[$0-1]; } // t: open3groupdotcloseAnnot3, open3groupdotclosecard23Annot3Code2\n        if ($$[$0]) { this.$.semActs = \"semActs\" in $$[$0-4] ? $$[$0-4].semActs.concat($$[$0].semActs) : $$[$0].semActs; } // t: open3groupdotcloseCode1, !open1dotOr1dot\n      \nbreak;\ncase 168:\nthis.$ = {} // t: 1dot;\nbreak;\ncase 170:\n\n        // $$[$0]: t: 1dotCode1\n\tif ($$[$0-3] !== EmptyShape && false) {\n\t  var t = blank();\n\t  addShape(t, $$[$0-3], yy);\n\t  $$[$0-3] = t; // ShapeRef\n\t}\n        // %6: t: 1inversedotCode1\n        this.$ = extend({ type: \"TripleConstraint\" }, $$[$0-5] ? $$[$0-5] : {}, { predicate: $$[$0-4] }, ($$[$0-3] === EmptyShape ? {} : { valueExpr: $$[$0-3] }), $$[$0-2], $$[$0]); // t: 1dot // t: 1inversedot\n        if ($$[$0-1].length)\n          this.$[\"annotations\"] = $$[$0-1]; // t: 1dotAnnot3 // t: 1inversedotAnnot3\n      \nbreak;\ncase 173:\nthis.$ = { min:0, max:UNBOUNDED } // t: 1cardStar;\nbreak;\ncase 174:\nthis.$ = { min:1, max:UNBOUNDED } // t: 1cardPlus;\nbreak;\ncase 175:\nthis.$ = { min:0, max:1 } // t: 1cardOpt;\nbreak;\ncase 176:\n\n        $$[$0] = $$[$0].substr(1, $$[$0].length-2);\n        var nums = $$[$0].match(/(\\d+)/g);\n        this.$ = { min: parseInt(nums[0], 10) }; // t: 1card2blank, 1card2Star\n        if (nums.length === 2)\n            this.$[\"max\"] = parseInt(nums[1], 10); // t: 1card23\n        else if ($$[$0].indexOf(',') === -1) // t: 1card2\n            this.$[\"max\"] = parseInt(nums[0], 10);\n        else\n            this.$[\"max\"] = UNBOUNDED;\n      \nbreak;\ncase 177:\nthis.$ = { inverse: true } // t: 1inversedot;\nbreak;\ncase 178:\nthis.$ = $$[$0-1] // t: 1val1IRIREF;\nbreak;\ncase 179:\nthis.$ = [] // t: 1val1IRIREF;\nbreak;\ncase 180:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1IRIREF;\nbreak;\ncase 185:\nthis.$ = [$$[$0]] // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 186:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusiri3, 1val1dotMinusiriStem3;\nbreak;\ncase 187:\nthis.$ = [$$[$0]] // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 188:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinusliteral3, 1val1dotMinusliteralStem3;\nbreak;\ncase 189:\nthis.$ = [$$[$0]] // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 190:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t:1val1dotMinuslanguage3, 1val1dotMinuslanguageStem3;\nbreak;\ncase 191:\nthis.$ = { type: \"IriStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 192:\nthis.$ = { type: \"LiteralStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 193:\nthis.$ = { type: \"LanguageStemRange\", stem: { type: \"Wildcard\" }, exclusions: $$[$0] };\nbreak;\ncase 194:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1iriStem, 1val1iriStemMinusiri3\n            type: $$[$0].length ? \"IriStemRange\" : \"IriStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1iriStemMinusiri3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1IRIREF, 1AvalA\n        }\n      \nbreak;\ncase 195:\nthis.$ = [] // t: 1val1iriStem, 1val1iriStemMinusiri3;\nbreak;\ncase 196:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1iriStemMinusiri3;\nbreak;\ncase 197:\nthis.$ = $$[$0] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 200:\nthis.$ = $$[$0] ? { type: \"IriStem\", stem: $$[$0-1] } /* t: 1val1iriStemMinusiriStem3 */ : $$[$0-1] // t: 1val1iriStemMinusiri3;\nbreak;\ncase 203:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1literalStemMinusliteralStem3, 1val1literalStem\n            type: $$[$0].length ? \"LiteralStemRange\" : \"LiteralStem\",\n            stem: $$[$0-1].value\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1literalStemMinusliteral3\n        } else {\n          this.$ = $$[$0-1]; // t: 1val1LITERAL\n        }\n      \nbreak;\ncase 204:\nthis.$ = [] // t: 1val1literalStem, 1val1literalStemMinusliteral3;\nbreak;\ncase 205:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 206:\nthis.$ = $$[$0] // t: 1val1literalStemMinusliteral3;\nbreak;\ncase 209:\nthis.$ = $$[$0] ? { type: \"LiteralStem\", stem: $$[$0-1].value } /* t: 1val1literalStemMinusliteral3 */ : $$[$0-1].value // t: 1val1literalStemMinusliteralStem3;\nbreak;\ncase 210:\n\n        if ($$[$0]) {\n          this.$ = {  // t: 1val1languageStemMinuslanguage3 1val1languageStemMinuslanguageStem3 : 1val1languageStem\n            type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n            stem: $$[$0-1]\n          };\n          if ($$[$0].length)\n            this.$[\"exclusions\"] = $$[$0]; // t: 1val1languageStemMinuslanguage3, 1val1languageStemMinuslanguageStem3\n        } else {\n          this.$ = { type: \"Language\", languageTag: $$[$0-1] }; // t: 1val1language\n        }\n      \nbreak;\ncase 211:\n\n        this.$ = {  // t: @@\n          type: $$[$0].length ? \"LanguageStemRange\" : \"LanguageStem\",\n          stem: \"\"\n        };\n        if ($$[$0].length)\n          this.$[\"exclusions\"] = $$[$0]; // t: @@\n      \nbreak;\ncase 212:\nthis.$ = [] // t: 1val1languageStem, 1val1languageStemMinuslanguage3;\nbreak;\ncase 213:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 214:\nthis.$ = $$[$0] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 217:\nthis.$ = $$[$0] ? { type: \"LanguageStem\", stem: $$[$0-1] } /* t: 1val1languageStemMinuslanguageStem3 */ : $$[$0-1] // t: 1val1languageStemMinuslanguage3;\nbreak;\ncase 218:\nthis.$ = addSourceMap($$[$0], yy) // Inclusion // t: 2groupInclude1;\nbreak;\ncase 219:\nthis.$ = { type: \"Annotation\", predicate: $$[$0-1], object: $$[$0] } // t: 1dotAnnotIRIREF;\nbreak;\ncase 222:\nthis.$ = $$[$0].length ? { semActs: $$[$0] } : null // t: 1dotCode1/2oneOfDot;\nbreak;\ncase 223:\nthis.$ = [] // t: 1dot, 1dotCode1;\nbreak;\ncase 224:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotCode1;\nbreak;\ncase 225:\nthis.$ = $$[$0] ? unescapeSemanticAction($$[$0-1], $$[$0]) /* t: 1dotCode1 */ : { type: \"SemAct\", name: $$[$0-1] } // t: 1dotNoCode1;\nbreak;\ncase 232:\nthis.$ = RDF_TYPE // t: 1AvalA;\nbreak;\ncase 238:\nthis.$ = createLiteral($$[$0], XSD_INTEGER) // t: 1val1INTEGER;\nbreak;\ncase 239:\nthis.$ = createLiteral($$[$0], XSD_DECIMAL) // t: 1val1DECIMAL;\nbreak;\ncase 240:\nthis.$ = createLiteral($$[$0], XSD_DOUBLE) // t: 1val1DOUBLE;\nbreak;\ncase 242:\nthis.$ = $$[$0] ? extend($$[$0-1], { type: $$[$0] }) : $$[$0-1] // t: 1val1Datatype;\nbreak;\ncase 246:\nthis.$ = { value: \"true\", type: XSD_BOOLEAN } // t: 1val1true;\nbreak;\ncase 247:\nthis.$ = { value: \"false\", type: XSD_BOOLEAN } // t: 1val1false;\nbreak;\ncase 248:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL2;\nbreak;\ncase 249:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL1;\nbreak;\ncase 250:\nthis.$ = unescapeString($$[$0], 1)\t// t: 1val1STRING_LITERAL_LONG2;\nbreak;\ncase 251:\nthis.$ = unescapeString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG1;\nbreak;\ncase 252:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: @@;\nbreak;\ncase 253:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: @@;\nbreak;\ncase 254:\nthis.$ = unescapeLangString($$[$0], 1)\t// t: 1val1LANGTAG;\nbreak;\ncase 255:\nthis.$ = unescapeLangString($$[$0], 3)\t// t: 1val1STRING_LITERAL_LONG2_with_LANGTAG;\nbreak;\ncase 256:\n // t: 1dot\n        var unesc = ShExUtil.unescapeText($$[$0].slice(1,-1), {});\n        this.$ = Parser._base === null || absoluteIRI.test(unesc) ? unesc : _resolveIRI(unesc)\n      \nbreak;\ncase 258:\n // t:1dotPNex, 1dotPNdefault, ShExParser-test.js/with pre-defined prefixes\n        var namePos = $$[$0].indexOf(':');\n        this.$ = expandPrefix($$[$0].substr(0, namePos), yy) + ShExUtil.unescapeText($$[$0].substr(namePos + 1), pnameEscapeReplacements);\n      \nbreak;\ncase 259:\n // t: 1dotNS2, 1dotNSdefault, ShExParser-test.js/PNAME_NS with pre-defined prefixes\n        this.$ = expandPrefix($$[$0].substr(0, $$[$0].length - 1), yy);\n      \nbreak;\ncase 261:\nthis.$ = $$[$0] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 264:\nthis.$ = [$$[$0]] // t: 1dotInherit1, 1dot3Inherit, 1dotInherit3;\nbreak;\ncase 265:\nthis.$ = appendTo($$[$0-1], $$[$0]) // t: 1dotInherit3;\nbreak;\n}\n},\ntable: [o($V0,[2,2],{3:1,4:2}),{1:[3]},o($V0,[2,3],{5:3}),{6:4,7:[2,10],8:5,9:10,10:14,11:15,14:6,15:7,16:8,17:9,18:[1,11],19:$V1,20:[1,12],21:$V2,22:22,23:[1,13],24:16,25:17,26:[1,19],30:18,31:21,32:20,189:$V3,196:23,210:26,211:$V4,212:$V5},{7:[1,30]},o($V0,[2,4]),{7:[2,11]},o($V0,$V6),o($V0,$V7),o($V0,$V8),o($V9,[2,7],{12:31}),{19:[1,32]},{21:[1,33]},{19:$Va,21:$Vb,22:34,210:36,211:$Vc},o($V9,[2,5]),o($V9,[2,6]),o($V9,$Vd),o($V9,$Ve),o($V9,[2,21],{31:39,189:$V3}),{27:[1,40]},o($Vf,$Vg,{33:41,34:42,36:44,40:46,35:[1,43],39:[1,45],75:$Vh,76:$Vi,77:$Vj}),o($V0,[2,22]),o($Vk,$Vl),o($Vk,$Vm),{19:$Vn,21:$Vo,22:50,210:52,211:$Vp},o($Vk,$Vq),o($Vk,$Vr),o($Vk,$Vs),o($Vk,$Vt),o($Vk,$Vu),{1:[2,1]},{7:[2,9],8:56,10:57,13:55,15:58,16:59,17:60,18:[1,63],19:$V1,20:[1,64],21:$V2,22:22,23:[1,65],24:61,25:62,26:[1,66],32:67,196:23,210:26,211:$V4,212:$V5},o($V0,$Vv),{19:$Va,21:$Vb,22:68,210:36,211:$Vc},o($V0,$Vw),o($V0,$Vq),o($V0,$Vr),o($V0,$Vt),o($V0,$Vu),o($V0,[2,23]),o($Vx,$Vg,{28:69,50:70,36:71,39:$Vy}),o($V9,$Vz),o($V9,$VA),o($V9,$VB),o($VC,$VD,{37:73,60:74,62:75,68:76,69:79,71:80,74:81,88:82,90:83,83:85,84:86,85:87,114:88,91:92,22:93,87:95,95:96,210:99,101:100,103:101,19:$VE,21:$VF,65:[1,77],67:[1,78],81:$VG,92:$VH,93:$VI,94:$VJ,97:$VK,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$VU,211:$VV}),o($Vf,$VW,{40:113,75:$VX,76:$VY,77:$VZ}),{41:117,44:118,45:119,46:120,47:$V_,48:121,49:$V$},o($V01,$V11),o($V01,$V21),{19:[1,127],21:[1,131],22:125,32:124,196:126,210:128,211:[1,130],212:[1,129]},{189:[1,134],190:132,191:[1,133]},o($V31,$Vq),o($V31,$Vr),o($V31,$Vt),o($V31,$Vu),o($V9,[2,8]),o($V9,[2,24]),o($V9,[2,25]),o($V9,$V6),o($V9,$V7),o($V9,$V8),o($V9,$Vd),o($V9,$Ve),{19:[1,135]},{21:[1,136]},{19:$V41,21:$V51,22:137,210:139,211:$V61},{27:[1,142]},o($Vf,$Vg,{33:143,34:144,36:146,40:148,35:[1,145],39:[1,147],75:$Vh,76:$Vi,77:$Vj}),o($V0,$V71),o($V81,$V91,{29:149}),o($Va1,$Vb1,{54:150}),o($VC,$VD,{69:79,71:80,74:81,88:82,90:83,83:85,84:86,85:87,114:88,91:92,22:93,87:95,95:96,210:99,101:100,103:101,58:151,60:152,62:153,63:154,68:157,40:158,19:$VE,21:$VF,65:[1,155],67:[1,156],75:[1,159],76:[1,160],77:[1,161],81:$VG,92:$VH,93:$VI,94:$VJ,97:$VK,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$VU,211:$VV}),o($Vx,$VW),o($V9,$Vc1,{44:118,45:119,46:120,48:121,38:162,41:163,47:$V_,49:$V$}),o($Va1,$Vd1,{61:164,63:165,68:166,40:167,74:168,114:169,75:$VX,76:$VY,77:$VZ,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Ve1),o($Va1,$Vf1,{64:170,60:171,69:172,88:173,90:174,91:178,95:179,92:$Vg1,93:$Vh1,94:$Vi1,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{34:181,36:182,40:184,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vl1),o($Vm1,$Vn1,{78:185}),o($Vo1,$Vn1,{78:186}),o($Vp1,$Vn1,{78:187}),o($Vq1,$Vr1,{89:188}),o($Vm1,$Vs1,{95:96,91:189,97:$VK,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:190}),o($Vt1,$Vu1,{82:191}),o($Vt1,$Vu1,{82:192}),o($Vo1,$Vv1,{101:100,103:101,87:193,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,194],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:203}),o($VH1,$VI1),{96:[1,204]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,206],102:205,104:[1,207],105:[1,208],106:209,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,214]},{96:[2,115]},{96:[2,116]},{96:[2,117]},o($Vt1,$Vt),o($Vt1,$Vu),o($VO1,[2,124]),o($VO1,[2,125]),o($VO1,[2,126]),o($VO1,[2,127]),{96:[2,128]},{96:[2,129]},o($V9,$Vc1,{44:118,45:119,46:120,48:121,41:163,38:215,47:$V_,49:$V$}),o($Va1,$V11),o($Va1,$V21),{19:[1,219],21:[1,223],22:217,32:216,196:218,210:220,211:[1,222],212:[1,221]},o($V9,$VP1),o($V9,$VQ1,{46:224,47:$V_}),o($V81,$V91,{29:225,48:226,49:$V$}),o($V81,$VR1),o($Va1,$VS1),o($Vx,$Vg,{28:227,50:228,36:229,39:$Vy}),o($Vx,$Vg,{50:230,36:231,39:$Vy}),o($V01,$VT1),o($V01,$Vl),o($V01,$Vm),o($V01,$Vq),o($V01,$Vr),o($V01,$Vs),o($V01,$Vt),o($V01,$Vu),o($V0,$VU1),o($V0,$VV1),o($V0,$VW1),o($V9,$Vv),{19:$V41,21:$V51,22:232,210:139,211:$V61},o($V9,$Vw),o($V9,$Vq),o($V9,$Vr),o($V9,$Vt),o($V9,$Vu),o($Vx,$Vg,{28:233,50:234,36:235,39:$Vy}),o($V9,$Vz),o($V9,$VA),o($V9,$VB),o($VC,$VD,{37:236,60:237,62:238,68:239,69:242,71:243,74:244,88:245,90:246,83:248,84:249,85:250,114:251,91:255,22:256,87:258,95:259,210:262,101:263,103:264,19:$VX1,21:$VY1,65:[1,240],67:[1,241],81:$VZ1,92:$V_1,93:$V$1,94:$V02,97:$V12,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$V22,211:$V32}),o($Vf,$VW,{40:267,75:$V42,76:$V52,77:$V62}),{41:271,44:272,45:273,46:274,47:$V72,48:275,49:$V82},o($V9,$V92,{46:278,47:$V_}),o($V81,$Va2,{48:279,49:$V$}),o($Va1,$Vb2),o($Va1,$Vd1,{63:165,68:166,40:167,74:168,114:169,61:280,75:$VX,76:$VY,77:$VZ,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{60:171,69:172,88:173,90:174,91:178,95:179,64:281,92:$Vg1,93:$Vh1,94:$Vi1,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:282,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Ve2,$V11),o($Ve2,$V21),{19:[1,286],21:[1,290],22:284,32:283,196:285,210:287,211:[1,289],212:[1,288]},o($V9,$Vh2),o($V9,$Vi2),o($Va1,$Vj2),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:291}),{115:[1,292],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$Vl2),o($Va1,$Vm2),o($Vo1,$Vn1,{78:293}),o($Vn2,$Vr1,{89:294}),o($Vo1,$Vs1,{95:179,91:295,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,296]},o($Vn2,$VJ1),{66:[1,297]},o($VC,$VD,{37:298,60:299,62:300,68:301,69:304,71:305,74:306,88:307,90:308,83:310,84:311,85:312,114:313,91:317,22:318,87:320,95:321,210:324,101:325,103:326,19:[1,323],21:[1,328],65:[1,302],67:[1,303],81:[1,309],92:[1,314],93:[1,315],94:[1,316],97:$Vo2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,319],211:[1,327]}),o($Vf,$VW,{40:329,75:$Vp2,76:$Vq2,77:$Vr2}),{41:333,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2},o($Vu2,$Vv2,{79:340,80:341,188:342,186:[1,343]}),o($Vw2,$Vv2,{79:344,80:345,188:346,186:$Vx2}),o($Vy2,$Vv2,{79:348,80:349,188:350,186:[1,351]}),o($Vm1,$Vz2,{95:96,91:352,97:$VK,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:353,91:354,87:355,95:356,101:358,103:359,97:$VC2,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($VG2,$VH2,{116:360,122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,117:$VI2,144:$VJ2,185:$VK2}),o($VC,[2,136]),o($VC,[2,132]),o($VC,[2,133]),o($VC,[2,134]),{19:$VL2,21:$VM2,22:375,32:374,196:376,210:378,211:$VN2,212:$VO2,214:373},{19:$VP2,21:$VQ2,22:384,124:382,125:383,195:$VR2,210:387,211:$VS2},o($VT2,[2,262]),o($VT2,[2,263]),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,390],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,422]},{107:$Vg3},{107:$Vh3},{107:$Vi3},{107:$Vj3},o($VH1,$Vk3),o($V9,$Vl3),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($V81,$Vm3),o($V9,$Vn3,{46:278,47:$V_}),o($Va1,$Vo3),o($V81,$Vp3),o($Va1,$Vb1,{54:423}),o($VC,$VD,{58:424,60:425,62:426,63:427,69:430,71:431,68:432,40:433,88:434,90:435,83:437,84:438,85:439,74:440,91:447,22:448,87:450,114:451,95:452,210:455,101:456,103:457,19:[1,454],21:[1,459],65:[1,428],67:[1,429],75:[1,441],76:[1,442],77:[1,443],81:[1,436],92:[1,444],93:[1,445],94:[1,446],97:$Vq3,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,449],211:[1,458]}),o($Va1,$Vr3),o($VC,$VD,{58:460,60:461,62:462,63:463,69:466,71:467,68:468,40:469,88:470,90:471,83:473,84:474,85:475,74:476,91:483,22:484,87:486,114:487,95:488,210:491,101:492,103:493,19:[1,490],21:[1,495],65:[1,464],67:[1,465],75:[1,477],76:[1,478],77:[1,479],81:[1,472],92:[1,480],93:[1,481],94:[1,482],97:$Vs3,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,485],211:[1,494]}),o($V9,$V71),o($V81,$V91,{29:496}),o($Va1,$Vb1,{54:497}),o($VC,$VD,{69:242,71:243,74:244,88:245,90:246,83:248,84:249,85:250,114:251,91:255,22:256,87:258,95:259,210:262,101:263,103:264,58:498,60:499,62:500,63:501,68:504,40:505,19:$VX1,21:$VY1,65:[1,502],67:[1,503],75:[1,506],76:[1,507],77:[1,508],81:$VZ1,92:$V_1,93:$V$1,94:$V02,97:$V12,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:$V22,211:$V32}),o($V9,$Vc1,{44:272,45:273,46:274,48:275,38:509,41:510,47:$V72,49:$V82}),o($Va1,$Vd1,{61:511,63:512,68:513,40:514,74:515,114:516,75:$V42,76:$V52,77:$V62,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Ve1),o($Va1,$Vf1,{64:517,60:518,69:519,88:520,90:521,91:525,95:526,92:$Vt3,93:$Vu3,94:$Vv3,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:528,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vl1),o($Vm1,$Vn1,{78:529}),o($Vo1,$Vn1,{78:530}),o($Vp1,$Vn1,{78:531}),o($Vq1,$Vr1,{89:532}),o($Vm1,$Vs1,{95:259,91:533,97:$V12,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:534}),o($Vt1,$Vu1,{82:535}),o($Vt1,$Vu1,{82:536}),o($Vo1,$Vv1,{101:263,103:264,87:537,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,538],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:539}),o($VH1,$VI1),{96:[1,540]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,542],102:541,104:[1,543],105:[1,544],106:545,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,546]},o($Vt1,$Vt),o($Vt1,$Vu),o($V9,$Vc1,{44:272,45:273,46:274,48:275,41:510,38:547,47:$V72,49:$V82}),o($Va1,$V11),o($Va1,$V21),{19:[1,551],21:[1,555],22:549,32:548,196:550,210:552,211:[1,554],212:[1,553]},o($V9,$VP1),o($V9,$VQ1,{46:556,47:$V72}),o($V81,$V91,{29:557,48:558,49:$V82}),o($V81,$VR1),o($Va1,$VS1),o($Vx,$Vg,{28:559,50:560,36:561,39:$Vy}),o($Vx,$Vg,{50:562,36:563,39:$Vy}),o($V81,$Vx3),o($Va1,$Vy3),o($Va1,$Vz3),o($Va1,$VA3),{66:[1,564]},o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),o($Vw2,$Vv2,{80:345,188:346,79:565,186:$Vx2}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:566,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:345,188:346,79:567,186:$Vx2}),o($Vo1,$Vz2,{95:179,91:568,97:$Vj1,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VB3),{38:569,41:570,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2,66:$Vc1},o($VC,$VD,{61:571,63:572,68:573,40:574,74:575,114:576,47:$Vd1,49:$Vd1,66:$Vd1,75:$Vp2,76:$Vq2,77:$Vr2}),o($VC3,$Ve1),o($VC3,$Vf1,{64:577,60:578,69:579,88:580,90:581,91:585,95:586,92:[1,582],93:[1,583],94:[1,584],97:$VD3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:588,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vl1),o($VE3,$Vn1,{78:589}),o($VF3,$Vn1,{78:590}),o($VG3,$Vn1,{78:591}),o($VH3,$Vr1,{89:592}),o($VE3,$Vs1,{95:321,91:593,97:$Vo2,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:594}),o($VI3,$Vu1,{82:595}),o($VI3,$Vu1,{82:596}),o($VF3,$Vv1,{101:325,103:326,87:597,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),{115:[1,598],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:599}),o($VJ3,$VI1),{96:[1,600]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,602],102:601,104:[1,603],105:[1,604],106:605,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,606]},o($VI3,$Vt),o($VI3,$Vu),{38:607,41:570,44:334,45:335,46:336,47:$Vs2,48:337,49:$Vt2,66:$Vc1},o($VC3,$V11),o($VC3,$V21),{19:[1,611],21:[1,615],22:609,32:608,196:610,210:612,211:[1,614],212:[1,613]},{66:$VP1},{46:616,47:$Vs2,66:$VQ1},o($VK3,$V91,{29:617,48:618,49:$Vt2}),o($VK3,$VR1),o($VC3,$VS1),o($Vx,$Vg,{28:619,50:620,36:621,39:$Vy}),o($Vx,$Vg,{50:622,36:623,39:$Vy}),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:624,189:[1,625]}),{19:$VP3,21:$VQ3,22:627,125:626,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:633,189:[1,634]}),{19:$VP3,21:$VQ3,22:627,125:635,195:$VR3,210:630,211:$VS3},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:636,189:[1,637]}),{19:$VP3,21:$VQ3,22:627,125:638,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,639]},o($Vt1,$VJ1),{96:[1,641],102:640,104:[1,642],105:[1,643],106:644,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,645]},{117:[1,646]},{117:[2,138]},{117:$VZ3},{117:$V_3,129:647,130:648,131:$V$3},{117:$V04},o($V14,$V24),o($V14,$V34),o($V14,$V44,{135:650,138:651,139:654,136:$V54,137:$V64}),o($V74,$V84,{141:655,146:656,147:657,150:658,151:660,65:[1,659],156:$V94}),o($Va4,$Vb4),o($VG2,[2,164]),{19:[1,665],21:[1,669],22:663,145:662,196:664,210:666,211:[1,668],212:[1,667]},{19:[1,673],21:[1,677],22:671,145:670,196:672,210:674,211:[1,676],212:[1,675]},o($VC,[2,261],{22:375,196:376,210:378,32:678,19:$VL2,21:$VM2,211:$VN2,212:$VO2}),o($Vc4,[2,264]),o($Vc4,$Vl),o($Vc4,$Vm),o($Vc4,$Vq),o($Vc4,$Vr),o($Vc4,$Vs),o($Vc4,$Vt),o($Vc4,$Vu),o($VC,[2,139],{22:384,210:387,125:679,19:$VP2,21:$VQ2,195:$VR2,211:$VS2}),o($Vd4,[2,140]),o($Vd4,$Ve4),o($Vd4,$Vf4),o($Vd4,$Vq),o($Vd4,$Vr),o($Vd4,$Vt),o($Vd4,$Vu),o($Vt1,$Vg4),o($VF1,[2,180]),o($VF1,[2,181]),o($VF1,[2,182]),o($VF1,[2,183]),{164:680,165:681,166:684,167:682,168:685,169:683,170:686,175:[1,687]},o($VF1,[2,198],{171:688,173:689,174:[1,690]}),o($VF1,[2,207],{178:691,180:692,174:[1,693]}),o($VF1,[2,215],{182:694,183:695,174:$Vh4}),{174:$Vh4,183:697},o($Vi4,$Vq),o($Vi4,$Vr),o($Vi4,$Vj4),o($Vi4,$Vk4),o($Vi4,$Vl4),o($Vi4,$Vt),o($Vi4,$Vu),o($Vi4,$Vm4),o($Vi4,$Vn4,{198:698,199:699,107:[1,700]}),o($Vi4,$Vo4),o($Vi4,$Vp4),o($Vi4,$Vq4),o($Vi4,$Vr4),o($Vi4,$Vs4),o($Vi4,$Vt4),o($Vi4,$Vu4),o($Vi4,$Vv4),o($Vi4,$Vw4),o($Vx4,$Vg3),o($Vx4,$Vh3),o($Vx4,$Vi3),o($Vx4,$Vj3),{19:[1,703],21:[1,706],22:702,83:701,210:704,211:[1,705]},o($V81,$Va2,{48:707,49:[1,708]}),o($Va1,$Vb2),o($Va1,$Vd1,{61:709,63:710,68:711,40:712,74:713,114:717,75:[1,714],76:[1,715],77:[1,716],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:718,60:719,69:720,88:721,90:722,91:726,95:727,92:[1,723],93:[1,724],94:[1,725],97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:729,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:730}),o($Vo1,$Vn1,{78:731}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:732}),o($Vm1,$Vs1,{95:452,91:733,97:$Vq3,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:734}),o($Vt1,$Vu1,{82:735}),o($Vt1,$Vu1,{82:736}),o($Vo1,$Vv1,{101:456,103:457,87:737,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:738}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,742],21:[1,746],22:740,32:739,196:741,210:743,211:[1,745],212:[1,744]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:747}),o($VH1,$VI1),{115:[1,748],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,749]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,751],102:750,104:[1,752],105:[1,753],106:754,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,755]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:756,63:757,68:758,40:759,74:760,114:764,75:[1,761],76:[1,762],77:[1,763],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:765,60:766,69:767,88:768,90:769,91:773,95:774,92:[1,770],93:[1,771],94:[1,772],97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:776,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:777}),o($Vo1,$Vn1,{78:778}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:779}),o($Vm1,$Vs1,{95:488,91:780,97:$Vs3,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:781}),o($Vt1,$Vu1,{82:782}),o($Vt1,$Vu1,{82:783}),o($Vo1,$Vv1,{101:492,103:493,87:784,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:785}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,789],21:[1,793],22:787,32:786,196:788,210:790,211:[1,792],212:[1,791]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:794}),o($VH1,$VI1),{115:[1,795],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,796]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,798],102:797,104:[1,799],105:[1,800],106:801,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,802]},o($Vt1,$Vt),o($Vt1,$Vu),o($V9,$V92,{46:803,47:$V72}),o($V81,$Va2,{48:804,49:$V82}),o($Va1,$Vb2),o($Va1,$Vd1,{63:512,68:513,40:514,74:515,114:516,61:805,75:$V42,76:$V52,77:$V62,115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{60:518,69:519,88:520,90:521,91:525,95:526,64:806,92:$Vt3,93:$Vu3,94:$Vv3,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:807,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Ve2,$V11),o($Ve2,$V21),{19:[1,811],21:[1,815],22:809,32:808,196:810,210:812,211:[1,814],212:[1,813]},o($V9,$Vh2),o($V9,$Vi2),o($Va1,$Vj2),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:816}),{115:[1,817],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$Vl2),o($Va1,$Vm2),o($Vo1,$Vn1,{78:818}),o($Vn2,$Vr1,{89:819}),o($Vo1,$Vs1,{95:526,91:820,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,821]},o($Vn2,$VJ1),{66:[1,822]},o($Vu2,$Vv2,{79:823,80:824,188:825,186:[1,826]}),o($Vw2,$Vv2,{79:827,80:828,188:829,186:$VA4}),o($Vy2,$Vv2,{79:831,80:832,188:833,186:[1,834]}),o($Vm1,$Vz2,{95:259,91:835,97:$V12,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:836,91:837,87:838,95:839,101:841,103:842,97:$VB4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:843,117:$VI2,144:$VJ2,185:$VK2}),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,844],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,845]},o($VH1,$Vk3),o($V9,$Vl3),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($V81,$Vm3),o($V9,$Vn3,{46:803,47:$V72}),o($Va1,$Vo3),o($V81,$Vp3),o($Va1,$Vb1,{54:846}),o($VC,$VD,{58:847,60:848,62:849,63:850,69:853,71:854,68:855,40:856,88:857,90:858,83:860,84:861,85:862,74:863,91:870,22:871,87:873,114:874,95:875,210:878,101:879,103:880,19:[1,877],21:[1,882],65:[1,851],67:[1,852],75:[1,864],76:[1,865],77:[1,866],81:[1,859],92:[1,867],93:[1,868],94:[1,869],97:$VC4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,872],211:[1,881]}),o($Va1,$Vr3),o($VC,$VD,{58:883,60:884,62:885,63:886,69:889,71:890,68:891,40:892,88:893,90:894,83:896,84:897,85:898,74:899,91:906,22:907,87:909,114:910,95:911,210:914,101:915,103:916,19:[1,913],21:[1,918],65:[1,887],67:[1,888],75:[1,900],76:[1,901],77:[1,902],81:[1,895],92:[1,903],93:[1,904],94:[1,905],97:$VD4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,908],211:[1,917]}),o($Va1,$VE4),o($Va1,$VU3),{117:[1,919]},o($Va1,$VM3),o($Vn2,$VV3),{66:$Vh2},{66:$Vi2},o($VC3,$Vj2),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:920}),{115:[1,921],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$Vl2),o($VC3,$Vm2),o($VF3,$Vn1,{78:922}),o($VF4,$Vr1,{89:923}),o($VF3,$Vs1,{95:586,91:924,97:$VD3,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,925]},o($VF4,$VJ1),{66:[1,926]},o($VG4,$Vv2,{79:927,80:928,188:929,186:[1,930]}),o($VH4,$Vv2,{79:931,80:932,188:933,186:$VI4}),o($VJ4,$Vv2,{79:935,80:936,188:937,186:[1,938]}),o($VE3,$Vz2,{95:321,91:939,97:$Vo2,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:940,91:941,87:942,95:943,101:945,103:946,97:$VK4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:947,117:$VI2,144:$VJ2,185:$VK2}),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,948],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,949]},o($VJ3,$Vk3),{66:$Vl3},o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VK3,$Vm3),{46:950,47:$Vs2,66:$Vn3},o($VC3,$Vo3),o($VK3,$Vp3),o($VC3,$Vb1,{54:951}),o($VC,$VD,{58:952,60:953,62:954,63:955,69:958,71:959,68:960,40:961,88:962,90:963,83:965,84:966,85:967,74:968,91:975,22:976,87:978,114:979,95:980,210:983,101:984,103:985,19:[1,982],21:[1,987],65:[1,956],67:[1,957],75:[1,969],76:[1,970],77:[1,971],81:[1,964],92:[1,972],93:[1,973],94:[1,974],97:$VL4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,977],211:[1,986]}),o($VC3,$Vr3),o($VC,$VD,{58:988,60:989,62:990,63:991,69:994,71:995,68:996,40:997,88:998,90:999,83:1001,84:1002,85:1003,74:1004,91:1011,22:1012,87:1014,114:1015,95:1016,210:1019,101:1020,103:1021,19:[1,1018],21:[1,1023],65:[1,992],67:[1,993],75:[1,1005],76:[1,1006],77:[1,1007],81:[1,1000],92:[1,1008],93:[1,1009],94:[1,1010],97:$VM4,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1013],211:[1,1022]}),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:1024,210:52,211:$Vp},{19:$VO4,21:$VP4,22:1026,96:[1,1037],104:[1,1038],105:[1,1039],106:1036,177:1027,187:1025,192:1030,193:1031,194:1032,197:1035,200:[1,1040],201:[1,1041],202:[1,1046],203:[1,1047],204:[1,1048],205:[1,1049],206:[1,1042],207:[1,1043],208:[1,1044],209:[1,1045],210:1029,211:$VQ4},o($VR4,$Ve4),o($VR4,$Vf4),o($VR4,$Vq),o($VR4,$Vr),o($VR4,$Vt),o($VR4,$Vu),o($Vw2,$VN4),{19:$Vn,21:$Vo,22:1050,210:52,211:$Vp},{19:$VS4,21:$VT4,22:1052,96:[1,1063],104:[1,1064],105:[1,1065],106:1062,177:1053,187:1051,192:1056,193:1057,194:1058,197:1061,200:[1,1066],201:[1,1067],202:[1,1072],203:[1,1073],204:[1,1074],205:[1,1075],206:[1,1068],207:[1,1069],208:[1,1070],209:[1,1071],210:1055,211:$VU4},o($Vy2,$VN4),{19:$Vn,21:$Vo,22:1076,210:52,211:$Vp},{19:$VV4,21:$VW4,22:1078,96:[1,1089],104:[1,1090],105:[1,1091],106:1088,177:1079,187:1077,192:1082,193:1083,194:1084,197:1087,200:[1,1092],201:[1,1093],202:[1,1098],203:[1,1099],204:[1,1100],205:[1,1101],206:[1,1094],207:[1,1095],208:[1,1096],209:[1,1097],210:1081,211:$VX4},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,1102]},o($Vt1,$Vk3),o($Vp1,$VY4),{117:$VZ4,130:1103,131:$V$3},o($V14,$V_4),o($VG2,$VH2,{132:365,133:366,134:367,140:368,142:369,143:370,127:1104,144:$VJ2,185:$VK2}),o($V14,$V$4),o($V14,$V44,{135:1105,139:1106,136:$V54,137:$V64}),o($VG2,$VH2,{140:368,142:369,143:370,134:1107,117:$V05,131:$V05,144:$VJ2,185:$VK2}),o($VG2,$VH2,{140:368,142:369,143:370,134:1108,117:$V15,131:$V15,144:$VJ2,185:$VK2}),o($Va4,$V25),o($Va4,$V35),o($Va4,$V45),o($Va4,$V55),{19:$V65,21:$V75,22:1110,125:1109,195:$V85,210:1113,211:$V95},o($VG2,$VH2,{143:370,122:1116,126:1117,127:1118,128:1119,132:1120,133:1121,134:1122,140:1123,142:1124,144:$VJ2,185:$Va5}),o($V74,[2,172]),o($V74,[2,177]),o($Va4,$Vb5),o($Va4,$Vc5),o($Va4,$Vd5),o($Va4,$Vq),o($Va4,$Vr),o($Va4,$Vs),o($Va4,$Vt),o($Va4,$Vu),o($VG2,[2,162]),o($VG2,$Vc5),o($VG2,$Vd5),o($VG2,$Vq),o($VG2,$Vr),o($VG2,$Vs),o($VG2,$Vt),o($VG2,$Vu),o($Vc4,[2,265]),o($Vd4,[2,141]),o($VF1,[2,184]),o($VF1,[2,191],{166:1126,175:$Ve5}),o($VF1,[2,192],{168:1128,175:$Vf5}),o($VF1,[2,193],{170:1130,175:$Vg5}),o($Vh5,[2,185]),o($Vh5,[2,187]),o($Vh5,[2,189]),{19:$Vi5,21:$Vj5,22:1132,96:$Vk5,104:$Vl5,105:$Vm5,106:1143,177:1133,181:$Vn5,192:1137,193:1138,194:1139,197:1142,200:$Vo5,201:$Vp5,202:$Vq5,203:$Vr5,204:$Vs5,205:$Vt5,206:$Vu5,207:$Vv5,208:$Vw5,209:$Vx5,210:1136,211:$Vy5},o($VF1,[2,194]),o($VF1,[2,199]),o($Vh5,[2,195],{172:1157}),o($VF1,[2,203]),o($VF1,[2,208]),o($Vh5,[2,204],{179:1158}),o($VF1,[2,210]),o($VF1,[2,216]),o($Vh5,[2,212],{184:1159}),o($VF1,[2,211]),o($Vi4,$Vz5),o($Vi4,$VA5),{19:$VU2,21:$VV2,22:1161,83:1160,210:401,211:$Va3},o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$Vy3),o($Vx,$Vg,{50:1162,36:1163,39:$Vy}),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1164}),o($Va1,$V11),o($Va1,$V21),{19:[1,1168],21:[1,1172],22:1166,32:1165,196:1167,210:1169,211:[1,1171],212:[1,1170]},{115:[1,1173],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1174}),o($Vn2,$Vr1,{89:1175}),o($Vo1,$Vs1,{95:727,91:1176,97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1177]},o($Vn2,$VJ1),{66:[1,1178]},o($Vu2,$Vv2,{79:1179,80:1180,188:1181,186:[1,1182]}),o($Vw2,$Vv2,{79:1183,80:1184,188:1185,186:$VC5}),o($Vm1,$Vz2,{95:452,91:1187,97:$Vq3,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1188,91:1189,87:1190,95:1191,101:1193,103:1194,97:$VD5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1195,80:1196,188:1197,186:[1,1198]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1199],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1200,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1201]},o($VH1,$Vk3),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1202}),o($Va1,$V11),o($Va1,$V21),{19:[1,1206],21:[1,1210],22:1204,32:1203,196:1205,210:1207,211:[1,1209],212:[1,1208]},{115:[1,1211],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1212}),o($Vn2,$Vr1,{89:1213}),o($Vo1,$Vs1,{95:774,91:1214,97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1215]},o($Vn2,$VJ1),{66:[1,1216]},o($Vu2,$Vv2,{79:1217,80:1218,188:1219,186:[1,1220]}),o($Vw2,$Vv2,{79:1221,80:1222,188:1223,186:$VE5}),o($Vm1,$Vz2,{95:488,91:1225,97:$Vs3,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1226,91:1227,87:1228,95:1229,101:1231,103:1232,97:$VF5,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1233,80:1234,188:1235,186:[1,1236]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1237],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1238,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1239]},o($VH1,$Vk3),o($V81,$Vx3),o($Va1,$Vy3),o($Va1,$Vz3),o($Va1,$VA3),{66:[1,1240]},o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),o($Vw2,$Vv2,{80:828,188:829,79:1241,186:$VA4}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1242,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:828,188:829,79:1243,186:$VA4}),o($Vo1,$Vz2,{95:526,91:1244,97:$Vw3,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VB3),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1245,189:[1,1246]}),{19:$VP3,21:$VQ3,22:627,125:1247,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1248,189:[1,1249]}),{19:$VP3,21:$VQ3,22:627,125:1250,195:$VR3,210:630,211:$VS3},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1251,189:[1,1252]}),{19:$VP3,21:$VQ3,22:627,125:1253,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1254]},o($Vt1,$VJ1),{96:[1,1256],102:1255,104:[1,1257],105:[1,1258],106:1259,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1260]},{117:[1,1261]},o($Vt1,$Vg4),{19:[1,1264],21:[1,1267],22:1263,83:1262,210:1265,211:[1,1266]},o($V81,$Va2,{48:1268,49:[1,1269]}),o($Va1,$Vb2),o($Va1,$Vd1,{61:1270,63:1271,68:1272,40:1273,74:1274,114:1278,75:[1,1275],76:[1,1276],77:[1,1277],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:1279,60:1280,69:1281,88:1282,90:1283,91:1287,95:1288,92:[1,1284],93:[1,1285],94:[1,1286],97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1290,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:1291}),o($Vo1,$Vn1,{78:1292}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:1293}),o($Vm1,$Vs1,{95:875,91:1294,97:$VC4,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:1295}),o($Vt1,$Vu1,{82:1296}),o($Vt1,$Vu1,{82:1297}),o($Vo1,$Vv1,{101:879,103:880,87:1298,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:1299}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,1303],21:[1,1307],22:1301,32:1300,196:1302,210:1304,211:[1,1306],212:[1,1305]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:1308}),o($VH1,$VI1),{115:[1,1309],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1310]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,1312],102:1311,104:[1,1313],105:[1,1314],106:1315,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1316]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:1317,63:1318,68:1319,40:1320,74:1321,114:1325,75:[1,1322],76:[1,1323],77:[1,1324],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:1326,60:1327,69:1328,88:1329,90:1330,91:1334,95:1335,92:[1,1331],93:[1,1332],94:[1,1333],97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1337,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:1338}),o($Vo1,$Vn1,{78:1339}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:1340}),o($Vm1,$Vs1,{95:911,91:1341,97:$VD4,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:1342}),o($Vt1,$Vu1,{82:1343}),o($Vt1,$Vu1,{82:1344}),o($Vo1,$Vv1,{101:915,103:916,87:1345,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:1346}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,1350],21:[1,1354],22:1348,32:1347,196:1349,210:1351,211:[1,1353],212:[1,1352]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:1355}),o($VH1,$VI1),{115:[1,1356],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1357]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,1359],102:1358,104:[1,1360],105:[1,1361],106:1362,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1363]},o($Vt1,$Vt),o($Vt1,$Vu),o($Vo1,$VY4),o($VH4,$Vv2,{80:932,188:933,79:1364,186:$VI4}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1365,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:932,188:933,79:1366,186:$VI4}),o($VF3,$Vz2,{95:586,91:1367,97:$VD3,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VB3),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:1368,189:[1,1369]}),{19:$VP3,21:$VQ3,22:627,125:1370,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:1371,189:[1,1372]}),{19:$VP3,21:$VQ3,22:627,125:1373,195:$VR3,210:630,211:$VS3},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:1374,189:[1,1375]}),{19:$VP3,21:$VQ3,22:627,125:1376,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,1377]},o($VI3,$VJ1),{96:[1,1379],102:1378,104:[1,1380],105:[1,1381],106:1382,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1383]},{117:[1,1384]},o($VI3,$Vg4),{19:[1,1387],21:[1,1390],22:1386,83:1385,210:1388,211:[1,1389]},o($VK3,$Vx3),o($VK3,$Va2,{48:1391,49:[1,1392]}),o($VC3,$Vb2),o($VC,$VD,{61:1393,63:1394,68:1395,40:1396,74:1397,114:1401,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,1398],76:[1,1399],77:[1,1400]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:1402,60:1403,69:1404,88:1405,90:1406,91:1410,95:1411,92:[1,1407],93:[1,1408],94:[1,1409],97:$VK5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1413,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:1414}),o($VF3,$Vn1,{78:1415}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:1416}),o($VE3,$Vs1,{95:980,91:1417,97:$VL4,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:1418}),o($VI3,$Vu1,{82:1419}),o($VI3,$Vu1,{82:1420}),o($VF3,$Vv1,{101:984,103:985,87:1421,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:1422}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,1426],21:[1,1430],22:1424,32:1423,196:1425,210:1427,211:[1,1429],212:[1,1428]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:1431}),o($VJ3,$VI1),{115:[1,1432],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1433]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,1435],102:1434,104:[1,1436],105:[1,1437],106:1438,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1439]},o($VI3,$Vt),o($VI3,$Vu),o($VC3,$Vb2),o($VC,$VD,{61:1440,63:1441,68:1442,40:1443,74:1444,114:1448,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,1445],76:[1,1446],77:[1,1447]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:1449,60:1450,69:1451,88:1452,90:1453,91:1457,95:1458,92:[1,1454],93:[1,1455],94:[1,1456],97:$VL5,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:1460,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:1461}),o($VF3,$Vn1,{78:1462}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:1463}),o($VE3,$Vs1,{95:1016,91:1464,97:$VM4,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:1465}),o($VI3,$Vu1,{82:1466}),o($VI3,$Vu1,{82:1467}),o($VF3,$Vv1,{101:1020,103:1021,87:1468,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:1469}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,1473],21:[1,1477],22:1471,32:1470,196:1472,210:1474,211:[1,1476],212:[1,1475]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:1478}),o($VJ3,$VI1),{115:[1,1479],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,1480]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,1482],102:1481,104:[1,1483],105:[1,1484],106:1485,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1486]},o($VI3,$Vt),o($VI3,$Vu),{189:[1,1489],190:1487,191:[1,1488]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:1490,199:1491,107:[1,1492]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,1495],190:1493,191:[1,1494]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:1496,199:1497,107:[1,1498]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{189:[1,1501],190:1499,191:[1,1500]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:1502,199:1503,107:[1,1504]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),{19:[1,1507],21:[1,1510],22:1506,83:1505,210:1508,211:[1,1509]},o($V14,$VS5),o($V14,$VT5),o($V14,$VU5),o($Va4,$VV5),o($Va4,$VW5),o($Va4,$VX5),o($Vx,$Vg,{42:1511,43:1512,51:1513,55:1514,36:1515,39:$Vy}),o($VY5,$Ve4),o($VY5,$Vf4),o($VY5,$Vq),o($VY5,$Vr),o($VY5,$Vt),o($VY5,$Vu),{66:[1,1516]},{66:$VZ3},{66:$V_3,129:1517,130:1518,131:$VZ5},{66:$V04},o($V_5,$V24),o($V_5,$V34),o($V_5,$V44,{135:1520,138:1521,139:1524,136:$V$5,137:$V06}),o($V74,$V84,{151:660,141:1525,146:1526,147:1527,150:1528,65:[1,1529],156:$V94}),o($V16,$Vb4),{19:[1,1533],21:[1,1537],22:1531,145:1530,196:1532,210:1534,211:[1,1536],212:[1,1535]},o($Vh5,[2,186]),{19:$Vi5,21:$Vj5,22:1132,210:1136,211:$Vy5},o($Vh5,[2,188]),{96:$Vk5,104:$Vl5,105:$Vm5,106:1143,177:1133,192:1137,193:1138,194:1139,197:1142,200:$Vo5,201:$Vp5,202:$Vq5,203:$Vr5,204:$Vs5,205:$Vt5,206:$Vu5,207:$Vv5,208:$Vw5,209:$Vx5},o($Vh5,[2,190]),{181:$Vn5},o($Vh5,$V26,{176:1538,174:$V36}),o($Vh5,$V26,{176:1540,174:$V36}),o($Vh5,$V26,{176:1541,174:$V36}),o($V46,$Vq),o($V46,$Vr),o($V46,$Vj4),o($V46,$Vk4),o($V46,$Vl4),o($V46,$Vt),o($V46,$Vu),o($V46,$Vm4),o($V46,$Vn4,{198:1542,199:1543,107:[1,1544]}),o($V46,$Vo4),o($V46,$Vp4),o($V46,$Vq4),o($V46,$Vr4),o($V46,$Vs4),o($V46,$Vt4),o($V46,$Vu4),o($V46,$Vv4),o($V46,$Vw4),o($V56,$Vg3),o($V56,$Vh3),o($V56,$Vi3),o($V56,$Vj3),o($VF1,[2,197],{166:1545,175:$Ve5}),o($VF1,[2,206],{168:1546,175:$Vf5}),o($VF1,[2,214],{170:1547,175:$Vg5}),o($Vi4,$V66),o($Vi4,$VE1),o($Va1,$Vr3),o($VC,$VD,{58:1548,60:1549,62:1550,63:1551,69:1554,71:1555,68:1556,40:1557,88:1558,90:1559,83:1561,84:1562,85:1563,74:1564,91:1571,22:1572,87:1574,114:1575,95:1576,210:1579,101:1580,103:1581,19:[1,1578],21:[1,1583],65:[1,1552],67:[1,1553],75:[1,1565],76:[1,1566],77:[1,1567],81:[1,1560],92:[1,1568],93:[1,1569],94:[1,1570],97:$V76,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1573],211:[1,1582]}),o($Vw2,$Vv2,{80:1184,188:1185,79:1584,186:$VC5}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1585,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1184,188:1185,79:1586,186:$VC5}),o($Vo1,$Vz2,{95:727,91:1587,97:$Vy4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1588,189:[1,1589]}),{19:$VP3,21:$VQ3,22:627,125:1590,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1591,189:[1,1592]}),{19:$VP3,21:$VQ3,22:627,125:1593,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1594]},o($Vt1,$VJ1),{96:[1,1596],102:1595,104:[1,1597],105:[1,1598],106:1599,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1600]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1601,189:[1,1602]}),{19:$VP3,21:$VQ3,22:627,125:1603,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,1604]},{19:[1,1607],21:[1,1610],22:1606,83:1605,210:1608,211:[1,1609]},o($Vw2,$Vv2,{80:1222,188:1223,79:1611,186:$VE5}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1612,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1222,188:1223,79:1613,186:$VE5}),o($Vo1,$Vz2,{95:774,91:1614,97:$Vz4,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:1615,189:[1,1616]}),{19:$VP3,21:$VQ3,22:627,125:1617,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:1618,189:[1,1619]}),{19:$VP3,21:$VQ3,22:627,125:1620,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,1621]},o($Vt1,$VJ1),{96:[1,1623],102:1622,104:[1,1624],105:[1,1625],106:1626,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,1627]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:1628,189:[1,1629]}),{19:$VP3,21:$VQ3,22:627,125:1630,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,1631]},{19:[1,1634],21:[1,1637],22:1633,83:1632,210:1635,211:[1,1636]},o($Va1,$VE4),o($Va1,$VU3),{117:[1,1638]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:1639,210:52,211:$Vp},{19:$V86,21:$V96,22:1641,96:[1,1652],104:[1,1653],105:[1,1654],106:1651,177:1642,187:1640,192:1645,193:1646,194:1647,197:1650,200:[1,1655],201:[1,1656],202:[1,1661],203:[1,1662],204:[1,1663],205:[1,1664],206:[1,1657],207:[1,1658],208:[1,1659],209:[1,1660],210:1644,211:$Va6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:1665,210:52,211:$Vp},{19:$Vb6,21:$Vc6,22:1667,96:[1,1678],104:[1,1679],105:[1,1680],106:1677,177:1668,187:1666,192:1671,193:1672,194:1673,197:1676,200:[1,1681],201:[1,1682],202:[1,1687],203:[1,1688],204:[1,1689],205:[1,1690],206:[1,1683],207:[1,1684],208:[1,1685],209:[1,1686],210:1670,211:$Vd6},o($Vy2,$VN4),{19:$Vn,21:$Vo,22:1691,210:52,211:$Vp},{19:$Ve6,21:$Vf6,22:1693,96:[1,1704],104:[1,1705],105:[1,1706],106:1703,177:1694,187:1692,192:1697,193:1698,194:1699,197:1702,200:[1,1707],201:[1,1708],202:[1,1713],203:[1,1714],204:[1,1715],205:[1,1716],206:[1,1709],207:[1,1710],208:[1,1711],209:[1,1712],210:1696,211:$Vg6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,1717]},o($Vt1,$Vk3),o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$Vy3),o($Vx,$Vg,{50:1718,36:1719,39:$Vy}),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1720}),o($Va1,$V11),o($Va1,$V21),{19:[1,1724],21:[1,1728],22:1722,32:1721,196:1723,210:1725,211:[1,1727],212:[1,1726]},{115:[1,1729],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1730}),o($Vn2,$Vr1,{89:1731}),o($Vo1,$Vs1,{95:1288,91:1732,97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1733]},o($Vn2,$VJ1),{66:[1,1734]},o($Vu2,$Vv2,{79:1735,80:1736,188:1737,186:[1,1738]}),o($Vw2,$Vv2,{79:1739,80:1740,188:1741,186:$Vh6}),o($Vm1,$Vz2,{95:875,91:1743,97:$VC4,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1744,91:1745,87:1746,95:1747,101:1749,103:1750,97:$Vi6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1751,80:1752,188:1753,186:[1,1754]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1755],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1756,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1757]},o($VH1,$Vk3),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:1758}),o($Va1,$V11),o($Va1,$V21),{19:[1,1762],21:[1,1766],22:1760,32:1759,196:1761,210:1763,211:[1,1765],212:[1,1764]},{115:[1,1767],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:1768}),o($Vn2,$Vr1,{89:1769}),o($Vo1,$Vs1,{95:1335,91:1770,97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,1771]},o($Vn2,$VJ1),{66:[1,1772]},o($Vu2,$Vv2,{79:1773,80:1774,188:1775,186:[1,1776]}),o($Vw2,$Vv2,{79:1777,80:1778,188:1779,186:$Vj6}),o($Vm1,$Vz2,{95:911,91:1781,97:$VD4,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:1782,91:1783,87:1784,95:1785,101:1787,103:1788,97:$Vk6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:1789,80:1790,188:1791,186:[1,1792]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1793],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1794,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,1795]},o($VH1,$Vk3),o($VC3,$VU3),{117:[1,1796]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:1797,210:52,211:$Vp},{19:$Vl6,21:$Vm6,22:1799,96:[1,1810],104:[1,1811],105:[1,1812],106:1809,177:1800,187:1798,192:1803,193:1804,194:1805,197:1808,200:[1,1813],201:[1,1814],202:[1,1819],203:[1,1820],204:[1,1821],205:[1,1822],206:[1,1815],207:[1,1816],208:[1,1817],209:[1,1818],210:1802,211:$Vn6},o($VH4,$VN4),{19:$Vn,21:$Vo,22:1823,210:52,211:$Vp},{19:$Vo6,21:$Vp6,22:1825,96:[1,1836],104:[1,1837],105:[1,1838],106:1835,177:1826,187:1824,192:1829,193:1830,194:1831,197:1834,200:[1,1839],201:[1,1840],202:[1,1845],203:[1,1846],204:[1,1847],205:[1,1848],206:[1,1841],207:[1,1842],208:[1,1843],209:[1,1844],210:1828,211:$Vq6},o($VJ4,$VN4),{19:$Vn,21:$Vo,22:1849,210:52,211:$Vp},{19:$Vr6,21:$Vs6,22:1851,96:[1,1862],104:[1,1863],105:[1,1864],106:1861,177:1852,187:1850,192:1855,193:1856,194:1857,197:1860,200:[1,1865],201:[1,1866],202:[1,1871],203:[1,1872],204:[1,1873],205:[1,1874],206:[1,1867],207:[1,1868],208:[1,1869],209:[1,1870],210:1854,211:$Vt6},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,1875]},o($VI3,$Vk3),o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VC3,$Vy3),o($Vx,$Vg,{50:1876,36:1877,39:$Vy}),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:1878}),o($VC3,$V11),o($VC3,$V21),{19:[1,1882],21:[1,1886],22:1880,32:1879,196:1881,210:1883,211:[1,1885],212:[1,1884]},{115:[1,1887],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:1888}),o($VF4,$Vr1,{89:1889}),o($VF3,$Vs1,{95:1411,91:1890,97:$VK5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,1891]},o($VF4,$VJ1),{66:[1,1892]},o($VG4,$Vv2,{79:1893,80:1894,188:1895,186:[1,1896]}),o($VH4,$Vv2,{79:1897,80:1898,188:1899,186:$Vu6}),o($VE3,$Vz2,{95:980,91:1901,97:$VL4,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:1902,91:1903,87:1904,95:1905,101:1907,103:1908,97:$Vv6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:1909,80:1910,188:1911,186:[1,1912]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1913],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1914,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,1915]},o($VJ3,$Vk3),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:1916}),o($VC3,$V11),o($VC3,$V21),{19:[1,1920],21:[1,1924],22:1918,32:1917,196:1919,210:1921,211:[1,1923],212:[1,1922]},{115:[1,1925],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:1926}),o($VF4,$Vr1,{89:1927}),o($VF3,$Vs1,{95:1458,91:1928,97:$VL5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,1929]},o($VF4,$VJ1),{66:[1,1930]},o($VG4,$Vv2,{79:1931,80:1932,188:1933,186:[1,1934]}),o($VH4,$Vv2,{79:1935,80:1936,188:1937,186:$Vw6}),o($VE3,$Vz2,{95:1016,91:1939,97:$VM4,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:1940,91:1941,87:1942,95:1943,101:1945,103:1946,97:$Vx6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:1947,80:1948,188:1949,186:[1,1950]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,1951],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:1952,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,1953]},o($VJ3,$Vk3),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VO4,21:$VP4,22:1955,83:1954,210:1029,211:$VQ4},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VS4,21:$VT4,22:1957,83:1956,210:1055,211:$VU4},o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VV4,21:$VW4,22:1959,83:1958,210:1081,211:$VX4},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy6,$Vz6,{148:1960,149:1961,152:$VA6,153:$VB6,154:$VC6,155:$VD6}),o($VE6,$VF6),o($VG6,$VH6,{52:1966}),o($VI6,$VJ6,{56:1967}),o($VC,$VD,{59:1968,69:1969,71:1970,72:1971,88:1974,90:1975,83:1977,84:1978,85:1979,74:1980,40:1981,91:1985,22:1986,87:1988,114:1989,95:1993,210:1996,101:1997,103:1998,19:[1,1995],21:[1,2000],65:[1,1972],67:[1,1973],75:[1,1990],76:[1,1991],77:[1,1992],81:[1,1976],92:[1,1982],93:[1,1983],94:[1,1984],97:$VK6,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,1987],211:[1,1999]}),o($Vy6,$Vz6,{149:1961,148:2001,152:$VA6,153:$VB6,154:$VC6,155:$VD6}),{66:$VZ4,130:2002,131:$VZ5},o($V_5,$V_4),o($VG2,$VH2,{143:370,132:1120,133:1121,134:1122,140:1123,142:1124,127:2003,144:$VJ2,185:$Va5}),o($V_5,$V$4),o($V_5,$V44,{135:2004,139:2005,136:$V$5,137:$V06}),o($VG2,$VH2,{143:370,140:1123,142:1124,134:2006,66:$V05,131:$V05,144:$VJ2,185:$Va5}),o($VG2,$VH2,{143:370,140:1123,142:1124,134:2007,66:$V15,131:$V15,144:$VJ2,185:$Va5}),o($V16,$V25),o($V16,$V35),o($V16,$V45),o($V16,$V55),{19:$V65,21:$V75,22:1110,125:2008,195:$V85,210:1113,211:$V95},o($VG2,$VH2,{143:370,126:1117,127:1118,128:1119,132:1120,133:1121,134:1122,140:1123,142:1124,122:2009,144:$VJ2,185:$Va5}),o($V16,$Vb5),o($V16,$Vc5),o($V16,$Vd5),o($V16,$Vq),o($V16,$Vr),o($V16,$Vs),o($V16,$Vt),o($V16,$Vu),o($Vh5,[2,200]),o($Vh5,[2,202]),o($Vh5,[2,209]),o($Vh5,[2,217]),o($V46,$Vz5),o($V46,$VA5),{19:$Vi5,21:$Vj5,22:2011,83:2010,210:1136,211:$Vy5},o($Vh5,[2,196]),o($Vh5,[2,205]),o($Vh5,[2,213]),o($Va1,$Vb2),o($Va1,$Vd1,{61:2012,63:2013,68:2014,40:2015,74:2016,114:2020,75:[1,2017],76:[1,2018],77:[1,2019],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:2021,60:2022,69:2023,88:2024,90:2025,91:2029,95:2030,92:[1,2026],93:[1,2027],94:[1,2028],97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2032,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:2033}),o($Vo1,$Vn1,{78:2034}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:2035}),o($Vm1,$Vs1,{95:1576,91:2036,97:$V76,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:2037}),o($Vt1,$Vu1,{82:2038}),o($Vt1,$Vu1,{82:2039}),o($Vo1,$Vv1,{101:1580,103:1581,87:2040,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:2041}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,2045],21:[1,2049],22:2043,32:2042,196:2044,210:2046,211:[1,2048],212:[1,2047]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:2050}),o($VH1,$VI1),{115:[1,2051],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2052]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,2054],102:2053,104:[1,2055],105:[1,2056],106:2057,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2058]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$VU3),{117:[1,2059]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2060,210:52,211:$Vp},{19:$VM6,21:$VN6,22:2062,96:[1,2073],104:[1,2074],105:[1,2075],106:2072,177:2063,187:2061,192:2066,193:2067,194:2068,197:2071,200:[1,2076],201:[1,2077],202:[1,2082],203:[1,2083],204:[1,2084],205:[1,2085],206:[1,2078],207:[1,2079],208:[1,2080],209:[1,2081],210:2065,211:$VO6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2086,210:52,211:$Vp},{19:$VP6,21:$VQ6,22:2088,96:[1,2099],104:[1,2100],105:[1,2101],106:2098,177:2089,187:2087,192:2092,193:2093,194:2094,197:2097,200:[1,2102],201:[1,2103],202:[1,2108],203:[1,2109],204:[1,2110],205:[1,2111],206:[1,2104],207:[1,2105],208:[1,2106],209:[1,2107],210:2091,211:$VR6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2112]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2113,210:52,211:$Vp},{19:$VS6,21:$VT6,22:2115,96:[1,2126],104:[1,2127],105:[1,2128],106:2125,177:2116,187:2114,192:2119,193:2120,194:2121,197:2124,200:[1,2129],201:[1,2130],202:[1,2135],203:[1,2136],204:[1,2137],205:[1,2138],206:[1,2131],207:[1,2132],208:[1,2133],209:[1,2134],210:2118,211:$VU6},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$VU3),{117:[1,2139]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2140,210:52,211:$Vp},{19:$VV6,21:$VW6,22:2142,96:[1,2153],104:[1,2154],105:[1,2155],106:2152,177:2143,187:2141,192:2146,193:2147,194:2148,197:2151,200:[1,2156],201:[1,2157],202:[1,2162],203:[1,2163],204:[1,2164],205:[1,2165],206:[1,2158],207:[1,2159],208:[1,2160],209:[1,2161],210:2145,211:$VX6},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2166,210:52,211:$Vp},{19:$VY6,21:$VZ6,22:2168,96:[1,2179],104:[1,2180],105:[1,2181],106:2178,177:2169,187:2167,192:2172,193:2173,194:2174,197:2177,200:[1,2182],201:[1,2183],202:[1,2188],203:[1,2189],204:[1,2190],205:[1,2191],206:[1,2184],207:[1,2185],208:[1,2186],209:[1,2187],210:2171,211:$V_6},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2192]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2193,210:52,211:$Vp},{19:$V$6,21:$V07,22:2195,96:[1,2206],104:[1,2207],105:[1,2208],106:2205,177:2196,187:2194,192:2199,193:2200,194:2201,197:2204,200:[1,2209],201:[1,2210],202:[1,2215],203:[1,2216],204:[1,2217],205:[1,2218],206:[1,2211],207:[1,2212],208:[1,2213],209:[1,2214],210:2198,211:$V17},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vo1,$VY4),{189:[1,2221],190:2219,191:[1,2220]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2222,199:2223,107:[1,2224]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2227],190:2225,191:[1,2226]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2228,199:2229,107:[1,2230]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{189:[1,2233],190:2231,191:[1,2232]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2234,199:2235,107:[1,2236]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),{19:[1,2239],21:[1,2242],22:2238,83:2237,210:2240,211:[1,2241]},o($Va1,$Vr3),o($VC,$VD,{58:2243,60:2244,62:2245,63:2246,69:2249,71:2250,68:2251,40:2252,88:2253,90:2254,83:2256,84:2257,85:2258,74:2259,91:2266,22:2267,87:2269,114:2270,95:2271,210:2274,101:2275,103:2276,19:[1,2273],21:[1,2278],65:[1,2247],67:[1,2248],75:[1,2260],76:[1,2261],77:[1,2262],81:[1,2255],92:[1,2263],93:[1,2264],94:[1,2265],97:$V27,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,2268],211:[1,2277]}),o($Vw2,$Vv2,{80:1740,188:1741,79:2279,186:$Vh6}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2280,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1740,188:1741,79:2281,186:$Vh6}),o($Vo1,$Vz2,{95:1288,91:2282,97:$VG5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:2283,189:[1,2284]}),{19:$VP3,21:$VQ3,22:627,125:2285,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:2286,189:[1,2287]}),{19:$VP3,21:$VQ3,22:627,125:2288,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,2289]},o($Vt1,$VJ1),{96:[1,2291],102:2290,104:[1,2292],105:[1,2293],106:2294,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2295]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:2296,189:[1,2297]}),{19:$VP3,21:$VQ3,22:627,125:2298,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,2299]},{19:[1,2302],21:[1,2305],22:2301,83:2300,210:2303,211:[1,2304]},o($Vw2,$Vv2,{80:1778,188:1779,79:2306,186:$Vj6}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2307,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:1778,188:1779,79:2308,186:$Vj6}),o($Vo1,$Vz2,{95:1335,91:2309,97:$VH5,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:2310,189:[1,2311]}),{19:$VP3,21:$VQ3,22:627,125:2312,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:2313,189:[1,2314]}),{19:$VP3,21:$VQ3,22:627,125:2315,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,2316]},o($Vt1,$VJ1),{96:[1,2318],102:2317,104:[1,2319],105:[1,2320],106:2321,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2322]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:2323,189:[1,2324]}),{19:$VP3,21:$VQ3,22:627,125:2325,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,2326]},{19:[1,2329],21:[1,2332],22:2328,83:2327,210:2330,211:[1,2331]},o($VF3,$VY4),{189:[1,2335],190:2333,191:[1,2334]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:2336,199:2337,107:[1,2338]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,2341],190:2339,191:[1,2340]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:2342,199:2343,107:[1,2344]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{189:[1,2347],190:2345,191:[1,2346]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:2348,199:2349,107:[1,2350]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),{19:[1,2353],21:[1,2356],22:2352,83:2351,210:2354,211:[1,2355]},o($VC3,$Vr3),o($VC,$VD,{58:2357,60:2358,62:2359,63:2360,69:2363,71:2364,68:2365,40:2366,88:2367,90:2368,83:2370,84:2371,85:2372,74:2373,91:2380,22:2381,87:2383,114:2384,95:2385,210:2388,101:2389,103:2390,19:[1,2387],21:[1,2392],65:[1,2361],67:[1,2362],75:[1,2374],76:[1,2375],77:[1,2376],81:[1,2369],92:[1,2377],93:[1,2378],94:[1,2379],97:$V67,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,2382],211:[1,2391]}),o($VH4,$Vv2,{80:1898,188:1899,79:2393,186:$Vu6}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2394,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:1898,188:1899,79:2395,186:$Vu6}),o($VF3,$Vz2,{95:1411,91:2396,97:$VK5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:2397,189:[1,2398]}),{19:$VP3,21:$VQ3,22:627,125:2399,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:2400,189:[1,2401]}),{19:$VP3,21:$VQ3,22:627,125:2402,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,2403]},o($VI3,$VJ1),{96:[1,2405],102:2404,104:[1,2406],105:[1,2407],106:2408,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2409]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:2410,189:[1,2411]}),{19:$VP3,21:$VQ3,22:627,125:2412,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,2413]},{19:[1,2416],21:[1,2419],22:2415,83:2414,210:2417,211:[1,2418]},o($VH4,$Vv2,{80:1936,188:1937,79:2420,186:$Vw6}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2421,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:1936,188:1937,79:2422,186:$Vw6}),o($VF3,$Vz2,{95:1458,91:2423,97:$VL5,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:2424,189:[1,2425]}),{19:$VP3,21:$VQ3,22:627,125:2426,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:2427,189:[1,2428]}),{19:$VP3,21:$VQ3,22:627,125:2429,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,2430]},o($VI3,$VJ1),{96:[1,2432],102:2431,104:[1,2433],105:[1,2434],106:2435,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2436]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:2437,189:[1,2438]}),{19:$VP3,21:$VQ3,22:627,125:2439,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,2440]},{19:[1,2443],21:[1,2446],22:2442,83:2441,210:2444,211:[1,2445]},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vy6,$Vn1,{78:2447}),o($Vy6,$V77),o($Vy6,$V87),o($Vy6,$V97),o($Vy6,$Va7),o($Vy6,$Vb7),o($VE6,$Vc7,{53:2448,47:[1,2449]}),o($VG6,$Vd7,{57:2450,49:[1,2451]}),o($VI6,$Ve7),o($VI6,$Vf7,{70:2452,72:2453,74:2454,40:2455,114:2456,75:[1,2457],76:[1,2458],77:[1,2459],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:2460,69:2461,88:2462,90:2463,91:2467,95:2468,92:[1,2464],93:[1,2465],94:[1,2466],97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2470,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:2471}),o($Vl7,$Vs1,{95:1993,91:2472,97:$VK6,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:2473}),o($Vm7,$Vu1,{82:2474}),o($Vm7,$Vu1,{82:2475}),o($VI6,$Vv1,{101:1997,103:1998,87:2476,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:2477}),o($Vq7,$VI1),{115:[1,2478],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,2482],21:[1,2486],22:2480,32:2479,196:2481,210:2483,211:[1,2485],212:[1,2484]},{96:[1,2487]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,2489],102:2488,104:[1,2490],105:[1,2491],106:2492,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2493]},o($Vm7,$Vt),o($Vm7,$Vu),o($Vy6,$Vn1,{78:2494}),o($V_5,$VS5),o($V_5,$VT5),o($V_5,$VU5),o($V16,$VV5),o($V16,$VW5),o($V16,$VX5),o($Vx,$Vg,{42:2495,43:2496,51:2497,55:2498,36:2499,39:$Vy}),{66:[1,2500]},o($V46,$V66),o($V46,$VE1),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:2501}),o($Va1,$V11),o($Va1,$V21),{19:[1,2505],21:[1,2509],22:2503,32:2502,196:2504,210:2506,211:[1,2508],212:[1,2507]},{115:[1,2510],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:2511}),o($Vn2,$Vr1,{89:2512}),o($Vo1,$Vs1,{95:2030,91:2513,97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,2514]},o($Vn2,$VJ1),{66:[1,2515]},o($Vu2,$Vv2,{79:2516,80:2517,188:2518,186:[1,2519]}),o($Vw2,$Vv2,{79:2520,80:2521,188:2522,186:$Vr7}),o($Vm1,$Vz2,{95:1576,91:2524,97:$V76,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:2525,91:2526,87:2527,95:2528,101:2530,103:2531,97:$Vs7,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:2532,80:2533,188:2534,186:[1,2535]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,2536],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:2537,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,2538]},o($VH1,$Vk3),o($Vo1,$VY4),{189:[1,2541],190:2539,191:[1,2540]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2542,199:2543,107:[1,2544]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2547],190:2545,191:[1,2546]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2548,199:2549,107:[1,2550]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,2553],21:[1,2556],22:2552,83:2551,210:2554,211:[1,2555]},{189:[1,2559],190:2557,191:[1,2558]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2560,199:2561,107:[1,2562]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vo1,$VY4),{189:[1,2565],190:2563,191:[1,2564]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:2566,199:2567,107:[1,2568]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,2571],190:2569,191:[1,2570]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:2572,199:2573,107:[1,2574]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,2577],21:[1,2580],22:2576,83:2575,210:2578,211:[1,2579]},{189:[1,2583],190:2581,191:[1,2582]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:2584,199:2585,107:[1,2586]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$V86,21:$V96,22:2588,83:2587,210:1644,211:$Va6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$Vb6,21:$Vc6,22:2590,83:2589,210:1670,211:$Vd6},o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$Ve6,21:$Vf6,22:2592,83:2591,210:1696,211:$Vg6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$Vb2),o($Va1,$Vd1,{61:2593,63:2594,68:2595,40:2596,74:2597,114:2601,75:[1,2598],76:[1,2599],77:[1,2600],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Va1,$Vc2),o($Va1,$Vf1,{64:2602,60:2603,69:2604,88:2605,90:2606,91:2610,95:2611,92:[1,2607],93:[1,2608],94:[1,2609],97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2613,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Va1,$Vd2),o($Vm1,$Vn1,{78:2614}),o($Vo1,$Vn1,{78:2615}),o($Ve2,$Vf2),o($Ve2,$Vg2),o($Vq1,$Vr1,{89:2616}),o($Vm1,$Vs1,{95:2271,91:2617,97:$V27,98:$VL,99:$VM,100:$VN}),o($Vt1,$Vu1,{82:2618}),o($Vt1,$Vu1,{82:2619}),o($Vt1,$Vu1,{82:2620}),o($Vo1,$Vv1,{101:2275,103:2276,87:2621,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vp1,$Vn1,{78:2622}),o($Ve2,$V11),o($Ve2,$V21),{19:[1,2626],21:[1,2630],22:2624,32:2623,196:2625,210:2627,211:[1,2629],212:[1,2628]},o($Vq1,$VA1),o($Vq1,$VB1),o($Vq1,$VC1),o($Vq1,$VD1),o($Vt1,$VE1),o($VF1,$VG1,{158:2631}),o($VH1,$VI1),{115:[1,2632],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2633]},o($Vq1,$VJ1),o($Vt1,$Vq),o($Vt1,$Vr),{96:[1,2635],102:2634,104:[1,2636],105:[1,2637],106:2638,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2639]},o($Vt1,$Vt),o($Vt1,$Vu),o($Va1,$VU3),{117:[1,2640]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2641,210:52,211:$Vp},{19:$Vu7,21:$Vv7,22:2643,96:[1,2654],104:[1,2655],105:[1,2656],106:2653,177:2644,187:2642,192:2647,193:2648,194:2649,197:2652,200:[1,2657],201:[1,2658],202:[1,2663],203:[1,2664],204:[1,2665],205:[1,2666],206:[1,2659],207:[1,2660],208:[1,2661],209:[1,2662],210:2646,211:$Vw7},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2667,210:52,211:$Vp},{19:$Vx7,21:$Vy7,22:2669,96:[1,2680],104:[1,2681],105:[1,2682],106:2679,177:2670,187:2668,192:2673,193:2674,194:2675,197:2678,200:[1,2683],201:[1,2684],202:[1,2689],203:[1,2690],204:[1,2691],205:[1,2692],206:[1,2685],207:[1,2686],208:[1,2687],209:[1,2688],210:2672,211:$Vz7},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2693]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2694,210:52,211:$Vp},{19:$VA7,21:$VB7,22:2696,96:[1,2707],104:[1,2708],105:[1,2709],106:2706,177:2697,187:2695,192:2700,193:2701,194:2702,197:2705,200:[1,2710],201:[1,2711],202:[1,2716],203:[1,2717],204:[1,2718],205:[1,2719],206:[1,2712],207:[1,2713],208:[1,2714],209:[1,2715],210:2699,211:$VC7},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Va1,$VU3),{117:[1,2720]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:2721,210:52,211:$Vp},{19:$VD7,21:$VE7,22:2723,96:[1,2734],104:[1,2735],105:[1,2736],106:2733,177:2724,187:2722,192:2727,193:2728,194:2729,197:2732,200:[1,2737],201:[1,2738],202:[1,2743],203:[1,2744],204:[1,2745],205:[1,2746],206:[1,2739],207:[1,2740],208:[1,2741],209:[1,2742],210:2726,211:$VF7},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:2747,210:52,211:$Vp},{19:$VG7,21:$VH7,22:2749,96:[1,2760],104:[1,2761],105:[1,2762],106:2759,177:2750,187:2748,192:2753,193:2754,194:2755,197:2758,200:[1,2763],201:[1,2764],202:[1,2769],203:[1,2770],204:[1,2771],205:[1,2772],206:[1,2765],207:[1,2766],208:[1,2767],209:[1,2768],210:2752,211:$VI7},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,2773]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:2774,210:52,211:$Vp},{19:$VJ7,21:$VK7,22:2776,96:[1,2787],104:[1,2788],105:[1,2789],106:2786,177:2777,187:2775,192:2780,193:2781,194:2782,197:2785,200:[1,2790],201:[1,2791],202:[1,2796],203:[1,2797],204:[1,2798],205:[1,2799],206:[1,2792],207:[1,2793],208:[1,2794],209:[1,2795],210:2779,211:$VL7},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$Vl6,21:$Vm6,22:2801,83:2800,210:1802,211:$Vn6},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$Vo6,21:$Vp6,22:2803,83:2802,210:1828,211:$Vq6},o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$Vr6,21:$Vs6,22:2805,83:2804,210:1854,211:$Vt6},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VC3,$Vb2),o($VC,$VD,{61:2806,63:2807,68:2808,40:2809,74:2810,114:2814,47:$Vd1,49:$Vd1,66:$Vd1,75:[1,2811],76:[1,2812],77:[1,2813]}),o($VC3,$Vc2),o($VC3,$Vf1,{64:2815,60:2816,69:2817,88:2818,90:2819,91:2823,95:2824,92:[1,2820],93:[1,2821],94:[1,2822],97:$VM7,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:2826,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VC3,$Vd2),o($VE3,$Vn1,{78:2827}),o($VF3,$Vn1,{78:2828}),o($VJ5,$Vf2),o($VJ5,$Vg2),o($VH3,$Vr1,{89:2829}),o($VE3,$Vs1,{95:2385,91:2830,97:$V67,98:$VL,99:$VM,100:$VN}),o($VI3,$Vu1,{82:2831}),o($VI3,$Vu1,{82:2832}),o($VI3,$Vu1,{82:2833}),o($VF3,$Vv1,{101:2389,103:2390,87:2834,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VG3,$Vn1,{78:2835}),o($VJ5,$V11),o($VJ5,$V21),{19:[1,2839],21:[1,2843],22:2837,32:2836,196:2838,210:2840,211:[1,2842],212:[1,2841]},o($VH3,$VA1),o($VH3,$VB1),o($VH3,$VC1),o($VH3,$VD1),o($VI3,$VE1),o($VF1,$VG1,{158:2844}),o($VJ3,$VI1),{115:[1,2845],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},{96:[1,2846]},o($VH3,$VJ1),o($VI3,$Vq),o($VI3,$Vr),{96:[1,2848],102:2847,104:[1,2849],105:[1,2850],106:2851,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,2852]},o($VI3,$Vt),o($VI3,$Vu),o($VC3,$VU3),{117:[1,2853]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:2854,210:52,211:$Vp},{19:$VN7,21:$VO7,22:2856,96:[1,2867],104:[1,2868],105:[1,2869],106:2866,177:2857,187:2855,192:2860,193:2861,194:2862,197:2865,200:[1,2870],201:[1,2871],202:[1,2876],203:[1,2877],204:[1,2878],205:[1,2879],206:[1,2872],207:[1,2873],208:[1,2874],209:[1,2875],210:2859,211:$VP7},o($VH4,$VN4),{19:$Vn,21:$Vo,22:2880,210:52,211:$Vp},{19:$VQ7,21:$VR7,22:2882,96:[1,2893],104:[1,2894],105:[1,2895],106:2892,177:2883,187:2881,192:2886,193:2887,194:2888,197:2891,200:[1,2896],201:[1,2897],202:[1,2902],203:[1,2903],204:[1,2904],205:[1,2905],206:[1,2898],207:[1,2899],208:[1,2900],209:[1,2901],210:2885,211:$VS7},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,2906]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:2907,210:52,211:$Vp},{19:$VT7,21:$VU7,22:2909,96:[1,2920],104:[1,2921],105:[1,2922],106:2919,177:2910,187:2908,192:2913,193:2914,194:2915,197:2918,200:[1,2923],201:[1,2924],202:[1,2929],203:[1,2930],204:[1,2931],205:[1,2932],206:[1,2925],207:[1,2926],208:[1,2927],209:[1,2928],210:2912,211:$VV7},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VC3,$VU3),{117:[1,2933]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:2934,210:52,211:$Vp},{19:$VW7,21:$VX7,22:2936,96:[1,2947],104:[1,2948],105:[1,2949],106:2946,177:2937,187:2935,192:2940,193:2941,194:2942,197:2945,200:[1,2950],201:[1,2951],202:[1,2956],203:[1,2957],204:[1,2958],205:[1,2959],206:[1,2952],207:[1,2953],208:[1,2954],209:[1,2955],210:2939,211:$VY7},o($VH4,$VN4),{19:$Vn,21:$Vo,22:2960,210:52,211:$Vp},{19:$VZ7,21:$V_7,22:2962,96:[1,2973],104:[1,2974],105:[1,2975],106:2972,177:2963,187:2961,192:2966,193:2967,194:2968,197:2971,200:[1,2976],201:[1,2977],202:[1,2982],203:[1,2983],204:[1,2984],205:[1,2985],206:[1,2978],207:[1,2979],208:[1,2980],209:[1,2981],210:2965,211:$V$7},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,2986]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:2987,210:52,211:$Vp},{19:$V08,21:$V18,22:2989,96:[1,3000],104:[1,3001],105:[1,3002],106:2999,177:2990,187:2988,192:2993,193:2994,194:2995,197:2998,200:[1,3003],201:[1,3004],202:[1,3009],203:[1,3010],204:[1,3011],205:[1,3012],206:[1,3005],207:[1,3006],208:[1,3007],209:[1,3008],210:2992,211:$V28},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($V38,$Vv2,{79:3013,80:3014,188:3015,186:$V48}),o($VG6,$V58),o($Vx,$Vg,{51:3017,55:3018,36:3019,39:$Vy}),o($VI6,$V68),o($Vx,$Vg,{55:3020,36:3021,39:$Vy}),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3022],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3026],21:[1,3030],22:3024,32:3023,196:3025,210:3027,211:[1,3029],212:[1,3028]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3031}),o($VI6,$Vs1,{95:2468,91:3032,97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3033]},o($Vb8,$VJ1),{66:[1,3034]},o($Vl7,$Vz2,{95:1993,91:3035,97:$VK6,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3036,91:3037,87:3038,95:3039,101:3041,103:3042,97:$Vc8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3043],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3044,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3045]},o($Vq7,$Vk3),o($V38,$Vv2,{80:3014,188:3015,79:3046,186:$V48}),o($Vd8,$Vz6,{148:3047,149:3048,152:$Ve8,153:$Vf8,154:$Vg8,155:$Vh8}),o($Vi8,$VF6),o($Vj8,$VH6,{52:3053}),o($Vk8,$VJ6,{56:3054}),o($VC,$VD,{59:3055,69:3056,71:3057,72:3058,88:3061,90:3062,83:3064,84:3065,85:3066,74:3067,40:3068,91:3072,22:3073,87:3075,114:3076,95:3080,210:3083,101:3084,103:3085,19:[1,3082],21:[1,3087],65:[1,3059],67:[1,3060],75:[1,3077],76:[1,3078],77:[1,3079],81:[1,3063],92:[1,3069],93:[1,3070],94:[1,3071],97:$Vl8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3074],211:[1,3086]}),o($Vd8,$Vz6,{149:3048,148:3088,152:$Ve8,153:$Vf8,154:$Vg8,155:$Vh8}),o($Vw2,$Vv2,{80:2521,188:2522,79:3089,186:$Vr7}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3090,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:2521,188:2522,79:3091,186:$Vr7}),o($Vo1,$Vz2,{95:2030,91:3092,97:$VL6,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:3093,189:[1,3094]}),{19:$VP3,21:$VQ3,22:627,125:3095,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:3096,189:[1,3097]}),{19:$VP3,21:$VQ3,22:627,125:3098,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,3099]},o($Vt1,$VJ1),{96:[1,3101],102:3100,104:[1,3102],105:[1,3103],106:3104,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3105]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:3106,189:[1,3107]}),{19:$VP3,21:$VQ3,22:627,125:3108,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,3109]},{19:[1,3112],21:[1,3115],22:3111,83:3110,210:3113,211:[1,3114]},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VM6,21:$VN6,22:3117,83:3116,210:2065,211:$VO6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VP6,21:$VQ6,22:3119,83:3118,210:2091,211:$VR6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VS6,21:$VT6,22:3121,83:3120,210:2118,211:$VU6},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VV6,21:$VW6,22:3123,83:3122,210:2145,211:$VX6},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VY6,21:$VZ6,22:3125,83:3124,210:2171,211:$V_6},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$V$6,21:$V07,22:3127,83:3126,210:2198,211:$V17},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Va1,$Vz3),o($Va1,$Vk2),o($Va1,$Vf2),o($Va1,$Vg2),o($Vo1,$Vn1,{78:3128}),o($Va1,$V11),o($Va1,$V21),{19:[1,3132],21:[1,3136],22:3130,32:3129,196:3131,210:3133,211:[1,3135],212:[1,3134]},{115:[1,3137],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Va1,$VA3),o($Va1,$Vm2),o($Vo1,$Vn1,{78:3138}),o($Vn2,$Vr1,{89:3139}),o($Vo1,$Vs1,{95:2611,91:3140,97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA1),o($Vn2,$VB1),o($Vn2,$VC1),o($Vn2,$VD1),{96:[1,3141]},o($Vn2,$VJ1),{66:[1,3142]},o($Vu2,$Vv2,{79:3143,80:3144,188:3145,186:[1,3146]}),o($Vw2,$Vv2,{79:3147,80:3148,188:3149,186:$Vm8}),o($Vm1,$Vz2,{95:2271,91:3151,97:$V27,98:$VL,99:$VM,100:$VN}),o($Vq1,$VA2),o($Vo1,$VB2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VD2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vo1,$VE2,{86:3152,91:3153,87:3154,95:3155,101:3157,103:3158,97:$Vn8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VH1,$VF2),o($Vy2,$Vv2,{79:3159,80:3160,188:3161,186:[1,3162]}),o($Ve2,$VT1),o($Ve2,$Vl),o($Ve2,$Vm),o($Ve2,$Vq),o($Ve2,$Vr),o($Ve2,$Vs),o($Ve2,$Vt),o($Ve2,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3163],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3164,117:$VI2,144:$VJ2,185:$VK2}),o($Vq1,$Vb3),o($VH1,$Vc3),o($VH1,$Vd3),o($VH1,$Ve3),o($VH1,$Vf3),{107:[1,3165]},o($VH1,$Vk3),o($Vo1,$VY4),{189:[1,3168],190:3166,191:[1,3167]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3169,199:3170,107:[1,3171]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3174],190:3172,191:[1,3173]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3175,199:3176,107:[1,3177]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3180],21:[1,3183],22:3179,83:3178,210:3181,211:[1,3182]},{189:[1,3186],190:3184,191:[1,3185]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3187,199:3188,107:[1,3189]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Vo1,$VY4),{189:[1,3192],190:3190,191:[1,3191]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3193,199:3194,107:[1,3195]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3198],190:3196,191:[1,3197]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3199,199:3200,107:[1,3201]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3204],21:[1,3207],22:3203,83:3202,210:3205,211:[1,3206]},{189:[1,3210],190:3208,191:[1,3209]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3211,199:3212,107:[1,3213]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VC3,$Vz3),o($VC3,$Vk2),o($VC3,$Vf2),o($VC3,$Vg2),o($VF3,$Vn1,{78:3214}),o($VC3,$V11),o($VC3,$V21),{19:[1,3218],21:[1,3222],22:3216,32:3215,196:3217,210:3219,211:[1,3221],212:[1,3220]},{115:[1,3223],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VC3,$VA3),o($VC3,$Vm2),o($VF3,$Vn1,{78:3224}),o($VF4,$Vr1,{89:3225}),o($VF3,$Vs1,{95:2824,91:3226,97:$VM7,98:$VL,99:$VM,100:$VN}),o($VF4,$VA1),o($VF4,$VB1),o($VF4,$VC1),o($VF4,$VD1),{96:[1,3227]},o($VF4,$VJ1),{66:[1,3228]},o($VG4,$Vv2,{79:3229,80:3230,188:3231,186:[1,3232]}),o($VH4,$Vv2,{79:3233,80:3234,188:3235,186:$Vo8}),o($VE3,$Vz2,{95:2385,91:3237,97:$V67,98:$VL,99:$VM,100:$VN}),o($VH3,$VA2),o($VF3,$VB2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VD2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VF3,$VE2,{86:3238,91:3239,87:3240,95:3241,101:3243,103:3244,97:$Vp8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VJ3,$VF2),o($VJ4,$Vv2,{79:3245,80:3246,188:3247,186:[1,3248]}),o($VJ5,$VT1),o($VJ5,$Vl),o($VJ5,$Vm),o($VJ5,$Vq),o($VJ5,$Vr),o($VJ5,$Vs),o($VJ5,$Vt),o($VJ5,$Vu),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3249],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3250,117:$VI2,144:$VJ2,185:$VK2}),o($VH3,$Vb3),o($VJ3,$Vc3),o($VJ3,$Vd3),o($VJ3,$Ve3),o($VJ3,$Vf3),{107:[1,3251]},o($VJ3,$Vk3),o($VF3,$VY4),{189:[1,3254],190:3252,191:[1,3253]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:3255,199:3256,107:[1,3257]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,3260],190:3258,191:[1,3259]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:3261,199:3262,107:[1,3263]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,3266],21:[1,3269],22:3265,83:3264,210:3267,211:[1,3268]},{189:[1,3272],190:3270,191:[1,3271]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:3273,199:3274,107:[1,3275]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($VF3,$VY4),{189:[1,3278],190:3276,191:[1,3277]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:3279,199:3280,107:[1,3281]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,3284],190:3282,191:[1,3283]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:3285,199:3286,107:[1,3287]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,3290],21:[1,3293],22:3289,83:3288,210:3291,211:[1,3292]},{189:[1,3296],190:3294,191:[1,3295]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:3297,199:3298,107:[1,3299]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($Va4,$Vq8),o($Vy6,$VN3),o($Va4,$VO3,{31:3300,189:[1,3301]}),{19:$VP3,21:$VQ3,22:627,125:3302,195:$VR3,210:630,211:$VS3},o($VG6,$Vr8),o($VI6,$VJ6,{56:3303}),o($VC,$VD,{59:3304,69:3305,71:3306,72:3307,88:3310,90:3311,83:3313,84:3314,85:3315,74:3316,40:3317,91:3321,22:3322,87:3324,114:3325,95:3329,210:3332,101:3333,103:3334,19:[1,3331],21:[1,3336],65:[1,3308],67:[1,3309],75:[1,3326],76:[1,3327],77:[1,3328],81:[1,3312],92:[1,3318],93:[1,3319],94:[1,3320],97:$Vs8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3323],211:[1,3335]}),o($VI6,$Vt8),o($VC,$VD,{59:3337,69:3338,71:3339,72:3340,88:3343,90:3344,83:3346,84:3347,85:3348,74:3349,40:3350,91:3354,22:3355,87:3357,114:3358,95:3362,210:3365,101:3366,103:3367,19:[1,3364],21:[1,3369],65:[1,3341],67:[1,3342],75:[1,3359],76:[1,3360],77:[1,3361],81:[1,3345],92:[1,3351],93:[1,3352],94:[1,3353],97:$Vu8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,3356],211:[1,3368]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3370,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:2468,91:3371,97:$Vi7,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,3372]},o($Vm7,$VJ1),{96:[1,3374],102:3373,104:[1,3375],105:[1,3376],106:3377,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3378]},o($Vm7,$Vg4),{117:[1,3379]},{19:[1,3382],21:[1,3385],22:3381,83:3380,210:3383,211:[1,3384]},o($Va4,$Vw8),o($Vd8,$Vn1,{78:3386}),o($Vd8,$V77),o($Vd8,$V87),o($Vd8,$V97),o($Vd8,$Va7),o($Vd8,$Vb7),o($Vi8,$Vc7,{53:3387,47:[1,3388]}),o($Vj8,$Vd7,{57:3389,49:[1,3390]}),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:3391,72:3392,74:3393,40:3394,114:3395,75:[1,3396],76:[1,3397],77:[1,3398],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:3399,69:3400,88:3401,90:3402,91:3406,95:3407,92:[1,3403],93:[1,3404],94:[1,3405],97:$Vx8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3409,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:3410}),o($Vz8,$Vs1,{95:3080,91:3411,97:$Vl8,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:3412}),o($VA8,$Vu1,{82:3413}),o($VA8,$Vu1,{82:3414}),o($Vk8,$Vv1,{101:3084,103:3085,87:3415,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:3416}),o($VC8,$VI1),{115:[1,3417],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,3421],21:[1,3425],22:3419,32:3418,196:3420,210:3422,211:[1,3424],212:[1,3423]},{96:[1,3426]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,3428],102:3427,104:[1,3429],105:[1,3430],106:3431,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3432]},o($VA8,$Vt),o($VA8,$Vu),o($Vd8,$Vn1,{78:3433}),o($Va1,$VU3),{117:[1,3434]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:3435,210:52,211:$Vp},{19:$VD8,21:$VE8,22:3437,96:[1,3448],104:[1,3449],105:[1,3450],106:3447,177:3438,187:3436,192:3441,193:3442,194:3443,197:3446,200:[1,3451],201:[1,3452],202:[1,3457],203:[1,3458],204:[1,3459],205:[1,3460],206:[1,3453],207:[1,3454],208:[1,3455],209:[1,3456],210:3440,211:$VF8},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:3461,210:52,211:$Vp},{19:$VG8,21:$VH8,22:3463,96:[1,3474],104:[1,3475],105:[1,3476],106:3473,177:3464,187:3462,192:3467,193:3468,194:3469,197:3472,200:[1,3477],201:[1,3478],202:[1,3483],203:[1,3484],204:[1,3485],205:[1,3486],206:[1,3479],207:[1,3480],208:[1,3481],209:[1,3482],210:3466,211:$VI8},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,3487]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:3488,210:52,211:$Vp},{19:$VJ8,21:$VK8,22:3490,96:[1,3501],104:[1,3502],105:[1,3503],106:3500,177:3491,187:3489,192:3494,193:3495,194:3496,197:3499,200:[1,3504],201:[1,3505],202:[1,3510],203:[1,3511],204:[1,3512],205:[1,3513],206:[1,3506],207:[1,3507],208:[1,3508],209:[1,3509],210:3493,211:$VL8},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vw2,$Vv2,{80:3148,188:3149,79:3514,186:$Vm8}),o($Va1,$VT1),o($Va1,$Vl),o($Va1,$Vm),o($Va1,$Vq),o($Va1,$Vr),o($Va1,$Vs),o($Va1,$Vt),o($Va1,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3515,117:$VI2,144:$VJ2,185:$VK2}),o($Vw2,$Vv2,{80:3148,188:3149,79:3516,186:$Vm8}),o($Vo1,$Vz2,{95:2611,91:3517,97:$Vt7,98:$VL,99:$VM,100:$VN}),o($Vn2,$VA2),o($Vn2,$Vb3),o($Va1,$VE4),o($VL3,$VM3),o($Vm1,$VN3),o($VL3,$VO3,{31:3518,189:[1,3519]}),{19:$VP3,21:$VQ3,22:627,125:3520,195:$VR3,210:630,211:$VS3},o($Va1,$VT3),o($Vo1,$VN3),o($Va1,$VO3,{31:3521,189:[1,3522]}),{19:$VP3,21:$VQ3,22:627,125:3523,195:$VR3,210:630,211:$VS3},o($Vq1,$VV3),o($Vt1,$VW3),o($Vt1,$VX3),o($Vt1,$VY3),{96:[1,3524]},o($Vt1,$VJ1),{96:[1,3526],102:3525,104:[1,3527],105:[1,3528],106:3529,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3530]},o($Ve2,$VU3),o($Vp1,$VN3),o($Ve2,$VO3,{31:3531,189:[1,3532]}),{19:$VP3,21:$VQ3,22:627,125:3533,195:$VR3,210:630,211:$VS3},o($Vt1,$Vg4),{117:[1,3534]},{19:[1,3537],21:[1,3540],22:3536,83:3535,210:3538,211:[1,3539]},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$Vu7,21:$Vv7,22:3542,83:3541,210:2646,211:$Vw7},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$Vx7,21:$Vy7,22:3544,83:3543,210:2672,211:$Vz7},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VA7,21:$VB7,22:3546,83:3545,210:2699,211:$VC7},o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VD7,21:$VE7,22:3548,83:3547,210:2726,211:$VF7},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VG7,21:$VH7,22:3550,83:3549,210:2752,211:$VI7},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VJ7,21:$VK7,22:3552,83:3551,210:2779,211:$VL7},o($VH4,$Vv2,{80:3234,188:3235,79:3553,186:$Vo8}),o($VC3,$VT1),o($VC3,$Vl),o($VC3,$Vm),o($VC3,$Vq),o($VC3,$Vr),o($VC3,$Vs),o($VC3,$Vt),o($VC3,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3554,117:$VI2,144:$VJ2,185:$VK2}),o($VH4,$Vv2,{80:3234,188:3235,79:3555,186:$Vo8}),o($VF3,$Vz2,{95:2824,91:3556,97:$VM7,98:$VL,99:$VM,100:$VN}),o($VF4,$VA2),o($VF4,$Vb3),o($VC3,$VE4),o($VI5,$VM3),o($VE3,$VN3),o($VI5,$VO3,{31:3557,189:[1,3558]}),{19:$VP3,21:$VQ3,22:627,125:3559,195:$VR3,210:630,211:$VS3},o($VC3,$VT3),o($VF3,$VN3),o($VC3,$VO3,{31:3560,189:[1,3561]}),{19:$VP3,21:$VQ3,22:627,125:3562,195:$VR3,210:630,211:$VS3},o($VH3,$VV3),o($VI3,$VW3),o($VI3,$VX3),o($VI3,$VY3),{96:[1,3563]},o($VI3,$VJ1),{96:[1,3565],102:3564,104:[1,3566],105:[1,3567],106:3568,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3569]},o($VJ5,$VU3),o($VG3,$VN3),o($VJ5,$VO3,{31:3570,189:[1,3571]}),{19:$VP3,21:$VQ3,22:627,125:3572,195:$VR3,210:630,211:$VS3},o($VI3,$Vg4),{117:[1,3573]},{19:[1,3576],21:[1,3579],22:3575,83:3574,210:3577,211:[1,3578]},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$VN7,21:$VO7,22:3581,83:3580,210:2859,211:$VP7},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$VQ7,21:$VR7,22:3583,83:3582,210:2885,211:$VS7},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$VT7,21:$VU7,22:3585,83:3584,210:2912,211:$VV7},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$VW7,21:$VX7,22:3587,83:3586,210:2939,211:$VY7},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$VZ7,21:$V_7,22:3589,83:3588,210:2965,211:$V$7},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$V08,21:$V18,22:3591,83:3590,210:2992,211:$V28},o($V38,$VN4),{19:$Vn,21:$Vo,22:3592,210:52,211:$Vp},{19:$VM8,21:$VN8,22:3594,96:[1,3605],104:[1,3606],105:[1,3607],106:3604,177:3595,187:3593,192:3598,193:3599,194:3600,197:3603,200:[1,3608],201:[1,3609],202:[1,3614],203:[1,3615],204:[1,3616],205:[1,3617],206:[1,3610],207:[1,3611],208:[1,3612],209:[1,3613],210:3597,211:$VO8},o($VG6,$Vd7,{57:3618,49:[1,3619]}),o($VI6,$Ve7),o($VI6,$Vf7,{70:3620,72:3621,74:3622,40:3623,114:3624,75:[1,3625],76:[1,3626],77:[1,3627],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:3628,69:3629,88:3630,90:3631,91:3635,95:3636,92:[1,3632],93:[1,3633],94:[1,3634],97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3638,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:3639}),o($Vl7,$Vs1,{95:3329,91:3640,97:$Vs8,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:3641}),o($Vm7,$Vu1,{82:3642}),o($Vm7,$Vu1,{82:3643}),o($VI6,$Vv1,{101:3333,103:3334,87:3644,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:3645}),o($Vq7,$VI1),{115:[1,3646],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,3650],21:[1,3654],22:3648,32:3647,196:3649,210:3651,211:[1,3653],212:[1,3652]},{96:[1,3655]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,3657],102:3656,104:[1,3658],105:[1,3659],106:3660,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3661]},o($Vm7,$Vt),o($Vm7,$Vu),o($VI6,$Ve7),o($VI6,$Vf7,{70:3662,72:3663,74:3664,40:3665,114:3666,75:[1,3667],76:[1,3668],77:[1,3669],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:3670,69:3671,88:3672,90:3673,91:3677,95:3678,92:[1,3674],93:[1,3675],94:[1,3676],97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:3680,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:3681}),o($Vl7,$Vs1,{95:3362,91:3682,97:$Vu8,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:3683}),o($Vm7,$Vu1,{82:3684}),o($Vm7,$Vu1,{82:3685}),o($VI6,$Vv1,{101:3366,103:3367,87:3686,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:3687}),o($Vq7,$VI1),{115:[1,3688],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,3692],21:[1,3696],22:3690,32:3689,196:3691,210:3693,211:[1,3695],212:[1,3694]},{96:[1,3697]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,3699],102:3698,104:[1,3700],105:[1,3701],106:3702,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,3703]},o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,3704]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,3705]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),o($VR8,$Vv2,{79:3706,80:3707,188:3708,186:$VS8}),o($Vj8,$V58),o($Vx,$Vg,{51:3710,55:3711,36:3712,39:$Vy}),o($Vk8,$V68),o($Vx,$Vg,{55:3713,36:3714,39:$Vy}),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,3715],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,3719],21:[1,3723],22:3717,32:3716,196:3718,210:3720,211:[1,3722],212:[1,3721]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:3724}),o($Vk8,$Vs1,{95:3407,91:3725,97:$Vx8,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,3726]},o($VT8,$VJ1),{66:[1,3727]},o($Vz8,$Vz2,{95:3080,91:3728,97:$Vl8,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:3729,91:3730,87:3731,95:3732,101:3734,103:3735,97:$VU8,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3736],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3737,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,3738]},o($VC8,$Vk3),o($VR8,$Vv2,{80:3707,188:3708,79:3739,186:$VS8}),o($Vo1,$VY4),{189:[1,3742],190:3740,191:[1,3741]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:3743,199:3744,107:[1,3745]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,3748],190:3746,191:[1,3747]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:3749,199:3750,107:[1,3751]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,3754],21:[1,3757],22:3753,83:3752,210:3755,211:[1,3756]},{189:[1,3760],190:3758,191:[1,3759]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:3761,199:3762,107:[1,3763]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($Va1,$VU3),{117:[1,3764]},o($Va1,$VM3),o($Vn2,$VV3),o($Vu2,$VN4),{19:$Vn,21:$Vo,22:3765,210:52,211:$Vp},{19:$VV8,21:$VW8,22:3767,96:[1,3778],104:[1,3779],105:[1,3780],106:3777,177:3768,187:3766,192:3771,193:3772,194:3773,197:3776,200:[1,3781],201:[1,3782],202:[1,3787],203:[1,3788],204:[1,3789],205:[1,3790],206:[1,3783],207:[1,3784],208:[1,3785],209:[1,3786],210:3770,211:$VX8},o($Vw2,$VN4),{19:$Vn,21:$Vo,22:3791,210:52,211:$Vp},{19:$VY8,21:$VZ8,22:3793,96:[1,3804],104:[1,3805],105:[1,3806],106:3803,177:3794,187:3792,192:3797,193:3798,194:3799,197:3802,200:[1,3807],201:[1,3808],202:[1,3813],203:[1,3814],204:[1,3815],205:[1,3816],206:[1,3809],207:[1,3810],208:[1,3811],209:[1,3812],210:3796,211:$V_8},o($Vt1,$Vb3),o($Vt1,$Vc3),o($Vt1,$Vd3),o($Vt1,$Ve3),o($Vt1,$Vf3),{107:[1,3817]},o($Vt1,$Vk3),o($Vy2,$VN4),{19:$Vn,21:$Vo,22:3818,210:52,211:$Vp},{19:$V$8,21:$V09,22:3820,96:[1,3831],104:[1,3832],105:[1,3833],106:3830,177:3821,187:3819,192:3824,193:3825,194:3826,197:3829,200:[1,3834],201:[1,3835],202:[1,3840],203:[1,3841],204:[1,3842],205:[1,3843],206:[1,3836],207:[1,3837],208:[1,3838],209:[1,3839],210:3823,211:$V19},o($Vp1,$VY4),o($VH1,$VB5),o($VH1,$VE1),o($VH1,$Vq),o($VH1,$Vr),o($VH1,$Vt),o($VH1,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($VC3,$VU3),{117:[1,3844]},o($VC3,$VM3),o($VF4,$VV3),o($VG4,$VN4),{19:$Vn,21:$Vo,22:3845,210:52,211:$Vp},{19:$V29,21:$V39,22:3847,96:[1,3858],104:[1,3859],105:[1,3860],106:3857,177:3848,187:3846,192:3851,193:3852,194:3853,197:3856,200:[1,3861],201:[1,3862],202:[1,3867],203:[1,3868],204:[1,3869],205:[1,3870],206:[1,3863],207:[1,3864],208:[1,3865],209:[1,3866],210:3850,211:$V49},o($VH4,$VN4),{19:$Vn,21:$Vo,22:3871,210:52,211:$Vp},{19:$V59,21:$V69,22:3873,96:[1,3884],104:[1,3885],105:[1,3886],106:3883,177:3874,187:3872,192:3877,193:3878,194:3879,197:3882,200:[1,3887],201:[1,3888],202:[1,3893],203:[1,3894],204:[1,3895],205:[1,3896],206:[1,3889],207:[1,3890],208:[1,3891],209:[1,3892],210:3876,211:$V79},o($VI3,$Vb3),o($VI3,$Vc3),o($VI3,$Vd3),o($VI3,$Ve3),o($VI3,$Vf3),{107:[1,3897]},o($VI3,$Vk3),o($VJ4,$VN4),{19:$Vn,21:$Vo,22:3898,210:52,211:$Vp},{19:$V89,21:$V99,22:3900,96:[1,3911],104:[1,3912],105:[1,3913],106:3910,177:3901,187:3899,192:3904,193:3905,194:3906,197:3909,200:[1,3914],201:[1,3915],202:[1,3920],203:[1,3921],204:[1,3922],205:[1,3923],206:[1,3916],207:[1,3917],208:[1,3918],209:[1,3919],210:3903,211:$Va9},o($VG3,$VY4),o($VJ3,$VB5),o($VJ3,$VE1),o($VJ3,$Vq),o($VJ3,$Vr),o($VJ3,$Vt),o($VJ3,$Vu),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),{189:[1,3926],190:3924,191:[1,3925]},o($Vy6,$VM5),o($Vy6,$VN5),o($Vy6,$VO5),o($Vy6,$Vq),o($Vy6,$Vr),o($Vy6,$Vj4),o($Vy6,$Vk4),o($Vy6,$Vl4),o($Vy6,$Vt),o($Vy6,$Vu),o($Vy6,$Vm4),o($Vy6,$Vn4,{198:3927,199:3928,107:[1,3929]}),o($Vy6,$Vo4),o($Vy6,$Vp4),o($Vy6,$Vq4),o($Vy6,$Vr4),o($Vy6,$Vs4),o($Vy6,$Vt4),o($Vy6,$Vu4),o($Vy6,$Vv4),o($Vy6,$Vw4),o($Vb9,$Vg3),o($Vb9,$Vh3),o($Vb9,$Vi3),o($Vb9,$Vj3),o($VI6,$V68),o($Vx,$Vg,{55:3930,36:3931,39:$Vy}),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3932],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3936],21:[1,3940],22:3934,32:3933,196:3935,210:3937,211:[1,3939],212:[1,3938]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3941}),o($VI6,$Vs1,{95:3636,91:3942,97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3943]},o($Vb8,$VJ1),{66:[1,3944]},o($Vl7,$Vz2,{95:3329,91:3945,97:$Vs8,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3946,91:3947,87:3948,95:3949,101:3951,103:3952,97:$Vc9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3953],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3954,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3955]},o($Vq7,$Vk3),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,3956],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,3960],21:[1,3964],22:3958,32:3957,196:3959,210:3961,211:[1,3963],212:[1,3962]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:3965}),o($VI6,$Vs1,{95:3678,91:3966,97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,3967]},o($Vb8,$VJ1),{66:[1,3968]},o($Vl7,$Vz2,{95:3362,91:3969,97:$Vu8,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:3970,91:3971,87:3972,95:3973,101:3975,103:3976,97:$Vd9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,3977],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:3978,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,3979]},o($Vq7,$Vk3),o($VI6,$VY4),{19:[1,3982],21:[1,3985],22:3981,83:3980,210:3983,211:[1,3984]},o($V16,$Vq8),o($Vd8,$VN3),o($V16,$VO3,{31:3986,189:[1,3987]}),{19:$VP3,21:$VQ3,22:627,125:3988,195:$VR3,210:630,211:$VS3},o($Vj8,$Vr8),o($Vk8,$VJ6,{56:3989}),o($VC,$VD,{59:3990,69:3991,71:3992,72:3993,88:3996,90:3997,83:3999,84:4000,85:4001,74:4002,40:4003,91:4007,22:4008,87:4010,114:4011,95:4015,210:4018,101:4019,103:4020,19:[1,4017],21:[1,4022],65:[1,3994],67:[1,3995],75:[1,4012],76:[1,4013],77:[1,4014],81:[1,3998],92:[1,4004],93:[1,4005],94:[1,4006],97:$Ve9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4009],211:[1,4021]}),o($Vk8,$Vt8),o($VC,$VD,{59:4023,69:4024,71:4025,72:4026,88:4029,90:4030,83:4032,84:4033,85:4034,74:4035,40:4036,91:4040,22:4041,87:4043,114:4044,95:4048,210:4051,101:4052,103:4053,19:[1,4050],21:[1,4055],65:[1,4027],67:[1,4028],75:[1,4045],76:[1,4046],77:[1,4047],81:[1,4031],92:[1,4037],93:[1,4038],94:[1,4039],97:$Vf9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4042],211:[1,4054]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4056,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:3407,91:4057,97:$Vx8,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4058]},o($VA8,$VJ1),{96:[1,4060],102:4059,104:[1,4061],105:[1,4062],106:4063,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4064]},o($VA8,$Vg4),{117:[1,4065]},{19:[1,4068],21:[1,4071],22:4067,83:4066,210:4069,211:[1,4070]},o($V16,$Vw8),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VD8,21:$VE8,22:4073,83:4072,210:3440,211:$VF8},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VG8,21:$VH8,22:4075,83:4074,210:3466,211:$VI8},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$VJ8,21:$VK8,22:4077,83:4076,210:3493,211:$VL8},o($Vo1,$VY4),{189:[1,4080],190:4078,191:[1,4079]},o($Vm1,$VM5),o($Vm1,$VN5),o($Vm1,$VO5),o($Vm1,$Vq),o($Vm1,$Vr),o($Vm1,$Vj4),o($Vm1,$Vk4),o($Vm1,$Vl4),o($Vm1,$Vt),o($Vm1,$Vu),o($Vm1,$Vm4),o($Vm1,$Vn4,{198:4081,199:4082,107:[1,4083]}),o($Vm1,$Vo4),o($Vm1,$Vp4),o($Vm1,$Vq4),o($Vm1,$Vr4),o($Vm1,$Vs4),o($Vm1,$Vt4),o($Vm1,$Vu4),o($Vm1,$Vv4),o($Vm1,$Vw4),o($VP5,$Vg3),o($VP5,$Vh3),o($VP5,$Vi3),o($VP5,$Vj3),{189:[1,4086],190:4084,191:[1,4085]},o($Vo1,$VM5),o($Vo1,$VN5),o($Vo1,$VO5),o($Vo1,$Vq),o($Vo1,$Vr),o($Vo1,$Vj4),o($Vo1,$Vk4),o($Vo1,$Vl4),o($Vo1,$Vt),o($Vo1,$Vu),o($Vo1,$Vm4),o($Vo1,$Vn4,{198:4087,199:4088,107:[1,4089]}),o($Vo1,$Vo4),o($Vo1,$Vp4),o($Vo1,$Vq4),o($Vo1,$Vr4),o($Vo1,$Vs4),o($Vo1,$Vt4),o($Vo1,$Vu4),o($Vo1,$Vv4),o($Vo1,$Vw4),o($VQ5,$Vg3),o($VQ5,$Vh3),o($VQ5,$Vi3),o($VQ5,$Vj3),{19:[1,4092],21:[1,4095],22:4091,83:4090,210:4093,211:[1,4094]},{189:[1,4098],190:4096,191:[1,4097]},o($Vp1,$VM5),o($Vp1,$VN5),o($Vp1,$VO5),o($Vp1,$Vq),o($Vp1,$Vr),o($Vp1,$Vj4),o($Vp1,$Vk4),o($Vp1,$Vl4),o($Vp1,$Vt),o($Vp1,$Vu),o($Vp1,$Vm4),o($Vp1,$Vn4,{198:4099,199:4100,107:[1,4101]}),o($Vp1,$Vo4),o($Vp1,$Vp4),o($Vp1,$Vq4),o($Vp1,$Vr4),o($Vp1,$Vs4),o($Vp1,$Vt4),o($Vp1,$Vu4),o($Vp1,$Vv4),o($Vp1,$Vw4),o($VR5,$Vg3),o($VR5,$Vh3),o($VR5,$Vi3),o($VR5,$Vj3),o($VF3,$VY4),{189:[1,4104],190:4102,191:[1,4103]},o($VE3,$VM5),o($VE3,$VN5),o($VE3,$VO5),o($VE3,$Vq),o($VE3,$Vr),o($VE3,$Vj4),o($VE3,$Vk4),o($VE3,$Vl4),o($VE3,$Vt),o($VE3,$Vu),o($VE3,$Vm4),o($VE3,$Vn4,{198:4105,199:4106,107:[1,4107]}),o($VE3,$Vo4),o($VE3,$Vp4),o($VE3,$Vq4),o($VE3,$Vr4),o($VE3,$Vs4),o($VE3,$Vt4),o($VE3,$Vu4),o($VE3,$Vv4),o($VE3,$Vw4),o($V37,$Vg3),o($V37,$Vh3),o($V37,$Vi3),o($V37,$Vj3),{189:[1,4110],190:4108,191:[1,4109]},o($VF3,$VM5),o($VF3,$VN5),o($VF3,$VO5),o($VF3,$Vq),o($VF3,$Vr),o($VF3,$Vj4),o($VF3,$Vk4),o($VF3,$Vl4),o($VF3,$Vt),o($VF3,$Vu),o($VF3,$Vm4),o($VF3,$Vn4,{198:4111,199:4112,107:[1,4113]}),o($VF3,$Vo4),o($VF3,$Vp4),o($VF3,$Vq4),o($VF3,$Vr4),o($VF3,$Vs4),o($VF3,$Vt4),o($VF3,$Vu4),o($VF3,$Vv4),o($VF3,$Vw4),o($V47,$Vg3),o($V47,$Vh3),o($V47,$Vi3),o($V47,$Vj3),{19:[1,4116],21:[1,4119],22:4115,83:4114,210:4117,211:[1,4118]},{189:[1,4122],190:4120,191:[1,4121]},o($VG3,$VM5),o($VG3,$VN5),o($VG3,$VO5),o($VG3,$Vq),o($VG3,$Vr),o($VG3,$Vj4),o($VG3,$Vk4),o($VG3,$Vl4),o($VG3,$Vt),o($VG3,$Vu),o($VG3,$Vm4),o($VG3,$Vn4,{198:4123,199:4124,107:[1,4125]}),o($VG3,$Vo4),o($VG3,$Vp4),o($VG3,$Vq4),o($VG3,$Vr4),o($VG3,$Vs4),o($VG3,$Vt4),o($VG3,$Vu4),o($VG3,$Vv4),o($VG3,$Vw4),o($V57,$Vg3),o($V57,$Vh3),o($V57,$Vi3),o($V57,$Vj3),o($V38,$VU1),o($V38,$VV1),o($V38,$VW1),o($Vy6,$Vz5),o($Vy6,$VA5),{19:$VM8,21:$VN8,22:4127,83:4126,210:3597,211:$VO8},o($VI6,$Vt8),o($VC,$VD,{59:4128,69:4129,71:4130,72:4131,88:4134,90:4135,83:4137,84:4138,85:4139,74:4140,40:4141,91:4145,22:4146,87:4148,114:4149,95:4153,210:4156,101:4157,103:4158,19:[1,4155],21:[1,4160],65:[1,4132],67:[1,4133],75:[1,4150],76:[1,4151],77:[1,4152],81:[1,4136],92:[1,4142],93:[1,4143],94:[1,4144],97:$Vg9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4147],211:[1,4159]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4161,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:3636,91:4162,97:$VP8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4163]},o($Vm7,$VJ1),{96:[1,4165],102:4164,104:[1,4166],105:[1,4167],106:4168,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4169]},o($Vm7,$Vg4),{117:[1,4170]},{19:[1,4173],21:[1,4176],22:4172,83:4171,210:4174,211:[1,4175]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4177,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:3678,91:4178,97:$VQ8,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4179]},o($Vm7,$VJ1),{96:[1,4181],102:4180,104:[1,4182],105:[1,4183],106:4184,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4185]},o($Vm7,$Vg4),{117:[1,4186]},{19:[1,4189],21:[1,4192],22:4188,83:4187,210:4190,211:[1,4191]},o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($VR8,$VN4),{19:$Vn,21:$Vo,22:4193,210:52,211:$Vp},{19:$Vh9,21:$Vi9,22:4195,96:[1,4206],104:[1,4207],105:[1,4208],106:4205,177:4196,187:4194,192:4199,193:4200,194:4201,197:4204,200:[1,4209],201:[1,4210],202:[1,4215],203:[1,4216],204:[1,4217],205:[1,4218],206:[1,4211],207:[1,4212],208:[1,4213],209:[1,4214],210:4198,211:$Vj9},o($Vj8,$Vd7,{57:4219,49:[1,4220]}),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4221,72:4222,74:4223,40:4224,114:4225,75:[1,4226],76:[1,4227],77:[1,4228],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4229,69:4230,88:4231,90:4232,91:4236,95:4237,92:[1,4233],93:[1,4234],94:[1,4235],97:$Vk9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4239,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4240}),o($Vz8,$Vs1,{95:4015,91:4241,97:$Ve9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4242}),o($VA8,$Vu1,{82:4243}),o($VA8,$Vu1,{82:4244}),o($Vk8,$Vv1,{101:4019,103:4020,87:4245,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4246}),o($VC8,$VI1),{115:[1,4247],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4251],21:[1,4255],22:4249,32:4248,196:4250,210:4252,211:[1,4254],212:[1,4253]},{96:[1,4256]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4258],102:4257,104:[1,4259],105:[1,4260],106:4261,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4262]},o($VA8,$Vt),o($VA8,$Vu),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4263,72:4264,74:4265,40:4266,114:4267,75:[1,4268],76:[1,4269],77:[1,4270],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4271,69:4272,88:4273,90:4274,91:4278,95:4279,92:[1,4275],93:[1,4276],94:[1,4277],97:$Vl9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4281,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4282}),o($Vz8,$Vs1,{95:4048,91:4283,97:$Vf9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4284}),o($VA8,$Vu1,{82:4285}),o($VA8,$Vu1,{82:4286}),o($Vk8,$Vv1,{101:4052,103:4053,87:4287,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4288}),o($VC8,$VI1),{115:[1,4289],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4293],21:[1,4297],22:4291,32:4290,196:4292,210:4294,211:[1,4296],212:[1,4295]},{96:[1,4298]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4300],102:4299,104:[1,4301],105:[1,4302],106:4303,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4304]},o($VA8,$Vt),o($VA8,$Vu),{117:[1,4305]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4306]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($Vu2,$VU1),o($Vu2,$VV1),o($Vu2,$VW1),o($Vm1,$Vz5),o($Vm1,$VA5),{19:$VV8,21:$VW8,22:4308,83:4307,210:3770,211:$VX8},o($Vw2,$VU1),o($Vw2,$VV1),o($Vw2,$VW1),o($Vo1,$Vz5),o($Vo1,$VA5),{19:$VY8,21:$VZ8,22:4310,83:4309,210:3796,211:$V_8},o($Vt1,$VB5),o($Vt1,$VE1),o($Vt1,$Vq),o($Vt1,$Vr),o($Vt1,$Vt),o($Vt1,$Vu),o($Vy2,$VU1),o($Vy2,$VV1),o($Vy2,$VW1),o($Vp1,$Vz5),o($Vp1,$VA5),{19:$V$8,21:$V09,22:4312,83:4311,210:3823,211:$V19},o($VG4,$VU1),o($VG4,$VV1),o($VG4,$VW1),o($VE3,$Vz5),o($VE3,$VA5),{19:$V29,21:$V39,22:4314,83:4313,210:3850,211:$V49},o($VH4,$VU1),o($VH4,$VV1),o($VH4,$VW1),o($VF3,$Vz5),o($VF3,$VA5),{19:$V59,21:$V69,22:4316,83:4315,210:3876,211:$V79},o($VI3,$VB5),o($VI3,$VE1),o($VI3,$Vq),o($VI3,$Vr),o($VI3,$Vt),o($VI3,$Vu),o($VJ4,$VU1),o($VJ4,$VV1),o($VJ4,$VW1),o($VG3,$Vz5),o($VG3,$VA5),{19:$V89,21:$V99,22:4318,83:4317,210:3903,211:$Va9},o($Vy6,$V66),o($Vy6,$VE1),o($VI6,$Ve7),o($VI6,$Vf7,{70:4319,72:4320,74:4321,40:4322,114:4323,75:[1,4324],76:[1,4325],77:[1,4326],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($VI6,$Vg7),o($VI6,$Vh7,{73:4327,69:4328,88:4329,90:4330,91:4334,95:4335,92:[1,4331],93:[1,4332],94:[1,4333],97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4337,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($VI6,$Vj7),o($Vk7,$Vr1,{89:4338}),o($Vl7,$Vs1,{95:4153,91:4339,97:$Vg9,98:$VL,99:$VM,100:$VN}),o($Vm7,$Vu1,{82:4340}),o($Vm7,$Vu1,{82:4341}),o($Vm7,$Vu1,{82:4342}),o($VI6,$Vv1,{101:4157,103:4158,87:4343,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vn7,$Vo7),o($Vn7,$Vp7),o($Vk7,$VA1),o($Vk7,$VB1),o($Vk7,$VC1),o($Vk7,$VD1),o($Vm7,$VE1),o($VF1,$VG1,{158:4344}),o($Vq7,$VI1),{115:[1,4345],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vn7,$V11),o($Vn7,$V21),{19:[1,4349],21:[1,4353],22:4347,32:4346,196:4348,210:4350,211:[1,4352],212:[1,4351]},{96:[1,4354]},o($Vk7,$VJ1),o($Vm7,$Vq),o($Vm7,$Vr),{96:[1,4356],102:4355,104:[1,4357],105:[1,4358],106:4359,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4360]},o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,4361]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4362]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),{117:[1,4363]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4364]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),{189:[1,4367],190:4365,191:[1,4366]},o($Vd8,$VM5),o($Vd8,$VN5),o($Vd8,$VO5),o($Vd8,$Vq),o($Vd8,$Vr),o($Vd8,$Vj4),o($Vd8,$Vk4),o($Vd8,$Vl4),o($Vd8,$Vt),o($Vd8,$Vu),o($Vd8,$Vm4),o($Vd8,$Vn4,{198:4368,199:4369,107:[1,4370]}),o($Vd8,$Vo4),o($Vd8,$Vp4),o($Vd8,$Vq4),o($Vd8,$Vr4),o($Vd8,$Vs4),o($Vd8,$Vt4),o($Vd8,$Vu4),o($Vd8,$Vv4),o($Vd8,$Vw4),o($Vn9,$Vg3),o($Vn9,$Vh3),o($Vn9,$Vi3),o($Vn9,$Vj3),o($Vk8,$V68),o($Vx,$Vg,{55:4371,36:4372,39:$Vy}),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4373],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4377],21:[1,4381],22:4375,32:4374,196:4376,210:4378,211:[1,4380],212:[1,4379]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4382}),o($Vk8,$Vs1,{95:4237,91:4383,97:$Vk9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4384]},o($VT8,$VJ1),{66:[1,4385]},o($Vz8,$Vz2,{95:4015,91:4386,97:$Ve9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4387,91:4388,87:4389,95:4390,101:4392,103:4393,97:$Vo9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4394],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4395,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4396]},o($VC8,$Vk3),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4397],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4401],21:[1,4405],22:4399,32:4398,196:4400,210:4402,211:[1,4404],212:[1,4403]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4406}),o($Vk8,$Vs1,{95:4279,91:4407,97:$Vl9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4408]},o($VT8,$VJ1),{66:[1,4409]},o($Vz8,$Vz2,{95:4048,91:4410,97:$Vf9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4411,91:4412,87:4413,95:4414,101:4416,103:4417,97:$Vp9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4418],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4419,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4420]},o($VC8,$Vk3),o($Vk8,$VY4),{19:[1,4423],21:[1,4426],22:4422,83:4421,210:4424,211:[1,4425]},o($Vm1,$V66),o($Vm1,$VE1),o($Vo1,$V66),o($Vo1,$VE1),o($Vp1,$V66),o($Vp1,$VE1),o($VE3,$V66),o($VE3,$VE1),o($VF3,$V66),o($VF3,$VE1),o($VG3,$V66),o($VG3,$VE1),o($VI6,$V78),o($VI6,$V88),o($VI6,$Vo7),o($VI6,$Vp7),{115:[1,4427],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VI6,$V11),o($VI6,$V21),{19:[1,4431],21:[1,4435],22:4429,32:4428,196:4430,210:4432,211:[1,4434],212:[1,4433]},o($VI6,$V98),o($VI6,$Va8),o($Vb8,$Vr1,{89:4436}),o($VI6,$Vs1,{95:4335,91:4437,97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA1),o($Vb8,$VB1),o($Vb8,$VC1),o($Vb8,$VD1),{96:[1,4438]},o($Vb8,$VJ1),{66:[1,4439]},o($Vl7,$Vz2,{95:4153,91:4440,97:$Vg9,98:$VL,99:$VM,100:$VN}),o($Vk7,$VA2),o($VI6,$VB2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VD2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VI6,$VE2,{86:4441,91:4442,87:4443,95:4444,101:4446,103:4447,97:$Vq9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vq7,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4448],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4449,117:$VI2,144:$VJ2,185:$VK2}),o($Vn7,$VT1),o($Vn7,$Vl),o($Vn7,$Vm),o($Vn7,$Vq),o($Vn7,$Vr),o($Vn7,$Vs),o($Vn7,$Vt),o($Vn7,$Vu),o($Vk7,$Vb3),o($Vq7,$Vc3),o($Vq7,$Vd3),o($Vq7,$Ve3),o($Vq7,$Vf3),{107:[1,4450]},o($Vq7,$Vk3),o($VI6,$VY4),{19:[1,4453],21:[1,4456],22:4452,83:4451,210:4454,211:[1,4455]},o($VI6,$VY4),{19:[1,4459],21:[1,4462],22:4458,83:4457,210:4460,211:[1,4461]},o($VR8,$VU1),o($VR8,$VV1),o($VR8,$VW1),o($Vd8,$Vz5),o($Vd8,$VA5),{19:$Vh9,21:$Vi9,22:4464,83:4463,210:4198,211:$Vj9},o($Vk8,$Vt8),o($VC,$VD,{59:4465,69:4466,71:4467,72:4468,88:4471,90:4472,83:4474,84:4475,85:4476,74:4477,40:4478,91:4482,22:4483,87:4485,114:4486,95:4490,210:4493,101:4494,103:4495,19:[1,4492],21:[1,4497],65:[1,4469],67:[1,4470],75:[1,4487],76:[1,4488],77:[1,4489],81:[1,4473],92:[1,4479],93:[1,4480],94:[1,4481],97:$Vr9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT,157:[1,4484],211:[1,4496]}),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4498,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4237,91:4499,97:$Vk9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4500]},o($VA8,$VJ1),{96:[1,4502],102:4501,104:[1,4503],105:[1,4504],106:4505,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4506]},o($VA8,$Vg4),{117:[1,4507]},{19:[1,4510],21:[1,4513],22:4509,83:4508,210:4511,211:[1,4512]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4514,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4279,91:4515,97:$Vl9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4516]},o($VA8,$VJ1),{96:[1,4518],102:4517,104:[1,4519],105:[1,4520],106:4521,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4522]},o($VA8,$Vg4),{117:[1,4523]},{19:[1,4526],21:[1,4529],22:4525,83:4524,210:4527,211:[1,4528]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4530,117:$VI2,144:$VJ2,185:$VK2}),o($VI6,$VT1),o($VI6,$Vl),o($VI6,$Vm),o($VI6,$Vq),o($VI6,$Vr),o($VI6,$Vs),o($VI6,$Vt),o($VI6,$Vu),o($VI6,$Vz2,{95:4335,91:4531,97:$Vm9,98:$VL,99:$VM,100:$VN}),o($Vb8,$VA2),o($Vb8,$Vb3),o($VI6,$Vv8),o($Vk7,$VV3),o($Vm7,$VW3),o($Vm7,$VX3),o($Vm7,$VY3),{96:[1,4532]},o($Vm7,$VJ1),{96:[1,4534],102:4533,104:[1,4535],105:[1,4536],106:4537,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4538]},o($Vm7,$Vg4),{117:[1,4539]},{19:[1,4542],21:[1,4545],22:4541,83:4540,210:4543,211:[1,4544]},o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),o($Vd8,$V66),o($Vd8,$VE1),o($Vk8,$Ve7),o($Vk8,$Vf7,{70:4546,72:4547,74:4548,40:4549,114:4550,75:[1,4551],76:[1,4552],77:[1,4553],115:$VD,121:$VD,123:$VD,185:$VD,215:$VD}),o($Vk8,$Vg7),o($Vk8,$Vh7,{73:4554,69:4555,88:4556,90:4557,91:4561,95:4562,92:[1,4558],93:[1,4559],94:[1,4560],97:$Vs9,98:$VL,99:$VM,100:$VN}),o($Vf,$Vg,{36:182,40:184,34:4564,39:$Vk1,75:$Vh,76:$Vi,77:$Vj}),o($Vk8,$Vj7),o($Vy8,$Vr1,{89:4565}),o($Vz8,$Vs1,{95:4490,91:4566,97:$Vr9,98:$VL,99:$VM,100:$VN}),o($VA8,$Vu1,{82:4567}),o($VA8,$Vu1,{82:4568}),o($VA8,$Vu1,{82:4569}),o($Vk8,$Vv1,{101:4494,103:4495,87:4570,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VB8,$Vo7),o($VB8,$Vp7),o($Vy8,$VA1),o($Vy8,$VB1),o($Vy8,$VC1),o($Vy8,$VD1),o($VA8,$VE1),o($VF1,$VG1,{158:4571}),o($VC8,$VI1),{115:[1,4572],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($VB8,$V11),o($VB8,$V21),{19:[1,4576],21:[1,4580],22:4574,32:4573,196:4575,210:4577,211:[1,4579],212:[1,4578]},{96:[1,4581]},o($Vy8,$VJ1),o($VA8,$Vq),o($VA8,$Vr),{96:[1,4583],102:4582,104:[1,4584],105:[1,4585],106:4586,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4587]},o($VA8,$Vt),o($VA8,$Vu),{117:[1,4588]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4589]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),{117:[1,4590]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4591]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),{117:[1,4592]},o($Vb8,$VV3),o($Vm7,$Vb3),o($Vm7,$Vc3),o($Vm7,$Vd3),o($Vm7,$Ve3),o($Vm7,$Vf3),{107:[1,4593]},o($Vm7,$Vk3),o($Vn7,$VY4),o($Vq7,$VB5),o($Vq7,$VE1),o($Vq7,$Vq),o($Vq7,$Vr),o($Vq7,$Vt),o($Vq7,$Vu),o($Vk8,$V78),o($Vk8,$V88),o($Vk8,$Vo7),o($Vk8,$Vp7),{115:[1,4594],118:195,119:196,120:197,121:$Vw1,123:$Vx1,185:$Vy1,213:199,215:$Vz1},o($Vk8,$V11),o($Vk8,$V21),{19:[1,4598],21:[1,4602],22:4596,32:4595,196:4597,210:4599,211:[1,4601],212:[1,4600]},o($Vk8,$V98),o($Vk8,$Va8),o($VT8,$Vr1,{89:4603}),o($Vk8,$Vs1,{95:4562,91:4604,97:$Vs9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA1),o($VT8,$VB1),o($VT8,$VC1),o($VT8,$VD1),{96:[1,4605]},o($VT8,$VJ1),{66:[1,4606]},o($Vz8,$Vz2,{95:4490,91:4607,97:$Vr9,98:$VL,99:$VM,100:$VN}),o($Vy8,$VA2),o($Vk8,$VB2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VD2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($Vk8,$VE2,{86:4608,91:4609,87:4610,95:4611,101:4613,103:4614,97:$Vt9,98:$VL,99:$VM,100:$VN,108:$VO,109:$VP,110:$VQ,111:$VR,112:$VS,113:$VT}),o($VC8,$VF2),{19:$VU2,21:$VV2,22:396,67:$VW2,77:$VX2,96:$VY2,104:$VZ2,105:$V_2,106:408,159:[1,4615],160:391,161:392,162:393,163:394,177:397,181:$V$2,192:402,193:403,194:404,197:407,200:$V03,201:$V13,202:$V23,203:$V33,204:$V43,205:$V53,206:$V63,207:$V73,208:$V83,209:$V93,210:401,211:$Va3},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4616,117:$VI2,144:$VJ2,185:$VK2}),o($VB8,$VT1),o($VB8,$Vl),o($VB8,$Vm),o($VB8,$Vq),o($VB8,$Vr),o($VB8,$Vs),o($VB8,$Vt),o($VB8,$Vu),o($Vy8,$Vb3),o($VC8,$Vc3),o($VC8,$Vd3),o($VC8,$Ve3),o($VC8,$Vf3),{107:[1,4617]},o($VC8,$Vk3),o($Vk8,$VY4),{19:[1,4620],21:[1,4623],22:4619,83:4618,210:4621,211:[1,4622]},o($Vk8,$VY4),{19:[1,4626],21:[1,4629],22:4625,83:4624,210:4627,211:[1,4628]},o($VI6,$VY4),{19:[1,4632],21:[1,4635],22:4631,83:4630,210:4633,211:[1,4634]},o($VG2,$VH2,{122:361,126:362,127:363,128:364,132:365,133:366,134:367,140:368,142:369,143:370,116:4636,117:$VI2,144:$VJ2,185:$VK2}),o($Vk8,$VT1),o($Vk8,$Vl),o($Vk8,$Vm),o($Vk8,$Vq),o($Vk8,$Vr),o($Vk8,$Vs),o($Vk8,$Vt),o($Vk8,$Vu),o($Vk8,$Vz2,{95:4562,91:4637,97:$Vs9,98:$VL,99:$VM,100:$VN}),o($VT8,$VA2),o($VT8,$Vb3),o($Vk8,$Vv8),o($Vy8,$VV3),o($VA8,$VW3),o($VA8,$VX3),o($VA8,$VY3),{96:[1,4638]},o($VA8,$VJ1),{96:[1,4640],102:4639,104:[1,4641],105:[1,4642],106:4643,202:$VK1,203:$VL1,204:$VM1,205:$VN1},{96:[1,4644]},o($VA8,$Vg4),{117:[1,4645]},{19:[1,4648],21:[1,4651],22:4647,83:4646,210:4649,211:[1,4650]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu),o($Vm7,$VB5),o($Vm7,$VE1),o($Vm7,$Vq),o($Vm7,$Vr),o($Vm7,$Vt),o($Vm7,$Vu),{117:[1,4652]},o($VT8,$VV3),o($VA8,$Vb3),o($VA8,$Vc3),o($VA8,$Vd3),o($VA8,$Ve3),o($VA8,$Vf3),{107:[1,4653]},o($VA8,$Vk3),o($VB8,$VY4),o($VC8,$VB5),o($VC8,$VE1),o($VC8,$Vq),o($VC8,$Vr),o($VC8,$Vt),o($VC8,$Vu),o($Vk8,$VY4),{19:[1,4656],21:[1,4659],22:4655,83:4654,210:4657,211:[1,4658]},o($VA8,$VB5),o($VA8,$VE1),o($VA8,$Vq),o($VA8,$Vr),o($VA8,$Vt),o($VA8,$Vu)],\ndefaultActions: {6:[2,11],30:[2,1],102:[2,115],103:[2,116],104:[2,117],111:[2,128],112:[2,129],210:[2,248],211:[2,249],212:[2,250],213:[2,251],333:[2,31],361:[2,138],362:[2,142],364:[2,144],569:[2,29],570:[2,33],607:[2,30],1117:[2,142],1119:[2,144]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: lexer.yylloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  /*\n    ShEx parser in the Jison parser generator format.\n  */\n\n  var UNBOUNDED = -1;\n\n  var ShExUtil = require(\"@shexjs/core\").Util;\n\n  // Common namespaces and entities\n  var RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      RDF_TYPE  = RDF + 'type',\n      RDF_FIRST = RDF + 'first',\n      RDF_REST  = RDF + 'rest',\n      RDF_NIL   = RDF + 'nil',\n      XSD = 'http://www.w3.org/2001/XMLSchema#',\n      XSD_INTEGER  = XSD + 'integer',\n      XSD_DECIMAL  = XSD + 'decimal',\n      XSD_FLOAT   = XSD + 'float',\n      XSD_DOUBLE   = XSD + 'double',\n      XSD_BOOLEAN  = XSD + 'boolean',\n      XSD_TRUE =  '\"true\"^^'  + XSD_BOOLEAN,\n      XSD_FALSE = '\"false\"^^' + XSD_BOOLEAN,\n      XSD_PATTERN        = XSD + 'pattern',\n      XSD_MININCLUSIVE   = XSD + 'minInclusive',\n      XSD_MINEXCLUSIVE   = XSD + 'minExclusive',\n      XSD_MAXINCLUSIVE   = XSD + 'maxInclusive',\n      XSD_MAXEXCLUSIVE   = XSD + 'maxExclusive',\n      XSD_LENGTH         = XSD + 'length',\n      XSD_MINLENGTH      = XSD + 'minLength',\n      XSD_MAXLENGTH      = XSD + 'maxLength',\n      XSD_TOTALDIGITS    = XSD + 'totalDigits',\n      XSD_FRACTIONDIGITS = XSD + 'fractionDigits';\n\n  var numericDatatypes = [\n      XSD + \"integer\",\n      XSD + \"decimal\",\n      XSD + \"float\",\n      XSD + \"double\",\n      XSD + \"string\",\n      XSD + \"boolean\",\n      XSD + \"dateTime\",\n      XSD + \"nonPositiveInteger\",\n      XSD + \"negativeInteger\",\n      XSD + \"long\",\n      XSD + \"int\",\n      XSD + \"short\",\n      XSD + \"byte\",\n      XSD + \"nonNegativeInteger\",\n      XSD + \"unsignedLong\",\n      XSD + \"unsignedInt\",\n      XSD + \"unsignedShort\",\n      XSD + \"unsignedByte\",\n      XSD + \"positiveInteger\"\n  ];\n\n  var absoluteIRI = /^[a-z][a-z0-9+.-]*:/i,\n    schemeAuthority = /^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i,\n    dotSegments = /(?:^|\\/)\\.\\.?(?:$|[\\/#?])/;\n\n  var numericFacets = [\"mininclusive\", \"minexclusive\",\n                       \"maxinclusive\", \"maxexclusive\"];\n\n  // Returns a lowercase version of the given string\n  function lowercase(string) {\n    return string.toLowerCase();\n  }\n\n  // Appends the item to the array and returns the array\n  function appendTo(array, item) {\n    return array.push(item), array;\n  }\n\n  // Appends the items to the array and returns the array\n  function appendAllTo(array, items) {\n    return array.push.apply(array, items), array;\n  }\n\n  // Extends a base object with properties of other objects\n  function extend(base) {\n    if (!base) base = {};\n    for (var i = 1, l = arguments.length, arg; i < l && (arg = arguments[i] || {}); i++)\n      for (var name in arg)\n        base[name] = arg[name];\n    return base;\n  }\n\n  // Creates an array that contains all items of the given arrays\n  function unionAll() {\n    var union = [];\n    for (var i = 0, l = arguments.length; i < l; i++)\n      union = union.concat.apply(union, arguments[i]);\n    return union;\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:58 with\n  //   s/this\\./Parser./g\n  // ### `_setBase` sets the base IRI to resolve relative IRIs.\n  Parser._setBase = function (baseIRI) {\n    if (!baseIRI)\n      baseIRI = null;\n\n    // baseIRI '#' check disabled to allow -x 'data:text/shex,...#'\n    // else if (baseIRI.indexOf('#') >= 0)\n    //   throw new Error('Invalid base IRI ' + baseIRI);\n\n    // Set base IRI and its components\n    if (Parser._base = baseIRI) {\n      Parser._basePath   = baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(schemeAuthority);\n      Parser._baseRoot   = baseIRI[0];\n      Parser._baseScheme = baseIRI[1];\n    }\n  }\n\n  // N3.js:lib/N3Parser.js<0.4.5>:576 with\n  //   s/this\\./Parser./g\n  //   s/token/iri/\n  // ### `_resolveIRI` resolves a relative IRI token against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative.\n  function _resolveIRI (iri) {\n    switch (iri[0]) {\n    // An empty relative IRI indicates the base IRI\n    case undefined: return Parser._base;\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return Parser._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return Parser._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? Parser._baseScheme : Parser._baseRoot) + _removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default: {\n      return _removeDotSegments(Parser._basePath + iri);\n    }\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986.\n  function _removeDotSegments (iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!dotSegments.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // Creates an expression with the given type and attributes\n  function expression(expr, attr) {\n    var expression = { expression: expr };\n    if (attr)\n      for (var a in attr)\n        expression[a] = attr[a];\n    return expression;\n  }\n\n  // Creates a path with the given type and items\n  function path(type, items) {\n    return { type: 'path', pathType: type, items: items };\n  }\n\n  // Creates a literal with the given value and type\n  function createLiteral(value, type) {\n    return { value: value, type: type };\n  }\n\n  // Creates a new blank node identifier\n  function blank() {\n    return '_:b' + blankId++;\n  };\n  var blankId = 0;\n  Parser._resetBlanks = function () { blankId = 0; }\n  Parser.reset = function () {\n    Parser._prefixes = Parser._imports = Parser._sourceMap = Parser.shapes = Parser.productions = Parser.start = Parser.startActs = null; // Reset state.\n    Parser._base = Parser._baseIRI = Parser._baseIRIPath = Parser._baseIRIRoot = null;\n  }\n  var _fileName; // for debugging\n  Parser._setFileName = function (fn) { _fileName = fn; }\n\n  // Regular expression and replacement strings to escape strings\n  var stringEscapeReplacements = { '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n                                   't': '\\t', 'b': '\\b', 'n': '\\n', 'r': '\\r', 'f': '\\f' },\n      semactEscapeReplacements = { '\\\\': '\\\\', '%': '%' },\n      pnameEscapeReplacements = {\n        '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n        'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n        '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n        '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n        '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n      };\n\n\n  // Translates string escape codes in the string into their textual equivalent\n  function unescapeString(string, trimLength) {\n    string = string.substring(trimLength, string.length - trimLength);\n    return { value: ShExUtil.unescapeText(string, stringEscapeReplacements) };\n  }\n\n  function unescapeLangString(string, trimLength) {\n    var at = string.lastIndexOf(\"@\");\n    var lang = string.substr(at);\n    string = string.substr(0, at);\n    var u = unescapeString(string, trimLength);\n    return extend(u, { language: lowercase(lang.substr(1)) });\n  }\n\n  // Translates regular expression escape codes in the string into their textual equivalent\n  function unescapeRegexp (regexp) {\n    var end = regexp.lastIndexOf(\"/\");\n    var s = regexp.substr(1, end-1);\n    var regexpEscapeReplacements = {\n      '.': \"\\\\.\", '\\\\': \"\\\\\\\\\", '?': \"\\\\?\", '*': \"\\\\*\", '+': \"\\\\+\",\n      '{': \"\\\\{\", '}': \"\\\\}\", '(': \"\\\\(\", ')': \"\\\\)\", '|': \"\\\\|\",\n      '^': \"\\\\^\", '$': \"\\\\$\", '[': \"\\\\[\", ']': \"\\\\]\", '/': \"\\\\/\",\n      't': '\\\\t', 'n': '\\\\n', 'r': '\\\\r', '-': \"\\\\-\", '/': '/'\n    };\n    s = ShExUtil.unescapeText(s, regexpEscapeReplacements)\n    var ret = {\n      pattern: s\n    };\n    if (regexp.length > end+1)\n      ret.flags = regexp.substr(end+1);\n    return ret;\n  }\n\n  // Convenience function to return object with p1 key, value p2\n  function keyValObject(key, val) {\n    var ret = {};\n    ret[key] = val;\n    return ret;\n  }\n\n  // Return object with p1 key, p2 string value\n  function unescapeSemanticAction(key, string) {\n    string = string.substring(1, string.length - 2);\n    return {\n      type: \"SemAct\",\n      name: key,\n      code: ShExUtil.unescapeText(string, semactEscapeReplacements)\n    };\n  }\n\n  function error (e, yy) {\n    const hash = {\n      text: yy.lexer.match,\n      // token: this.terminals_[symbol] || symbol,\n      line: yy.lexer.yylineno,\n      loc: yy.lexer.yylloc,\n      // expected: expected\n      pos: yy.lexer.showPosition()\n    }\n    e.hash = hash;\n    if (Parser.recoverable) {\n      Parser.recoverable(e)\n    } else {\n      throw e;\n      Parser.reset();\n    }\n  }\n\n  // Expand declared prefix or throw Error\n  function expandPrefix (prefix, yy) {\n    if (!(prefix in Parser._prefixes))\n      error(new Error('Parse error; unknown prefix \"' + prefix + ':\"'), yy);\n    return Parser._prefixes[prefix];\n  }\n\n  // Add a shape to the map\n  function addShape (label, shape, yy) {\n    if (shape === EmptyShape)\n      shape = { type: \"Shape\" };\n    if (Parser.productions && label in Parser.productions)\n      error(new Error(\"Structural error: \"+label+\" is a triple expression\"), yy);\n    if (!Parser.shapes)\n      Parser.shapes = new Map();\n    if (label in Parser.shapes) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.shapes[label] = shape;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else {\n      shape.id = label;\n      Parser.shapes[label] = shape;\n    }\n  }\n\n  // Add a production to the map\n  function addProduction (label, production, yy) {\n    if (Parser.shapes && label in Parser.shapes)\n      error(new Error(\"Structural error: \"+label+\" is a shape expression\"), yy);\n    if (!Parser.productions)\n      Parser.productions = new Map();\n    if (label in Parser.productions) {\n      if (Parser.options.duplicateShape === \"replace\")\n        Parser.productions[label] = production;\n      else if (Parser.options.duplicateShape !== \"ignore\")\n        error(new Error(\"Parse error: \"+label+\" already defined\"), yy);\n    } else\n      Parser.productions[label] = production;\n  }\n\n  function addSourceMap (obj, yy) {\n    if (!Parser._sourceMap)\n      Parser._sourceMap = new Map();\n    let list = Parser._sourceMap.get(obj)\n    if (!list)\n      Parser._sourceMap.set(obj, list = []);\n    list.push(yy.lexer.yylloc);\n    return obj;\n  }\n\n  // shapeJunction judiciously takes a shapeAtom and an optional list of con/disjuncts.\n  // No created Shape{And,Or,Not} will have a `nested` shapeExpr.\n  // Don't nonest arguments to shapeJunction.\n  // shapeAtom emits `nested` so nonest every argument that can be a shapeAtom, i.e.\n  //   shapeAtom, inlineShapeAtom, shapeAtomNoRef\n  //   {,inline}shape{And,Or,Not}\n  //   this does NOT include shapeOrRef or nodeConstraint.\n  function shapeJunction (type, shapeAtom, juncts) {\n    if (juncts.length === 0) {\n      return nonest(shapeAtom);\n    } else if (shapeAtom.type === type && !shapeAtom.nested) {\n      nonest(shapeAtom).shapeExprs = nonest(shapeAtom).shapeExprs.concat(juncts);\n      return shapeAtom;\n    } else {\n      return { type: type, shapeExprs: [nonest(shapeAtom)].concat(juncts) };\n    }\n  }\n\n  // strip out .nested attribute\n  function nonest (shapeAtom) {\n    delete shapeAtom.nested;\n    return shapeAtom;\n  }\n\n  var EmptyObject = {  };\n  var EmptyShape = { type: \"Shape\" };\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/**/\nbreak;\ncase 1:return 75;\nbreak;\ncase 2:return 76;\nbreak;\ncase 3: yy_.yytext = yy_.yytext.substr(1); return 181; \nbreak;\ncase 4:return 77;\nbreak;\ncase 5:return 211;\nbreak;\ncase 6:return 155;\nbreak;\ncase 7:return 105;\nbreak;\ncase 8:return 104;\nbreak;\ncase 9:return 96;\nbreak;\ncase 10:return 'ANON';\nbreak;\ncase 11:return 19;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 195;\nbreak;\ncase 14:return 97;\nbreak;\ncase 15:return 212;\nbreak;\ncase 16:return 191;\nbreak;\ncase 17:return 207;\nbreak;\ncase 18:return 209;\nbreak;\ncase 19:return 206;\nbreak;\ncase 20:return 208;\nbreak;\ncase 21:return 203;\nbreak;\ncase 22:return 205;\nbreak;\ncase 23:return 202;\nbreak;\ncase 24:return 204;\nbreak;\ncase 25:return 18;\nbreak;\ncase 26:return 20;\nbreak;\ncase 27:return 23;\nbreak;\ncase 28:return 26;\nbreak;\ncase 29:return 35;\nbreak;\ncase 30:return 'IT_VIRTUAL';\nbreak;\ncase 31:return 121;\nbreak;\ncase 32:return 123;\nbreak;\ncase 33:return 81;\nbreak;\ncase 34:return 93;\nbreak;\ncase 35:return 92;\nbreak;\ncase 36:return 94;\nbreak;\ncase 37:return 49;\nbreak;\ncase 38:return 47;\nbreak;\ncase 39:return 39;\nbreak;\ncase 40:return 108;\nbreak;\ncase 41:return 109;\nbreak;\ncase 42:return 110;\nbreak;\ncase 43:return 111;\nbreak;\ncase 44:return 98;\nbreak;\ncase 45:return 99;\nbreak;\ncase 46:return 100;\nbreak;\ncase 47:return 112;\nbreak;\ncase 48:return 113;\nbreak;\ncase 49:return 27;\nbreak;\ncase 50:return 186;\nbreak;\ncase 51:return 115;\nbreak;\ncase 52:return 117;\nbreak;\ncase 53:return 185;\nbreak;\ncase 54:return '||';\nbreak;\ncase 55:return 131;\nbreak;\ncase 56:return 136;\nbreak;\ncase 57:return 65;\nbreak;\ncase 58:return 66;\nbreak;\ncase 59:return 157;\nbreak;\ncase 60:return 159;\nbreak;\ncase 61:return 144;\nbreak;\ncase 62:return '!';\nbreak;\ncase 63:return 107;\nbreak;\ncase 64:return 156;\nbreak;\ncase 65:return 67;\nbreak;\ncase 66:return 174;\nbreak;\ncase 67:return 137;\nbreak;\ncase 68:return 152;\nbreak;\ncase 69:return 153;\nbreak;\ncase 70:return 154;\nbreak;\ncase 71:return 175;\nbreak;\ncase 72:return 189;\nbreak;\ncase 73:return 200;\nbreak;\ncase 74:return 201;\nbreak;\ncase 75:return 7;\nbreak;\ncase 76:return 'unexpected word \"'+yy_.yytext+'\"';\nbreak;\ncase 77:return 'invalid character '+yy_.yytext;\nbreak;\n}\n},\nrules: [/^(?:\\s+|(#[^\\u000a\\u000d]*|\\/\\*([^*]|\\*([^\\/]|\\\\\\/))*\\*\\/))/,/^(?:(@(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*))))/,/^(?:(@((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)))/,/^(?:(@([A-Za-z])+((-([0-9A-Za-z])+))*))/,/^(?:@)/,/^(?:(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:)(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|:|[0-9]|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))(((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.|:|((%([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))|(\\\\(_|~|\\.|-|!|\\$|&|'|\\(|\\)|\\*|\\+|,|;|=|\\/|\\?|#|@|%))))*)))/,/^(?:(\\{((([+-])?([0-9])+))((,(((([+-])?([0-9])+))|\\*)?))?\\}))/,/^(?:(([+-])?((([0-9])+\\.([0-9])*(([Ee]([+-])?([0-9])+)))|((\\.)?([0-9])+(([Ee]([+-])?([0-9])+))))))/,/^(?:(([+-])?([0-9])*\\.([0-9])+))/,/^(?:(([+-])?([0-9])+))/,/^(?:{ANON})/,/^(?:(<([^\\u0000-\\u0020<>\\\"{}|^`\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*>))/,/^(?:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?)?:))/,/^(?:a\\b)/,/^(?:(\\/([^\\u002f\\u005C\\u000A\\u000D]|\\\\[nrt\\\\|.?*+(){}$\\u002D\\u005B\\u005D\\u005E\\/]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))+\\/[smix]*))/,/^(?:(_:((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|[0-9])((((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040])|\\.)*((([A-Z]|[a-z]|[\\u00c0-\\u00d6]|[\\u00d8-\\u00f6]|[\\u00f8-\\u02ff]|[\\u0370-\\u037d]|[\\u037f-\\u1fff]|[\\u200c-\\u200d]|[\\u2070-\\u218f]|[\\u2c00-\\u2fef]|[\\u3001-\\ud7ff]|[\\uf900-\\ufdcf]|[\\ufdf0-\\ufffd]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])|_|_\\b)|-|[0-9]|[\\u00b7]|[\\u0300-\\u036f]|[\\u203f-\\u2040]))?))/,/^(?:(\\{([^%\\\\]|\\\\[%\\\\]|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*%\\}))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"(@([A-Za-z])+((-([0-9A-Za-z])+))*)))/,/^(?:('''(('|'')?([^\\'\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*'''))/,/^(?:(\"\"\"((\"|\"\")?([^\\\"\\\\]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))))*\"\"\"))/,/^(?:('([^\\u0027\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*'))/,/^(?:(\"([^\\u0022\\u005c\\u000a\\u000d]|(\\\\[\\\"\\'\\\\bfnrt])|(\\\\u([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])|\\\\U([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f])))*\"))/,/^(?:([Bb][Aa][Ss][Ee]))/,/^(?:([Pp][Rr][Ee][Ff][Ii][Xx]))/,/^(?:([iI][mM][pP][oO][rR][tT]))/,/^(?:([sS][tT][aA][rR][tT]))/,/^(?:([eE][xX][tT][eE][rR][nN][aA][lL]))/,/^(?:([Vv][Ii][Rr][Tt][Uu][Aa][Ll]))/,/^(?:([Cc][Ll][Oo][Ss][Ee][Dd]))/,/^(?:([Ee][Xx][Tt][Rr][Aa]))/,/^(?:([Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Bb][Nn][Oo][Dd][Ee]))/,/^(?:([Ii][Rr][Ii]))/,/^(?:([Nn][Oo][Nn][Ll][Ii][Tt][Ee][Rr][Aa][Ll]))/,/^(?:([Aa][Nn][Dd]))/,/^(?:([Oo][Rr]))/,/^(?:([No][Oo][Tt]))/,/^(?:([Mm][Ii][Nn][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Ii][Nn][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ii][Nn][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Mm][Aa][Xx][Ee][Xx][Cc][Ll][Uu][Ss][Ii][Vv][Ee]))/,/^(?:([Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Ii][Nn][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Mm][Aa][Xx][Ll][Ee][Nn][Gg][Tt][Hh]))/,/^(?:([Tt][Oo][Tt][Aa][Ll][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:([Ff][Rr][Aa][Cc][Tt][Ii][Oo][Nn][Dd][Ii][Gg][Ii][Tt][Ss]))/,/^(?:=)/,/^(?:\\/\\/)/,/^(?:\\{)/,/^(?:\\})/,/^(?:&)/,/^(?:\\|\\|)/,/^(?:\\|)/,/^(?:,)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\$)/,/^(?:!)/,/^(?:\\^\\^)/,/^(?:\\^)/,/^(?:\\.)/,/^(?:~)/,/^(?:;)/,/^(?:\\*)/,/^(?:\\+)/,/^(?:\\?)/,/^(?:-)/,/^(?:%)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/,/^(?:[a-zA-Z0-9_-]+)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = ShExJison;\nexports.Parser = ShExJison.Parser;\nexports.parse = function () { return ShExJison.parse.apply(ShExJison, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"
    },
    {
      "id": 49,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/old.js",
      "index": 25,
      "index2": 21,
      "size": 8542,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "issuerId": 25,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        },
        {
          "id": 25,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          }
        }
      ],
      "profile": {
        "factory": 6,
        "building": 10,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 25,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/fs.realpath/index.js",
          "type": "cjs require",
          "userRequest": "./old.js",
          "loc": "14:10-29"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n"
    },
    {
      "id": 50,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "index": 27,
      "index2": 25,
      "size": 4792,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "issuerId": 14,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        },
        {
          "id": 14,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          }
        }
      ],
      "profile": {
        "factory": 34,
        "building": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "type": "cjs require",
          "userRequest": "brace-expansion",
          "loc": "10:13-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n"
    },
    {
      "id": 51,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/concat-map/index.js",
      "index": 28,
      "index2": 23,
      "size": 345,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerId": 50,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        },
        {
          "id": 14,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          }
        },
        {
          "id": 50,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "profile": {
            "factory": 34,
            "building": 4
          }
        }
      ],
      "profile": {
        "factory": 4,
        "building": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "type": "cjs require",
          "userRequest": "concat-map",
          "loc": "1:16-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n"
    },
    {
      "id": 52,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/balanced-match/index.js",
      "index": 29,
      "index2": 24,
      "size": 1174,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerId": 50,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        },
        {
          "id": 14,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/minimatch/minimatch.js",
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          }
        },
        {
          "id": 50,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "profile": {
            "factory": 34,
            "building": 4
          }
        }
      ],
      "profile": {
        "factory": 4,
        "building": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 50,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/brace-expansion/index.js",
          "type": "cjs require",
          "userRequest": "balanced-match",
          "loc": "2:15-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n"
    },
    {
      "id": 53,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inherits/inherits_browser.js",
      "index": 30,
      "index2": 27,
      "size": 753,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "inherits",
          "loc": "47:15-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n"
    },
    {
      "id": 54,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/object-assign/index.js",
      "name": "./node_modules/object-assign/index.js",
      "index": 34,
      "index2": 30,
      "size": 2108,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
      "issuerId": 26,
      "issuerName": "./node_modules/assert/assert.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        },
        {
          "id": 26,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "name": "./node_modules/assert/assert.js",
          "profile": {
            "factory": 118,
            "building": 7,
            "dependencies": 71
          }
        }
      ],
      "profile": {
        "factory": 78,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 26,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/assert/assert.js",
          "module": "./node_modules/assert/assert.js",
          "moduleName": "./node_modules/assert/assert.js",
          "type": "cjs require",
          "userRequest": "object-assign",
          "loc": "3:19-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"
    },
    {
      "id": 55,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/sync.js",
      "index": 36,
      "index2": 34,
      "size": 12002,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "./sync.js",
          "loc": "52:15-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"
    },
    {
      "id": 56,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/inflight/inflight.js",
      "index": 38,
      "index2": 37,
      "size": 1365,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerId": 24,
      "issuerName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 24,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "name": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "profile": {
            "factory": 319,
            "building": 30,
            "dependencies": 4
          }
        }
      ],
      "profile": {
        "factory": 118,
        "building": 7,
        "dependencies": 71
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 24,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "module": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "moduleName": "/tmp/checkouts/shexSpec/shex.js/node_modules/glob/glob.js",
          "type": "cjs require",
          "userRequest": "inflight",
          "loc": "58:15-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n"
    },
    {
      "id": 57,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api sync",
      "name": "../shex-api sync",
      "index": 41,
      "index2": 39,
      "size": 160,
      "built": true,
      "optional": true,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
      "issuerId": 47,
      "issuerName": "../shex-api/shex-api.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": 47,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "name": "../shex-api/shex-api.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        }
      ],
      "profile": {
        "factory": 319,
        "building": 30,
        "dependencies": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 47,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-api/shex-api.js",
          "module": "../shex-api/shex-api.js",
          "moduleName": "../shex-api/shex-api.js",
          "type": "cjs require context",
          "userRequest": ".",
          "loc": "312:11-24"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2
    },
    {
      "id": 58,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/base64-js/index.js",
      "name": "./node_modules/base64-js/index.js",
      "index": 45,
      "index2": 41,
      "size": 3944,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
      "issuerId": 9,
      "issuerName": "./node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 9,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "name": "./node_modules/buffer/index.js",
          "profile": {
            "factory": 336,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 82,
        "building": 31
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "module": "./node_modules/buffer/index.js",
          "moduleName": "./node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "base64-js",
          "loc": "11:13-33"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"
    },
    {
      "id": 59,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/ieee754/index.js",
      "name": "./node_modules/ieee754/index.js",
      "index": 46,
      "index2": 42,
      "size": 2064,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
      "issuerId": 9,
      "issuerName": "./node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 9,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "name": "./node_modules/buffer/index.js",
          "profile": {
            "factory": 336,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 82,
        "building": 31
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "module": "./node_modules/buffer/index.js",
          "moduleName": "./node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "ieee754",
          "loc": "12:14-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"
    },
    {
      "id": 60,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/isarray/index.js",
      "name": "./node_modules/isarray/index.js",
      "index": 47,
      "index2": 43,
      "size": 132,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
      "issuerId": 9,
      "issuerName": "./node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": 12,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Lexer.js",
          "name": "./node_modules/n3/src/N3Lexer.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 9,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "name": "./node_modules/buffer/index.js",
          "profile": {
            "factory": 336,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 82,
        "building": 31
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/buffer/index.js",
          "module": "./node_modules/buffer/index.js",
          "moduleName": "./node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "isarray",
          "loc": "13:14-32"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"
    },
    {
      "id": 61,
      "identifier": "ignored /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib util",
      "name": "util (ignored)",
      "index": 58,
      "index2": 53,
      "size": 15,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "60:16-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5
    },
    {
      "id": 62,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
      "index": 59,
      "index2": 55,
      "size": 6335,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/buffer_list",
          "loc": "72:17-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();"
    },
    {
      "id": 63,
      "identifier": "ignored /tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams util",
      "name": "util (ignored)",
      "index": 60,
      "index2": 54,
      "size": 15,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
      "issuerId": 62,
      "issuerName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        },
        {
          "id": 62,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "name": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          }
        }
      ],
      "profile": {
        "factory": 0,
        "building": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 62,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "module": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "moduleName": "./node_modules/readable-stream/lib/internal/streams/buffer_list.js",
          "type": "cjs require",
          "userRequest": "util",
          "loc": "18:16-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6
    },
    {
      "id": 64,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/util-deprecate/browser.js",
      "name": "./node_modules/util-deprecate/browser.js",
      "index": 67,
      "index2": 60,
      "size": 1614,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
      "issuerId": 34,
      "issuerName": "./node_modules/readable-stream/lib/_stream_writable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 34,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "name": "./node_modules/readable-stream/lib/_stream_writable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 51,
        "building": 3,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 34,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_writable.js",
          "module": "./node_modules/readable-stream/lib/_stream_writable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_writable.js",
          "type": "cjs require",
          "userRequest": "util-deprecate",
          "loc": "60:13-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n"
    },
    {
      "id": 65,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/safe-buffer/index.js",
      "name": "./node_modules/safe-buffer/index.js",
      "index": 69,
      "index2": 63,
      "size": 1670,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
      "issuerId": 35,
      "issuerName": "./node_modules/string_decoder/lib/string_decoder.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        },
        {
          "id": 35,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
          "name": "./node_modules/string_decoder/lib/string_decoder.js",
          "profile": {
            "factory": 41,
            "building": 15,
            "dependencies": 1
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 1,
        "dependencies": 0
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 35,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/string_decoder/lib/string_decoder.js",
          "module": "./node_modules/string_decoder/lib/string_decoder.js",
          "moduleName": "./node_modules/string_decoder/lib/string_decoder.js",
          "type": "cjs require",
          "userRequest": "safe-buffer",
          "loc": "26:13-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"
    },
    {
      "id": 66,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/async_iterator.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/async_iterator.js",
      "index": 70,
      "index2": 66,
      "size": 5957,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/async_iterator",
          "loc": "1009:42-86"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;"
    },
    {
      "id": 67,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/from-browser.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/from-browser.js",
      "index": 72,
      "index2": 67,
      "size": 101,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
      "issuerId": 30,
      "issuerName": "./node_modules/readable-stream/lib/_stream_readable.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        },
        {
          "id": 30,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "name": "./node_modules/readable-stream/lib/_stream_readable.js",
          "profile": {
            "factory": 15,
            "building": 29,
            "dependencies": 35
          }
        }
      ],
      "profile": {
        "factory": 41,
        "building": 15,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 30,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_readable.js",
          "module": "./node_modules/readable-stream/lib/_stream_readable.js",
          "moduleName": "./node_modules/readable-stream/lib/_stream_readable.js",
          "type": "cjs require",
          "userRequest": "./internal/streams/from",
          "loc": "1111:13-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n"
    },
    {
      "id": 68,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/_stream_passthrough.js",
      "name": "./node_modules/readable-stream/lib/_stream_passthrough.js",
      "index": 74,
      "index2": 70,
      "size": 1630,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/_stream_passthrough.js",
          "loc": "7:22-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};"
    },
    {
      "id": 69,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/lib/internal/streams/pipeline.js",
      "name": "./node_modules/readable-stream/lib/internal/streams/pipeline.js",
      "index": 75,
      "index2": 71,
      "size": 2428,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
      "issuerId": 6,
      "issuerName": "./node_modules/readable-stream/readable-browser.js",
      "issuerPath": [
        {
          "id": 38,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "name": "./shex-webapp.js",
          "profile": {
            "factory": 16,
            "building": 11
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          }
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          }
        },
        {
          "id": 6,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "name": "./node_modules/readable-stream/readable-browser.js",
          "profile": {
            "factory": 313,
            "building": 33
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 29,
        "dependencies": 35
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 6,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/readable-stream/readable-browser.js",
          "module": "./node_modules/readable-stream/readable-browser.js",
          "moduleName": "./node_modules/readable-stream/readable-browser.js",
          "type": "cjs require",
          "userRequest": "./lib/internal/streams/pipeline.js",
          "loc": "9:19-64"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;"
    },
    {
      "id": 70,
      "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js 2b7087cf63f4705fadaa93d5ff75342e",
      "name": "./node_modules/n3/src/index.js + 7 modules",
      "index": 42,
      "index2": 76,
      "size": 97617,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0,
        1
      ],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "issuerPath": null,
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 38,
          "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "module": "./shex-webapp.js",
          "moduleName": "./shex-webapp.js",
          "type": "cjs require",
          "userRequest": "n3",
          "loc": "8:8-21"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "Lexer",
        "Parser",
        "Writer",
        "Store",
        "StreamParser",
        "StreamWriter",
        "Util",
        "DataFactory",
        "Term",
        "NamedNode",
        "Literal",
        "BlankNode",
        "Variable",
        "DefaultGraph",
        "Quad",
        "Triple",
        "termFromId",
        "termToId"
      ],
      "optimizationBailout": [
        "ModuleConcatenation bailout: Cannot concat with ./node_modules/n3/src/IRIs.js because of ./node_modules/n3/src/N3Lexer.js",
        "ModuleConcatenation bailout: Cannot concat with ./node_modules/n3/src/N3Lexer.js (<- Module uses injected variables (Buffer))",
        "ModuleConcatenation bailout: Cannot concat with ./node_modules/readable-stream/readable-browser.js (<- Module is not an ECMAScript module)"
      ],
      "depth": 1,
      "modules": [
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "name": "./node_modules/n3/src/index.js",
          "index": 42,
          "index2": 76,
          "size": 659,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
          "issuerId": 38,
          "issuerName": "./shex-webapp.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            }
          ],
          "profile": {
            "factory": 14,
            "building": 31,
            "dependencies": 245
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 38,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "module": "./shex-webapp.js",
              "moduleName": "./shex-webapp.js",
              "type": "cjs require",
              "userRequest": "n3",
              "loc": "8:8-21"
            }
          ],
          "usedExports": true,
          "providedExports": [
            "Lexer",
            "Parser",
            "Writer",
            "Store",
            "StreamParser",
            "StreamWriter",
            "Util",
            "DataFactory",
            "Term",
            "NamedNode",
            "Literal",
            "BlankNode",
            "Variable",
            "DefaultGraph",
            "Quad",
            "Triple",
            "termFromId",
            "termToId"
          ],
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./shex-webapp.js (referenced with cjs require)"
          ],
          "depth": 1,
          "source": "import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
          "name": "./node_modules/n3/src/N3Util.js",
          "index": 52,
          "index2": 48,
          "size": 2154,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "module": "./node_modules/n3/src/N3Writer.js",
              "moduleName": "./node_modules/n3/src/N3Writer.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Util",
              "loc": "4:0-42"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
              "module": "./node_modules/n3/src/N3DataFactory.js",
              "moduleName": "./node_modules/n3/src/N3DataFactory.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Util",
              "loc": "5:0-42"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Util",
              "loc": "7:0-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3Util",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "module": "./node_modules/n3/src/N3Writer.js",
              "moduleName": "./node_modules/n3/src/N3Writer.js",
              "type": "harmony import specifier",
              "userRequest": "./N3Util",
              "loc": "194:6-20"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
              "module": "./node_modules/n3/src/N3DataFactory.js",
              "moduleName": "./node_modules/n3/src/N3DataFactory.js",
              "type": "harmony import specifier",
              "userRequest": "./N3Util",
              "loc": "250:9-23"
            }
          ],
          "usedExports": true,
          "providedExports": [
            "isNamedNode",
            "isBlankNode",
            "isLiteral",
            "isVariable",
            "isDefaultGraph",
            "inDefaultGraph",
            "prefix",
            "prefixes"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  var prefixes = Object.create(null);\n  for (var prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      var cache = Object.create(null);\n      prefixes[prefix] = function (local) {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error('Unknown prefix: ' + prefix);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3DataFactory.js",
          "name": "./node_modules/n3/src/N3DataFactory.js",
          "index": 51,
          "index2": 49,
          "size": 10143,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3DataFactory",
              "loc": "2:0-81"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
              "module": "./node_modules/n3/src/N3Parser.js",
              "moduleName": "./node_modules/n3/src/N3Parser.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3DataFactory",
              "loc": "3:0-44"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
              "module": "./node_modules/n3/src/N3Util.js",
              "moduleName": "./node_modules/n3/src/N3Util.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3DataFactory",
              "loc": "3:0-44"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "module": "./node_modules/n3/src/N3Writer.js",
              "moduleName": "./node_modules/n3/src/N3Writer.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3DataFactory",
              "loc": "3:0-65"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "module": "./node_modules/n3/src/N3Writer.js",
              "moduleName": "./node_modules/n3/src/N3Writer.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "6:21-34"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3DataFactory",
              "loc": "9:0-23:25"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
              "module": "./node_modules/n3/src/N3Writer.js",
              "moduleName": "./node_modules/n3/src/N3Writer.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "19:29-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3DataFactory",
              "loc": "25:0-47:2"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "26:39-52"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Util.js",
              "module": "./node_modules/n3/src/N3Util.js",
              "moduleName": "./node_modules/n3/src/N3Util.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "47:23-36"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "112:29-39"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "113:29-39"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "114:29-39"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "116:62-72"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "205:17-27"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "221:14-22"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "222:16-24"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "223:13-21"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "224:12-20"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "275:14-22"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "276:16-24"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "277:13-21"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "278:12-20"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "330:25-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "331:29-37"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "332:23-31"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "333:21-29"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "394:25-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "395:29-37"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "396:23-31"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "397:21-29"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "459:25-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "460:29-37"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "461:23-31"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "462:21-29"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "527:29-37"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "528:23-31"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "529:21-29"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "573:25-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "574:23-31"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "575:21-29"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "619:25-33"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "620:29-37"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
              "module": "./node_modules/n3/src/N3Store.js",
              "moduleName": "./node_modules/n3/src/N3Store.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "621:21-29"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
              "module": "./node_modules/n3/src/N3Parser.js",
              "moduleName": "./node_modules/n3/src/N3Parser.js",
              "type": "harmony import specifier",
              "userRequest": "./N3DataFactory",
              "loc": "1041:36-49"
            }
          ],
          "usedExports": [
            "default",
            "Term",
            "NamedNode",
            "Literal",
            "BlankNode",
            "Variable",
            "DefaultGraph",
            "Quad",
            "Triple",
            "termFromId",
            "termToId"
          ],
          "providedExports": [
            "default",
            "Term",
            "NamedNode",
            "Literal",
            "BlankNode",
            "Variable",
            "DefaultGraph",
            "termFromId",
            "termToId",
            "Quad",
            "Triple",
            "escapeQuotes",
            "unescapeQuotes"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    var id = this.id, atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    var id = this.id, dtPos = id.lastIndexOf('\"') + 1, ch;\n    // If \"^\" it follows, return the remaining substring\n    return dtPos < id.length && (ch = id[dtPos]) === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (ch !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super('_:' + name);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super('?' + name);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    var endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return '_:' + term.value;\n  case 'Variable':     return '?' + term.value;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return '\"' + term.value + '\"' +\n    (term.language ? '@' + term.language :\n      (term.datatype && term.datatype.value !== xsd.string ? '^^' + term.datatype.value : ''));\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error('Unexpected termType: ' + term.termType);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this.subject   = subject;\n    this.predicate = predicate;\n    this.object    = object;\n    this.graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this.subject.toJSON(),\n      predicate: this.predicate.toJSON(),\n      object:    this.object.toJSON(),\n      graph:     this.graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this.subject.equals(other.subject)     &&\n                      this.predicate.equals(other.predicate) &&\n                      this.object.equals(other.object)       &&\n                      this.graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal('\"' + value + '\"@' + languageOrDataType.toLowerCase());\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal('\"' + value + '\"') :\n    new Literal('\"' + value + '\"^^' + datatype);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Parser.js",
          "name": "./node_modules/n3/src/N3Parser.js",
          "index": 50,
          "index2": 50,
          "size": 37785,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Parser",
              "loc": "2:0-32"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
              "module": "./node_modules/n3/src/N3StreamParser.js",
              "moduleName": "./node_modules/n3/src/N3StreamParser.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Parser",
              "loc": "2:0-34"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
              "module": "./node_modules/n3/src/N3StreamParser.js",
              "moduleName": "./node_modules/n3/src/N3StreamParser.js",
              "type": "harmony import specifier",
              "userRequest": "./N3Parser",
              "loc": "12:34-42"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3Parser",
              "loc": "25:0-47:2"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    var format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = function (iri) { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      var fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    var n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? this._graph.id.substr(2) + '.' : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    var context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    var value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      var iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      var prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error('Undefined prefix \"' + token.prefix + ':\"', token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error('Expected entity but got ' + token.type, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    var type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error('Unexpected ' + type, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error('Expected graph but got ' + token.type, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    var empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the subject, continue reading the predicate\n    if (this._object === null)\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n    // If the blank node was the object, restore previous context and read punctuation\n    else\n      return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    var item = null,                      // The item of the list\n        list = null,                      // The list itself\n        previousList = this._subject,     // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1], // The parent containing the current list\n        next = this._readListItem;        // The next function to execute\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      var datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    var next, subject = this._subject, graph = this._graph,\n        inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error('Expected punctuation to follow \"' + this._object.id + '\"', token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      var predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    var next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error('Expected punctuation to follow \"' + this._object.id + '\"', token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error('Expected IRI to follow prefix \"' + this._prefix + ':\"', token);\n    var prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    var iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    var entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error('Unexpected ' + token.type, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      var stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        var item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    var subject, predicate, object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    var subject = this._blankNode(), predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error('Expected >> to follow \"' + this._object.id + '\"', token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    var contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    var err = new Error(message + ' on line ' + token.line + '.');\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    var result = '', length = iri.length, i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return result + '/' + iri.substr(i + 1);\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    var self = this;\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : 'b' + blankNodePrefix++ + '_';\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      var quads = [], error;\n      this._callback = function (e, t) { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(function (token) {\n        return self._readCallback = self._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, function (error, token) {\n      if (error !== null)\n        self._callback(error), self._callback = noop;\n      else if (self._readCallback)\n        self._readCallback = self._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  var namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Writer.js",
          "name": "./node_modules/n3/src/N3Writer.js",
          "index": 53,
          "index2": 51,
          "size": 12785,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Writer",
              "loc": "3:0-32"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
              "module": "./node_modules/n3/src/N3StreamWriter.js",
              "moduleName": "./node_modules/n3/src/N3StreamWriter.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Writer",
              "loc": "3:0-34"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
              "module": "./node_modules/n3/src/N3StreamWriter.js",
              "moduleName": "./node_modules/n3/src/N3StreamWriter.js",
              "type": "harmony import specifier",
              "userRequest": "./N3Writer",
              "loc": "13:36-44"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3Writer",
              "loc": "25:0-47:2"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nvar escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      var output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end:   function (done) { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : this._encodeIriOrBlank(graph) + ' {\\n'));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(', ' + this._encodeObject(object), done);\n        // Same subject, different predicate\n        else\n          this._write(';\\n    ' +\n                      this._encodePredicate(this._predicate = predicate) + ' ' +\n                      this._encodeObject(object), done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write((this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject) + ' ' +\n                    this._encodePredicate(this._predicate = predicate) + ' ' +\n                    this._encodeObject(object), done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  this._encodeSubject(subject)   + ' ' +\n            this._encodeIriOrBlank(predicate) + ' ' +\n            this._encodeObject(object) +\n            (graph && graph.value ? ' ' + this._encodeIriOrBlank(graph) + ' .\\n' : ' .\\n');\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(function (t) {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }, this).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : '_:' + entity.value;\n    }\n    // Escape special characters\n    var iri = entity.value;\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    var prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? '<' + iri + '>' :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    var value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n    // Write the literal, possibly with type or language\n    if (literal.language)\n      return '\"' + value + '\"@' + literal.language;\n    else if (literal.datatype.value !== xsd.string)\n      return '\"' + value + '\"^^' + this._encodeIriOrBlank(literal.datatype);\n    else\n      return '\"' + value + '\"';\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    var prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    var prefixIRIs = this._prefixIRIs, hasPrefixes = false;\n    for (var prefix in prefixes) {\n      var iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      prefixIRIs[iri] = (prefix += ':');\n      this._write('@prefix ' + prefix + ' <' + iri + '>.\\n');\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      var IRIlist = '', prefixList = '';\n      for (var prefixIRI in prefixIRIs) {\n        IRIlist += IRIlist ? '|' + prefixIRI : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp('^(?:' + prefixList + ')[^\\/]*$|' +\n                                     '^(' + IRIlist + ')([a-zA-Z][\\\\-_a-zA-Z0-9]*)$');\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    var children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm('[ ' + this._encodePredicate(child.predicate) + ' ' +\n                                  this._encodeObject(child.object) + ' ]');\n    // Generate a multi-triple or nested blank node\n    default:\n      var contents = '[';\n      // Write all triples in order\n      for (var i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += ', ' + this._encodeObject(child.object);\n        // Otherwise, write the predicate and the object\n        else {\n          contents += (i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate) + ' ' +\n                      this._encodeObject(child.object);\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(contents + '\\n]');\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    var length = elements && elements.length || 0, contents = new Array(length);\n    for (var i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm('(' + contents.join(' ') + ')');\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    var singleDone = done && function (error, result) { singleDone = null, done(error, result); };\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  var result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3Store.js",
          "name": "./node_modules/n3/src/N3Store.js",
          "index": 54,
          "index2": 73,
          "size": 31411,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3Store",
              "loc": "4:0-30"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3Store",
              "loc": "25:0-47:2"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    var size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    var graphs = this._graphs, subjects, subject;\n    for (var graphKey in graphs)\n      for (var subjectKey in (subjects = graphs[graphKey].subjects))\n        for (var predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    var index1 = index0[key0] || (index0[key0] = {});\n    var index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    var existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    var index1 = index0[key0], index2 = index1[key1], key;\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (key in index2) return;\n    delete index1[key1];\n    for (key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    var tmp, index1, index2, varCount = !key0 + !key1 + !key2,\n        // depending on the number of variables, keys or reverse index are faster\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      var entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          var entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            var values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (var l = 0; l < values.length; l++) {\n              var parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              var quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (var key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    var index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    var key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    var index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    var count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (var value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (var value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    var graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    var uniqueIds = Object.create(null), entities = this._entities;\n    return function (id) {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(entities[id]));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    var graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    var ids = this._ids;\n    var entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    var changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    var self = this;\n    stream.on('data', function (quad) { self.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    var graphItem, ids = this._ids, graphs = this._graphs, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (var i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    var self = this;\n    stream.on('data', function (quad) { self.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    return this.remove(this.match(subject, predicate, object, graph));\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var quads = [], graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a stream of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  match(subject, predicate, object, graph) {\n    var stream = new Readable({ objectMode: true });\n\n    // Initialize stream once it is being read\n    stream._read = () => {\n      for (var quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return stream;\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var count = 0, graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(function (quad) {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    var some = false;\n    var every = !this.some(function (quad) {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var graphs = this._getGraphs(graph), content,\n        ids = this._ids, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (var graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    var results = [];\n    this.forSubjects(function (s) { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    var results = [];\n    this.forPredicates(function (p) { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    var results = [];\n    this.forObjects(function (o) { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    var ids = this._ids, graphs = this._getGraphs(graph), content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    var results = [];\n    this.forGraphs(function (g) { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (var graph in this._graphs) {\n      this.some(function (quad) {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    var name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = '_:' + suggestedName, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = '_:b' + this._blankNodeIndex++; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    var lists = {}; // has scalar keys so could be a simple Object\n    var onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    var tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    var toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      var items = [];             // the members found as objects of rdf:first quads\n      var malformed = false;      // signals whether the current list is malformed\n      var head;                   // the head of the list (_:b1 in above example)\n      var headPos;                // set to subject or object when head is set\n      var graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      var current = tailQuad.subject;\n      while (current && !malformed) {\n        var objectQuads = this.getQuads(null, null, current, null);\n        var subjectQuads = this.getQuads(current, null, null, null);\n        var i, quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamParser.js",
          "name": "./node_modules/n3/src/N3StreamParser.js",
          "index": 76,
          "index2": 74,
          "size": 1447,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3StreamParser",
              "loc": "5:0-44"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3StreamParser",
              "loc": "25:0-47:2"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    var self = this, parser = new N3Parser(options), onData, onEnd;\n    parser.parse({\n      on: function (event, callback) {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      function (error, quad) { error && self.emit('error', error) || quad && self.push(quad); },\n      // Emit prefixes through the `prefix` event\n      function (prefix, uri) { self.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = function (chunk, encoding, done) { onData(chunk); done(); };\n    this._flush = function (done) { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    var self = this;\n    stream.on('data',  function (chunk) { self.write(chunk); });\n    stream.on('end',   function ()      { self.end(); });\n    stream.on('error', function (error) { self.emit('error', error); });\n    return this;\n  }\n}\n"
        },
        {
          "id": null,
          "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/N3StreamWriter.js",
          "name": "./node_modules/n3/src/N3StreamWriter.js",
          "index": 77,
          "index2": 75,
          "size": 1218,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [],
          "issuer": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
          "issuerId": null,
          "issuerName": "./node_modules/n3/src/index.js",
          "issuerPath": [
            {
              "id": 38,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/shex-webapp.js",
              "name": "./shex-webapp.js",
              "profile": {
                "factory": 16,
                "building": 11
              }
            },
            {
              "id": null,
              "identifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "name": "./node_modules/n3/src/index.js",
              "profile": {
                "factory": 14,
                "building": 31,
                "dependencies": 245
              }
            }
          ],
          "profile": {
            "factory": 38,
            "building": 86,
            "dependencies": 294
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./N3StreamWriter",
              "loc": "6:0-44"
            },
            {
              "moduleId": null,
              "moduleIdentifier": "/tmp/checkouts/shexSpec/shex.js/packages/shex-webapp/node_modules/n3/src/index.js",
              "module": "./node_modules/n3/src/index.js",
              "moduleName": "./node_modules/n3/src/index.js",
              "type": "harmony export imported specifier",
              "userRequest": "./N3StreamWriter",
              "loc": "25:0-47:2"
            }
          ],
          "usedExports": [
            "default"
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8' });\n    this._writableState.objectMode = true;\n\n    // Set up writer with a dummy stream object\n    var self = this;\n    var writer = this._writer = new N3Writer({\n      write: function (quad, encoding, callback) { self.push(quad); callback && callback(); },\n      end: function (callback) { self.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = function (quad, encoding, done) { writer.addQuad(quad, done); };\n    this._flush = function (done) { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    var self = this;\n    stream.on('data',   function (quad)  { self.write(quad); });\n    stream.on('end',    function ()      { self.end(); });\n    stream.on('error',  function (error) { self.emit('error', error); });\n    stream.on('prefix', function (prefix, iri) { self._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n"
        }
      ],
      "filteredModules": 0
    }
  ],
  "filteredModules": 0,
  "logging": {
    "webpack.buildChunkGraph.visitModules": {
      "entries": [],
      "filteredEntries": 2,
      "debug": false
    }
  },
  "children": []
}
